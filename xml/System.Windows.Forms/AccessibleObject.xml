<Type Name="AccessibleObject" FullName="System.Windows.Forms.AccessibleObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3a92c9e0f9881d11f1c52bc1f21e7a3d690b4f4e" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65006037" /></Metadata><TypeSignature Language="C#" Value="public class AccessibleObject : System.Runtime.InteropServices.StandardOleMarshalObject, Accessibility.IAccessible, System.Reflection.IReflect" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AccessibleObject extends System.Runtime.InteropServices.StandardOleMarshalObject implements class Accessibility.IAccessible, class System.Reflection.IReflect" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.AccessibleObject" />
  <TypeSignature Language="VB.NET" Value="Public Class AccessibleObject&#xA;Inherits StandardOleMarshalObject&#xA;Implements IAccessible, IReflect" />
  <TypeSignature Language="C++ CLI" Value="public ref class AccessibleObject : System::Runtime::InteropServices::StandardOleMarshalObject, Accessibility::IAccessible, System::Reflection::IReflect" />
  <TypeSignature Language="F#" Value="type AccessibleObject = class&#xA;    inherit StandardOleMarshalObject&#xA;    interface IReflect&#xA;    interface IAccessible" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.InteropServices.StandardOleMarshalObject</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Accessibility.IAccessible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Reflection.IReflect</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет сведения, которые приложения, предоставляющие специальные возможности, используют при настройке пользовательского интерфейса приложения для пользователей с ограниченными возможностями.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Приложениями специальных возможностей могут настраивать функциональные возможности приложения, чтобы упростить работу пользователей с ограниченными возможностями.  
  
 Для пользователей с нарушениями зрения можно настроить компоненты операционной системы и программного обеспечения в соответствии с их потребностями. Например можно увеличить размер текста и изображений и сделать их более контрастными. Кроме того вы можете дальтонизмом с соответствующее использование цветов. Для пользователей, с серьезными нарушениями зрения, доступны компьютеры с поддержкой обзора экрана, на экране преобразования текста в речь, или динамически обновляемый экран шрифта Брайля.  
  
 Для пользователей, слуха можно разработать программы, использующие визуальные подсказки, например мигающую панель инструментов; или можно отобразить голосовые сообщения как текст. Например, в случае включения `SoundSentry` , параметр доступа на панели управления позволяет получить визуальное предупреждение каждый раз, когда система воспроизводит звуковой сигнал.  
  
 Для пользователей с ограниченными возможностями движения можно создать элементы управления, уточнить или исключить использование клавиатуры и мыши, тем самым повышая доступность. Панель управления в этом помочь. Например альтернативой будет использовать клавиатуру вместо мыши для навигации. Другой параметр, называемый `StickyKeys`, позволяет пользователям, которые не может удерживать несколько клавиш одновременно (например, CTRL + P) получить тот же результат, нажимая клавиши одновременно.  
  
 Для пользователей с когнитивными и ограниченными возможностями языка, можно разрабатывать программы можно подобрать для своих потребностей. Например с помощью явных или снабженные виртуализации, упрощенное отображение, меньшее количество слов и удобочитаемости, нацеленных на начальную школу могут воспользоваться этим пользователям.  
  
 Для пользователей с эпилепсией можно разрабатывать программы во избежание перехвата спровоцировать шаблонов.  
  
 Дополнительные сведения о специальных возможностях, включая сведения о приложениями со специальными возможностями см. в документации для специальных возможностей корпорации Майкрософт в библиотеке MSDN или на веб-сайте Майкрософт.  
  
> [!NOTE]
>  Чтобы использовать <xref:System.Windows.Forms.AccessibleObject>, необходимо добавить ссылку на `Accessibility` сборки, установленной с [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Windows Forms поддерживает только Active 2.0 специальных возможностей.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется создание диаграммы с поддержкой специальных возможностей управления, с помощью <xref:System.Windows.Forms.AccessibleObject> и <xref:System.Windows.Forms.Control.ControlAccessibleObject> классов для отображения доступных сведений. Элемент управления отображает две кривые, а также условных обозначений. `ChartControlAccessibleObject` Класс, который является производным от `ControlAccessibleObject`, используется в <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> метод для предоставления пользовательских доступных сведений для элемента управления диаграммы. Так как условные обозначения диаграммы фактически не являются <xref:System.Windows.Forms.Control> -управление на основе, а также отображаются в элементе управления диаграммы не имеет встроенных данных доступны. По этой причине `ChartControlAccessibleObject` класса переопределения <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> метод для возврата `CurveLegendAccessibleObject` , представляющий доступных сведений для каждой части условных обозначений. При специальными приложение использует этот элемент управления, элемент управления можно предоставить необходимые сведения доступны.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#1)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#1)]
 [!code-vb[System.Windows.Forms.AccessibleObject#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>При наследовании от этого класса можно переопределить все члены.</para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessibleObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AccessibleObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.AccessibleObject" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило при использовании этого метода для создания объекта со специальными возможностями, вы предоставляете собственные реализации свойств и методов класса, чтобы обеспечить функциональные возможности для вашего приложения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accChildCount">
      <MemberSignature Language="C#" Value="int Accessibility.IAccessible.accChildCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Accessibility.IAccessible.accChildCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accChildCount As Integer Implements IAccessible.accChildCount" />
      <MemberSignature Language="C++ CLI" Value="property int Accessibility::IAccessible::accChildCount { int get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accChildCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accChildCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает число дочерних интерфейсов, принадлежащих этому объекту. Описание этого члена см. в разделе <see cref="P:Accessibility.IAccessible.accChildCount" />.</summary>
        <value>Число дочерних объектов со специальными возможностями, принадлежащих этому объекту. Если объект имеет ни одного дочернего объекта, это значение равно 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:Accessibility.IAccessible>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accDoDefaultAction">
      <MemberSignature Language="C#" Value="void IAccessible.accDoDefaultAction (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accDoDefaultAction(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accDoDefaultAction (childID As Object) Implements IAccessible.accDoDefaultAction" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accDoDefaultAction(System::Object ^ childID) = Accessibility::IAccessible::accDoDefaultAction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accDoDefaultAction(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Идентификатор дочернего объекта в <see cref="T:Accessibility.IAccessible" /> пары интерфейс/дочерний идентификатор, представляющий объекта специальных возможностей.</param>
        <summary>Выполняет действие по умолчанию указанного объекта. Не все объекты имеют действия по умолчанию. Описание этого члена см. в разделе <see cref="M:Accessibility.IAccessible.accDoDefaultAction(System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:Accessibility.IAccessible>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accFocus">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accFocus As Object Implements IAccessible.accFocus" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility::IAccessible::accFocus { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accFocus" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект, имеющий фокус клавиатуры. Описание этого члена см. в разделе <see cref="P:Accessibility.IAccessible.accFocus" />.</summary>
        <value>Объект, имеющий фокус клавиатуры.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Тип возвращаемого значения <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A> свойство зависит от объекта, имеющий фокус клавиатуры. В следующей таблице описаны объект типы, которые <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A> возвращает.  
  
|Тип|Описание|  
|----------|-----------------|  
|`null`|Этот объект не имеет фокуса и не содержит дочерний элемент, который имеет фокус клавиатуры.|  
|целочисленный|0, если текущий объект имеет фокус клавиатуры; в противном случае — идентификатор дочернего объекта специальных возможностей дочернего с фокусом клавиатуры.|  
|<xref:Accessibility.IAccessible>|Дочерний объект со специальными, имеющий фокус клавиатуры.|  
  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:Accessibility.IAccessible>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accHitTest">
      <MemberSignature Language="C#" Value="object IAccessible.accHitTest (int xLeft, int yTop);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.accHitTest(int32 xLeft, int32 yTop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function accHitTest (xLeft As Integer, yTop As Integer) As Object Implements IAccessible.accHitTest" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.accHitTest(int xLeft, int yTop) = Accessibility::IAccessible::accHitTest;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accHitTest(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xLeft" Type="System.Int32" />
        <Parameter Name="yTop" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="xLeft">Горизонтальная координата.</param>
        <param name="yTop">Вертикальная координата.</param>
        <summary>Получает дочерний объект с указанными экранными координатами. Описание этого члена см. в разделе <see cref="M:Accessibility.IAccessible.accHitTest(System.Int32,System.Int32)" />.</summary>
        <returns>Объекта специальных возможностей в точку, указанную <paramref name="xLeft" /> и <paramref name="yTop" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В следующей таблице описаны объект типы, которые <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accHitTest%2A> метод может возвращать.  
  
|Тип|Описание|  
|----------|-----------------|  
|<xref:Accessibility.IAccessible>|Объект со специальными в указанном направлении.|  
|целочисленный|0, если указанная точка находится текущий объект или за пределами границ объекта; в противном случае — идентификатор дочернего объекта специальных возможностей в указанном направлении.|  
  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:Accessibility.IAccessible>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accLocation">
      <MemberSignature Language="C#" Value="void IAccessible.accLocation (out int pxLeft, out int pyTop, out int pcxWidth, out int pcyHeight, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accLocation([out] int32&amp; pxLeft, [out] int32&amp; pyTop, [out] int32&amp; pcxWidth, [out] int32&amp; pcyHeight, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accLocation (ByRef pxLeft As Integer, ByRef pyTop As Integer, ByRef pcxWidth As Integer, ByRef pcyHeight As Integer, childID As Object) Implements IAccessible.accLocation" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accLocation([Runtime::InteropServices::Out] int % pxLeft, [Runtime::InteropServices::Out] int % pyTop, [Runtime::InteropServices::Out] int % pcxWidth, [Runtime::InteropServices::Out] int % pcyHeight, System::Object ^ childID) = Accessibility::IAccessible::accLocation;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pxLeft" Type="System.Int32" RefType="out" />
        <Parameter Name="pyTop" Type="System.Int32" RefType="out" />
        <Parameter Name="pcxWidth" Type="System.Int32" RefType="out" />
        <Parameter Name="pcyHeight" Type="System.Int32" RefType="out" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pxLeft">При возвращении этот метод содержит координату x левого края объекта. Этот параметр передается неинициализированным.</param>
        <param name="pyTop">При возвращении этот метод содержит координату y верхнего края объекта. Этот параметр передается неинициализированным.</param>
        <param name="pcxWidth">При возвращении данного метода содержит ширину объекта. Этот параметр передается неинициализированным.</param>
        <param name="pcyHeight">При возвращении данного метода содержит высоту объекта. Этот параметр передается неинициализированным.</param>
        <param name="childID">Идентификационный номер объекта со специальными возможностями. Этот параметр равен 0, чтобы получить расположение объекта, или идентификатор дочернего, чтобы получить расположение одного из дочерних объектов данного объекта.</param>
        <summary>Получает текущее расположение объекта на экране. Описание этого члена см. в разделе <see cref="M:Accessibility.IAccessible.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:Accessibility.IAccessible>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accNavigate">
      <MemberSignature Language="C#" Value="object IAccessible.accNavigate (int navDir, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.accNavigate(int32 navDir, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function accNavigate (navDir As Integer, childID As Object) As Object Implements IAccessible.accNavigate" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.accNavigate(int navDir, System::Object ^ childID) = Accessibility::IAccessible::accNavigate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accNavigate(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navDir" Type="System.Int32" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="navDir">Один из <see cref="T:System.Windows.Forms.AccessibleNavigation" /> перечисления, которое указывает направление перехода.</param>
        <param name="childID">Идентификационный номер объекта со специальными возможностями. Этот параметр равен 0 для запуска с объекта, или идентификатор дочернего для запуска из одного из дочерних объектов данного объекта.</param>
        <summary>Переходит к объекту со специальными возможностями по отношению к текущему объекту. Описание этого члена см. в разделе <see cref="M:Accessibility.IAccessible.accNavigate(System.Int32,System.Object)" />.</summary>
        <returns>Объект со специальными на значение, заданное параметром <paramref name="navDir" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В следующей таблице описаны объект типы, которые <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accNavigate%2A> метод может возвращать.  
  
|Тип|Описание|  
|----------|-----------------|  
|`null`|В указанном направлении не объекту со специальными возможностями.|  
|<xref:Accessibility.IAccessible>|Объект со специальными в указанном направлении.|  
|целочисленный|Идентификатор дочернего, который определяет доступный объект, находящийся в указанном направлении. Использовать родительский <xref:Accessibility.IAccessible> и идентификатор дочернего для доступа к доступному объекту.|  
  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:Accessibility.IAccessible>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accParent">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accParent As Object Implements IAccessible.accParent" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility::IAccessible::accParent { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accParent" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accParent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает родительский объект доступного объекта этого объекта. Описание этого члена см. в разделе <see cref="P:Accessibility.IAccessible.accParent" />.</summary>
        <value><see cref="T:Accessibility.IAccessible" /> , Являющийся родительским для объекта специальных возможностей, или <see langword="null" /> Если отсутствует родительский объект.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:Accessibility.IAccessible>. 
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accSelect">
      <MemberSignature Language="C#" Value="void IAccessible.accSelect (int flagsSelect, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.accSelect(int32 flagsSelect, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub accSelect (flagsSelect As Integer, childID As Object) Implements IAccessible.accSelect" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.accSelect(int flagsSelect, System::Object ^ childID) = Accessibility::IAccessible::accSelect;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.accSelect(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flagsSelect" Type="System.Int32" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="flagsSelect">Поразрядное сочетание значений <see cref="T:System.Windows.Forms.AccessibleSelection" />.</param>
        <param name="childID">Идентификационный номер доступного объекта, для которого изменяется выделение. Этот параметр равен 0, чтобы выбрать объект, или идентификатор дочернего для выбора одного из дочерних объектов данного объекта.</param>
        <summary>Изменяет выделение или перемещает фокус ввода объекта со специальными возможностями. Описание этого члена см. в разделе <see cref="M:Accessibility.IAccessible.accSelect(System.Int32,System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Далее показано, какие <xref:System.Windows.Forms.AccessibleSelection> значения следует задать при вызове `Select` для выполнения сложных операций выделения.  
  
|Операция|Комбинация флагов|  
|---------------|----------------------|  
|Для имитации нажатия|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.TakeSelection>|  
|Чтобы выбрать целевой элемент, имитируя CTRL + щелчок|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.AddSelection>|  
|Чтобы отменить выделение целевого элемента, имитируя CTRL + щелчок|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection>|  
|Чтобы имитировать SHIFT + щелчок|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus> OR <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection>|  
|Чтобы выбрать диапазон объектов и поместить фокус на последний объект|Укажите <xref:System.Windows.Forms.AccessibleSelection.TakeFocus> для начального объекта, чтобы задать точку привязки выделения. Повторный вызов Select и указать <xref:System.Windows.Forms.AccessibleSelection.TakeFocus> или <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection> на последний объект.|  
|Чтобы отменить выделение всех объектов|Укажите <xref:System.Windows.Forms.AccessibleSelection.TakeSelection> для любого объекта. Этот флаг отменяет выбор всех выбранных объектов, кроме выбранной. Повторный вызов Select и указать <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection> того же объекта.|  
  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:Accessibility.IAccessible>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.accSelection">
      <MemberSignature Language="C#" Value="object Accessibility.IAccessible.accSelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Accessibility.IAccessible.accSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property accSelection As Object Implements IAccessible.accSelection" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ Accessibility::IAccessible::accSelection { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="Accessibility.IAccessible.accSelection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Accessibility.IAccessible.accSelection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает выбранные дочерние объекты объекта со специальными возможностями. Описание этого члена см. в разделе <see cref="P:Accessibility.IAccessible.accSelection" />.</summary>
        <value>Выбранные дочерние объекты объекта со специальными возможностями.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В следующей таблице описаны объект типы, которые <xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accSelection%2A> возвращает  
  
|Тип|Описание|  
|----------|-----------------|  
|`null`|Дочерние объекты не выбираются.|  
|<xref:Accessibility.IAccessible>|Дочерний объект со специальными, выбран.|  
|целочисленный|Идентификатор дочернего, который определяет, выбранного объекта специальных возможностей. Использовать родительский <xref:Accessibility.IAccessible> и идентификатор дочернего для доступа к доступному объекту.|  
|`IEnumVARIANT`|Список дочерних объектов, которые выбираются.|  
  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:Accessibility.IAccessible>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accChild">
      <MemberSignature Language="C#" Value="object IAccessible.get_accChild (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accChild(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accChild (childID As Object) As Object Implements IAccessible.get_accChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accChild(System::Object ^ childID) = Accessibility::IAccessible::get_accChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Идентификатор извлекаемого дочернего объекта.</param>
        <summary>Извлекает указанный дочерний объект.</summary>
        <returns>Указанный дочерний объект, если он существует, или <see langword="null" />, если не существует.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accDefaultAction">
      <MemberSignature Language="C#" Value="string IAccessible.get_accDefaultAction (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accDefaultAction(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accDefaultAction (childID As Object) As String Implements IAccessible.get_accDefaultAction" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accDefaultAction(System::Object ^ childID) = Accessibility::IAccessible::get_accDefaultAction;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accDefaultAction(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Идентификационный номер доступного объекта, для которого нужно получить действие по умолчанию. Этот параметр равен 0, чтобы выбрать объект, или идентификатор дочернего для выбора одного из дочерних объектов данного объекта.</param>
        <summary>Возвращает строку, которая описывает выполняемое по умолчанию действие заданного объекта.</summary>
        <returns>Строка, которая указывает действие по умолчанию для <paramref name="childID" />, или <see langword="name" />, если для <paramref name="childID" /> не настроено действие по умолчанию.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accDescription">
      <MemberSignature Language="C#" Value="string IAccessible.get_accDescription (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accDescription(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accDescription (childID As Object) As String Implements IAccessible.get_accDescription" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accDescription(System::Object ^ childID) = Accessibility::IAccessible::get_accDescription;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accDescription(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Идентификационный номер доступного объекта, для которого нужно получить описание. Этот параметр равен 0, чтобы выбрать объект, или идентификатор дочернего для выбора одного из дочерних объектов данного объекта.</param>
        <summary>Возвращает строку, которая описывает внешний вид указанного доступного объекта.</summary>
        <returns>Локализованная строка, которая описывает внешний вид указанного доступного объекта.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accHelp">
      <MemberSignature Language="C#" Value="string IAccessible.get_accHelp (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accHelp(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accHelp (childID As Object) As String Implements IAccessible.get_accHelp" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accHelp(System::Object ^ childID) = Accessibility::IAccessible::get_accHelp;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accHelp(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Идентификационный номер доступного объекта, для которого нужно получить информацию. Этот параметр равен 0, чтобы выбрать объект, или идентификатор дочернего для выбора одного из дочерних объектов данного объекта.</param>
        <summary>Получает полный путь файла WinHelp, который связан с указанным доступным объектом.</summary>
        <returns>Полный путь файла WinHelp, который связан с <paramref name="childID" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accHelpTopic">
      <MemberSignature Language="C#" Value="int IAccessible.get_accHelpTopic (out string pszHelpFile, object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 Accessibility.IAccessible.get_accHelpTopic([out] string&amp; pszHelpFile, object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic(System.String@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accHelpTopic (ByRef pszHelpFile As String, childID As Object) As Integer Implements IAccessible.get_accHelpTopic" />
      <MemberSignature Language="C++ CLI" Value=" virtual int Accessibility.IAccessible.get_accHelpTopic([Runtime::InteropServices::Out] System::String ^ % pszHelpFile, System::Object ^ childID) = Accessibility::IAccessible::get_accHelpTopic;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accHelpTopic(System.String@,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pszHelpFile" Type="System.String" RefType="out" />
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pszHelpFile">При возврате метода — полный путь к файлу WinHelp, который связан с указанным объектом.</param>
        <param name="childID">Идентификационный номер доступного объекта, для которого нужно получить раздел справки. Задайте для этого параметра значение 0, чтобы выбрать этот объект, или идентификатор дочернего объекта, чтобы выбрать один из дочерних объектов этого объекта.</param>
        <summary>Извлекает полный путь к файлу WinHelp, который связан с указанным объектом, а также идентификатор определенного раздела в этом файле.</summary>
        <returns>Идентификатор определенного раздела в <paramref name="pszHelpFile" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accKeyboardShortcut">
      <MemberSignature Language="C#" Value="string IAccessible.get_accKeyboardShortcut (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accKeyboardShortcut(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accKeyboardShortcut (childID As Object) As String Implements IAccessible.get_accKeyboardShortcut" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accKeyboardShortcut(System::Object ^ childID) = Accessibility::IAccessible::get_accKeyboardShortcut;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accKeyboardShortcut(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Идентификационный номер доступного объекта, для которого нужно получить сочетание клавиш. Этот параметр равен 0, чтобы выбрать объект, или идентификатор дочернего для выбора одного из дочерних объектов данного объекта.</param>
        <summary>Извлекает сочетание клавиш или клавишу доступа для указанного объекта.</summary>
        <returns>Локализованная строка, которая определяет сочетание клавиш, или значение <see langword="null" />, если с указанным объектом не связано сочетание клавиш.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accName">
      <MemberSignature Language="C#" Value="string IAccessible.get_accName (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accName(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accName (childID As Object) As String Implements IAccessible.get_accName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accName(System::Object ^ childID) = Accessibility::IAccessible::get_accName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accName(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Идентификационный номер доступного объекта, для которого требуется получить имя. Этот параметр равен 0, чтобы выбрать объект, или идентификатор дочернего для выбора одного из дочерних объектов данного объекта.</param>
        <summary>Извлекает имя указанного объекта.</summary>
        <returns>Имя указанного объекта.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accRole">
      <MemberSignature Language="C#" Value="object IAccessible.get_accRole (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accRole(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accRole (childID As Object) As Object Implements IAccessible.get_accRole" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accRole(System::Object ^ childID) = Accessibility::IAccessible::get_accRole;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accRole(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Идентификационный номер доступного объекта, для которого нужно получить информацию о ролях. Этот параметр равен 0, чтобы выбрать объект, или идентификатор дочернего для выбора одного из дочерних объектов данного объекта.</param>
        <summary>Получает информацию, которая описывает роль указанного объекта.</summary>
        <returns>Объект, который предоставляет сведения о роли указанного доступного объекта.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accState">
      <MemberSignature Language="C#" Value="object IAccessible.get_accState (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object Accessibility.IAccessible.get_accState(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accState (childID As Object) As Object Implements IAccessible.get_accState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ Accessibility.IAccessible.get_accState(System::Object ^ childID) = Accessibility::IAccessible::get_accState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Идентификационный номер доступного объекта, для которого нужно получить информацию о состоянии. Этот параметр равен 0, чтобы выбрать объект, или идентификатор дочернего для выбора одного из дочерних объектов данного объекта.</param>
        <summary>Извлекает текущее состояние указанного доступного объекта.</summary>
        <returns>Объект, который описывает текущее состояние указанного доступного объекта.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.get_accValue">
      <MemberSignature Language="C#" Value="string IAccessible.get_accValue (object childID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string Accessibility.IAccessible.get_accValue(object childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function get_accValue (childID As Object) As String Implements IAccessible.get_accValue" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ Accessibility.IAccessible.get_accValue(System::Object ^ childID) = Accessibility::IAccessible::get_accValue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.get_accValue(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="childID">Идентификационный номер доступного объекта, для которого требуется получить значение. Этот параметр равен 0, чтобы выбрать объект, или идентификатор дочернего для выбора одного из дочерних объектов данного объекта.</param>
        <summary>Извлекает значение указанного доступного объекта. Не все объекты имеют значение.</summary>
        <returns>Значение <paramref name="childID" /> или <see langword="null" />, если объект не имеет значение.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.set_accName">
      <MemberSignature Language="C#" Value="void IAccessible.set_accName (object childID, string newName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.set_accName(object childID, string newName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub set_accName (childID As Object, newName As String) Implements IAccessible.set_accName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.set_accName(System::Object ^ childID, System::String ^ newName) = Accessibility::IAccessible::set_accName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.set_accName(System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childID">Идентификационный номер доступного объекта, которому нужно присвоить новое имя. Этот параметр равен 0, чтобы выбрать объект, или идентификатор дочернего для выбора одного из дочерних объектов данного объекта.</param>
        <param name="newName">Новое имя, которое нужно присвоить <paramref name="childID" />.</param>
        <summary>Присваивает новое доступное имя указанному элементу.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessibility.IAccessible.set_accValue">
      <MemberSignature Language="C#" Value="void IAccessible.set_accValue (object childID, string newValue);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Accessibility.IAccessible.set_accValue(object childID, string newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub set_accValue (childID As Object, newValue As String) Implements IAccessible.set_accValue" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Accessibility.IAccessible.set_accValue(System::Object ^ childID, System::String ^ newValue) = Accessibility::IAccessible::set_accValue;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Accessibility.IAccessible.set_accValue(System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childID" Type="System.Object" />
        <Parameter Name="newValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childID">Идентификационный номер доступного объекта, которому нужно присвоить новое значение. Этот параметр равен 0, чтобы выбрать объект, или идентификатор дочернего для выбора одного из дочерних объектов данного объекта.</param>
        <param name="newValue">Новое имя, которое будет присвоено указанному доступному объекту.</param>
        <summary>Присваивает новое значение указанному элементу.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.AccessibleObject.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает расположение и размер доступного объекта.</summary>
        <value>Структура <see cref="T:System.Drawing.Rectangle" />, представляющая границы объекта специальных возможностей.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> Свойство извлекает ограничивающий прямоугольник в экранных координатах. Если объект имеет прямоугольной форму, то это свойство представляет наименьший прямоугольник, полностью охватывает всю область объекта. Таким образом, для создания непрямоугольных объектов, таких как элементы списка, координаты ограничивающего прямоугольника объекта могут отклоняться, тестирование, путем вызова <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> метод, так как <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> определяет границы объекта на основе по пикселю.  
  
   
  
## Examples  
 В следующем примере показано создание диаграммы с поддержкой специальных возможностей управления, с помощью <xref:System.Windows.Forms.AccessibleObject> и <xref:System.Windows.Forms.Control.ControlAccessibleObject> классов для отображения доступных сведений. Элемент управления отображает две кривые, а также условных обозначений. `ChartControlAccessibleObject` Класс, который является производным от `ControlAccessibleObject`, используется в <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> метод для предоставления пользовательских доступных сведений для элемента управления диаграммы. Так как условные обозначения диаграммы фактически не являются <xref:System.Windows.Forms.Control> -управление на основе, а также отображаются в элементе управления диаграммы не имеет встроенных доступных данных. По этой причине `ChartControlAccessibleObject` класса переопределения <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> метод для возврата `CurveLegendAccessibleObject` , представляющий доступных сведений для каждой части условных обозначений. При специальными приложение использует этот элемент управления, элемент управления можно предоставить необходимые сведения доступны.  
  
 Этот фрагмент кода демонстрирует переопределение <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> свойство. См. в разделе <xref:System.Windows.Forms.AccessibleObject> пример полного кода.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Не удалось получить границы элемента управления.</exception>
        <block subset="none" type="overrides"><para>Реализация по умолчанию возвращает объекта специальных возможностей ограничивающего прямоугольника, если объект охватывает элемент управления; в противном случае возвращается <see cref="F:System.Drawing.Rectangle.Empty" />. Все видимые доступные объекты должны поддерживать этот метод. Звуковые объекты не поддерживают этот метод.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="DefaultAction">
      <MemberSignature Language="C#" Value="public virtual string DefaultAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultAction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultAction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultAction { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultAction : string" Usage="System.Windows.Forms.AccessibleObject.DefaultAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает строку, описывающую выполняемое по умолчанию действие объекта. Не все объекты имеют действия по умолчанию.</summary>
        <value>Описание действия по умолчанию для объекта или значение <see langword="null" />, если этот объект не имеет действия по умолчанию.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка описывает действие, выполняемое для объекта, не выполняет в результате. То есть кнопки панели инструментов, печать документа по умолчанию действие «Press», а не «Печать текущего документа». Не путайте действие объекта по умолчанию его значение.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Не удалось получить действие по умолчанию для элемента управления.</exception>
        <block subset="none" type="overrides"><para>Реализация по умолчанию возвращает действие по умолчанию для объекта специальных возможностей, если объект охватывает элемент управления, имеющий действие по умолчанию; в противном случае возвращается <see langword="null" />. Только элементы управления, которые выполняют действия, должны поддерживать этот метод. Не все объекты имеют действия по умолчанию, а некоторые объекты имеют действие по умолчанию, который связан с его <see cref="P:System.Windows.Forms.AccessibleObject.Value" /> свойства, как показано в следующих примерах: Установленный флажок имеет действие по умолчанию «Снять» и значение «Установлен». Снятый флажок имеет действие по умолчанию «Установить» и значение «Снят». Кнопка с надписью «Печать» по умолчанию действие «Нажать» не имеет значения. Управление статическим текстом или элемент управления редактирования, отображающий «Принтер» не действует по умолчанию, но будет иметь значение «Принтер». Объекта <see cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" /> свойство следует глагол или короткие глагольное словосочетание.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Windows.Forms.AccessibleObject.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает строку, описывающую внешний вид указанного объекта. Не все объекты имеют описание.</summary>
        <value>Описание внешнего вида объекта для пользователя или <see langword="null" /> Если объект не имеет описания.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство описывает внешний вид объекта для пользователя.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Не удалось получить описание для элемента управления.</exception>
        <block subset="none" type="overrides"><para>Реализация по умолчанию возвращает доступных описание объекта, если объект охватывает элемент управления; в противном случае возвращается <see langword="null" />. Описание обычно используется для предоставления больший контекст для пользователей с ослабленным зрением или людей с нарушениями зрения. Он также может использоваться для контекстного поиска или других приложений. Серверы должны поддерживать <see cref="P:System.Windows.Forms.AccessibleObject.Description" /> свойство Если описание не является очевидным, или если она является избыточной в зависимости от объекта <see cref="P:System.Windows.Forms.AccessibleObject.Name" />, <see cref="P:System.Windows.Forms.AccessibleObject.Role" />, <see cref="P:System.Windows.Forms.AccessibleObject.State" />, и <see cref="P:System.Windows.Forms.AccessibleObject.Value" /> свойства. Например кнопку «ОК», дополнительные данные не требуются, но от кнопки изображением кактуса. <see cref="P:System.Windows.Forms.AccessibleObject.Name" />, <see cref="P:System.Windows.Forms.AccessibleObject.Role" />И, возможно, <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> свойства для кнопки с кактусом описания его назначения, но <see cref="P:System.Windows.Forms.AccessibleObject.Description" /> свойство передает сведения, которые менее ощутимые, как «Кнопка изображением кактуса».</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="DoDefaultAction">
      <MemberSignature Language="C#" Value="public virtual void DoDefaultAction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoDefaultAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.DoDefaultAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DoDefaultAction ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DoDefaultAction();" />
      <MemberSignature Language="F#" Value="abstract member DoDefaultAction : unit -&gt; unit&#xA;override this.DoDefaultAction : unit -&gt; unit" Usage="accessibleObject.DoDefaultAction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выполняет действие по умолчанию, связанный с объектом со специальными возможностями.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Клиенты могут получать действие объекта по умолчанию, проверяя объекта <xref:System.Windows.Forms.AccessibleObject.DefaultAction%2A> свойство. Клиент может использовать службы автоматизации (если поддерживается) вместо <xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A> для выполнения действия по умолчанию для объекта. Тем не менее <xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A> предоставляет простой способ выполнения объекта наиболее часто используемое действие.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Невозможно выполнить действие по умолчанию для элемента управления.</exception>
        <block subset="none" type="overrides"><para>Действия по умолчанию системные элементы интерфейса зависит от состояния клавиатуры. То есть если клавиша-модификатор, например SHIFT, ALT или CTRL не работает (либо действием пользователя или программным способом) при <see cref="M:System.Windows.Forms.AccessibleObject.DoDefaultAction" /> вызывается по умолчанию действие не может быть таким же, как при этих ключей не вниз. Не все объекты имеют действия по умолчанию.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetChild">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChild (index As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetChild(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetChild : int -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetChild : int -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetChild index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Отсчитываемый от нуля индекс доступного дочернего элемента.</param>
        <summary>Извлекает доступный дочерний элемент, соответствующий указанному индексу.</summary>
        <returns>Класс <see cref="T:System.Windows.Forms.AccessibleObject" />, который представляет доступный дочерний элемент, соответствующий указанному индексу.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показано создание диаграммы с поддержкой специальных возможностей управления, с помощью <xref:System.Windows.Forms.AccessibleObject> и <xref:System.Windows.Forms.Control.ControlAccessibleObject> классов для отображения доступных сведений. Элемент управления отображает две кривые, а также условных обозначений. `ChartControlAccessibleObject` Класс, который является производным от `ControlAccessibleObject`, используется в <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> метод для предоставления пользовательских доступных сведений для элемента управления диаграммы. Так как условные обозначения диаграммы фактически не являются <xref:System.Windows.Forms.Control> -управление на основе, а также отображаются в элементе управления диаграммы не имеет встроенных доступных данных. По этой причине `ChartControlAccessibleObject` класса переопределения <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> метод для возврата `CurveLegendAccessibleObject` , представляющий доступных сведений для каждой части условных обозначений. При специальными приложение использует этот элемент управления, элемент управления можно предоставить необходимые сведения доступны.  
  
 Этот фрагмент кода демонстрирует переопределение <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> метод. См. в разделе <xref:System.Windows.Forms.AccessibleObject> пример полного кода.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Все доступные объекты должны поддерживать это свойство. Если метод не переопределен, он возвращает <see langword="null" />. Переопределите этот метод, когда объекту со специальными возможностями необходимо предоставить пользовательский дочерние объекты. Если индекс является недопустимым, то этот метод должен возвращать <see langword="null" />. При переопределении этого метода необходимо также переопределить <see cref="M:System.Windows.Forms.AccessibleObject.GetChildCount" />.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetChildCount">
      <MemberSignature Language="C#" Value="public virtual int GetChildCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetChildCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetChildCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChildCount () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetChildCount();" />
      <MemberSignature Language="F#" Value="abstract member GetChildCount : unit -&gt; int&#xA;override this.GetChildCount : unit -&gt; int" Usage="accessibleObject.GetChildCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает число дочерних объектов, принадлежащих доступному объекту.</summary>
        <returns>Число дочерних объектов, принадлежащих доступному объекту.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показано создание диаграммы с поддержкой специальных возможностей управления, с помощью <xref:System.Windows.Forms.AccessibleObject> и <xref:System.Windows.Forms.Control.ControlAccessibleObject> классов для отображения доступных сведений. Элемент управления отображает две кривые, а также условных обозначений. `ChartControlAccessibleObject` Класс, который является производным от `ControlAccessibleObject`, используется в <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> метод для предоставления пользовательских доступных сведений для элемента управления диаграммы. Так как условные обозначения диаграммы фактически не являются <xref:System.Windows.Forms.Control> -управление на основе, а также отображаются в элементе управления диаграммы не имеет встроенных доступных данных. По этой причине `ChartControlAccessibleObject` класса переопределения <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> метод для возврата `CurveLegendAccessibleObject` , представляющий доступных сведений для каждой части условных обозначений. При специальными приложение использует этот элемент управления, элемент управления можно предоставить необходимые сведения доступны.  
  
 Этот примере кода показано переопределение <xref:System.Windows.Forms.AccessibleObject.GetChildCount%2A> метод. См. в разделе <xref:System.Windows.Forms.AccessibleObject> пример полного кода.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Все объекты должны поддерживать это свойство. Реализация по умолчанию возвращает значение -1. Переопределите этот метод, когда объекту со специальными возможностями необходимо предоставить пользовательский дочерние объекты. При переопределении этого метода необходимо также переопределить <see cref="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetFocused">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetFocused ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetFocused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetFocused" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFocused () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetFocused();" />
      <MemberSignature Language="F#" Value="abstract member GetFocused : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetFocused : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetFocused " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает объект, имеющий фокус клавиатуры.</summary>
        <returns><see cref="T:System.Windows.Forms.AccessibleObject" /> , Указывающий фокусе дочерних. Этот метод возвращает вызывающий объект, если сам объект имеет фокус. Возвращает <see langword="null" /> Если объект не имеет фокус.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Концепция фокус клавиатуры относится активного окна. Активное окно — окно переднего плана, в которой работает пользователь. Объект с фокусом клавиатуры является активным окном или дочернего объекта активного окна.  
  
 Только один объект или элемент в контейнере может иметь фокус в любой момент времени. Объект с фокусом клавиатуры не обязательно выбранного объекта.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Не удалось получить элемент управления.</exception>
        <block subset="none" type="overrides"><para>Все объекты, которые могут получать фокус клавиатуры должен поддерживать это свойство.</para></block>
        <altmember cref="M:System.Windows.Forms.AccessibleObject.GetChild(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetHelpTopic">
      <MemberSignature Language="C#" Value="public virtual int GetHelpTopic (out string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHelpTopic([out] string&amp; fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetHelpTopic(System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHelpTopic (ByRef fileName As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHelpTopic([Runtime::InteropServices::Out] System::String ^ % fileName);" />
      <MemberSignature Language="F#" Value="abstract member GetHelpTopic :  -&gt; int&#xA;override this.GetHelpTopic :  -&gt; int" Usage="accessibleObject.GetHelpTopic fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="fileName">При возвращении — это свойство содержит путь к файлу справки, связанному с объектом со специальными возможностями.</param>
        <summary>Получает идентификатор для идентификатора раздела справки и путь к файлу справки, связанному с объектом со специальными возможностями.</summary>
        <returns>Идентификатор раздела справки или -1, если раздел справки отсутствует. При возвращении <paramref name="fileName" /> параметр содержит путь к файлу справки, связанному с объектом со специальными возможностями.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы вывести справку для <xref:System.Windows.Forms.AccessibleObject> в системе справки Windows, можно передать файл имя и идентификационный номер раздела в соответствующую <xref:System.Windows.Forms.Help.ShowHelp%2A?displayProperty=nameWithType> метод <xref:System.Windows.Forms.Help>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Не удалось получить раздел справки для элемента управления.</exception>
        <block subset="none" type="overrides"><para>Не все объекты должны поддерживать это свойство.</para></block>
        <altmember cref="T:System.Windows.Forms.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
      </Docs>
    </Member>
    <Member MemberName="GetSelected">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject GetSelected ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetSelected() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.GetSelected" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSelected () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetSelected();" />
      <MemberSignature Language="F#" Value="abstract member GetSelected : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetSelected : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.GetSelected " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает текущий выбранный дочерний элемент.</summary>
        <returns><see cref="T:System.Windows.Forms.AccessibleObject" /> , Представляющий текущего выбранного дочернего. Этот метод возвращает вызывающий объект, если выделен сам объект. Возвращает <see langword="null" /> Если не дочерний элемент не выбран, и сам объект не имеет фокуса.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Не удалось получить выделенный дочерний.</exception>
        <block subset="none" type="overrides"><para>Все объекты, которые могут быть выбраны должен поддерживать это свойство.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="public virtual string Help { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Help" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Help" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Help As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Help { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Help : string" Usage="System.Windows.Forms.AccessibleObject.Help" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает описание выполняет или как его использования.</summary>
        <value>Объект <see cref="T:System.String" /> , содержащий описание выполняет или как его использования. Возвращает <see langword="null" /> Если справка не определена.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Не удалось получить строку справки для элемента управления.</exception>
        <block subset="none" type="overrides"><para>Не все объекты должны поддерживать это свойство. Как правило, это свойство содержит сведения о стиле подсказки, используются для описания того, что выполняет объект, и способы ее использования. Например <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> свойства для кнопки панели инструментов, показывающий, принтер, может быть «Печать текущего документа.» Текст для <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> свойства не быть уникальным в пределах пользовательского интерфейса. Серверы не обязательно должны поддерживать <see cref="P:System.Windows.Forms.AccessibleObject.Help" /> свойство Если другие свойства предоставляют достаточно сведений об объекте цели и какие действия может выполнять объект.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HitTest (x As Integer, y As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ HitTest(int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member HitTest : int * int -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.HitTest : int * int -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.HitTest (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Горизонтальная экранная координата.</param>
        <param name="y">Вертикальная экранная координата.</param>
        <summary>Получает дочерний объект с указанными экранными координатами.</summary>
        <returns>Класс <see cref="T:System.Windows.Forms.AccessibleObject" />, представляющий дочерний объект с указанными экранными координатами. Данный метод возвращает вызывающий объект, если сам объект находится в указанном местоположении. Возвращает значение <see langword="null" />, если в проверяемом местоположении нет объекта.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для создания непрямоугольных объектов, таких как элементы списка, координаты объекта прямоугольника, ограничивающего полученных <xref:System.Windows.Forms.AccessibleObject.Bounds%2A> может завершиться ошибкой, если тестирование с <xref:System.Windows.Forms.AccessibleObject.HitTest%2A>, так как <xref:System.Windows.Forms.AccessibleObject.HitTest%2A> определяет границы объекта на основе по пикселю.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Элемент управления нельзя отбить протестированы.</exception>
        <block subset="none" type="overrides"><para>Все визуальные объекты должны поддерживать этот метод; звуковые объекты не поддерживают его.</para></block>
      </Docs>
    </Member>
    <Member MemberName="KeyboardShortcut">
      <MemberSignature Language="C#" Value="public virtual string KeyboardShortcut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyboardShortcut" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyboardShortcut As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ KeyboardShortcut { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardShortcut : string" Usage="System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает сочетание клавиш или клавиша доступа для объекта специальных возможностей.</summary>
        <value>Сочетание клавиш или клавиша доступа для объекта специальных возможностей, или <see langword="null" /> имеется ли сочетание клавиш, связанное с объектом.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ключ доступа, также известный как мнемонический символ — это подчеркнутый символ в тексте элемента меню, пункт меню, метки кнопки или другого элемента управления. Например, пользователь может отобразить меню, нажав клавишу ALT одновременно с указанной подчеркнутой клавишей, например ALT + F, чтобы открыть `File` меню. Чтобы использовать ключ доступа для пункта меню, меню, содержащее элемент, необходимо активировать. Элементы управления, такие как кнопки панели инструментов и элементы меню часто имеют сочетанием клавиш. Пункт меню может иметь ключ доступа и сочетания клавиш, связанные с ней. Если значение <xref:System.Windows.Forms.AccessibleObject.KeyboardShortcut%2A> свойство — это символ, то это ключ доступа.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Не удалось получить сочетание клавиш для элемента управления.</exception>
        <block subset="none" type="overrides"><para>Все объекты, которые имеют сочетания клавиш или клавиша доступа должен поддерживать это свойство.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.AccessibleObject.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя объекта.</summary>
        <value>Имя объекта или <see langword="null" /> Если свойство не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.AccessibleObject.Name%2A> Свойство содержит строку, используется клиентами для определения, поиска или объявления объекта для пользователя. Чтобы получить доступ к имя дочернего объекта, необходимо сначала вызвать <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> с индекс дочернего элемента, имя которого необходимо извлечь.  
  
   
  
## Examples  
 В следующем примере показано создание диаграммы с поддержкой специальных возможностей управления, с помощью <xref:System.Windows.Forms.AccessibleObject> и <xref:System.Windows.Forms.Control.ControlAccessibleObject> классов для отображения доступных сведений. Элемент управления отображает две кривые, а также условных обозначений. `ChartControlAccessibleObject` Класс, который является производным от `ControlAccessibleObject`, используется в <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> метод для предоставления пользовательских доступных сведений для элемента управления диаграммы. Так как условные обозначения диаграммы фактически не являются <xref:System.Windows.Forms.Control> -управление на основе, а также отображаются в элементе управления диаграммы не имеет встроенных доступных данных. По этой причине `ChartControlAccessibleObject` класса переопределения <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> метод для возврата `CurveLegendAccessibleObject` , представляющий доступных сведений для каждой части условных обозначений. При специальными приложение использует этот элемент управления, элемент управления можно предоставить необходимые сведения доступны.  
  
 Этот фрагмент кода демонстрирует переопределение <xref:System.Windows.Forms.AccessibleObject.Name%2A> свойство. См. в разделе <xref:System.Windows.Forms.AccessibleObject> пример полного кода.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Нельзя получить или задать имя элемента управления.</exception>
        <block subset="none" type="overrides"><para>Все объекты должны поддерживать это свойство. Имя объекта должно быть наглядным, чтобы было понятно значение или цель объекта. Кроме того, убедитесь, что <see langword="Name" /> свойство уникален относительно объектов того же уровня в родительском объекте. Перемещение по таблицам представляется особенно трудно проблемы для некоторых пользователей. Таким образом разработчикам серверов следует делать названия ячеек таблицы как можно более описательным. Например можно создать имя ячейки, объединяя имена строк и столбцов, занимаемых им, например «A1». Тем не менее обычно лучше использовать более описательные имена, такие как «Елена, февраль.» Многие объекты, например значки, меню, флажки, раскрывающиеся списки и другие элементы управления, имеющих метки, отображаются для пользователей. Любую метку, отображаемое пользователям следует использовать для объекта <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> свойство. Дополнительные сведения см. в разделе <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> свойство.  
  
Если вы используете текста кнопки или меню для <see cref="P:System.Windows.Forms.AccessibleObject.Name" /> свойства амперсанды (&amp;), пометить назначенные клавиши.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject Navigate (System.Windows.Forms.AccessibleNavigation navdir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject Navigate(valuetype System.Windows.Forms.AccessibleNavigation navdir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Navigate(System.Windows.Forms.AccessibleNavigation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Navigate (navdir As AccessibleNavigation) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::AccessibleObject ^ Navigate(System::Windows::Forms::AccessibleNavigation navdir);" />
      <MemberSignature Language="F#" Value="abstract member Navigate : System.Windows.Forms.AccessibleNavigation -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.Navigate : System.Windows.Forms.AccessibleNavigation -&gt; System.Windows.Forms.AccessibleObject" Usage="accessibleObject.Navigate navdir" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navdir" Type="System.Windows.Forms.AccessibleNavigation" />
      </Parameters>
      <Docs>
        <param name="navdir">Одно из значений перечисления <see cref="T:System.Windows.Forms.AccessibleNavigation" />.</param>
        <summary>Переходит к другому доступному объекту.</summary>
        <returns>Объект <see cref="T:System.Windows.Forms.AccessibleObject" />, который представляет одно из значений <see cref="T:System.Windows.Forms.AccessibleNavigation" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Навигация и Пространственные, так и логический, всегда ограничен элементы пользовательского интерфейса в контейнере. С пространственная Навигация клиентов можно перейти только общего родителя с начальным объектом. В зависимости от флага перехода, использовании логического перехода клиенты могут перейти либо к дочернему или общего родителя с начальным объектом. Этот метод не изменяет выделение или фокус. Для изменения фокуса или выберите объект, используйте <xref:System.Windows.Forms.AccessibleObject.Select%2A>. <xref:System.Windows.Forms.AccessibleObject.Navigate%2A> Метод извлекает только элементы пользовательского интерфейса, которые имеют определенное расположение на экране.  
  
   
  
## Examples  
 В следующем примере показано создание диаграммы с поддержкой специальных возможностей управления, с помощью <xref:System.Windows.Forms.AccessibleObject> и <xref:System.Windows.Forms.Control.ControlAccessibleObject> классов для отображения доступных сведений. Элемент управления отображает две кривые, а также условных обозначений. `ChartControlAccessibleObject` Класс, который является производным от `ControlAccessibleObject`, используется в <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> метод для предоставления пользовательских доступных сведений для элемента управления диаграммы. Так как условные обозначения диаграммы фактически не являются <xref:System.Windows.Forms.Control> -управление на основе, а также отображаются в элементе управления диаграммы не имеет встроенных доступных данных. По этой причине `ChartControlAccessibleObject` класса переопределения <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> метод для возврата `CurveLegendAccessibleObject` , представляющий доступных сведений для каждой части условных обозначений. При специальными приложение использует этот элемент управления, элемент управления можно предоставить необходимые сведения доступны.  
  
 Этот примере кода показано переопределение <xref:System.Windows.Forms.AccessibleObject.Navigate%2A> метод. См. в разделе <xref:System.Windows.Forms.AccessibleObject> пример полного кода.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Произошел сбой попытки навигации.</exception>
        <block subset="none" type="overrides"><para>Все визуальные объекты должны поддерживать этот метод. Если объект имеет состояние <see cref="F:System.Windows.Forms.AccessibleStates.Invisible" />, может произойти сбой навигации, чтобы это скрытый объект. Некоторые элементы интерфейса, определенный системой, такие как меню, пункты меню и контекстные меню позволяют переходить к объектам, которые не видны. Однако другие системные элементы интерфейса не поддерживают такую возможность. Если возможно серверы должны поддерживать переход к объектам, которые не видны, но эта поддержка не является обязательным и клиенты не стоит ожидать его.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parent As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleObject ^ Parent { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.AccessibleObject" Usage="System.Windows.Forms.AccessibleObject.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает родительский объект доступного объекта.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.AccessibleObject" />, который представляет родительский элемент доступного объекта или <see langword="null" />, если родительский объект отсутствует.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показано создание диаграммы с поддержкой специальных возможностей управления, с помощью <xref:System.Windows.Forms.AccessibleObject> и <xref:System.Windows.Forms.Control.ControlAccessibleObject> классов для отображения доступных сведений. Элемент управления отображает две кривые, а также условных обозначений. `ChartControlAccessibleObject` Класс, который является производным от `ControlAccessibleObject`, используется в <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> метод для предоставления пользовательских доступных сведений для элемента управления диаграммы. Так как условные обозначения диаграммы фактически не являются <xref:System.Windows.Forms.Control> -управление на основе, а также отображаются в элементе управления диаграммы не имеет встроенных доступных данных. По этой причине `ChartControlAccessibleObject` класса переопределения <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> метод для возврата `CurveLegendAccessibleObject` , представляющий доступных сведений для каждой части условных обозначений. При специальными приложение использует этот элемент управления, элемент управления можно предоставить необходимые сведения доступны.  
  
 Этот фрагмент кода демонстрирует переопределение <xref:System.Windows.Forms.AccessibleObject.Parent%2A> свойство. См. в разделе <xref:System.Windows.Forms.AccessibleObject> пример полного кода.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Все объекты должны поддерживать это свойство.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="RaiseAutomationNotification">
      <MemberSignature Language="C#" Value="public bool RaiseAutomationNotification (System.Windows.Forms.Automation.AutomationNotificationKind notificationKind, System.Windows.Forms.Automation.AutomationNotificationProcessing notificationProcessing, string notificationText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RaiseAutomationNotification(valuetype System.Windows.Forms.Automation.AutomationNotificationKind notificationKind, valuetype System.Windows.Forms.Automation.AutomationNotificationProcessing notificationProcessing, string notificationText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.RaiseAutomationNotification(System.Windows.Forms.Automation.AutomationNotificationKind,System.Windows.Forms.Automation.AutomationNotificationProcessing,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RaiseAutomationNotification (notificationKind As AutomationNotificationKind, notificationProcessing As AutomationNotificationProcessing, notificationText As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RaiseAutomationNotification(System::Windows::Forms::Automation::AutomationNotificationKind notificationKind, System::Windows::Forms::Automation::AutomationNotificationProcessing notificationProcessing, System::String ^ notificationText);" />
      <MemberSignature Language="F#" Value="member this.RaiseAutomationNotification : System.Windows.Forms.Automation.AutomationNotificationKind * System.Windows.Forms.Automation.AutomationNotificationProcessing * string -&gt; bool" Usage="accessibleObject.RaiseAutomationNotification (notificationKind, notificationProcessing, notificationText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notificationKind" Type="System.Windows.Forms.Automation.AutomationNotificationKind" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.8" />
        <Parameter Name="notificationProcessing" Type="System.Windows.Forms.Automation.AutomationNotificationProcessing" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.8" />
        <Parameter Name="notificationText" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="notificationKind">Тип уведомления.</param>
        <param name="notificationProcessing">Указывает способ обработки уведомлений.</param>
        <param name="notificationText">Текст уведомления.</param>
        <summary>Вызывает событие уведомления автоматизации пользовательского интерфейса.</summary>
        <returns>Значение <see langword="true" />, если операция прошла успешно; значение <see langword="false" />, если базовая инфраструктура Windows недоступна или произошел сбой операции. Для получения подробных сведений вызовите <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

Это событие доступна, начиная с Windows 10 версии 1709.
  
       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseLiveRegionChanged">
      <MemberSignature Language="C#" Value="public virtual bool RaiseLiveRegionChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RaiseLiveRegionChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.RaiseLiveRegionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RaiseLiveRegionChanged () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool RaiseLiveRegionChanged();" />
      <MemberSignature Language="F#" Value="abstract member RaiseLiveRegionChanged : unit -&gt; bool&#xA;override this.RaiseLiveRegionChanged : unit -&gt; bool" Usage="accessibleObject.RaiseLiveRegionChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Вызывает событие автоматизации пользовательского интерфейса LiveRegionChanged.</summary>
        <returns>Значение <see langword="true" />, если операция прошла успешно; в противном случае — значение <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

Этот метод должен переопределяться в производных классах, поддерживающих функцию динамической области автоматизации пользовательского интерфейса.
  
     ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Динамические области объекта специальных возможностей, не поддерживаются.</exception>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleRole Role { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleRole Role" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Role" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Role As AccessibleRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleRole Role { System::Windows::Forms::AccessibleRole get(); };" />
      <MemberSignature Language="F#" Value="member this.Role : System.Windows.Forms.AccessibleRole" Usage="System.Windows.Forms.AccessibleObject.Role" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleRole</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает роль данного доступного объекта.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Windows.Forms.AccessibleRole" /> или член <see cref="F:System.Windows.Forms.AccessibleRole.None" />, если роль не была указана.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Роль объекта помогает описать функцию объекта.  
  
   
  
## Examples  
 В следующем примере показано создание диаграммы с поддержкой специальных возможностей управления, с помощью <xref:System.Windows.Forms.AccessibleObject> и <xref:System.Windows.Forms.Control.ControlAccessibleObject> классов для отображения доступных сведений. Элемент управления отображает две кривые, а также условных обозначений. `ChartControlAccessibleObject` Класс, который является производным от `ControlAccessibleObject`, используется в <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> метод для предоставления пользовательских доступных сведений для элемента управления диаграммы. Так как условные обозначения диаграммы фактически не являются <xref:System.Windows.Forms.Control> -управление на основе, а также отображаются в элементе управления диаграммы не имеет встроенных доступных данных. По этой причине `ChartControlAccessibleObject` класса переопределения <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> метод для возврата `CurveLegendAccessibleObject` , представляющий доступных сведений для каждой части условных обозначений. При специальными приложение использует этот элемент управления, элемент управления можно предоставить необходимые сведения доступны.  
  
 Этот фрагмент кода демонстрирует переопределение <xref:System.Windows.Forms.AccessibleObject.Role%2A> свойство. См. в разделе <xref:System.Windows.Forms.AccessibleObject> пример полного кода.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Все объекты должны поддерживать это свойство.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="RuntimeIDFirstItem">
      <MemberSignature Language="C#" Value="protected const int RuntimeIDFirstItem = 42;" />
      <MemberSignature Language="ILAsm" Value=".field family static literal int32 RuntimeIDFirstItem = (42)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.AccessibleObject.RuntimeIDFirstItem" />
      <MemberSignature Language="VB.NET" Value="Protected Const RuntimeIDFirstItem As Integer  = 42" />
      <MemberSignature Language="C++ CLI" Value="protected: int RuntimeIDFirstItem = 42;" />
      <MemberSignature Language="F#" Value="val mutable RuntimeIDFirstItem : int" Usage="System.Windows.Forms.AccessibleObject.RuntimeIDFirstItem" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>42</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual void Select (System.Windows.Forms.AccessibleSelection flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select(valuetype System.Windows.Forms.AccessibleSelection flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.Select(System.Windows.Forms.AccessibleSelection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select (flags As AccessibleSelection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select(System::Windows::Forms::AccessibleSelection flags);" />
      <MemberSignature Language="F#" Value="abstract member Select : System.Windows.Forms.AccessibleSelection -&gt; unit&#xA;override this.Select : System.Windows.Forms.AccessibleSelection -&gt; unit" Usage="accessibleObject.Select flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Windows.Forms.AccessibleSelection" />
      </Parameters>
      <Docs>
        <param name="flags">Одно из значений перечисления <see cref="T:System.Windows.Forms.AccessibleSelection" />.</param>
        <summary>Изменяет выделение или перемещает фокус ввода объекта со специальными возможностями.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Приложения могут использовать этот метод для выполнения сложных операций выделения.  
  
 Далее показано, какие <xref:System.Windows.Forms.AccessibleSelection> значения следует задать при вызове <xref:System.Windows.Forms.AccessibleObject.Select%2A> для выполнения сложных операций выделения.  
  
|Операция|Комбинация флагов|  
|---------------|----------------------|  
|Для имитации нажатия|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.TakeSelection?displayProperty=nameWithType> **Примечание.**  Это сочетание не выберет необходимый элемент управления, при вызове из в вашем приложении. Он будет иметь нужный эффект, тем не менее, если вызывается из внешнего приложения.|  
|Чтобы выбрать целевой элемент, имитируя CTRL + щелчок|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.AddSelection?displayProperty=nameWithType>|  
|Чтобы отменить выделение целевого элемента, имитируя CTRL + щелчок|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection?displayProperty=nameWithType>|  
|Чтобы имитировать SHIFT + щелчок|<xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection?displayProperty=nameWithType>|  
|Чтобы выбрать диапазон объектов и поместить фокус на последний объект|Укажите <xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> для начального объекта, чтобы задать точку привязки выделения. Затем вызовите <xref:System.Windows.Forms.AccessibleObject.Select%2A> еще раз и укажите <xref:System.Windows.Forms.AccessibleSelection.TakeFocus?displayProperty=nameWithType> `OR` <xref:System.Windows.Forms.AccessibleSelection.ExtendSelection?displayProperty=nameWithType> на последний объект.|  
|Чтобы отменить выделение всех объектов|Укажите <xref:System.Windows.Forms.AccessibleSelection.TakeSelection?displayProperty=nameWithType> для любого объекта. Этот флаг отменяет выбор всех выбранных объектов, кроме выбранной. Затем вызовите <xref:System.Windows.Forms.AccessibleObject.Select%2A> еще раз и укажите <xref:System.Windows.Forms.AccessibleSelection.RemoveSelection?displayProperty=nameWithType> того же объекта.|  
  
   
  
## Examples  
 В следующем примере показано создание диаграммы с поддержкой специальных возможностей управления, с помощью <xref:System.Windows.Forms.AccessibleObject> и <xref:System.Windows.Forms.Control.ControlAccessibleObject> классов для отображения доступных сведений. Элемент управления отображает две кривые, а также условных обозначений. `ChartControlAccessibleObject` Класс, который является производным от `ControlAccessibleObject`, используется в <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> метод для предоставления пользовательских доступных сведений для элемента управления диаграммы. Так как условные обозначения диаграммы фактически не являются <xref:System.Windows.Forms.Control> -управление на основе, а также отображаются в элементе управления диаграммы не имеет встроенных доступных данных. По этой причине `ChartControlAccessibleObject` класса переопределения <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> метод для возврата `CurveLegendAccessibleObject` , представляющий доступных сведений для каждой части условных обозначений. При специальными приложение использует этот элемент управления, элемент управления можно предоставить необходимые сведения доступны.  
  
 Этот примере кода показано переопределение <xref:System.Windows.Forms.AccessibleObject.Select%2A> метод. См. в разделе <xref:System.Windows.Forms.AccessibleObject> пример полного кода.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#6)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#6)]
 [!code-vb[System.Windows.Forms.AccessibleObject#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Не удалось выполнить выделение.</exception>
        <block subset="none" type="overrides"><para>Все объекты, которые могут быть выбраны или получать фокус клавиатуры должен поддерживать этот метод.</para></block>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleStates State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleStates State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.State" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property State As AccessibleStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleStates State { System::Windows::Forms::AccessibleStates get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.AccessibleStates" Usage="System.Windows.Forms.AccessibleObject.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает состояние данного доступного объекта.</summary>
        <value>Один из <see cref="T:System.Windows.Forms.AccessibleStates" /> значения, или <see cref="F:System.Windows.Forms.AccessibleStates.None" />, если не задано ни одно состояние.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показано создание диаграммы с поддержкой специальных возможностей управления, с помощью <xref:System.Windows.Forms.AccessibleObject> и <xref:System.Windows.Forms.Control.ControlAccessibleObject> классов для отображения доступных сведений. Элемент управления отображает две кривые, а также условных обозначений. `ChartControlAccessibleObject` Класс, который является производным от `ControlAccessibleObject`, используется в <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> метод для предоставления пользовательских доступных сведений для элемента управления диаграммы. Так как условные обозначения диаграммы фактически не являются <xref:System.Windows.Forms.Control> -управление на основе, а также отображаются в элементе управления диаграммы не имеет встроенных доступных данных. По этой причине `ChartControlAccessibleObject` класса переопределения <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> метод для возврата `CurveLegendAccessibleObject` , представляющий доступных сведений для каждой части условных обозначений. При специальными приложение использует этот элемент управления, элемент управления можно предоставить необходимые сведения доступны.  
  
 Этот фрагмент кода демонстрирует переопределение <xref:System.Windows.Forms.AccessibleObject.State%2A> свойство. См. в разделе <xref:System.Windows.Forms.AccessibleObject> пример полного кода.  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#4)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#4)]
 [!code-vb[System.Windows.Forms.AccessibleObject#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Все объекты должны поддерживать это свойство.</para></block>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Value" />
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetField">
      <MemberSignature Language="C#" Value="System.Reflection.FieldInfo IReflect.GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.FieldInfo System.Reflection.IReflect.GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo Implements IReflect.GetField" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::FieldInfo ^ System.Reflection.IReflect.GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetField;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Имя искомого поля.</param>
        <param name="bindingAttr">Атрибуты привязки, используемые для управления поиском.</param>
        <summary>Получает <see cref="T:System.Reflection.FieldInfo" /> объект, соответствующий заданному полю и флагу привязки. Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)" />.</summary>
        <returns>Объект <see cref="T:System.Reflection.FieldInfo" /> объект, содержащий данные поля для именованного объекта, который удовлетворяет ограничениям поиска, задаваемым параметром <paramref name="bindingAttr" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">В объекте реализовано несколько полей с тем же именем.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetFields">
      <MemberSignature Language="C#" Value="System.Reflection.FieldInfo[] IReflect.GetFields (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.FieldInfo[] System.Reflection.IReflect.GetFields(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetFields (bindingAttr As BindingFlags) As FieldInfo() Implements IReflect.GetFields" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ System.Reflection.IReflect.GetFields(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetFields;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">Атрибуты привязки, используемые для управления поиском.</param>
        <summary>Получает или задает массив <see cref="T:System.Reflection.FieldInfo" /> объектов, соответствующих всем полям текущего класса. Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)" />.</summary>
        <returns>Массив <see cref="T:System.Reflection.FieldInfo" /> объектов, содержащий все данные полей этого объекта отражения, который удовлетворяет ограничениям поиска, задаваемым параметром <paramref name="bindingAttr" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Каждое поле должно иметь уникальное имя. <xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> Флаг указывает, что закрытые поля включаются в поиск. <xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType> Флаг указывает, что открытые поля включаются в поиск.  
  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMember">
      <MemberSignature Language="C#" Value="System.Reflection.MemberInfo[] IReflect.GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MemberInfo[] System.Reflection.IReflect.GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo() Implements IReflect.GetMember" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ System.Reflection.IReflect.GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMember;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Имя члена, который требуется найти.</param>
        <param name="bindingAttr">Атрибуты привязки, используемые для управления поиском.</param>
        <summary>Получает или задает массив <see cref="T:System.Reflection.MemberInfo" /> объектов, соответствующих всем открытым членам или всем членам, которые сопоставлены заданному имени. Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)" />.</summary>
        <returns>Массив <see cref="T:System.Reflection.MemberInfo" /> объектов, соответствующих имени параметра.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMembers">
      <MemberSignature Language="C#" Value="System.Reflection.MemberInfo[] IReflect.GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MemberInfo[] System.Reflection.IReflect.GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMembers (bindingAttr As BindingFlags) As MemberInfo() Implements IReflect.GetMembers" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ System.Reflection.IReflect.GetMembers(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMembers;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">Атрибуты привязки, используемые для управления поиском.</param>
        <summary>Получает или задает массив <see cref="T:System.Reflection.MemberInfo" /> объектов, соответствующих всем открытым членам или всем членам текущего класса. Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)" />.</summary>
        <returns>Массив <see cref="T:System.Reflection.MemberInfo" /> объектов, содержащий все данные элементов для этого объекта отражения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethod">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo System.Reflection.IReflect.GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMethod (name As String, bindingAttr As BindingFlags) As MethodInfo Implements IReflect.GetMethod" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::MethodInfo ^ System.Reflection.IReflect.GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMethod;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Имя члена, который требуется найти.</param>
        <param name="bindingAttr">Атрибуты привязки, используемые для управления поиском.</param>
        <summary>Получает <see cref="T:System.Reflection.MethodInfo" /> объект, соответствующий заданному методу при заданных ограничениях поиска. Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)" />.</summary>
        <returns>Объект <see cref="T:System.Reflection.MethodInfo" /> объект, содержащий сведения о методе, отвечающих критериям, основанного на метод и имя ограничения, указанные в <paramref name="bindingAttr" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">В объекте реализовано несколько методов с тем же именем.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethod">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo System.Reflection.IReflect.GetMethod(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::MethodInfo ^ System.Reflection.IReflect.GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers) = System::Reflection::IReflect::GetMethod;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">Имя члена, который требуется найти.</param>
        <param name="bindingAttr">Атрибуты привязки, используемые для управления поиском.</param>
        <param name="binder">Объект, реализующий <see cref="T:System.Reflection.Binder" />, содержащий свойства, связанные с этим методом.</param>
        <param name="types">Массив, используемый для выбора среди перегруженных версий метода.</param>
        <param name="modifiers">Массив модификаторов параметров, используемый для работы привязки с подписями параметров, в которых были изменены типы.</param>
        <summary>Получает <see cref="T:System.Reflection.MethodInfo" /> объект, соответствующий заданному методу, массив типа используется для выбора среди перегруженных версий метода. Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])" />.</summary>
        <returns>Запрошенный метод, который соответствует всем заданным параметрам.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращаемое значение является совпадение в зависимости от имени метода, <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> перечисления, тип преобразования типов, заданные `binder` , перегрузки и <xref:System.Reflection.ParameterInfo?displayProperty=nameWithType> , описывающий сигнатуру метода.  
  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">В объекте реализовано несколько методов с тем же именем.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetMethods">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo[] IReflect.GetMethods (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo[] System.Reflection.IReflect.GetMethods(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetMethods (bindingAttr As BindingFlags) As MethodInfo() Implements IReflect.GetMethods" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ System.Reflection.IReflect.GetMethods(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetMethods;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">Атрибуты привязки, используемые для управления поиском.</param>
        <summary>Получает или задает массив <see cref="T:System.Reflection.MethodInfo" /> объектов со всеми открытыми методами или всеми методами текущего класса. Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)" />.</summary>
        <returns>Массив <see cref="T:System.Reflection.MethodInfo" /> объектов, содержащий все методы, определенные для этого объекта отражения, которые соответствуют ограничениям поиска, задаваемым в <see langword="bindingAttr" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperties">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo[] IReflect.GetProperties (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo[] System.Reflection.IReflect.GetProperties(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetProperties (bindingAttr As BindingFlags) As PropertyInfo() Implements IReflect.GetProperties" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ System.Reflection.IReflect.GetProperties(System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetProperties;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">Атрибут привязки, используемый для управления поиском.</param>
        <summary>Получает или задает массив <see cref="T:System.Reflection.PropertyInfo" /> объектов, соответствующих всем открытым свойствам или всем свойствам текущего класса. Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)" />.</summary>
        <returns>Массив <see cref="T:System.Reflection.PropertyInfo" /> объектов для всех свойств, определенных в объекте отражения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperty">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo System.Reflection.IReflect.GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Function GetProperty (name As String, bindingAttr As BindingFlags) As PropertyInfo Implements IReflect.GetProperty" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::PropertyInfo ^ System.Reflection.IReflect.GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr) = System::Reflection::IReflect::GetProperty;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Имя искомого свойства.</param>
        <param name="bindingAttr">Атрибуты привязки, используемые для управления поиском.</param>
        <summary>Получает <see cref="T:System.Reflection.PropertyInfo" /> объект, соответствующий заданному свойству при заданных ограничениях поиска. Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)" />.</summary>
        <returns>Объект <see cref="T:System.Reflection.PropertyInfo" /> объект для найденного свойства, которое удовлетворяет ограничениям поиска, задаваемым параметром <paramref name="bindingAttr" />, или <see langword="null" /> Если свойство не было найдено.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException">В объекте реализовано несколько методов с тем же именем.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.GetProperty">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo System.Reflection.IReflect.GetProperty(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, class System.Type returnType, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::PropertyInfo ^ System.Reflection.IReflect.GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, Type ^ returnType, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers) = System::Reflection::IReflect::GetProperty;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name">Имя члена, который требуется найти.</param>
        <param name="bindingAttr">Атрибуты привязки, используемые для управления поиском.</param>
        <param name="binder">Объект, который реализует класс Binder, содержащий свойства, связанные с этим методом.</param>
        <param name="returnType">Массив, используемый для выбора среди перегруженных версий метода.</param>
        <param name="types">Массив модификаторов параметров, используемый для работы привязки с подписями параметров, в которых были изменены типы.</param>
        <param name="modifiers">Массив, используемый для выбора модификаторов параметров.</param>
        <summary>Получает <see cref="T:System.Reflection.PropertyInfo" /> объект, соответствующий заданному свойству при заданных ограничениях поиска. Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])" />.</summary>
        <returns>Объект <see cref="T:System.Reflection.PropertyInfo" /> объекта для найденного свойства, если свойство с заданным именем было найдено в данном объекте отражения, или <see langword="null" /> Если свойство не было найдено.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.InvokeMember">
      <MemberSignature Language="C#" Value="object IReflect.InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Reflection.IReflect.InvokeMember(string name, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object target, object[] args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] namedParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Reflection.IReflect.InvokeMember(System::String ^ name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Object ^ target, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ namedParameters) = System::Reflection::IReflect::InvokeMember;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="namedParameters" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name">Имя члена, который требуется найти.</param>
        <param name="invokeAttr">Один из <see cref="T:System.Reflection.BindingFlags" /> атрибутов вызова.</param>
        <param name="binder">Один из <see cref="T:System.Reflection.BindingFlags" /> битовые флаги. Реализует класс Binder, содержащий свойства, связанные с этим методом.</param>
        <param name="target">Объект, для которого следует вызвать указанный член. Этот параметр учитывается для статических элементов.</param>
        <param name="args">Массив объектов, содержащий число, порядок и тип параметров вызываемого элемента. Это пустой массив, если параметров нет.</param>
        <param name="modifiers">Массив объектов <see cref="T:System.Reflection.ParameterModifier" />.</param>
        <param name="culture">Экземпляр объекта <see cref="T:System.Globalization.CultureInfo" />, используемого для управления приведением типов.</param>
        <param name="namedParameters">Строковый массив параметров.</param>
        <summary>Вызывает заданный элемент. Описание этого члена см. в разделе <see cref="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</summary>
        <returns>Заданный член.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `invokeAttr` Параметр может быть конструктор, метод, свойство или поле. Необходимо указать подходящий атрибут вызова. Вызван член по умолчанию класса, передав пустую строку ("») как имя члена.  
  
 `modifiers` Параметр такой же длины, `args` параметра, предоставляющий атрибуты аргументов вызываемого члена в метаданных. Параметр может иметь следующие атрибуты: pdIn, pdOut, pdRetval, pdOptional и pdHasDefault. Эти значения представляют [In], [Out], [retval], [optional] и параметр по умолчанию, соответственно.  
  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="invokeAttr" /> является <see cref="F:System.Reflection.BindingFlags.CreateInstance" /> также указывается другой битовый флаг.

- или - <paramref name="invokeAttr" /> не имеет значение <see cref="F:System.Reflection.BindingFlags.CreateInstance" />, а имя равно <see langword="null" />.

-или-

<paramref name="invokeAttr" /> не является атрибутом вызова из <see cref="T:System.Reflection.BindingFlags" />.

-или-

<paramref name="invokeAttr" /> Указывает, одновременно get и set для свойства или поля.

-или-

<paramref name="invokeAttr" /> указывает как набор полей, так и метод Invoke.<paramref name="args" /> предоставляется для операции получения (Get) поля.

-или-

Для операции set поля задано более одного аргумента.</exception>
        <exception cref="T:System.MissingFieldException">Невозможно найти поле или свойство.</exception>
        <exception cref="T:System.MissingMethodException">Не удалось найти метод.</exception>
        <exception cref="T:System.Security.SecurityException">Закрытый элемент вызван без необходимого <see cref="T:System.Security.Permissions.ReflectionPermission" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.IReflect.UnderlyingSystemType">
      <MemberSignature Language="C#" Value="Type System.Reflection.IReflect.UnderlyingSystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property UnderlyingSystemType As Type Implements IReflect.UnderlyingSystemType" />
      <MemberSignature Language="C++ CLI" Value="property Type ^ System::Reflection::IReflect::UnderlyingSystemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Reflection.IReflect.UnderlyingSystemType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Reflection.IReflect.UnderlyingSystemType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает базовый тип, представляющий <see cref="T:System.Reflection.IReflect" /> объекта. Описание этого члена см. в разделе <see cref="P:System.Reflection.IReflect.UnderlyingSystemType" />.</summary>
        <value>Базовый тип, представляющий <see cref="T:System.Reflection.IReflect" /> объекта.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.AccessibleObject> приведен к типу интерфейса <xref:System.Reflection.IReflect>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UseStdAccessibleObjects">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Связывает объект с экземпляром <see cref="T:System.Windows.Forms.AccessibleObject" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UseStdAccessibleObjects">
      <MemberSignature Language="C#" Value="protected void UseStdAccessibleObjects (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UseStdAccessibleObjects(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UseStdAccessibleObjects (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UseStdAccessibleObjects(IntPtr handle);" />
      <MemberSignature Language="F#" Value="member this.UseStdAccessibleObjects : nativeint -&gt; unit" Usage="accessibleObject.UseStdAccessibleObjects handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><see cref="T:System.IntPtr" /> , Содержащее дескриптор объекта.</param>
        <summary>Связывает объект с экземпляром <see cref="T:System.Windows.Forms.AccessibleObject" /> на основании дескриптора объекта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Серверные приложения можно вызвать эту функцию, если они содержат пользовательского объекта пользовательского интерфейса, аналогичную системных объектов. Вызов сервера приложений `CreateStdAccessibleObject` и переопределить <xref:Accessibility.IAccessible> методы и свойства, как требуется в соответствии с их пользовательского объекта. Такой подход помогает существенно server разработчики работы по реализации все полностью <xref:Accessibility.IAccessible> свойства и методы. Эта функция аналогична `CreateStdAccessibleProxy`, за исключением того, что `CreateStdAccessibleProxy` позволяет указать имя класса в качестве параметра, тогда как `CreateStdAccessibleObject` использует имя класса, связанного с `hwnd`.  
  
 Вызов этой версии `UseStdAccessible` является таким же, как вызывать версию два параметра с objid КЛИЕНТА.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStdAccessibleObjects">
      <MemberSignature Language="C#" Value="protected void UseStdAccessibleObjects (IntPtr handle, int objid);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UseStdAccessibleObjects(native int handle, int32 objid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UseStdAccessibleObjects (handle As IntPtr, objid As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UseStdAccessibleObjects(IntPtr handle, int objid);" />
      <MemberSignature Language="F#" Value="member this.UseStdAccessibleObjects : nativeint * int -&gt; unit" Usage="accessibleObject.UseStdAccessibleObjects (handle, objid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="objid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="handle"><see cref="T:System.IntPtr" /> , Содержащее дескриптор объекта.</param>
        <param name="objid">Int, определяющее тип объекта, <paramref name="handle" /> параметр ссылается на.</param>
        <summary>Связывает объект с экземпляром <see cref="T:System.Windows.Forms.AccessibleObject" /> основании дескриптора и идентификатора объекта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Создает объект со специальными возможностями с методы и свойства для указанного типа элемента интерфейса пользователя, предоставляемых системой.  
  
 Серверные приложения можно вызвать эту функцию, если они содержат пользовательского объекта пользовательского интерфейса, аналогичную системных объектов. Вызов сервера приложений `CreateStdAccessibleObject` и переопределить <xref:Accessibility.IAccessible> методы и свойства, как требуется в соответствии с их пользовательского объекта. Такой подход помогает существенно server разработчики работы по реализации все полностью <xref:Accessibility.IAccessible> свойства и методы.  
  
 Допустимые `objid` значения.  
  
|Object|Значение|Описание|  
|------------|-----------|-----------------|  
|ПРЕДУПРЕЖДЕНИЯ|0xFFFFFFF6|Ссылается на сообщение, связанное с окном или приложения.|  
|КУРСОР|0xFFFFFFF8|Ссылается на поместите курсор в окне.|  
|КЛИЕНТ|0xFFFFFFFC|Относится к клиентской области окна. В большинстве случаев операционная система управляет элементами рамки, а клиентский объект содержит все элементы, которыми управляет приложение.|  
|КУРСОР|0xFFFFFFF7|Ссылается на указатель мыши. В системе имеется только один указатель мыши, и он не является дочерним окном.|  
|HSCROLL|0xFFFFFFFA|Ссылается на окно горизонтальную полосу прокрутки.|  
|MENU|0xFFFFFFFD|Ссылается на панели меню окна.|  
|SIZEGRIP|0xFFFFFFF9|Ссылается на окно захвата для изменения размера, дополнительный компонент рамки расположенный в правом нижнем углу окна области.|  
|ЗВУК|0xFFFFFFF5|Ссылается на звуковой объект. Звуковые объекты не имеют места экрана или дочерние элементы, но имеют имена и атрибуты состояния. Они представляют собой дочерние приложения, которое воспроизводит звук.|  
|SYSMENU|0xFFFFFFFF|Ссылается на системное меню окна.|  
|СТРОКА ЗАГОЛОВКА|0xFFFFFFFE|Ссылается на заголовок окна.|  
|VSCROLL|0xFFFFFFFB|Ссылается на вертикальной прокрутки окна.|  
|ОКНО|0x00000000|Ссылается на само окно, а не к дочернему объекту.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public virtual string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.AccessibleObject.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Windows.Forms.AccessibleObject.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение объекта со специальными возможностями.</summary>
        <value>Значение доступного объекта или значение <see langword="null" />, если значение для объекта не  задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило <xref:System.Windows.Forms.AccessibleObject.Value%2A> свойство представляет визуальные данные, содержащиеся в объекте. Не все объекты поддерживают <xref:System.Windows.Forms.AccessibleObject.Value%2A> свойство.  
  
 В большинстве случаев <xref:System.Windows.Forms.AccessibleObject.Value%2A> позволяет сообщить клиенту, какие визуальные данные, объект содержит свойство. Например значение элемента управления редактирования является текстом, содержащиеся в ней, но элемент меню не имеет значения.  
  
 <xref:System.Windows.Forms.AccessibleObject.Value%2A> Свойство предоставляет иерархические данные в случаях, таких как элемент управления деревом. Несмотря на то, что родительский объект в элементе управления иерархического представления предоставляет данные в <xref:System.Windows.Forms.AccessibleObject.Value%2A> , каждый элемент в элементе управления имеет отсчитываемый от нуля значение, представляющее уровень в иерархии. Элементы верхнего уровня имеют нулевое значение, элементы второго уровня имеют значение 1 и так далее.  
  
> [!NOTE]
>  Значения, возвращаемые полосы прокрутки и ползунка доступны, объекты указывают проценты и поэтому они являются целыми числами от 0 до 100 включительно.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">Значение не может задать или извлечь.</exception>
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Bounds" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Help" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.KeyboardShortcut" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Parent" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.State" />
      </Docs>
    </Member>
  </Members>
</Type>