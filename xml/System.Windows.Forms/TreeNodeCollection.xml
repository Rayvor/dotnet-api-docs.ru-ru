<Type Name="TreeNodeCollection" FullName="System.Windows.Forms.TreeNodeCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e65121e206c763fb02644d6048fb6d2250fa3ed4" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65004937" /></Metadata><TypeSignature Language="C#" Value="public class TreeNodeCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TreeNodeCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TreeNodeCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeNodeCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeNodeCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type TreeNodeCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.TreeNodeCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.TreeNodeCollectionEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.TreeNodeCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет коллекцию объектов <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>, <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>, И <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> методы позволяют добавлять и удалять конкретные узлы дерева из коллекции.  
  
> [!NOTE]
>  Перечисление коллекции и удаление узлов не поддерживается.  
  
 Можно также использовать <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> или <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> методы, чтобы добавить или удалить все узлы дерева из коллекции.  
  
 Классы не могут наследоваться от <xref:System.Windows.Forms.TreeNodeCollection> класса.  
  
   
  
## Examples  
 В следующем примере кода отображает сведения о заказчике в <xref:System.Windows.Forms.TreeView> элемента управления. Корневые узлы дерева отображаются имена клиентов, а дочерние узлы дерева отображают номера заказов для каждого клиента. В этом примере 1 000 заказчиков отображаются с 15 заказов. Обновление <xref:System.Windows.Forms.TreeView> отключено с помощью <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> и <xref:System.Windows.Forms.TreeView.EndUpdate%2A> методы и ожидание <xref:System.Windows.Forms.Cursor> отображается во время <xref:System.Windows.Forms.TreeView> создает и заполняет <xref:System.Windows.Forms.TreeNode> объектов. В этом примере требуется наличие `Customer` объект, содержащий коллекцию `Order` объектов. Это также требует, что вы создали экземпляр <xref:System.Windows.Forms.TreeView> управления <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.TreeView" />
    <altmember cref="T:System.Windows.Forms.TreeNode" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет новый узел дерева в коллекцию.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Add (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Add(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (text As String) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::TreeNode ^ Add(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member Add : string -&gt; System.Windows.Forms.TreeNode&#xA;override this.Add : string -&gt; System.Windows.Forms.TreeNode" Usage="treeNodeCollection.Add text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Текст метки, отображаемый элементом <see cref="T:System.Windows.Forms.TreeNode" />.</param>
        <summary>Добавляет новый узел дерева с заданным текстом метки в конец текущей коллекции узлов дерева.</summary>
        <returns>Объект <see cref="T:System.Windows.Forms.TreeNode" /> , представляющий узел дерева, добавляемый в коллекцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вы также можете добавить новые <xref:System.Windows.Forms.TreeNode> объектов в коллекцию с помощью <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> или <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> методы.  
  
 Чтобы удалить <xref:System.Windows.Forms.TreeNode> , добавленный ранее, используйте <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>, <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>, или <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> методы.  
  
   
  
## Examples  
 В следующем примере кода отображает сведения о заказчике в <xref:System.Windows.Forms.TreeView> элемента управления. Корневые узлы дерева отображаются имена клиентов, а дочерние узлы дерева отображают номера заказов для каждого клиента. В этом примере 1 000 заказчиков отображаются с 15 заказов. Обновление <xref:System.Windows.Forms.TreeView> отключено с помощью <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> и <xref:System.Windows.Forms.TreeView.EndUpdate%2A> методы и ожидание <xref:System.Windows.Forms.Cursor> отображается во время <xref:System.Windows.Forms.TreeView> создает и заполняет <xref:System.Windows.Forms.TreeNode> объектов. В этом примере требуется наличие `Customer` объект, содержащий коллекцию `Order` объектов. Это также требует, что вы создали экземпляр <xref:System.Windows.Forms.TreeView> управления <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNodeCollection.Remove(System.Windows.Forms.TreeNode)" />
        <altmember cref="M:System.Windows.Forms.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (System.Windows.Forms.TreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(class System.Windows.Forms.TreeNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Add(System.Windows.Forms.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (node As TreeNode) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Windows::Forms::TreeNode ^ node);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Windows.Forms.TreeNode -&gt; int&#xA;override this.Add : System.Windows.Forms.TreeNode -&gt; int" Usage="treeNodeCollection.Add node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
      </Parameters>
      <Docs>
        <param name="node">Параметр <see cref="T:System.Windows.Forms.TreeNode" /> для добавления в коллекцию.</param>
        <summary>Добавляет ранее созданный узел дерева в конец коллекции узлов дерева.</summary>
        <returns>Отсчитываемый от нуля индекс значение <see cref="T:System.Windows.Forms.TreeNode" /> добавлен в коллекцию узлов дерева.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта версия <xref:System.Windows.Forms.TreeNodeCollection.Add%2A> метод позволяет добавлять ранее созданные <xref:System.Windows.Forms.TreeNode> объекты в конец коллекции узлов дерева.  
  
 Вы также можете добавить новые <xref:System.Windows.Forms.TreeNode> объектов в коллекцию с помощью <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> или <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> методы.  
  
 Чтобы удалить <xref:System.Windows.Forms.TreeNode> , добавленный ранее, используйте <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>, <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>, или <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> методы.  
  
> [!NOTE]
>  Объект <xref:System.Windows.Forms.TreeNode> могут назначаться только одному <xref:System.Windows.Forms.TreeView> управления за раз. Чтобы добавить новый элемент управления представления дерева узла дерева, необходимо удалить его из другого представления дерева сначала или клонировать его.  
  
   
  
## Examples  
 В следующем примере кода отображает сведения о заказчике в <xref:System.Windows.Forms.TreeView> элемента управления. Корневые узлы дерева отображаются имена клиентов, а дочерние узлы дерева отображают номера заказов для каждого клиента. В этом примере 1 000 заказчиков отображаются с 15 заказов. Обновление <xref:System.Windows.Forms.TreeView> отключено с помощью <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> и <xref:System.Windows.Forms.TreeView.EndUpdate%2A> методы и ожидание <xref:System.Windows.Forms.Cursor> отображается во время <xref:System.Windows.Forms.TreeView> создает и заполняет <xref:System.Windows.Forms.TreeNode> объектов. В этом примере требуется наличие `Customer` объект, содержащий коллекцию `Order` объектов. Это также требует, что вы создали экземпляр <xref:System.Windows.Forms.TreeView> управления <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="node" /> Назначено в настоящий момент в другой <see cref="T:System.Windows.Forms.TreeView" />.</exception>
        <altmember cref="M:System.Windows.Forms.TreeNodeCollection.Remove(System.Windows.Forms.TreeNode)" />
        <altmember cref="M:System.Windows.Forms.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Add (string key, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Add(string key, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, text As String) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::TreeNode ^ Add(System::String ^ key, System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string -&gt; System.Windows.Forms.TreeNode&#xA;override this.Add : string * string -&gt; System.Windows.Forms.TreeNode" Usage="treeNodeCollection.Add (key, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Имя узла дерева.</param>
        <param name="text">Текст, отображаемый в узле дерева.</param>
        <summary>Создает новый узел дерева с указанным ключом и текстом и добавляет его в коллекцию.</summary>
        <returns><see cref="T:System.Windows.Forms.TreeNode" /> , Добавленный в коллекцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Name%2A> Свойство соответствует ключу для <xref:System.Windows.Forms.TreeNode> в <xref:System.Windows.Forms.TreeNodeCollection>.  
  
 Вы также можете добавить новые <xref:System.Windows.Forms.TreeNode> объектов в коллекцию с помощью <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> или <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> методы.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Add (string key, string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Add(string key, string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, text As String, imageIndex As Integer) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::TreeNode ^ Add(System::String ^ key, System::String ^ text, int imageIndex);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string * int -&gt; System.Windows.Forms.TreeNode&#xA;override this.Add : string * string * int -&gt; System.Windows.Forms.TreeNode" Usage="treeNodeCollection.Add (key, text, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="imageIndex" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Имя узла дерева.</param>
        <param name="text">Текст, отображаемый в узле дерева.</param>
        <param name="imageIndex">Индекс изображения, отображаемого в узле дерева.</param>
        <summary>Создает узел дерева с указанным ключом, текстом и изображением и добавляет его в коллекцию.</summary>
        <returns><see cref="T:System.Windows.Forms.TreeNode" /> , Добавленный в коллекцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Name%2A> Свойство соответствует ключу для <xref:System.Windows.Forms.TreeNode> в <xref:System.Windows.Forms.TreeNodeCollection>.  
  
 `imageIndex` Параметр ссылается на изображение в <xref:System.Windows.Forms.TreeView.ImageList%2A> свойство родительского объекта <xref:System.Windows.Forms.TreeView>.  
  
 Узел дерева добавляется в конец коллекции. Вы также можете добавить новые <xref:System.Windows.Forms.TreeNode> объектов в коллекцию с помощью <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> или <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> методы.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Add (string key, string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Add(string key, string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, text As String, imageKey As String) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::TreeNode ^ Add(System::String ^ key, System::String ^ text, System::String ^ imageKey);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string * string -&gt; System.Windows.Forms.TreeNode&#xA;override this.Add : string * string * string -&gt; System.Windows.Forms.TreeNode" Usage="treeNodeCollection.Add (key, text, imageKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="imageKey" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Имя узла дерева.</param>
        <param name="text">Текст, отображаемый в узле дерева.</param>
        <param name="imageKey">Изображение, отображаемое в узле дерева.</param>
        <summary>Создает узел дерева с указанным ключом, текстом и изображением и добавляет его в коллекцию.</summary>
        <returns><see cref="T:System.Windows.Forms.TreeNode" /> , Добавленный в коллекцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Name%2A> Свойство соответствует ключу для <xref:System.Windows.Forms.TreeNode> в <xref:System.Windows.Forms.TreeNodeCollection>.  
  
 Узел дерева добавляется в конец коллекции. Вы также можете добавить новые <xref:System.Windows.Forms.TreeNode> объектов в коллекцию с помощью <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> или <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> методы.  
  
 `imageKey` Параметр ссылается на изображение в <xref:System.Windows.Forms.TreeView.ImageList%2A> свойство родительского объекта <xref:System.Windows.Forms.TreeView>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Add (string key, string text, int imageIndex, int selectedImageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Add(string key, string text, int32 imageIndex, int32 selectedImageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, text As String, imageIndex As Integer, selectedImageIndex As Integer) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::TreeNode ^ Add(System::String ^ key, System::String ^ text, int imageIndex, int selectedImageIndex);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string * int * int -&gt; System.Windows.Forms.TreeNode&#xA;override this.Add : string * string * int * int -&gt; System.Windows.Forms.TreeNode" Usage="treeNodeCollection.Add (key, text, imageIndex, selectedImageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="imageIndex" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="selectedImageIndex" Type="System.Int32" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Имя узла дерева.</param>
        <param name="text">Текст, отображаемый в узле дерева.</param>
        <param name="imageIndex">Индекс изображения, отображаемого в узле дерева.</param>
        <param name="selectedImageIndex">Индекс изображения для отображения в узле дерева, когда он находится в выбранном состоянии.</param>
        <summary>Создает узел дерева с указанным ключом, текстом и образы и добавляет его в коллекцию.</summary>
        <returns>Узел дерева, который был добавлен в коллекцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Name%2A> Свойство соответствует ключу для <xref:System.Windows.Forms.TreeNode> в <xref:System.Windows.Forms.TreeNodeCollection>.  
  
 Узел дерева добавляется в конец коллекции. Вы также можете добавить новые <xref:System.Windows.Forms.TreeNode> объектов в коллекцию с помощью <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> или <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> методы.  
  
 `imageIndex` Параметр ссылается на изображение в <xref:System.Windows.Forms.TreeView.ImageList%2A> свойство родительского объекта <xref:System.Windows.Forms.TreeView>.  
  
 `selectedImageIndex` Параметр ссылается на изображение в <xref:System.Windows.Forms.TreeView.StateImageList%2A> свойство родительского объекта <xref:System.Windows.Forms.TreeView>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Add (string key, string text, string imageKey, string selectedImageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Add(string key, string text, string imageKey, string selectedImageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, text As String, imageKey As String, selectedImageKey As String) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::TreeNode ^ Add(System::String ^ key, System::String ^ text, System::String ^ imageKey, System::String ^ selectedImageKey);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string * string * string -&gt; System.Windows.Forms.TreeNode&#xA;override this.Add : string * string * string * string -&gt; System.Windows.Forms.TreeNode" Usage="treeNodeCollection.Add (key, text, imageKey, selectedImageKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="imageKey" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="selectedImageKey" Type="System.String" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Имя узла дерева.</param>
        <param name="text">Текст, отображаемый в узле дерева.</param>
        <param name="imageKey">Ключ изображения для отображения в узле дерева.</param>
        <param name="selectedImageKey">Ключ изображения, отображаемого, когда узел находится в выбранном состоянии.</param>
        <summary>Создает узел дерева с указанным ключом, текстом и образы и добавляет его в коллекцию.</summary>
        <returns><see cref="T:System.Windows.Forms.TreeNode" /> , Добавленный в коллекцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Name%2A> Свойство соответствует ключу для <xref:System.Windows.Forms.TreeNode> в <xref:System.Windows.Forms.TreeNodeCollection>.  
  
 Узел дерева добавляется в конец коллекции. Вы также можете добавить новые <xref:System.Windows.Forms.TreeNode> объектов в коллекцию с помощью <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> или <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> методы.  
  
 `imageKey` Параметр ссылается на изображение в <xref:System.Windows.Forms.TreeView.ImageList%2A> свойство родительского объекта <xref:System.Windows.Forms.TreeView>.  
  
 `selectedImageKey` Параметр ссылается на изображение в <xref:System.Windows.Forms.TreeView.StateImageList%2A> свойство родительского объекта <xref:System.Windows.Forms.TreeView>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Windows.Forms.TreeNode[] nodes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Windows.Forms.TreeNode[] nodes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.AddRange(System.Windows.Forms.TreeNode[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRange (nodes As TreeNode())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRange(cli::array &lt;System::Windows::Forms::TreeNode ^&gt; ^ nodes);" />
      <MemberSignature Language="F#" Value="abstract member AddRange : System.Windows.Forms.TreeNode[] -&gt; unit&#xA;override this.AddRange : System.Windows.Forms.TreeNode[] -&gt; unit" Usage="treeNodeCollection.AddRange nodes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodes" Type="System.Windows.Forms.TreeNode[]" />
      </Parameters>
      <Docs>
        <param name="nodes">Массив <see cref="T:System.Windows.Forms.TreeNode" /> объекты, представляющие узлы дерева для добавления в коллекцию.</param>
        <summary>Добавляет в коллекцию массив предварительно созданных узлов дерева.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode> Объектов, содержащихся в `nodes` массива добавляются в конец коллекции.  
  
 Можно использовать <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> создать метод для быстрого добавления группы ранее <xref:System.Windows.Forms.TreeNode> объекты в коллекцию, а не вручную добавлять каждый <xref:System.Windows.Forms.TreeNode> в коллекцию с помощью <xref:System.Windows.Forms.TreeNodeCollection.Add%2A> метод.  
  
 Чтобы удалить <xref:System.Windows.Forms.TreeNode> , добавленный ранее, используйте <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>, <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>, или <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> методы.  
  
   
  
## Examples  
 В следующем примере кода команда копирует <xref:System.Windows.Forms.TreeNodeCollection> из <xref:System.Windows.Forms.TreeView> во временный <xref:System.Array>, а затем добавляет содержимое массива в другой <xref:System.Windows.Forms.TreeView> с помощью <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> метод. <xref:System.Windows.Forms.TreeNodeCollection> Из источника <xref:System.Windows.Forms.TreeView> удаляется с помощью <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> метод. В этом примере требуется, что у вас есть два <xref:System.Windows.Forms.TreeView> контролирует, один с коллекцией <xref:System.Windows.Forms.TreeNode> объектов.  
  
 [!code-cpp[TreeNodeCollection_Clear#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection_Clear/CPP/treenodecollection_clear.cpp#1)]
 [!code-csharp[TreeNodeCollection_Clear#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection_Clear/CS/treenodecollection_clear.cs#1)]
 [!code-vb[TreeNodeCollection_Clear#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection_Clear/VB/treenodecollection_clear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="nodes" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="nodes" /> является дочерним элементом другого <see cref="T:System.Windows.Forms.TreeView" />.</exception>
        <altmember cref="M:System.Windows.Forms.TreeNodeCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.TreeNodeCollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="treeNodeCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет все узлы дерева из коллекции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод можно использовать для очистки всей коллекции узлов дерева.  
  
 Чтобы удалить узел отдельное дерево из коллекции, используйте <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> или <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> методы.  
  
 Чтобы добавить новый <xref:System.Windows.Forms.TreeNode> объекты в коллекцию, используют <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>, <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>, или <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> методы.  
  
   
  
## Examples  
 В следующем примере кода команда копирует <xref:System.Windows.Forms.TreeNodeCollection> из <xref:System.Windows.Forms.TreeView> во временный <xref:System.Array>, а затем добавляет содержимое массива в другой <xref:System.Windows.Forms.TreeView> с помощью <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> метод. <xref:System.Windows.Forms.TreeNodeCollection> Из источника <xref:System.Windows.Forms.TreeView> удаляется с помощью <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> метод. В этом примере требуется, что у вас есть два <xref:System.Windows.Forms.TreeView> контролирует, один с коллекцией <xref:System.Windows.Forms.TreeNode> объектов.  
  
 [!code-cpp[TreeNodeCollection_Clear#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection_Clear/CPP/treenodecollection_clear.cpp#1)]
 [!code-csharp[TreeNodeCollection_Clear#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection_Clear/CS/treenodecollection_clear.cs#1)]
 [!code-vb[TreeNodeCollection_Clear#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection_Clear/VB/treenodecollection_clear.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.TreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.TreeNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Contains(System.Windows.Forms.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (node As TreeNode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::TreeNode ^ node);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.TreeNode -&gt; bool" Usage="treeNodeCollection.Contains node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
      </Parameters>
      <Docs>
        <param name="node">Объект <see cref="T:System.Windows.Forms.TreeNode" /> для поиска в коллекции.</param>
        <summary>Определяет, является ли указанный узел дерева членом коллекции.</summary>
        <returns><see langword="true" /> Если <see cref="T:System.Windows.Forms.TreeNode" /> является членом коллекции; в противном случае <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод позволяет определить, следует ли <xref:System.Windows.Forms.TreeNode> является членом коллекции перед попыткой выполнения операции на <xref:System.Windows.Forms.TreeNode>. Этот метод можно использовать, чтобы убедиться, что <xref:System.Windows.Forms.TreeNode> был добавлен или по-прежнему является членом коллекции.  
  
 Количество времени, этот метод принимает пропорционален размеру коллекции узлов, поэтому следует избегать ее использования с большими коллекциями.  
  
 Этот метод проверяет равенство ссылок. Его нельзя использовать для определения, является ли это эквивалентный другой узел в коллекции.  
  
> [!NOTE]
>  Один требования равенство ссылок подразумевается, что нельзя настраивать поведение этого метода для производных <xref:System.Windows.Forms.TreeNode> типов путем переопределения <xref:System.Object.Equals%2A> метод <xref:System.Windows.Forms.TreeNode> класса.  
  
   
  
## Examples  
 В следующем примере кода определяет, если заданное <xref:System.Windows.Forms.TreeNode> находится в пределах <xref:System.Windows.Forms.TreeNodeCollection>, затем перечисляется коллекция. В этом примере требуется наличие <xref:System.Windows.Forms.Form> с <xref:System.Windows.Forms.TreeView> с <xref:System.Windows.Forms.TreeNodeCollection> , содержащий <xref:System.Windows.Forms.TreeNode> с именем `myTreeNode2`.  
  
 [!code-cpp[TreeNodeCollection_Contains_GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection_Contains_GetEnumerator/CPP/treenodecollection_contains_getenumerator.cpp#1)]
 [!code-csharp[TreeNodeCollection_Contains_GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection_Contains_GetEnumerator/CS/treenodecollection_contains_getenumerator.cs#1)]
 [!code-vb[TreeNodeCollection_Contains_GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection_Contains_GetEnumerator/VB/treenodecollection_contains_getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="treeNodeCollection.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Имя искомого объекта <see cref="T:System.Windows.Forms.TreeNode" />.</param>
        <summary>Определяет, содержит ли коллекция узел дерева с указанным ключом.</summary>
        <returns><see langword="true" /> для указания коллекции содержит <see cref="T:System.Windows.Forms.TreeNode" /> с указанным ключом; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Name%2A> Свойство соответствует ключу для <xref:System.Windows.Forms.TreeNode> в <xref:System.Windows.Forms.TreeNodeCollection>.  
  
 При сравнении ключей не учитывается. Если `key` параметр `null` или является пустой строкой, <xref:System.Windows.Forms.TreeNodeCollection.Item%2A> возвращает `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dest As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ dest, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="treeNodeCollection.CopyTo (dest, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">Массив назначения.</param>
        <param name="index">Индекс в целевом массиве, с которого выполняется хранение начинается.</param>
        <summary>Копирует коллекцию целиком в существующий массив с указанной позиции в массиве.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода отображает номер <xref:System.Windows.Forms.TreeNode> объекты в <xref:System.Windows.Forms.TreeNodeCollection>, копирует содержимое коллекции <xref:System.Object> массиве и отображает список узлов дерева в <xref:System.Windows.Forms.Label> элемента управления. В этом примере требуется наличие <xref:System.Windows.Forms.TreeView> с по крайней мере <xref:System.Windows.Forms.TreeNode> в его <xref:System.Windows.Forms.TreeNodeCollection>и <xref:System.Windows.Forms.Label> управления <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[TreeNodeCollection_Count_CopyTo#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection_Count_CopyTo/CPP/treenodecollection_count_copyto.cpp#1)]
 [!code-csharp[TreeNodeCollection_Count_CopyTo#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection_Count_CopyTo/CS/treenodecollection_count_copyto.cs#1)]
 [!code-vb[TreeNodeCollection_Count_CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection_Count_CopyTo/VB/treenodecollection_count_copyto.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNodeCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.TreeNodeCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает общее число <see cref="T:System.Windows.Forms.TreeNode" /> объектов в коллекции.</summary>
        <value>Общее число <see cref="T:System.Windows.Forms.TreeNode" /> объектов в коллекции.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNodeCollection.Count%2A> Свойство содержит количество <xref:System.Windows.Forms.TreeNode> объектов, назначенного этой коллекции. Можно использовать <xref:System.Windows.Forms.TreeNodeCollection.Count%2A> значением свойства в качестве верхней границы цикла для перебора коллекции.  
  
> [!NOTE]
>  Поскольку значение индекса коллекции отсчитываемый от нуля индекс, необходимо вычесть единицу из переменной цикла. Если не учесть, превысит верхние границы коллекции и throw <xref:System.IndexOutOfRangeException> исключение.  
  
   
  
## Examples  
 В следующем примере кода отображает номер <xref:System.Windows.Forms.TreeNode> объекты в <xref:System.Windows.Forms.TreeNodeCollection>, копирует содержимое коллекции <xref:System.Object> массиве и отображает список узлов дерева в <xref:System.Windows.Forms.Label> элемента управления. В этом примере требуется наличие <xref:System.Windows.Forms.TreeView> с по крайней мере <xref:System.Windows.Forms.TreeNode> в его <xref:System.Windows.Forms.TreeNodeCollection>и <xref:System.Windows.Forms.Label> управления <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[TreeNodeCollection_Count_CopyTo#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection_Count_CopyTo/CPP/treenodecollection_count_copyto.cpp#1)]
 [!code-csharp[TreeNodeCollection_Count_CopyTo#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection_Count_CopyTo/CS/treenodecollection_count_copyto.cs#1)]
 [!code-vb[TreeNodeCollection_Count_CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection_Count_CopyTo/VB/treenodecollection_count_copyto.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode[] Find (string key, bool searchAllChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.TreeNode[] Find(string key, bool searchAllChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Find(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (key As String, searchAllChildren As Boolean) As TreeNode()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Forms::TreeNode ^&gt; ^ Find(System::String ^ key, bool searchAllChildren);" />
      <MemberSignature Language="F#" Value="member this.Find : string * bool -&gt; System.Windows.Forms.TreeNode[]" Usage="treeNodeCollection.Find (key, searchAllChildren)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="searchAllChildren" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Имя узла дерева для поиска.</param>
        <param name="searchAllChildren"><see langword="true" /> для поиска дочерние узлы узлов дерева; в противном случае <see langword="false" />.</param>
        <summary>Поиск узлов дерева с указанным ключом, при необходимости просматривая вложенные узлы.</summary>
        <returns>Массив <see cref="T:System.Windows.Forms.TreeNode" /> объектов, <see cref="P:System.Windows.Forms.TreeNode.Name" /> свойства совпадает с указанным ключом.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Name%2A> Свойство соответствует ключу для <xref:System.Windows.Forms.TreeNode> в <xref:System.Windows.Forms.TreeNodeCollection>.  
  
 При сравнении ключей не учитывается. Если `key` параметр `null` или является пустой строкой, или совпадений нет, <xref:System.Windows.Forms.TreeNodeCollection.Item%2A> возвращает пустой массив, свойство`.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="treeNodeCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает перечислитель, который может использоваться для итерации по коллекции узлов дерева.</summary>
        <returns><see cref="T:System.Collections.IEnumerator" /> , Представляющий коллекции узлов дерева.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода определяет, если заданное <xref:System.Windows.Forms.TreeNode> находится в пределах <xref:System.Windows.Forms.TreeNodeCollection>, затем перечисляется коллекция. В этом примере требуется наличие <xref:System.Windows.Forms.Form> с <xref:System.Windows.Forms.TreeView> с <xref:System.Windows.Forms.TreeNodeCollection> , содержащий <xref:System.Windows.Forms.TreeNode> с именем `myTreeNode2`.  
  
 [!code-cpp[TreeNodeCollection_Contains_GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection_Contains_GetEnumerator/CPP/treenodecollection_contains_getenumerator.cpp#1)]
 [!code-csharp[TreeNodeCollection_Contains_GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection_Contains_GetEnumerator/CS/treenodecollection_contains_getenumerator.cs#1)]
 [!code-vb[TreeNodeCollection_Contains_GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection_Contains_GetEnumerator/VB/treenodecollection_contains_getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.TreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.TreeNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.IndexOf(System.Windows.Forms.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (node As TreeNode) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::TreeNode ^ node);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.TreeNode -&gt; int" Usage="treeNodeCollection.IndexOf node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
      </Parameters>
      <Docs>
        <param name="node">Объект <see cref="T:System.Windows.Forms.TreeNode" /> для поиска в коллекции.</param>
        <summary>Возвращает индекс указанного узла дерева в коллекции.</summary>
        <returns>Отсчитываемый от нуля индекс найденного элемента в коллекции узлов дерева; в противном случае — значение -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Количество времени, этот метод принимает пропорционален размеру коллекции узлов, поэтому следует избегать ее использования с большими коллекциями.  
  
 Этот метод проверяет равенство ссылок. Его нельзя использовать для извлечения индекса другого эквивалентного узла в коллекции.  
  
> [!NOTE]
>  Один требования равенство ссылок подразумевается, что нельзя настраивать поведение этого метода для производных <xref:System.Windows.Forms.TreeNode> типов путем переопределения <xref:System.Object.Equals%2A> метод <xref:System.Windows.Forms.TreeNode> класса.  
  
   
  
## Examples  
 В следующем примере кода определяет, если заданное <xref:System.Windows.Forms.TreeNode> находится в пределах <xref:System.Windows.Forms.TreeNodeCollection>, затем перечисляется коллекция. В этом примере требуется наличие <xref:System.Windows.Forms.Form> с <xref:System.Windows.Forms.TreeView> с <xref:System.Windows.Forms.TreeNodeCollection> , содержащий <xref:System.Windows.Forms.TreeNode> с именем `myTreeNode2`.  
  
 [!code-cpp[TreeNodeCollection_Contains_GetEnumerator#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection_Contains_GetEnumerator/CPP/treenodecollection_contains_getenumerator.cpp#2)]
 [!code-csharp[TreeNodeCollection_Contains_GetEnumerator#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection_Contains_GetEnumerator/CS/treenodecollection_contains_getenumerator.cs#2)]
 [!code-vb[TreeNodeCollection_Contains_GetEnumerator#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection_Contains_GetEnumerator/VB/treenodecollection_contains_getenumerator.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfKey : string -&gt; int&#xA;override this.IndexOfKey : string -&gt; int" Usage="treeNodeCollection.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Имя узла дерева для поиска.</param>
        <summary>Возвращает индекс первого вхождения узла дерева с указанным ключом.</summary>
        <returns>Отсчитываемый от нуля индекс первого вхождения узла дерева с указанным ключом, если найден; в противном случае — значение -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Windows.Forms.TreeNodeCollection.IndexOfKey%2A> вызывается последовательно, последний возвращается индекс будет проверяться для сопоставления ключа во-первых, и если нет совпадений, то поиск начинается в начале коллекции.  
  
 <xref:System.Windows.Forms.TreeNode.Name%2A> Свойство соответствует ключу для <xref:System.Windows.Forms.TreeNode> в <xref:System.Windows.Forms.TreeNodeCollection>.  
  
 При сравнении ключей не учитывается. Если `key` — `null` или является пустой строкой, <xref:System.Windows.Forms.TreeNodeCollection.Item%2A> свойство возвращает значение -1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Insert">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Вставляет элемент в коллекции с указанной позиции.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Insert (int index, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Insert(int32 index, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Insert (index As Integer, text As String) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::TreeNode ^ Insert(int index, System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * string -&gt; System.Windows.Forms.TreeNode&#xA;override this.Insert : int * string -&gt; System.Windows.Forms.TreeNode" Usage="treeNodeCollection.Insert (index, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">Положение в коллекции для вставки узла.</param>
        <param name="text">Текст, отображаемый в узле дерева.</param>
        <summary>Создает узел дерева с указанным текстом и вставляет его по указанному индексу.</summary>
        <returns><see cref="T:System.Windows.Forms.TreeNode" /> , Вставленный в коллекцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Windows.Forms.TreeView.Sorted%2A> свойству `true`, `index` значение параметра учитывается. <xref:System.Windows.Forms.TreeNode> Вставляется в представлении в виде дерева и <xref:System.Windows.Forms.TreeView> сортируется еще раз.  
  
 Вы также можете добавить новые <xref:System.Windows.Forms.TreeNode> объектов в коллекцию с помощью <xref:System.Windows.Forms.TreeNodeCollection.Add%2A> или <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> методы.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int index, System.Windows.Forms.TreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, class System.Windows.Forms.TreeNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.Windows.Forms.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (index As Integer, node As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Windows::Forms::TreeNode ^ node);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * System.Windows.Forms.TreeNode -&gt; unit&#xA;override this.Insert : int * System.Windows.Forms.TreeNode -&gt; unit" Usage="treeNodeCollection.Insert (index, node)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
      </Parameters>
      <Docs>
        <param name="index">Индекс в коллекции для вставки узла дерева.</param>
        <param name="node"><see cref="T:System.Windows.Forms.TreeNode" /> Для вставки в коллекцию.</param>
        <summary>Вставляет существующий узел дерева в коллекции узлов дерева в указанном расположении.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Windows.Forms.TreeView.Sorted%2A?displayProperty=nameWithType> свойству `true`, `index` значение параметра учитывается. <xref:System.Windows.Forms.TreeNode> Вставляется в представлении в виде дерева и <xref:System.Windows.Forms.TreeView> отсортирована.  
  
 Вы также можете добавить новые <xref:System.Windows.Forms.TreeNode> объектов в коллекцию с помощью <xref:System.Windows.Forms.TreeNodeCollection.Add%2A> или <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> методы.  
  
 Чтобы удалить <xref:System.Windows.Forms.TreeNode> , добавленный ранее, используйте <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>, <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>, или <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> методы.  
  
> [!NOTE]
>  Объект <xref:System.Windows.Forms.TreeNode> могут назначаться только одному <xref:System.Windows.Forms.TreeView> управления за раз. Чтобы добавить новый элемент управления представления дерева узла дерева, необходимо удалить его из другого представления дерева сначала или клонировать его.  
  
   
  
## Examples  
 В следующем примере кода Удаляет выбранный узел дерева из одного <xref:System.Windows.Forms.TreeView> и добавляет его в другой, если обе коллекции узлов дерева не только для чтения. При <xref:System.Windows.Forms.Button> нажатии <xref:System.Windows.Forms.TreeNode> представленный <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType> удалить свойство из одного <xref:System.Windows.Forms.TreeView> с помощью <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> метод и добавляется в другой <xref:System.Windows.Forms.TreeView> с помощью <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> метод. В этом примере требуется наличие <xref:System.Windows.Forms.Form> , содержащий два <xref:System.Windows.Forms.TreeView> элементов управления и <xref:System.Windows.Forms.Button>. <xref:System.Windows.Forms.TreeView> Элементов управления должен быть назван `treeView1` и `treeView2`.  
  
 [!code-cpp[TreeNodeCollection#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection/CPP/treenodecollection.cpp#1)]
 [!code-csharp[TreeNodeCollection#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection/CS/treenodecollection.cs#1)]
 [!code-vb[TreeNodeCollection#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection/VB/treenodecollection.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="node" /> Назначено в настоящий момент в другой <see cref="T:System.Windows.Forms.TreeView" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Insert(int32 index, string key, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Insert (index As Integer, key As String, text As String) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::TreeNode ^ Insert(int index, System::String ^ key, System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * string * string -&gt; System.Windows.Forms.TreeNode&#xA;override this.Insert : int * string * string -&gt; System.Windows.Forms.TreeNode" Usage="treeNodeCollection.Insert (index, key, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="key" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">Положение в коллекции для вставки узла.</param>
        <param name="key">Имя узла дерева.</param>
        <param name="text">Текст, отображаемый в узле дерева.</param>
        <summary>Создает узел дерева с указанным текстом и ключом и вставляет его в коллекцию.</summary>
        <returns><see cref="T:System.Windows.Forms.TreeNode" /> , Вставленный в коллекцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Windows.Forms.TreeView.Sorted%2A> свойству `true`, `index` значение параметра учитывается. <xref:System.Windows.Forms.TreeNode> Вставляется в представлении в виде дерева и <xref:System.Windows.Forms.TreeView> сортируется еще раз.  
  
 Вы также можете добавить новые <xref:System.Windows.Forms.TreeNode> объектов в коллекцию с помощью <xref:System.Windows.Forms.TreeNodeCollection.Add%2A> или <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> методы.  
  
 <xref:System.Windows.Forms.TreeNode.Name%2A> Свойство соответствует ключу для <xref:System.Windows.Forms.TreeNode> в <xref:System.Windows.Forms.TreeNodeCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Insert(int32 index, string key, string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Insert (index As Integer, key As String, text As String, imageIndex As Integer) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::TreeNode ^ Insert(int index, System::String ^ key, System::String ^ text, int imageIndex);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * string * string * int -&gt; System.Windows.Forms.TreeNode&#xA;override this.Insert : int * string * string * int -&gt; System.Windows.Forms.TreeNode" Usage="treeNodeCollection.Insert (index, key, text, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="key" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="imageIndex" Type="System.Int32" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">Положение в коллекции для вставки узла.</param>
        <param name="key">Имя узла дерева.</param>
        <param name="text">Текст, отображаемый в узле дерева.</param>
        <param name="imageIndex">Индекс изображения, отображаемого в узле дерева.</param>
        <summary>Создает узел дерева с указанным ключом, текстом и изображением и вставляет его в коллекцию по указанному индексу.</summary>
        <returns><see cref="T:System.Windows.Forms.TreeNode" /> , Вставленный в коллекцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Windows.Forms.TreeView.Sorted%2A> свойству `true`, `index` значение параметра учитывается. <xref:System.Windows.Forms.TreeNode> Вставляется в представлении в виде дерева и <xref:System.Windows.Forms.TreeView> сортируется еще раз.  
  
 Вы также можете добавить новые <xref:System.Windows.Forms.TreeNode> объектов в коллекцию с помощью <xref:System.Windows.Forms.TreeNodeCollection.Add%2A> или <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> методы.  
  
 <xref:System.Windows.Forms.TreeNode.Name%2A> Свойство соответствует ключу для <xref:System.Windows.Forms.TreeNode> в <xref:System.Windows.Forms.TreeNodeCollection>.  
  
 `imageIndex` Параметр ссылается на изображение в <xref:System.Windows.Forms.TreeView.ImageList%2A> свойство родительского объекта <xref:System.Windows.Forms.TreeView>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Insert(int32 index, string key, string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Insert (index As Integer, key As String, text As String, imageKey As String) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::TreeNode ^ Insert(int index, System::String ^ key, System::String ^ text, System::String ^ imageKey);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * string * string * string -&gt; System.Windows.Forms.TreeNode&#xA;override this.Insert : int * string * string * string -&gt; System.Windows.Forms.TreeNode" Usage="treeNodeCollection.Insert (index, key, text, imageKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="key" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="imageKey" Type="System.String" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">Положение в коллекции для вставки узла.</param>
        <param name="key">Имя узла дерева.</param>
        <param name="text">Текст, отображаемый в узле дерева.</param>
        <param name="imageKey">Ключ изображения для отображения в узле дерева.</param>
        <summary>Создает узел дерева с указанным ключом, текстом и изображением и вставляет его в коллекцию по указанному индексу.</summary>
        <returns><see cref="T:System.Windows.Forms.TreeNode" /> , Вставленный в коллекцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Windows.Forms.TreeView.Sorted%2A> свойству `true`, `index` значение параметра учитывается. <xref:System.Windows.Forms.TreeNode> Вставляется в представлении в виде дерева и <xref:System.Windows.Forms.TreeView> сортируется еще раз.  
  
 Вы также можете добавить новые <xref:System.Windows.Forms.TreeNode> объектов в коллекцию с помощью <xref:System.Windows.Forms.TreeNodeCollection.Add%2A> или <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> методы.  
  
 <xref:System.Windows.Forms.TreeNode.Name%2A> Свойство соответствует ключу для <xref:System.Windows.Forms.TreeNode> в <xref:System.Windows.Forms.TreeNodeCollection>.  
  
 `imageKey` Параметр ссылается на изображение в <xref:System.Windows.Forms.TreeView.ImageList%2A> свойство родительского объекта <xref:System.Windows.Forms.TreeView>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text, int imageIndex, int selectedImageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Insert(int32 index, string key, string text, int32 imageIndex, int32 selectedImageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Insert (index As Integer, key As String, text As String, imageIndex As Integer, selectedImageIndex As Integer) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::TreeNode ^ Insert(int index, System::String ^ key, System::String ^ text, int imageIndex, int selectedImageIndex);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * string * string * int * int -&gt; System.Windows.Forms.TreeNode&#xA;override this.Insert : int * string * string * int * int -&gt; System.Windows.Forms.TreeNode" Usage="treeNodeCollection.Insert (index, key, text, imageIndex, selectedImageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="key" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="imageIndex" Type="System.Int32" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="selectedImageIndex" Type="System.Int32" Index="4" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">Положение в коллекции для вставки узла.</param>
        <param name="key">Имя узла дерева.</param>
        <param name="text">Текст, отображаемый в узле дерева.</param>
        <param name="imageIndex">Индекс изображения, отображаемого в узле дерева.</param>
        <param name="selectedImageIndex">Индекс изображения, отображаемого в узле дерева, когда он находится в выбранном состоянии.</param>
        <summary>Создает узел дерева с указанным ключом, текстом и изображения и вставляет его в коллекцию по указанному индексу.</summary>
        <returns><see cref="T:System.Windows.Forms.TreeNode" /> , Вставленный в коллекцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Windows.Forms.TreeView.Sorted%2A> свойству `true`, `index` значение параметра учитывается. <xref:System.Windows.Forms.TreeNode> Вставляется в представлении в виде дерева и <xref:System.Windows.Forms.TreeView> сортируется еще раз.  
  
 Вы также можете добавить новые <xref:System.Windows.Forms.TreeNode> объектов в коллекцию с помощью <xref:System.Windows.Forms.TreeNodeCollection.Add%2A> или <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> методы.  
  
 <xref:System.Windows.Forms.TreeNode.Name%2A> Свойство соответствует ключу для <xref:System.Windows.Forms.TreeNode> в <xref:System.Windows.Forms.TreeNodeCollection>.  
  
 `imageIndex` Параметр ссылается на изображение в <xref:System.Windows.Forms.TreeView.ImageList%2A> свойство родительского объекта <xref:System.Windows.Forms.TreeView>.  
  
 `selectedimageIndex` Параметр ссылается на изображение в <xref:System.Windows.Forms.TreeView.StateImageList%2A> свойство родительского объекта <xref:System.Windows.Forms.TreeView>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text, string imageKey, string selectedImageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.TreeNode Insert(int32 index, string key, string text, string imageKey, string selectedImageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Insert (index As Integer, key As String, text As String, imageKey As String, selectedImageKey As String) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::TreeNode ^ Insert(int index, System::String ^ key, System::String ^ text, System::String ^ imageKey, System::String ^ selectedImageKey);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * string * string * string * string -&gt; System.Windows.Forms.TreeNode&#xA;override this.Insert : int * string * string * string * string -&gt; System.Windows.Forms.TreeNode" Usage="treeNodeCollection.Insert (index, key, text, imageKey, selectedImageKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="key" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="text" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="imageKey" Type="System.String" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="selectedImageKey" Type="System.String" Index="4" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">Положение в коллекции для вставки узла.</param>
        <param name="key">Имя узла дерева.</param>
        <param name="text">Текст, отображаемый в узле дерева.</param>
        <param name="imageKey">Ключ изображения для отображения в узле дерева.</param>
        <param name="selectedImageKey">Ключ изображения для отображения в узле дерева, когда он находится в выбранном состоянии.</param>
        <summary>Создает узел дерева с указанным ключом, текстом и изображения и вставляет его в коллекцию по указанному индексу.</summary>
        <returns><see cref="T:System.Windows.Forms.TreeNode" /> , Вставленный в коллекцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Windows.Forms.TreeView.Sorted%2A> свойству `true`, `index` значение параметра учитывается. <xref:System.Windows.Forms.TreeNode> Вставляется в представлении в виде дерева и <xref:System.Windows.Forms.TreeView> сортируется еще раз.  
  
 Вы также можете добавить новые <xref:System.Windows.Forms.TreeNode> объектов в коллекцию с помощью <xref:System.Windows.Forms.TreeNodeCollection.Add%2A> или <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> методы.  
  
 <xref:System.Windows.Forms.TreeNode.Name%2A> Свойство соответствует ключу для <xref:System.Windows.Forms.TreeNode> в <xref:System.Windows.Forms.TreeNodeCollection>.  
  
 `imageKey` Параметр ссылается на изображение в <xref:System.Windows.Forms.TreeView.ImageList%2A> свойство родительского объекта <xref:System.Windows.Forms.TreeView>.  
  
 `selectedimageKey` Параметр ссылается на изображение в <xref:System.Windows.Forms.TreeView.StateImageList%2A> свойство родительского объекта <xref:System.Windows.Forms.TreeView>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNodeCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.TreeNodeCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, является ли коллекция доступной только для чтения.</summary>
        <value>Значение <see langword="true" />, если коллекция доступна только для чтения; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода Удаляет выбранный узел дерева из одного <xref:System.Windows.Forms.TreeView> и добавляет его в другой, если обе коллекции узлов дерева не только для чтения. При <xref:System.Windows.Forms.Button> нажатии <xref:System.Windows.Forms.TreeNode> представленный <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType> удалить свойство из одного <xref:System.Windows.Forms.TreeView> с помощью <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> метод и добавляется в другой <xref:System.Windows.Forms.TreeView> с помощью <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> метод. В этом примере требуется наличие <xref:System.Windows.Forms.Form> , содержащий два <xref:System.Windows.Forms.TreeView> элементов управления и <xref:System.Windows.Forms.Button>. <xref:System.Windows.Forms.TreeView> Элементов управления должен быть назван `treeView1` и `treeView2`.  
  
 [!code-cpp[TreeNodeCollection#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection/CPP/treenodecollection.cpp#1)]
 [!code-csharp[TreeNodeCollection#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection/CS/treenodecollection.cs#1)]
 [!code-vb[TreeNodeCollection#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection/VB/treenodecollection.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает или задает узел дерева в коллекции.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNodeCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::TreeNode ^ default[int] { System::Windows::Forms::TreeNode ^ get(int index); void set(int index, System::Windows::Forms::TreeNode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.TreeNode with get, set" Usage="System.Windows.Forms.TreeNodeCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Заданное индексом местоположение объекта <see cref="T:System.Windows.Forms.TreeNode" /> в коллекции.</param>
        <summary>Возвращает или задает <see cref="T:System.Windows.Forms.TreeNode" /> находящийся в заданном индексом местоположении в коллекции.</summary>
        <value><see cref="T:System.Windows.Forms.TreeNode" /> Находящийся в заданном индексом местоположении в коллекции.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы назначить <xref:System.Windows.Forms.TreeNode> в определенное расположение, или извлечь их из объектов <xref:System.Windows.Forms.TreeNodeCollection>, могут ссылаться на объект коллекции с заданным значением индекса. Значение индекса <xref:System.Windows.Forms.TreeNodeCollection> начинается с нуля.  
  
   
  
## Examples  
 В следующем примере кода удаляет первый <xref:System.Windows.Forms.TreeNode> из <xref:System.Windows.Forms.TreeView> если его <xref:System.Windows.Forms.TreeNode.Text%2A?displayProperty=nameWithType> свойство имеет значение «Node0». Когда <xref:System.Windows.Forms.Button> нажатии первый <xref:System.Windows.Forms.TreeNode> в <xref:System.Windows.Forms.TreeView> удаляется с помощью <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> метод. В этом примере требуется, что вы создали <xref:System.Windows.Forms.TreeView> и <xref:System.Windows.Forms.Button> на <xref:System.Windows.Forms.Form>. Первый <xref:System.Windows.Forms.TreeNode> в вашей <xref:System.Windows.Forms.TreeView> должен иметь свойство текста «Node0.»  
  
 [!code-cpp[TreeNodeCollection#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection/CPP/treenodecollection.cpp#2)]
 [!code-csharp[TreeNodeCollection#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection/CS/treenodecollection.cs#2)]
 [!code-vb[TreeNodeCollection#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection/VB/treenodecollection.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> Значение меньше 0 или больше, чем число узлов дерева в коллекции.</exception>
        <altmember cref="P:System.Windows.Forms.TreeNodeCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TreeNode this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNodeCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::TreeNode ^ default[System::String ^] { System::Windows::Forms::TreeNode ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.TreeNodeCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Имя <see cref="T:System.Windows.Forms.TreeNode" /> извлекаемого из коллекции.</param>
        <summary>Возвращает узел дерева с указанным ключом из коллекции.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.TreeNode" /> с указанным ключом.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Name%2A> Свойство соответствует ключу для <xref:System.Windows.Forms.TreeNode> в <xref:System.Windows.Forms.TreeNodeCollection>.  
  
 При сравнении ключей не учитывается. Если `key` параметр `null` или является пустой строкой, <xref:System.Windows.Forms.TreeNodeCollection.Item%2A> возвращает `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Forms.TreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Forms.TreeNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.Remove(System.Windows.Forms.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (node As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Forms::TreeNode ^ node);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.Forms.TreeNode -&gt; unit" Usage="treeNodeCollection.Remove node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
      </Parameters>
      <Docs>
        <param name="node">Объект <see cref="T:System.Windows.Forms.TreeNode" /> для удаления.</param>
        <summary>Удаляет указанный узел дерева из коллекции узлов дерева.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:System.Windows.Forms.TreeNode> удаляется из коллекции узлов дерева, все последующие дерева, узлы, перемещаются вверх на одну позицию в коллекции.  
  
 Вы также можете удалить <xref:System.Windows.Forms.TreeNode> , добавленный ранее с помощью <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> или <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> методы.  
  
> [!NOTE]
>  Перечисление коллекции и удаление узлов не поддерживается.  
  
 Чтобы добавить новый <xref:System.Windows.Forms.TreeNode> объекты в коллекцию, используют <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>, <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>, или <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> методы.  
  
   
  
## Examples  
 В следующем примере кода Удаляет выбранный узел дерева из одного <xref:System.Windows.Forms.TreeView> и добавляет его в другой, если обе коллекции узлов дерева не только для чтения. При <xref:System.Windows.Forms.Button> нажатии <xref:System.Windows.Forms.TreeNode> представленный <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=nameWithType> удалить свойство из одного <xref:System.Windows.Forms.TreeView> с помощью <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> метод и добавляется в другой <xref:System.Windows.Forms.TreeView> с помощью <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> метод. В этом примере требуется наличие <xref:System.Windows.Forms.Form> , содержащий два <xref:System.Windows.Forms.TreeView> элементов управления и <xref:System.Windows.Forms.Button>. <xref:System.Windows.Forms.TreeView> Элементов управления должен быть назван `treeView1` и `treeView2`.  
  
 [!code-cpp[TreeNodeCollection#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection/CPP/treenodecollection.cpp#1)]
 [!code-csharp[TreeNodeCollection#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection/CS/treenodecollection.cs#1)]
 [!code-vb[TreeNodeCollection#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection/VB/treenodecollection.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNodeCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="treeNodeCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Индекс <see cref="T:System.Windows.Forms.TreeNode" /> для удаления.</param>
        <summary>Удаляет узел дерева из коллекции узлов дерева с указанным индексом.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:System.Windows.Forms.TreeNode> удаляется из коллекции узлов дерева, все последующие дерева, узлы, перемещаются вверх на одну позицию в коллекции.  
  
 Вы также можете удалить <xref:System.Windows.Forms.TreeNode> , добавленный ранее с помощью <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> или <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> методы.  
  
> [!NOTE]
>  Перечисление коллекции и удаление узлов не поддерживается.  
  
 Чтобы добавить новый <xref:System.Windows.Forms.TreeNode> объекты в коллекцию, используют <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>, <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>, или <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> методы.  
  
   
  
## Examples  
 В следующем примере кода удаляет первый <xref:System.Windows.Forms.TreeNode> из <xref:System.Windows.Forms.TreeView> если его <xref:System.Windows.Forms.TreeNode.Text%2A?displayProperty=nameWithType> свойство имеет значение «Node0». Когда <xref:System.Windows.Forms.Button> нажатии первый <xref:System.Windows.Forms.TreeNode> в <xref:System.Windows.Forms.TreeView> удаляется с помощью <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> метод. В этом примере требуется, что вы создали <xref:System.Windows.Forms.TreeView> и <xref:System.Windows.Forms.Button> на <xref:System.Windows.Forms.Form>. Первый <xref:System.Windows.Forms.TreeNode> в вашей <xref:System.Windows.Forms.TreeView> должен иметь свойство текста «Node0.»  
  
 [!code-cpp[TreeNodeCollection#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNodeCollection/CPP/treenodecollection.cpp#2)]
 [!code-csharp[TreeNodeCollection#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNodeCollection/CS/treenodecollection.cs#2)]
 [!code-vb[TreeNodeCollection#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNodeCollection/VB/treenodecollection.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNodeCollection.Remove(System.Windows.Forms.TreeNode)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveByKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member RemoveByKey : string -&gt; unit&#xA;override this.RemoveByKey : string -&gt; unit" Usage="treeNodeCollection.RemoveByKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key">Имя узла дерева, чтобы удалить из коллекции.</param>
        <summary>Удаляет узел дерева с указанным ключом из коллекции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeNode.Name%2A> Свойство соответствует ключу для <xref:System.Windows.Forms.TreeNode> в <xref:System.Windows.Forms.TreeNodeCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, является ли доступ к коллекции синхронизированным (потокобезопасным).</summary>
        <value>Значение <see langword="false" /> во всех случаях.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект, который можно использовать для синхронизации доступа к коллекции.</summary>
        <value>Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Windows.Forms.TreeNodeCollection" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object node);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (node As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ node) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">Объект, добавляемый в коллекцию узлов дерева.</param>
        <summary>Добавляет объект в конец коллекции узлов дерева.</summary>
        <returns>Отсчитываемый от нуля индекс значение <see cref="T:System.Windows.Forms.TreeNode" /> , добавленный в коллекцию узлов дерева.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `node` не <xref:System.Windows.Forms.TreeNodeCollection>, <xref:System.Windows.Forms.TreeNodeCollection.System%23Collections%23IList%23Add%2A> метод будет использовать строку, возвращаемую <xref:System.Windows.Forms.TreeNode.ToString%2A> метод <xref:System.Windows.Forms.TreeNode> класса.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><paramref name="node" /> назначено в настоящий момент в другой <see cref="T:System.Windows.Forms.TreeView" /> элемента управления.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="node" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object node);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (node As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ node) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">Объект для поиска в коллекции.</param>
        <summary>Определяет, является ли указанный узел дерева членом коллекции.</summary>
        <returns><see langword="true" /> Если <paramref name="node" /> является членом коллекции; в противном случае <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `node` не <xref:System.Windows.Forms.TreeNode>, <xref:System.Windows.Forms.TreeNodeCollection.System%23Collections%23IList%23Contains%2A> возвращает метод `false`. Таким образом, нельзя передавать строку, чтобы определить, содержит ли коллекция узла, имеющего значение строки, как его <xref:System.Windows.Forms.TreeNode.Text%2A> свойство.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object node);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (node As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ node) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">Объект <see cref="T:System.Windows.Forms.TreeNode" /> для поиска в коллекции.</param>
        <summary>Возвращает индекс указанного узла дерева в коллекции.</summary>
        <returns>Отсчитываемый от нуля индекс найденного элемента в коллекции узлов дерева; в противном случае — значение -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `node` не <xref:System.Windows.Forms.TreeNode>, <xref:System.Windows.Forms.TreeNodeCollection.System%23Collections%23IList%23IndexOf%2A> метод возвращает -1. Таким образом, нельзя передавать в строке, чтобы найти узел, имеющий значение строки, как его <xref:System.Windows.Forms.TreeNode.Text%2A> свойство.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object node);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, node As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ node) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="node" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Индекс в коллекции для вставки узла дерева.</param>
        <param name="node"><see cref="T:System.Windows.Forms.TreeNode" /> Для вставки в коллекцию.</param>
        <summary>Вставляет существующий узел дерева в коллекции узлов дерева в указанном расположении.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Windows.Forms.TreeView.Sorted%2A> свойству `true`, `index` параметр учитывается. <xref:System.Windows.Forms.TreeNode> Вставляется в представлении в виде дерева и <xref:System.Web.UI.WebControls.TreeView> сортируется еще раз.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="node" /> назначено в настоящий момент в другой <see cref="T:System.Windows.Forms.TreeView" />.  
  
-или- 
 <paramref name="node" /> не является объектом <see cref="T:System.Windows.Forms.TreeNode" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, имеет ли коллекции узлов дерева фиксированный размер.</summary>
        <value>Значение <see langword="false" /> во всех случаях.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">Отсчитываемый от нуля индекс, по которому требуется получить или задать элемент.</param>
        <summary>Возвращает или задает узел дерева по указанному индексу в коллекции.</summary>
        <value><see cref="T:System.Windows.Forms.TreeNode" /> По указанному индексу в <see cref="T:System.Windows.Forms.TreeNodeCollection" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Заданное значение не является <see cref="T:System.Windows.Forms.TreeNode" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object node);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (node As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ node) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">Объект <see cref="T:System.Windows.Forms.TreeNode" />, который требуется удалить из коллекции.</param>
        <summary>Удаляет указанный узел дерева из коллекции узлов дерева.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Нельзя передавать в строке, чтобы удалить узел, имеющий значение строки в виде его <xref:System.Windows.Forms.TreeNode.Text%2A> свойство.  
  
 Когда <xref:System.Windows.Forms.TreeNode> удаляется из коллекции узлов дерева, все последующие дерева, узлы, перемещаются вверх на одну позицию в коллекции.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>