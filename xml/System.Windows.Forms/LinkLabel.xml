<Type Name="LinkLabel" FullName="System.Windows.Forms.LinkLabel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="004897641318b69f837d564792cc10ebff57670a" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75178840" /></Metadata><TypeSignature Language="C#" Value="public class LinkLabel : System.Windows.Forms.Label, System.Windows.Forms.IButtonControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinkLabel extends System.Windows.Forms.Label implements class System.Windows.Forms.IButtonControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.LinkLabel" />
  <TypeSignature Language="VB.NET" Value="Public Class LinkLabel&#xA;Inherits Label&#xA;Implements IButtonControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinkLabel : System::Windows::Forms::Label, System::Windows::Forms::IButtonControl" />
  <TypeSignature Language="F#" Value="type LinkLabel = class&#xA;    inherit Label&#xA;    interface IButtonControl" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Label</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Forms.IButtonControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("LinkClicked")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
      <AttributeName>System.ComponentModel.ToolboxItem("System.Windows.Forms.Design.AutoSizeToolboxItem,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.ToolboxItem("System.Windows.Forms.Design.AutoSizeToolboxItem,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет элемент управления метками Windows, который может отображать гиперссылки.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Элемент управления <xref:System.Windows.Forms.ToolStripLabel> заменяет и добавляет функциональные возможности в элементы управления <xref:System.Windows.Forms.Label> и <xref:System.Windows.Forms.LinkLabel>. Однако элементы управления <xref:System.Windows.Forms.Label> и <xref:System.Windows.Forms.LinkLabel> сохраняются как для обратной совместимости, так и для будущего использования, если вы решили.  
  
 Элемент управления <xref:System.Windows.Forms.LinkLabel> аналогичен элементу управления <xref:System.Windows.Forms.Label> с исключением, которое может отображать гиперссылку. В тексте элемента управления можно указать несколько гиперссылок. Каждая гиперссылка может выполнять различные задачи в приложении. Например, можно использовать гиперссылку для открытия веб-сайта в Microsoft Internet Explorer или для загрузки файла журнала, связанного с приложением.  
  
 Каждая гиперссылка, отображаемая в элементе управления <xref:System.Windows.Forms.LinkLabel>, является экземпляром класса <xref:System.Windows.Forms.LinkLabel.Link>. Класс <xref:System.Windows.Forms.LinkLabel.Link> определяет отображаемую информацию, состояние и расположение гиперссылки. Кроме того, свойство <xref:System.Windows.Forms.LinkLabel.Link.LinkData%2A> класса <xref:System.Windows.Forms.LinkLabel.Link> позволяет связать сведения, например отображаемый URL-адрес, с гиперссылкой. Когда пользователь щелкает гиперссылку в элементе управления, возникает событие <xref:System.Windows.Forms.LinkLabel.LinkClicked>, и объект <xref:System.Windows.Forms.LinkLabel.Link>, представляющий гиперссылку, которая была нажата, передается как часть объекта <xref:System.Windows.Forms.LinkLabelLinkClickedEventArgs>, который передается в качестве параметра обработчику событий. Этот объект можно использовать для получения объекта <xref:System.Windows.Forms.LinkLabel.Link>, связанного с гиперссылкой, которая была нажата пользователем. Все гиперссылки, содержащиеся в элементе управления <xref:System.Windows.Forms.LinkLabel>, хранятся в экземпляре класса <xref:System.Windows.Forms.LinkLabel.LinkCollection> для элемента управления.  
  
 Добавить гиперссылку к элементу управления <xref:System.Windows.Forms.LinkLabel> можно двумя способами. Самый быстрый способ — указать <xref:System.Windows.Forms.LinkArea> и назначить его свойству <xref:System.Windows.Forms.LinkLabel.LinkArea%2A>. Это позволяет указать одну гиперссылку в тексте элемента управления. Чтобы добавить несколько гиперссылок, можно использовать метод <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A> класса <xref:System.Windows.Forms.LinkLabel.LinkCollection>, обратившись к коллекции через свойство <xref:System.Windows.Forms.LinkLabel.Links%2A>.  
  
 При создании <xref:System.Windows.Forms.LinkLabel> элемента управления в <xref:System.Windows.Forms.LinkLabel.LinkCollection>добавляется гиперссылка по умолчанию, содержащая весь текст в элементе управления <xref:System.Windows.Forms.LinkLabel>. Эту ссылку по умолчанию можно переопределить, указав новую область ссылки со свойством <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> или указав ссылку с помощью метода <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A> <xref:System.Windows.Forms.LinkLabel.LinkCollection>. Можно также удалить гиперссылку по умолчанию с помощью метода <xref:System.Windows.Forms.LinkLabel.LinkCollection.Remove%2A> класса <xref:System.Windows.Forms.LinkLabel.LinkCollection>.  
  
 Свойство <xref:System.Windows.Forms.Label.TabStop%2A> по умолчанию `true`, если в коллекции <xref:System.Windows.Forms.LinkLabel.Links%2A> есть хотя бы одна ссылка больше нулевой длины. Элемент управления <xref:System.Windows.Forms.LinkLabel> имеет одно значение <xref:System.Windows.Forms.Control.TabIndex%2A>. Однако каждая ссылка больше нулевой длины получает собственную позицию табуляции в порядке слева направо. Чтобы запретить навигацию по клавише TAB для элемента управления <xref:System.Windows.Forms.LinkLabel>, задайте для свойства <xref:System.Windows.Forms.Label.TabStop%2A> значение `false`. Однако имейте в виду, что при добавлении новых ссылок в коллекцию <xref:System.Windows.Forms.LinkLabel.Links%2A> свойство <xref:System.Windows.Forms.Label.TabStop%2A> будет автоматически установлено равным `true`.  
  
 <xref:System.Windows.Forms.LinkLabel> предоставляет ряд свойств, позволяющих определить вид отображения гиперссылок в элементе управления. Свойства <xref:System.Windows.Forms.LinkLabel.ActiveLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>и <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> определяют цвета, используемые при отображении гиперссылки в различных состояниях. Свойство <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A> определяет отображение подчеркивания, связанного с гиперссылкой.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование класса <xref:System.Windows.Forms.LinkLabel>. В примере обрабатывается событие <xref:System.Windows.Forms.LinkLabel.LinkClicked> путем открытия веб-сайта.  
  
 [!code-csharp[System.Windows.Forms.LinkLabelSimple#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelSimple/CS/form.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabelSimple#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelSimple/VB/form.vb#1)]  
  
 В следующем примере демонстрируется использование класса <xref:System.Windows.Forms.LinkLabel> с определенными несколькими разделами <xref:System.Windows.Forms.LinkArea> для вывода метки в форме. В примере показано задание свойств <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>и <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> для настройки вида <xref:System.Windows.Forms.LinkLabel>. Первый <xref:System.Windows.Forms.LinkArea> задается с помощью свойства <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType>. Дополнительные ссылки добавляются в <xref:System.Windows.Forms.LinkLabel> с помощью метода <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType>. Пример обрабатывает событие <xref:System.Windows.Forms.LinkLabel.LinkClicked>, запуская веб-браузер для гиперссылок и отображая <xref:System.Windows.Forms.MessageBox> для других ссылок.  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Label" />
    <altmember cref="T:System.Windows.Forms.LinkLabelLinkClickedEventArgs" />
    <altmember cref="T:System.Windows.Forms.LinkLabel.Link" />
    <altmember cref="T:System.Windows.Forms.LinkLabel.LinkCollection" />
    <altmember cref="T:System.Windows.Forms.ToolStripLabel" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkLabel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinkLabel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр по умолчанию класса <see cref="T:System.Windows.Forms.LinkLabel" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере демонстрируется использование класса <xref:System.Windows.Forms.LinkLabel> с определенными несколькими разделами <xref:System.Windows.Forms.LinkArea> для вывода метки в форме. В примере показано задание свойств <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>и <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> для настройки вида <xref:System.Windows.Forms.LinkLabel>. Первый <xref:System.Windows.Forms.LinkArea> задается с помощью свойства <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType>. Дополнительные ссылки добавляются в <xref:System.Windows.Forms.LinkLabel> с помощью метода <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType>. Пример обрабатывает событие <xref:System.Windows.Forms.LinkLabel.LinkClicked>, запуская веб-браузер для гиперссылок и отображая <xref:System.Windows.Forms.MessageBox> для других ссылок.  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveLinkColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ActiveLinkColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ActiveLinkColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.ActiveLinkColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ActiveLinkColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ActiveLinkColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ActiveLinkColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.LinkLabel.ActiveLinkColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает цвет, используемый при отображении активной ссылки.</summary>
        <value>Свойство <see cref="T:System.Drawing.Color" /> представляет цвет для отображения активной ссылки. Цвет по умолчанию задается операционной системой, обычно этот цвет — <see langword="Color.Red" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Активная ссылка — это ссылка, которая находится в процессе щелчка. Это похоже на состояние нажатия элемента управления <xref:System.Windows.Forms.Button>. С помощью этого свойства можно указать цвет, в котором отображается ссылка, если ссылка находится в процессе щелчка.  
  
 Существует несколько цветов, связанных со ссылкой. <xref:System.Windows.Forms.LinkLabel.LinkColor%2A> задает цвет всех ссылок, отображаемых в элементе управления <xref:System.Windows.Forms.LinkLabel>. Свойство <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> позволяет указать цвет ссылки после того, как он был посещен пользователем. Если ссылка отключена, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A> используется для отображения ссылки в отключенном состоянии.  
  
> [!NOTE]
>  При задании этого свойства убедитесь, что цвет, заданный для свойства, не конфликтует с цветом фона элемента управления, или текст отображается неправильно. Например, если цвет фона элемента управления `Color.Red` и для этого свойства задано значение `Color.Red`, текст не отображается должным образом при нажатии ссылки.  
  
   
  
## Examples  
 В следующем примере показано задание свойства <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A> с помощью перечисления <xref:System.Windows.Forms.LinkBehavior>. Также показано, как задать свойства <xref:System.Windows.Forms.LinkLabel.ActiveLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A> и <xref:System.Windows.Forms.LinkLabel.LinkVisited%2A>. Чтобы выполнить этот пример, вставьте его в пустую форму и вызовите `InitializeLinkLabel` из конструктора формы или метода `Load`.  
  
 [!code-cpp[System.Windows.Forms.LinkLabelExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabelExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabelExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.DisabledLinkColor" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.LinkColor" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.VisitedLinkColor" />
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="linkLabel.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает для элемента управления <see cref="T:System.Windows.Forms.LinkLabel" /> новый объект с поддержкой специальных возможностей.</summary>
        <returns>Новый объект <see cref="T:System.Windows.Forms.AccessibleObject" /> для элемента управления.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если метод <xref:System.Windows.Forms.LinkLabel.CreateAccessibilityInstance%2A> не вызывается явно, он будет вызван при обращении к свойству <xref:System.Windows.Forms.Control.AccessibilityObject%2A>.  
  
 Примечание. чтобы получить или задать свойство <xref:System.Windows.Forms.Control.AccessibilityObject%2A>, необходимо добавить ссылку на сборку специальных возможностей, установленную вместе с .NET Framework.  
  
 Примечания к наследникам: При переопределении <xref:System.Windows.Forms.LinkLabel.CreateAccessibilityInstance%2A> в производном классе не следует вызывать метод <xref:System.Windows.Forms.LinkLabel.CreateAccessibilityInstance%2A> базового класса.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberSignature Language="F#" Value="override this.CreateHandle : unit -&gt; unit" Usage="linkLabel.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает дескриптор для данного элемента управления. Вызов этого метода не нужен: он вызывается платформой .NET Framework. Наследующие классы при переопределении данного метода всегда должны вызывать метод <see langword="base.createHandle" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisabledLinkColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color DisabledLinkColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color DisabledLinkColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.DisabledLinkColor" />
      <MemberSignature Language="VB.NET" Value="Public Property DisabledLinkColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color DisabledLinkColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.DisabledLinkColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.LinkLabel.DisabledLinkColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает цвет, используемый при отображении неактивной ссылки.</summary>
        <value>Свойство <see cref="T:System.Drawing.Color" /> представляет цвет, которым отображается неактивная ссылка. Значение по умолчанию: <see langword="Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство позволяет указать цвет для ссылок, отключенных в <xref:System.Windows.Forms.LinkLabel>. Отключенные ссылки не приводят к возникновению события <xref:System.Windows.Forms.LinkLabel.LinkClicked>.  
  
 Существует несколько цветов, связанных со ссылкой. Все ссылки в <xref:System.Windows.Forms.LinkLabel> изначально отображаются с цветом, определенным в свойстве <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>. Свойство <xref:System.Windows.Forms.LinkLabel.ActiveLinkColor%2A> позволяет указать цвет ссылки, когда она находится в процессе щелчка. Свойство <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> позволяет указать цвет ссылки после того, как он был посещен пользователем.  
  
> [!NOTE]
>  При задании этого свойства убедитесь, что цвет, заданный для свойства, не конфликтует с цветом фона элемента управления, или текст отображается неправильно. Например, если цвет фона элемента управления `Color.Red` и для этого свойства задано значение `Color.Red`, то при отключении ссылки текст не отображается должным образом.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование класса <xref:System.Windows.Forms.LinkLabel> с определенными несколькими разделами <xref:System.Windows.Forms.LinkArea> для вывода метки в форме. В примере показано задание свойств <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>и <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> для настройки вида <xref:System.Windows.Forms.LinkLabel>. Первый <xref:System.Windows.Forms.LinkArea> задается с помощью свойства <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType>. Дополнительные ссылки добавляются в <xref:System.Windows.Forms.LinkLabel> с помощью метода <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType>. Пример обрабатывает событие <xref:System.Windows.Forms.LinkLabel.LinkClicked>, запуская веб-браузер для гиперссылок и отображая <xref:System.Windows.Forms.MessageBox> для других ссылок.  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.LinkColor" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.ActiveLinkColor" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.VisitedLinkColor" />
      </Docs>
    </Member>
    <Member MemberName="FlatStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FlatStyle FlatStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FlatStyle FlatStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.FlatStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property FlatStyle As FlatStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FlatStyle FlatStyle { System::Windows::Forms::FlatStyle get(); void set(System::Windows::Forms::FlatStyle value); };" />
      <MemberSignature Language="F#" Value="member this.FlatStyle : System.Windows.Forms.FlatStyle with get, set" Usage="System.Windows.Forms.LinkLabel.FlatStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FlatStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает стиль плоского представления элемента управления <see cref="T:System.Windows.Forms.LinkLabel" />.</summary>
        <value>Одно из значений <see cref="T:System.Windows.Forms.FlatStyle" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данное свойство не применимо к этому классу.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkArea">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.LinkArea LinkArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.LinkArea LinkArea" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.LinkArea" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkArea As LinkArea" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::LinkArea LinkArea { System::Windows::Forms::LinkArea get(); void set(System::Windows::Forms::LinkArea value); };" />
      <MemberSignature Language="F#" Value="member this.LinkArea : System.Windows.Forms.LinkArea with get, set" Usage="System.Windows.Forms.LinkLabel.LinkArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.LinkAreaEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.LinkAreaEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.LinkAreaEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LinkArea</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает диапазон текста, определяемого в качестве ссылки.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.LinkArea" /> представляет область, рассматриваемую в качестве ссылки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> предоставляет быстрый способ указания одной гиперссылки, отображаемой в тексте элемента управления <xref:System.Windows.Forms.LinkLabel>. Объект <xref:System.Windows.Forms.LinkArea> предоставляет свойства, указывающие начальную точку ссылки в тексте элемента управления и длину текста для гиперссылки. Если гиперссылка указана с помощью свойства <xref:System.Windows.Forms.LinkLabel.LinkArea%2A>, гиперссылка добавляется в <xref:System.Windows.Forms.LinkLabel.LinkCollection> элемента управления. Свойство <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> преобразует объект <xref:System.Windows.Forms.LinkArea>, назначенный ему, в объект <xref:System.Windows.Forms.LinkLabel.Link>, хранящийся в коллекции.  
  
 Чтобы добавить несколько гиперссылок в текст элемента управления, можно использовать свойство <xref:System.Windows.Forms.LinkLabel.Links%2A>. Свойство <xref:System.Windows.Forms.LinkLabel.Links%2A> позволяет получить доступ к свойствам и методам <xref:System.Windows.Forms.LinkLabel.LinkCollection>, в которых хранятся ссылки, заданные для элемента управления. Этот метод добавления ссылок на <xref:System.Windows.Forms.LinkLabel> также позволяет указать данные в свойстве <xref:System.Windows.Forms.LinkLabel.Link.LinkData%2A>, связанном с создаваемой ссылкой. Значение свойства <xref:System.Windows.Forms.LinkLabel.Link.LinkData%2A> можно использовать для хранения расположения файла, который необходимо отобразить, или адреса веб-сайта.  
  
 При создании <xref:System.Windows.Forms.LinkLabel> элемента управления в <xref:System.Windows.Forms.LinkLabel.LinkCollection>добавляется гиперссылка по умолчанию, содержащая весь текст в элементе управления <xref:System.Windows.Forms.LinkLabel>. Эту ссылку по умолчанию можно переопределить, указав новую область ссылки со свойством <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> или указав ссылку с помощью метода <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A> <xref:System.Windows.Forms.LinkLabel.LinkCollection>. Можно также удалить гиперссылку по умолчанию с помощью метода <xref:System.Windows.Forms.LinkLabel.LinkCollection.Remove%2A> класса <xref:System.Windows.Forms.LinkLabel.LinkCollection>.  
  
> [!NOTE]
>  Свойство <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> всегда возвращает первый элемент в <xref:System.Windows.Forms.LinkLabel.LinkCollection>независимо от того, как гиперссылка была добавлена в коллекцию.  
  
> [!NOTE]
>  Свойство <xref:System.Windows.Forms.LinkArea.Length%2A> в <xref:System.Windows.Forms.LinkArea> будет отличаться при вызове <xref:System.Windows.Forms.LinkLabel.UseCompatibleTextRendering%2A>, а свойство <xref:System.Windows.Forms.LinkLabel.Text%2A> содержит двухбайтовые символы. При вызове <xref:System.Windows.Forms.LinkLabel.UseCompatibleTextRendering%2A>будет возвращено число байтов в строке. В противном случае будет возвращено количество фактических символов.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование класса <xref:System.Windows.Forms.LinkLabel> с определенными несколькими разделами <xref:System.Windows.Forms.LinkArea> для вывода метки в форме. В примере показано задание свойств <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>и <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> для настройки вида <xref:System.Windows.Forms.LinkLabel>. Первый <xref:System.Windows.Forms.LinkArea> задается с помощью свойства <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType>. Дополнительные ссылки добавляются в <xref:System.Windows.Forms.LinkLabel> с помощью метода <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType>. Пример обрабатывает событие <xref:System.Windows.Forms.LinkLabel.LinkClicked>, запуская веб-браузер для гиперссылок и отображая <xref:System.Windows.Forms.MessageBox> для других ссылок.  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Свойство <see cref="P:System.Windows.Forms.LinkArea.Start" /> объекта <see cref="T:System.Windows.Forms.LinkArea" /> меньше нуля.  
  
-или- 
Свойство <see cref="P:System.Windows.Forms.LinkArea.Length" /> объекта <see cref="T:System.Windows.Forms.LinkArea" /> меньше -1.</exception>
        <altmember cref="T:System.Drawing.Point" />
      </Docs>
    </Member>
    <Member MemberName="LinkBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.LinkBehavior LinkBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.LinkBehavior LinkBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.LinkBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkBehavior As LinkBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::LinkBehavior LinkBehavior { System::Windows::Forms::LinkBehavior get(); void set(System::Windows::Forms::LinkBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.LinkBehavior : System.Windows.Forms.LinkBehavior with get, set" Usage="System.Windows.Forms.LinkLabel.LinkBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LinkBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, представляющее поведение ссылки.</summary>
        <value>Одно из значений <see cref="T:System.Windows.Forms.LinkBehavior" />. Значение по умолчанию: <see langword="LinkBehavior.SystemDefault" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство позволяет указать поведение ссылок при их отображении в элементе управления. Например, если нужно, чтобы ссылки отображались с подчеркиванием только в том случае, если указатель мыши находится над ссылкой, можно задать для этого свойства значение `LinkBehavior.HoverUnderline`. Дополнительные сведения о типах поведений, которые могут быть связаны со ссылкой, см. в разделе <xref:System.Windows.Forms.LinkBehavior>.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование класса <xref:System.Windows.Forms.LinkLabel> с определенными несколькими разделами <xref:System.Windows.Forms.LinkArea> для вывода метки в форме. В примере показано задание свойств <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>и <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> для настройки вида <xref:System.Windows.Forms.LinkLabel>. Первый <xref:System.Windows.Forms.LinkArea> задается с помощью свойства <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType>. Дополнительные ссылки добавляются в <xref:System.Windows.Forms.LinkLabel> с помощью метода <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType>. Пример обрабатывает событие <xref:System.Windows.Forms.LinkLabel.LinkClicked>, запуская веб-браузер для гиперссылок и отображая <xref:System.Windows.Forms.MessageBox> для других ссылок.  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Назначенное значение не является ни одним из значений перечислителя <see cref="T:System.Windows.Forms.LinkBehavior" />.</exception>
        <altmember cref="T:System.Windows.Forms.LinkBehavior" />
      </Docs>
    </Member>
    <Member MemberName="LinkClicked">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.LinkLabelLinkClickedEventHandler LinkClicked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.LinkLabelLinkClickedEventHandler LinkClicked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.LinkLabel.LinkClicked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LinkClicked As LinkLabelLinkClickedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::LinkLabelLinkClickedEventHandler ^ LinkClicked;" />
      <MemberSignature Language="F#" Value="member this.LinkClicked : System.Windows.Forms.LinkLabelLinkClickedEventHandler " Usage="member this.LinkClicked : System.Windows.Forms.LinkLabelLinkClickedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LinkLabelLinkClickedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при щелчке ссылки в элементе управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило, событие <xref:System.Windows.Forms.LinkLabel.LinkClicked> обрабатывается для выполнения задач, когда пользователь щелкает ссылку в элементе управления. Обработчику событий для события <xref:System.Windows.Forms.LinkLabel.LinkClicked> передается экземпляр класса <xref:System.Windows.Forms.LinkLabelLinkClickedEventArgs>, который содержит объект <xref:System.Windows.Forms.LinkLabel.Link>, связанный со ссылкой, которая была нажата. Можно использовать сведения, указанные в свойстве <xref:System.Windows.Forms.LinkLabel.Link.LinkData%2A> класса <xref:System.Windows.Forms.LinkLabel.Link>, чтобы определить, какая ссылка была нажата, или тип задачи, выполняемой при щелчке ссылки. Например, если в элементе управления <xref:System.Windows.Forms.LinkLabel> имеется объект <xref:System.Windows.Forms.LinkLabel.Link>, определенный свойством <xref:System.Windows.Forms.LinkLabel.Link.LinkData%2A> которого задано значение строки `www.microsoft.com`, эти сведения можно использовать в обработчике событий <xref:System.Windows.Forms.LinkLabel.LinkClicked> для просмотра веб-сайта.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере демонстрируется использование класса <xref:System.Windows.Forms.LinkLabel>. В примере обрабатывается событие <xref:System.Windows.Forms.LinkLabel.LinkClicked> путем открытия веб-сайта.  
  
 [!code-csharp[System.Windows.Forms.LinkLabelSimple#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelSimple/CS/form.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabelSimple#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelSimple/VB/form.vb#1)]  
  
 В следующем примере демонстрируется использование класса <xref:System.Windows.Forms.LinkLabel> с определенными несколькими разделами <xref:System.Windows.Forms.LinkArea> для вывода метки в форме. В примере показано задание свойств <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>и <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> для настройки вида <xref:System.Windows.Forms.LinkLabel>. Первый <xref:System.Windows.Forms.LinkArea> задается с помощью свойства <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType>. Дополнительные ссылки добавляются в <xref:System.Windows.Forms.LinkLabel> с помощью метода <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType>. Пример обрабатывает событие <xref:System.Windows.Forms.LinkLabel.LinkClicked>, запуская веб-браузер для гиперссылок и отображая <xref:System.Windows.Forms.MessageBox> для других ссылок.  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.LinkLabelLinkClickedEventHandler" />
        <altmember cref="M:System.Windows.Forms.LinkLabel.OnLinkClicked(System.Windows.Forms.LinkLabelLinkClickedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LinkColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color LinkColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color LinkColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.LinkColor" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color LinkColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.LinkColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.LinkLabel.LinkColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает цвет, используемый при отображении обычной ссылки.</summary>
        <value>Свойство <see cref="T:System.Drawing.Color" /> представляет цвет, используемый для отображения обычной ссылки. Цвет по умолчанию задается операционной системой, обычно этот цвет — <see langword="Color.Blue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство позволяет указать цвет, который изначально отображается для всех ссылок в <xref:System.Windows.Forms.LinkLabel>.  
  
 Существует несколько цветов, связанных со ссылкой. Свойство <xref:System.Windows.Forms.LinkLabel.ActiveLinkColor%2A> позволяет указать цвет ссылки, когда она находится в процессе щелчка. Свойство <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> позволяет указать цвет ссылки после того, как он был посещен пользователем. Если ссылка отключена, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A> используется для отображения ссылки в отключенном состоянии.  
  
> [!NOTE]
>  При задании этого свойства убедитесь, что цвет, заданный для свойства, не конфликтует с цветом фона элемента управления, или текст отображается неправильно. Например, если цвет фона элемента управления `Color.Red` и для этого свойства задано значение `Color.Red`, текст ссылки не отображается должным образом.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование класса <xref:System.Windows.Forms.LinkLabel> с определенными несколькими разделами <xref:System.Windows.Forms.LinkArea> для вывода метки в форме. В примере показано задание свойств <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>и <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> для настройки вида <xref:System.Windows.Forms.LinkLabel>. Первый <xref:System.Windows.Forms.LinkArea> задается с помощью свойства <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType>. Дополнительные ссылки добавляются в <xref:System.Windows.Forms.LinkLabel> с помощью метода <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType>. Пример обрабатывает событие <xref:System.Windows.Forms.LinkLabel.LinkClicked>, запуская веб-браузер для гиперссылок и отображая <xref:System.Windows.Forms.MessageBox> для других ссылок.  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.ActiveLinkColor" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.DisabledLinkColor" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.VisitedLinkColor" />
      </Docs>
    </Member>
    <Member MemberName="Links">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.LinkLabel.LinkCollection Links { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.LinkLabel/LinkCollection Links" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.Links" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Links As LinkLabel.LinkCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::LinkLabel::LinkCollection ^ Links { System::Windows::Forms::LinkLabel::LinkCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Links : System.Windows.Forms.LinkLabel.LinkCollection" Usage="System.Windows.Forms.LinkLabel.Links" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LinkLabel+LinkCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию ссылок, содержащихся в элементе управления <see cref="T:System.Windows.Forms.LinkLabel" />.</summary>
        <value>Класс <see cref="T:System.Windows.Forms.LinkLabel.LinkCollection" />, представляющий ссылки, содержащиеся в элементе управления <see cref="T:System.Windows.Forms.LinkLabel" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Элемент управления <xref:System.Windows.Forms.LinkLabel> может отображать любое количество ссылок в тексте элемента управления. Это свойство позволяет получить доступ к экземпляру <xref:System.Windows.Forms.LinkLabel.LinkCollection>, связанному с <xref:System.Windows.Forms.LinkLabel>, который представляет коллекцию ссылок, отображаемых в элементе управления. Затем можно использовать члены класса <xref:System.Windows.Forms.LinkLabel.LinkCollection> для добавления, удаления и поиска ссылок в коллекции. Дополнительные сведения о типах задач, которые можно выполнять с помощью коллекции ссылок, см. в разделе <xref:System.Windows.Forms.LinkLabel.LinkCollection>.  
  
 При создании <xref:System.Windows.Forms.LinkLabel> элемента управления в <xref:System.Windows.Forms.LinkLabel.LinkCollection>добавляется гиперссылка по умолчанию, содержащая весь текст в элементе управления <xref:System.Windows.Forms.LinkLabel>. Эту ссылку по умолчанию можно переопределить, указав новую область ссылки со свойством <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> или указав ссылку с помощью метода <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A> <xref:System.Windows.Forms.LinkLabel.LinkCollection>. Можно также удалить гиперссылку по умолчанию с помощью метода <xref:System.Windows.Forms.LinkLabel.LinkCollection.Remove%2A> класса <xref:System.Windows.Forms.LinkLabel.LinkCollection>.  
  
 Если не нужно указывать более одной ссылки для вывода в <xref:System.Windows.Forms.LinkLabel>, можно использовать свойство <xref:System.Windows.Forms.LinkLabel.LinkArea%2A>.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование класса <xref:System.Windows.Forms.LinkLabel> с определенными несколькими разделами <xref:System.Windows.Forms.LinkArea> для вывода метки в форме. В примере показано задание свойств <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>и <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> для настройки вида <xref:System.Windows.Forms.LinkLabel>. Первый <xref:System.Windows.Forms.LinkArea> задается с помощью свойства <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType>. Дополнительные ссылки добавляются в <xref:System.Windows.Forms.LinkLabel> с помощью метода <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType>. Пример обрабатывает событие <xref:System.Windows.Forms.LinkLabel.LinkClicked>, запуская веб-браузер для гиперссылок и отображая <xref:System.Windows.Forms.MessageBox> для других ссылок.  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.LinkLabel.LinkCollection" />
      </Docs>
    </Member>
    <Member MemberName="LinkVisited">
      <MemberSignature Language="C#" Value="public bool LinkVisited { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LinkVisited" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.LinkVisited" />
      <MemberSignature Language="VB.NET" Value="Public Property LinkVisited As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LinkVisited { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LinkVisited : bool with get, set" Usage="System.Windows.Forms.LinkLabel.LinkVisited" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, следует ли отображать ссылку как выбранную ранее.</summary>
        <value><see langword="true" />, если ссылки должны отображаться, как будто они уже были выбраны; в противном случае — <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Элемент управления <xref:System.Windows.Forms.LinkLabel> не будет автоматически Отметим, что ссылка является просмотренной ссылкой. Чтобы отобразить ссылку как посещенную, можно присвоить этому свойству значение `true` в обработчике событий для события <xref:System.Windows.Forms.LinkLabel.LinkClicked> <xref:System.Windows.Forms.LinkLabel>. Просмотренная ссылка отображается с использованием цвета, указанного в свойстве <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> элемента управления <xref:System.Windows.Forms.LinkLabel>. После закрытия формы, содержащей элемент управления <xref:System.Windows.Forms.LinkLabel>, удаляется состояние "все отображения", связанное с ссылкой. Чтобы сохранить состояние отображения ссылки, необходимо сохранить состояние отображения ссылки в параметре реестра, связанном с приложением.  
  
> [!NOTE]
>  Это свойство влияет только на первую ссылку, определенную в элементе управления <xref:System.Windows.Forms.LinkLabel>. Если в элементе управления указано более одной ссылки, используйте свойство <xref:System.Windows.Forms.LinkLabel.Link.Visited%2A> класса <xref:System.Windows.Forms.LinkLabel.Link>. Доступ ко всем ссылкам, определенным в <xref:System.Windows.Forms.LinkLabel>, можно получить с помощью свойства <xref:System.Windows.Forms.LinkLabel.Links%2A>.  
  
   
  
## Examples  
 В следующем примере показано задание свойства <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A> с помощью перечисления <xref:System.Windows.Forms.LinkBehavior>. Также показано, как задать свойства <xref:System.Windows.Forms.LinkLabel.ActiveLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A> и <xref:System.Windows.Forms.LinkLabel.LinkVisited%2A>. Чтобы выполнить этот пример, вставьте его в пустую форму и вызовите `InitializeLinkLabel` из конструктора формы или метода `Load`.  
  
 [!code-cpp[System.Windows.Forms.LinkLabelExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabelExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabelExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAutoSizeChanged">
      <MemberSignature Language="C#" Value="protected override void OnAutoSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAutoSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnAutoSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAutoSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAutoSizeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnAutoSizeChanged : EventArgs -&gt; unit" Usage="linkLabel.OnAutoSizeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Порождает событие <see cref="E:System.Windows.Forms.Label.AutoSizeChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.LinkLabel.OnAutoSizeChanged%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении <see cref="M:System.Windows.Forms.LinkLabel.OnAutoSizeChanged(System.EventArgs)" /> в производном классе обязательно вызовите метод базового класса "<see cref="M:System.Windows.Forms.LinkLabel.OnAutoSizeChanged(System.EventArgs)" />, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnEnabledChanged">
      <MemberSignature Language="C#" Value="protected override void OnEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnEnabledChanged : EventArgs -&gt; unit" Usage="linkLabel.OnEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Обеспечивает обработку события <see cref="E:System.Windows.Forms.Control.EnabledChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.LinkLabel.OnEnabledChanged%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении <see cref="M:System.Windows.Forms.LinkLabel.OnEnabledChanged(System.EventArgs)" /> в производном классе обязательно вызовите метод базового класса "<see cref="M:System.Windows.Forms.LinkLabel.OnEnabledChanged(System.EventArgs)" />, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="linkLabel.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Порождает событие <see cref="E:System.Windows.Forms.Control.FontChanged" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnGotFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotFocus : EventArgs -&gt; unit" Usage="linkLabel.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Порождает событие <see cref="E:System.Windows.Forms.Control.GotFocus" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении <see cref="M:System.Windows.Forms.LinkLabel.OnGotFocus(System.EventArgs)" /> в производном классе обязательно вызовите метод <see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /> базового класса.</para></block>
        <altmember cref="T:System.Windows.Forms.Control" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="E:System.Windows.Forms.Control.GotFocus" />
        <altmember cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="linkLabel.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.KeyEventArgs" />, содержащий данные события.</param>
        <summary>Порождает событие <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении <see cref="M:System.Windows.Forms.LinkLabel.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> в производном классе обязательно вызовите метод <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> базового класса.</para></block>
        <altmember cref="T:System.Windows.Forms.Control" />
        <altmember cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
        <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnLinkClicked">
      <MemberSignature Language="C#" Value="protected virtual void OnLinkClicked (System.Windows.Forms.LinkLabelLinkClickedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLinkClicked(class System.Windows.Forms.LinkLabelLinkClickedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnLinkClicked(System.Windows.Forms.LinkLabelLinkClickedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLinkClicked (e As LinkLabelLinkClickedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLinkClicked(System::Windows::Forms::LinkLabelLinkClickedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLinkClicked : System.Windows.Forms.LinkLabelLinkClickedEventArgs -&gt; unit&#xA;override this.OnLinkClicked : System.Windows.Forms.LinkLabelLinkClickedEventArgs -&gt; unit" Usage="linkLabel.OnLinkClicked e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LinkLabelLinkClickedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.LinkLabelLinkClickedEventArgs" />, содержащий данные события.</param>
        <summary>Порождает событие <see cref="E:System.Windows.Forms.LinkLabel.LinkClicked" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.LinkLabel.OnLinkClicked%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.LinkLabel.OnLinkClicked(System.Windows.Forms.LinkLabelLinkClickedEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.LinkLabel.OnLinkClicked(System.Windows.Forms.LinkLabelLinkClickedEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="T:System.Windows.Forms.LinkLabelLinkClickedEventArgs" />
        <altmember cref="E:System.Windows.Forms.LinkLabel.LinkClicked" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnLostFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLostFocus : EventArgs -&gt; unit" Usage="linkLabel.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Порождает событие <see cref="E:System.Windows.Forms.Control.LostFocus" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении <see cref="M:System.Windows.Forms.LinkLabel.OnLostFocus(System.EventArgs)" /> в производном классе обязательно вызовите метод <see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /> базового класса.</para></block>
        <altmember cref="T:System.Windows.Forms.Control" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="E:System.Windows.Forms.Control.LostFocus" />
        <altmember cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="linkLabel.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.MouseEventArgs" />, содержащий данные события.</param>
        <summary>Порождает событие <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении <see cref="M:System.Windows.Forms.LinkLabel.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> в производном классе обязательно вызовите метод <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> базового класса.</para></block>
        <altmember cref="T:System.Windows.Forms.Control" />
        <altmember cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : EventArgs -&gt; unit" Usage="linkLabel.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Порождает событие <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении <see cref="M:System.Windows.Forms.LinkLabel.OnMouseLeave(System.EventArgs)" /> в производном классе обязательно вызовите метод <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> базового класса.</para></block>
        <altmember cref="T:System.Windows.Forms.Control" />
        <altmember cref="T:System.EventArgs" />
        <altmember cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="linkLabel.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.MouseEventArgs" />, содержащий данные события.</param>
        <summary>Порождает событие <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении <see cref="M:System.Windows.Forms.LinkLabel.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> в производном классе обязательно вызовите метод <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> базового класса.</para></block>
        <altmember cref="T:System.Windows.Forms.Control" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
        <altmember cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="linkLabel.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.MouseEventArgs" />, содержащий данные события.</param>
        <summary>Порождает событие <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении <see cref="M:System.Windows.Forms.LinkLabel.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> в производном классе обязательно вызовите метод <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> базового класса.</para></block>
        <altmember cref="T:System.Windows.Forms.Control" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
        <altmember cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPaddingChanged">
      <MemberSignature Language="C#" Value="protected override void OnPaddingChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaddingChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnPaddingChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaddingChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaddingChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaddingChanged : EventArgs -&gt; unit" Usage="linkLabel.OnPaddingChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Порождает событие <see cref="E:System.Windows.Forms.Control.PaddingChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.LinkLabel.OnPaddingChanged%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении <see cref="M:System.Windows.Forms.LinkLabel.OnPaddingChanged(System.EventArgs)" /> в производном классе обязательно вызовите метод базового класса "<see cref="M:System.Windows.Forms.LinkLabel.OnPaddingChanged(System.EventArgs)" />, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="linkLabel.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.PaintEventArgs" />, содержащий данные события.</param>
        <summary>Порождает событие <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении <see cref="M:System.Windows.Forms.LinkLabel.OnPaint(System.Windows.Forms.PaintEventArgs)" /> в производном классе обязательно вызовите метод <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /> базового класса.</para></block>
        <altmember cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" />
        <altmember cref="T:System.Windows.Forms.PaintEventArgs" />
        <altmember cref="T:System.Windows.Forms.Control" />
      </Docs>
    </Member>
    <Member MemberName="OnPaintBackground">
      <MemberSignature Language="C#" Value="protected override void OnPaintBackground (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaintBackground(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaintBackground (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaintBackground(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaintBackground : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="linkLabel.OnPaintBackground e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.PaintEventArgs" />, содержащий данные события.</param>
        <summary>Рисует фон элемента управления.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextAlignChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextAlignChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextAlignChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnTextAlignChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextAlignChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextAlignChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextAlignChanged : EventArgs -&gt; unit" Usage="linkLabel.OnTextAlignChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Порождает событие <see cref="E:System.Windows.Forms.Label.TextAlignChanged" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Label.OnTextAlignChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextChanged : EventArgs -&gt; unit" Usage="linkLabel.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Обеспечивает обработку события <see cref="E:System.Windows.Forms.Control.TextChanged" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OverrideCursor">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.Cursor OverrideCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor OverrideCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.OverrideCursor" />
      <MemberSignature Language="VB.NET" Value="Protected Property OverrideCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Forms::Cursor ^ OverrideCursor { System::Windows::Forms::Cursor ^ get(); void set(System::Windows::Forms::Cursor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OverrideCursor : System.Windows.Forms.Cursor with get, set" Usage="System.Windows.Forms.LinkLabel.OverrideCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает указатель мыши, когда он находится в границах элемента управления <see cref="T:System.Windows.Forms.LinkLabel" />.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.Cursor" />, предназначенный для применения в том случае, когда указатель мыши находится в границах элемента управления <see cref="T:System.Windows.Forms.LinkLabel" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.LinkLabel.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает внутренний зазор (в пикселях) между краями объекта <see cref="T:System.Windows.Forms.LinkLabel" /> и его содержимым.</summary>
        <value>Значения <see cref="T:System.Windows.Forms.Padding" />, представляющие внутренний интервал (в пикселях).</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointInLink">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.LinkLabel.Link PointInLink (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Windows.Forms.LinkLabel/Link PointInLink(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.PointInLink(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Function PointInLink (x As Integer, y As Integer) As LinkLabel.Link" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Forms::LinkLabel::Link ^ PointInLink(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.PointInLink : int * int -&gt; System.Windows.Forms.LinkLabel.Link" Usage="linkLabel.PointInLink (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LinkLabel+Link</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Горизонтальная координата точки для поиска ссылки.</param>
        <param name="y">Вертикальная координата точки для поиска ссылки.</param>
        <summary>Возвращает ссылку, расположенную по указанным клиентским координатам.</summary>
        <returns>Объект <see cref="T:System.Windows.Forms.LinkLabel.Link" />, представляющий ссылку, расположенную по указанным координатам. Если точка не содержит ссылку, возвращается значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод позволяет определить, находится ли ссылка в определенной точке в элементе управления <xref:System.Windows.Forms.LinkLabel>. Этот метод можно использовать в обработчике событий для события <xref:System.Windows.Forms.Control.MouseEnter> элемента управления, чтобы определить, наведен ли указатель мыши на ссылку в элементе управления. Определив, что указатель мыши находится над ссылкой, можно отобразить дополнительные сведения о ссылке на пользователя с помощью <xref:System.Windows.Forms.StatusBar> текста или <xref:System.Windows.Forms.ToolTip>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Point" />
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool" Usage="linkLabel.ProcessDialogKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Код клавиши и флаги модификаторов.</param>
        <summary>Обрабатывает клавишу диалогового окна.</summary>
        <returns><see langword="true" />, чтобы использовать клавишу; <see langword="false" />, чтобы разрешить дальнейшую обработку.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается во время предварительной обработки сообщения для обработки символов диалогового окна, таких как TAB, RETURN, ESCAPE и клавиши со стрелками. Этот метод вызывается только в том случае, если метод `isInputKey` указывает, что элемент управления не заинтересован в ключе. `processDialogKey` просто отправляет символ в метод `processDialogKey` родителя или возвращает значение false, если у элемента управления нет родителя. Класс `Form` переопределяет этот метод для выполнения фактической обработки клавиш диалогового окна. При переопределении `processDialogKey`элемент управления должен вернуть `true`, чтобы указать, что он обработал ключ. Для ключей, которые не обрабатываются элементом управления, возвращается результат `base.processDialogChar`. При необходимости элементы управления будут переопределять этот метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="protected override void Select (bool directed, bool forward);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Select(bool directed, bool forward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.Select(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Select (directed As Boolean, forward As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Select(bool directed, bool forward);" />
      <MemberSignature Language="F#" Value="override this.Select : bool * bool -&gt; unit" Usage="linkLabel.Select (directed, forward)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directed" Type="System.Boolean" />
        <Parameter Name="forward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="directed"><see langword="true" />, чтобы указать направление элемента управления, который требуется выделить; в противном случае — <see langword="false" />.</param>
        <param name="forward"><see langword="true" /> для перемещения в прямом направлении последовательности перехода; <see langword="false" /> для перемещения в обратном направлении.</param>
        <summary>Активирует дочерний элемент управления. При необходимости указывает направление для выбора элементов управления в последовательности табуляции.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="override this.SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="linkLabel.SetBoundsCore (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x">Новая левая граница элемента управления.</param>
        <param name="y">Новая правая граница элемента управления.</param>
        <param name="width">Новая ширина элемента управления.</param>
        <param name="height">Новая высота элемента управления.</param>
        <param name="specified">Значения, которые были указаны. Этот параметр отражает намерения пользователя, а не значения, которые были изменены.</param>
        <summary>Задает границы данного элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Наследование классов может переопределить эту функцию для добавления ограничений размера. Наследуемые классы должны вызывать `base.setBoundsCore`, чтобы фактически привести к изменению границ элемента управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IButtonControl.DialogResult">
      <MemberSignature Language="C#" Value="System.Windows.Forms.DialogResult System.Windows.Forms.IButtonControl.DialogResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DialogResult System.Windows.Forms.IButtonControl.DialogResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.System#Windows#Forms#IButtonControl#DialogResult" />
      <MemberSignature Language="VB.NET" Value=" Property DialogResult As DialogResult Implements IButtonControl.DialogResult" />
      <MemberSignature Language="C++ CLI" Value="property System::Windows::Forms::DialogResult System::Windows::Forms::IButtonControl::DialogResult { System::Windows::Forms::DialogResult get(); void set(System::Windows::Forms::DialogResult value); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Forms.IButtonControl.DialogResult" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.IButtonControl.DialogResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Описание этого элемента см. в разделе <see cref="P:System.Windows.Forms.IButtonControl.DialogResult" />.</summary>
        <value>Одно из значений <see cref="T:System.Windows.Forms.DialogResult" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это член является явной реализацией члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.LinkLabel> приведен к типу интерфейса <xref:System.Windows.Forms.IButtonControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IButtonControl.NotifyDefault">
      <MemberSignature Language="C#" Value="void IButtonControl.NotifyDefault (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IButtonControl.NotifyDefault(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.System#Windows#Forms#IButtonControl#NotifyDefault(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Sub NotifyDefault (value As Boolean) Implements IButtonControl.NotifyDefault" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IButtonControl.NotifyDefault(bool value) = System::Windows::Forms::IButtonControl::NotifyDefault;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IButtonControl.NotifyDefault(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">Значение <see langword="true" />, если элемент управления должен действовать как кнопка по умолчанию; в противном случае — значение <see langword="false" />.</param>
        <summary>Уведомляет элемент управления <see cref="T:System.Windows.Forms.LinkLabel" />, что это кнопка по умолчанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Элемент управления <xref:System.Windows.Forms.LinkLabel> выглядит одинаково независимо от того, является ли он кнопкой по умолчанию, поэтому вызов этого метода не изменит внешний вид и поведение <xref:System.Windows.Forms.LinkLabel>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IButtonControl.PerformClick">
      <MemberSignature Language="C#" Value="void IButtonControl.PerformClick ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IButtonControl.PerformClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.System#Windows#Forms#IButtonControl#PerformClick" />
      <MemberSignature Language="VB.NET" Value="Sub PerformClick () Implements IButtonControl.PerformClick" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IButtonControl.PerformClick() = System::Windows::Forms::IButtonControl::PerformClick;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IButtonControl.PerformClick</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает событие <see cref="E:System.Windows.Forms.Control.Click" /> для элемента управления <see cref="T:System.Windows.Forms.LinkLabel" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов этого метода приводит к щелчку первой ссылки в <xref:System.Windows.Forms.LinkLabel.LinkCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabStop">
      <MemberSignature Language="C#" Value="public bool TabStop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TabStop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.TabStop" />
      <MemberSignature Language="VB.NET" Value="Public Property TabStop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TabStop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TabStop : bool with get, set" Usage="System.Windows.Forms.LinkLabel.TabStop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, может ли пользователь переместиться к элементу <see cref="T:System.Windows.Forms.LinkLabel" />.</summary>
        <value>Значение <see langword="true" />, если пользователь может переместиться к элементу <see cref="T:System.Windows.Forms.LinkLabel" />; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Windows.Forms.LinkLabel.TabStop%2A> по умолчанию `true`, если в коллекции <xref:System.Windows.Forms.LinkLabel.Links%2A> есть хотя бы одна ссылка больше нулевой длины. Элемент управления <xref:System.Windows.Forms.LinkLabel> имеет одно значение <xref:System.Windows.Forms.Control.TabIndex%2A>. Однако каждая ссылка больше нулевой длины получает собственную позицию табуляции в порядке слева направо. Чтобы запретить навигацию по клавише TAB для элемента управления <xref:System.Windows.Forms.LinkLabel>, задайте для свойства <xref:System.Windows.Forms.LinkLabel.TabStop%2A> значение `false`. Однако имейте в виду, что при добавлении новых ссылок в коллекцию <xref:System.Windows.Forms.LinkLabel.Links%2A> свойство <xref:System.Windows.Forms.LinkLabel.TabStop%2A> будет автоматически установлено равным `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabStopChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TabStopChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TabStopChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.LinkLabel.TabStopChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TabStopChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TabStopChanged;" />
      <MemberSignature Language="F#" Value="member this.TabStopChanged : EventHandler " Usage="member this.TabStopChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении значения свойства <see cref="P:System.Windows.Forms.Label.TabStop" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В этом примере обработчик событий сообщает о возникновении события <xref:System.Windows.Forms.LinkLabel.TabStopChanged>. Этот отчет поможет вам узнать, когда происходит событие и может помочь при отладке. Чтобы сообщить о нескольких событиях или событиях, которые происходят часто, попробуйте заменить <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> или добавив сообщение в многострочный <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы выполнить пример кода, вставьте его в проект, содержащий экземпляр типа <xref:System.Windows.Forms.LinkLabel> с именем `LinkLabel1`. Затем убедитесь, что обработчик событий связан с событием <xref:System.Windows.Forms.LinkLabel.TabStopChanged>.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#460](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#460)]
 [!code-vb[System.Windows.Forms.EventExamples#460](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#460)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.LinkLabel.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает текст, отображаемый объектом <see cref="T:System.Windows.Forms.LinkLabel" />.</summary>
        <value>Текст, отображаемый элементом управления <see cref="T:System.Windows.Forms.LinkLabel" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCompatibleTextRendering">
      <MemberSignature Language="C#" Value="public bool UseCompatibleTextRendering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCompatibleTextRendering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.UseCompatibleTextRendering" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCompatibleTextRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCompatibleTextRendering { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseCompatibleTextRendering : bool with get, set" Usage="System.Windows.Forms.LinkLabel.UseCompatibleTextRendering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, определяющее, какой класс следует использовать для визуализации текста: <see cref="T:System.Drawing.Graphics" /> ([!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]) или <see cref="T:System.Windows.Forms.TextRenderer" /> ([!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]).</summary>
        <value>Значение <see langword="true" />, если для отрисовки текста должен использоваться класс <see cref="T:System.Drawing.Graphics" /> с целью обеспечения совместимости с версиями 1.0 и 1.1 .NET Framework; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если свойство <xref:System.Windows.Forms.LinkLabel.UseCompatibleTextRendering%2A> имеет значение `false`, <xref:System.Windows.Forms.LinkArea> охватывает весь текст. Например, текст «ABCD» подготавливается к просмотру с подчеркиванием конечного пробела.  
  
 Если свойство <xref:System.Windows.Forms.LinkLabel.UseCompatibleTextRendering%2A> имеет значение `true`, <xref:System.Windows.Forms.LinkArea> не охватывает весь текст.  
  
 Свойство `UseCompatibleTextRendering` предназначено для обеспечения визуальной совместимости между элементами управления Windows Forms, которые отображают текст с помощью класса <xref:System.Windows.Forms.TextRenderer>, а также [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] и [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)] приложений, осуществляющих отрисовку пользовательского текста с помощью класса <xref:System.Drawing.Graphics>. В большинстве случаев, если приложение не обновляется с [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] или [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)], рекомендуется оставить `UseCompatibleTextRendering` в качестве значения по умолчанию `false`.  
  
 Класс <xref:System.Windows.Forms.TextRenderer> на основе [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] был представлен в [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], чтобы повысить производительность, сделать текст более предпочтительным и улучшить поддержку международных шрифтов. В более ранних версиях [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]класс <xref:System.Drawing.Graphics> на основе [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] использовался для выполнения всей отрисовки текста. [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] вычисляет интервал между символами и перенос слов по-разному от [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]. В приложении Windows Forms, которое использует класс <xref:System.Drawing.Graphics> для отрисовки текста, это может привести к тому, что текст для элементов управления, использующих <xref:System.Windows.Forms.TextRenderer>, будет отличаться от другого текста в приложении. Чтобы устранить эту несовместимость, можно задать для свойства `UseCompatibleTextRendering` значение `true` для конкретного элемента управления. Чтобы присвоить `UseCompatibleTextRendering` `true` для всех поддерживаемых элементов управления в приложении, вызовите метод <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A?displayProperty=nameWithType> с параметром `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.LinkArea" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.LinkArea" />
        <altmember cref="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering" />
      </Docs>
    </Member>
    <Member MemberName="VisitedLinkColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color VisitedLinkColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color VisitedLinkColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.VisitedLinkColor" />
      <MemberSignature Language="VB.NET" Value="Public Property VisitedLinkColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color VisitedLinkColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.VisitedLinkColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.LinkLabel.VisitedLinkColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает цвет, используемый при отображении ранее выбранной ссылки.</summary>
        <value>Свойство <see cref="T:System.Drawing.Color" /> представляет цвет, используемый при отображении ранее выбранной ссылки. Цвет по умолчанию задается операционной системой, обычно этот цвет — <see langword="Color.Purple" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство позволяет указать цвет, отображаемый для всех ссылок в `LinkLabel`<xref:System.Windows.Forms>, которые были посещены пользователем.  
  
 Существует несколько цветов, связанных со ссылкой. Все ссылки в <xref:System.Windows.Forms.LinkLabel> изначально отображаются с цветом, определенным в свойстве <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>. Свойство <xref:System.Windows.Forms.LinkLabel.ActiveLinkColor%2A> позволяет указать цвет ссылки, когда она находится в процессе щелчка. Если ссылка отключена, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A> используется для отображения ссылки в отключенном состоянии.  
  
> [!NOTE]
>  При задании этого свойства убедитесь, что цвет, заданный для свойства, не конфликтует с цветом фона элемента управления, или текст отображается неправильно. Например, если цвет фона элемента управления `Color.Red`, а это свойство имеет значение `Color.Red`, текст не отображается должным образом, если ссылка отображается как посещенная ссылка.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование класса <xref:System.Windows.Forms.LinkLabel> с определенными несколькими разделами <xref:System.Windows.Forms.LinkArea> для вывода метки в форме. В примере показано задание свойств <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>и <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> для настройки вида <xref:System.Windows.Forms.LinkLabel>. Первый <xref:System.Windows.Forms.LinkArea> задается с помощью свойства <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType>. Дополнительные ссылки добавляются в <xref:System.Windows.Forms.LinkLabel> с помощью метода <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType>. Пример обрабатывает событие <xref:System.Windows.Forms.LinkLabel.LinkClicked>, запуская веб-браузер для гиперссылок и отображая <xref:System.Windows.Forms.MessageBox> для других ссылок.  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.ActiveLinkColor" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.DisabledLinkColor" />
        <altmember cref="P:System.Windows.Forms.LinkLabel.LinkColor" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message msg);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef msg As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % msg);" />
      <MemberSignature Language="F#" Value="override this.WndProc : Message -&gt; unit" Usage="linkLabel.WndProc msg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="msg">Сообщение для обработки.</param>
        <summary>Обрабатывает указанное сообщение Windows.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для работы с неуправляемым кодом. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>
