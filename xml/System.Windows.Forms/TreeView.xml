<Type Name="TreeView" FullName="System.Windows.Forms.TreeView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="600963329323df83bc9df80ba0823c6f29a445cc" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65004906" /></Metadata><TypeSignature Language="C#" Value="public class TreeView : System.Windows.Forms.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TreeView extends System.Windows.Forms.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TreeView" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeView&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeView : System::Windows::Forms::Control" />
  <TypeSignature Language="F#" Value="type TreeView = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("AfterSelect")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Nodes")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TreeViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.Ask)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TreeViewDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.TreeViewDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Отображает иерархическую коллекцию помеченных элементов, каждый из которых представлен объектом <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Коллекция содержит все объекты, назначенные <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.TreeNode>элементууправления <xref:System.Windows.Forms.TreeView.Nodes%2A> . Узлы дерева в этой коллекции называются корневыми узлами дерева. Любой узел дерева, который впоследствии добавляется в корневой узел дерева, называется дочерним узлом. Поскольку каждый <xref:System.Windows.Forms.TreeNode> из них может содержать коллекцию других <xref:System.Windows.Forms.TreeNode> объектов, может оказаться затруднительным определить ваше расположение в древовидной структуре при итерации по коллекции. Можно выполнить синтаксический <xref:System.Windows.Forms.TreeNode.FullPath%2A?displayProperty=nameWithType> анализ строки, <xref:System.Windows.Forms.TreeView.PathSeparator%2A> используя строковое <xref:System.Windows.Forms.TreeNode> значение, чтобы определить начало и конец метки.  
  
 Изображения можно отобразить рядом с узлами дерева <xref:System.Windows.Forms.ImageList> , назначив <xref:System.Windows.Forms.TreeView.ImageList%2A> свойству свойство и ссылаясь на значение <xref:System.Drawing.Image> индекса объекта в, <xref:System.Windows.Forms.ImageList> чтобы назначить <xref:System.Drawing.Image>его. Используйте следующие свойства для назначения изображений:  
  
-   <xref:System.Drawing.Image> Присвойте <xref:System.Windows.Forms.TreeView.ImageIndex%2A> свойству значение индекса объекта, который требуется отобразить, если узел дерева не выбран.  
  
-   Задайте для <xref:System.Drawing.Image> свойства значение индекса объекта, который должен отображаться при выборе узла дерева. <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A>  
  
 Изображения, на которые ссылаются <xref:System.Windows.Forms.TreeView.ImageIndex%2A> значения <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> свойств и, являются изображениями по умолчанию, которые отображаются всеми узлами дерева <xref:System.Windows.Forms.TreeView.Nodes%2A> , назначенными коллекции. Отдельные узлы дерева могут переопределять образы по умолчанию, <xref:System.Windows.Forms.TreeNode.ImageIndex%2A?displayProperty=nameWithType> устанавливая свойства и <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A?displayProperty=nameWithType> .  
  
 Изображения состояния, отображаемые в <xref:System.Windows.Forms.TreeView> , по умолчанию имеют размер 16 x 16 пикселей. <xref:System.Windows.Forms.ImageList.ImageSize%2A> Установка свойства<xref:System.Windows.Forms.TreeView.StateImageList%2A> объекта не влияет на отображение изображений. Однако размер изображений состояния изменяется в соответствии с параметром DPI системы, если файл App. config содержит следующую запись:  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
  
```  
  
 Узлы дерева можно разворачивать для просмотра следующего уровня дочерних узлов дерева. Пользователь может развернуть <xref:System.Windows.Forms.TreeNode> элемент, нажав кнопку со знаком "плюс" (+), если он отображается рядом <xref:System.Windows.Forms.TreeNode>с, <xref:System.Windows.Forms.TreeNode> или можно <xref:System.Windows.Forms.TreeNode.Expand%2A?displayProperty=nameWithType> развернуть, вызвав метод. Чтобы развернуть все уровни дочерних узлов дерева в <xref:System.Windows.Forms.TreeNode.Nodes%2A> коллекции, <xref:System.Windows.Forms.TreeNode.ExpandAll%2A> вызовите метод. Можно свернуть дочерний <xref:System.Windows.Forms.TreeNode> уровень, <xref:System.Windows.Forms.TreeNode.Collapse%2A?displayProperty=nameWithType> вызвав метод, или пользователь может нажать кнопку со знаком минуса (-), если он отображается рядом с <xref:System.Windows.Forms.TreeNode>. Можно также вызвать <xref:System.Windows.Forms.TreeNode.Toggle%2A?displayProperty=nameWithType> метод для переключения между развернутым и свернутым состояниями.  
  
 Узлы дерева могут дополнительно отображать флажки. Чтобы отобразить флажки, установите <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> <xref:System.Windows.Forms.TreeView> для `true`свойства объекта значение. Свойство устанавливается в `true` значение для узлов дерева, которые находятся в установленном состоянии. <xref:System.Windows.Forms.TreeNode.Checked%2A>  
  
> [!NOTE]
>  Установка свойства из <xref:System.Windows.Forms.TreeView.BeforeCheck> события или <xref:System.Windows.Forms.TreeView.AfterCheck> приводит к тому, что событие вызывается несколько раз и может привести к непредвиденному поведению. <xref:System.Windows.Forms.TreeNode.Checked%2A?displayProperty=nameWithType> Например, <xref:System.Windows.Forms.TreeNode.Checked%2A> свойство можно задать в обработчике событий при рекурсивном обновлении дочерних узлов, чтобы пользователю не нужно было расширять и проверять каждый из них по отдельности. Чтобы предотвратить многократное возникновение события, добавьте в обработчик событий логику, которая выполняет только рекурсивный код, если <xref:System.Windows.Forms.TreeViewEventArgs.Action%2A> свойство <xref:System.Windows.Forms.TreeViewEventArgs> объекта не имеет значение <xref:System.Windows.Forms.TreeViewAction.Unknown?displayProperty=nameWithType>. Пример того, как это сделать, см. в разделе <xref:System.Windows.Forms.TreeView.AfterCheck> «пример» событий или. <xref:System.Windows.Forms.TreeView.BeforeCheck>  
  
 Внешний вид <xref:System.Windows.Forms.TreeView> элемента управления можно изменить, задав некоторые свойства его отображения и стиля. Параметр <xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A> <xref:System.Windows.Forms.TreeNode> для `true` отображения кнопки со знаком «плюс» или «минус-знак» рядом с каждым, который можно развернуть или свернуть соответственно. Присвоение <xref:System.Windows.Forms.TreeView.ShowRootLines%2A> <xref:System.Windows.Forms.TreeView> свойству значения приводиткотображениюлиний,объединяющихвсеузлы`true` корневого дерева. Можно отобразить линии, соединяющие узлы дочернего дерева с их корневым узлом <xref:System.Windows.Forms.TreeView.ShowLines%2A> , задав `true`для свойства значение. Установка свойства для `true` изменения внешнего вида меток узлов дерева по мере того, как на них наведен указатель мыши. <xref:System.Windows.Forms.TreeView.HotTracking%2A> При горячей отслеживании метки узла дерева принимают вид гиперссылки. Можно также полностью настроить внешний вид <xref:System.Windows.Forms.TreeView> элемента управления. Для этого задайте <xref:System.Windows.Forms.TreeView.DrawMode%2A> для свойства значение, отличное от <xref:System.Windows.Forms.TreeViewDrawMode.Normal?displayProperty=nameWithType> , и обработайте <xref:System.Windows.Forms.TreeView.DrawNode> событие.  
  
> [!NOTE]
>  При задании <xref:System.Windows.Forms.TreeView.CheckBoxes%2A>свойств <xref:System.Windows.Forms.TreeView.Scrollable%2A>, <xref:System.Windows.Forms.TreeView.ImageIndex%2A>, и <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> во время выполнения этот <xref:System.Windows.Forms.TreeView> маркер создается повторно (см <xref:System.Windows.Forms.Control.RecreateHandle%2A?displayProperty=nameWithType>.) для обновления внешнего вида элемента управления. Это приводит к тому, что все узлы дерева будут свернуты, за исключением выбранного <xref:System.Windows.Forms.TreeNode>.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Windows.Forms.TreeView> элемента управления.  
  
 [!code-csharp[TreeViewMisc#10](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewMisc/cs/form1.cs#10)]
 [!code-vb[TreeViewMisc#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewMisc/vb/form1.vb#10)]  
  
 В следующем примере более сложного примера кода отображаются сведения о клиенте в <xref:System.Windows.Forms.TreeView> элементе управления. Узлы корневого дерева отображают имена клиентов, а дочерние узлы дерева отображают номера заказов, назначенные каждому клиенту. В этом примере 1 000 клиентов отображаются с 15 заказами. <xref:System.Windows.Forms.TreeView> Перерисовка отключается <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> с помощью методов и <xref:System.Windows.Forms.TreeView.EndUpdate%2A> , а во время создания и прорисовки <xref:System.Windows.Forms.TreeNode> объектов отображается ожидание <xref:System.Windows.Forms.Cursor> . В этом примере требуется `Customer` объект, который может содержать `Order` коллекцию объектов. Также требуется наличие файла курсора с именем `MyWait.cur` в каталоге приложения и создания экземпляра <xref:System.Windows.Forms.TreeView> элемента управления в <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.TreeNode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как изменить состояние <xref:System.Windows.Forms.TreeView> свертывания для, чтобы были видны все проверенные узлы. Во-первых, все узлы развернуты, и для <xref:System.Windows.Forms.TreeView.BeforeCollapse> события добавляется обработчик. Далее будут свернуты все узлы. Обработчик <xref:System.Windows.Forms.TreeView.BeforeCollapse> событий определяет, имеет ли данный узел проверяются дочерние узлы. Если узел имеет проверенные дочерние элементы, свертывание для этого узла отменяется. Чтобы разрешить сворачивание стандартного узла при щелчке знака «минус» рядом с узлом, <xref:System.Windows.Forms.TreeView.BeforeCollapse> обработчик событий затем удаляется.  
  
 Это поведение также можно реализовать, обрабатывая <xref:System.Windows.Forms.TreeView.BeforeExpand> событие, как показано в примере для этой статьи.  
  
 [!code-cpp[TreeViewShowCheckedNodes2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewShowCheckedNodes2/CPP/treeviewshowcheckednodes2.cpp#1)]
 [!code-csharp[TreeViewShowCheckedNodes2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewShowCheckedNodes2/CS/treeviewshowcheckednodes2.cs#1)]
 [!code-vb[TreeViewShowCheckedNodes2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewShowCheckedNodes2/VB/treeviewshowcheckednodes2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="AfterCheck">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewEventHandler AfterCheck;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewEventHandler AfterCheck" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.AfterCheck" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AfterCheck As TreeViewEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeViewEventHandler ^ AfterCheck;" />
      <MemberSignature Language="F#" Value="member this.AfterCheck : System.Windows.Forms.TreeViewEventHandler " Usage="member this.AfterCheck : System.Windows.Forms.TreeViewEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после установки флажка для узла дерева.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Установка свойства из <xref:System.Windows.Forms.TreeView.BeforeCheck> обработчика событий или <xref:System.Windows.Forms.TreeView.AfterCheck> вызывает исключение события несколько раз и может привести к непредвиденному поведению. <xref:System.Windows.Forms.TreeNode.Checked%2A?displayProperty=nameWithType> Чтобы предотвратить многократное возникновение события, добавьте в обработчик событий логику, которая выполняет только рекурсивный код, если <xref:System.Windows.Forms.TreeViewEventArgs.Action%2A> свойство <xref:System.Windows.Forms.TreeViewEventArgs> объекта не имеет значение <xref:System.Windows.Forms.TreeViewAction.Unknown?displayProperty=nameWithType>.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода обновляются все дочерние узлы дерева <xref:System.Windows.Forms.TreeNode> , когда пользователь изменяет состояние checked. Этот код требует <xref:System.Windows.Forms.Form> наличия объекта <xref:System.Windows.Forms.TreeView> с <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeNodeCollection>, у которого есть объекты. Объект <xref:System.Windows.Forms.TreeNodeCollection> должен иметь узлы дерева с дочерними узлами.  
  
 [!code-cpp[TreeView.AfterCheck_BeforeCheck#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/CPP/tn_checked.cpp#1)]
 [!code-csharp[TreeView.AfterCheck_BeforeCheck#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/CS/tn_checked.cs#1)]
 [!code-vb[TreeView.AfterCheck_BeforeCheck#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/VB/tn_checked.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.CheckBoxes" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeCheck" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeCheck(System.Windows.Forms.TreeViewCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="AfterCollapse">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewEventHandler AfterCollapse;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewEventHandler AfterCollapse" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.AfterCollapse" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AfterCollapse As TreeViewEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeViewEventHandler ^ AfterCollapse;" />
      <MemberSignature Language="F#" Value="member this.AfterCollapse : System.Windows.Forms.TreeViewEventHandler " Usage="member this.AfterCollapse : System.Windows.Forms.TreeViewEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после свертывания узла дерева.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода обновляются все дочерние узлы дерева <xref:System.Windows.Forms.TreeNode> , когда пользователь изменяет состояние checked. Этот код требует <xref:System.Windows.Forms.Form> наличия объекта <xref:System.Windows.Forms.TreeView> с <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeNodeCollection>, у которого есть объекты. Объект <xref:System.Windows.Forms.TreeNodeCollection> должен иметь узлы дерева с дочерними узлами.  
  
 [!code-cpp[TreeView.AfterCheck_BeforeCheck#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/CPP/tn_checked.cpp#1)]
 [!code-csharp[TreeView.AfterCheck_BeforeCheck#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/CS/tn_checked.cs#1)]
 [!code-vb[TreeView.AfterCheck_BeforeCheck#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/VB/tn_checked.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterCollapse(System.Windows.Forms.TreeViewEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeCollapse" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="AfterExpand">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewEventHandler AfterExpand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewEventHandler AfterExpand" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.AfterExpand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AfterExpand As TreeViewEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeViewEventHandler ^ AfterExpand;" />
      <MemberSignature Language="F#" Value="member this.AfterExpand : System.Windows.Forms.TreeViewEventHandler " Usage="member this.AfterExpand : System.Windows.Forms.TreeViewEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после развертывания узла дерева.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В этом примере обработчик событий сообщает о возникновении <xref:System.Windows.Forms.TreeView.AfterExpand> события. Этот отчет поможет вам узнать, когда происходит событие и может помочь при отладке. Чтобы сообщить о нескольких событиях или о событиях, которые происходят часто, рассмотрите <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> или добавления сообщения в многострочный <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы выполнить пример кода, вставьте его в проект, содержащий экземпляр типа <xref:System.Windows.Forms.TreeView> с именем. `TreeView1` Затем убедитесь, что обработчик событий связан с <xref:System.Windows.Forms.TreeView.AfterExpand> событием.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#631](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#631)]
 [!code-vb[System.Windows.Forms.EventExamples#631](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#631)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterExpand(System.Windows.Forms.TreeViewEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeExpand" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="AfterLabelEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.NodeLabelEditEventHandler AfterLabelEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.NodeLabelEditEventHandler AfterLabelEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.AfterLabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AfterLabelEdit As NodeLabelEditEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::NodeLabelEditEventHandler ^ AfterLabelEdit;" />
      <MemberSignature Language="F#" Value="member this.AfterLabelEdit : System.Windows.Forms.NodeLabelEditEventHandler " Usage="member this.AfterLabelEdit : System.Windows.Forms.NodeLabelEditEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.NodeLabelEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после выполнения редактирования текстовой метки узла.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Следующий пример кода позволяет пользователю изменять некорневые узлы дерева с помощью <xref:System.Windows.Forms.ContextMenu>. Когда пользователь щелкает правой кнопкой мыши, <xref:System.Windows.Forms.TreeNode> в этой позиции определяется и сохраняется в переменной с именем. `mySelectedNode` Если был выбран некорневой узел дерева, он переводится в изменяемое состояние, что позволяет пользователю изменять метку узла. После того как пользователь прекратит редактирование метки узла дерева, новый текст метки будет оценен и сохранен. В этом примере несколько символов считаются недопустимыми в тексте метки. Если один из недопустимых символов находится в строке метки или строка пуста, пользователь получает извещение об ошибке, а метка возвращается к предыдущему тексту.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="AfterSelect">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewEventHandler AfterSelect;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewEventHandler AfterSelect" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.AfterSelect" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AfterSelect As TreeViewEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeViewEventHandler ^ AfterSelect;" />
      <MemberSignature Language="F#" Value="member this.AfterSelect : System.Windows.Forms.TreeViewEventHandler " Usage="member this.AfterSelect : System.Windows.Forms.TreeViewEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после выбора узла дерева.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие не происходит при выборе узла. Чтобы определить, был ли удален выбор, можно протестировать <xref:System.Windows.Forms.TreeNode.IsSelected%2A?displayProperty=nameWithType> свойство.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано, <xref:System.Windows.Forms.TreeViewAction> как использовать перечисление. Чтобы выполнить этот пример, вставьте следующий код в форму, содержащую <xref:System.Windows.Forms.TreeView> элемент управления с именем. `TreeView1` В этом примере предполагается, что `TreeView1` заполняется элементами, <xref:System.Windows.Forms.TreeView.AfterSelect> а событие подключается к обработчику событий, определенному в примере.  
  
 [!code-cpp[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeSelect" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.MouseUp" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsSelected" />
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TreeView.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает цвет фона для элемента управления.</summary>
        <value>Объект <see cref="T:System.Drawing.Color" />, представляющий цвет фона элемента управления. Значением по умолчанию является значение свойства <see cref="P:System.Windows.Forms.Control.DefaultBackColor" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.TreeView.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает фоновое изображение для элемента управления <see cref="T:System.Windows.Forms.TreeView" />.</summary>
        <value>Объект <see cref="T:System.Drawing.Image" />, который является фоновым изображением для элемента управления <see cref="T:System.Windows.Forms.TreeView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данное свойство не применимо к этому классу.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении свойства <see cref="P:System.Windows.Forms.TreeView.BackgroundImage" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.TreeView.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает структуру фонового изображения для элемента управления <see cref="T:System.Windows.Forms.TreeView" />.</summary>
        <value>Одно из значений <see cref="T:System.Windows.Forms.ImageLayout" />. Значение по умолчанию — <see cref="F:System.Windows.Forms.ImageLayout.Tile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство, метод или событие не относится к этому классу.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении свойства <see cref="P:System.Windows.Forms.TreeView.BackgroundImageLayout" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeCheck">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewCancelEventHandler BeforeCheck;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewCancelEventHandler BeforeCheck" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.BeforeCheck" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeforeCheck As TreeViewCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeViewCancelEventHandler ^ BeforeCheck;" />
      <MemberSignature Language="F#" Value="member this.BeforeCheck : System.Windows.Forms.TreeViewCancelEventHandler " Usage="member this.BeforeCheck : System.Windows.Forms.TreeViewCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед установкой флажка для узла дерева.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Установка свойства из <xref:System.Windows.Forms.TreeView.BeforeCheck> события или <xref:System.Windows.Forms.TreeView.AfterCheck> приводит к тому, что событие вызывается несколько раз и может привести к непредвиденному поведению. <xref:System.Windows.Forms.TreeNode.Checked%2A?displayProperty=nameWithType> Например, <xref:System.Windows.Forms.TreeNode.Checked%2A> свойство может быть задано в обработчике событий при рекурсивном обновлении дочерних узлов, чтобы пользователю не нужно было расширять и проверять каждый из них по отдельности. Чтобы предотвратить многократное возникновение события, добавьте в обработчик событий логику, которая выполняет только рекурсивный код, если <xref:System.Windows.Forms.TreeViewEventArgs.Action%2A> свойство <xref:System.Windows.Forms.TreeViewEventArgs> объекта не имеет значение <xref:System.Windows.Forms.TreeViewAction.Unknown?displayProperty=nameWithType>.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода обновляются все дочерние узлы дерева <xref:System.Windows.Forms.TreeNode> , когда пользователь изменяет состояние checked. Этот код требует <xref:System.Windows.Forms.Form> наличия объекта <xref:System.Windows.Forms.TreeView> с <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeNodeCollection>, у которого есть объекты. Объект <xref:System.Windows.Forms.TreeNodeCollection> должен иметь узлы дерева с дочерними узлами.  
  
 [!code-cpp[TreeView.AfterCheck_BeforeCheck#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/CPP/tn_checked.cpp#1)]
 [!code-csharp[TreeView.AfterCheck_BeforeCheck#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/CS/tn_checked.cs#1)]
 [!code-vb[TreeView.AfterCheck_BeforeCheck#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView.AfterCheck_BeforeCheck/VB/tn_checked.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.CheckBoxes" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeCheck(System.Windows.Forms.TreeViewCancelEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterCheck" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BeforeCollapse">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewCancelEventHandler BeforeCollapse;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewCancelEventHandler BeforeCollapse" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.BeforeCollapse" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeforeCollapse As TreeViewCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeViewCancelEventHandler ^ BeforeCollapse;" />
      <MemberSignature Language="F#" Value="member this.BeforeCollapse : System.Windows.Forms.TreeViewCancelEventHandler " Usage="member this.BeforeCollapse : System.Windows.Forms.TreeViewCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед свертыванием узла дерева.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано, как изменить состояние <xref:System.Windows.Forms.TreeView> свертывания для, чтобы были видны все проверенные узлы. Во-первых, все узлы развернуты, и для <xref:System.Windows.Forms.TreeView.BeforeCollapse> события добавляется обработчик. Далее будут свернуты все узлы. Обработчик <xref:System.Windows.Forms.TreeView.BeforeCollapse> событий определяет, имеет ли данный узел проверяются дочерние узлы. Если узел имеет проверенные дочерние элементы, свертывание для этого узла отменяется. Чтобы разрешить сворачивание стандартного узла при щелчке знака «минус» рядом с узлом, <xref:System.Windows.Forms.TreeView.BeforeCollapse> обработчик событий затем удаляется.  
  
 Это поведение также можно реализовать, обрабатывая <xref:System.Windows.Forms.TreeView.BeforeExpand> событие, как показано в примере для этой статьи.  
  
 Полный пример см. в разделе Справочник <xref:System.Windows.Forms.TreeView.%23ctor%2A> по конструктору.  
  
 [!code-cpp[TreeViewShowCheckedNodes2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewShowCheckedNodes2/CPP/treeviewshowcheckednodes2.cpp#2)]
 [!code-csharp[TreeViewShowCheckedNodes2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewShowCheckedNodes2/CS/treeviewshowcheckednodes2.cs#2)]
 [!code-vb[TreeViewShowCheckedNodes2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewShowCheckedNodes2/VB/treeviewshowcheckednodes2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterCollapse" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterCollapse(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BeforeExpand">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewCancelEventHandler BeforeExpand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewCancelEventHandler BeforeExpand" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.BeforeExpand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeforeExpand As TreeViewCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeViewCancelEventHandler ^ BeforeExpand;" />
      <MemberSignature Language="F#" Value="member this.BeforeExpand : System.Windows.Forms.TreeViewCancelEventHandler " Usage="member this.BeforeExpand : System.Windows.Forms.TreeViewCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед развертыванием узла дерева.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано, как изменить состояние <xref:System.Windows.Forms.TreeView> свертывания для, чтобы были видны все проверенные узлы. Во-первых, все узлы свернуты, и для <xref:System.Windows.Forms.TreeView.BeforeExpand> события добавляется обработчик. Далее разворачиваются все узлы. Обработчик <xref:System.Windows.Forms.TreeView.BeforeExpand> событий определяет, имеет ли данный узел проверяются дочерние узлы. Если узел не имеет проверенных дочерних элементов, расширение для этого узла отменяется. Чтобы разрешить расширение стандартного узла при щелчке знака «плюс» рядом с узлом, <xref:System.Windows.Forms.TreeView.BeforeExpand> обработчик событий затем удаляется.  
  
 Это поведение также можно реализовать, обрабатывая <xref:System.Windows.Forms.TreeView.BeforeCollapse> событие, как показано в примере для этой статьи.  
  
 Полный пример см. в <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> разделе справки.  
  
 [!code-cpp[TreeViewShowCheckedNodes1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/CPP/treeviewshowcheckednodes1.cpp#2)]
 [!code-csharp[TreeViewShowCheckedNodes1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/CS/treeviewshowcheckednodes1.cs#2)]
 [!code-vb[TreeViewShowCheckedNodes1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/VB/treeviewshowcheckednodes1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterExpand" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterExpand(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BeforeLabelEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.NodeLabelEditEventHandler BeforeLabelEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.NodeLabelEditEventHandler BeforeLabelEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeforeLabelEdit As NodeLabelEditEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::NodeLabelEditEventHandler ^ BeforeLabelEdit;" />
      <MemberSignature Language="F#" Value="member this.BeforeLabelEdit : System.Windows.Forms.NodeLabelEditEventHandler " Usage="member this.BeforeLabelEdit : System.Windows.Forms.NodeLabelEditEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.NodeLabelEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед изменением текста метки узла дерева.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Windows.Forms.TreeView.BeforeLabelEdit> <xref:System.Windows.Forms.TreeView.AfterSelect> члены и <xref:System.Windows.Forms.TreeView.TopNode%2A> . Чтобы выполнить этот пример, вставьте следующий код в форму, содержащую `TreeView` элемент управления с именем. `TreeView1` Вызовите `Load` метод в конструкторе или методе формы. `InitializeTreeView`  
  
 [!code-cpp[System.Windows.Forms.TreeViewAndPrintPreview#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TreeViewAndPrintPreview#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.TreeViewAndPrintPreview#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BeforeSelect">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeViewCancelEventHandler BeforeSelect;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeViewCancelEventHandler BeforeSelect" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.BeforeSelect" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeforeSelect As TreeViewCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeViewCancelEventHandler ^ BeforeSelect;" />
      <MemberSignature Language="F#" Value="member this.BeforeSelect : System.Windows.Forms.TreeViewCancelEventHandler " Usage="member this.BeforeSelect : System.Windows.Forms.TreeViewCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед выбором узла дерева.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В этом примере обработчик событий сообщает о возникновении <xref:System.Windows.Forms.TreeView.BeforeSelect> события. Этот отчет поможет вам узнать, когда происходит событие и может помочь при отладке. Чтобы сообщить о нескольких событиях или о событиях, которые происходят часто, рассмотрите <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> или добавления сообщения в многострочный <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы выполнить пример кода, вставьте его в проект, содержащий экземпляр типа <xref:System.Windows.Forms.TreeView> с именем. `TreeView1` Затем убедитесь, что обработчик событий связан с <xref:System.Windows.Forms.TreeView.BeforeSelect> событием.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#635](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#635)]
 [!code-vb[System.Windows.Forms.EventExamples#635](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#635)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterSelect" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public void BeginUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.BeginUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginUpdate();" />
      <MemberSignature Language="F#" Value="member this.BeginUpdate : unit -&gt; unit" Usage="treeView.BeginUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Отключает любую перерисовку представления в виде дерева.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы обеспечить производительность <xref:System.Windows.Forms.TreeView>, когда элементы добавляются по одному за раз, <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> вызовите метод. Метод предотвращает прорисовку элемента управления <xref:System.Windows.Forms.TreeView.EndUpdate%2A> до вызова метода. <xref:System.Windows.Forms.TreeView.BeginUpdate%2A>  
  
 Предпочтительным способом добавления элементов в элемент управления представлением в виде дерева является использование <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> метода для добавления массива элементов узла дерева в представление в виде дерева. Однако, если требуется добавить элементы по одному, используйте <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> метод, чтобы <xref:System.Windows.Forms.TreeView> предотвратить прорисовку элемента управления во время операций добавления. Чтобы разрешить элементу управления возобновить рисование, вызовите метод, <xref:System.Windows.Forms.TreeView.EndUpdate%2A> когда все узлы дерева были добавлены в представление в виде дерева.  
  
   
  
## Examples  
 В следующем примере кода отображаются сведения о клиенте <xref:System.Windows.Forms.TreeView> в элементе управления. Узлы корневого дерева отображают имена клиентов, а дочерние узлы дерева отображают номера заказов, назначенные каждому клиенту. В этом примере 1 000 клиентов отображаются с 15 заказами. <xref:System.Windows.Forms.TreeView> Перерисовка отключается <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> с помощью методов и <xref:System.Windows.Forms.TreeView.EndUpdate%2A> , а во время создания и прорисовки <xref:System.Windows.Forms.TreeNode> объектов отображается ожидание <xref:System.Windows.Forms.Cursor> . В этом примере требуется `Customer` объект, который может содержать `Order` коллекцию объектов. Также требуется наличие файла курсора с именем `MyWait.cur` в каталоге приложения и создания экземпляра <xref:System.Windows.Forms.TreeView> элемента управления в <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.EndUpdate" />
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Windows.Forms.BorderStyle with get, set" Usage="System.Windows.Forms.TreeView.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает стиль границы элемента управления иерархического представления.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Windows.Forms.BorderStyle" />. Значение по умолчанию — <see cref="F:System.Windows.Forms.BorderStyle.Fixed3D" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если свойство имеет <xref:System.Windows.Forms.BorderStyle.Fixed3D>значение, то <xref:System.Windows.Forms.TreeView> имеет Утопленный, трехмерный вид. <xref:System.Windows.Forms.TreeView.BorderStyle%2A> Чтобы отобразить плоскую, тонкую границу вокруг <xref:System.Windows.Forms.TreeView> элемента управления, <xref:System.Windows.Forms.BorderStyle> присвойте свойству <xref:System.Windows.Forms.BorderStyle.FixedSingle>значение.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Windows.Forms.BorderStyle> перечисление <xref:System.Windows.Forms.TreeView.BorderStyle%2A>и свойства <xref:System.Windows.Forms.TreeView.ShowLines%2A>, <xref:System.Windows.Forms.TreeView.Scrollable%2A> <xref:System.Windows.Forms.TreeView.HideSelection%2A> , и <xref:System.Windows.Forms.TreeView.ShowRootLines%2A> . Чтобы выполнить этот пример, вставьте следующий код в форму и вызовите `InitializeTreeView` метод в конструкторе или `Load` методе формы.  
  
 [!code-cpp[System.Windows.Forms.TreeViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TreeViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.TreeViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Присваиваемое значение не относится к значениям <see cref="T:System.Windows.Forms.BorderStyle" />.</exception>
        <altmember cref="T:System.Windows.Forms.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="CheckBoxes">
      <MemberSignature Language="C#" Value="public bool CheckBoxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckBoxes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.CheckBoxes" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckBoxes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckBoxes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckBoxes : bool with get, set" Usage="System.Windows.Forms.TreeView.CheckBoxes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, отображаются ли флажки рядом с узлами дерева в элементе управления иерархического представления.</summary>
        <value>Значение <see langword="true" />, если рядом с каждым узлом дерева в элементе управления иерархического представления отображается флажок; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Флажок отображается слева от метки узла дерева и узла <xref:System.Drawing.Image>дерева (при наличии). Флажки позволяют пользователю одновременно выбирать несколько узлов дерева.  
  
 `true` <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeView> Если свойство объекта имеет значение, а <xref:System.Windows.Forms.TreeView.StateImageList%2A> свойство задано, каждое из которых содержится в, отображает первое и второе изображения из, чтобы указать <xref:System.Windows.Forms.TreeView.StateImageList%2A> <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> непроверенное или установленное состояние соответственно. Однако отображаемые изображения могут отличаться, если возникает следующая ситуация: <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> Если для узла задано значение `false`, отличное от 0 или 1, а свойству родителя присвоено свойство, значение не будет автоматически сбрасываться к-1, чтобы указать, что он не задан. <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> В этом случае отображается изображение состояния в указанной позиции индекса. Если <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> <xref:System.Windows.Forms.TreeView.StateImageList%2A> для `true` параметра задано значение "опять", то первое и второе изображения объекта отображаются соответственно.  
  
> [!NOTE]
>  При задании <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> свойства во время выполнения этот <xref:System.Windows.Forms.TreeView> обработчик создается повторно (см. раздел <xref:System.Windows.Forms.Control.RecreateHandle%2A?displayProperty=nameWithType>), чтобы обновить внешний вид элемента управления. Это приводит к тому, что все узлы дерева будут свернуты, за исключением выбранного <xref:System.Windows.Forms.TreeNode>.  
  
   
  
## Examples  
 В следующем примере кода показано, как изменить состояние <xref:System.Windows.Forms.TreeView> свертывания для, чтобы были видны все проверенные узлы. Во-первых, все узлы свернуты, и для <xref:System.Windows.Forms.TreeView.BeforeExpand> события добавляется обработчик. Далее разворачиваются все узлы. Обработчик <xref:System.Windows.Forms.TreeView.BeforeExpand> событий определяет, имеет ли данный узел проверяются дочерние узлы. Если узел не имеет проверенных дочерних элементов, расширение для этого узла отменяется. Чтобы разрешить расширение стандартного узла при щелчке знака «плюс» рядом с узлом, <xref:System.Windows.Forms.TreeView.BeforeExpand> обработчик событий затем удаляется.  
  
 Это поведение также можно реализовать, обрабатывая <xref:System.Windows.Forms.TreeView.BeforeCollapse> событие, как показано в примере для этой статьи.  
  
 [!code-cpp[TreeViewShowCheckedNodes1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/CPP/treeviewshowcheckednodes1.cpp#1)]
 [!code-csharp[TreeViewShowCheckedNodes1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/CS/treeviewshowcheckednodes1.cs#1)]
 [!code-vb[TreeViewShowCheckedNodes1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/VB/treeviewshowcheckednodes1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.Checked" />
      </Docs>
    </Member>
    <Member MemberName="CollapseAll">
      <MemberSignature Language="C#" Value="public void CollapseAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CollapseAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.CollapseAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub CollapseAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CollapseAll();" />
      <MemberSignature Language="F#" Value="member this.CollapseAll : unit -&gt; unit" Usage="treeView.CollapseAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Свертывает все узлы дерева.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод сворачивает все объекты, включая все дочерние узлы дерева <xref:System.Windows.Forms.TreeView> , которые находятся в элементе управления. <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeView.CollapseAll%2A>  
  
> [!NOTE]
>  Состояние <xref:System.Windows.Forms.TreeNode> объекта сохраняется. Например, предположим, что вызывается <xref:System.Windows.Forms.TreeNode.Expand%2A> метод для корневого узла дерева. Если дочерние узлы дерева не были свернуты ранее, они будут отображаться в их ранее развернутом состоянии. <xref:System.Windows.Forms.TreeView.CollapseAll%2A> Вызов метода гарантирует, что все узлы дерева будут отображаться в свернутом состоянии.  
  
   
  
## Examples  
 В следующем примере кода показано, как изменить состояние <xref:System.Windows.Forms.TreeView> свертывания для, чтобы были видны все проверенные узлы. Во-первых, все узлы свернуты, и для <xref:System.Windows.Forms.TreeView.BeforeExpand> события добавляется обработчик. Далее разворачиваются все узлы. Обработчик <xref:System.Windows.Forms.TreeView.BeforeExpand> событий определяет, имеет ли данный узел проверяются дочерние узлы. Если узел не имеет проверенных дочерних элементов, расширение для этого узла отменяется. Чтобы разрешить расширение стандартного узла при щелчке знака «плюс» рядом с узлом, <xref:System.Windows.Forms.TreeView.BeforeExpand> обработчик событий затем удаляется.  
  
 Это поведение также можно реализовать, обрабатывая <xref:System.Windows.Forms.TreeView.BeforeCollapse> событие, как показано в примере для этой статьи.  
  
 Полный пример см. в <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> разделе справки.  
  
 [!code-cpp[TreeViewShowCheckedNodes1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/CPP/treeviewshowcheckednodes1.cpp#2)]
 [!code-csharp[TreeViewShowCheckedNodes1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/CS/treeviewshowcheckednodes1.cs#2)]
 [!code-vb[TreeViewShowCheckedNodes1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewShowCheckedNodes1/VB/treeviewshowcheckednodes1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Collapse" />
        <altmember cref="M:System.Windows.Forms.TreeView.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberSignature Language="F#" Value="override this.CreateHandle : unit -&gt; unit" Usage="treeView.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает дескриптор для элемента управления.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.TreeView.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает параметры, необходимые для создания дескриптора элемента управления.</summary>
        <value>Параметры создания.</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermissionFlag">для доступа к неуправляемому коду при получении значения свойства. Связанное перечисление:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.TreeView.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает размер элемента управления по умолчанию.</summary>
        <value><see cref="T:System.Drawing.Size" /> по умолчанию для элемента управления.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.DefaultSize" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="treeView.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</param>
        <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Windows.Forms.TreeView" />, а при необходимости освобождает также управляемые ресурсы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается открытым `Dispose` методом <xref:System.Object.Finalize%2A> и методом. `Dispose`вызывает защищенный `Dispose(Boolean)` метод с параметром `disposing` , для `true`которого задано значение. <xref:System.Object.Finalize%2A>вызывает метод `disposing` `false`с параметром, равным. `Dispose`  
  
 Если параметр имеет значение true, этот метод освобождает все ресурсы, удерживаемые всеми управляемыми объектами <xref:System.Windows.Forms.TreeView> , на которые ссылается эта ссылка. `disposing` Этот метод вызывает метод `Dispose` каждого объекта, на который есть ссылка.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Метод 
            <see langword="Dispose" /> может вызываться несколько раз другими объектами. При переопределении <see langword="Dispose(Boolean)" /> следует избегать ссылок на объекты, которые были удалены ранее при предыдущем <see langword="Dispose" />вызове метода. Дополнительные сведения о реализации <see langword="Dispose(Boolean)" />см. в разделе [Реализация метода Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
<see langword="Dispose" /> Дополнительные сведения о <see cref="M:System.Object.Finalize" />и см. в разделе Очистка неуправляемых [ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и переопределение [метода Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</para></block>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffered">
      <MemberSignature Language="C#" Value="protected override bool DoubleBuffered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleBuffered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.DoubleBuffered" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DoubleBuffered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DoubleBuffered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoubleBuffered : bool with get, set" Usage="System.Windows.Forms.TreeView.DoubleBuffered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, должен ли элемент управления перерисовывать свою поверхность, используя вторичный буфер. Свойство <see cref="P:System.Windows.Forms.TreeView.DoubleBuffered" /> не влияет на элемент управления <see cref="T:System.Windows.Forms.TreeView" />.</summary>
        <value>Значение <see langword="true" />, если элемент управления использует второй буфер; в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Установка свойства не влияет на <xref:System.Windows.Forms.TreeView> элемент управления. <xref:System.Windows.Forms.TreeView.DoubleBuffered%2A> Если вы хотите уменьшить мерцание при <xref:System.Windows.Forms.TreeView> прорисовке, <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> используйте методы и <xref:System.Windows.Forms.TreeView.EndUpdate%2A> .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeViewDrawMode DrawMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.TreeViewDrawMode DrawMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.DrawMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DrawMode As TreeViewDrawMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeViewDrawMode DrawMode { System::Windows::Forms::TreeViewDrawMode get(); void set(System::Windows::Forms::TreeViewDrawMode value); };" />
      <MemberSignature Language="F#" Value="member this.DrawMode : System.Windows.Forms.TreeViewDrawMode with get, set" Usage="System.Windows.Forms.TreeView.DrawMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewDrawMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает режим, в котором прорисовывается элемент управления.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Windows.Forms.TreeViewDrawMode" />. Значение по умолчанию — <see cref="F:System.Windows.Forms.TreeViewDrawMode.Normal" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Узлы <xref:System.Windows.Forms.TreeView> , как правило, отображаются операционной системой. <xref:System.Windows.Forms.TreeView.DrawMode%2A> Свойство позволяет настроить внешний вид узлов. <xref:System.Windows.Forms.TreeView.DrawMode%2A> Для этого задайте для <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll?displayProperty=nameWithType> параметра значение или <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText?displayProperty=nameWithType> и укажите обработчик для <xref:System.Windows.Forms.TreeView.DrawNode> события. Это называется рисованием владельцем.  
  
   
  
## Examples  
 В следующем примере кода показано, как настроить <xref:System.Windows.Forms.TreeView> элемент управления с помощью рисования владельцем. <xref:System.Windows.Forms.TreeView> Элемент управления в примере отображает необязательные теги узла вместе со стандартными метками узла. Теги node указываются с помощью <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> свойства. <xref:System.Windows.Forms.TreeView> Элемент управления также использует пользовательские цвета, которые включают пользовательский цвет выделения.  
  
 Большую часть <xref:System.Windows.Forms.TreeView> цветов можно настроить, задавая свойства цвета, но цвет выделения выделения недоступен в качестве свойства. Кроме того, выделенный по умолчанию прямоугольник выделения расширяется только вокруг метки узла. Для рисования тегов узлов и рисования настраиваемых выделенных прямоугольников, которые достаточно велики для включения тега узла, необходимо использовать рисование владельцем.  
  
 Полный пример см. в <xref:System.Windows.Forms.TreeView.DrawNode> разделе справки.  
  
 [!code-cpp[TreeViewOwnerDraw#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#2)]
 [!code-csharp[TreeViewOwnerDraw#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#2)]
 [!code-vb[TreeViewOwnerDraw#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Значение свойства не является допустимым значением перечисления <see cref="T:System.Windows.Forms.TreeViewDrawMode" />.</exception>
        <altmember cref="T:System.Windows.Forms.TreeViewDrawMode" />
        <altmember cref="E:System.Windows.Forms.TreeView.DrawNode" />
      </Docs>
    </Member>
    <Member MemberName="DrawNode">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawTreeNodeEventHandler DrawNode;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawTreeNodeEventHandler DrawNode" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.DrawNode" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawNode As DrawTreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawTreeNodeEventHandler ^ DrawNode;" />
      <MemberSignature Language="F#" Value="member this.DrawNode : System.Windows.Forms.DrawTreeNodeEventHandler " Usage="member this.DrawNode : System.Windows.Forms.DrawTreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawTreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает, когда рисуется элемент управления <see cref="T:System.Windows.Forms.TreeView" /> и свойству <see cref="P:System.Windows.Forms.TreeView.DrawMode" /> присвоено значение <see cref="T:System.Windows.Forms.TreeViewDrawMode" />, отличное от <see cref="F:System.Windows.Forms.TreeViewDrawMode.Normal" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие используется для настройки внешнего вида узлов в <xref:System.Windows.Forms.TreeView> элементе управления с помощью рисования владельцем.  
  
 Это событие возникает, только <xref:System.Windows.Forms.TreeView.DrawMode%2A> если свойству <xref:System.Windows.Forms.TreeViewDrawMode> присвоено <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll> значение или <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText>. В следующей таблице показано, как <xref:System.Windows.Forms.TreeNode> можно настроить <xref:System.Windows.Forms.TreeView.DrawMode%2A> свойство, если для свойства заданы эти значения.  
  
|Значение свойства DrawMode|Настройка TreeNode|  
|-----------------------------|----------------------------|  
|<xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText>|Область <xref:System.Windows.Forms.TreeNode> меток можно настроить. Все остальные <xref:System.Windows.Forms.TreeNode> элементы рисуются автоматически.|  
|<xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll>|Внешний вид всего <xref:System.Windows.Forms.TreeNode> можно настроить. Значки, флажки, знаки плюса и минуса, а линии, соединяющие узлы, должны отображаться вручную, если они нужны.|  
  
 Регион, занимаемый <xref:System.Windows.Forms.TreeNode.Text%2A?displayProperty=nameWithType> значением, если он был нарисован с помощью шрифта, заданного <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.Control.Font%2A> свойством элемента управления, — это область, в которой можно щелкнуть узел, чтобы выбрать его. Это называется областью проверки попадания. Если нарисовать за пределами этого региона, необходимо предоставить собственный код, выбирающий узел при щелчке его видимой области.  
  
 Область проверки попадания соответствует <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A?displayProperty=nameWithType> свойству при использовании. <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText> Однако <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll> <xref:System.Windows.Forms.TreeView>при использовании свойства свойство охватывает всю ширину. <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A?displayProperty=nameWithType> В этом случае можно получить доступ к области проверки попадания, получая <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A?displayProperty=nameWithType> значение и получая <xref:System.Windows.Forms.TreeNode.Bounds%2A?displayProperty=nameWithType> доступ к его свойству. Затем можно нарисовать область проверки попадания узла в пределах этих границ или предоставить собственный код проверки нажатия. Обратите внимание, <xref:System.Windows.Forms.TreeNode.NodeFont%2A?displayProperty=nameWithType> что установка свойства не изменяет размер области проверки попадания, которая вычисляется с использованием шрифта, указанного для всего <xref:System.Windows.Forms.TreeView>объекта.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано, как настроить <xref:System.Windows.Forms.TreeView> элемент управления с помощью рисования владельцем. <xref:System.Windows.Forms.TreeView> Элемент управления в примере отображает необязательные теги узла вместе со стандартными метками узла. Теги node указываются с помощью <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> свойства. <xref:System.Windows.Forms.TreeView> Элемент управления также использует пользовательские цвета, которые включают пользовательский цвет выделения.  
  
 Большую часть <xref:System.Windows.Forms.TreeView> цветов можно настроить, задавая свойства цвета, но цвет выделения выделения недоступен в качестве свойства. Кроме того, выделенный по умолчанию прямоугольник выделения расширяется только вокруг метки узла. Для рисования тегов узлов и рисования настраиваемых выделенных прямоугольников, которые достаточно велики для включения тега узла, необходимо использовать рисование владельцем.  
  
 В этом примере обработчик <xref:System.Windows.Forms.TreeView.DrawNode> события рисует Теги узлов и выделение пользовательского выделения вручную. Невыбранные узлы не требуют настройки. Для этого `true` свойство имеет значение, так что они будут отображаться операционной системой. <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A?displayProperty=nameWithType>  
  
 Кроме того, обработчик <xref:System.Windows.Forms.Control.MouseDown> события обеспечивает проверку попадания. По умолчанию узел может быть выбран только путем щелчка по области вокруг ее метки. Обработчик <xref:System.Windows.Forms.Control.MouseDown> событий выбирает узел, который щелкнул в любом месте в этой области или в области вокруг тега узла, если он есть.  
  
 [!code-cpp[TreeViewOwnerDraw#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#1)]
 [!code-csharp[TreeViewOwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#1)]
 [!code-vb[TreeViewOwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.DrawMode" />
        <altmember cref="T:System.Windows.Forms.DrawTreeNodeEventArgs" />
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="T:System.Windows.Forms.TreeViewDrawMode" />
      </Docs>
    </Member>
    <Member MemberName="EndUpdate">
      <MemberSignature Language="C#" Value="public void EndUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.EndUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndUpdate();" />
      <MemberSignature Language="F#" Value="member this.EndUpdate : unit -&gt; unit" Usage="treeView.EndUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Разрешает перерисовку иерархического представления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы обеспечить производительность <xref:System.Windows.Forms.TreeView>, когда элементы добавляются по одному за раз, <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> вызовите метод. Метод предотвращает прорисовку элемента управления <xref:System.Windows.Forms.TreeView.EndUpdate%2A> до вызова метода. <xref:System.Windows.Forms.TreeView.BeginUpdate%2A>  
  
 Предпочтительным способом добавления элементов в элемент управления представлением в виде дерева является использование <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> метода для добавления массива элементов узла дерева в представление в виде дерева. Однако, если требуется добавить элементы по одному, используйте <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> метод, чтобы <xref:System.Windows.Forms.TreeView> предотвратить прорисовку элемента управления во время операций добавления. Чтобы позволить элементу управления возобновить рисование, вызовите <xref:System.Windows.Forms.TreeView.EndUpdate%2A> метод, если все узлы дерева добавлены в представление в виде дерева.  
  
   
  
## Examples  
 В следующем примере кода отображаются сведения о клиенте <xref:System.Windows.Forms.TreeView> в элементе управления. Узлы корневого дерева отображают имена клиентов, а дочерние узлы дерева отображают номера заказов, назначенные каждому клиенту. В этом примере 1 000 клиентов отображаются с 15 заказами. <xref:System.Windows.Forms.TreeView> Перерисовка отключается <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> с помощью методов и <xref:System.Windows.Forms.TreeView.EndUpdate%2A> , а во время создания и прорисовки <xref:System.Windows.Forms.TreeNode> объектов отображается ожидание <xref:System.Windows.Forms.Cursor> . В этом примере требуется `Customer` объект, который может содержать `Order` коллекцию объектов. Также требуется наличие файла курсора с именем `MyWait.cur` в каталоге приложения и создания экземпляра <xref:System.Windows.Forms.TreeView> элемента управления в <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.BeginUpdate" />
      </Docs>
    </Member>
    <Member MemberName="ExpandAll">
      <MemberSignature Language="C#" Value="public void ExpandAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.ExpandAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandAll();" />
      <MemberSignature Language="F#" Value="member this.ExpandAll : unit -&gt; unit" Usage="treeView.ExpandAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Развертывает все узлы дерева.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод развертывает все объекты, включая все дочерние узлы дерева <xref:System.Windows.Forms.TreeView> , которые находятся в элементе управления. <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeView.ExpandAll%2A>  
  
> [!NOTE]
>  Состояние <xref:System.Windows.Forms.TreeNode> объекта сохраняется. Например, предположим, что вызывается <xref:System.Windows.Forms.TreeNode.ExpandAll%2A> метод, а затем отдельные узлы корневого дерева свернуты. Дочерние узлы дерева не были свернуты и будут отображаться в их ранее развернутом состоянии при повторном развертывании узлов корневого дерева. <xref:System.Windows.Forms.TreeView.CollapseAll%2A> Вызов метода гарантирует, что все узлы дерева будут отображаться в свернутом состоянии.  
  
   
  
## Examples  
 В следующем примере кода все узлы <xref:System.Windows.Forms.TreeView> дерева в элементе управления развертываются <xref:System.Windows.Forms.TreeNode.FirstNode%2A> , <xref:System.Windows.Forms.CheckBox> когда флажок установлен, и <xref:System.Windows.Forms.CheckBox> сворачивает при снятом флажке. В этом примере предполагается, что <xref:System.Windows.Forms.Form> у вас <xref:System.Windows.Forms.CheckBox>есть объект с <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.TreeNodeCollection> и элемент управления с, у <xref:System.Windows.Forms.TreeNode> которого есть несколько объектов (желательно с тремя или более уровнями).  
  
 [!code-cpp[TreeNode_ForeColor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#1)]
 [!code-csharp[TreeNode_ForeColor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#1)]
 [!code-vb[TreeNode_ForeColor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.Expand" />
        <altmember cref="M:System.Windows.Forms.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TreeView.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает цвет элемента управления.</summary>
        <value>Цвет <see cref="T:System.Drawing.Color" /> переднего плана для элемента управления. Значением по умолчанию является значение свойства <see cref="P:System.Windows.Forms.Control.DefaultForeColor" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.ForeColor" />
      </Docs>
    </Member>
    <Member MemberName="FullRowSelect">
      <MemberSignature Language="C#" Value="public bool FullRowSelect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FullRowSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.FullRowSelect" />
      <MemberSignature Language="VB.NET" Value="Public Property FullRowSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FullRowSelect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FullRowSelect : bool with get, set" Usage="System.Windows.Forms.TreeView.FullRowSelect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, распространяется ли выделение выбора на всю ширину элемента управления иерархического представления.</summary>
        <value>Значение <see langword="true" />, если выделение выбора распространяется на всю ширину элемента управления иерархического представления; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Windows.Forms.TreeView.FullRowSelect%2A> имеет `true`значение, выделение выделения охватывает всю ширину древовидного представления, а не ширину только метки узла дерева. Свойство игнорируется, если <xref:System.Windows.Forms.TreeView.ShowLines%2A> для `true`свойства задано значение. <xref:System.Windows.Forms.TreeView.FullRowSelect%2A>  
  
   
  
## Examples  
 В следующем примере кода показана настроенная <xref:System.Windows.Forms.TreeView>. При наследовании <xref:System.Windows.Forms.TreeView> класса Эта пользовательская версия имеет все функциональные возможности типичного <xref:System.Windows.Forms.TreeView>. Изменение различных значений свойств в конструкторе обеспечивает уникальный внешний вид. Так как `false` <xref:System.Windows.Forms.TreeView.OnAfterSelect%2A> свойство имеет значение, Пользовательский элемент управления также переопределяет метод, чтобы узлы можно было развернуть и свернуть при нажатии. <xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A>  
  
 Такой элемент управления, настроенный таким образом, может использоваться во всей Организации, что упрощает предоставление согласованного интерфейса без необходимости указания свойств элемента управления в каждом отдельном проекте.  
  
 [!code-cpp[TreeViewCustomization#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewCustomization/CPP/treeviewcustomization.cpp#2)]
 [!code-csharp[TreeViewCustomization#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewCustomization/CS/treeviewcustomization.cs#2)]
 [!code-vb[TreeViewCustomization#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewCustomization/VB/treeviewcustomization.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemRenderStyles">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.OwnerDrawPropertyBag GetItemRenderStyles (System.Windows.Forms.TreeNode node, int state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Windows.Forms.OwnerDrawPropertyBag GetItemRenderStyles(class System.Windows.Forms.TreeNode node, int32 state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.GetItemRenderStyles(System.Windows.Forms.TreeNode,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetItemRenderStyles (node As TreeNode, state As Integer) As OwnerDrawPropertyBag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Forms::OwnerDrawPropertyBag ^ GetItemRenderStyles(System::Windows::Forms::TreeNode ^ node, int state);" />
      <MemberSignature Language="F#" Value="member this.GetItemRenderStyles : System.Windows.Forms.TreeNode * int -&gt; System.Windows.Forms.OwnerDrawPropertyBag" Usage="treeView.GetItemRenderStyles (node, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.OwnerDrawPropertyBag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
        <Parameter Name="state" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="node">Объект <see cref="T:System.Windows.Forms.TreeNode" />, для которого нужно возвратить имя <see cref="T:System.Windows.Forms.OwnerDrawPropertyBag" />.</param>
        <param name="state">Режим отображения узла <see cref="T:System.Windows.Forms.TreeNode" />.</param>
        <summary>Возвращает объект <see cref="T:System.Windows.Forms.OwnerDrawPropertyBag" /> для указанного узла <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
        <returns>Объект <see cref="T:System.Windows.Forms.OwnerDrawPropertyBag" /> для указанного узла <see cref="T:System.Windows.Forms.TreeNode" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNodeAt">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Получает узел дерева, который находится в указанном расположении.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNodeAt">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode GetNodeAt (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.TreeNode GetNodeAt(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.GetNodeAt(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNodeAt (pt As Point) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::TreeNode ^ GetNodeAt(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="member this.GetNodeAt : System.Drawing.Point -&gt; System.Windows.Forms.TreeNode" Usage="treeView.GetNodeAt pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt">Объект <see cref="T:System.Drawing.Point" />, используемый для вычисления и извлечения узла.</param>
        <summary>Получает узел дерева, расположенный в указанной точке.</summary>
        <returns>узел <see cref="T:System.Windows.Forms.TreeNode" /> в указанной точке в координатах иерархического представления (у клиента) или значение <see langword="null" />, если в данном расположении нет узла.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно <xref:System.Windows.Forms.MouseEventArgs.X%2A?displayProperty=nameWithType> передать <xref:System.Drawing.Point>координаты и <xref:System.Windows.Forms.MouseEventArgs.Y%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseDown>длясобытия в качестве значений <xref:System.Drawing.Point.Y%2A> иновогообъекта.<xref:System.Drawing.Point.X%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Point" />
      </Docs>
    </Member>
    <Member MemberName="GetNodeAt">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode GetNodeAt (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.TreeNode GetNodeAt(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.GetNodeAt(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNodeAt (x As Integer, y As Integer) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::TreeNode ^ GetNodeAt(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.GetNodeAt : int * int -&gt; System.Windows.Forms.TreeNode" Usage="treeView.GetNodeAt (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Координата <see cref="P:System.Drawing.Point.X" />, используемая для вычисления и получения узла.</param>
        <param name="y">Координата <see cref="P:System.Drawing.Point.Y" />, используемая для вычисления и получения узла.</param>
        <summary>Получает узел дерева, расположенный в точке с указанными координатами.</summary>
        <returns>узел <see cref="T:System.Windows.Forms.TreeNode" /> в указанном расположении в координатах иерархического представления (у клиента) или значение <see langword="null" />, если в данном расположении нет узла.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MouseEventArgs.X%2A?displayProperty=nameWithType> Можно передать `y` координаты и <xref:System.Windows.Forms.MouseEventArgs.Y%2A?displayProperty=nameWithType> <xref:System.Windows.Forms.Control.MouseDown>длясобытия в качестве параметров и.`x`  
  
   
  
## Examples  
 Следующий пример кода позволяет пользователю изменять некорневые узлы дерева с помощью <xref:System.Windows.Forms.ContextMenu>. Когда пользователь щелкает правой кнопкой мыши, <xref:System.Windows.Forms.TreeNode> в этой позиции определяется и сохраняется в переменной с именем. `mySelectedNode` Если был выбран некорневой узел дерева, он переводится в изменяемое состояние, что позволяет пользователю изменять метку узла. После того как пользователь прекратит редактирование метки узла дерева, новый текст метки будет оценен и сохранен. В этом примере несколько символов считаются недопустимыми в тексте метки. Если один из недопустимых символов находится в строке метки или строка пуста, пользователь получает извещение об ошибке, а метка возвращается к предыдущему тексту.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Point" />
      </Docs>
    </Member>
    <Member MemberName="GetNodeCount">
      <MemberSignature Language="C#" Value="public int GetNodeCount (bool includeSubTrees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetNodeCount(bool includeSubTrees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.GetNodeCount(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNodeCount (includeSubTrees As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetNodeCount(bool includeSubTrees);" />
      <MemberSignature Language="F#" Value="member this.GetNodeCount : bool -&gt; int" Usage="treeView.GetNodeCount includeSubTrees" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeSubTrees" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeSubTrees">Значение <see langword="true" />, чтобы вычислить количество элементов <see cref="T:System.Windows.Forms.TreeNode" />, включая содержащиеся в поддеревьях; в противном случае — значение <see langword="false" />.</param>
        <summary>Возвращает число узлов дерева, включая при необходимости узлы во всех поддеревьях, которые назначены элементу управления иерархического представления.</summary>
        <returns>Число узлов дерева, включая дополнительно узлы во всех поддеревьях, которые назначены элементу управления иерархического представления.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `includeSubTrees` параметр `true`имеет значение, результатом является число всех узлов дерева во всей древовидной структуре.  
  
   
  
## Examples  
 В следующем примере кода <xref:System.Windows.Forms.TreeView.PathSeparator%2A> задается свойство <xref:System.Windows.Forms.TreeView> объекта и отображается количество дочерних узлов дерева <xref:System.Windows.Forms.TreeNodeCollection> , <xref:System.Windows.Forms.TreeView.SelectedNode%2A>содержащихся в. Также отображается процент дочернего узла дерева к общему узлу дерева в элементе управления иерархического представления. В этом примере предполагается, что <xref:System.Windows.Forms.Form> у вас <xref:System.Windows.Forms.Button>есть объект с <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.TreeNodeCollection> и элемент управления с, у <xref:System.Windows.Forms.TreeNode> которого есть несколько объектов (желательно с тремя или более уровнями).  
  
 [!code-cpp[TreeNode_ForeColor#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#2)]
 [!code-csharp[TreeNode_ForeColor#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#2)]
 [!code-vb[TreeNode_ForeColor#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
      </Docs>
    </Member>
    <Member MemberName="HideSelection">
      <MemberSignature Language="C#" Value="public bool HideSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.HideSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HideSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HideSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HideSelection : bool with get, set" Usage="System.Windows.Forms.TreeView.HideSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, остается ли выделенным выбранный узел дерева, если иерархическое представление теряет фокус.</summary>
        <value>Значение <see langword="true" />, если выбранный узел дерева не остается выделенным, когда иерархическое представление теряет фокус; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если для `false`этого свойства задано значение, выбранные узлы <xref:System.Windows.Forms.TreeView> в элементе управления остаются выделенными цветом, отличающимся от цвета <xref:System.Windows.Forms.TreeView> текущего выделения при потере фокуса элементом управления. Это свойство можно использовать для сохранения элементов, выбранных пользователем, когда пользователь щелкает другой элемент управления в форме или перемещается в другое окно.  
  
> [!NOTE]
>  Если вы беспокоите о специальных возможностях приложений, рекомендуется присвоить <xref:System.Windows.Forms.TreeView.HideSelection%2A> `false`свойству значение.  
  
   
  
## Examples  
 В следующем примере кода показано, <xref:System.Windows.Forms.TreeView.HideSelection%2A> как использовать свойство. Чтобы выполнить этот пример, вставьте следующий код в форму и вызовите `InitializeSelectedTreeView` метод в конструкторе формы или <xref:System.Windows.Forms.Form.Load> обработчике событий.  
  
 [!code-cpp[System.Windows.Forms.TreeViewExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.TreeViewExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.TreeViewExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTest">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Предоставляет сведения об узле на основании заданной точки.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeViewHitTestInfo HitTest (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.TreeViewHitTestInfo HitTest(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.HitTest(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (pt As Point) As TreeViewHitTestInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::TreeViewHitTestInfo ^ HitTest(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="member this.HitTest : System.Drawing.Point -&gt; System.Windows.Forms.TreeViewHitTestInfo" Usage="treeView.HitTest pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewHitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="pt">точка <see cref="T:System.Drawing.Point" />, для которой требуется извлечь сведения об узле.</param>
        <summary>Предоставляет сведения об узле на основании заданной точки.</summary>
        <returns>Сведения об узле.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот метод, чтобы определить, находится ли точка в <xref:System.Windows.Forms.TreeNode> и где внутри узла находится точка, например в области метки или изображения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeViewHitTestInfo HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.TreeViewHitTestInfo HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer) As TreeViewHitTestInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::TreeViewHitTestInfo ^ HitTest(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.HitTest : int * int -&gt; System.Windows.Forms.TreeViewHitTestInfo" Usage="treeView.HitTest (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeViewHitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="y" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="x">Координата x, для которой требуется извлечь сведения об узле.</param>
        <param name="y">Координата y, для которой требуется извлечь сведения об узле.</param>
        <summary>Предоставляет сведения об узле по заданным координатам x и y.</summary>
        <returns>Сведения об узле.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот метод, чтобы определить, расположен ли набор координат x и y в <xref:System.Windows.Forms.TreeNode> и где внутри узла находится точка, например в области метки или изображения.  
  
   
  
## Examples  
 В следующем примере кода показано <xref:System.Windows.Forms.TreeNode.Level%2A>, как использовать члены, <xref:System.Windows.Forms.TreeViewHitTestInfo.Node%2A>и <xref:System.Windows.Forms.TreeView.HitTest%2A> . Чтобы выполнить этот пример, создайте форму Windows Form, содержащую <xref:System.Windows.Forms.TreeView> именованный `treeView1` объект и заполнив его несколькими уровнями узлов. Вставьте следующий код в форму и свяжите <xref:System.Windows.Forms.Control.MouseDown> `treeView1` событие с `treeView1_MouseDown` методом в этом примере.  
  
 [!code-cpp[System.Windows.Forms.TreeViewWhidbeyMembers#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/cpp/Form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HotTracking">
      <MemberSignature Language="C#" Value="public bool HotTracking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HotTracking" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.HotTracking" />
      <MemberSignature Language="VB.NET" Value="Public Property HotTracking As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HotTracking { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HotTracking : bool with get, set" Usage="System.Windows.Forms.TreeView.HotTracking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, отображается ли метка узла дерева в виде гиперссылки, когда указатель мыши помещается над данным узлом дерева.</summary>
        <value>Значение <see langword="true" />, если метка узла дерева принимает форму гиперссылки, когда указатель мыши оказывается над ней; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если свойство имеет `true`значение, <xref:System.Windows.Forms.TreeView.HotTracking%2A> свойство не действует. <xref:System.Windows.Forms.TreeView.CheckBoxes%2A>  
  
> [!NOTE]
>  Если свойство имеет `true`значение, каждая метка узла дерева принимает вид гиперссылки по мере того, как указатель мыши проходит над ним. <xref:System.Windows.Forms.TreeView.HotTracking%2A> Стиль шрифта применяется к, <xref:System.Drawing.Font> а <xref:System.Windows.Forms.Control.ForeColor%2A> параметр имеет значение Blue, чтобы метка отображалась как ссылка. <xref:System.Drawing.FontStyle.Underline> Внешний вид не контролируется параметрами Интернета операционной системы пользователя.  
  
   
  
## Examples  
 В следующем примере кода показана настроенная <xref:System.Windows.Forms.TreeView>. При наследовании <xref:System.Windows.Forms.TreeView> класса Эта пользовательская версия имеет все функциональные возможности типичного <xref:System.Windows.Forms.TreeView>. Изменение различных значений свойств в конструкторе обеспечивает уникальный внешний вид. Так как `false` <xref:System.Windows.Forms.TreeView.OnAfterSelect%2A> свойство имеет значение, Пользовательский элемент управления также переопределяет метод, чтобы узлы можно было развернуть и свернуть при нажатии. <xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A>  
  
 Такой элемент управления, настроенный таким образом, может использоваться во всей Организации, что упрощает предоставление согласованного интерфейса без необходимости указания свойств элемента управления в каждом отдельном проекте.  
  
 [!code-cpp[TreeViewCustomization#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewCustomization/CPP/treeviewcustomization.cpp#2)]
 [!code-csharp[TreeViewCustomization#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewCustomization/CS/treeviewcustomization.cs#2)]
 [!code-vb[TreeViewCustomization#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewCustomization/VB/treeviewcustomization.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageIndex">
      <MemberSignature Language="C#" Value="public int ImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ImageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ImageIndex : int with get, set" Usage="System.Windows.Forms.TreeView.ImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.NoneExcludedImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Forms.RelatedImageList("ImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение индекса в списке рисунков, соответствующее изображению, которое  по умолчанию применяется для отображения узлов дерева.</summary>
        <value>Значение индекса (с нуля), соответствующее позиции изображения <see cref="T:System.Drawing.Image" /> в списке <see cref="T:System.Windows.Forms.ImageList" />. По умолчанию используется значение ноль.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение — это индекс объекта, который <xref:System.Drawing.Image> хранится <xref:System.Windows.Forms.TreeView.ImageList%2A> в массиве, <xref:System.Windows.Forms.ImageList> назначенном свойству. <xref:System.Windows.Forms.TreeView.ImageIndex%2A>  
  
 Свойства <xref:System.Windows.Forms.TreeView.ImageKey%2A> и<xref:System.Windows.Forms.TreeView.ImageIndex%2A> являются взаимоисключающими. Если одно из них задано, другое игнорируется. Если задано <xref:System.Windows.Forms.TreeView.ImageKey%2A>значение <xref:System.Windows.Forms.TreeView.ImageIndex%2A> , автоматически устанавливается значение-1. Кроме того, если задано <xref:System.Windows.Forms.TreeView.ImageKey%2A> значение <xref:System.Windows.Forms.TreeView.ImageIndex%2A>, автоматически устанавливается пустая строка ("").  
  
> [!NOTE]
>  При задании <xref:System.Windows.Forms.TreeView.ImageIndex%2A> свойства во время выполнения этот <xref:System.Windows.Forms.TreeView> обработчик создается повторно (см. раздел <xref:System.Windows.Forms.Control.RecreateHandle%2A?displayProperty=nameWithType>), чтобы обновить внешний вид элемента управления. Это приводит к тому, что все узлы дерева будут свернуты, за исключением выбранного <xref:System.Windows.Forms.TreeNode>.  
  
   
  
## Examples  
 В следующем примере кода создается и назначается <xref:System.Windows.Forms.ImageList> <xref:System.Windows.Forms.TreeView> элементу управления <xref:System.Windows.Forms.TreeNode> , а <xref:System.Windows.Forms.TreeView> элемент управления заполняется объектами. Узлам дерева присваиваются изображения из <xref:System.Windows.Forms.ImageList> , которые отображаются в выбранном или невыбранном состоянии. В этом примере предполагается, что <xref:System.Windows.Forms.Form> имеется объект, <xref:System.Windows.Forms.TreeView>содержащий, и <xref:System.Collections.ArrayList> , который `Customer` содержит объекты, содержащие `Order` объекты. Также предполагается, что `Customer` объекты и `Order` определены.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Указанный индекс меньше 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImageKey">
      <MemberSignature Language="C#" Value="public string ImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageKey : string with get, set" Usage="System.Windows.Forms.TreeView.ImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Forms.RelatedImageList("ImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает ключ изображения по умолчанию для каждого узла в элементе управления <see cref="T:System.Windows.Forms.TreeView" />, когда этот узел находится в невыбранном состоянии.</summary>
        <value>Ключ изображения по умолчанию, отображаемого для каждого узла в элементе управления <see cref="T:System.Windows.Forms.TreeView" />, когда этот узел находится в невыбранном состоянии.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeView.ImageKey%2A> Свойство не учитывает регистр.  
  
 Если у <xref:System.Windows.Forms.TreeNode> a нет набора изображений, изображение, заданное <xref:System.Windows.Forms.TreeView.ImageKey%2A> свойством, будет отображаться, если узел не выбран. При выборе узла <xref:System.Windows.Forms.ImageList> будет показан первый элемент в.  
  
 Свойства <xref:System.Windows.Forms.TreeView.ImageKey%2A> и<xref:System.Windows.Forms.TreeView.ImageIndex%2A> являются взаимоисключающими, то есть если одно из них задано, другое игнорируется. Если задано <xref:System.Windows.Forms.TreeView.ImageKey%2A> свойство <xref:System.Windows.Forms.TreeView.ImageIndex%2A> , свойство автоматически устанавливается в значение-1. Кроме того, если задать <xref:System.Windows.Forms.TreeView.ImageIndex%2A> свойство <xref:System.Windows.Forms.TreeView.ImageKey%2A> , автоматически будет задана пустая строка ("").  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList ImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList ImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ ImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageList : System.Windows.Forms.ImageList with get, set" Usage="System.Windows.Forms.TreeView.ImageList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает список <see cref="T:System.Windows.Forms.ImageList" />, содержащий объекты <see cref="T:System.Drawing.Image" />, используемые узлами дерева.</summary>
        <value>Список <see cref="T:System.Windows.Forms.ImageList" />, содержащий объекты <see cref="T:System.Drawing.Image" />, используемые узлами дерева. Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если значение `null` <xref:System.Drawing.Image> свойства отличается от, все узлы дерева отображают первый сохраненный в <xref:System.Windows.Forms.ImageList>. <xref:System.Windows.Forms.ImageList> Можно указать, какие изображения из списка будут отображаться для выбранных и невыбранных узлов, задав <xref:System.Windows.Forms.TreeView.ImageIndex%2A> свойства и. <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> Отдельные <xref:System.Windows.Forms.TreeNode> объекты могут указывать, какое изображение отображается, задав их <xref:System.Windows.Forms.TreeNode.ImageIndex%2A> свойства <xref:System.Windows.Forms.TreeNode.SelectedImageIndex%2A> и. Эти индивидуальные параметры будут переопределять параметры в соответствующих <xref:System.Windows.Forms.TreeView> свойствах.  
  
> [!NOTE]
>  В .NET Framework версии 1,1 существует ошибка, из-за которой изображения не появлялись <xref:System.Windows.Forms.TreeView> на узлах при вызове <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType>приложения. Чтобы обойти эту ошибку, вызовите <xref:System.Windows.Forms.Application.DoEvents%2A?displayProperty=nameWithType> `Main` метод непосредственно после вызова <xref:System.Windows.Forms.Application.EnableVisualStyles%2A>метода. Эта проблема исправлена в [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)].  
  
   
  
## Examples  
 В следующем примере кода создается и назначается <xref:System.Windows.Forms.ImageList> <xref:System.Windows.Forms.TreeView> элементу управления <xref:System.Windows.Forms.TreeNode> , а <xref:System.Windows.Forms.TreeView> элемент управления заполняется объектами. Узлам дерева присваиваются изображения из <xref:System.Windows.Forms.ImageList> , которые отображаются в выбранном или невыбранном состоянии. В этом примере предполагается, что <xref:System.Windows.Forms.Form> имеется объект, <xref:System.Windows.Forms.TreeView>содержащий, и <xref:System.Collections.ArrayList> , который `Customer` содержит объекты, содержащие `Order` объекты.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public int Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Indent : int with get, set" Usage="System.Windows.Forms.TreeView.Indent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает размер отступа для каждого уровня дочерних узлов дерева.</summary>
        <value>Размер отступа (в пикселях) для каждого уровня дочерних узлов дерева. Значение по умолчанию — 19.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Присвоение этому свойству значения-1 не приводит к созданию исключения, если значение по умолчанию еще не было изменено. Это связано с тем, что элемент управления использует значение-1 в качестве внутреннего значения по умолчанию перед созданием управляющего маркера. Это внутреннее значение по умолчанию приводит к тому, что упакованный элемент управления возвращает собственное значение по умолчанию 19.  
  
   
  
## Examples  
 В следующем примере кода показана настроенная <xref:System.Windows.Forms.TreeView>. При наследовании <xref:System.Windows.Forms.TreeView> класса Эта пользовательская версия имеет все функциональные возможности типичного <xref:System.Windows.Forms.TreeView>. Изменение различных значений свойств в конструкторе обеспечивает уникальный внешний вид. Так как <xref:System.Windows.Forms.TreeView.OnAfterSelect%2A> свойство имеет значение false, Пользовательский элемент управления также переопределяет метод, чтобы узлы можно было развернуть и свернуть при нажатии. <xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A>  
  
 Такой элемент управления, настроенный таким образом, может использоваться во всей Организации, что упрощает предоставление согласованного интерфейса без необходимости указания свойств элемента управления в каждом отдельном проекте.  
  
 [!code-cpp[TreeViewCustomization#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewCustomization/CPP/treeviewcustomization.cpp#2)]
 [!code-csharp[TreeViewCustomization#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewCustomization/CS/treeviewcustomization.cs#2)]
 [!code-vb[TreeViewCustomization#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewCustomization/VB/treeviewcustomization.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Присвоенное значение меньше 0.  
  
- или - 
Присвоенное значение больше 32 000.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="treeView.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Одно из значений клавиш.</param>
        <summary>Определяет, является ли заданная клавиша обычной клавишей ввода или специальной клавишей, нуждающейся в предварительной обработке.</summary>
        <returns>Значение <see langword="true" />, если указанная клавиша является стандартной клавишей ввода; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если пользователь редактирует узел дерева, <xref:System.Windows.Forms.TreeView> элемент управления обрабатывает клавиши ввода, ESC, Home и End в качестве входных клавиш.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemDragEventHandler ItemDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemDragEventHandler ItemDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.ItemDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDrag As ItemDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemDragEventHandler ^ ItemDrag;" />
      <MemberSignature Language="F#" Value="member this.ItemDrag : System.Windows.Forms.ItemDragEventHandler " Usage="member this.ItemDrag : System.Windows.Forms.ItemDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит в начале перетаскивания узла пользователем.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано, как включить операции перетаскивания в <xref:System.Windows.Forms.TreeView> элементе управления. В этом примере любой узел можно перетащить на другой узел, который не является потомком перетаскиваемого узла. Перетаскиваемый узел, включающий все узлы-потомки, становятся дочерним узлом целевого узла. При использовании левой кнопки мыши перетаскиваемый узел перемещается на узел назначения. При использовании правой кнопки мыши перетаскиваемый узел копируется на узел назначения.  
  
 [!code-cpp[TreeViewDragDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewDragDrop/CPP/treeviewdragdrop.cpp#1)]
 [!code-csharp[TreeViewDragDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewDragDrop/CS/treeviewdragdrop.cs#1)]
 [!code-vb[TreeViewDragDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewDragDrop/VB/treeviewdragdrop.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemHeight">
      <MemberSignature Language="C#" Value="public int ItemHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItemHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ItemHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ItemHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ItemHeight : int with get, set" Usage="System.Windows.Forms.TreeView.ItemHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает высоту каждого узла дерева в элементе управления иерархического представления.</summary>
        <value>Высота (в пикселях) каждого узла дерева в иерархическом представлении.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если высота элемента равна значению, превышающему высоту элемента управления иерархического представления, вызов <xref:System.Windows.Forms.TreeNode.EnsureVisible%2A?displayProperty=nameWithType> метода приведет к непредвиденным результатам.  
  
   
  
## Examples  
 В следующем примере кода размер <xref:System.Windows.Forms.TreeNode.NodeFont%2A> изменяется до указанного размера и настраивается <xref:System.Windows.Forms.TreeView.ItemHeight%2A> родительский <xref:System.Windows.Forms.TreeView> элемент управления узла дерева. В этом примере предполагается, что <xref:System.Windows.Forms.Form> у вас <xref:System.Windows.Forms.TreeView> есть <xref:System.Windows.Forms.TreeNode> элемент управления с коллекцией объектов, <xref:System.Windows.Forms.ComboBox> который содержит размеры шрифта.  
  
 [!code-cpp[TreeNode_Bounds#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_Bounds/CPP/treenode_bounds.cpp#2)]
 [!code-csharp[TreeNode_Bounds#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_Bounds/CS/treenode_bounds.cs#2)]
 [!code-vb[TreeNode_Bounds#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_Bounds/VB/treenode_bounds.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Присваиваемое значение меньше 1.  
  
- или - 
Присваиваемое значение больше значения <see cref="F:System.Int16.MaxValue" />.</exception>
        <altmember cref="F:System.Int16.MaxValue" />
      </Docs>
    </Member>
    <Member MemberName="LabelEdit">
      <MemberSignature Language="C#" Value="public bool LabelEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LabelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.LabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LabelEdit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LabelEdit : bool with get, set" Usage="System.Windows.Forms.TreeView.LabelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, возможно ли изменение текстовой метки для узлов дерева.</summary>
        <value>Значение <see langword="true" />, если возможно изменение текстовой метки для узлов дерева; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод работает, только <xref:System.Windows.Forms.TreeView.LabelEdit%2A> если свойство имеет `true`значение. <xref:System.Windows.Forms.TreeNode.BeginEdit%2A> Если <xref:System.Windows.Forms.TreeView.LabelEdit%2A> параметр `false` имеет значение при попытке изменить метку, будет вызвано исключение и узел дерева не будет передаваться в состояние, доступное для изменения.  
  
   
  
## Examples  
 Следующий пример кода позволяет пользователю изменять некорневые узлы дерева с помощью <xref:System.Windows.Forms.ContextMenu>. Когда пользователь щелкает правой кнопкой мыши, <xref:System.Windows.Forms.TreeNode> в этой позиции определяется и сохраняется в переменной с именем. `mySelectedNode` Если был выбран некорневой узел дерева, он переводится в изменяемое состояние, что позволяет пользователю изменять метку узла. После того как пользователь прекратит редактирование метки узла дерева, новый текст метки будет оценен и сохранен. В этом примере несколько символов считаются недопустимыми в тексте метки. Если один из недопустимых символов находится в строке метки или строка пуста, пользователь получает извещение об ошибке, а метка возвращается к предыдущему тексту.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TreeNode.BeginEdit" />
        <altmember cref="M:System.Windows.Forms.TreeNode.EndEdit(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="LineColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color LineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color LineColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.LineColor" />
      <MemberSignature Language="VB.NET" Value="Public Property LineColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color LineColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.LineColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.TreeView.LineColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает цвет линий, соединяющих узлы в элементе управления <see cref="T:System.Windows.Forms.TreeView" />.</summary>
        <value>Цвет <see cref="T:System.Drawing.Color" /> линий, соединяющих узлы дерева.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано задание <xref:System.Windows.Forms.TreeNode> цвета линии. Чтобы выполнить этот пример, вставьте код в форму Windows Forms. Вызов `InitializeLineTreeView` из конструктора формы или <xref:System.Windows.Forms.Form.Load> обработчика событий.  
  
 [!code-cpp[System.Windows.Forms.TreeViewWhidbeyMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/cpp/Form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeMouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeNodeMouseClickEventHandler NodeMouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeNodeMouseClickEventHandler NodeMouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.NodeMouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeMouseClick As TreeNodeMouseClickEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeNodeMouseClickEventHandler ^ NodeMouseClick;" />
      <MemberSignature Language="F#" Value="member this.NodeMouseClick : System.Windows.Forms.TreeNodeMouseClickEventHandler " Usage="member this.NodeMouseClick : System.Windows.Forms.TreeNodeMouseClickEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNodeMouseClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, когда пользователь щелкает кнопкой мыши узел <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие возникает, когда пользователь щелкает любую часть узла дерева с помощью мыши, включая знак плюса (**+**) или знак минуса (**-**), который указывает, свернут ли узел или развернут.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано, <xref:System.Windows.Forms.TreeView.NodeMouseClick> как выполнить обработку события.  
  
 [!code-cpp[System.Windows.Forms.TreeViewWhidbeyMembers#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/cpp/Form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNodeMouseClickEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeMouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeNodeMouseClickEventHandler NodeMouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeNodeMouseClickEventHandler NodeMouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.NodeMouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeMouseDoubleClick As TreeNodeMouseClickEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeNodeMouseClickEventHandler ^ NodeMouseDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.NodeMouseDoubleClick : System.Windows.Forms.TreeNodeMouseClickEventHandler " Usage="member this.NodeMouseDoubleClick : System.Windows.Forms.TreeNodeMouseClickEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNodeMouseClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, когда пользователь дважды щелкает кнопкой мыши узел <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие возникает, когда пользователь дважды щелкает любую часть узла дерева с помощью мыши, включая знак плюса (+) или знак минуса (-), который указывает, свернут узел или развернут.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано, как выполнить обработку <xref:System.Windows.Forms.TreeView.NodeMouseDoubleClick> события и как <xref:System.Windows.Forms.TreeNodeMouseClickEventArgs>использовать. Чтобы выполнить этот пример, вставьте код в форму Windows Forms, содержащую <xref:System.Windows.Forms.TreeView> имя. `treeView1` <xref:System.Windows.Forms.TreeView.NodeMouseDoubleClick> `c:\` `treeView1_NodeMouseDoubleClick` `treeView1` Заполните имена файлов, расположенных в каталоге системы, на котором выполняется образец, и свяжите событие с методом в этом примере. `treeView1`  Для этого примера требуется, чтобы у пользователя были права администратора на компьютере, на котором работает этот пример.  
  
 [!code-cpp[System.Windows.Forms.TreeViewWhidbeyMembers#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/cpp/Form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#5)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNodeMouseClickEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NodeMouseHover">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TreeNodeMouseHoverEventHandler NodeMouseHover;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TreeNodeMouseHoverEventHandler NodeMouseHover" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.NodeMouseHover" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NodeMouseHover As TreeNodeMouseHoverEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TreeNodeMouseHoverEventHandler ^ NodeMouseHover;" />
      <MemberSignature Language="F#" Value="member this.NodeMouseHover : System.Windows.Forms.TreeNodeMouseHoverEventHandler " Usage="member this.NodeMouseHover : System.Windows.Forms.TreeNodeMouseHoverEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNodeMouseHoverEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при наведении указателя мыши на узел <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если мышь находится над <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeView.NodeMouseHover> , <xref:System.Windows.Forms.Control.MouseHover> событие возникает перед событием.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В этом примере обработчик событий сообщает о возникновении <xref:System.Windows.Forms.TreeView.NodeMouseHover> события. Этот отчет поможет вам узнать, когда происходит событие и может помочь при отладке. Чтобы сообщить о нескольких событиях или о событиях, которые происходят часто, рассмотрите <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> или добавления сообщения в многострочный <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы выполнить пример кода, вставьте его в проект, содержащий экземпляр типа <xref:System.Windows.Forms.TreeView> с именем. `TreeView1` Затем убедитесь, что обработчик событий связан с <xref:System.Windows.Forms.TreeView.NodeMouseHover> событием.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#634](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#634)]
 [!code-vb[System.Windows.Forms.EventExamples#634](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#634)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNodeCollection Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNodeCollection Nodes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.Nodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Nodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNodeCollection ^ Nodes { System::Windows::Forms::TreeNodeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Nodes : System.Windows.Forms.TreeNodeCollection" Usage="System.Windows.Forms.TreeView.Nodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию узлов дерева, которая назначена элементу управления иерархического представления.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.TreeNodeCollection" />, который предоставляет узлы дерева, назначенные элементу управления иерархического представления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство содержит <xref:System.Windows.Forms.TreeNode.Nodes%2A> коллекцию объектов, у каждой из которых есть свойство, которое может содержать собственный <xref:System.Windows.Forms.TreeNodeCollection>объект. <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeView.Nodes%2A> Такое вложение узлов дерева может усложнить навигацию по древовидной структуре, но <xref:System.Windows.Forms.TreeNode.FullPath%2A> свойство упрощает определение расположения в древовидной структуре.  
  
   
  
## Examples  
 В следующем примере кода отображаются сведения о клиенте <xref:System.Windows.Forms.TreeView> в элементе управления. Узлы корневого дерева отображают имена клиентов, а дочерние узлы дерева отображают номера заказов, назначенные каждому клиенту. В этом примере 1 000 клиентов отображаются с 15 заказами. <xref:System.Windows.Forms.TreeView> Перерисовка отключается <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> с помощью методов и <xref:System.Windows.Forms.TreeView.EndUpdate%2A> , а во время создания и прорисовки <xref:System.Windows.Forms.TreeNode> объектов отображается ожидание <xref:System.Windows.Forms.Cursor> . В этом примере требуется `Customer` объект, который может содержать `Order` коллекцию объектов. Также необходимо создать экземпляр <xref:System.Windows.Forms.TreeView> элемента управления <xref:System.Windows.Forms.Form>в.  
  
 [!code-cpp[TreeView#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeView/CPP/treeview.cpp#1)]
 [!code-csharp[TreeView#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeView/CS/treeview.cs#1)]
 [!code-vb[TreeView#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeView/VB/treeview.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNodeCollection" />
        <altmember cref="P:System.Windows.Forms.TreeView.Nodes" />
      </Docs>
    </Member>
    <Member MemberName="OnAfterCheck">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterCheck (System.Windows.Forms.TreeViewEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterCheck(class System.Windows.Forms.TreeViewEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterCheck (e As TreeViewEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterCheck(System::Windows::Forms::TreeViewEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterCheck : System.Windows.Forms.TreeViewEventArgs -&gt; unit&#xA;override this.OnAfterCheck : System.Windows.Forms.TreeViewEventArgs -&gt; unit" Usage="treeView.OnAfterCheck e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.TreeViewEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.TreeView.AfterCheck" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.TreeView.OnAfterCheck%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.TreeView.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.TreeView.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Windows.Forms.TreeView.AfterCheck" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeCheck" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeCheck(System.Windows.Forms.TreeViewCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnAfterCollapse">
      <MemberSignature Language="C#" Value="protected internal virtual void OnAfterCollapse (System.Windows.Forms.TreeViewEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnAfterCollapse(class System.Windows.Forms.TreeViewEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnAfterCollapse(System.Windows.Forms.TreeViewEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnAfterCollapse (e As TreeViewEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnAfterCollapse(System::Windows::Forms::TreeViewEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterCollapse : System.Windows.Forms.TreeViewEventArgs -&gt; unit&#xA;override this.OnAfterCollapse : System.Windows.Forms.TreeViewEventArgs -&gt; unit" Usage="treeView.OnAfterCollapse e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.TreeViewEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.TreeView.AfterCollapse" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.TreeView.OnAfterCollapse%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.TreeView.OnAfterCollapse(System.Windows.Forms.TreeViewEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.TreeView.OnAfterCollapse(System.Windows.Forms.TreeViewEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Windows.Forms.TreeView.AfterCollapse" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeCollapse" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnAfterExpand">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterExpand (System.Windows.Forms.TreeViewEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterExpand(class System.Windows.Forms.TreeViewEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnAfterExpand(System.Windows.Forms.TreeViewEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterExpand (e As TreeViewEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterExpand(System::Windows::Forms::TreeViewEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterExpand : System.Windows.Forms.TreeViewEventArgs -&gt; unit&#xA;override this.OnAfterExpand : System.Windows.Forms.TreeViewEventArgs -&gt; unit" Usage="treeView.OnAfterExpand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.TreeViewEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.TreeView.AfterExpand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.TreeView.OnAfterExpand%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.TreeView.OnAfterExpand(System.Windows.Forms.TreeViewEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.TreeView.OnAfterExpand(System.Windows.Forms.TreeViewEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Windows.Forms.TreeView.AfterExpand" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeExpand" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnAfterLabelEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterLabelEdit (System.Windows.Forms.NodeLabelEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterLabelEdit(class System.Windows.Forms.NodeLabelEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterLabelEdit (e As NodeLabelEditEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterLabelEdit(System::Windows::Forms::NodeLabelEditEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterLabelEdit : System.Windows.Forms.NodeLabelEditEventArgs -&gt; unit&#xA;override this.OnAfterLabelEdit : System.Windows.Forms.NodeLabelEditEventArgs -&gt; unit" Usage="treeView.OnAfterLabelEdit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.NodeLabelEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.TreeView.OnAfterLabelEdit%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.TreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.TreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnAfterSelect">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterSelect (System.Windows.Forms.TreeViewEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterSelect(class System.Windows.Forms.TreeViewEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterSelect (e As TreeViewEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterSelect(System::Windows::Forms::TreeViewEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterSelect : System.Windows.Forms.TreeViewEventArgs -&gt; unit&#xA;override this.OnAfterSelect : System.Windows.Forms.TreeViewEventArgs -&gt; unit" Usage="treeView.OnAfterSelect e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.TreeViewEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.TreeView.AfterSelect" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.TreeView.OnAfterSelect%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.TreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.TreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Windows.Forms.TreeView.AfterSelect" />
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeSelect" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBeforeCheck">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeCheck (System.Windows.Forms.TreeViewCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeCheck(class System.Windows.Forms.TreeViewCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnBeforeCheck(System.Windows.Forms.TreeViewCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeCheck (e As TreeViewCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeCheck(System::Windows::Forms::TreeViewCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeCheck : System.Windows.Forms.TreeViewCancelEventArgs -&gt; unit&#xA;override this.OnBeforeCheck : System.Windows.Forms.TreeViewCancelEventArgs -&gt; unit" Usage="treeView.OnBeforeCheck e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.TreeViewCancelEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.TreeView.BeforeCheck" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.TreeView.OnBeforeCheck%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.TreeView.OnBeforeCheck(System.Windows.Forms.TreeViewCancelEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.TreeView.OnBeforeCheck(System.Windows.Forms.TreeViewCancelEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeCheck" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterCheck" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBeforeCollapse">
      <MemberSignature Language="C#" Value="protected internal virtual void OnBeforeCollapse (System.Windows.Forms.TreeViewCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnBeforeCollapse(class System.Windows.Forms.TreeViewCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnBeforeCollapse (e As TreeViewCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnBeforeCollapse(System::Windows::Forms::TreeViewCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeCollapse : System.Windows.Forms.TreeViewCancelEventArgs -&gt; unit&#xA;override this.OnBeforeCollapse : System.Windows.Forms.TreeViewCancelEventArgs -&gt; unit" Usage="treeView.OnBeforeCollapse e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.TreeViewCancelEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.TreeView.BeforeCollapse" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.TreeView.OnBeforeCollapse%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.TreeView.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.TreeView.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeCollapse" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterCollapse" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterCollapse(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBeforeExpand">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeExpand (System.Windows.Forms.TreeViewCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeExpand(class System.Windows.Forms.TreeViewCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeExpand (e As TreeViewCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeExpand(System::Windows::Forms::TreeViewCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeExpand : System.Windows.Forms.TreeViewCancelEventArgs -&gt; unit&#xA;override this.OnBeforeExpand : System.Windows.Forms.TreeViewCancelEventArgs -&gt; unit" Usage="treeView.OnBeforeExpand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.TreeViewCancelEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.TreeView.BeforeExpand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.TreeView.OnBeforeExpand%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.TreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.TreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeExpand" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterExpand" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterExpand(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBeforeLabelEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeLabelEdit (System.Windows.Forms.NodeLabelEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeLabelEdit(class System.Windows.Forms.NodeLabelEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnBeforeLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeLabelEdit (e As NodeLabelEditEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeLabelEdit(System::Windows::Forms::NodeLabelEditEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeLabelEdit : System.Windows.Forms.NodeLabelEditEventArgs -&gt; unit&#xA;override this.OnBeforeLabelEdit : System.Windows.Forms.NodeLabelEditEventArgs -&gt; unit" Usage="treeView.OnBeforeLabelEdit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.NodeLabelEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.TreeView.OnBeforeLabelEdit%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.TreeView.OnBeforeLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.TreeView.OnBeforeLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBeforeSelect">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeSelect (System.Windows.Forms.TreeViewCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeSelect(class System.Windows.Forms.TreeViewCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeSelect (e As TreeViewCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeSelect(System::Windows::Forms::TreeViewCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeSelect : System.Windows.Forms.TreeViewCancelEventArgs -&gt; unit&#xA;override this.OnBeforeSelect : System.Windows.Forms.TreeViewCancelEventArgs -&gt; unit" Usage="treeView.OnBeforeSelect e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeViewCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.TreeViewCancelEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.TreeView.BeforeSelect" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.TreeView.OnBeforeSelect%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.TreeView.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.TreeView.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Windows.Forms.TreeView.BeforeSelect" />
        <altmember cref="E:System.Windows.Forms.TreeView.AfterSelect" />
        <altmember cref="M:System.Windows.Forms.TreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDrawNode">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawNode (System.Windows.Forms.DrawTreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawNode(class System.Windows.Forms.DrawTreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnDrawNode(System.Windows.Forms.DrawTreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawNode (e As DrawTreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawNode(System::Windows::Forms::DrawTreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawNode : System.Windows.Forms.DrawTreeNodeEventArgs -&gt; unit&#xA;override this.OnDrawNode : System.Windows.Forms.DrawTreeNodeEventArgs -&gt; unit" Usage="treeView.OnDrawNode e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawTreeNodeEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.DrawTreeNodeEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.TreeView.DrawNode" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.TreeView.OnDrawNode%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.TreeView.OnDrawNode(System.Windows.Forms.DrawTreeNodeEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.TreeView.OnDrawNode(System.Windows.Forms.DrawTreeNodeEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Windows.Forms.TreeView.DrawNode" />
        <altmember cref="T:System.Windows.Forms.DrawTreeNodeEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="treeView.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Переопределяет <see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.TreeView.OnHandleCreated%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении <see cref="M:System.Windows.Forms.TreeView.OnHandleCreated(System.EventArgs)" /> в производном классе обязательно вызовите <see cref="M:System.Windows.Forms.TreeView.OnHandleCreated(System.EventArgs)" /> метод базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="treeView.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Переопределяет <see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.TreeView.OnHandleDestroyed%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении <see cref="M:System.Windows.Forms.TreeView.OnHandleDestroyed(System.EventArgs)" /> в производном классе обязательно вызовите <see cref="M:System.Windows.Forms.TreeView.OnHandleDestroyed(System.EventArgs)" /> метод базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnItemDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDrag (System.Windows.Forms.ItemDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDrag(class System.Windows.Forms.ItemDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDrag (e As ItemDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDrag(System::Windows::Forms::ItemDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDrag : System.Windows.Forms.ItemDragEventArgs -&gt; unit&#xA;override this.OnItemDrag : System.Windows.Forms.ItemDragEventArgs -&gt; unit" Usage="treeView.OnItemDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ItemDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.Windows.Forms.ItemDragEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.TreeView.ItemDrag" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.TreeView.OnItemDrag%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.TreeView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.TreeView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Windows.Forms.TreeView.ItemDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="treeView.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.KeyEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.Control.KeyDown" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `true` <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> Если свойство имеет значение `false`, а свойство имеет значение, <xref:System.Windows.Forms.TreeView.OnKeyDown%2A> метод переключается между установками и снятием флажка, когда пользователь нажимает клавишу пробел. <xref:System.Windows.Forms.TreeView.CheckBoxes%2A>  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.TreeView.OnKeyDown%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.TreeView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.TreeView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyPress">
      <MemberSignature Language="C#" Value="protected override void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyPress(class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyPress (e As KeyPressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyPress(System::Windows::Forms::KeyPressEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyPress : System.Windows.Forms.KeyPressEventArgs -&gt; unit" Usage="treeView.OnKeyPress e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.KeyPressEventArgs" />, содержащий данные события.</param>
        <summary>Создает событие <see cref="E:System.Windows.Forms.Control.KeyPress" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `false` <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> Если свойство имеет значение, элемент управления выберет первый элемент, который `e`начинается со значения свойства. <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A>  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.TreeView.OnKeyPress%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.TreeView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.TreeView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="treeView.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.KeyEventArgs" />, содержащий данные события.</param>
        <summary>Переопределяет <see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.TreeView.OnKeyUp%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении <see cref="M:System.Windows.Forms.TreeView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> в производном классе обязательно вызовите <see cref="M:System.Windows.Forms.TreeView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> метод базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected override void OnMouseHover (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseHover(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnMouseHover(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseHover (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseHover(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseHover : EventArgs -&gt; unit" Usage="treeView.OnMouseHover e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.Control.MouseHover" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод выполняет проверку попадания, чтобы определить, находится ли указатель мыши над объектом <xref:System.Windows.Forms.TreeNode>, и, если это так, вызывает <xref:System.Windows.Forms.TreeView.NodeMouseHover> событие. <xref:System.Windows.Forms.TreeView.OnMouseHover%2A>  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.TreeView.OnMouseHover%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.TreeView.OnMouseHover(System.EventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.TreeView.OnMouseHover(System.EventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : EventArgs -&gt; unit" Usage="treeView.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.Control.MouseLeave" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.TreeView.OnMouseLeave%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.TreeView.OnMouseLeave(System.EventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.TreeView.OnMouseLeave(System.EventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnNodeMouseClick">
      <MemberSignature Language="C#" Value="protected virtual void OnNodeMouseClick (System.Windows.Forms.TreeNodeMouseClickEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNodeMouseClick(class System.Windows.Forms.TreeNodeMouseClickEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNodeMouseClick (e As TreeNodeMouseClickEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNodeMouseClick(System::Windows::Forms::TreeNodeMouseClickEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnNodeMouseClick : System.Windows.Forms.TreeNodeMouseClickEventArgs -&gt; unit&#xA;override this.OnNodeMouseClick : System.Windows.Forms.TreeNodeMouseClickEventArgs -&gt; unit" Usage="treeView.OnNodeMouseClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeNodeMouseClickEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.TreeNodeMouseClickEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.TreeView.NodeMouseClick" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.TreeView.OnNodeMouseClick%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.TreeView.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.TreeView.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnNodeMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnNodeMouseDoubleClick (System.Windows.Forms.TreeNodeMouseClickEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNodeMouseDoubleClick(class System.Windows.Forms.TreeNodeMouseClickEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnNodeMouseDoubleClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNodeMouseDoubleClick (e As TreeNodeMouseClickEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNodeMouseDoubleClick(System::Windows::Forms::TreeNodeMouseClickEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnNodeMouseDoubleClick : System.Windows.Forms.TreeNodeMouseClickEventArgs -&gt; unit&#xA;override this.OnNodeMouseDoubleClick : System.Windows.Forms.TreeNodeMouseClickEventArgs -&gt; unit" Usage="treeView.OnNodeMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeNodeMouseClickEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.TreeNodeMouseClickEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.TreeView.NodeMouseDoubleClick" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.TreeView.OnNodeMouseDoubleClick%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.TreeView.OnNodeMouseDoubleClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.TreeView.OnNodeMouseDoubleClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnNodeMouseHover">
      <MemberSignature Language="C#" Value="protected virtual void OnNodeMouseHover (System.Windows.Forms.TreeNodeMouseHoverEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNodeMouseHover(class System.Windows.Forms.TreeNodeMouseHoverEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnNodeMouseHover(System.Windows.Forms.TreeNodeMouseHoverEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNodeMouseHover (e As TreeNodeMouseHoverEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNodeMouseHover(System::Windows::Forms::TreeNodeMouseHoverEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnNodeMouseHover : System.Windows.Forms.TreeNodeMouseHoverEventArgs -&gt; unit&#xA;override this.OnNodeMouseHover : System.Windows.Forms.TreeNodeMouseHoverEventArgs -&gt; unit" Usage="treeView.OnNodeMouseHover e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.TreeNodeMouseHoverEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.Windows.Forms.TreeNodeMouseHoverEventArgs" />, содержащий данные о событии.</param>
        <summary>Создает событие <see cref="E:System.Windows.Forms.TreeView.NodeMouseHover" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.TreeView.OnNodeMouseHover%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.TreeView.OnNodeMouseHover(System.Windows.Forms.TreeNodeMouseHoverEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.TreeView.OnNodeMouseHover(System.Windows.Forms.TreeNodeMouseHoverEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.OnRightToLeftLayoutChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRightToLeftLayoutChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRightToLeftLayoutChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRightToLeftLayoutChanged : EventArgs -&gt; unit&#xA;override this.OnRightToLeftLayoutChanged : EventArgs -&gt; unit" Usage="treeView.OnRightToLeftLayoutChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.TreeView.RightToLeftLayoutChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.TreeView.OnRightToLeftLayoutChanged%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.TreeView.OnRightToLeftLayoutChanged(System.EventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.TreeView.OnRightToLeftLayoutChanged(System.EventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.TreeView.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает расстояние между содержимым элемента управления <see cref="T:System.Windows.Forms.TreeView" /> и его краями.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.Padding" />, указывающий расстояние между краями элемента управления и его содержимым.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данное свойство не применимо к этому классу.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении значения свойства <see cref="P:System.Windows.Forms.TreeView.Padding" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberSignature Language="F#" Value="member this.Paint : System.Windows.Forms.PaintEventHandler " Usage="member this.Paint : System.Windows.Forms.PaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при прорисовке элемента управления<see cref="T:System.Windows.Forms.TreeView" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public string PathSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PathSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PathSeparator : string with get, set" Usage="System.Windows.Forms.TreeView.PathSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("\")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает строку разделителя, используемую в пути к узлу дерева.</summary>
        <value>Строка разделителя, которая используется в свойстве <see cref="P:System.Windows.Forms.TreeNode.FullPath" /> узла дерева. По умолчанию используется символ обратной\\косой черты ().</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Путь к узлу дерева состоит из набора меток узлов дерева, <xref:System.Windows.Forms.TreeView.PathSeparator%2A> разделенных строками-разделителями. Диапазон меток — от корневого узла дерева до нужного узла дерева.  
  
   
  
## Examples  
 В следующем примере кода <xref:System.Windows.Forms.TreeView.PathSeparator%2A> задается свойство <xref:System.Windows.Forms.TreeView> объекта и отображается количество дочерних узлов дерева <xref:System.Windows.Forms.TreeNodeCollection> , <xref:System.Windows.Forms.TreeView.SelectedNode%2A>содержащихся в. Также отображается процент дочернего узла дерева к общему узлу дерева в элементе управления иерархического представления. В этом примере предполагается, что <xref:System.Windows.Forms.Form> у вас <xref:System.Windows.Forms.Button>есть объект с <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.TreeNodeCollection> и элемент управления с, у <xref:System.Windows.Forms.TreeNode> которого есть несколько объектов (желательно с тремя или более уровнями).  
  
 [!code-cpp[TreeNode_ForeColor#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#2)]
 [!code-csharp[TreeNode_ForeColor#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#2)]
 [!code-vb[TreeNode_ForeColor#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.FullPath" />
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayout">
      <MemberSignature Language="C#" Value="public virtual bool RightToLeftLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeftLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.RightToLeftLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeftLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RightToLeftLayout { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeftLayout : bool with get, set" Usage="System.Windows.Forms.TreeView.RightToLeftLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, должен ли элемент управления <see cref="T:System.Windows.Forms.TreeView" /> компоноваться справа налево.</summary>
        <value>Значение <see langword="true" />, если элемент управления должен компоноваться справа налево; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeView.RightToLeftLayout%2A> Свойство предназначено для использования с международными приложениями, в которых язык читается справа налево. Если вы <xref:System.Windows.Forms.TreeView.RightToLeftLayout%2A> задали <xref:System.Windows.Forms.Control.RightToLeft%2A> и `true` для содержимого элемента управления, а текст будет размещен справа налево.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.RightToLeftLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RightToLeftLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RightToLeftLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.RightToLeftLayoutChanged : EventHandler " Usage="member this.RightToLeftLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении значения свойства <see cref="P:System.Windows.Forms.TreeView.RightToLeftLayout" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В этом примере обработчик событий сообщает о возникновении <xref:System.Windows.Forms.TreeView.RightToLeftLayoutChanged> события. Этот отчет поможет вам узнать, когда происходит событие и может помочь при отладке. Чтобы сообщить о нескольких событиях или о событиях, которые происходят часто, рассмотрите <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> или добавления сообщения в многострочный <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы выполнить пример кода, вставьте его в проект, содержащий экземпляр типа <xref:System.Windows.Forms.TreeView> с именем. `TreeView1` Затем убедитесь, что обработчик событий связан с <xref:System.Windows.Forms.TreeView.RightToLeftLayoutChanged> событием.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#639](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#639)]
 [!code-vb[System.Windows.Forms.EventExamples#639](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#639)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scrollable">
      <MemberSignature Language="C#" Value="public bool Scrollable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Scrollable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.Scrollable" />
      <MemberSignature Language="VB.NET" Value="Public Property Scrollable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Scrollable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Scrollable : bool with get, set" Usage="System.Windows.Forms.TreeView.Scrollable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, отображаются ли при необходимости полосы прокрутки в элементе управления иерархического представления.</summary>
        <value>Значение <see langword="true" />, если при необходимости в элементе управления иерархического представления отображаются полосы прокрутки; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если для `true`этого свойства задано значение, полосы прокрутки отображаются <xref:System.Windows.Forms.TreeView> на элементе <xref:System.Windows.Forms.TreeNode> , когда он находится вне области клиента элемента управления.  
  
> [!NOTE]
>  При задании <xref:System.Windows.Forms.TreeView.Scrollable%2A> свойства во время выполнения этот <xref:System.Windows.Forms.TreeView> обработчик создается повторно (см. раздел <xref:System.Windows.Forms.Control.RecreateHandle%2A?displayProperty=nameWithType>), чтобы обновить внешний вид элемента управления. Это приводит к тому, что все узлы дерева будут свернуты, за исключением выбранного <xref:System.Windows.Forms.TreeNode>.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Windows.Forms.BorderStyle> перечисление <xref:System.Windows.Forms.TreeView.BorderStyle%2A>и свойства <xref:System.Windows.Forms.TreeView.ShowLines%2A>, <xref:System.Windows.Forms.TreeView.Scrollable%2A> <xref:System.Windows.Forms.TreeView.HideSelection%2A> , и <xref:System.Windows.Forms.TreeView.ShowRootLines%2A> . Чтобы выполнить этот пример, вставьте следующий код в форму и вызовите `InitializeTreeView` метод в конструкторе или `Load` методе формы.  
  
 [!code-cpp[System.Windows.Forms.TreeViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TreeViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.TreeViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedImageIndex">
      <MemberSignature Language="C#" Value="public int SelectedImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.SelectedImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectedImageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedImageIndex : int with get, set" Usage="System.Windows.Forms.TreeView.SelectedImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.NoneExcludedImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Forms.RelatedImageList("ImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.TreeViewImageIndexConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение индекса в списке изображений, соответствующий изображению, отображаемому при выборе узла дерева.</summary>
        <value>Значение индекса (с нуля), предоставляющее позицию объекта <see cref="T:System.Drawing.Image" /> в списке <see cref="T:System.Windows.Forms.ImageList" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение — это индекс объекта, который <xref:System.Drawing.Image> хранится <xref:System.Windows.Forms.TreeView.ImageList%2A> в массиве, <xref:System.Windows.Forms.ImageList> назначенном свойству. <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A>  
  
> [!NOTE]
>  При задании <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> свойства во время выполнения этот <xref:System.Windows.Forms.TreeView> обработчик создается повторно (см. раздел <xref:System.Windows.Forms.Control.RecreateHandle%2A?displayProperty=nameWithType>), чтобы обновить внешний вид элемента управления. Это приводит к тому, что все узлы дерева будут свернуты, за исключением выбранного <xref:System.Windows.Forms.TreeNode>.  
  
   
  
## Examples  
 В следующем примере кода создается и назначается <xref:System.Windows.Forms.ImageList> <xref:System.Windows.Forms.TreeView> элементу управления <xref:System.Windows.Forms.TreeNode> , а <xref:System.Windows.Forms.TreeView> элемент управления заполняется объектами. Узлам дерева присваиваются изображения из <xref:System.Windows.Forms.ImageList> , которые отображаются в выбранном или невыбранном состоянии. В этом примере предполагается, что <xref:System.Windows.Forms.Form> имеется объект, <xref:System.Windows.Forms.TreeView>содержащий, и <xref:System.Collections.ArrayList> , который `Customer` содержит объекты, содержащие `Order` объекты. Также предполагается, что `Customer` объекты и `Order` определены.  
  
 [!code-cpp[TreeNode_TreeNode#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_TreeNode/CPP/treenode_treenode.cpp#1)]
 [!code-csharp[TreeNode_TreeNode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_TreeNode/CS/treenode_treenode.cs#1)]
 [!code-vb[TreeNode_TreeNode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_TreeNode/VB/treenode_treenode.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Указанное значение индекса меньше 0.</exception>
        <altmember cref="P:System.Windows.Forms.TreeView.ImageList" />
        <altmember cref="P:System.Windows.Forms.TreeView.ImageIndex" />
      </Docs>
    </Member>
    <Member MemberName="SelectedImageKey">
      <MemberSignature Language="C#" Value="public string SelectedImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.SelectedImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedImageKey : string with get, set" Usage="System.Windows.Forms.TreeView.SelectedImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageKeyConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Forms.RelatedImageList("ImageList")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает ключ изображения по умолчанию, отображаемого, когда узел <see cref="T:System.Windows.Forms.TreeNode" /> находится в выбранном состоянии.</summary>
        <value>Ключ изображения по умолчанию, отображаемого, когда узел <see cref="T:System.Windows.Forms.TreeNode" /> находится в выбранном состоянии.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если у <xref:System.Windows.Forms.TreeNode> a нет выбранного набора изображений, изображение, заданное <xref:System.Windows.Forms.TreeView.SelectedImageKey%2A> свойством, будет отображаться, если узел не выбран.  
  
 Свойства <xref:System.Windows.Forms.TreeView.SelectedImageKey%2A> и<xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> являются взаимоисключающими. Если одно из них задано, другое игнорируется. Если задано <xref:System.Windows.Forms.TreeView.SelectedImageKey%2A> свойство <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> , свойство автоматически устанавливается в значение-1. Кроме того, если задать <xref:System.Windows.Forms.TreeView.SelectedImageIndex%2A> свойство <xref:System.Windows.Forms.TreeView.SelectedImageKey%2A> , автоматически будет задана пустая строка ("").  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode SelectedNode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode SelectedNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.SelectedNode" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ SelectedNode { System::Windows::Forms::TreeNode ^ get(); void set(System::Windows::Forms::TreeNode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedNode : System.Windows.Forms.TreeNode with get, set" Usage="System.Windows.Forms.TreeView.SelectedNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает узел дерева, который в текущий момент выбран в элементе управления иерархического представления.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.TreeNode" />, который в текущий момент выбран в элементе управления деревом.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если в настоящее время не выбрано <xref:System.Windows.Forms.TreeView.SelectedNode%2A> , свойство `null`имеет значение. <xref:System.Windows.Forms.TreeNode>  
  
 При установке этого свойства указанный узел прокручивается в представление, а все родительские узлы разворачиваются, чтобы указанный узел был видимым.  
  
 Если родительский узел или любой узел-предок выбранного узла свертывается либо программно, либо с помощью действия пользователя, свернутый узел становится выбранным узлом.  
  
   
  
## Examples  
 В следующем примере кода <xref:System.Windows.Forms.TreeView.PathSeparator%2A> задается свойство <xref:System.Windows.Forms.TreeView> объекта и отображается количество дочерних узлов дерева <xref:System.Windows.Forms.TreeNodeCollection> , <xref:System.Windows.Forms.TreeView.SelectedNode%2A>содержащихся в. Также отображается процент дочернего узла дерева к общему узлу дерева в элементе управления иерархического представления. В этом примере предполагается, что <xref:System.Windows.Forms.Form> у вас <xref:System.Windows.Forms.Button>есть объект с <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.TreeNodeCollection> и элемент управления с, у <xref:System.Windows.Forms.TreeNode> которого есть несколько объектов (желательно с тремя или более уровнями).  
  
 [!code-cpp[TreeNode_ForeColor#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeNode_ForeColor/CPP/treenode_forecolor.cpp#2)]
 [!code-csharp[TreeNode_ForeColor#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeNode_ForeColor/CS/treenode_forecolor.cs#2)]
 [!code-vb[TreeNode_ForeColor#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeNode_ForeColor/VB/treenode_forecolor.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
      </Docs>
    </Member>
    <Member MemberName="ShowLines">
      <MemberSignature Language="C#" Value="public bool ShowLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ShowLines" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowLines { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowLines : bool with get, set" Usage="System.Windows.Forms.TreeView.ShowLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, отображаются ли линии между узлами дерева в элементе управления иерархического представления.</summary>
        <value>Значение <see langword="true" />, если между узлами дерева в элементе управления иерархического представления отображаются линии; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Windows.Forms.TreeView.ShowLines%2A> параметр имеет `true`значение, <xref:System.Windows.Forms.TreeView.FullRowSelect%2A> свойство игнорируется.  
  
   
  
## Examples  
 В следующем примере кода показана настроенная <xref:System.Windows.Forms.TreeView>. При наследовании <xref:System.Windows.Forms.TreeView> класса Эта пользовательская версия имеет все функциональные возможности типичного <xref:System.Windows.Forms.TreeView>. Изменение различных значений свойств в конструкторе обеспечивает уникальный внешний вид. Так как <xref:System.Windows.Forms.TreeView.OnAfterSelect%2A> свойство имеет значение false, Пользовательский элемент управления также переопределяет метод, чтобы узлы можно было развернуть и свернуть при нажатии. <xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A>  
  
 Такой элемент управления, настроенный таким образом, может использоваться во всей Организации, что упрощает предоставление согласованного интерфейса без необходимости указания свойств элемента управления в каждом отдельном проекте.  
  
 [!code-cpp[TreeViewCustomization#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewCustomization/CPP/treeviewcustomization.cpp#2)]
 [!code-csharp[TreeViewCustomization#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewCustomization/CS/treeviewcustomization.cs#2)]
 [!code-vb[TreeViewCustomization#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewCustomization/VB/treeviewcustomization.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowNodeToolTips">
      <MemberSignature Language="C#" Value="public bool ShowNodeToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowNodeToolTips" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ShowNodeToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowNodeToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowNodeToolTips { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowNodeToolTips : bool with get, set" Usage="System.Windows.Forms.TreeView.ShowNodeToolTips" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, показывающее, отображаются ли всплывающие подсказки при наведении указателя мыши на элемент управления <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
        <value>Значение <see langword="true" />, если всплывающие подсказки отображаются при наведении указателя мыши на узел <see cref="T:System.Windows.Forms.TreeNode" />; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы подсказки были видимы, необходимо задать <xref:System.Windows.Forms.TreeNode.ToolTipText%2A> <xref:System.Windows.Forms.TreeNode>для.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Windows.Forms.TreeNode.ToolTipText%2A> свойства и. <xref:System.Windows.Forms.TreeView.ShowNodeToolTips%2A> Чтобы выполнить этот пример, вставьте следующий код в форму Windows Forms и вызов `InitializeTreeViewWithToolTips` из конструктора формы или <xref:System.Windows.Forms.Form.Load> обработчика событий.  
  
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.ToolTipText" />
      </Docs>
    </Member>
    <Member MemberName="ShowPlusMinus">
      <MemberSignature Language="C#" Value="public bool ShowPlusMinus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowPlusMinus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ShowPlusMinus" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowPlusMinus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowPlusMinus { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowPlusMinus : bool with get, set" Usage="System.Windows.Forms.TreeView.ShowPlusMinus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, отображаются ли кнопки со знаками "плюс" (+) и "минус" (-) рядом с теми узлами дерева, у которых имеются дочерние узлы.</summary>
        <value>Значение <see langword="true" />, если кнопки со знаками "плюс" (+) и "минус" (-) отображаются рядом с теми узлами дерева, у которых имеются дочерние узлы; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Кнопки «плюс» и «минус» отображаются рядом с корневыми узлами дерева, <xref:System.Windows.Forms.TreeView.ShowRootLines%2A> только если свойство имеет `true`значение. Если кнопки со знаком «плюс» и «минус» не отображаются, визуальная подсказка не существует, чтобы показать, что узел дерева содержит дочерние узлы дерева и является расширяемым. Затем пользователь должен дважды щелкнуть узел дерева, чтобы определить, содержит ли он дочерние узлы дерева, развернуть его или свернуть.  
  
   
  
## Examples  
 В следующем примере кода показана настроенная <xref:System.Windows.Forms.TreeView>. При наследовании <xref:System.Windows.Forms.TreeView> класса Эта пользовательская версия имеет все функциональные возможности типичного <xref:System.Windows.Forms.TreeView>. Изменение различных значений свойств в конструкторе обеспечивает уникальный внешний вид. Так как <xref:System.Windows.Forms.TreeView.OnAfterSelect%2A> свойство имеет значение false, Пользовательский элемент управления также переопределяет метод, чтобы узлы можно было развернуть и свернуть при нажатии. <xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A>  
  
 Такой элемент управления, настроенный таким образом, может использоваться во всей Организации, что упрощает предоставление согласованного интерфейса без необходимости указания свойств элемента управления в каждом отдельном проекте.  
  
 [!code-cpp[TreeViewCustomization#2](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewCustomization/CPP/treeviewcustomization.cpp#2)]
 [!code-csharp[TreeViewCustomization#2](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewCustomization/CS/treeviewcustomization.cs#2)]
 [!code-vb[TreeViewCustomization#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewCustomization/VB/treeviewcustomization.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.ShowRootLines" />
      </Docs>
    </Member>
    <Member MemberName="ShowRootLines">
      <MemberSignature Language="C#" Value="public bool ShowRootLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowRootLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.ShowRootLines" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowRootLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowRootLines { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowRootLines : bool with get, set" Usage="System.Windows.Forms.TreeView.ShowRootLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, отображаются ли линии между корневыми узлами дерева в элементе управления иерархического представления.</summary>
        <value>Значение <see langword="true" />, если между корневыми узлами дерева в представлении дерева отображаются линии; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если свойство имеет `false`значение, кнопки "плюс" и "минус-знак" не будут отображаться рядом с корневыми узлами <xref:System.Windows.Forms.TreeView.ShowPlusMinus%2A> дерева, а свойство не будет действовать. <xref:System.Windows.Forms.TreeView.ShowRootLines%2A>  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Windows.Forms.BorderStyle> перечисление <xref:System.Windows.Forms.TreeView.BorderStyle%2A>и свойства <xref:System.Windows.Forms.TreeView.ShowLines%2A>, <xref:System.Windows.Forms.TreeView.Scrollable%2A> <xref:System.Windows.Forms.TreeView.HideSelection%2A> , и <xref:System.Windows.Forms.TreeView.ShowRootLines%2A> . Чтобы выполнить этот пример, вставьте следующий код в форму и вызовите `InitializeTreeView` метод в конструкторе или `Load` методе формы.  
  
 [!code-cpp[System.Windows.Forms.TreeViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TreeViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.TreeViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeView.ShowPlusMinus" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort();" />
      <MemberSignature Language="F#" Value="member this.Sort : unit -&gt; unit" Usage="treeView.Sort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сортирует элементы в элементе управления <see cref="T:System.Windows.Forms.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод повторно применяет сортировку по умолчанию, в алфавитном порядке по тексту узла, или <xref:System.Windows.Forms.TreeView.TreeViewNodeSorter%2A> пользовательскую сортировку, указанную свойством. Этот метод можно использовать при изменении текста существующих узлов или при перемещении узлов пользователем и необходимости в повторной сортировке элементов.  
  
> [!NOTE]
>  В сортировщике по умолчанию <xref:System.Globalization.CompareInfo.Compare%2A> используется метод, <xref:System.Windows.Forms.Application.CurrentCulture%2A> основанный на заданном приложением. Это означает, <xref:System.Windows.Forms.TreeNode> что объекты с равным значением сохраняются в том порядке, в котором они были добавлены <xref:System.Windows.Forms.TreeView> в элемент управления. Это поведение может отличаться при применении пользовательской сортировки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public bool Sorted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Sorted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.Sorted" />
      <MemberSignature Language="VB.NET" Value="Public Property Sorted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Sorted { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Sorted : bool with get, set" Usage="System.Windows.Forms.TreeView.Sorted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, производится ли сортировка узлов дерева в иерархическом представлении.</summary>
        <value>Значение <see langword="true" />, если узлы дерева в иерархическом представлении сортируются; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Windows.Forms.TreeView.Sorted%2A> параметр имеет `true`значение, <xref:System.Windows.Forms.TreeNode> объекты сортируются в алфавитном порядке по значениям их <xref:System.Windows.Forms.TreeNode.Text%2A> свойств. Следует всегда использовать <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> и <xref:System.Windows.Forms.TreeView.EndUpdate%2A> для поддержания производительности при добавлении большого количества элементов в сортировку <xref:System.Windows.Forms.TreeView>. При изменении текста существующего узла необходимо вызвать метод <xref:System.Windows.Forms.TreeView.Sort%2A> , чтобы пересортировать элементы.  
  
> [!NOTE]
>  В сортировщике по умолчанию <xref:System.Globalization.CompareInfo.Compare%2A> используется метод, <xref:System.Windows.Forms.Application.CurrentCulture%2A> основанный на заданном приложением. Это означает, <xref:System.Windows.Forms.TreeNode> что объекты с равным значением сохраняются в том порядке, в котором они были добавлены <xref:System.Windows.Forms.TreeView> в элемент управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList StateImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList StateImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.StateImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property StateImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ StateImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StateImageList : System.Windows.Forms.ImageList with get, set" Usage="System.Windows.Forms.TreeView.StateImageList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает список изображений, используемый для указания состояния элемента управления <see cref="T:System.Windows.Forms.TreeView" /> и его узлов.</summary>
        <value>Список изображений <see cref="T:System.Windows.Forms.ImageList" />, используемый для указания состояния элемента управления <see cref="T:System.Windows.Forms.TreeView" /> и его узлов.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы <xref:System.Windows.Forms.TreeNode>указать состояние, <xref:System.Windows.Forms.TreeNode.StateImageKey%2A> <xref:System.Windows.Forms.TreeView.StateImageList%2A> задайте свойство, <xref:System.Windows.Forms.TreeNode.StateImageIndex%2A> а также задайте для каждого <xref:System.Windows.Forms.TreeNode>свойства значение.  
  
 Изображения состояния, отображаемые в <xref:System.Windows.Forms.TreeView> , по умолчанию имеют размер 16 x 16 пикселей. <xref:System.Windows.Forms.ImageList.ImageSize%2A> Установка свойства<xref:System.Windows.Forms.TreeView.StateImageList%2A> объекта не влияет на отображение изображений. Однако размер изображений состояния изменяется в соответствии с параметром DPI системы, если файл App. config содержит следующую запись:  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
  
```  
  
 `true` <xref:System.Windows.Forms.TreeView> <xref:System.Windows.Forms.TreeNode> <xref:System.Windows.Forms.TreeView.StateImageList%2A> Если свойство объекта <xref:System.Windows.Forms.TreeView> имеетзначениеизаданосвойство,каждоеизкоторыхсодержитсяв,отображает<xref:System.Windows.Forms.TreeView.StateImageList%2A> первое и второе изображения из, чтобы указать <xref:System.Windows.Forms.TreeView.CheckBoxes%2A> непроверенное или установленное состояние соответственно. <xref:System.Windows.Forms.TreeView.StateImageList%2A> Свойство необходимо задать перед добавлением узлов в, <xref:System.Windows.Forms.TreeView> чтобы предотвратить отображение изображений состояния во время разработки для узлов, не имеющих набора изображений состояния.  
  
   
  
## Examples  
 В следующем примере кода показано <xref:System.Windows.Forms.TreeView.StateImageList%2A> свойство. Чтобы выполнить этот пример, вставьте код в форму Windows Forms и вызов `InitializeCheckTreeView` из конструктора формы или <xref:System.Windows.Forms.Form.Load> обработчика событий.  
  
 [!code-cpp[System.Windows.Forms.TreeViewWhidbeyMembers#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/cpp/Form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#8)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.TreeView.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает текст объекта <see cref="T:System.Windows.Forms.TreeView" />.</summary>
        <value>Значение <see langword="Null" /> во всех случаях.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данное свойство не применимо к этому классу.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.TreeView.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberSignature Language="F#" Value="member this.TextChanged : EventHandler " Usage="member this.TextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении свойства <see cref="P:System.Windows.Forms.TreeView.Text" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopNode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode TopNode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode TopNode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.TopNode" />
      <MemberSignature Language="VB.NET" Value="Public Property TopNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ TopNode { System::Windows::Forms::TreeNode ^ get(); void set(System::Windows::Forms::TreeNode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TopNode : System.Windows.Forms.TreeNode with get, set" Usage="System.Windows.Forms.TreeView.TopNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает первый полностью отображаемый узел дерева в элементе управления иерархического представления.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.TreeNode" />, который предоставляет первый полностью отображаемый узел дерева в элементе управления иерархического представления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Изначально функция <xref:System.Windows.Forms.TreeView>возвращает первый корневой узел дерева, расположенный в верхней части. <xref:System.Windows.Forms.TreeView.TopNode%2A> Однако если пользователь прокручивает содержимое, то в верхней части может находиться другой узел дерева.  
  
> [!NOTE]
>  Установка этого свойства не оказывает влияния, <xref:System.Windows.Forms.TreeView.Scrollable%2A> если свойство имеет `false`значение.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Windows.Forms.TreeView.BeforeLabelEdit> <xref:System.Windows.Forms.TreeView.AfterSelect> члены и <xref:System.Windows.Forms.TreeView.TopNode%2A> . Чтобы выполнить этот пример, вставьте следующий код в форму, содержащую `TreeView` элемент управления с именем. `TreeView1` Вызовите `Load` метод в конструкторе или методе формы. `InitializeTreeView`  
  
 [!code-cpp[System.Windows.Forms.TreeViewAndPrintPreview#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TreeViewAndPrintPreview#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.TreeViewAndPrintPreview#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.TreeViewAndPrintPreview#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewAndPrintPreview/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.IsVisible" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="treeView.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает объект <see cref="T:System.String" />, содержащий имя <see cref="T:System.ComponentModel.Component" />, если оно есть. Этот метод не следует переопределять.</summary>
        <returns>Объект <see cref="T:System.String" />, содержащий имя <see cref="T:System.ComponentModel.Component" />, если оно есть, или <see langword="null" />, если <see cref="T:System.ComponentModel.Component" /> не имеет имени.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.Component.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TreeViewNodeSorter">
      <MemberSignature Language="C#" Value="public System.Collections.IComparer TreeViewNodeSorter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IComparer TreeViewNodeSorter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.TreeViewNodeSorter" />
      <MemberSignature Language="VB.NET" Value="Public Property TreeViewNodeSorter As IComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IComparer ^ TreeViewNodeSorter { System::Collections::IComparer ^ get(); void set(System::Collections::IComparer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TreeViewNodeSorter : System.Collections.IComparer with get, set" Usage="System.Windows.Forms.TreeView.TreeViewNodeSorter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает реализацию интерфейса <see cref="T:System.Collections.IComparer" /> для выполнения пользовательской сортировки узлов <see cref="T:System.Windows.Forms.TreeView" />.</summary>
        <value>Интерфейс <see cref="T:System.Collections.IComparer" /> для выполнения пользовательской сортировки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пользовательская сортировка применяется, если задан <xref:System.Windows.Forms.TreeView.TreeViewNodeSorter%2A> параметр.  
  
 При изменении <xref:System.Windows.Forms.TreeView.Sort%2A>меткиможно вызвать метод для повторной сортировки элементов с помощью <xref:System.Windows.Forms.TreeView.TreeViewNodeSorter%2A> настраиваемого сортировщика, заданного свойством. <xref:System.Windows.Forms.TreeNode>  
  
> [!NOTE]
>  В сортировщике по умолчанию <xref:System.Globalization.CompareInfo.Compare%2A> используется метод, <xref:System.Windows.Forms.Application.CurrentCulture%2A> основанный на заданном приложением. Это означает, <xref:System.Windows.Forms.TreeNode> что объекты с равным значением сохраняются в том порядке, в котором они были добавлены <xref:System.Windows.Forms.TreeView> в элемент управления. Это поведение может отличаться при применении пользовательской сортировки.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Windows.Forms.TreeView.TreeViewNodeSorter%2A> свойство для сортировки узлов с наименьшей на самый крупный. Чтобы выполнить этот пример, вставьте следующий код в форму Windows Forms и вызов `InitializeTreeView1` из конструктора формы или <xref:System.Windows.Forms.Form.Load> обработчика событий.  
  
 [!code-cpp[System.Windows.Forms.TreeViewWhidbeyMembers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/cpp/Form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.TreeViewWhidbeyMembers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.TreeViewWhidbeyMembers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TreeViewWhidbeyMembers/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IComparer" />
      </Docs>
    </Member>
    <Member MemberName="VisibleCount">
      <MemberSignature Language="C#" Value="public int VisibleCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisibleCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TreeView.VisibleCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VisibleCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int VisibleCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VisibleCount : int" Usage="System.Windows.Forms.TreeView.VisibleCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает количество узлов дерева, которые могут быть полностью отображены в элементе управления иерархического представления.</summary>
        <value>Количество элементов <see cref="T:System.Windows.Forms.TreeNode" />, которые могут быть полностью отображены в элементе управления <see cref="T:System.Windows.Forms.TreeView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeView.VisibleCount%2A> Значение может быть больше числа узлов дерева в представлении в виде дерева. Значение вычисляется путем деления высоты клиентского окна на высоту элемента узла дерева. Результатом является общее число <xref:System.Windows.Forms.TreeNode> объектов <xref:System.Windows.Forms.TreeView> , которое может отображаться в пределах его текущих измерений.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.IsVisible" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeView.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="treeView.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">Сообщение <see cref="T:System.Windows.Forms.Message" /> Windows для обработки.</param>
        <summary>Переопределяет <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermissionFlag">для доступа к неуправляемому коду при получении значения свойства. Связанное перечисление:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>