<Type Name="NativeWindow" FullName="System.Windows.Forms.NativeWindow">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1849ec59820e530c02906f4147a5691c2957343f" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70316641" /></Metadata><TypeSignature Language="C#" Value="public class NativeWindow : MarshalByRefObject, System.Windows.Forms.IWin32Window" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi NativeWindow extends System.MarshalByRefObject implements class System.Windows.Forms.IWin32Window" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.NativeWindow" />
  <TypeSignature Language="VB.NET" Value="Public Class NativeWindow&#xA;Inherits MarshalByRefObject&#xA;Implements IWin32Window" />
  <TypeSignature Language="C++ CLI" Value="public ref class NativeWindow : MarshalByRefObject, System::Windows::Forms::IWin32Window" />
  <TypeSignature Language="F#" Value="type NativeWindow = class&#xA;    inherit MarshalByRefObject&#xA;    interface IWin32Window" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Forms.IWin32Window</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="deb4a-101">Обеспечивает низкоуровневую инкапсуляцию дескриптора окна и процедуры окна.</span><span class="sxs-lookup"><span data-stu-id="deb4a-101">Provides a low-level encapsulation of a window handle and a window procedure.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb4a-102">Этот класс автоматически управляет созданием и регистрацией класса окна.</span><span class="sxs-lookup"><span data-stu-id="deb4a-102">This class automatically manages window class creation and registration.</span></span>  
  
 <span data-ttu-id="deb4a-103">Окно не подходит для сборки мусора, если оно связано с обработчиком окна.</span><span class="sxs-lookup"><span data-stu-id="deb4a-103">A window is not eligible for garbage collection when it is associated with a window handle.</span></span> <span data-ttu-id="deb4a-104">Для обеспечения правильной сборки мусора дескрипторы должны либо быть уничтожены вручную <xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A> с помощью, <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A>либо освобождены с помощью.</span><span class="sxs-lookup"><span data-stu-id="deb4a-104">To ensure proper garbage collection, handles must either be destroyed manually using <xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A> or released using <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="deb4a-105"><xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> Метод вызывается при обработке сообщения WM_NCDESTROY.</span><span class="sxs-lookup"><span data-stu-id="deb4a-105">The <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> method is called when the WM_NCDESTROY message is processed.</span></span> <span data-ttu-id="deb4a-106">Это означает, что в случаях, когда не требуется вручную вызывать <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A>, но рекомендуется сделать это.</span><span class="sxs-lookup"><span data-stu-id="deb4a-106">This means there are cases in which when you do not need to manually call <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A>, but it is good practice to do so.</span></span>  
  
 <span data-ttu-id="deb4a-107"><xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> <xref:System.Windows.Forms.NativeWindow.Handle%2A> <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> <xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A>Класс предоставляет следующие свойства и методы для управления дескрипторами:,,, и. <xref:System.Windows.Forms.NativeWindow></span><span class="sxs-lookup"><span data-stu-id="deb4a-107">The <xref:System.Windows.Forms.NativeWindow> class provides the following properties and methods to manage handles: <xref:System.Windows.Forms.NativeWindow.Handle%2A>, <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A>, <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A>, <xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A>, and <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="deb4a-108">В следующем примере кода показано перехват сообщений окна операционной системы в процедуре окна и создание окна с заданным именем класса окна операционной системы.</span><span class="sxs-lookup"><span data-stu-id="deb4a-108">The following code example demonstrates intercepting operating system window messages in a window procedure, and creating a window with a specific operating system window class name.</span></span> <span data-ttu-id="deb4a-109">В примере создаются два класса, которые наследуются от <xref:System.Windows.Forms.NativeWindow> этого.</span><span class="sxs-lookup"><span data-stu-id="deb4a-109">The example creates two classes that inherit from <xref:System.Windows.Forms.NativeWindow> that accomplish this.</span></span>  
  
 <span data-ttu-id="deb4a-110">Класс подключается к процедуре окна формы, передаваемой в конструктор, и <xref:System.Windows.Forms.NativeWindow.WndProc%2A> переопределяет метод для перехвата `WM_ACTIVATEAPP` сообщения окна. `MyNativeWindowListener`</span><span class="sxs-lookup"><span data-stu-id="deb4a-110">The `MyNativeWindowListener` class hooks into the window procedure of the form passed into the constructor, and overrides the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercept the `WM_ACTIVATEAPP` window message.</span></span> <span data-ttu-id="deb4a-111">Класс демонстрирует использование <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> методов и <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> для <xref:System.Windows.Forms.NativeWindow> задания обрабатываемого окна.</span><span class="sxs-lookup"><span data-stu-id="deb4a-111">The class demonstrates the usage of the <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> and <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> methods to identify the window handle the <xref:System.Windows.Forms.NativeWindow> will use.</span></span> <span data-ttu-id="deb4a-112">Этот маркер назначается на основе <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> событий и. <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="deb4a-112">The handle is assign based upon the <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> and <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType> events.</span></span> <span data-ttu-id="deb4a-113">Когда получено сообщение `form1.ApplicationActivated` окна,классвызываетметод.`WM_ACTIVATEAPP`</span><span class="sxs-lookup"><span data-stu-id="deb4a-113">When the `WM_ACTIVATEAPP` window message is received, the class calls the `form1.ApplicationActivated` method.</span></span>  
  
 <span data-ttu-id="deb4a-114">Класс создает новое окно с параметром, <xref:System.Windows.Forms.CreateParams.ClassName%2A> имеющим значение `BUTTON`. `MyNativeWindow`</span><span class="sxs-lookup"><span data-stu-id="deb4a-114">The `MyNativeWindow` class creates a new window with the <xref:System.Windows.Forms.CreateParams.ClassName%2A> set to `BUTTON`.</span></span> <span data-ttu-id="deb4a-115">Класс демонстрирует использование <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> метода и <xref:System.Windows.Forms.NativeWindow.WndProc%2A> переопределение метода для перехвата полученных сообщений окна.</span><span class="sxs-lookup"><span data-stu-id="deb4a-115">The class demonstrates using the <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> method and overriding the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercept window messages that are received.</span></span>  
  
 [!code-cpp[NativeWindow#1](~/samples/snippets/cpp/VS_Snippets_Winforms/NativeWindow/CPP/form1.cpp#1)]
 [!code-csharp[NativeWindow#1](~/samples/snippets/csharp/VS_Snippets_Winforms/NativeWindow/CS/form1.cs#1)]
 [!code-vb[NativeWindow#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/NativeWindow/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="deb4a-116">для непосредственного вызывающего объекта, чтобы вызвать неуправляемый код.</span><span class="sxs-lookup"><span data-stu-id="deb4a-116">for the immediate caller to call unmanaged code.</span></span> <span data-ttu-id="deb4a-117">Связанное перечисление:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="deb4a-117">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
    <altmember cref="T:System.IntPtr" />
    <altmember cref="T:System.Windows.Forms.Application" />
    <altmember cref="T:System.Windows.Forms.AxHost" />
    <altmember cref="T:System.Windows.Forms.Control" />
    <altmember cref="T:System.Windows.Forms.Form" />
    <altmember cref="T:System.Windows.Forms.IWin32Window" />
    <altmember cref="T:System.Windows.Forms.Message" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NativeWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NativeWindow();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="deb4a-118">Инициализирует экземпляр класса <see cref="T:System.Windows.Forms.NativeWindow" />.</span><span class="sxs-lookup"><span data-stu-id="deb4a-118">Initializes an instance of the <see cref="T:System.Windows.Forms.NativeWindow" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb4a-119">Это конструктор по умолчанию <xref:System.Windows.Forms.NativeWindow.%23ctor%2A> , предоставляемый компилятором.</span><span class="sxs-lookup"><span data-stu-id="deb4a-119">This is the default <xref:System.Windows.Forms.NativeWindow.%23ctor%2A> constructor provided by the compiler.</span></span> <span data-ttu-id="deb4a-120"><xref:System.Windows.Forms.NativeWindow> Класс также имеет статический конструктор, который инициализирует обработчики сообщений для всего домена приложения и хэш-таблицы.</span><span class="sxs-lookup"><span data-stu-id="deb4a-120">The <xref:System.Windows.Forms.NativeWindow> class also has a static constructor that initializes application domain-wide message handlers and hash tables.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NativeWindow.Finalize" />
        <altmember cref="T:System.AppDomain" />
      </Docs>
    </Member>
    <Member MemberName="AssignHandle">
      <MemberSignature Language="C#" Value="public void AssignHandle (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssignHandle(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssignHandle (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssignHandle(IntPtr handle);" />
      <MemberSignature Language="F#" Value="member this.AssignHandle : nativeint -&gt; unit" Usage="nativeWindow.AssignHandle handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="deb4a-121">Дескриптор, назначаемый данному окну.</span><span class="sxs-lookup"><span data-stu-id="deb4a-121">The handle to assign to this window.</span></span></param>
        <summary><span data-ttu-id="deb4a-122">Назначает дескриптор данному окну.</span><span class="sxs-lookup"><span data-stu-id="deb4a-122">Assigns a handle to this window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb4a-123"><xref:System.Windows.Forms.NativeWindow.WndProc%2A>перехватывает сообщения окна, отправленные `handle` в параметр.</span><span class="sxs-lookup"><span data-stu-id="deb4a-123"><xref:System.Windows.Forms.NativeWindow.WndProc%2A> intercepts window messages sent to the `handle` parameter.</span></span> <span data-ttu-id="deb4a-124">Используйте <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> для сброса процедуры окна обработчика в процедуру окна по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="deb4a-124">Use <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> to reset the handle's window procedure to the default window procedure.</span></span>  
  
 <span data-ttu-id="deb4a-125">Метод вызывает метод, чтобы указать <xref:System.Windows.Forms.NativeWindow.Handle%2A> , что значение свойства изменилось. <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A></span><span class="sxs-lookup"><span data-stu-id="deb4a-125">The <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> method calls the <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> method to indicate that the value of the <xref:System.Windows.Forms.NativeWindow.Handle%2A> property has changed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="deb4a-126">Присваиваемый маркер не может находиться в другом процессе приложения.</span><span class="sxs-lookup"><span data-stu-id="deb4a-126">The handle to assign cannot be in a different application process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="deb4a-127">В следующем примере кода показано перехват сообщений окна операционной системы в процедуре окна.</span><span class="sxs-lookup"><span data-stu-id="deb4a-127">The following code example demonstrates intercepting operating system window messages in a window procedure.</span></span> <span data-ttu-id="deb4a-128">В примере создается класс, наследующий от <xref:System.Windows.Forms.NativeWindow> , для выполнения этого.</span><span class="sxs-lookup"><span data-stu-id="deb4a-128">The example creates a class that inherits from <xref:System.Windows.Forms.NativeWindow> to accomplish this.</span></span>  
  
 <span data-ttu-id="deb4a-129">Класс подключается к процедуре окна формы, передаваемой в конструктор, и <xref:System.Windows.Forms.NativeWindow.WndProc%2A> переопределяет `WM_ACTIVATEAPP` метод для перехвата сообщения окна. `MyNativeWindowListener`</span><span class="sxs-lookup"><span data-stu-id="deb4a-129">The `MyNativeWindowListener` class hooks into the window procedure of the form passed into the constructor, and overrides the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercepts the `WM_ACTIVATEAPP` window message.</span></span> <span data-ttu-id="deb4a-130">Класс демонстрирует использование <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> методов и <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> для указания того, какой из <xref:System.Windows.Forms.NativeWindow> окон должен использоваться.</span><span class="sxs-lookup"><span data-stu-id="deb4a-130">The class demonstrates the use of the <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> and <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> methods to identify which window handle the <xref:System.Windows.Forms.NativeWindow> will use.</span></span> <span data-ttu-id="deb4a-131">Маркер назначается на основе <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> событий и. <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="deb4a-131">The handle is assigned based upon the <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> and <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType> events.</span></span> <span data-ttu-id="deb4a-132">Когда получено сообщение `form1.ApplicationActivated` окна,классвызываетметод.`WM_ACTIVATEAPP`</span><span class="sxs-lookup"><span data-stu-id="deb4a-132">When the `WM_ACTIVATEAPP` window message is received, the class calls the `form1.ApplicationActivated` method.</span></span>  
  
 <span data-ttu-id="deb4a-133">Этот код является выдержкой из примера, показанного в <xref:System.Windows.Forms.NativeWindow> обзоре класса.</span><span class="sxs-lookup"><span data-stu-id="deb4a-133">This code is an excerpt from the example shown in the <xref:System.Windows.Forms.NativeWindow> class overview.</span></span> <span data-ttu-id="deb4a-134">Для краткости не указан некоторый код.</span><span class="sxs-lookup"><span data-stu-id="deb4a-134">Some code is not shown for the purpose of brevity.</span></span> <span data-ttu-id="deb4a-135">Полный <xref:System.Windows.Forms.NativeWindow> листинг кода см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="deb4a-135">See <xref:System.Windows.Forms.NativeWindow> for the whole code listing.</span></span>  
  
 [!code-cpp[NativeWindow#2](~/samples/snippets/cpp/VS_Snippets_Winforms/NativeWindow/CPP/form1.cpp#2)]
 [!code-csharp[NativeWindow#2](~/samples/snippets/csharp/VS_Snippets_Winforms/NativeWindow/CS/form1.cs#2)]
 [!code-vb[NativeWindow#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/NativeWindow/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="deb4a-136">Этому окну уже назначен дескриптор.</span><span class="sxs-lookup"><span data-stu-id="deb4a-136">This window already has a handle.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="deb4a-137">Не удается извлечь процедуру окна для связанного собственного окна.</span><span class="sxs-lookup"><span data-stu-id="deb4a-137">The windows procedure for the associated native window could not be retrieved.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.Finalize" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.OnHandleChange" />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="public virtual void CreateHandle (System.Windows.Forms.CreateParams cp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateHandle(class System.Windows.Forms.CreateParams cp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CreateHandle (cp As CreateParams)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CreateHandle(System::Windows::Forms::CreateParams ^ cp);" />
      <MemberSignature Language="F#" Value="abstract member CreateHandle : System.Windows.Forms.CreateParams -&gt; unit&#xA;override this.CreateHandle : System.Windows.Forms.CreateParams -&gt; unit" Usage="nativeWindow.CreateHandle cp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cp" Type="System.Windows.Forms.CreateParams" />
      </Parameters>
      <Docs>
        <param name="cp"><span data-ttu-id="deb4a-138">Структура <see cref="T:System.Windows.Forms.CreateParams" />, задающая параметры создания для данного окна.</span><span class="sxs-lookup"><span data-stu-id="deb4a-138">A <see cref="T:System.Windows.Forms.CreateParams" /> that specifies the creation parameters for this window.</span></span></param>
        <summary><span data-ttu-id="deb4a-139">Создает окно и его дескриптор, используя указанные параметры создания.</span><span class="sxs-lookup"><span data-stu-id="deb4a-139">Creates a window and its handle with the specified creation parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb4a-140">Параметр задает значения, которые передаются в собственный метод Win32 `CreateWindowEx` для создания окна и его обработчика. `cp`</span><span class="sxs-lookup"><span data-stu-id="deb4a-140">The `cp` parameter specifies the values that are passed to the native Win32 `CreateWindowEx` method to create a window and its handle.</span></span>  
  
 <span data-ttu-id="deb4a-141">Если поле не `null`имеет значение, созданный обработчик окна наследуется от указанного класса. <xref:System.Windows.Forms.CreateParams.ClassName%2A></span><span class="sxs-lookup"><span data-stu-id="deb4a-141">When the <xref:System.Windows.Forms.CreateParams.ClassName%2A> field is not `null`, the newly created window handle inherits from the specified class.</span></span> <span data-ttu-id="deb4a-142">Например, если <xref:System.Windows.Forms.CreateParams.ClassName%2A> `BUTTON`задано значение, то только что созданное окно основано на классе `BUTTON` окна Win32.</span><span class="sxs-lookup"><span data-stu-id="deb4a-142">For example, if <xref:System.Windows.Forms.CreateParams.ClassName%2A> is set to `BUTTON`, the newly created window is based on the Win32 `BUTTON` window class.</span></span> <span data-ttu-id="deb4a-143">Свойство объекта должно либо быть `null` ссылкой, либо ссылаться на экземпляр класса, объявленный как структура. <xref:System.Windows.Forms.CreateParams.ClassName%2A> <xref:System.Windows.Forms.CreateParams.Param%2A></span><span class="sxs-lookup"><span data-stu-id="deb4a-143">The <xref:System.Windows.Forms.CreateParams.Param%2A> property of the <xref:System.Windows.Forms.CreateParams.ClassName%2A> object must either be `null` or reference an instance of a class that was declared as a structure.</span></span>  
  
 <span data-ttu-id="deb4a-144">Этот код является выдержкой из примера, показанного в <xref:System.Windows.Forms.NativeWindow> обзоре класса.</span><span class="sxs-lookup"><span data-stu-id="deb4a-144">This code is an excerpt from the example shown in the <xref:System.Windows.Forms.NativeWindow> class overview.</span></span> <span data-ttu-id="deb4a-145">Для краткости не указан некоторый код.</span><span class="sxs-lookup"><span data-stu-id="deb4a-145">Some code is not shown for the purpose of brevity.</span></span> <span data-ttu-id="deb4a-146">Полный <xref:System.Windows.Forms.NativeWindow> листинг кода см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="deb4a-146">See <xref:System.Windows.Forms.NativeWindow> for the whole code listing.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="deb4a-147">Указанное имя класса зарегистрировано в операционной системе.</span><span class="sxs-lookup"><span data-stu-id="deb4a-147">The class name provided is registered with the operating system.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="deb4a-148">В следующем примере кода показано создание окна с заданным именем класса окна операционной системы.</span><span class="sxs-lookup"><span data-stu-id="deb4a-148">The following code example demonstrates creating a window with a specific operating system window class name.</span></span> <span data-ttu-id="deb4a-149">В примере создается класс, наследующий от <xref:System.Windows.Forms.NativeWindow> , для выполнения этого.</span><span class="sxs-lookup"><span data-stu-id="deb4a-149">The example creates a class that inherits from <xref:System.Windows.Forms.NativeWindow> to accomplish this.</span></span>  
  
 <span data-ttu-id="deb4a-150">Класс создает новое окно с параметром, <xref:System.Windows.Forms.CreateParams.ClassName%2A> имеющим значение `BUTTON`. `MyNativeWindow`</span><span class="sxs-lookup"><span data-stu-id="deb4a-150">The `MyNativeWindow` class creates a new window with the <xref:System.Windows.Forms.CreateParams.ClassName%2A> set to `BUTTON`.</span></span> <span data-ttu-id="deb4a-151">При этом создается окно кнопки Win32.</span><span class="sxs-lookup"><span data-stu-id="deb4a-151">This creates a Win32 button window.</span></span> <span data-ttu-id="deb4a-152">Задается расположение и размер кнопки, а также задаются дополнительные стили окна.</span><span class="sxs-lookup"><span data-stu-id="deb4a-152">The location and size of the button is set, along with specifying additional window styles.</span></span> <span data-ttu-id="deb4a-153">Класс демонстрирует использование <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> метода и <xref:System.Windows.Forms.NativeWindow.WndProc%2A> переопределение метода для перехвата полученных сообщений окна.</span><span class="sxs-lookup"><span data-stu-id="deb4a-153">The class demonstrates how to use the <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> method and override the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercept window messages that are received.</span></span> <span data-ttu-id="deb4a-154">Хотя в примере выполняется поиск сообщения WM_ACTIVATEAPP, его можно заменить в реальной программе с помощью оконных сообщений, относящихся к созданному типу.</span><span class="sxs-lookup"><span data-stu-id="deb4a-154">Although the example looks for the WM_ACTIVATEAPP message, this can be replaced in a real program with window messages specific to the type created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="deb4a-155">Некоторые типы элементов управления отправляют сообщения окна в родительском окне, а не в окне.</span><span class="sxs-lookup"><span data-stu-id="deb4a-155">Some control types send their window messages to the window parent instead of the window.</span></span> <span data-ttu-id="deb4a-156">Дополнительные сведения см. в разделе Windows Platform SDK.</span><span class="sxs-lookup"><span data-stu-id="deb4a-156">See the Windows Platform SDK for more information.</span></span>  
  
 [!code-cpp[NativeWindow#3](~/samples/snippets/cpp/VS_Snippets_Winforms/NativeWindow/CPP/form1.cpp#3)]
 [!code-csharp[NativeWindow#3](~/samples/snippets/csharp/VS_Snippets_Winforms/NativeWindow/CS/form1.cs#3)]
 [!code-vb[NativeWindow#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/NativeWindow/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="deb4a-157">При попытке создать собственное окно закончились ресурсы операционной системы.</span><span class="sxs-lookup"><span data-stu-id="deb4a-157">The operating system ran out of resources when trying to create the native window.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="deb4a-158">Не удается создать указанное окно с помощью собственного API Windows.</span><span class="sxs-lookup"><span data-stu-id="deb4a-158">The native Windows API could not create the specified window.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="deb4a-159">Дескриптор текущего собственного окна уже назначен; в пояснении свойство <see cref="P:System.Windows.Forms.NativeWindow.Handle" /> не равно <see cref="F:System.IntPtr.Zero" />.</span><span class="sxs-lookup"><span data-stu-id="deb4a-159">The handle of the current native window is already assigned; in explanation, the <see cref="P:System.Windows.Forms.NativeWindow.Handle" /> property is not equal to <see cref="F:System.IntPtr.Zero" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="deb4a-160">Создание окна верхнего уровня.</span><span class="sxs-lookup"><span data-stu-id="deb4a-160">to create a top-level window.</span></span> <span data-ttu-id="deb4a-161">Это разрешение требуется только в том случае, если стиль окна не является дочерним или если окно не имеет родителя.</span><span class="sxs-lookup"><span data-stu-id="deb4a-161">This permission is only demanded if the window style is not a child or if the window does not have a parent.</span></span> <span data-ttu-id="deb4a-162">Связанное перечисление:<see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="deb4a-162">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="T:System.Windows.Forms.CreateParams" />
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.Finalize" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
      </Docs>
    </Member>
    <Member MemberName="DefWndProc">
      <MemberSignature Language="C#" Value="public void DefWndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefWndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefWndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefWndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="member this.DefWndProc : Message -&gt; unit" Usage="nativeWindow.DefWndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="deb4a-163">Обрабатываемое в данный момент сообщение.</span><span class="sxs-lookup"><span data-stu-id="deb4a-163">The message that is currently being processed.</span></span></param>
        <summary><span data-ttu-id="deb4a-164">Вызывает процедуру окна по умолчанию, связанную с этим окном.</span><span class="sxs-lookup"><span data-stu-id="deb4a-164">Invokes the default window procedure associated with this window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb4a-165">Как правило, <xref:System.Windows.Forms.NativeWindow.DefWndProc%2A> метод вызывается только при перехвате оконных сообщений и в качестве процедуры окна по умолчанию для обработки сообщения.</span><span class="sxs-lookup"><span data-stu-id="deb4a-165">Typically, you only call the <xref:System.Windows.Forms.NativeWindow.DefWndProc%2A> method when you are intercepting window messages and would like the default window procedure to handle the message.</span></span> <span data-ttu-id="deb4a-166"><xref:System.Windows.Forms.NativeWindow.DefWndProc%2A>не следует вызывать для отправки сообщения окна в окно; Вместо этого вызовите функцию Win32 `SendMessage` .</span><span class="sxs-lookup"><span data-stu-id="deb4a-166"><xref:System.Windows.Forms.NativeWindow.DefWndProc%2A> should not be called to send a window message to the window; call the Win32 `SendMessage` function instead.</span></span>  
  
 <span data-ttu-id="deb4a-167">Если свойство равно 0, вызывается <xref:System.Windows.Forms.NativeWindow.DefWndProc%2A> ошибка. <xref:System.Windows.Forms.NativeWindow.Handle%2A></span><span class="sxs-lookup"><span data-stu-id="deb4a-167">It is an error to call <xref:System.Windows.Forms.NativeWindow.DefWndProc%2A> when the <xref:System.Windows.Forms.NativeWindow.Handle%2A> property is 0.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="deb4a-168">Переопределите этот метод в производном классе, чтобы реализовать обобщенную настраиваемую обработку сообщений для конкретного машинного окна <see cref="T:System.Windows.Forms.Control" />или .NET Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="deb4a-168">Override this method in a derived class to implement generalized custom message handling for a specific native window or .NET Windows Forms <see cref="T:System.Windows.Forms.Control" />.</span></span> <span data-ttu-id="deb4a-169">Пользовательскую обработку можно выполнить до, после или вместо вызова реализации базового класса этого метода, который выполняет стандартную обработку сообщений.</span><span class="sxs-lookup"><span data-stu-id="deb4a-169">Custom processing can be performed before, after, or instead of a call to the base class implementation of this method, which performs standard message processing.</span></span>  
  
<span data-ttu-id="deb4a-170">В отличие от этого, добавление настраиваемой обработки сообщений для приложения можно выполнить с <see cref="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)" /> помощью метода <see cref="T:System.Windows.Forms.Application" /> класса.</span><span class="sxs-lookup"><span data-stu-id="deb4a-170">In contrast, adding customized message handling for an application can be accomplished through the <see cref="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)" /> method of the <see cref="T:System.Windows.Forms.Application" /> class.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.Message" />
        <altmember cref="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)" />
        <altmember cref="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)" />
      </Docs>
    </Member>
    <Member MemberName="DestroyHandle">
      <MemberSignature Language="C#" Value="public virtual void DestroyHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DestroyHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DestroyHandle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DestroyHandle();" />
      <MemberSignature Language="F#" Value="abstract member DestroyHandle : unit -&gt; unit&#xA;override this.DestroyHandle : unit -&gt; unit" Usage="nativeWindow.DestroyHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="deb4a-171">Уничтожает окно и его дескриптор.</span><span class="sxs-lookup"><span data-stu-id="deb4a-171">Destroys the window and its handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb4a-172">Этот метод уничтожает окно <xref:System.Windows.Forms.NativeWindow.Handle%2A>, связанное с, <xref:System.Windows.Forms.NativeWindow.Handle%2A> устанавливает для свойства значение <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> 0 и вызывает метод, чтобы отразить изменение.</span><span class="sxs-lookup"><span data-stu-id="deb4a-172">This method destroys the window associated with the <xref:System.Windows.Forms.NativeWindow.Handle%2A>, sets the <xref:System.Windows.Forms.NativeWindow.Handle%2A> property to 0, and calls the <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> method to reflect the change.</span></span> <span data-ttu-id="deb4a-173">Как правило, вы вызываете <xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A> только по завершении собственного окна.</span><span class="sxs-lookup"><span data-stu-id="deb4a-173">Typically, you only call <xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A> when you are done with the native window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="deb4a-174"><xref:System.Windows.Forms.NativeWindow> Класс автоматически уничтожит связанное окно и освободит его ресурсы в ответ на сообщение WM_DESTROY.</span><span class="sxs-lookup"><span data-stu-id="deb4a-174">The <xref:System.Windows.Forms.NativeWindow> class automatically will destroy the associated window and release its resources in response to a WM_DESTROY message.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.Finalize" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.OnHandleChange" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~NativeWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!NativeWindow ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="nativeWindow.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="deb4a-175">Освобождает ресурсы, связанные с данным окном.</span><span class="sxs-lookup"><span data-stu-id="deb4a-175">Releases the resources associated with this window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb4a-176">Метод удаляет производный класс Win32, связанный с текущим <xref:System.Windows.Forms.NativeWindow> экземпляром, освобождает дескриптор и отправляет сообщение WM_CLOSE в соответствующее окно. <xref:System.Windows.Forms.NativeWindow.Finalize%2A></span><span class="sxs-lookup"><span data-stu-id="deb4a-176">The <xref:System.Windows.Forms.NativeWindow.Finalize%2A> method removes the Win32 derived class associated with the current <xref:System.Windows.Forms.NativeWindow> instance, releases the handle, and posts a WM_CLOSE message to the associated window.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NativeWindow.#ctor" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
      </Docs>
    </Member>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.NativeWindow FromHandle (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.NativeWindow FromHandle(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.FromHandle(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHandle (handle As IntPtr) As NativeWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::NativeWindow ^ FromHandle(IntPtr handle);" />
      <MemberSignature Language="F#" Value="static member FromHandle : nativeint -&gt; System.Windows.Forms.NativeWindow" Usage="System.Windows.Forms.NativeWindow.FromHandle handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.NativeWindow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="deb4a-177">Дескриптор окна.</span><span class="sxs-lookup"><span data-stu-id="deb4a-177">A handle to a window.</span></span></param>
        <summary><span data-ttu-id="deb4a-178">Извлекает окно, связанное с указанным дескриптором.</span><span class="sxs-lookup"><span data-stu-id="deb4a-178">Retrieves the window associated with the specified handle.</span></span></summary>
        <returns><span data-ttu-id="deb4a-179">Класс <see cref="T:System.Windows.Forms.NativeWindow" />, связанный с указанным дескриптором.</span><span class="sxs-lookup"><span data-stu-id="deb4a-179">The <see cref="T:System.Windows.Forms.NativeWindow" /> associated with the specified handle.</span></span> <span data-ttu-id="deb4a-180">Если дескриптор не связан ни с каким окном, этот метод возвращает <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="deb4a-180">This method returns <see langword="null" /> when the handle does not have an associated window.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb4a-181">При получении маркера из другого метода используйте этот метод, чтобы получить окно, связанное с этим маркером.</span><span class="sxs-lookup"><span data-stu-id="deb4a-181">If you receive a handle from another method, use this method to retrieve the window associated with the handle.</span></span> <span data-ttu-id="deb4a-182">Этот обработчик уже должен принадлежать другому <xref:System.Windows.Forms.NativeWindow> в текущем процессе; `null` в противном случае возвращается значение.</span><span class="sxs-lookup"><span data-stu-id="deb4a-182">The handle must already be owned by another <xref:System.Windows.Forms.NativeWindow> in the current process; otherwise, `null` is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NativeWindow.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Forms.NativeWindow.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.IWin32Window.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="deb4a-183">Получает дескриптор данного окна.</span><span class="sxs-lookup"><span data-stu-id="deb4a-183">Gets the handle for this window.</span></span></summary>
        <value><span data-ttu-id="deb4a-184">В случае успеха объект <see cref="T:System.IntPtr" />, представляющий дескриптор для связанного собственного окна Win32; в противном случае — 0, если нет дескриптора, связанного с окном.</span><span class="sxs-lookup"><span data-stu-id="deb4a-184">If successful, an <see cref="T:System.IntPtr" /> representing the handle to the associated native Win32 window; otherwise, 0 if no handle is associated with the window.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb4a-185">Используйте этот метод при вызове методов API Windows, для которых требуется обработчик для окна или элемента управления.</span><span class="sxs-lookup"><span data-stu-id="deb4a-185">Use this method when calling Windows API methods that require a handle for a window or control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="deb4a-186">В следующем примере кода показано создание окна с заданным именем класса окна операционной системы.</span><span class="sxs-lookup"><span data-stu-id="deb4a-186">The following code example demonstrates creating a window with a specific operating system window class name.</span></span> <span data-ttu-id="deb4a-187">В примере создается класс, наследующий от <xref:System.Windows.Forms.NativeWindow> , для выполнения этого.</span><span class="sxs-lookup"><span data-stu-id="deb4a-187">The example creates a class that inherits from <xref:System.Windows.Forms.NativeWindow> to accomplish this.</span></span> <span data-ttu-id="deb4a-188">В примере также демонстрируется переопределение <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> метода для получения уведомлений об <xref:System.Windows.Forms.NativeWindow.Handle%2A> изменениях.</span><span class="sxs-lookup"><span data-stu-id="deb4a-188">The example also demonstrates overriding the <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> method to be notified when the <xref:System.Windows.Forms.NativeWindow.Handle%2A> changes.</span></span>  
  
 <span data-ttu-id="deb4a-189">Класс создает новое окно <xref:System.Windows.Forms.CreateParams.ClassName%2A> с кнопкой задать значение. `MyNativeWindow`</span><span class="sxs-lookup"><span data-stu-id="deb4a-189">The `MyNativeWindow` class creates a new window with the <xref:System.Windows.Forms.CreateParams.ClassName%2A> set to BUTTON.</span></span> <span data-ttu-id="deb4a-190">При этом создается окно кнопки Win32.</span><span class="sxs-lookup"><span data-stu-id="deb4a-190">This creates a Win32 button window.</span></span> <span data-ttu-id="deb4a-191">Задается расположение и размер кнопки, а также задаются дополнительные стили окна.</span><span class="sxs-lookup"><span data-stu-id="deb4a-191">The location and size of the button is set, along with specifying additional window styles.</span></span> <span data-ttu-id="deb4a-192">Класс демонстрирует использование <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> метода и <xref:System.Windows.Forms.NativeWindow.WndProc%2A> переопределение метода для перехвата полученных сообщений окна.</span><span class="sxs-lookup"><span data-stu-id="deb4a-192">The class demonstrates how to use the <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> method and override the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercept window messages that are received.</span></span> <span data-ttu-id="deb4a-193">Хотя в примере выполняется поиск сообщения WM_ACTIVATEAPP, его можно заменить в реальной программе с помощью оконных сообщений, относящихся к созданному типу.</span><span class="sxs-lookup"><span data-stu-id="deb4a-193">Although the example looks for the WM_ACTIVATEAPP message, this could be replaced in a real program with window messages specific to the type created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="deb4a-194">Некоторые типы элементов управления отправляют сообщения окна в родительском окне, а не в окне.</span><span class="sxs-lookup"><span data-stu-id="deb4a-194">Some control types send their window messages to the window parent instead of the window.</span></span> <span data-ttu-id="deb4a-195">Дополнительные сведения см. в разделе Windows Platform SDK.</span><span class="sxs-lookup"><span data-stu-id="deb4a-195">See the Windows Platform SDK for more information.</span></span>  
  
 [!code-cpp[NativeWindow#3](~/samples/snippets/cpp/VS_Snippets_Winforms/NativeWindow/CPP/form1.cpp#3)]
 [!code-csharp[NativeWindow#3](~/samples/snippets/csharp/VS_Snippets_Winforms/NativeWindow/CS/form1.cs#3)]
 [!code-vb[NativeWindow#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/NativeWindow/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.OnHandleChange" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleChange">
      <MemberSignature Language="C#" Value="protected virtual void OnHandleChange ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHandleChange() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.OnHandleChange" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHandleChange ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHandleChange();" />
      <MemberSignature Language="F#" Value="abstract member OnHandleChange : unit -&gt; unit&#xA;override this.OnHandleChange : unit -&gt; unit" Usage="nativeWindow.OnHandleChange " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="deb4a-196">Задает метод уведомления, вызываемый при изменении дескриптора окна.</span><span class="sxs-lookup"><span data-stu-id="deb4a-196">Specifies a notification method that is called when the handle for a window is changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb4a-197">Этот метод вызывается при изменении значения <xref:System.Windows.Forms.NativeWindow.Handle%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="deb4a-197">This method is invoked when the value of the <xref:System.Windows.Forms.NativeWindow.Handle%2A> property has changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="deb4a-198">В следующем примере кода показано создание окна с заданным именем класса окна операционной системы.</span><span class="sxs-lookup"><span data-stu-id="deb4a-198">The following code example demonstrates creating a window with a specific operating system window class name.</span></span> <span data-ttu-id="deb4a-199">В примере создается класс, наследующий от <xref:System.Windows.Forms.NativeWindow> , для выполнения этого.</span><span class="sxs-lookup"><span data-stu-id="deb4a-199">The example creates a class that inherits from <xref:System.Windows.Forms.NativeWindow> to accomplish this.</span></span> <span data-ttu-id="deb4a-200">В примере также демонстрируется переопределение <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> метода для получения уведомлений об <xref:System.Windows.Forms.NativeWindow.Handle%2A> изменениях.</span><span class="sxs-lookup"><span data-stu-id="deb4a-200">The example also demonstrates overriding the <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> method to be notified when the <xref:System.Windows.Forms.NativeWindow.Handle%2A> changes.</span></span>  
  
 <span data-ttu-id="deb4a-201">Класс создает новое окно с параметром, <xref:System.Windows.Forms.CreateParams.ClassName%2A> имеющим значение `BUTTON`. `MyNativeWindow`</span><span class="sxs-lookup"><span data-stu-id="deb4a-201">The `MyNativeWindow` class creates a new window with the <xref:System.Windows.Forms.CreateParams.ClassName%2A> set to `BUTTON`.</span></span> <span data-ttu-id="deb4a-202">При этом создается окно кнопки Win32.</span><span class="sxs-lookup"><span data-stu-id="deb4a-202">This creates a Win32 button window.</span></span> <span data-ttu-id="deb4a-203">Задается расположение и размер кнопки, а также задаются дополнительные стили окна.</span><span class="sxs-lookup"><span data-stu-id="deb4a-203">The location and size of the button is set, along with specifying additional window styles.</span></span> <span data-ttu-id="deb4a-204">Класс демонстрирует использование <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> метода и <xref:System.Windows.Forms.NativeWindow.WndProc%2A> переопределение метода для перехвата полученных сообщений окна.</span><span class="sxs-lookup"><span data-stu-id="deb4a-204">The class demonstrates how to use the <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> method and override the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercept window messages that are received.</span></span> <span data-ttu-id="deb4a-205">Хотя в примере выполняется поиск сообщения WM_ACTIVATEAPP, его можно заменить в реальной программе с помощью оконных сообщений, относящихся к созданному типу.</span><span class="sxs-lookup"><span data-stu-id="deb4a-205">Although the example looks for the WM_ACTIVATEAPP message, this can be replaced in a real program with window messages specific to the type created.</span></span>  
  
 <span data-ttu-id="deb4a-206">Этот код является выдержкой из примера, показанного в <xref:System.Windows.Forms.NativeWindow> обзоре класса.</span><span class="sxs-lookup"><span data-stu-id="deb4a-206">This code is an excerpt from the example shown in the <xref:System.Windows.Forms.NativeWindow> class overview.</span></span> <span data-ttu-id="deb4a-207">Для краткости не указан некоторый код.</span><span class="sxs-lookup"><span data-stu-id="deb4a-207">Some code is not shown for the purpose of brevity.</span></span> <span data-ttu-id="deb4a-208">Полный <xref:System.Windows.Forms.NativeWindow> листинг кода см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="deb4a-208">See <xref:System.Windows.Forms.NativeWindow> for the whole code listing.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="deb4a-209">Некоторые типы элементов управления отправляют сообщения окна в родительском окне, а не в окне.</span><span class="sxs-lookup"><span data-stu-id="deb4a-209">Some control types send their window messages to the window parent instead of the window.</span></span> <span data-ttu-id="deb4a-210">Дополнительные сведения см. в разделе Windows Platform SDK.</span><span class="sxs-lookup"><span data-stu-id="deb4a-210">See the Windows Platform SDK for more information.</span></span>  
  
 [!code-cpp[NativeWindow#3](~/samples/snippets/cpp/VS_Snippets_Winforms/NativeWindow/CPP/form1.cpp#3)]
 [!code-csharp[NativeWindow#3](~/samples/snippets/csharp/VS_Snippets_Winforms/NativeWindow/CS/form1.cs#3)]
 [!code-vb[NativeWindow#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/NativeWindow/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="deb4a-211">Переопределите этот метод, чтобы отслеживание изменений, внесенных в обработчик окна.</span><span class="sxs-lookup"><span data-stu-id="deb4a-211">Override this method to track changes that are made to the window handle.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="OnThreadException">
      <MemberSignature Language="C#" Value="protected virtual void OnThreadException (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnThreadException(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.OnThreadException(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnThreadException (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnThreadException(Exception ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnThreadException : Exception -&gt; unit&#xA;override this.OnThreadException : Exception -&gt; unit" Usage="nativeWindow.OnThreadException e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="deb4a-212">Объект <see cref="T:System.Exception" />, задающий необработанное исключение потока.</span><span class="sxs-lookup"><span data-stu-id="deb4a-212">An <see cref="T:System.Exception" /> that specifies the unhandled thread exception.</span></span></param>
        <summary><span data-ttu-id="deb4a-213">Будучи переопределен в производном классе, управляет необработанным исключением потока.</span><span class="sxs-lookup"><span data-stu-id="deb4a-213">When overridden in a derived class, manages an unhandled thread exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb4a-214"><xref:System.Windows.Forms.Application.OnThreadException%2A> Обычно обрабатывает исключения потоков.</span><span class="sxs-lookup"><span data-stu-id="deb4a-214">Typically, <xref:System.Windows.Forms.Application.OnThreadException%2A> handles thread exceptions.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)" />
        <altmember cref="T:System.Windows.Forms.Application" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseHandle">
      <MemberSignature Language="C#" Value="public virtual void ReleaseHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReleaseHandle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseHandle();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseHandle : unit -&gt; unit&#xA;override this.ReleaseHandle : unit -&gt; unit" Usage="nativeWindow.ReleaseHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="deb4a-215">Освобождает дескриптор, связанный с данным окном.</span><span class="sxs-lookup"><span data-stu-id="deb4a-215">Releases the handle associated with this window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb4a-216">Этот метод не уничтожает обработчик окна.</span><span class="sxs-lookup"><span data-stu-id="deb4a-216">This method does not destroy the window handle.</span></span> <span data-ttu-id="deb4a-217">Вместо этого он задает для процедуры окна обработчика процедуру окна по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="deb4a-217">Instead, it sets the handle's window procedure to the default window procedure.</span></span> <span data-ttu-id="deb4a-218">Он устанавливает <xref:System.Windows.Forms.NativeWindow.Handle%2A> свойство в значение 0 и вызывает <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> , чтобы отразить изменение.</span><span class="sxs-lookup"><span data-stu-id="deb4a-218">It sets the <xref:System.Windows.Forms.NativeWindow.Handle%2A> property to 0 and calls <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> to reflect the change.</span></span>  
  
 <span data-ttu-id="deb4a-219">Окно автоматически вызывает этот метод, если он получает собственное сообщение Win32 WM_NCDESTROY, указывающее, что Windows удалила этот обработчик.</span><span class="sxs-lookup"><span data-stu-id="deb4a-219">A window automatically calls this method if it receives a native Win32 WM_NCDESTROY message, indicating that Windows has destroyed the handle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="deb4a-220">В следующем примере кода показано перехват сообщений окна операционной системы в процедуре окна.</span><span class="sxs-lookup"><span data-stu-id="deb4a-220">The following code example demonstrates intercepting operating system window messages in a window procedure.</span></span> <span data-ttu-id="deb4a-221">В примере создается класс, наследующий от <xref:System.Windows.Forms.NativeWindow> , для выполнения этого.</span><span class="sxs-lookup"><span data-stu-id="deb4a-221">The example creates a class that inherits from <xref:System.Windows.Forms.NativeWindow> to accomplish this.</span></span>  
  
 <span data-ttu-id="deb4a-222">Класс подключается к процедуре окна формы, передаваемой в конструктор, и <xref:System.Windows.Forms.NativeWindow.WndProc%2A> переопределяет `WM_ACTIVATEAPP` метод для перехвата сообщения окна. `MyNativeWindowListener`</span><span class="sxs-lookup"><span data-stu-id="deb4a-222">The `MyNativeWindowListener` class hooks into the window procedure of the form passed into the constructor, and overrides the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercepts the `WM_ACTIVATEAPP` window message.</span></span> <span data-ttu-id="deb4a-223">Класс демонстрирует использование <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> методов и <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> для <xref:System.Windows.Forms.NativeWindow> задания обрабатываемого окна.</span><span class="sxs-lookup"><span data-stu-id="deb4a-223">The class demonstrates the use of the <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> and <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> methods to identify the window handle the <xref:System.Windows.Forms.NativeWindow> will use.</span></span> <span data-ttu-id="deb4a-224">Этот маркер назначается на основе <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> событий и. <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="deb4a-224">The handle is assign based upon the <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> and <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType> events.</span></span> <span data-ttu-id="deb4a-225">Когда получено сообщение `form1.ApplicationActivated` окна,классвызываетметод.`WM_ACTIVATEAPP`</span><span class="sxs-lookup"><span data-stu-id="deb4a-225">When the `WM_ACTIVATEAPP` window message is received, the class calls the `form1.ApplicationActivated` method.</span></span>  
  
 <span data-ttu-id="deb4a-226">Этот код является выдержкой из примера, показанного в <xref:System.Windows.Forms.NativeWindow> обзоре класса.</span><span class="sxs-lookup"><span data-stu-id="deb4a-226">This code is an excerpt from the example shown in the <xref:System.Windows.Forms.NativeWindow> class overview.</span></span> <span data-ttu-id="deb4a-227">Для краткости не указан некоторый код.</span><span class="sxs-lookup"><span data-stu-id="deb4a-227">Some code is not shown for the purpose of brevity.</span></span> <span data-ttu-id="deb4a-228">Полный <xref:System.Windows.Forms.NativeWindow> листинг кода см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="deb4a-228">See <xref:System.Windows.Forms.NativeWindow> for the whole code listing.</span></span>  
  
 [!code-cpp[NativeWindow#2](~/samples/snippets/cpp/VS_Snippets_Winforms/NativeWindow/CPP/form1.cpp#2)]
 [!code-csharp[NativeWindow#2](~/samples/snippets/csharp/VS_Snippets_Winforms/NativeWindow/CS/form1.cs#2)]
 [!code-vb[NativeWindow#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/NativeWindow/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.OnHandleChange" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected virtual void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member WndProc : Message -&gt; unit&#xA;override this.WndProc : Message -&gt; unit" Usage="nativeWindow.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="deb4a-229">Объект <see cref="T:System.Windows.Forms.Message" />, связанный с текущим сообщением Windows.</span><span class="sxs-lookup"><span data-stu-id="deb4a-229">A <see cref="T:System.Windows.Forms.Message" /> that is associated with the current Windows message.</span></span></param>
        <summary><span data-ttu-id="deb4a-230">Вызывает процедуру окна по умолчанию, связанную с этим окном.</span><span class="sxs-lookup"><span data-stu-id="deb4a-230">Invokes the default window procedure associated with this window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="deb4a-231">Этот метод вызывается при отправке сообщения окна в обработчик окна.</span><span class="sxs-lookup"><span data-stu-id="deb4a-231">This method is called when a window message is sent to the handle of the window.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="deb4a-232">В следующем примере кода показано перехват сообщений окна операционной системы в процедуре окна.</span><span class="sxs-lookup"><span data-stu-id="deb4a-232">The following code example demonstrates intercepting operating system window messages in a window procedure.</span></span> <span data-ttu-id="deb4a-233">В примере создается класс, наследующий от <xref:System.Windows.Forms.NativeWindow> , для выполнения этого.</span><span class="sxs-lookup"><span data-stu-id="deb4a-233">The example creates a class that inherits from <xref:System.Windows.Forms.NativeWindow> to accomplish this.</span></span>  
  
 <span data-ttu-id="deb4a-234">Класс подключается к процедуре окна формы, передаваемой в конструктор, и <xref:System.Windows.Forms.NativeWindow.WndProc%2A> переопределяет метод для перехвата `WM_ACTIVATEAPP` сообщения окна. `MyNativeWindowListener`</span><span class="sxs-lookup"><span data-stu-id="deb4a-234">The `MyNativeWindowListener` class hooks into the window procedure of the form passed into the constructor, and overrides the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercept the `WM_ACTIVATEAPP` window message.</span></span> <span data-ttu-id="deb4a-235">Класс демонстрирует использование <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> методов и <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> для <xref:System.Windows.Forms.NativeWindow> задания обрабатываемого окна.</span><span class="sxs-lookup"><span data-stu-id="deb4a-235">The class demonstrates the use of the <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> and <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> methods to identify the window handle the <xref:System.Windows.Forms.NativeWindow> will use.</span></span> <span data-ttu-id="deb4a-236">Маркер назначается на основе <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> событий и. <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="deb4a-236">The handle is assigned based upon the <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> and <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType> events.</span></span> <span data-ttu-id="deb4a-237">Когда получено сообщение `form1.ApplicationActivated` окна,классвызываетметод.`WM_ACTIVATEAPP`</span><span class="sxs-lookup"><span data-stu-id="deb4a-237">When the `WM_ACTIVATEAPP` window message is received, the class calls the `form1.ApplicationActivated` method.</span></span>  
  
 <span data-ttu-id="deb4a-238">Этот код является выдержкой из примера, показанного в <xref:System.Windows.Forms.NativeWindow> обзоре класса.</span><span class="sxs-lookup"><span data-stu-id="deb4a-238">This code is an excerpt from the example shown in the <xref:System.Windows.Forms.NativeWindow> class overview.</span></span> <span data-ttu-id="deb4a-239">Для краткости не указан некоторый код.</span><span class="sxs-lookup"><span data-stu-id="deb4a-239">Some code is not shown for the purpose of brevity.</span></span> <span data-ttu-id="deb4a-240">Полный <xref:System.Windows.Forms.NativeWindow> листинг кода см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="deb4a-240">See <xref:System.Windows.Forms.NativeWindow> for the whole code listing.</span></span>  
  
 [!code-cpp[NativeWindow#2](~/samples/snippets/cpp/VS_Snippets_Winforms/NativeWindow/CPP/form1.cpp#2)]
 [!code-csharp[NativeWindow#2](~/samples/snippets/csharp/VS_Snippets_Winforms/NativeWindow/CS/form1.cs#2)]
 [!code-vb[NativeWindow#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/NativeWindow/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="deb4a-241">Переопределите этот метод, чтобы реализовать определенную обработку сообщений.</span><span class="sxs-lookup"><span data-stu-id="deb4a-241">Override this method to implement specific message processing.</span></span> <span data-ttu-id="deb4a-242">Вызовите <c>base. WndProc</c> для необработанных сообщений.</span><span class="sxs-lookup"><span data-stu-id="deb4a-242">Call <c>base.WndProc</c> for unhandled messages.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="T:System.Windows.Forms.Message" />
        <altmember cref="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.OnThreadException(System.Exception)" />
      </Docs>
    </Member>
  </Members>
</Type>
