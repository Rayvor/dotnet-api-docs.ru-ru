<Type Name="ListView" FullName="System.Windows.Forms.ListView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="66fde3b7a58ad35a45cb5d89812b6f5fe72557c7" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65015420" /></Metadata><TypeSignature Language="C#" Value="public class ListView : System.Windows.Forms.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListView extends System.Windows.Forms.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListView" />
  <TypeSignature Language="VB.NET" Value="Public Class ListView&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListView : System::Windows::Forms::Control" />
  <TypeSignature Language="F#" Value="type ListView = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedIndexChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Items")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ListViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.Ask)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ListViewDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ListViewDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет элемент управления представления списка Windows, отображающий коллекцию элементов, которые могут отображаться с помощью одного из четырех различных представлений.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Forms.ListView> элемент управления позволяет отобразить список элементов с текстом элемента и, при необходимости, значок, который требуется определить тип элемента. Например, Windows Explorer список файлов, аналогична по внешнему виду <xref:System.Windows.Forms.ListView> элемента управления. Он отображает список файлов и папок, выбранного в дереве. Отображает значок, связанный с ним поможет определить тип файла или папки, всех файлов и папок. <xref:System.Windows.Forms.ListViewItem> Класс представляет элемент внутри <xref:System.Windows.Forms.ListView> элемента управления. Элементы, отображаемые в списке могут отображаться в одном из пяти различных представлений. Элементы могут отображаться в виде крупных значков, в виде мелких значков или в виде мелких значков в вертикальном списке. Элементы могут также иметь подэлементы, содержащие информацию, связанную с родительским элементом. В представлении сведений позволяет отображать элемент и его подэлементы в сетке с заголовками столбцов, которые идентифицируют информацию, отображаемых в подэлементе. Мозаичное представление, которой предоставлены ограниченные доступности, как описано ниже, позволяет отображать элемент и его подэлементы как плитку, включающую большого значка и текстовую информацию. <xref:System.Windows.Forms.ListView> поддерживает один или несколько. Функция множественного выбора позволяет пользователю выбрать из списка элементов в так же, <xref:System.Windows.Forms.ListBox> элемента управления. Кроме того пользователь может активировать выбранные элементы для выполнения задачи. Например, можно использовать <xref:System.Windows.Forms.ListView> управления для отображения списка файлов, которые можно открыть и использовать приложение. Пользователь может выбрать для файлов, откройте, а затем дважды щелкните их, чтобы активировать эти элементы и открывать файлы в приложении. <xref:System.Windows.Forms.ListView> Можно также отобразить флажки, с помощью <xref:System.Windows.Forms.ListView.CheckBoxes%2A> свойства, чтобы разрешить пользователю следует проверить элементы, которые они хотят выполнить действие. Можно использовать <xref:System.Windows.Forms.ListView> управления разными способами. Элемент управления можно использовать для отображения информации из приложения, базы данных или текстовый файл. <xref:System.Windows.Forms.ListView> Также может использоваться для получения сведений от пользователя, например выбрать набор файлов для обработки.  
  
 <xref:System.Windows.Forms.ListView> предоставляет множество свойств, которые обеспечивают гибкость в внешний вид и поведение. <xref:System.Windows.Forms.ListView.View%2A> Свойства позволяет изменить способ отображения элементов. <xref:System.Windows.Forms.ListView.LargeImageList%2A>, <xref:System.Windows.Forms.ListView.SmallImageList%2A>, И <xref:System.Windows.Forms.ListView.StateImageList%2A> свойства позволяют указать <xref:System.Windows.Forms.ImageList> объектов, содержащих изображений, отображаемых для элементов и в случае использования <xref:System.Windows.Forms.ListView.StateImageList%2A>, флажки, которые отображаются после <xref:System.Windows.Forms.ListView.CheckBoxes%2A> свойство имеет значение `true`. Чтобы определить, какие элементы установлены, можно использовать <xref:System.Windows.Forms.ListView.CheckedItems%2A> свойство для доступа к <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection> коллекции. <xref:System.Windows.Forms.ListView.Columns%2A> Свойство позволяет получить доступ к <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>, содержащего столбец заголовков, которые отображаются после <xref:System.Windows.Forms.ListView.View%2A> свойству элемента управления присваивается <xref:System.Windows.Forms.View.Details>. Элементы добавляются и удаляются из <xref:System.Windows.Forms.ListView> через <xref:System.Windows.Forms.ListView.Items%2A> свойство. <xref:System.Windows.Forms.ListView.Items%2A> Свойство позволяет получить доступ к <xref:System.Windows.Forms.ListView.ListViewItemCollection> элемента управления, который предоставляет методы для управления элементами в элементе управления. Если вы хотите разрешить пользователю изменять текст элемента, можно использовать <xref:System.Windows.Forms.ListView.LabelEdit%2A> свойство. Если элемент управления содержит большое число элементов, часто бывает проще для пользователя увидеть их в сортированном списке. Можно использовать <xref:System.Windows.Forms.ListView.Sorting%2A> свойства для сортировки элементов в алфавитном порядке. Можно также полностью настроить внешний вид <xref:System.Windows.Forms.ListView> элемента управления. Чтобы сделать это, установите <xref:System.Windows.Forms.ListView.OwnerDraw%2A> свойства `true` и обрабатывать один или несколько из следующих событий: <xref:System.Windows.Forms.ListView.DrawItem>, <xref:System.Windows.Forms.ListView.DrawSubItem>, <xref:System.Windows.Forms.ListView.DrawColumnHeader>.  
  
 Многие из свойств объекта <xref:System.Windows.Forms.ListView> управления используется, когда <xref:System.Windows.Forms.ListView.View%2A> свойству элемента управления присваивается <xref:System.Windows.Forms.View.Details>. <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A> Свойство позволяет пользователю из вашей <xref:System.Windows.Forms.ListView> элемента управления, чтобы изменить порядок столбцов во время выполнения. <xref:System.Windows.Forms.ListView.FullRowSelect%2A> Свойство позволяет элемент и его подэлементы, необходимо выбрать не только. Для отображения сетки в представлении сведений для определения границ элементов и подэлементов в <xref:System.Windows.Forms.ListView>, можно использовать <xref:System.Windows.Forms.ListView.GridLines%2A> свойство. <xref:System.Windows.Forms.ListView.HeaderStyle%2A> Свойство позволяет указать тип заголовков столбцов для отображения.  
  
 Объект <xref:System.Windows.Forms.ListView> управления может работать в виртуальном режиме, где <xref:System.Windows.Forms.ListViewItem> объектов создаются динамически вместо, хранящихся в <xref:System.Windows.Forms.ListView.Items%2A> коллекции. Это может быть полезно для работы с очень больших списков или списков, содержимое которой часто изменять. Чтобы включить режим виртуальной, задайте <xref:System.Windows.Forms.ListView.VirtualMode%2A> свойства `true` и обрабатывать <xref:System.Windows.Forms.ListView.RetrieveVirtualItem>, <xref:System.Windows.Forms.ListView.CacheVirtualItems>, и <xref:System.Windows.Forms.ListView.SearchForVirtualItem> события.  
  
 Помимо многих свойств, доступных для <xref:System.Windows.Forms.ListView> управления, методы и события, которые приложение может использовать для предоставления дополнительных возможностей <xref:System.Windows.Forms.ListView>. <xref:System.Windows.Forms.ListView.BeginUpdate%2A> И <xref:System.Windows.Forms.ListView.EndUpdate%2A> методы позволяют повысить производительность при добавлении много элементов для <xref:System.Windows.Forms.ListView> , предотвращая обновление при каждом добавлении элемента управления. Если ваш <xref:System.Windows.Forms.ListView> отображает элемент управления элементами и подэлементами, может потребоваться предоставить функциональность, когда пользователь щелкает правой кнопкой мыши подэлемента. Чтобы определить элемент выбирается, подэлемента, можно использовать <xref:System.Windows.Forms.ListView.GetItemAt%2A> метод. При проверке элементов после их изменении пользователем, может потребоваться отобразить пользователю, чтобы изменить конкретный элемент. <xref:System.Windows.Forms.ListView.EnsureVisible%2A> Метод может вызываться, чтобы убедиться, что элемент находится в видимой области элемента управления.  
  
 Если <xref:System.Windows.Forms.ListView.LabelEdit%2A> свойство значение `true`, можно выполнять задачи, такие как проверка текста, редактируемого до и после текста, изменить, создав обработчик событий для <xref:System.Windows.Forms.ListView.BeforeLabelEdit> и <xref:System.Windows.Forms.ListView.AfterLabelEdit> события. Для выполнения задач, таких как открытие файла или отображение диалогового окна для изменения элемента, отображаемого в <xref:System.Windows.Forms.ListView>, можно создать обработчик событий для <xref:System.Windows.Forms.ListView.ItemActivate> событий. Если вы разрешите пользователю сортировать элементы в <xref:System.Windows.Forms.ListView> при щелчке заголовка столбца, можно создать обработчик событий для <xref:System.Windows.Forms.ListView.ColumnClick> событию для выполнения сортировки. Когда <xref:System.Windows.Forms.ListView.CheckBoxes%2A> свойству `true`, необходимо выяснить, когда произошло изменение в состояние пометки элемента путем обработки <xref:System.Windows.Forms.ListView.ItemCheck> событий.  
  
 Можно также задать фоновое изображение для <xref:System.Windows.Forms.ListView> с <xref:System.Windows.Forms.Control.BackgroundImage%2A> свойство. Приложение должно иметь <xref:System.STAThreadAttribute> на его `Main` метод для правильного отображения фонового изображения для <xref:System.Windows.Forms.ListView> элемента управления. Кроме того Если <xref:System.Windows.Forms.ListView> управления с фоновое изображение размещается в Internet Explorer, укажите comctl32.dll версии 6.0 как зависимую сборку в файле манифеста приложения для обеспечения отображаемое свойство фонового изображения.  
  
> [!NOTE]
>  Установка <xref:System.Windows.Forms.Control.Cursor%2A> свойство для <xref:System.Windows.Forms.ListView> управления не влияет на внешний вид курсора в [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] версии 1.1 и более ранних версий.  
  
 Windows XP и Windows Server 2003 предоставляют три функции, которые расширяют возможности <xref:System.Windows.Forms.ListView> управления, когда приложение вызывает <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> метод: мозаичного представления, группирование и знак вставки.  
  
 Мозаичное представление позволяет сбалансировать графическими и текстовыми представлениями информации путем отображения текста элемента и подэлемента рядом с крупных значков. Задайте <xref:System.Windows.Forms.ListView.View%2A> свойства <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType> для обеспечения такого поведения.  
  
 Функция группирования позволяет визуально сгруппировать элементы в категории. Используйте <xref:System.Windows.Forms.ListView.Groups%2A> свойство, добавляемое <xref:System.Windows.Forms.ListViewGroup> объектов <xref:System.Windows.Forms.ListView> управления, если вы хотите включить эту функцию. Чтобы временно отключить эту функцию, задайте <xref:System.Windows.Forms.ListView.ShowGroups%2A> свойства `false`.  
  
 Функция метки вставки позволяет обеспечить изменение положения и перетащите элемент с визуальной обратной связи для указания места. Используйте <xref:System.Windows.Forms.ListViewInsertionMark> объект извлечен с помощью <xref:System.Windows.Forms.ListView.InsertionMark%2A> свойство для отображения знака вставки.  
  
 Эти функции доступны только в Windows XP и Windows Server 2003. В предыдущих версиях операционных систем код, относящийся к этим функциям не оказывает влияния, мозаичное представление отображается в представлении крупных значков и Метка вставки и группы не отображаются. В некоторых случаях может включить код, который определяет, доступны ли эти возможности и обеспечения альтернативной функциональности, когда они недоступны. Эти возможности предоставляются библиотеки, которую предоставляет функцию тем операционной системы. Чтобы проверить наличие этой библиотеки, вызовите <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> перегрузку метода и передать <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> значение.  
  
 Ниже приведены некоторые из <xref:System.Windows.Forms.ListView> члены и представления, они допустимы в.  
  
|Член ListView|Просмотр|  
|---------------------|----------|  
|Свойство <xref:System.Windows.Forms.ListView.Alignment%2A>|<xref:System.Windows.Forms.View.SmallIcon> или <xref:System.Windows.Forms.View.LargeIcon>|  
|Свойство <xref:System.Windows.Forms.ListView.AutoArrange%2A>|<xref:System.Windows.Forms.View.SmallIcon> или <xref:System.Windows.Forms.View.LargeIcon>|  
|Метод <xref:System.Windows.Forms.ListView.AutoResizeColumn%2A>|<xref:System.Windows.Forms.View.Details>|  
|Свойство <xref:System.Windows.Forms.ListView.Columns%2A>|<xref:System.Windows.Forms.View.Details> или <xref:System.Windows.Forms.View.Tile>|  
|Событие<xref:System.Windows.Forms.ListView.DrawSubItem> |<xref:System.Windows.Forms.View.Details>|  
|Метод <xref:System.Windows.Forms.ListView.FindItemWithText%2A>|<xref:System.Windows.Forms.View.Details>, <xref:System.Windows.Forms.View.List>или <xref:System.Windows.Forms.View.Tile>|  
|Метод <xref:System.Windows.Forms.ListView.FindNearestItem%2A>|<xref:System.Windows.Forms.View.SmallIcon> или <xref:System.Windows.Forms.View.LargeIcon>|  
|Метод <xref:System.Windows.Forms.ListView.GetItemAt%2A>|<xref:System.Windows.Forms.View.Details> или <xref:System.Windows.Forms.View.Tile>|  
|Свойство <xref:System.Windows.Forms.ListView.Groups%2A>|Все представления, за исключением <xref:System.Windows.Forms.View.List>|  
|Свойство <xref:System.Windows.Forms.ListView.HeaderStyle%2A>|<xref:System.Windows.Forms.View.Details>|  
|Свойство <xref:System.Windows.Forms.ListView.InsertionMark%2A>|<xref:System.Windows.Forms.View.LargeIcon>, <xref:System.Windows.Forms.View.SmallIcon>или <xref:System.Windows.Forms.View.Tile>|  
  
   
  
## Examples  
 В следующем примере кода создается <xref:System.Windows.Forms.ListView> управления с тремя <xref:System.Windows.Forms.ListViewItem> объекты, указанные и три <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> объекты, указанные для каждого элемента. В примере также создается <xref:System.Windows.Forms.ColumnHeader> объектов для отображения в представлении сведений о подэлементы. Два <xref:System.Windows.Forms.ImageList> также создаются в примере кода для изображений <xref:System.Windows.Forms.ListViewItem> объектов. Эти <xref:System.Windows.Forms.ImageList> объекты добавляются в <xref:System.Windows.Forms.ListView.LargeImageList%2A> и <xref:System.Windows.Forms.ListView.SmallImageList%2A> свойства. В примере используется следующие свойства в создании <xref:System.Windows.Forms.ListView> управления:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 В этом примере требуется, что добавлен код для <xref:System.Windows.Forms.Form> и вызвать метод, созданный в примере из конструктора или другого метода на форме. Также в этом примере предполагается, что образы с именем `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, и `MyLargeImage2` , находятся в корневом каталоге диска C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListViewItem" />
    <altmember cref="T:System.Windows.Forms.ImageList" />
    <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.ListView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода создается <xref:System.Windows.Forms.ListView> управления с тремя <xref:System.Windows.Forms.ListViewItem> объекты, указанные и три <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> объекты, указанные для каждого элемента. В примере также создается <xref:System.Windows.Forms.ColumnHeader> объектов для отображения в представлении сведений о подэлементы. Два <xref:System.Windows.Forms.ImageList> также создаются в примере кода для изображений <xref:System.Windows.Forms.ListViewItem> объектов. Эти <xref:System.Windows.Forms.ImageList> объекты добавляются в <xref:System.Windows.Forms.ListView.LargeImageList%2A> и <xref:System.Windows.Forms.ListView.SmallImageList%2A> свойства. В примере используется следующие свойства в создании <xref:System.Windows.Forms.ListView> управления:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 В этом примере требуется, что добавлен код для <xref:System.Windows.Forms.Form> и вызвать метод, созданный в примере из конструктора или другого метода на форме. Также в этом примере предполагается, что образы с именем `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, и `MyLargeImage2` , находятся в корневом каталоге диска C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activation">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ItemActivation Activation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ItemActivation Activation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Activation" />
      <MemberSignature Language="VB.NET" Value="Public Property Activation As ItemActivation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ItemActivation Activation { System::Windows::Forms::ItemActivation get(); void set(System::Windows::Forms::ItemActivation value); };" />
      <MemberSignature Language="F#" Value="member this.Activation : System.Windows.Forms.ItemActivation with get, set" Usage="System.Windows.Forms.ListView.Activation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemActivation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает тип действия, который должен выполнить пользователь для активации элемента.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Windows.Forms.ItemActivation" />. Значение по умолчанию — <see cref="F:System.Windows.Forms.ItemActivation.Standard" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.Activation%2A> Свойство позволяет указать, каким образом пользователь будет активировать элемент в <xref:System.Windows.Forms.ListView> элемента управления. Активация элемента в <xref:System.Windows.Forms.ListView> отличается от просто выбора элемента. При активации элемента действие обычно выполняется в обработчике событий для <xref:System.Windows.Forms.ListView.ItemActivate> событий. Например при активации элемента может открыть файл или отобразить диалоговое окно, которое позволяет изменить элемент. Как правило элемент активируется пользователем, чтобы активировать его. Если <xref:System.Windows.Forms.ListView.Activation%2A> свойству <xref:System.Windows.Forms.ItemActivation.OneClick>, щелкните элемент один раз, чтобы активировать его. Установка <xref:System.Windows.Forms.ListView.Activation%2A> свойства <xref:System.Windows.Forms.ItemActivation.TwoClick> отличается от стандартного двойного щелчка, поскольку двумя отдельными щелчками может пройти некоторое время между ними.  
  
> [!NOTE]
>  Если <xref:System.Windows.Forms.ListView.Activation%2A> свойству <xref:System.Windows.Forms.ItemActivation.OneClick> или <xref:System.Windows.Forms.ItemActivation.TwoClick>, редактирования метки не будут разрешены независимо от значения <xref:System.Windows.Forms.ListView.LabelEdit%2A> свойство.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Значение не является одним из <see cref="T:System.Windows.Forms.ItemActivation" /> членов.</exception>
        <altmember cref="T:System.Windows.Forms.ItemActivation" />
        <altmember cref="E:System.Windows.Forms.ListView.ItemActivate" />
      </Docs>
    </Member>
    <Member MemberName="AfterLabelEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.LabelEditEventHandler AfterLabelEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.LabelEditEventHandler AfterLabelEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.AfterLabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AfterLabelEdit As LabelEditEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::LabelEditEventHandler ^ AfterLabelEdit;" />
      <MemberSignature Language="F#" Value="member this.AfterLabelEdit : System.Windows.Forms.LabelEditEventHandler " Usage="member this.AfterLabelEdit : System.Windows.Forms.LabelEditEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LabelEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, если метка элемента была изменена пользователем.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.AfterLabelEdit> Событие происходит, когда пользователь завершает изменение текста для элемента. Новая строка, что пользователь вводит для элемента передается событие и обработчик событий может отклонить изменения. Если обработчик событий обработки изменения, текст возвращается в текст, так как она была до начала изменения элемента пользователем.  
  
> [!NOTE]
>  Так как <xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=nameWithType> событий производится до выполнения редактирование метки зафиксирован, вызов <xref:System.Windows.Forms.ListView.Sort%2A?displayProperty=nameWithType> метод в обработчике этого события выполняет сортировку элементов, используя исходное значение.  
  
 Чтобы <xref:System.Windows.Forms.ListView.AfterLabelEdit> событие, <xref:System.Windows.Forms.ListView.LabelEdit%2A> свойство <xref:System.Windows.Forms.ListView> управления должно быть присвоено `true`.  
  
 Можно создать обработчик событий для <xref:System.Windows.Forms.ListView.BeforeLabelEdit> событий для выполнения задач, прежде чем пользователь редактирует текст элемента.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Windows.Forms.ListView.AfterLabelEdit> событий ограничивает метку недавно измененный знаками алфавита. В примере используется <xref:System.Text.ASCIIEncoding> классе, чтобы получить код знака ASCII каждого символа в новую метку. Если попадает, представляющих цифры ASCII-кодов, Новая метка не может применяться к элементу. В этом примере требуется, что вы создали <xref:System.Windows.Forms.ListView> управления на форме и добавляются элементы. В примере также требуется подключение <xref:System.Windows.Forms.ListView.AfterLabelEdit> события в обработчик события, определенные в примере кода. Чтобы использовать <xref:System.Text.ASCIIEncoding> класс, файл должен включать <xref:System.Text> пространства имен.  
  
 [!code-cpp[ListView.AfterLabelEdit#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CPP/form1.cpp#1)]
 [!code-csharp[ListView.AfterLabelEdit#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CS/form1.cs#1)]
 [!code-vb[ListView.AfterLabelEdit#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.AfterLabelEdit/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
        <altmember cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.LabelEdit" />
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ListViewAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Property Alignment As ListViewAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewAlignment Alignment { System::Windows::Forms::ListViewAlignment get(); void set(System::Windows::Forms::ListViewAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.Alignment : System.Windows.Forms.ListViewAlignment with get, set" Usage="System.Windows.Forms.ListView.Alignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает способ выравнивания составляющих элементов в данном элементе управления.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Windows.Forms.ListViewAlignment" />. Значение по умолчанию — <see cref="F:System.Windows.Forms.ListViewAlignment.Top" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.Alignment%2A> Свойство влияет только на выравнивание при <xref:System.Windows.Forms.ListView.View%2A> свойству <xref:System.Windows.Forms.View.LargeIcon> или <xref:System.Windows.Forms.View.SmallIcon>.  
  
> [!NOTE]
>  Это свойство не действует с <xref:System.Windows.Forms.ListView.View%2A> свойству <xref:System.Windows.Forms.View.List>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Значение не является одним из <see cref="T:System.Windows.Forms.ListViewAlignment" /> значения.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewAlignment" />
      </Docs>
    </Member>
    <Member MemberName="AllowColumnReorder">
      <MemberSignature Language="C#" Value="public bool AllowColumnReorder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowColumnReorder" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.AllowColumnReorder" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowColumnReorder As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowColumnReorder { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowColumnReorder : bool with get, set" Usage="System.Windows.Forms.ListView.AllowColumnReorder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, может ли пользователь перетаскивать заголовки для изменения порядка столбцов в данном элементе управления.</summary>
        <value><see langword="true" /> Если разрешено изменение порядка столбцов и перетаскивания; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если значением <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A> свойство действует только <xref:System.Windows.Forms.ListView.View%2A> свойству <xref:System.Windows.Forms.View.Details>. Это свойство можно использовать, чтобы разрешить пользователям изменять порядок столбцов в элементе управления во время выполнения. Когда <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A> свойству `true`, пользователи могут изменять порядок столбцов в элементе управления для отображения в виде, удовлетворяющих их потребности в приложении и его подэлементы.  
  
   
  
## Examples  
 В следующем примере кода создается <xref:System.Windows.Forms.ListView> управления с тремя <xref:System.Windows.Forms.ListViewItem> объекты, указанные и три <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> объекты, указанные для каждого элемента. В примере также создается <xref:System.Windows.Forms.ColumnHeader> объектов для отображения в представлении сведений о подэлементы. Два <xref:System.Windows.Forms.ImageList> также создаются в примере кода для изображений <xref:System.Windows.Forms.ListViewItem> объектов. Эти <xref:System.Windows.Forms.ImageList> объекты добавляются в <xref:System.Windows.Forms.ListView.LargeImageList%2A> и <xref:System.Windows.Forms.ListView.SmallImageList%2A> свойства. В примере используется следующие свойства в создании <xref:System.Windows.Forms.ListView> управления:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 В этом примере требуется, что добавлен код для <xref:System.Windows.Forms.Form> и вызвать метод, созданный в примере из конструктора или другого метода на форме. Также в этом примере предполагается, что образы с именем `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, и `MyLargeImage2` , находятся в корневом каталоге диска C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ArrangeIcons">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Выравнивает составляющие элементы в элементе управления, когда они отображаются в виде значков.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ArrangeIcons">
      <MemberSignature Language="C#" Value="public void ArrangeIcons ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ArrangeIcons() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ArrangeIcons" />
      <MemberSignature Language="VB.NET" Value="Public Sub ArrangeIcons ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ArrangeIcons();" />
      <MemberSignature Language="F#" Value="member this.ArrangeIcons : unit -&gt; unit" Usage="listView.ArrangeIcons " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Упорядочивает элементы в элементе управления, когда они отображаются в виде значков определяется значение <see cref="P:System.Windows.Forms.ListView.Alignment" /> свойства.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> Метод полезен только тогда, когда <xref:System.Windows.Forms.ListView.View%2A> свойству <xref:System.Windows.Forms.View.LargeIcon> или <xref:System.Windows.Forms.View.SmallIcon>. Вызов этой версии <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> метод упорядочивает элементы, основываясь на значении <xref:System.Windows.Forms.ListView.Alignment%2A> свойство. Чтобы выполнить выравнивание элементов на основе значения, отличающейся от используемой <xref:System.Windows.Forms.ListView.Alignment%2A> свойство, используйте другую версию <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> метод.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="ArrangeIcons">
      <MemberSignature Language="C#" Value="public void ArrangeIcons (System.Windows.Forms.ListViewAlignment value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ArrangeIcons(valuetype System.Windows.Forms.ListViewAlignment value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ArrangeIcons(System.Windows.Forms.ListViewAlignment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ArrangeIcons (value As ListViewAlignment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ArrangeIcons(System::Windows::Forms::ListViewAlignment value);" />
      <MemberSignature Language="F#" Value="member this.ArrangeIcons : System.Windows.Forms.ListViewAlignment -&gt; unit" Usage="listView.ArrangeIcons value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewAlignment" />
      </Parameters>
      <Docs>
        <param name="value">Одно из значений перечисления <see cref="T:System.Windows.Forms.ListViewAlignment" />.</param>
        <summary>Выравнивает составляющие элементы в элементе управления, когда они отображаются в виде значков, в соответствии с заданными параметрами выравнивания.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> Метод полезен только тогда, когда <xref:System.Windows.Forms.ListView.View%2A> свойству <xref:System.Windows.Forms.View.LargeIcon> или <xref:System.Windows.Forms.View.SmallIcon>. Эта версия <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> метод упорядочивает значки в <xref:System.Windows.Forms.ListView> на основе <xref:System.Windows.Forms.ListViewAlignment> значение, указанное в `value` параметра. Вызов этого метода не изменяет значение <xref:System.Windows.Forms.ListView.Alignment%2A> свойства элемента управления. Этот метод используется для размещения значков в элементе управления, используя другое значение, чем <xref:System.Windows.Forms.ListView.Alignment%2A> свойство. Чтобы выполнить выравнивание элементов на основе значения <xref:System.Windows.Forms.ListView.Alignment%2A> свойство, используйте другую версию <xref:System.Windows.Forms.ListView.ArrangeIcons%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Значение, указанное в <paramref name="value" /> параметр не является членом <see cref="T:System.Windows.Forms.ListViewAlignment" /> перечисления.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewAlignment" />
        <altmember cref="P:System.Windows.Forms.ListView.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="AutoArrange">
      <MemberSignature Language="C#" Value="public bool AutoArrange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoArrange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.AutoArrange" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoArrange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoArrange { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoArrange : bool with get, set" Usage="System.Windows.Forms.ListView.AutoArrange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, определяющее автоматическое упорядочение значков.</summary>
        <value><see langword="true" /> Если значки автоматически упорядочиваются и привязываются к сетке; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.AutoArrange%2A> Свойства только упорядочивает элементы в <xref:System.Windows.Forms.ListView> управления <xref:System.Windows.Forms.ListView.View%2A> свойству <xref:System.Windows.Forms.View.LargeIcon> или <xref:System.Windows.Forms.View.SmallIcon>. Чтобы изменить выравнивание элементов в <xref:System.Windows.Forms.ListView> управления, используйте <xref:System.Windows.Forms.ListView.Alignment%2A> свойство. Можно использовать <xref:System.Windows.Forms.ListView.AutoArrange%2A> гарантировать, что все товары в вашей <xref:System.Windows.Forms.ListView> управления автоматически подгоняются по не перекрывали друг друга во время выполнения.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Alignment" />
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumn">
      <MemberSignature Language="C#" Value="public void AutoResizeColumn (int columnIndex, System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumn(int32 columnIndex, valuetype System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.AutoResizeColumn(System.Int32,System.Windows.Forms.ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumn (columnIndex As Integer, headerAutoResize As ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumn(int columnIndex, System::Windows::Forms::ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumn : int * System.Windows.Forms.ColumnHeaderAutoResizeStyle -&gt; unit" Usage="listView.AutoResizeColumn (columnIndex, headerAutoResize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="headerAutoResize" Type="System.Windows.Forms.ColumnHeaderAutoResizeStyle" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Отсчитываемый от нуля индекс столбца, у которого изменяется размер.</param>
        <param name="headerAutoResize">Одно из значений перечисления <see cref="T:System.Windows.Forms.ColumnHeaderAutoResizeStyle" />.</param>
        <summary>Изменяет ширину данного столбца в соответствии со стилем изменения размера.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов этого метода действует только один раз <xref:System.Windows.Forms.ListView> и содержащий <xref:System.Windows.Forms.Form> были построены и <xref:System.Windows.Forms.ListView> заголовки столбцов и столбцов заполняется элементами. Если новые элементы добавляются к <xref:System.Windows.Forms.ListView>, столбцы не меняется, если не <xref:System.Windows.Forms.ListView.AutoResizeColumn%2A> вызывается снова.  
  
   
  
## Examples  
 В следующем примере инициализируется <xref:System.Windows.Forms.ListView> в подробном представлении и автоматически изменяет размеры столбцов с помощью <xref:System.Windows.Forms.ListView.AutoResizeColumn%2A> метод. Чтобы выполнить этот пример, вставьте этот код в форму Windows и вызовите `InitializeResizingListView` метод из конструктора формы или <xref:System.Windows.Forms.Form.Load> обработчик событий.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="columnIndex" /> больше, чем 0, если <see cref="P:System.Windows.Forms.ListView.Columns" /> — <see langword="null" />  
  
-или- 
 <paramref name="columnIndex" /> — меньше 0 или больше количества заданных столбцов.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Элемент <paramref name="headerAutoResize" /> не является элементом перечисления <see cref="T:System.Windows.Forms.ColumnHeaderAutoResizeStyle" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeColumns">
      <MemberSignature Language="C#" Value="public void AutoResizeColumns (System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResizeColumns(valuetype System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.AutoResizeColumns(System.Windows.Forms.ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AutoResizeColumns (headerAutoResize As ColumnHeaderAutoResizeStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AutoResizeColumns(System::Windows::Forms::ColumnHeaderAutoResizeStyle headerAutoResize);" />
      <MemberSignature Language="F#" Value="member this.AutoResizeColumns : System.Windows.Forms.ColumnHeaderAutoResizeStyle -&gt; unit" Usage="listView.AutoResizeColumns headerAutoResize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="headerAutoResize" Type="System.Windows.Forms.ColumnHeaderAutoResizeStyle" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="headerAutoResize">Одно из значений перечисления <see cref="T:System.Windows.Forms.ColumnHeaderAutoResizeStyle" />.</param>
        <summary>Изменяет ширину данного столбца в соответствии со стилем изменения размера.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов этого метода действует только один раз <xref:System.Windows.Forms.ListView> и содержащий <xref:System.Windows.Forms.Form> были построены и <xref:System.Windows.Forms.ListView> заголовки столбцов и столбцов заполняется элементами. Если новые элементы добавляются к <xref:System.Windows.Forms.ListView>, столбцы не меняется, если не <xref:System.Windows.Forms.ListView.AutoResizeColumns%2A> вызывается снова.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется инициализация <xref:System.Windows.Forms.ListView> в подробное представление и автоматического изменения размеров столбцов, с помощью <xref:System.Windows.Forms.ListView.AutoResizeColumns%2A> метод. Чтобы выполнить этот пример, вставьте этот код в форму Windows и вызовите `InitializeResizingListView2` метод из конструктора формы или <xref:System.Windows.Forms.Form.Load> обработчик событий.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#9)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Windows.Forms.ListView.AutoResizeColumn(System.Int32,System.Windows.Forms.ColumnHeaderAutoResizeStyle)" /> вызывается со значением, отличное от <see cref="F:System.Windows.Forms.ColumnHeaderAutoResizeStyle.None" /> при <see cref="P:System.Windows.Forms.ListView.View" /> не присвоено значение <see cref="F:System.Windows.Forms.View.Details" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ListView.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает цвет фона.</summary>
        <value><see cref="T:System.Drawing.Color" /> Фона.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.ListView.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает фоновое изображение, отображаемое в этом элементе управления <see cref="T:System.Windows.Forms.ListView" />.</summary>
        <value>Изображения, отображаемого как фон элемента управления.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении значения свойства <see cref="P:System.Windows.Forms.ListView.BackgroundImage" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.ListView.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <see cref="T:System.Windows.Forms.ImageLayout" /> значение.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Windows.Forms.ImageLayout" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство не влияет на макет фонового изображения элемента <xref:System.Windows.Forms.ListView> элемента управления, поэтому он не отображается в конструкторе или технологией IntelliSense.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Значение не является одним из <see cref="T:System.Windows.Forms.ImageLayout" /> значения.</exception>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении свойства <see cref="P:System.Windows.Forms.ListView.BackgroundImageLayout" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageTiled">
      <MemberSignature Language="C#" Value="public bool BackgroundImageTiled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BackgroundImageTiled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BackgroundImageTiled" />
      <MemberSignature Language="VB.NET" Value="Public Property BackgroundImageTiled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BackgroundImageTiled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageTiled : bool with get, set" Usage="System.Windows.Forms.ListView.BackgroundImageTiled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, является ли фоновое изображение <see cref="T:System.Windows.Forms.ListView" /> следует замостить.</summary>
        <value><see langword="true" /> Если фоновое изображение <see cref="T:System.Windows.Forms.ListView" /> следует замостить; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.BackgroundImageTiled%2A> Возвращает `false` изображения не задан.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeLabelEdit">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.LabelEditEventHandler BeforeLabelEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.LabelEditEventHandler BeforeLabelEdit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BeforeLabelEdit As LabelEditEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::LabelEditEventHandler ^ BeforeLabelEdit;" />
      <MemberSignature Language="F#" Value="member this.BeforeLabelEdit : System.Windows.Forms.LabelEditEventHandler " Usage="member this.BeforeLabelEdit : System.Windows.Forms.LabelEditEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LabelEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при начале изменения метки элемента пользователем.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.BeforeLabelEdit> Событие происходит, когда пользователь начинает изменение текста для элемента. Если обработчик событий отменяет это событие, пользователь не может редактировать текст. Это событие можно использовать, чтобы запретить пользователю изменять определенные элементы в <xref:System.Windows.Forms.ListView> элемента управления. Если <xref:System.Windows.Forms.ListView.LabelEdit%2A> свойство <xref:System.Windows.Forms.ListView> управления `false`, <xref:System.Windows.Forms.ListView.BeforeLabelEdit> событие не происходит; все попытки пользователя изменить метку элемента будут автоматически отклонены.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется обработка <xref:System.Windows.Forms.ListView.BeforeLabelEdit> событий и с помощью <xref:System.Windows.Forms.LabelEditEventArgs.Item%2A?displayProperty=nameWithType> и <xref:System.Windows.Forms.LabelEditEventArgs.CancelEdit%2A?displayProperty=nameWithType> свойства. Чтобы запустить пример, вставьте следующий код в форму, которая содержит <xref:System.Windows.Forms.ListView> управления с именем `ListView1` и по крайней мере три элемента. Убедитесь, что обработчик событий в примере связан с событием.  
  
 [!code-cpp[System.Windows.Forms.ListView3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView3/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView3/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
        <altmember cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.LabelEdit" />
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public void BeginUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.BeginUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginUpdate();" />
      <MemberSignature Language="F#" Value="member this.BeginUpdate : unit -&gt; unit" Usage="listView.BeginUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Запрещает прорисовку элемента управления <see cref="M:System.Windows.Forms.ListView.EndUpdate" /> вызывается метод.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Предпочтительный способ добавления нескольких элементов <xref:System.Windows.Forms.ListView> заключается в использовании <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> метод <xref:System.Windows.Forms.ListView.ListViewItemCollection> (через <xref:System.Windows.Forms.ListView.Items%2A> свойство <xref:System.Windows.Forms.ListView>). Это позволяет добавить массив элементов в список, в рамках одной операции. Тем не менее, если вы хотите добавить элементы по одному, используя <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> метод <xref:System.Windows.Forms.ListView.ListViewItemCollection> , можно использовать <xref:System.Windows.Forms.ListView.BeginUpdate%2A> метод, чтобы элемент управления со списком <xref:System.Windows.Forms.ListView> при каждом добавлении элемента. После завершения задачи добавления элементов в элемент управления, вызовите <xref:System.Windows.Forms.ListView.EndUpdate%2A> способ включения <xref:System.Windows.Forms.ListView> перерисовки. Этот способ добавления элементов позволяет избежать мерцания <xref:System.Windows.Forms.ListView> при добавлении большого количества элементов в элемент управления.  
  
 Если <xref:System.Windows.Forms.ListView.BeginUpdate%2A> вызывается несколько раз, <xref:System.Windows.Forms.ListView.EndUpdate%2A> должен вызываться эквивалентное число раз. До последнего вызова <xref:System.Windows.Forms.ListView.EndUpdate%2A> <xref:System.Windows.Forms.ListView> не будет перерисовываться. Кроме этого, несколько вызовов <xref:System.Windows.Forms.ListView.BeginUpdate%2A> не влияют.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется инициализация <xref:System.Windows.Forms.ListView> элемент управления для размещения флажки. Также демонстрируется использование <xref:System.Windows.Forms.ListView.BeginUpdate%2A> и <xref:System.Windows.Forms.ListView.EndUpdate%2A> методы. Чтобы выполнить этот пример, вставьте следующий код в форму, которая содержит <xref:System.Windows.Forms.ListView> с именем `ListView1`. Вызовите `InitializeListView` метод из конструктора формы или `Load` метод.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.EndUpdate" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Windows.Forms.BorderStyle with get, set" Usage="System.Windows.Forms.ListView.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает стиль границы элемента управления.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Windows.Forms.BorderStyle" />. Значение по умолчанию — <see cref="F:System.Windows.Forms.BorderStyle.Fixed3D" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать <xref:System.Windows.Forms.ListView.BorderStyle%2A> свойство, чтобы изменить стиль границы <xref:System.Windows.Forms.ListView> элемента управления в соответствии с параметрами стиля границы других элементов управления в форме. Например, если ни один из других элементов управления в форме отображается в виде рамки, можно задать <xref:System.Windows.Forms.ListView.BorderStyle%2A> свойство <xref:System.Windows.Forms.ListView> управления <xref:System.Windows.Forms.BorderStyle.None> в соответствии с другими элементами управления.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Значение не является одним из <see cref="T:System.Windows.Forms.BorderStyle" /> значения.</exception>
        <altmember cref="T:System.Windows.Forms.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="CacheVirtualItems">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.CacheVirtualItemsEventHandler CacheVirtualItems;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.CacheVirtualItemsEventHandler CacheVirtualItems" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.CacheVirtualItems" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CacheVirtualItems As CacheVirtualItemsEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::CacheVirtualItemsEventHandler ^ CacheVirtualItems;" />
      <MemberSignature Language="F#" Value="member this.CacheVirtualItems : System.Windows.Forms.CacheVirtualItemsEventHandler " Usage="member this.CacheVirtualItems : System.Windows.Forms.CacheVirtualItemsEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CacheVirtualItemsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, когда содержимое отображаемой области <see cref="T:System.Windows.Forms.ListView" /> в виртуальном режиме было изменено и <see cref="T:System.Windows.Forms.ListView" /> определяет, что требуется новый диапазон элементов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие возникает только при <xref:System.Windows.Forms.ListView.VirtualMode%2A> является `true`. Обработка этого события позволяет <xref:System.Windows.Forms.ListView> обновить сведения об элементе хранящихся в кэше, чтобы он доступен. Это может повысить производительность на больших списков или списков, элементы которого являются затраты на вычисление.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В примере обработчик событий проверяет обновление кэша будет действительно необходимо, а затем перестраивает кэш. Данный пример кода является частью большего примера для <xref:System.Windows.Forms.ListView.VirtualMode%2A> свойство.  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#3)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxes">
      <MemberSignature Language="C#" Value="public bool CheckBoxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckBoxes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckBoxes" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckBoxes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckBoxes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckBoxes : bool with get, set" Usage="System.Windows.Forms.ListView.CheckBoxes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, будет ли в данном элементе управления отображаться флажок рядом с каждым составляющим элементом.</summary>
        <value><see langword="true" /> Если отображается флажок рядом с каждым элементом в <see cref="T:System.Windows.Forms.ListView" /> управления; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.CheckBoxes%2A> Свойство позволяет выводить флажок рядом с каждым элементом в списке. Это позволяет приложению отображать список элементов (и подэлементов, если <xref:System.Windows.Forms.ListView.View%2A> свойству `View.Details`), пользователь может выбрать, щелкнув флажок. <xref:System.Windows.Forms.ListView.CheckBoxes%2A> Свойство предоставляет способ, чтобы выбрать несколько элементов в <xref:System.Windows.Forms.ListView> элемента управления, не используя клавишу CTRL. В зависимости от приложения с помощью флажки для выбора элементов, а не стандартных способов выбора нескольких элементов может быть удобнее для пользователя. Даже если <xref:System.Windows.Forms.ListView.MultiSelect%2A> свойство <xref:System.Windows.Forms.ListView> игнорируется `false`, по-прежнему можно отобразить флажки и предоставить пользователю возможность выбора нескольких элементов. Эту функцию можно использовать, если по-прежнему хотите разрешить пользователю выбирать несколько элементов из списка, чтобы выполнить операцию в вашем приложении еще не хотите выбрать.  
  
 Чтобы определить, когда элемент был возвращен, создайте обработчик событий для <xref:System.Windows.Forms.ListView.ItemCheck> событий. Чтобы получить все элементы, которые проверяются в <xref:System.Windows.Forms.ListView>, использовать <xref:System.Windows.Forms.ListView.CheckedItems%2A> свойство для доступа к <xref:System.Windows.Forms.ListView.CheckedIndexCollection> для элемента управления. Чтобы получить индексы всех элементов, которые проверяются в <xref:System.Windows.Forms.ListView>, используйте <xref:System.Windows.Forms.ListView.CheckedIndices%2A> свойство.  
  
 Если <xref:System.Windows.Forms.ImageList> указывается в <xref:System.Windows.Forms.ListView.StateImageList%2A> свойство, изображения с индексами 0 и 1 в <xref:System.Windows.Forms.ImageList> отображаются вместо флажок. Вместо снят флажок отображается изображение по индексу 0, а вместо установленный флажок отображается изображение с индексом 1.  
  
> [!NOTE]
>  Если задано это свойство `true`, <xref:System.Windows.Forms.ListView.ItemCheck> событием.  
>   
>  Флажки не отображается, когда <xref:System.Windows.Forms.ListView.View%2A> свойству <xref:System.Windows.Forms.View.Tile>.  
  
   
  
## Examples  
 В следующем примере кода создается <xref:System.Windows.Forms.ListView> управления с тремя <xref:System.Windows.Forms.ListViewItem> объекты, указанные и три <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> объекты, указанные для каждого элемента. В примере также создается <xref:System.Windows.Forms.ColumnHeader> объектов для отображения в представлении сведений о подэлементы. Два <xref:System.Windows.Forms.ImageList> также создаются в примере кода для изображений <xref:System.Windows.Forms.ListViewItem> объектов. Эти <xref:System.Windows.Forms.ImageList> объекты добавляются в <xref:System.Windows.Forms.ListView.LargeImageList%2A> и <xref:System.Windows.Forms.ListView.SmallImageList%2A> свойства. В примере используется следующие свойства в создании <xref:System.Windows.Forms.ListView> элемента управления.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 В этом примере требуется, что добавлен код для <xref:System.Windows.Forms.Form> и вызвать метод, созданный в примере из конструктора или другого метода на форме. Также в этом примере предполагается, что образы с именем `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, и `MyLargeImage2` , находятся в корневом каталоге диска C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.StateImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="P:System.Windows.Forms.ListView.MultiSelect" />
      </Docs>
    </Member>
    <Member MemberName="CheckedIndices">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.CheckedIndexCollection CheckedIndices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/CheckedIndexCollection CheckedIndices" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedIndices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckedIndices As ListView.CheckedIndexCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::CheckedIndexCollection ^ CheckedIndices { System::Windows::Forms::ListView::CheckedIndexCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckedIndices : System.Windows.Forms.ListView.CheckedIndexCollection" Usage="System.Windows.Forms.ListView.CheckedIndices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+CheckedIndexCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает индексы составляющих элементов с установленными в настоящий момент флажками в элементе управления.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" /> , содержащая индексы элементов с флажками. Если нет элементов в настоящее время этот флажок установлен, пустой <see cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" /> возвращается.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство используется только при <xref:System.Windows.Forms.ListView.CheckBoxes%2A> свойство <xref:System.Windows.Forms.ListView> управления `true`. <xref:System.Windows.Forms.ListView.CheckedIndices%2A> Свойство возвращает коллекцию, содержащую позиции индекса в <xref:System.Windows.Forms.ListView.ListViewItemCollection> всех элементов, которые проверяются в элементе управления. Дополнительные сведения о том, как для работы с элементами в коллекции, см. в разделе <xref:System.Windows.Forms.ListView.CheckedIndexCollection>.  
  
 Если вы хотите получить коллекцию элементов, которые проверяются в <xref:System.Windows.Forms.ListView> управления, а не позиции индекса элементов, которые проверяются, используйте <xref:System.Windows.Forms.ListView.CheckedItems%2A> свойство.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckedItems" />
      </Docs>
    </Member>
    <Member MemberName="CheckedItems">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.CheckedListViewItemCollection CheckedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/CheckedListViewItemCollection CheckedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckedItems As ListView.CheckedListViewItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::CheckedListViewItemCollection ^ CheckedItems { System::Windows::Forms::ListView::CheckedListViewItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckedItems : System.Windows.Forms.ListView.CheckedListViewItemCollection" Usage="System.Windows.Forms.ListView.CheckedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+CheckedListViewItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает составляющие элементы с установленными в настоящий момент флажками в элементе управления.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" /> , содержащая элементы в данный момент флажками. Если нет элементов в настоящее время этот флажок установлен, пустой <see cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" /> возвращается.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство используется только при <xref:System.Windows.Forms.ListView.CheckBoxes%2A> свойство <xref:System.Windows.Forms.ListView> управления `true`. <xref:System.Windows.Forms.ListView.CheckedItems%2A> Свойство возвращает коллекцию, содержащую все элементы, которые проверяются в элементе управления. Дополнительные сведения о том, как для работы с элементами в коллекции, см. в разделе <xref:System.Windows.Forms.ListView.CheckedListViewItemCollection>.  
  
 Если вы хотите получить коллекцию индексов в <xref:System.Windows.Forms.ListView.ListViewItemCollection> элементов, которые проверяются в <xref:System.Windows.Forms.ListView> элемента управления, а не элементы, которые проверяются, используйте <xref:System.Windows.Forms.ListView.CheckedIndices%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано, извлеченный <xref:System.Windows.Forms.ListView> , обрабатывающий <xref:System.Windows.Forms.ListView.ItemChecked> событий. В примере используется <xref:System.Windows.Forms.ListView.CheckedItems%2A> свойство, чтобы регистрировались новая цена каждый раз, элемент устанавливается или снимается. Чтобы выполнить этот пример, вставьте следующий код в форму, которая содержит <xref:System.Windows.Forms.ListView> с именем `ListView1` и <xref:System.Windows.Forms.TextBox> с именем `Textbox1`. Вызовите `InitializeListView` метод из конструктора формы или `Load` метод.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#3)]
[!code-csharp[System.Windows.Forms.ListView2#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#3)]
[!code-vb[System.Windows.Forms.ListView2#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.CheckedListViewItemCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckedIndices" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="listView.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет все составляющие элементы и столбцы из данного элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод можно использовать, чтобы удалить все элементы и столбцы из <xref:System.Windows.Forms.ListView> управления не нужно звонить отдельные `Clear` методы из <xref:System.Windows.Forms.ListView.ColumnHeaderCollection> и <xref:System.Windows.Forms.ListView.ListViewItemCollection> классы.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView.Clear%2A> Метод очищает <xref:System.Windows.Forms.ListView.Groups%2A> указанный для <xref:System.Windows.Forms.ListView> элемента управления. Чтобы очистить <xref:System.Windows.Forms.ListView.Groups%2A> вызвать <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Windows.Forms.ListView.Clear%2A> и <xref:System.Windows.Forms.ListViewItem.Selected%2A?displayProperty=nameWithType> членов. Чтобы выполнить этот пример, вставьте следующий код в форму, которая содержит <xref:System.Windows.Forms.ListView> с именем `ListView1` и кнопку, расположенную в нижней части формы, с именем `Button1`. Вызовите `InitializeListView` метод из конструктора формы или `Load` метод.  
  
 [!code-cpp[System.Windows.Forms.ListView4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView4/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView4/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView4/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ColumnHeaderCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="ColumnClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnClickEventHandler ColumnClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnClickEventHandler ColumnClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnClick As ColumnClickEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnClickEventHandler ^ ColumnClick;" />
      <MemberSignature Language="F#" Value="member this.ColumnClick : System.Windows.Forms.ColumnClickEventHandler " Usage="member this.ColumnClick : System.Windows.Forms.ColumnClickEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, когда пользователь щелкает мышью заголовок столбца в элементе управления "список".</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.ColumnClick> Событие происходит, когда пользователь нажимает одну из заголовков столбцов в подробных сведениях элементов <xref:System.Windows.Forms.ListView> управления (при <xref:System.Windows.Forms.ListView.View%2A> свойству <xref:System.Windows.Forms.View.Details>). <xref:System.Windows.Forms.ListView.ColumnClick> Событие обычно используется для сортировки элементов в <xref:System.Windows.Forms.ListView> с помощью выбранного столбца, как столбец для сортировки.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода создается форма, содержащая <xref:System.Windows.Forms.ListView> элемент управления, который вручную сортировать элементы столбца в <xref:System.Windows.Forms.ListView> нажатии элемента управления. В примере определяется класс с именем `ListViewItemComparer` , реализующий <xref:System.Collections.IComparer?displayProperty=nameWithType> интерфейс, который выполняет <xref:System.Windows.Forms.ListViewItem> сравнения. В примере создается экземпляр `ListViewItemComparer` и использует его для задания <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> свойство <xref:System.Windows.Forms.ListView> элемента управления. <xref:System.Windows.Forms.ListView.Sort%2A> Вызов метода <xref:System.Windows.Forms.ListView.ColumnClick> обработчик событий использует методы, определенные в `ListViewItemComparer` для выполнения сортировки элементов, на основе столбца, которую щелкнули.  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ColumnReordered">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnReorderedEventHandler ColumnReordered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnReorderedEventHandler ColumnReordered" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnReordered" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnReordered As ColumnReorderedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnReorderedEventHandler ^ ColumnReordered;" />
      <MemberSignature Language="F#" Value="member this.ColumnReordered : System.Windows.Forms.ColumnReorderedEventHandler " Usage="member this.ColumnReordered : System.Windows.Forms.ColumnReorderedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnReorderedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении порядка расположения заголовков столбцов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.ColumnReordered> Событий событие является отменяемым и могут быть отменены путем обработки события и параметр <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> свойства `true`. Тем не менее, если событие отменяется, <xref:System.Windows.Forms.ColumnReorderedEventArgs.NewDisplayIndex%2A> из <xref:System.Windows.Forms.ColumnReorderedEventArgs> не меняет <xref:System.Windows.Forms.ColumnReorderedEventArgs.OldDisplayIndex%2A> значение.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В примере обработчик событий сообщает о вхождение <xref:System.Windows.Forms.ListView.ColumnReordered> событий. Этот отчет позволяет выяснить, когда происходит событие и может оказаться полезным при отладке. Чтобы создать отчет для нескольких событий или событий, которые происходят часто, рассмотрите возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> с <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> или добавлении сообщения в многострочном <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы запустить пример кода, вставьте его в проект, который содержит экземпляр типа <xref:System.Windows.Forms.ListView> с именем `ListView1`. Убедитесь, что обработчик событий, связанный с <xref:System.Windows.Forms.ListView.ColumnReordered> событий.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#467](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#467)]
 [!code-vb[System.Windows.Forms.EventExamples#467](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#467)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.ColumnHeaderCollection Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/ColumnHeaderCollection Columns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As ListView.ColumnHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::ColumnHeaderCollection ^ Columns { System::Windows::Forms::ListView::ColumnHeaderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Columns : System.Windows.Forms.ListView.ColumnHeaderCollection" Usage="System.Windows.Forms.ListView.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ColumnHeaderCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ColumnHeaderCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+ColumnHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию всех заголовков столбцов, отображаемых в данном элементе управления.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" /> , представляющий заголовки столбцов, отображающихся <see cref="P:System.Windows.Forms.ListView.View" /> свойству <see cref="F:System.Windows.Forms.View.Details" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.Columns%2A> Свойство возвращает коллекцию, содержащую <xref:System.Windows.Forms.ColumnHeader> объектов, отображаемых в <xref:System.Windows.Forms.ListView> элемента управления. <xref:System.Windows.Forms.ColumnHeader> объекты определения столбцов, отображаемых в <xref:System.Windows.Forms.ListView> управления <xref:System.Windows.Forms.ListView.View%2A> свойству <xref:System.Windows.Forms.View.Details>. Каждый столбец используется для отображения системных данных для каждого элемента в <xref:System.Windows.Forms.ListView>. Дополнительные сведения о том, как для работы с элементами в коллекции, см. в разделе <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>.  
  
> [!NOTE]
>  Если ваш <xref:System.Windows.Forms.ListView> управления не поддерживает указанные заголовки столбцов и установке <xref:System.Windows.Forms.ListView.View%2A> свойства <xref:System.Windows.Forms.View.Details>, <xref:System.Windows.Forms.ListView> элемент управления не будет отображать какие-либо элементы.  
  
   
  
## Examples  
 В следующем примере кода создается <xref:System.Windows.Forms.ListView> управления с тремя <xref:System.Windows.Forms.ListViewItem> объекты, указанные и три <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> объекты, указанные для каждого элемента. В примере также создается <xref:System.Windows.Forms.ColumnHeader> объектов для отображения в представлении сведений о подэлементы. Два <xref:System.Windows.Forms.ImageList> также создаются в примере кода для изображений <xref:System.Windows.Forms.ListViewItem> объектов. Эти <xref:System.Windows.Forms.ImageList> объекты добавляются в <xref:System.Windows.Forms.ListView.LargeImageList%2A> и <xref:System.Windows.Forms.ListView.SmallImageList%2A> свойства. В примере используется следующие свойства в создании <xref:System.Windows.Forms.ListView> элемента управления.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 В этом примере требуется, что добавлен код для <xref:System.Windows.Forms.Form> и вызвать метод, созданный в примере из конструктора или другого метода на форме. Также в этом примере предполагается, что образы с именем `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, и `MyLargeImage2` , находятся в корневом каталоге диска C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
      </Docs>
    </Member>
    <Member MemberName="ColumnWidthChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnWidthChangedEventHandler ColumnWidthChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnWidthChangedEventHandler ColumnWidthChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnWidthChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnWidthChanged As ColumnWidthChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnWidthChangedEventHandler ^ ColumnWidthChanged;" />
      <MemberSignature Language="F#" Value="member this.ColumnWidthChanged : System.Windows.Forms.ColumnWidthChangedEventHandler " Usage="member this.ColumnWidthChanged : System.Windows.Forms.ColumnWidthChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnWidthChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после успешного изменения ширины столбца.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие не происходит, если изменение ширины столбца отменяется в <xref:System.Windows.Forms.ListView.ColumnWidthChanging> событий  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В примере обработчик событий сообщает о вхождение <xref:System.Windows.Forms.ListView.ColumnWidthChanged> событий. Этот отчет позволяет выяснить, когда происходит событие и может оказаться полезным при отладке. Чтобы создать отчет для нескольких событий или событий, которые происходят часто, рассмотрите возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> с <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> или добавлении сообщения в многострочном <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы запустить пример кода, вставьте его в проект, который содержит экземпляр типа <xref:System.Windows.Forms.ListView> с именем `ListView1`. Убедитесь, что обработчик событий, связанный с <xref:System.Windows.Forms.ListView.ColumnWidthChanged> событий.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#468](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#468)]
 [!code-vb[System.Windows.Forms.EventExamples#468](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#468)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnWidthChanging">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ColumnWidthChangingEventHandler ColumnWidthChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ColumnWidthChangingEventHandler ColumnWidthChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ColumnWidthChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnWidthChanging As ColumnWidthChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ColumnWidthChangingEventHandler ^ ColumnWidthChanging;" />
      <MemberSignature Language="F#" Value="member this.ColumnWidthChanging : System.Windows.Forms.ColumnWidthChangingEventHandler " Usage="member this.ColumnWidthChanging : System.Windows.Forms.ColumnWidthChangingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnWidthChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении ширины столбца.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие позволяет проверить новую ширину столбца с <xref:System.Windows.Forms.ColumnWidthChangingEventArgs.NewWidth%2A?displayProperty=nameWithType> свойство и Отмена события при выборе, задав <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> свойства `true`.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется обработка <xref:System.Windows.Forms.ListView.ColumnWidthChanging> событий. Он также демонстрирует <xref:System.Windows.Forms.ColumnWidthChangingEventArgs.NewWidth%2A?displayProperty=nameWithType> и <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> членов. Чтобы выполнить этот пример, вставьте код в форму Windows. Вызовите `InitializeListView1` из конструктора формы или <xref:System.Windows.Forms.Form.Load> обработчик событий.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="listView.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает новый экземпляр объекта специальных возможностей для элемента управления <see cref="T:System.Windows.Forms.ListView" />.</summary>
        <returns>Объект <see cref="T:System.Windows.Forms.Control.ControlAccessibleObject" /> для этого элемента управления<see cref="T:System.Windows.Forms.ListView" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberSignature Language="F#" Value="override this.CreateHandle : unit -&gt; unit" Usage="listView.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает дескриптор для элемента управления.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.ListView.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Данное свойство не применимо к этому классу.</summary>
        <value>Значение <see langword="null" /> во всех случаях.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данное свойство не применимо к этому классу.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.ListView.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает размер элемента управления по умолчанию.</summary>
        <value><see cref="T:System.Drawing.Size" /> по умолчанию для элемента управления.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="listView.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
        <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Windows.Forms.ListView" />, а при необходимости освобождает также управляемые ресурсы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите <xref:System.Windows.Forms.ListView.Dispose%2A> метод, когда компонент больше не используется. Этот метод удаляет компонент из контейнера (если компонент имеет сайта) и активирует событие удаления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffered">
      <MemberSignature Language="C#" Value="protected override bool DoubleBuffered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleBuffered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.DoubleBuffered" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DoubleBuffered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DoubleBuffered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoubleBuffered : bool with get, set" Usage="System.Windows.Forms.ListView.DoubleBuffered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, должна ли поверхность этого элемента управления перерисовываться с помощью дополнительного буфера, чтобы уменьшить или предотвратить мерцание.</summary>
        <value>Значение <see langword="true" />, если поверхность элемента управления должна перерисовываться с помощью двойной буферизации; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawColumnHeader">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawListViewColumnHeaderEventHandler DrawColumnHeader;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawListViewColumnHeaderEventHandler DrawColumnHeader" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.DrawColumnHeader" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawColumnHeader As DrawListViewColumnHeaderEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawListViewColumnHeaderEventHandler ^ DrawColumnHeader;" />
      <MemberSignature Language="F#" Value="member this.DrawColumnHeader : System.Windows.Forms.DrawListViewColumnHeaderEventHandler " Usage="member this.DrawColumnHeader : System.Windows.Forms.DrawListViewColumnHeaderEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawListViewColumnHeaderEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, когда представления элемента <see cref="T:System.Windows.Forms.ListView" /> рисуется и <see cref="P:System.Windows.Forms.ListView.OwnerDraw" /> свойству <see langword="true" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие позволяет настроить внешний вид <xref:System.Windows.Forms.ListView> элемента управления с помощью рисование владельцем. Это событие возникает только тогда, когда <xref:System.Windows.Forms.ListView.OwnerDraw%2A> свойству `true` и <xref:System.Windows.Forms.ListView.View%2A> свойству <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>. Это событие может вызываться для каждого заголовка столбца в элементе управления. Дополнительные сведения о рисовании владельцем, см. в разделе <xref:System.Windows.Forms.ListView.OwnerDraw%2A> свойство справочном разделе.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода предоставляет реализацию <xref:System.Windows.Forms.ListView.DrawColumnHeader> обработчик событий. Полный пример, включая реализацию <xref:System.Windows.Forms.ListView.DrawSubItem> обработчик событий, см. в разделе <xref:System.Windows.Forms.ListView.OwnerDraw%2A> справочника.  
  
 [!code-csharp[ListViewOwnerDraw#5](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#5)]
 [!code-vb[ListViewOwnerDraw#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="T:System.Windows.Forms.DrawListViewColumnHeaderEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="DrawItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawListViewItemEventHandler DrawItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawListViewItemEventHandler DrawItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.DrawItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawItem As DrawListViewItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawListViewItemEventHandler ^ DrawItem;" />
      <MemberSignature Language="F#" Value="member this.DrawItem : System.Windows.Forms.DrawListViewItemEventHandler " Usage="member this.DrawItem : System.Windows.Forms.DrawListViewItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawListViewItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при <see cref="T:System.Windows.Forms.ListView" /> рисуется и <see cref="P:System.Windows.Forms.ListView.OwnerDraw" /> свойству <see langword="true" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие позволяет настроить внешний вид <xref:System.Windows.Forms.ListView> элемента управления с помощью рисование владельцем. Это событие возникает только тогда, когда <xref:System.Windows.Forms.ListView.OwnerDraw%2A> свойству `true`. Дополнительные сведения о рисовании владельцем, см. в разделе <xref:System.Windows.Forms.ListView.OwnerDraw%2A> свойство справочном разделе.  
  
 <xref:System.Windows.Forms.ListView.DrawItem> Событие может вызываться для каждого <xref:System.Windows.Forms.ListView> элемента. Когда <xref:System.Windows.Forms.ListView.View%2A> свойству <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>, <xref:System.Windows.Forms.ListView.DrawSubItem> и <xref:System.Windows.Forms.ListView.DrawColumnHeader> также возникновении событий. В этом случае можно обрабатывать <xref:System.Windows.Forms.ListView.DrawItem> событий рисования элементы, общие для всех элементов, таких как фон, и обработать <xref:System.Windows.Forms.ListView.DrawSubItem> событий для рисования элементов для отдельных подэлементов, таких как текстовые значения. Также можно рисовать все элементы <xref:System.Windows.Forms.ListView> управления с помощью только одного из двух событий, несмотря на то, что это может быть менее удобно. Чтобы нарисовать заголовки столбцов в представлении сведений, необходимо обрабатывать <xref:System.Windows.Forms.ListView.DrawColumnHeader> событий.  
  
> [!NOTE]
>  Из-за ошибки в базового элемента управления Win32 <xref:System.Windows.Forms.ListView.DrawItem> событие происходит без сопроводительной <xref:System.Windows.Forms.ListView.DrawSubItem> событий после каждой строки в представлении сведений при перемещении указателя мыши на строку, вызывая ничего нарисованы в <xref:System.Windows.Forms.ListView.DrawSubItem> обработчик событий, чтобы быть Закрашенный на настраиваемый фон рисуется <xref:System.Windows.Forms.ListView.DrawItem> обработчик событий. Ознакомьтесь с примером в <xref:System.Windows.Forms.ListView.OwnerDraw%2A> Справочник по обходной путь, который делает недействительным каждой строки при возникновении дополнительные события. Второе решение — поместить весь пользовательский код рисования в <xref:System.Windows.Forms.ListView.DrawSubItem> обработчик событий и рисования фона для всего элемента (включая его подэлементы) только тогда, когда <xref:System.Windows.Forms.DrawListViewSubItemEventArgs.ColumnIndex%2A?displayProperty=nameWithType> значение равно 0.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода предоставляет реализацию <xref:System.Windows.Forms.ListView.DrawItem> обработчик событий. Полный пример см. в разделе <xref:System.Windows.Forms.ListView.OwnerDraw%2A> справочника.  
  
 [!code-csharp[ListViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#3)]
 [!code-vb[ListViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="T:System.Windows.Forms.DrawListViewItemEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawColumnHeader" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="DrawSubItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawListViewSubItemEventHandler DrawSubItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawListViewSubItemEventHandler DrawSubItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.DrawSubItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawSubItem As DrawListViewSubItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawListViewSubItemEventHandler ^ DrawSubItem;" />
      <MemberSignature Language="F#" Value="member this.DrawSubItem : System.Windows.Forms.DrawListViewSubItemEventHandler " Usage="member this.DrawSubItem : System.Windows.Forms.DrawListViewSubItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawListViewSubItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, когда представления элемента <see cref="T:System.Windows.Forms.ListView" /> рисуется и <see cref="P:System.Windows.Forms.ListView.OwnerDraw" /> свойству <see langword="true" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие позволяет настроить внешний вид <xref:System.Windows.Forms.ListView> элемента управления с помощью рисование владельцем. Это событие возникает только тогда, когда <xref:System.Windows.Forms.ListView.OwnerDraw%2A> свойству `true` и <xref:System.Windows.Forms.ListView.View%2A> свойству <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>. Дополнительные сведения о рисовании владельцем, см. в разделе <xref:System.Windows.Forms.ListView.OwnerDraw%2A> свойство справочном разделе.  
  
> [!NOTE]
>  Сведения подэлементов, обычно появляется в представлении плиток, а также представления, но в представлении плиток, его необходимо нарисовать в обработчике <xref:System.Windows.Forms.ListView.DrawItem> событий.  
  
 <xref:System.Windows.Forms.ListView.DrawSubItem> Событие может вызываться для каждого <xref:System.Windows.Forms.ListView> вложенного элемента. Можно обрабатывать <xref:System.Windows.Forms.ListView.DrawItem> событий рисования элементы, общие для всех подэлементов, таких как в фоновом режиме, и обработать <xref:System.Windows.Forms.ListView.DrawSubItem> событий для рисования элементов для отдельных подэлементов, таких как текстовые значения. Также можно рисовать все элементы <xref:System.Windows.Forms.ListView> управления с помощью только одного из двух событий, несмотря на то, что это может быть менее удобно. Чтобы нарисовать заголовки столбцов в представлении сведений, необходимо обрабатывать <xref:System.Windows.Forms.ListView.DrawColumnHeader> событий.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListView.DrawSubItem> Событие не возникает всем вложенным элементам, для которых нет <xref:System.Windows.Forms.ColumnHeader> был добавлен объект <xref:System.Windows.Forms.ListView.Columns%2A> коллекции. Обратите внимание, что первый подэлемент каждого <xref:System.Windows.Forms.ListViewItem> объект представляет собой родительский элемент и отображается в первом столбце.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода предоставляет реализацию <xref:System.Windows.Forms.ListView.DrawSubItem> обработчик событий. Полный пример см. в разделе <xref:System.Windows.Forms.ListView.OwnerDraw%2A> справочника.  
  
 [!code-csharp[ListViewOwnerDraw#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#4)]
 [!code-vb[ListViewOwnerDraw#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ColumnHeader" />
        <altmember cref="T:System.Windows.Forms.DrawListViewSubItemEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawColumnHeader" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.OwnerDraw" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="EndUpdate">
      <MemberSignature Language="C#" Value="public void EndUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.EndUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndUpdate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndUpdate();" />
      <MemberSignature Language="F#" Value="member this.EndUpdate : unit -&gt; unit" Usage="listView.EndUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возобновляет прорисовку элемента в списке просмотра элемента управления после оно было приостановлено <see cref="M:System.Windows.Forms.ListView.BeginUpdate" /> метод.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Предпочтительный способ добавления нескольких элементов <xref:System.Windows.Forms.ListView> заключается в использовании <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> метод <xref:System.Windows.Forms.ListView.ListViewItemCollection> (через <xref:System.Windows.Forms.ListView.Items%2A> свойство <xref:System.Windows.Forms.ListView>). Это позволяет добавить массив элементов в список, в рамках одной операции. Тем не менее, если вы хотите добавить элементы по одному, используя <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> метод <xref:System.Windows.Forms.ListView.ListViewItemCollection> , можно использовать <xref:System.Windows.Forms.ListView.BeginUpdate%2A> метод, чтобы элемент управления со списком <xref:System.Windows.Forms.ListView> каждый раз при добавлении элемента. После завершения задачи добавления элементов в элемент управления, вызовите <xref:System.Windows.Forms.ListView.EndUpdate%2A> способ включения <xref:System.Windows.Forms.ListView> перерисовки. Этот способ добавления элементов позволяет избежать мерцания <xref:System.Windows.Forms.ListView> при добавлении большое число элементов в элемент управления.  
  
 Если <xref:System.Windows.Forms.ListView.BeginUpdate%2A> вызывается несколько раз, <xref:System.Windows.Forms.ListView.EndUpdate%2A> должен вызываться эквивалентное число раз. До последнего вызова <xref:System.Windows.Forms.ListView.EndUpdate%2A> <xref:System.Windows.Forms.ListView> не будет перерисовываться. Кроме этого, несколько вызовов <xref:System.Windows.Forms.ListView.BeginUpdate%2A> не влияют.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется инициализация <xref:System.Windows.Forms.ListView> элемент управления для размещения флажки. Он также демонстрирует использование <xref:System.Windows.Forms.ListView.BeginUpdate%2A> и <xref:System.Windows.Forms.ListView.EndUpdate%2A> методы. Чтобы выполнить этот пример, вставьте следующий код в форму, содержащую <xref:System.Windows.Forms.ListView> с именем `ListView1`. Вызовите `InitializeListView` метод из конструктора формы или `Load` метод.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.BeginUpdate" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="EnsureVisible">
      <MemberSignature Language="C#" Value="public void EnsureVisible (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnsureVisible(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.EnsureVisible(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnsureVisible (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnsureVisible(int index);" />
      <MemberSignature Language="F#" Value="member this.EnsureVisible : int -&gt; unit" Usage="listView.EnsureVisible index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Отсчитываемый от нуля индекс элемента, который прокручивается в представлении.</param>
        <summary>Обеспечивает отображение на экране указанного составляющего элемента в данном элементе управления, при необходимости выполняя прокрутку содержимого элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод можно использовать, чтобы убедиться, что определенный элемент является видимым в пределах <xref:System.Windows.Forms.ListView> элемента управления. При выполнении проверки на элементы в <xref:System.Windows.Forms.ListView>, можно вызвать <xref:System.Windows.Forms.ListView.EnsureVisible%2A> метод, чтобы гарантировать, что элемент, который не прошел проверку отображается в <xref:System.Windows.Forms.ListView> элемента управления, чтобы разрешить пользователю выполнять изменения в элементе. Если отображается элемент, который вы хотите убедиться, окажется выше области просмотра из <xref:System.Windows.Forms.ListView> управления, вызывая <xref:System.Windows.Forms.ListView.EnsureVisible%2A> метод прокручивает содержимое элемента управления, пока она не будет первый элемент в видимой области элемента управления. Если элемент находится ниже видимой области элемента <xref:System.Windows.Forms.ListView> управления, вызывая <xref:System.Windows.Forms.ListView.EnsureVisible%2A> метод будет прокручивать содержимое <xref:System.Windows.Forms.ListView> управления до последнего элемента в элементе управления в видимой области элемента.  
  
 Чтобы определить, если элемент находится в верхней части области отображения <xref:System.Windows.Forms.ListView> управления, используйте <xref:System.Windows.Forms.ListView.TopItem%2A> свойство.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.TopItem" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindItemWithText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Находит первый <see cref="T:System.Windows.Forms.ListViewItem" /> , который начинается с заданного текстового значения.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindItemWithText">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindItemWithText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindItemWithText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindItemWithText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItemWithText (text As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindItemWithText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.FindItemWithText : string -&gt; System.Windows.Forms.ListViewItem" Usage="listView.FindItemWithText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">Текст для поиска.</param>
        <summary>Находит первый <see cref="T:System.Windows.Forms.ListViewItem" /> , начинается с указанного текстового значения.</summary>
        <returns>Первый <see cref="T:System.Windows.Forms.ListViewItem" /> , начинается с указанного текстового значения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При поиске не учитывается регистр.  
  
 `text` Параметра можно указать подстроку из текста. Кроме того этот метод возвращает первый элемент, который начинается с указанного текста. Например если <xref:System.Windows.Forms.ListView> содержит два элемента списка — первый элемент текста, равным «угловая скобка» и второй элемент text, имеющим значение «bracket» - вызов <xref:System.Windows.Forms.ListView.FindItemWithText%2A> передачи `brack` как параметр вернет элемент с текстом «bracket».  
  
 <xref:System.Windows.Forms.ListView.FindItemWithText%2A> Возвращает метод `null` Если список пуст или нет ни одного соответствующего элемента.  
  
   
  
## Examples  
 В следующем примере кода показано <xref:System.Windows.Forms.ListView.FindItemWithText%2A> метод. Чтобы выполнить этот пример, вставьте следующий код в форму Windows и вызовите `InitializeFindListView` метод из конструктора формы или <xref:System.Windows.Forms.Form.Load> обработчик событий. Нажмите кнопку, чтобы увидеть результаты вызова метода.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindItemWithText">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindItemWithText (string text, bool includeSubItemsInSearch, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindItemWithText(string text, bool includeSubItemsInSearch, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindItemWithText(System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItemWithText (text As String, includeSubItemsInSearch As Boolean, startIndex As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindItemWithText(System::String ^ text, bool includeSubItemsInSearch, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindItemWithText : string * bool * int -&gt; System.Windows.Forms.ListViewItem" Usage="listView.FindItemWithText (text, includeSubItemsInSearch, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="includeSubItemsInSearch" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="startIndex" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">Текст для поиска.</param>
        <param name="includeSubItemsInSearch"><see langword="true" /> для включения дополнительных данных в поиск; в противном случае <see langword="false" />.</param>
        <param name="startIndex">Индекс элемента, с которого требуется начать поиск.</param>
        <summary>Находит первый <see cref="T:System.Windows.Forms.ListViewItem" /> или <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />(Если указано), который начинается с указанного текстового значения. Поиск начинается с указанного индекса.</summary>
        <returns>Первый <see cref="T:System.Windows.Forms.ListViewItem" /> , начинается с указанного текстового значения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При поиске не учитывается регистр.  
  
 `text` Параметра можно указать подстроку из текста. Кроме того этот метод возвращает первый элемент, который начинается с указанного текста. Например если <xref:System.Windows.Forms.ListView> содержит два элемента списка — первый элемент текста, равным «угловая скобка» и второй элемент text, имеющим значение «bracket» - вызов <xref:System.Windows.Forms.ListView.FindItemWithText%2A> передачи «brack» как параметр будет возвращать элемент, текст которых является «bracket».  
  
 <xref:System.Windows.Forms.ListView.FindItemWithText%2A> Возвращает метод `null` Если список пуст или нет ни одного соответствующего элемента.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> меньше 0 или больше количества элементов в <see cref="T:System.Windows.Forms.ListView" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindItemWithText">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindItemWithText (string text, bool includeSubItemsInSearch, int startIndex, bool isPrefixSearch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindItemWithText(string text, bool includeSubItemsInSearch, int32 startIndex, bool isPrefixSearch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindItemWithText(System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItemWithText (text As String, includeSubItemsInSearch As Boolean, startIndex As Integer, isPrefixSearch As Boolean) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindItemWithText(System::String ^ text, bool includeSubItemsInSearch, int startIndex, bool isPrefixSearch);" />
      <MemberSignature Language="F#" Value="member this.FindItemWithText : string * bool * int * bool -&gt; System.Windows.Forms.ListViewItem" Usage="listView.FindItemWithText (text, includeSubItemsInSearch, startIndex, isPrefixSearch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="includeSubItemsInSearch" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="startIndex" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="isPrefixSearch" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">Текст для поиска.</param>
        <param name="includeSubItemsInSearch"><see langword="true" /> для включения дополнительных данных в поиск; в противном случае <see langword="false" />.</param>
        <param name="startIndex">Индекс элемента, с которого требуется начать поиск.</param>
        <param name="isPrefixSearch"><see langword="true" /> Чтобы разрешить частичные совпадения; в противном случае <see langword="false" />.</param>
        <summary>Находит первый <see cref="T:System.Windows.Forms.ListViewItem" /> или <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />(Если указано), который начинается с указанного текстового значения. Поиск начинается с указанного индекса.</summary>
        <returns>Первый <see cref="T:System.Windows.Forms.ListViewItem" /> , начинается с указанного текстового значения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.FindItemWithText%2A> Возвращает метод `null` Если список пуст или нет ни одного соответствующего элемента.  
  
 При поиске не учитывается регистр.  
  
 `text` Параметра можно указать подстроку из текста. Этот метод возвращает первый элемент, который начинается с указанного текста, если не `false` передается в `isPrefixSearch`. Например если <xref:System.Windows.Forms.ListView> содержит два элемента списка — первый элемент текста, равным «угловая скобка» и второй элемент text, имеющим значение «bracket» - вызов <xref:System.Windows.Forms.ListView.FindItemWithText%2A> передачи «brack» как текст для поиска будет возвращать элемент, текст которых является «bracket». Если `isPrefixSearch` присваивается `false`, этот вызов вернет `null`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> меньше 0 или больше, чем число элементов в <see cref="T:System.Windows.Forms.ListView" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindNearestItem">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Находит следующий элемент из заданной точке при поиске в указанном направлении.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindNearestItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindNearestItem (System.Windows.Forms.SearchDirectionHint dir, System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindNearestItem(valuetype System.Windows.Forms.SearchDirectionHint dir, valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindNearestItem(System.Windows.Forms.SearchDirectionHint,System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindNearestItem(System::Windows::Forms::SearchDirectionHint dir, System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.FindNearestItem : System.Windows.Forms.SearchDirectionHint * System.Drawing.Point -&gt; System.Windows.Forms.ListViewItem" Usage="listView.FindNearestItem (dir, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dir" Type="System.Windows.Forms.SearchDirectionHint" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="point" Type="System.Drawing.Point" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dir">Одно из значений перечисления <see cref="T:System.Windows.Forms.SearchDirectionHint" />.</param>
        <param name="point">Точка, от которой начинается поиск.</param>
        <summary>Находит следующий элемент, начиная поиск от заданной точки в указанном направлении.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> , Наиболее близкое к заданной точке при поиске в указанном направлении.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.FindNearestItem%2A> Возвращает метод `null` Если не найден элемент в заданном направлении. Идентификация ближайшего элемента зависит от операционной системы, приложение выполняется на, а также повлияет на результаты <xref:System.Windows.Forms.ListView.FindNearestItem%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.ListView.View" /> задано значение, отличное от <see cref="F:System.Windows.Forms.View.SmallIcon" /> или <see cref="F:System.Windows.Forms.View.LargeIcon" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindNearestItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FindNearestItem (System.Windows.Forms.SearchDirectionHint searchDirection, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem FindNearestItem(valuetype System.Windows.Forms.SearchDirectionHint searchDirection, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.FindNearestItem(System.Windows.Forms.SearchDirectionHint,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNearestItem (searchDirection As SearchDirectionHint, x As Integer, y As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ FindNearestItem(System::Windows::Forms::SearchDirectionHint searchDirection, int x, int y);" />
      <MemberSignature Language="F#" Value="member this.FindNearestItem : System.Windows.Forms.SearchDirectionHint * int * int -&gt; System.Windows.Forms.ListViewItem" Usage="listView.FindNearestItem (searchDirection, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchDirection" Type="System.Windows.Forms.SearchDirectionHint" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="x" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="y" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="searchDirection">Одно из значений перечисления <see cref="T:System.Windows.Forms.SearchDirectionHint" />.</param>
        <param name="x">Координата X точки, от которой начинается поиск.</param>
        <param name="y">Координата Y точки, от которой начинается поиск.</param>
        <summary>Находит следующий элемент из заданного x и y координаты, поиск в указанном направлении.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> , Наиболее близкое к точки, заданной координатами, поиск в указанном направлении.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.FindNearestItem%2A> Возвращает метод `null` Если не найден элемент в заданном направлении. Идентификация ближайшего элемента зависит от операционной системы, приложение выполняется на, а также повлияет на результаты <xref:System.Windows.Forms.ListView.FindNearestItem%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.ListView.View" /> задано значение, отличное от <see cref="F:System.Windows.Forms.View.SmallIcon" /> или <see cref="F:System.Windows.Forms.View.LargeIcon" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FocusedItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem FocusedItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem FocusedItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.FocusedItem" />
      <MemberSignature Language="VB.NET" Value="Public Property FocusedItem As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem ^ FocusedItem { System::Windows::Forms::ListViewItem ^ get(); void set(System::Windows::Forms::ListViewItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FocusedItem : System.Windows.Forms.ListViewItem with get, set" Usage="System.Windows.Forms.ListView.FocusedItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает для данного элемента управления составляющий элемент, на который в настоящий момент установлен фокус.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.ListViewItem" /> , представляющий элемент, имеющий фокус, или <see langword="null" /> Если элемент не имеет фокус в <see cref="T:System.Windows.Forms.ListView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.FocusedItem%2A> Возвращает <xref:System.Windows.Forms.ListViewItem> , представляющий элемент, в настоящее время отображается прямоугольник фокуса для <xref:System.Windows.Forms.ListView> элемента управления. Так как <xref:System.Windows.Forms.ListView> элемент управления имеет области не может быть изменено непосредственно, отличный от элементов, он отображает при <xref:System.Windows.Forms.ListView> элемент управления имеет фокус, элемент внутри <xref:System.Windows.Forms.ListView> отображает маркер вокруг текста. Как правило, последний выбранный элемент в <xref:System.Windows.Forms.ListView> элемент управления является элементом с фокусом. Несмотря на то, что элемент может находиться маркер фокуса, может оказаться фактически выбранного элемента в <xref:System.Windows.Forms.ListView>. Используйте <xref:System.Windows.Forms.ListView.SelectedItems%2A> или <xref:System.Windows.Forms.ListView.SelectedIndices%2A> свойства для получения выделенных элементов <xref:System.Windows.Forms.ListView> управления <xref:System.Windows.Forms.ListView.FocusedItem%2A> выбрано свойство не обязательно. Можно использовать <xref:System.Windows.Forms.ListView.FocusedItem%2A> свойства, чтобы определить, какой элемент был щелкнул в <xref:System.Windows.Forms.ListView> элементу управления, независимо от состояния выделения.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ListView.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает цвет переднего плана.</summary>
        <value><see cref="T:System.Drawing.Color" /> , Являющийся цветом переднего плана.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullRowSelect">
      <MemberSignature Language="C#" Value="public bool FullRowSelect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FullRowSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.FullRowSelect" />
      <MemberSignature Language="VB.NET" Value="Public Property FullRowSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FullRowSelect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FullRowSelect : bool with get, set" Usage="System.Windows.Forms.ListView.FullRowSelect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, выбираются ли при щелчке элемента все его подэлементы.</summary>
        <value><see langword="true" /> При щелчке элемента мышью выбираются он сам и все его подэлементы, <see langword="false" /> при щелчке элемента мышью выбирается только сам элемент. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.FullRowSelect%2A> Свойство действует только <xref:System.Windows.Forms.ListView.View%2A> свойство <xref:System.Windows.Forms.ListView> управления <xref:System.Windows.Forms.View.Details>. <xref:System.Windows.Forms.ListView.FullRowSelect%2A> Оно обычно используется, когда <xref:System.Windows.Forms.ListView> отображение элементов с множеством дополнительных данных и ее важно иметь возможность увидеть выбранных элементов в том случае, если текст элемента не отображается из-за горизонтальную прокрутку содержимого элемента управления.  
  
> [!NOTE]
>  При <xref:System.Windows.Forms.ListView.FullRowSelect%2A> присваивается `true`, всплывающие подсказки для <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> не будет отображаться; только подсказка для родительского <xref:System.Windows.Forms.ListViewItem> отображается.  
  
   
  
## Examples  
 В следующем примере кода создается <xref:System.Windows.Forms.ListView> управления с тремя <xref:System.Windows.Forms.ListViewItem> объекты, указанные и три <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> объекты, указанные для каждого элемента. В примере также создается <xref:System.Windows.Forms.ColumnHeader> объектов для отображения в представлении сведений о подэлементы. Два <xref:System.Windows.Forms.ImageList> также создаются в примере кода для изображений <xref:System.Windows.Forms.ListViewItem> объектов. Эти <xref:System.Windows.Forms.ImageList> объекты добавляются в <xref:System.Windows.Forms.ListView.LargeImageList%2A> и <xref:System.Windows.Forms.ListView.SmallImageList%2A> свойства. В примере используется следующие свойства в создании <xref:System.Windows.Forms.ListView> элемента управления.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 В этом примере требуется, что добавлен код для <xref:System.Windows.Forms.Form> и вызвать метод, созданный в примере из конструктора или другого метода на форме. Также в этом примере предполагается, что образы с именем `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, и `MyLargeImage2` , находятся в корневом каталоге диска C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="F:System.Windows.Forms.View.Details" />
      </Docs>
    </Member>
    <Member MemberName="GetItemAt">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem GetItemAt (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem GetItemAt(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.GetItemAt(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemAt (x As Integer, y As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ GetItemAt(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.GetItemAt : int * int -&gt; System.Windows.Forms.ListViewItem" Usage="listView.GetItemAt (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">X координата расположения для поиска элемента (выражена в координатах клиентской области окна).</param>
        <param name="y">Y координата расположения для поиска элемента (выражена в координатах клиентской области окна).</param>
        <summary>Возвращает элемент, находящийся в указанном местоположении.</summary>
        <returns>Объект <see cref="T:System.Windows.Forms.ListViewItem" /> , представляющий элемент в указанной позиции. Если отсутствует элемент, в заданном расположении, метод возвращает <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.GetItemAt%2A> Метод позволяет определить, какой элемент находится в определенном месте в пределах клиентской области <xref:System.Windows.Forms.ListView> элемента управления. Этот метод можно использовать, когда пользователь нажимает кнопку правой кнопкой подэлемент (когда <xref:System.Windows.Forms.ListView.View%2A> свойству `View.Details`) и требуется определить, какой элемент, которому принадлежит подэлемента, который был щелкнут основании координаты указателя мыши во время щелчка мыши .  
  
> [!NOTE]
>  Когда <xref:System.Windows.Forms.ListView.FullRowSelect%2A> свойство имеет значение `false`, этот метод возвращает элемент только в том случае, если указанное расположение находится в границах родительского элемента (которая отображается в первом столбце, когда элемент управления находится в режиме сведений). Необходимо задать <xref:System.Windows.Forms.ListView.FullRowSelect%2A> свойства `true` для извлечения объекта с помощью этого метода, заданного расположении в пределах границ подэлемента. Можно также использовать <xref:System.Windows.Forms.ListView.HitTest%2A> метод для извлечения подробных сведений об элементе в определенном месте.  
  
 Для выполнения перетаскивания и вставки, изменения положения элементов в <xref:System.Windows.Forms.ListView>, может потребоваться использовать <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A?displayProperty=nameWithType> метод вместо <xref:System.Windows.Forms.ListView.GetItemAt%2A> метод. <xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A?displayProperty=nameWithType> Метод находит ближайший элемент независимо от того, где находится указатель мыши. <xref:System.Windows.Forms.ListView.GetItemAt%2A> Метод, с другой стороны, возвращает `null` при отсутствии элемента в указанном расположении.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListViewInsertionMark> Класса поддерживается только в Windows XP и Windows Server 2003, когда приложение вызывает <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> метод.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Windows.Forms.PictureBox> и <xref:System.Windows.Forms.ListView> элементов управления. <xref:System.Windows.Forms.PictureBox> Инициализируется путем установки <xref:System.Windows.Forms.PictureBox.BorderStyle%2A?displayProperty=nameWithType> и <xref:System.Windows.Forms.PictureBox.SizeMode%2A?displayProperty=nameWithType> свойства с помощью <xref:System.Windows.Forms.BorderStyle> и <xref:System.Windows.Forms.PictureBoxSizeMode> перечисления, соответственно. <xref:System.Windows.Forms.ListView> Заполняется изображений из каталога образцов. <xref:System.Windows.Forms.ListView.GetItemAt%2A> Метод используется в при обработке <xref:System.Windows.Forms.ListView> элемента управления <xref:System.Windows.Forms.Control.MouseDown> событие, чтобы определить, выбран ли элемент. Если элемент выбран, обработчик событий будет отображать выбранного файла, задав <xref:System.Windows.Forms.PictureBox.Image%2A?displayProperty=nameWithType> свойство. В примере требуется существование файлов JPG, расположенные в каталоге C:\documents and Settings\All Users\Documents\My рисунки\Образцы рисунков. Чтобы выполнить этот пример, вставьте код в форму и вызовите `InitializePictureBox` и `PopulateListView` методы в конструкторе формы или `Load` метод. Убедитесь, что все события связаны с их обработчики событий.  
  
 [!code-cpp[System.Windows.Forms.ListViewAndPictureBox#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewAndPictureBox/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListViewAndPictureBox#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewAndPictureBox/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ListViewAndPictureBox#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewAndPictureBox/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)" />
        <altmember cref="T:System.Windows.Forms.ListViewInsertionMark" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetItemRect">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает прямоугольник, ограничивающий составляющий элемент в данном элементе управления.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetItemRect">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetItemRect (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetItemRect(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.GetItemRect(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemRect (index As Integer) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetItemRect(int index);" />
      <MemberSignature Language="F#" Value="member this.GetItemRect : int -&gt; System.Drawing.Rectangle" Usage="listView.GetItemRect index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Отсчитываемый от нуля индекс элемента в <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> , ограничивающий прямоугольник, который необходимо вернуть.</param>
        <summary>Возвращает прямоугольник, ограничивающий заданный составляющий элемент в данном элементе управления "список".</summary>
        <returns>Объект <see cref="T:System.Drawing.Rectangle" /> , представляющий ограничивающий прямоугольник указанного <see cref="T:System.Windows.Forms.ListViewItem" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ограничивающий прямоугольник, возвращаемый этой версией <xref:System.Windows.Forms.ListView.GetItemRect%2A> метод представляет весь элемент, включая значок, текст элемента и текст подэлемента. Чтобы указать конкретную часть элемента, ограничивающего прямоугольника, используйте другую версию <xref:System.Windows.Forms.ListView.GetItemRect%2A> метод.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="GetItemRect">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetItemRect (int index, System.Windows.Forms.ItemBoundsPortion portion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetItemRect(int32 index, valuetype System.Windows.Forms.ItemBoundsPortion portion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.GetItemRect(System.Int32,System.Windows.Forms.ItemBoundsPortion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemRect (index As Integer, portion As ItemBoundsPortion) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetItemRect(int index, System::Windows::Forms::ItemBoundsPortion portion);" />
      <MemberSignature Language="F#" Value="member this.GetItemRect : int * System.Windows.Forms.ItemBoundsPortion -&gt; System.Drawing.Rectangle" Usage="listView.GetItemRect (index, portion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="portion" Type="System.Windows.Forms.ItemBoundsPortion" />
      </Parameters>
      <Docs>
        <param name="index">Отсчитываемый от нуля индекс элемента в <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> , ограничивающий прямоугольник, который необходимо вернуть.</param>
        <param name="portion">Один из <see cref="T:System.Windows.Forms.ItemBoundsPortion" /> значений, которое представляет часть <see cref="T:System.Windows.Forms.ListViewItem" /> для которого требуется получить ограничивающий прямоугольник.</param>
        <summary>Возвращает заданную часть прямоугольника, ограничивающего указанный составляющий элемент в данном элементе управления "список".</summary>
        <returns>Объект <see cref="T:System.Drawing.Rectangle" /> , представляющий прямоугольник, ограничивающий указанную часть указанного <see cref="T:System.Windows.Forms.ListViewItem" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ограничивающий прямоугольник, возвращаемый этой версией <xref:System.Windows.Forms.ListView.GetItemRect%2A> метод представляет только часть элемента, заданного в `portion` параметра. Чтобы вернуть ограничивающий прямоугольник для всего элемента, используйте другую версию <xref:System.Windows.Forms.ListView.GetItemRect%2A> метод.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="T:System.Windows.Forms.ItemBoundsPortion" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public bool GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Property GridLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GridLines { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.GridLines : bool with get, set" Usage="System.Windows.Forms.ListView.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, будут ли видны в элементе управления линии сетки между строками и столбцами, содержащими составляющие элементы и подэлементы.</summary>
        <value><see langword="true" /> Если линии сетки между элементами и подэлементами; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.GridLines%2A> Свойство действует только <xref:System.Windows.Forms.ListView.View%2A> свойство <xref:System.Windows.Forms.ListView> управления <xref:System.Windows.Forms.View.Details>. <xref:System.Windows.Forms.ListView.GridLines%2A> Свойство позволяет отображать строки для определения строк и столбцов, отображаемых в <xref:System.Windows.Forms.ListView> управления при отображении элементов и подэлементов. Отображаемые линии сетки не предоставляют возможность изменять размеры строк и столбцов как приложение такие как Microsoft Excel. Можно изменять только столбцы, если заголовки столбцов отображаются, перемещение указателя мыши в правой части столбца для изменения размера и затем щелкнув и перетащив столбца до нужного размера. Линии сетки используется для предоставления пользователю элемента управления видимой границы между элементами и подэлементами.  
  
   
  
## Examples  
 В следующем примере кода создается <xref:System.Windows.Forms.ListView> управления с тремя <xref:System.Windows.Forms.ListViewItem> объекты, указанные и три <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> объекты, указанные для каждого элемента. В примере также создается <xref:System.Windows.Forms.ColumnHeader> объектов для отображения в представлении сведений о подэлементы. Два <xref:System.Windows.Forms.ImageList> также создаются в примере кода для изображений <xref:System.Windows.Forms.ListViewItem> объектов. Эти <xref:System.Windows.Forms.ImageList> объекты добавляются в <xref:System.Windows.Forms.ListView.LargeImageList%2A> и <xref:System.Windows.Forms.ListView.SmallImageList%2A> свойства. В примере используется следующие свойства в создании <xref:System.Windows.Forms.ListView> элемента управления.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 В этом примере требуется, что добавлен код для <xref:System.Windows.Forms.Form> и вызвать метод, созданный в примере из конструктора или другого метода на форме. Также в этом примере предполагается, что образы с именем `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, и `MyLargeImage2` , находятся в корневом каталоге диска C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
      </Docs>
    </Member>
    <Member MemberName="Groups">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroupCollection Groups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroupCollection Groups" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Groups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Groups As ListViewGroupCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroupCollection ^ Groups { System::Windows::Forms::ListViewGroupCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Groups : System.Windows.Forms.ListViewGroupCollection" Usage="System.Windows.Forms.ListView.Groups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewGroupCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewGroupCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию <see cref="T:System.Windows.Forms.ListViewGroup" /> объекты, назначенные элементу управления.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> , содержащая все группы в <see cref="T:System.Windows.Forms.ListView" /> элемента управления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView> Функция группирования позволяет создавать группы visual логически связанных <xref:System.Windows.Forms.ListView> элементов. Каждая группа состоит из текстовый заголовок, следуют горизонтальную линию и элементы, назначенные этой группе. Можно выровнять текст заголовка, чтобы левое, правое или центру элемента управления. Все группы, назначенные <xref:System.Windows.Forms.ListView> отображаться каждый раз, когда элемент управления <xref:System.Windows.Forms.ListView.View%2A> свойству присвоено значение, отличное от <xref:System.Windows.Forms.View.List?displayProperty=nameWithType>.  
  
 <xref:System.Windows.Forms.ListView> группы помогают пользователям находить элементы, которые они ищут, разделяя элементы в удобные категории. Можно создать любые требуемые категории. Один типичный подход заключается в том, чтобы сгруппировать элементы, основываясь на способ сортировки списка. Например можно группировать элементы по первую букву имени элемента, когда список отсортирован по алфавиту или по подэлементы, например, тип или дата, когда список отсортирован, щелкнув заголовок столбца в представлении сведений о. Обозреватель Windows использует этот тип выполняемого группирования.  
  
 Чтобы использовать функцию группирования, добавьте один или несколько <xref:System.Windows.Forms.ListViewGroup> объектов <xref:System.Windows.Forms.ListView.Groups%2A> коллекцию <xref:System.Windows.Forms.ListView> элемента управления. Установка выравнивания текста и заголовков заголовка группы <xref:System.Windows.Forms.ListViewGroup.%23ctor%2A> конструктор, или задать для них с помощью <xref:System.Windows.Forms.ListViewGroup.Header%2A?displayProperty=nameWithType> и <xref:System.Windows.Forms.ListViewGroup.HeaderAlignment%2A?displayProperty=nameWithType> свойства.  
  
 Чтобы временно отключить функцию группирования, задайте <xref:System.Windows.Forms.ListView.ShowGroups%2A> свойства `false`.  
  
 Элемент можно назначить группе, указав группу в <xref:System.Windows.Forms.ListViewItem.%23ctor%2A> конструктор, установив <xref:System.Windows.Forms.ListViewItem.Group%2A?displayProperty=nameWithType> свойство, или путем непосредственного добавления элемента <xref:System.Windows.Forms.ListViewGroup.Items%2A?displayProperty=nameWithType> коллекции группы. Все элементы должны быть назначены группам, перед их отображением. Все элементы, которые не назначены группы будет отображаться в группе по умолчанию с меткой заголовка «DefaultGroup{0}«. Группу по умолчанию не содержится в <xref:System.Windows.Forms.ListView.Groups%2A> коллекции и не могут быть изменены. Это особенно удобно использовать в отладке, чтобы убедиться, что все элементы должным образом добавлены в группы.  
  
 Элемент можно только в одну группу одновременно. Можно изменить группу, к которой принадлежит элемент, задав <xref:System.Windows.Forms.ListViewItem.Group%2A?displayProperty=nameWithType> свойство во время выполнения или путем добавления его в <xref:System.Windows.Forms.ListViewGroup.Items%2A?displayProperty=nameWithType> коллекцию другой группы, которая автоматически удаляет его из предыдущей группы.  
  
 Функция метки вставки отключена, при использовании групп. Это обусловлено тем, функция группирования упорядочивает элементы упорядочены по группам, тогда как функция метки вставки используется с изменение расположения и перетащите в <xref:System.Windows.Forms.ListView> элемент управления, который уже не порядком элементов.  
  
 <xref:System.Windows.Forms.ListView> группы доступны только в Windows XP и Windows Server 2003, когда приложение вызывает <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> метод. В предыдущих версиях операционных систем любой код, относящийся к группам не влияет, и группы не будут. В результате любой код, зависящий от функции группирования могут работать неправильно.  
  
 Можно включить код, который определяет, доступна ли функция группирования и обеспечения альтернативной функциональности, когда она недоступна. Например может потребоваться альтернативную сортировку при работе в операционных системах, не поддерживающих сортировку по группам.  
  
 Функция группирования обеспечивается библиотеки, которую предоставляет функцию тем операционной системы. Чтобы проверить наличие этой библиотеки, вызовите <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> перегрузку метода и передать <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> значение.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Windows.Forms.ListView> функция группирования для организации элементов по значению подэлемента в представлении сведений. Этот вид группирования похоже на группы, используемые в обозревателе Windows. В примере группы создаются динамически. Для каждого вложенного элемента столбца одна группа создается для каждого уникального значения подэлемента. Для родительского элемента столбца одна группа создается для каждой уникальной начальной буквы. При щелчке заголовка столбца выполняется сортировка элементов в группах, созданных для этого столбца. Щелкнув один и тот же заголовок столбца еще раз изменяет порядок групп.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
        <altmember cref="T:System.Windows.Forms.ListViewGroupCollection" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="P:System.Windows.Forms.ListView.ShowGroups" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ColumnHeaderStyle HeaderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ColumnHeaderStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderStyle As ColumnHeaderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ColumnHeaderStyle HeaderStyle { System::Windows::Forms::ColumnHeaderStyle get(); void set(System::Windows::Forms::ColumnHeaderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderStyle : System.Windows.Forms.ColumnHeaderStyle with get, set" Usage="System.Windows.Forms.ListView.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ColumnHeaderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает стиль заголовка столбца.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Windows.Forms.ColumnHeaderStyle" />. Значение по умолчанию — <see cref="F:System.Windows.Forms.ColumnHeaderStyle.Clickable" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.HeaderStyle%2A> Свойство позволяет указать тип заголовков столбцов, отображаемый, когда <xref:System.Windows.Forms.ListView.View%2A> свойство <xref:System.Windows.Forms.ListView> управления <xref:System.Windows.Forms.View.Details> и <xref:System.Windows.Forms.ListView> элемент управления имеет <xref:System.Windows.Forms.ColumnHeader> объекты, указанные в <xref:System.Windows.Forms.ListView.ColumnHeaderCollection>. <xref:System.Windows.Forms.ColumnHeader> объекты определения столбцов, отображаемых в <xref:System.Windows.Forms.ListView> элемента управления. Каждый столбец используется для отображения системных данных для каждого элемента в <xref:System.Windows.Forms.ListView>.  
  
 <xref:System.Windows.Forms.ListView.HeaderStyle%2A> Свойство позволяет указать ли заголовки столбцов являются видимыми, или, если они являются видимыми, ли они будут действовать как кнопки. Если <xref:System.Windows.Forms.ListView.HeaderStyle%2A> свойству <xref:System.Windows.Forms.ColumnHeaderStyle.None?displayProperty=nameWithType>, заголовки столбцов не отображаются, несмотря на то что элементы и подэлементы <xref:System.Windows.Forms.ListView> управления по-прежнему размещаются в столбцах. Если <xref:System.Windows.Forms.ListView.HeaderStyle%2A> свойству <xref:System.Windows.Forms.ColumnHeaderStyle.Clickable?displayProperty=nameWithType>, заголовки столбцов действуют как кнопки, которую пользователь может щелкнуть для выполнения действия, например для сортировки элементов в <xref:System.Windows.Forms.ListView> управления, используя элементы в выбранного столбца в качестве ключа. Это поведение можно реализовать в обработчике <xref:System.Windows.Forms.ListView.ColumnClick> событий. Если <xref:System.Windows.Forms.ListView.HeaderStyle%2A> свойству <xref:System.Windows.Forms.ColumnHeaderStyle.Nonclickable?displayProperty=nameWithType>, заголовки столбцов отображаются, но может выбрать пользователь.  
  
   
  
## Examples  
 В следующем примере кода показано <xref:System.Windows.Forms.ListView> , позволяет выбрать несколько элементов. В примере показано задание <xref:System.Windows.Forms.ListView.HideSelection%2A> и <xref:System.Windows.Forms.ListView.HeaderStyle%2A> свойства. Он также демонстрирует <xref:System.Windows.Forms.ColumnHeader.Text%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.ColumnHeader.TextAlign%2A?displayProperty=nameWithType> и <xref:System.Windows.Forms.ColumnHeader.Width%2A?displayProperty=nameWithType> свойства. Чтобы выполнить этот пример, вставьте следующий код в форму, которая содержит <xref:System.Windows.Forms.ListView> объект с именем `ListView1` и <xref:System.Windows.Forms.TextBox> с именем `TextBox1`. Вызовите `InitializeListView` метод из конструктора формы или <xref:System.Windows.Forms.Form.Load> обработчик событий.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Значение не является одним из <see cref="T:System.Windows.Forms.ColumnHeaderStyle" /> значения.</exception>
        <altmember cref="E:System.Windows.Forms.ListView.ColumnClick" />
        <altmember cref="T:System.Windows.Forms.ColumnHeaderStyle" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="HideSelection">
      <MemberSignature Language="C#" Value="public bool HideSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HideSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HideSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HideSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HideSelection : bool with get, set" Usage="System.Windows.Forms.ListView.HideSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, будет ли составляющий элемент, выбранный в этом элементе управления, оставаться выделенным после удаления фокуса с элемента управления.</summary>
        <value><see langword="true" /> Если выбранный элемент не подсвечивается, когда элемент управления теряет фокус; <see langword="false" /> Если выбранный элемент по-прежнему выделяется, когда элемент управления теряет фокус. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если присвоить этому свойству `false`, выбранные элементы в <xref:System.Windows.Forms.ListView> управления остаются выделенными другим цветом, чем текущее выделение цветом, указанным операционной системой при <xref:System.Windows.Forms.ListView> потере фокуса элементом управления. Это свойство можно использовать для хранения элементов, которые выбираются видны пользователю, когда пользователь выбирает другой элемент управления в форме или перемещается в другое окно.  
  
> [!NOTE]
>  Если вы беспокоитесь специальных возможностей приложений, рекомендуется установить <xref:System.Windows.Forms.ListView.HideSelection%2A> свойства `false`.  
  
   
  
## Examples  
 В следующем примере кода показано <xref:System.Windows.Forms.ListView> , позволяет выбрать несколько элементов. В примере показано задание <xref:System.Windows.Forms.ListView.HideSelection%2A> и <xref:System.Windows.Forms.ListView.HeaderStyle%2A> свойства. Он также демонстрирует <xref:System.Windows.Forms.ColumnHeader.Text%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.ColumnHeader.TextAlign%2A?displayProperty=nameWithType>, и <xref:System.Windows.Forms.ColumnHeader.Width%2A?displayProperty=nameWithType> свойства. Чтобы выполнить этот пример, вставьте следующий код в форму, которая содержит <xref:System.Windows.Forms.ListView> объект с именем `ListView1` и <xref:System.Windows.Forms.TextBox> с именем `TextBox1`. Вызовите `InitializeListView` метод из конструктора формы или <xref:System.Windows.Forms.Form.Load> обработчик событий.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTest">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Предоставляет сведения об элементе, заданном координатами X и Y.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewHitTestInfo HitTest (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewHitTestInfo HitTest(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.HitTest(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewHitTestInfo ^ HitTest(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.HitTest : System.Drawing.Point -&gt; System.Windows.Forms.ListViewHitTestInfo" Usage="listView.HitTest point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewHitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="point"><see cref="T:System.Drawing.Point" /> Которой требуется извлечь сведения об элементе. Координаты указываются относительно левого верхнего левого угла элемента управления.</param>
        <summary>Предоставляет сведения об элементе, заданном точкой.</summary>
        <returns>Сведения об элементе, заданном точкой.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод позволяет определить, от того, находится ли точка в элемента или подэлемента и где в элементе она расположена, например, в области текста или значка. Если координаты находятся за пределами элемента, возвращенного <xref:System.Windows.Forms.ListViewHitTestInfo> объект имеет <xref:System.Windows.Forms.ListViewHitTestInfo.Location%2A> свойство «None»; и <xref:System.Windows.Forms.ListViewHitTestInfo.Item%2A> и <xref:System.Windows.Forms.ListViewHitTestInfo.SubItem%2A> свойствам присваивается `null`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Точки содержат координаты, меньше 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewHitTestInfo HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewHitTestInfo HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.HitTest(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (x As Integer, y As Integer) As ListViewHitTestInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewHitTestInfo ^ HitTest(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.HitTest : int * int -&gt; System.Windows.Forms.ListViewHitTestInfo" Usage="listView.HitTest (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewHitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="y" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="x">Координата x, для которой требуется извлечь сведения об элементе. Координата указывается относительно левого верхнего левого угла элемента управления.</param>
        <param name="y">Координата y, для которой требуется извлечь сведения об элементе. Координата указывается относительно левого верхнего левого угла элемента управления.</param>
        <summary>Предоставляет сведения об элементе, заданном координатами X и Y.</summary>
        <returns>Сведения об элементе, заданном координатами X и Y.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод позволяет определить, от того, находится ли точка в элемента или подэлемента, и где в элементе она расположена, например, в области текста или значка. Если координаты находятся за пределами элемента, возвращенного <xref:System.Windows.Forms.ListViewHitTestInfo> объект имеет <xref:System.Windows.Forms.ListViewHitTestInfo.Location%2A> свойство «None»; и <xref:System.Windows.Forms.ListViewHitTestInfo.Item%2A> и <xref:System.Windows.Forms.ListViewHitTestInfo.SubItem%2A> свойствам присваивается `null`.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Windows.Forms.ListView.HitTest%2A> метод для определения расположения события мыши в <xref:System.Windows.Forms.ListView>. Чтобы выполнить этот пример, вставьте его в форму Windows, которая содержит <xref:System.Windows.Forms.ListView> с именем `listView1` заполняется элементами. Связать <xref:System.Windows.Forms.Control.MouseDown> событие для `listView1` с `listView1_MouseDown` метод в этом примере.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Координаты x или y меньше 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="HotTracking">
      <MemberSignature Language="C#" Value="public bool HotTracking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HotTracking" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HotTracking" />
      <MemberSignature Language="VB.NET" Value="Public Property HotTracking As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HotTracking { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HotTracking : bool with get, set" Usage="System.Windows.Forms.ListView.HotTracking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, принимает ли текст элемента или подэлемента форму гиперссылки, когда на него наводится указатель мыши.</summary>
        <value><see langword="true" /> Если текст элемента принимает форму гиперссылки, когда указатель мыши оказывается над ней; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Включение отслеживание приведет к <xref:System.Windows.Forms.ListView.Activation%2A> свойству будет присвоено <xref:System.Windows.Forms.ItemActivation.OneClick> и <xref:System.Windows.Forms.ListView.HoverSelection%2A> свойству будет присвоено `true`. Кроме того редактирование меток времени выполнения не допускается, если включено отслеживание.  
  
   
  
## Examples  
 В следующем примере кода показано <xref:System.Windows.Forms.ListView> "Горячий" при включенном отслеживании. Чтобы выполнить этот пример, вставьте следующий код в форму Windows и вызовите `InitializeHotTrackingListView` метод из конструктора формы или <xref:System.Windows.Forms.Form.Load> обработчик событий.  
  
 [!code-csharp[System.Windows.Forms.ListViewWhidbeyProperties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ListViewWhidbeyProperties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewWhidbeyProperties/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HoverSelection">
      <MemberSignature Language="C#" Value="public bool HoverSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HoverSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.HoverSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HoverSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HoverSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HoverSelection : bool with get, set" Usage="System.Windows.Forms.ListView.HoverSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, будет ли элемент автоматически выбираться, если указатель мыши находится на нем в течение нескольких секунд.</summary>
        <value><see langword="true" /> Если элемент автоматически выбирается при наведении указателя мыши. в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если присвоить этому свойству `true`, пользователь может указывать на элемент в <xref:System.Windows.Forms.ListView> управления для выбора элемента. Можно выбрать несколько элементов (когда <xref:System.Windows.Forms.ListView.MultiSelect%2A> задано значение true), удерживая клавишу CTRL при указании каждого элемента. Эту функцию можно использовать для предоставления более простой метод для пользователя приложения для выбора элементов в <xref:System.Windows.Forms.ListView> элемента управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertionMark">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewInsertionMark InsertionMark { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewInsertionMark InsertionMark" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.InsertionMark" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertionMark As ListViewInsertionMark" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewInsertionMark ^ InsertionMark { System::Windows::Forms::ListViewInsertionMark ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertionMark : System.Windows.Forms.ListViewInsertionMark" Usage="System.Windows.Forms.ListView.InsertionMark" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewInsertionMark</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект, используемый для указания предполагаемого места вставки при перетаскивании элемента в пределах <see cref="T:System.Windows.Forms.ListView" /> элемента управления.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.ListViewInsertionMark" /> объект, представляющий знак вставки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView> Функция метки вставки позволяет визуального указания предполагаемого места вставки в операции перетаскивания и вставки при перетаскивании элемента в новое положение. Эта функция работает только тогда, когда <xref:System.Windows.Forms.ListView.AutoArrange%2A> свойству `true` и когда <xref:System.Windows.Forms.ListView> управления не приводит к сортировке элементов автоматически. Чтобы предотвратить автоматическую сортировку, <xref:System.Windows.Forms.ListView.Sorting%2A> свойству должно быть присвоено <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> и <xref:System.Windows.Forms.ListView.View%2A> свойству должно быть присвоено <xref:System.Windows.Forms.View.LargeIcon?displayProperty=nameWithType>, <xref:System.Windows.Forms.View.SmallIcon?displayProperty=nameWithType>, или <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType>. Кроме того, функция метки вставки может не отображаться с <xref:System.Windows.Forms.ListView> функции группирования, так как функция группирования упорядочивает элементы по членство в группе.  
  
 <xref:System.Windows.Forms.ListViewInsertionMark> Класс обычно используется в обработчике <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> или <xref:System.Windows.Forms.Control.MouseMove?displayProperty=nameWithType> событием, обновляют позиции знака вставки при перетаскивании элемента. Он также используется в обработчике <xref:System.Windows.Forms.Control.DragDrop?displayProperty=nameWithType> или <xref:System.Windows.Forms.Control.MouseUp?displayProperty=nameWithType> событий для вставки элемента, перетаскиваемого в правильном расположении. Дополнительные сведения см. в разделе <xref:System.Windows.Forms.ListViewInsertionMark> и [как: Индикация в элементе управления ListView формы Windows](~/docs/framework/winforms/controls/how-to-display-an-insertion-mark-in-a-windows-forms-listview-control.md).  
  
> [!NOTE]
>  Функция метки вставки доступна только в Windows XP и Windows Server 2003, когда приложение вызывает <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> метод. В предыдущих версиях операционных систем код, связанный с меткой вставки, не действует и метка вставки не отображается. В результате любой код, который зависит от функции знака вставки может работать неправильно. Можно включить код, который определяет, является ли эта функция доступна и обеспечения альтернативной функциональности, когда она недоступна. Например можно обойти весь код, реализующий и перетаскивания элемента при работе в операционных системах, которые не поддерживают метки вставки.  
>   
>  Функция метки вставки обеспечивается библиотеки, которую предоставляет функцию тем операционной системы. Чтобы проверить наличие этой библиотеки, вызовите <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> перегрузку метода и передать <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> значение.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Windows.Forms.ListView> функция метки вставки. Этот пример реализует изменение порядка элементов и перетащите, с помощью стандартных событий перетаскивания. Положение знака вставки обновляется в обработчике <xref:System.Windows.Forms.Control.DragOver?displayProperty=nameWithType> событий. В этом обработчике положение указателя мыши сравнивается по центру ближайший элемент, и результат используется для определения, отображается ли знак вставки слева или справа от элемента.  
  
 [!code-cpp[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CPP/listviewinsertionmarkexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/CS/listviewinsertionmarkexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.InsertionMark#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.InsertionMark/VB/listviewinsertionmarkexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewInsertionMark" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="listView.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Одно из значений перечисления <see cref="T:System.Windows.Forms.Keys" />.</param>
        <summary>Определяет, является ли заданная клавиша обычной клавишей ввода или специальной клавишей, нуждающейся в предварительной обработке.</summary>
        <returns>Значение <see langword="true" />, если указанная клавиша является стандартной клавишей ввода; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemActivate">
      <MemberSignature Language="C#" Value="public event EventHandler ItemActivate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ItemActivate" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemActivate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemActivate As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ItemActivate;" />
      <MemberSignature Language="F#" Value="member this.ItemActivate : EventHandler " Usage="member this.ItemActivate : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при активизации элемента.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.ItemActivate> Событие происходит, когда пользователь активирует один или несколько элементов в <xref:System.Windows.Forms.ListView> элемента управления. Пользователь может активировать элемент с одним щелчком или дважды щелкните файл, в зависимости от значения <xref:System.Windows.Forms.ListView.Activation%2A> свойство, или с помощью клавиатуры. Из обработчика событий для <xref:System.Windows.Forms.ListView.ItemActivate> событий, вы можете ссылаться на <xref:System.Windows.Forms.ListView.SelectedItems%2A> или <xref:System.Windows.Forms.ListView.SelectedIndices%2A> свойства для доступа к коллекции элементов, выбранных в <xref:System.Windows.Forms.ListView> для определения, какие элементы активированы.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В примере обработчик событий сообщает о вхождение <xref:System.Windows.Forms.ListView.ItemActivate> событий. Этот отчет позволяет выяснить, когда происходит событие и может оказаться полезным при отладке. Чтобы создать отчет для нескольких событий или событий, которые происходят часто, рассмотрите возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> с <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> или добавлении сообщения в многострочном <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы запустить пример кода, вставьте его в проект, который содержит экземпляр типа <xref:System.Windows.Forms.ListView> с именем `ListView1`. Убедитесь, что обработчик событий, связанный с <xref:System.Windows.Forms.ListView.ItemActivate> событий.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#473](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#473)]
 [!code-vb[System.Windows.Forms.EventExamples#473](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#473)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.Activation" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
      </Docs>
    </Member>
    <Member MemberName="ItemCheck">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemCheckEventHandler ItemCheck;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemCheckEventHandler ItemCheck" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemCheck" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCheck As ItemCheckEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemCheckEventHandler ^ ItemCheck;" />
      <MemberSignature Language="F#" Value="member this.ItemCheck : System.Windows.Forms.ItemCheckEventHandler " Usage="member this.ItemCheck : System.Windows.Forms.ItemCheckEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemCheckEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении состояния флажка элемента.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.CheckBoxes%2A> Свойству должно быть присвоено значение true, в порядке для флажков для отображения рядом с каждым элементом в <xref:System.Windows.Forms.ListView> элемента управления. <xref:System.Windows.Forms.ListView.ItemCheck> Событие возникает при изменении состояния флажка элемента или <xref:System.Windows.Forms.ListView.CheckBoxes%2A> свойству `true`. Можно создать обработчик событий для <xref:System.Windows.Forms.ListView.ItemCheck> событию для выполнения задач, таких как изменение состояния значка элемента или другой задачи, относящиеся к приложению при каждом возврате элемента <xref:System.Windows.Forms.ListView> элемента управления.  
  
> [!NOTE]
>  Если дескриптор не был создан при <xref:System.Windows.Forms.ListView.ItemCheck> события, события будет отложено. После создания дескриптора окна (при отображении формы) любой отложенный <xref:System.Windows.Forms.ListView.ItemCheck> события вызываются. Дополнительные сведения см. в разделе <xref:System.Windows.Forms.Control.HandleCreated>.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано, извлеченный <xref:System.Windows.Forms.ListView> управления, обрабатывающий <xref:System.Windows.Forms.ListView.ItemCheck> событий. Данный метод использует <xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A?displayProperty=nameWithType> и <xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A?displayProperty=nameWithType> свойства для получения и регистрировались цена выбранных элементов меню. Чтобы выполнить этот пример, вставьте следующий код в форму, содержащую `ListView` с именем `ListView1` и `TextBox` с именем `Textbox1`. Вызовите `InitializeListView` метод из конструктора формы или `Load` метод. Убедитесь, что <xref:System.Windows.Forms.ListView.ItemCheck> событие связано с обработчиком событий в этом примере.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" />
        <altmember cref="T:System.Windows.Forms.ItemCheckEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ItemChecked">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemCheckedEventHandler ItemChecked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemCheckedEventHandler ItemChecked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemChecked" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemChecked As ItemCheckedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemCheckedEventHandler ^ ItemChecked;" />
      <MemberSignature Language="F#" Value="member this.ItemChecked : System.Windows.Forms.ItemCheckedEventHandler " Usage="member this.ItemChecked : System.Windows.Forms.ItemCheckedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemCheckedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении состояния флажка элемента.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие похоже на <xref:System.Windows.Forms.ListView.ItemCheck> событий, но возникает после проверки элемента.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В примере обработчик событий сообщает о вхождение <xref:System.Windows.Forms.ListView.ItemChecked> событий. Этот отчет позволяет выяснить, когда происходит событие и может оказаться полезным при отладке. Чтобы создать отчет для нескольких событий или событий, которые происходят часто, рассмотрите возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> с <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> или добавлении сообщения в многострочном <xref:System.Windows.Forms.TextBox>.  
  
 Еще один пример см. в разделе <xref:System.Windows.Forms.ListView.ItemCheck> событий. Существует код работает одинаково хорошо в том случае, если обработчик событий подключен к <xref:System.Windows.Forms.ListView.ItemChecked> событий.  
  
 Чтобы запустить этот пример кода, вставьте его в проект, содержащий экземпляр типа <xref:System.Windows.Forms.ListView> с именем `ListView1`. Убедитесь, что обработчик событий, связанный с <xref:System.Windows.Forms.ListView.ItemChecked> событий.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#475](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#475)]
 [!code-vb[System.Windows.Forms.EventExamples#475](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#475)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemDragEventHandler ItemDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemDragEventHandler ItemDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDrag As ItemDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemDragEventHandler ^ ItemDrag;" />
      <MemberSignature Language="F#" Value="member this.ItemDrag : System.Windows.Forms.ItemDragEventHandler " Usage="member this.ItemDrag : System.Windows.Forms.ItemDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, когда пользователь начинает перетаскивать элемент с помощью мыши.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.ItemDrag> Событие происходит, когда пользователь начинает перетаскивать элемент. Обычно обработчик событий для <xref:System.Windows.Forms.ListView.ItemDrag> выполняет операцию перетаскивания путем вызова <xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=nameWithType> метод. Это событие можно использовать для выполнения задач, необходимых для перетаскивания элементов в действие и из приложения <xref:System.Windows.Forms.ListView> элемента управления.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В примере обработчик событий сообщает о вхождение <xref:System.Windows.Forms.ListView.ItemDrag> событий. Этот отчет позволяет выяснить, когда происходит событие и может оказаться полезным при отладке. Чтобы создать отчет для нескольких событий или событий, которые происходят часто, рассмотрите возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> с <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> или добавлении сообщения в многострочном <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы запустить пример кода, вставьте его в проект, который содержит экземпляр типа <xref:System.Windows.Forms.ListView> с именем `ListView1`. Убедитесь, что обработчик событий, связанный с <xref:System.Windows.Forms.ListView.ItemDrag> событий.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#476](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#476)]
 [!code-vb[System.Windows.Forms.EventExamples#476](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#476)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" />
        <altmember cref="T:System.Windows.Forms.ItemDragEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ItemMouseHover">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ListViewItemMouseHoverEventHandler ItemMouseHover;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ListViewItemMouseHoverEventHandler ItemMouseHover" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemMouseHover" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemMouseHover As ListViewItemMouseHoverEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ListViewItemMouseHoverEventHandler ^ ItemMouseHover;" />
      <MemberSignature Language="F#" Value="member this.ItemMouseHover : System.Windows.Forms.ListViewItemMouseHoverEventHandler " Usage="member this.ItemMouseHover : System.Windows.Forms.ListViewItemMouseHoverEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItemMouseHoverEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при наведении курсора мыши на элемент.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В примере обработчик событий сообщает о вхождение <xref:System.Windows.Forms.ListView.ItemMouseHover> событий. Этот отчет позволяет выяснить, когда происходит событие и может оказаться полезным при отладке. Чтобы создать отчет для нескольких событий или событий, которые происходят часто, рассмотрите возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> с <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> или добавлении сообщения в многострочном <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы запустить пример кода, вставьте его в проект, который содержит экземпляр типа <xref:System.Windows.Forms.ListView> с именем `ListView1`. Убедитесь, что обработчик событий, связанный с <xref:System.Windows.Forms.ListView.ItemMouseHover> событий.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#477](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#477)]
 [!code-vb[System.Windows.Forms.EventExamples#477](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#477)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.ListViewItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/ListViewItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ListView.ListViewItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::ListViewItemCollection ^ Items { System::Windows::Forms::ListView::ListViewItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Windows.Forms.ListView.ListViewItemCollection" Usage="System.Windows.Forms.ListView.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewItemCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListViewItemCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+ListViewItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию, содержащую все составляющие элементы в данном элементе управления.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> , содержащий все элементы в <see cref="T:System.Windows.Forms.ListView" /> элемента управления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 С помощью <xref:System.Windows.Forms.ListView.ListViewItemCollection> возвращаемый этим свойством, можно добавить элементы, удалить элементы и получить количество элементов. Дополнительные сведения о задачах, которые могут быть выполнены с элементами в коллекции, см. в разделе <xref:System.Windows.Forms.ListView.ListViewItemCollection> класса справочные разделы.  
  
   
  
## Examples  
 В следующем примере кода создается <xref:System.Windows.Forms.ListView> управления с тремя <xref:System.Windows.Forms.ListViewItem> объекты, указанные и три <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> объекты, указанные для каждого элемента. В примере также создается <xref:System.Windows.Forms.ColumnHeader> объектов для отображения в представлении сведений о подэлементы. Два <xref:System.Windows.Forms.ImageList> также создаются в примере кода для изображений <xref:System.Windows.Forms.ListViewItem> объектов. Эти <xref:System.Windows.Forms.ImageList> объекты добавляются в <xref:System.Windows.Forms.ListView.LargeImageList%2A> и <xref:System.Windows.Forms.ListView.SmallImageList%2A> свойства. В примере используется следующие свойства в создании <xref:System.Windows.Forms.ListView> элемента управления.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 В этом примере требуется, что добавлен код для <xref:System.Windows.Forms.Form> и вызвать метод, созданный в примере из конструктора или другого метода на форме. Также в этом примере предполагается, что образы с именем `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, и `MyLargeImage2` , находятся в корневом каталоге диска C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="ItemSelectionChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ListViewItemSelectionChangedEventHandler ItemSelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ListViewItemSelectionChangedEventHandler ItemSelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.ItemSelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemSelectionChanged As ListViewItemSelectionChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ListViewItemSelectionChangedEventHandler ^ ItemSelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.ItemSelectionChanged : System.Windows.Forms.ListViewItemSelectionChangedEventHandler " Usage="member this.ItemSelectionChanged : System.Windows.Forms.ListViewItemSelectionChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItemSelectionChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении состояния выбора элемента.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В виртуальном режиме <xref:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged> событие происходит при изменении состояния выбора нескольких элементов.  
  
 <xref:System.Windows.Forms.ListView.ItemSelectionChanged> Событие возникает, изменяется ли состояние элемента из выбранных для выбран или не выбранным.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В примере обработчик событий сообщает о вхождение <xref:System.Windows.Forms.ListView.ItemSelectionChanged> событий. Этот отчет позволяет выяснить, когда происходит событие и может оказаться полезным при отладке. Чтобы создать отчет для нескольких событий или событий, которые происходят часто, рассмотрите возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> с <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> или добавлении сообщения в многострочном <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы запустить пример кода, вставьте его в проект, который содержит экземпляр типа <xref:System.Windows.Forms.ListView> с именем `ListView1`. Убедитесь, что обработчик событий, связанный с <xref:System.Windows.Forms.ListView.ItemSelectionChanged> событий.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#478](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#478)]
 [!code-vb[System.Windows.Forms.EventExamples#478](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#478)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged" />
      </Docs>
    </Member>
    <Member MemberName="LabelEdit">
      <MemberSignature Language="C#" Value="public bool LabelEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LabelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.LabelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LabelEdit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LabelEdit : bool with get, set" Usage="System.Windows.Forms.ListView.LabelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, определяющее, может ли пользователь изменять метки составляющих элементов в данном элементе управления.</summary>
        <value><see langword="true" /> Если пользователь может изменять эти метка во время выполнения; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:System.Windows.Forms.ListView.LabelEdit%2A> свойству `true`, пользователь может изменять текст элемента, щелкнув текст элемента, чтобы выбрать его, и затем щелкнув текст еще раз, чтобы поместить текст метки в режиме редактирования. Пользователь затем можно изменить или заменить текстовую метку. Можно использовать <xref:System.Windows.Forms.ListView.BeforeLabelEdit> и <xref:System.Windows.Forms.ListView.AfterLabelEdit> события для выполнения задач до и после пользователь редактирует текст элемента. Невозможно изменить текст подэлементов, если это свойство имеет значение `true`. Чтобы изменить текст подэлементов, можно отобразить диалоговое окно для пользователей после двойного щелчка подэлемент в элементе управления.  
  
> [!NOTE]
>  Если <xref:System.Windows.Forms.ListView.Activation%2A> свойству <xref:System.Windows.Forms.ItemActivation.OneClick> или <xref:System.Windows.Forms.ItemActivation.TwoClick>, редактирования метки не будут разрешены независимо от значения <xref:System.Windows.Forms.ListView.LabelEdit%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода создается <xref:System.Windows.Forms.ListView> управления с тремя <xref:System.Windows.Forms.ListViewItem> объекты, указанные и три <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> объекты, указанные для каждого элемента. В примере также создается <xref:System.Windows.Forms.ColumnHeader> объектов для отображения в представлении сведений о подэлементы. Два <xref:System.Windows.Forms.ImageList> также создаются в примере кода для изображений <xref:System.Windows.Forms.ListViewItem> объектов. Эти <xref:System.Windows.Forms.ImageList> объекты добавляются в <xref:System.Windows.Forms.ListView.LargeImageList%2A> и <xref:System.Windows.Forms.ListView.SmallImageList%2A> свойства. В примере используется следующие свойства в создании <xref:System.Windows.Forms.ListView> элемента управления.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 В этом примере требуется, что добавлен код для <xref:System.Windows.Forms.Form> и вызвать метод, созданный в примере из конструктора или другого метода на форме. Также в этом примере предполагается, что образы с именем `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, и `MyLargeImage2` , находятся в корневом каталоге диска C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
        <altmember cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />
      </Docs>
    </Member>
    <Member MemberName="LabelWrap">
      <MemberSignature Language="C#" Value="public bool LabelWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LabelWrap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.LabelWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property LabelWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LabelWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LabelWrap : bool with get, set" Usage="System.Windows.Forms.ListView.LabelWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, будут ли метки составляющих элементов переноситься на другую строку, когда они отображаются в элементе управления в виде значков.</summary>
        <value><see langword="true" /> Если перенос разрешен, когда они отображаются в виде значков; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:System.Windows.Forms.ListView.LabelWrap%2A> свойству `true`, текст элемента переносится на следующую строку текста, при необходимости. Если текст содержит более двух строк текста, он обрезается. Если пользователь выбирает элемент, отображается весь текст. Если <xref:System.Windows.Forms.ListView.LabelWrap%2A> свойству `false`, весь текст элемента отображается в одной строке. Весь текст отображается при <xref:System.Windows.Forms.ListView.LabelWrap%2A> присваивается `false`. Это свойство используется, только если <xref:System.Windows.Forms.ListView.View%2A> свойству <xref:System.Windows.Forms.View.LargeIcon> или <xref:System.Windows.Forms.View.SmallIcon>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.View" />
      </Docs>
    </Member>
    <Member MemberName="LargeImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList LargeImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList LargeImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.LargeImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property LargeImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ LargeImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LargeImageList : System.Windows.Forms.ImageList with get, set" Usage="System.Windows.Forms.ListView.LargeImageList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <see cref="T:System.Windows.Forms.ImageList" /> , используемый при отображении элементов в виде крупных значков в элементе управления.</summary>
        <value><see cref="T:System.Windows.Forms.ImageList" /> , Содержащий значки, которые используются, когда <see cref="P:System.Windows.Forms.ListView.View" /> свойству <see cref="F:System.Windows.Forms.View.LargeIcon" />. Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.LargeImageList%2A> Свойство позволяет указать <xref:System.Windows.Forms.ImageList> , содержащий значки, которые используются при отображении элементов с помощью крупных значков (при <xref:System.Windows.Forms.ListView.View%2A> свойству <xref:System.Windows.Forms.View.LargeIcon>). <xref:System.Windows.Forms.ListView> Элемент управления может принимать любой графический формат, <xref:System.Windows.Forms.ImageList> поддерживает элемент управления при отображении значков. <xref:System.Windows.Forms.ListView> Управления не ограничивается ICO-файла. Один раз <xref:System.Windows.Forms.ImageList> назначается <xref:System.Windows.Forms.ListView.LargeImageList%2A> свойство, можно задать <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> свойства каждого <xref:System.Windows.Forms.ListViewItem> в <xref:System.Windows.Forms.ListView> управления позицию индекса соответствующий образ в <xref:System.Windows.Forms.ImageList>. Размер значков для <xref:System.Windows.Forms.ListView.LargeImageList%2A> задается <xref:System.Windows.Forms.ImageList.ImageSize%2A>.  
  
 Так как только один индекс может быть указан для <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A?displayProperty=nameWithType> свойство, <xref:System.Windows.Forms.ImageList> объекты, указанные в <xref:System.Windows.Forms.ListView.LargeImageList%2A> и <xref:System.Windows.Forms.ListView.SmallImageList%2A> свойства должны иметь такие же позиции индекса для изображения для отображения. Например если <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> свойство <xref:System.Windows.Forms.ListViewItem> имеет значение 0, изображений, используемых для небольших и больших значков должны находиться в той же позиции индекса в <xref:System.Windows.Forms.ImageList> объекты, указанные в <xref:System.Windows.Forms.ListView.LargeImageList%2A> и <xref:System.Windows.Forms.ListView.SmallImageList%2A> свойства.  
  
> [!NOTE]
>  Когда изображения указаны с помощью ключей, по-прежнему требуется размещать мелкие и крупные варианты изображения в одно расположение индекса в соответствующих списках изображений. При переключении между представлениями, индекс изображения в один список используется для поиска изображения в другом списке независимо от указанного значения ключа.  
  
 Чтобы задать <xref:System.Windows.Forms.ImageList> , используемый при отображении элементов мелкими значками (все режимы просмотра отличное от <xref:System.Windows.Forms.View.LargeIcon>), используйте <xref:System.Windows.Forms.ListView.SmallImageList%2A> свойство. Если вы хотите использовать изображения для отображения состояния элемента, используйте <xref:System.Windows.Forms.ListView.StateImageList%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода создается <xref:System.Windows.Forms.ListView> управления с тремя <xref:System.Windows.Forms.ListViewItem> объекты, указанные и три <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> объекты, указанные для каждого элемента. В примере также создается <xref:System.Windows.Forms.ColumnHeader> объектов для отображения в представлении сведений о подэлементы. Два <xref:System.Windows.Forms.ImageList> также создаются в примере кода для изображений <xref:System.Windows.Forms.ListViewItem> объектов. Эти <xref:System.Windows.Forms.ImageList> объекты добавляются в <xref:System.Windows.Forms.ListView.LargeImageList%2A> и <xref:System.Windows.Forms.ListView.SmallImageList%2A> свойства. В примере используется следующие свойства в создании <xref:System.Windows.Forms.ListView> элемента управления.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 В этом примере требуется, что добавлен код для <xref:System.Windows.Forms.Form> и вызвать метод, созданный в примере из конструктора или другого метода на форме. Также в этом примере предполагается, что образы с именем `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, и `MyLargeImage2` , находятся в корневом каталоге диска C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.SmallImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.StateImageList" />
      </Docs>
    </Member>
    <Member MemberName="ListViewItemSorter">
      <MemberSignature Language="C#" Value="public System.Collections.IComparer ListViewItemSorter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IComparer ListViewItemSorter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemSorter" />
      <MemberSignature Language="VB.NET" Value="Public Property ListViewItemSorter As IComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IComparer ^ ListViewItemSorter { System::Collections::IComparer ^ get(); void set(System::Collections::IComparer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ListViewItemSorter : System.Collections.IComparer with get, set" Usage="System.Windows.Forms.ListView.ListViewItemSorter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает блок сравнения сортировки для данного элемента управления.</summary>
        <value><see cref="T:System.Collections.IComparer" /> , Представляющий блок сравнения сортировки для элемента управления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> Свойство позволяет указать объект, который выполняет сортировку элементов в <xref:System.Windows.Forms.ListView> управления <xref:System.Windows.Forms.ListView.Sort%2A> вызывается метод или при добавлении в список. Обратите внимание на то, что элементы не сортируются автоматически при изменении текста метки.  
  
 Заданный объект должен быть экземпляром класса, реализующего <xref:System.Collections.IComparer> интерфейс, который имеет единственный метод, именуемый <xref:System.Collections.Comparer.Compare%2A?displayProperty=nameWithType>.  
  
 Это свойство можно использовать для пользовательской сортировки, например, при нажатии на заголовок столбца в представлении сведений. Чтобы сделать это, создайте класс, реализующий <xref:System.Collections.IComparer> интерфейс, а также предоставляет конструктор, принимающий индекс столбца для сортировки. Затем вы можете реализовать обработчик для <xref:System.Windows.Forms.ListView.ColumnClick> событий, который создает экземпляр этого класса, используя индекс выбранного столбца. При задании <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> свойство к новому экземпляру <xref:System.Windows.Forms.ListView> управления автоматически сортируется с использованием указанного объекта. Последующие вызовы <xref:System.Windows.Forms.ListView.Sort%2A> метод использовать тот же объект.  
  
> [!NOTE]
>  Если задано значение <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> свойства <xref:System.Windows.Forms.ListView.Sort%2A> автоматически вызывается метод.  
  
   
  
## Examples  
 В следующем примере кода создается форма, содержащая <xref:System.Windows.Forms.ListView> элемент управления, который вручную сортировать элементы столбца в <xref:System.Windows.Forms.ListView> нажатии элемента управления. В примере определяется класс с именем `ListViewItemComparer` , реализующий <xref:System.Collections.IComparer?displayProperty=nameWithType> интерфейс, который выполняет <xref:System.Windows.Forms.ListViewItem> сравнения. В примере создается экземпляр `ListViewItemComparer` и использует его для задания <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> свойство <xref:System.Windows.Forms.ListView> элемента управления. <xref:System.Windows.Forms.ListView.Sort%2A> Вызов метода <xref:System.Windows.Forms.ListView.ColumnClick> обработчик событий использует методы, определенные в `ListViewItemComparer` для выполнения сортировки элементов, на основе столбца, которую щелкнули.  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="E:System.Windows.Forms.ListView.ColumnClick" />
      </Docs>
    </Member>
    <Member MemberName="MultiSelect">
      <MemberSignature Language="C#" Value="public bool MultiSelect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MultiSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.MultiSelect" />
      <MemberSignature Language="VB.NET" Value="Public Property MultiSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MultiSelect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MultiSelect : bool with get, set" Usage="System.Windows.Forms.ListView.MultiSelect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, возможен ли выбор нескольких элементов.</summary>
        <value><see langword="true" /> Если несколько элементов в элемент управления может быть выбран одновременно; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:System.Windows.Forms.ListView.MultiSelect%2A> свойству `true`, можно выбрать несколько элементов в <xref:System.Windows.Forms.ListView> элемента управления. Чтобы выбрать несколько элементов, пользователь должен выполнять нажатой клавишу CTRL, щелкая элементы для выбора. Последовательных элементов можно выбрать, щелкнув первый элемент для выбора, а затем, удерживая нажатой клавишу SHIFT, щелкните последний элемент для выбора. Эту функцию можно использовать, чтобы выбрать несколько элементов в <xref:System.Windows.Forms.ListView> управления и выполнить операцию для всех выбранных элементов. Например пользователь может выбрать несколько элементов и щелкните правой кнопкой мыши выбранный элемент, чтобы открыть контекстное меню, отображающее набор задач, которые могут быть выполнены для выбранных элементов.  
  
 Чтобы определить, какие элементы выбраны в <xref:System.Windows.Forms.ListView> управления, используйте <xref:System.Windows.Forms.ListView.SelectedItems%2A> свойство. <xref:System.Windows.Forms.ListView.SelectedItems%2A> Свойство позволяет получить доступ к <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection> , содержащий список выбранных элементов. Если вы хотите позиции индекса <xref:System.Windows.Forms.ListView.ListViewItemCollection> вместо элементов, можно использовать <xref:System.Windows.Forms.ListView.SelectedIndices%2A> свойство для доступа к <xref:System.Windows.Forms.ListView.SelectedIndexCollection>.  
  
 Если вы не хотите разрешить выбор нескольких элементов в <xref:System.Windows.Forms.ListView>, но по-прежнему хотите предложить пользователю способ для нескольких элементов выбора, можно отобразить флажки, задав <xref:System.Windows.Forms.ListView.CheckBoxes%2A> свойства `true`.  
  
   
  
## Examples  
 В следующем примере кода показано <xref:System.Windows.Forms.ListView> , позволяет выбрать несколько элементов. В примере показано задание <xref:System.Windows.Forms.ListView.HideSelection%2A> и <xref:System.Windows.Forms.ListView.HeaderStyle%2A> свойства. Чтобы выполнить этот пример, вставьте следующий код в форму, которая содержит <xref:System.Windows.Forms.ListView> объект с именем `ListView1` и <xref:System.Windows.Forms.TextBox> с именем `TextBox1`. Вызовите `InitializeListView` метод из конструктора формы или `Load` метод.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
        <altmember cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />
        <altmember cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="OnAfterLabelEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterLabelEdit (System.Windows.Forms.LabelEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterLabelEdit(class System.Windows.Forms.LabelEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterLabelEdit (e As LabelEditEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterLabelEdit(System::Windows::Forms::LabelEditEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterLabelEdit : System.Windows.Forms.LabelEditEventArgs -&gt; unit&#xA;override this.OnAfterLabelEdit : System.Windows.Forms.LabelEditEventArgs -&gt; unit" Usage="listView.OnAfterLabelEdit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LabelEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.LabelEditEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.ListView.OnAfterLabelEdit%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Windows.Forms.ListView.AfterLabelEdit> событий ограничивает метку недавно измененный знаками алфавита. В примере используется <xref:System.Text.ASCIIEncoding> классе, чтобы получить код знака ASCII каждого символа в новую метку. Если попадает, представляющих цифры ASCII-кодов, Новая метка не может применяться к элементу. В этом примере требуется, что вы создали <xref:System.Windows.Forms.ListView> управления на форме и добавляются элементы. В примере также требуется подключение <xref:System.Windows.Forms.ListView.AfterLabelEdit> события в обработчик события, определенные в примере кода. Чтобы использовать <xref:System.Text.ASCIIEncoding> класс, файл должен включать <xref:System.Text> пространства имен.  
  
 [!code-cpp[ListView.AfterLabelEdit#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CPP/form1.cpp#1)]
 [!code-csharp[ListView.AfterLabelEdit#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.AfterLabelEdit/CS/form1.cs#1)]
 [!code-vb[ListView.AfterLabelEdit#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.AfterLabelEdit/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.ListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.AfterLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundImageChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackgroundImageChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackgroundImageChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnBackgroundImageChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackgroundImageChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackgroundImageChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBackgroundImageChanged : EventArgs -&gt; unit" Usage="listView.OnBackgroundImageChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.ListView.OnBackgroundImageChanged%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.ListView.OnBackgroundImageChanged(System.EventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.ListView.OnBackgroundImageChanged(System.EventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnBeforeLabelEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeLabelEdit (System.Windows.Forms.LabelEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeLabelEdit(class System.Windows.Forms.LabelEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeLabelEdit (e As LabelEditEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeLabelEdit(System::Windows::Forms::LabelEditEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeLabelEdit : System.Windows.Forms.LabelEditEventArgs -&gt; unit&#xA;override this.OnBeforeLabelEdit : System.Windows.Forms.LabelEditEventArgs -&gt; unit" Usage="listView.OnBeforeLabelEdit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.LabelEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.LabelEditEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.ListView.OnBeforeLabelEdit%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.ListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.BeforeLabelEdit" />
        <altmember cref="T:System.Windows.Forms.LabelEditEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnCacheVirtualItems">
      <MemberSignature Language="C#" Value="protected virtual void OnCacheVirtualItems (System.Windows.Forms.CacheVirtualItemsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCacheVirtualItems(class System.Windows.Forms.CacheVirtualItemsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnCacheVirtualItems(System.Windows.Forms.CacheVirtualItemsEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCacheVirtualItems (e As CacheVirtualItemsEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCacheVirtualItems(System::Windows::Forms::CacheVirtualItemsEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCacheVirtualItems : System.Windows.Forms.CacheVirtualItemsEventArgs -&gt; unit&#xA;override this.OnCacheVirtualItems : System.Windows.Forms.CacheVirtualItemsEventArgs -&gt; unit" Usage="listView.OnCacheVirtualItems e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.CacheVirtualItemsEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.CacheVirtualItemsEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.ListView.CacheVirtualItems" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.ListView.OnCacheVirtualItems%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.ListView.OnCacheVirtualItems(System.Windows.Forms.CacheVirtualItemsEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.ListView.OnCacheVirtualItems(System.Windows.Forms.CacheVirtualItemsEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnClick (System.Windows.Forms.ColumnClickEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnClick(class System.Windows.Forms.ColumnClickEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnClick (e As ColumnClickEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnClick(System::Windows::Forms::ColumnClickEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnClick : System.Windows.Forms.ColumnClickEventArgs -&gt; unit&#xA;override this.OnColumnClick : System.Windows.Forms.ColumnClickEventArgs -&gt; unit" Usage="listView.OnColumnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnClickEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.ColumnClickEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.ListView.ColumnClick" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.ListView.OnColumnClick%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода создается форма, содержащая <xref:System.Windows.Forms.ListView> элемент управления, который вручную сортировать элементы столбца в <xref:System.Windows.Forms.ListView> нажатии элемента управления. В примере определяется класс с именем `ListViewItemComparer` , реализующий <xref:System.Collections.IComparer?displayProperty=nameWithType> интерфейс, который выполняет <xref:System.Windows.Forms.ListViewItem> сравнения. В примере создается экземпляр `ListViewItemComparer` и использует его для задания <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> свойство <xref:System.Windows.Forms.ListView> элемента управления. <xref:System.Windows.Forms.ListView.Sort%2A> Вызов метода <xref:System.Windows.Forms.ListView.ColumnClick> обработчик событий использует методы, определенные в `ListViewItemComparer` для выполнения сортировки элементов, на основе столбца, которую щелкнули.  
  
 [!code-cpp[ListView.ColumnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListView.ColumnClick/CPP/listviewsort1.cpp#1)]
 [!code-csharp[ListView.ColumnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListView.ColumnClick/CS/listviewsort1.cs#1)]
 [!code-vb[ListView.ColumnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListView.ColumnClick/VB/listviewsort1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.ListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.ColumnClick" />
        <altmember cref="T:System.Windows.Forms.ColumnClickEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnColumnReordered">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnReordered (System.Windows.Forms.ColumnReorderedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnReordered(class System.Windows.Forms.ColumnReorderedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnReordered(System.Windows.Forms.ColumnReorderedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnReordered (e As ColumnReorderedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnReordered(System::Windows::Forms::ColumnReorderedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnReordered : System.Windows.Forms.ColumnReorderedEventArgs -&gt; unit&#xA;override this.OnColumnReordered : System.Windows.Forms.ColumnReorderedEventArgs -&gt; unit" Usage="listView.OnColumnReordered e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnReorderedEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.Windows.Forms.ColumnReorderedEventArgs" />, содержащий данные о событии.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.ListView.ColumnReordered" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.ListView.OnColumnReordered%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.ListView.OnColumnReordered(System.Windows.Forms.ColumnReorderedEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.ListView.OnColumnReordered(System.Windows.Forms.ColumnReorderedEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnWidthChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnWidthChanged (System.Windows.Forms.ColumnWidthChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnWidthChanged(class System.Windows.Forms.ColumnWidthChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnWidthChanged(System.Windows.Forms.ColumnWidthChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnWidthChanged (e As ColumnWidthChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnWidthChanged(System::Windows::Forms::ColumnWidthChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnWidthChanged : System.Windows.Forms.ColumnWidthChangedEventArgs -&gt; unit&#xA;override this.OnColumnWidthChanged : System.Windows.Forms.ColumnWidthChangedEventArgs -&gt; unit" Usage="listView.OnColumnWidthChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnWidthChangedEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.ColumnWidthChangedEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.ListView.ColumnWidthChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.ListView.OnColumnWidthChanged%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanged(System.Windows.Forms.ColumnWidthChangedEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanged(System.Windows.Forms.ColumnWidthChangedEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnWidthChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnColumnWidthChanging (System.Windows.Forms.ColumnWidthChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnColumnWidthChanging(class System.Windows.Forms.ColumnWidthChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnColumnWidthChanging(System.Windows.Forms.ColumnWidthChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnColumnWidthChanging (e As ColumnWidthChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnColumnWidthChanging(System::Windows::Forms::ColumnWidthChangingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnColumnWidthChanging : System.Windows.Forms.ColumnWidthChangingEventArgs -&gt; unit&#xA;override this.OnColumnWidthChanging : System.Windows.Forms.ColumnWidthChangingEventArgs -&gt; unit" Usage="listView.OnColumnWidthChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ColumnWidthChangingEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.ColumnWidthChangingEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.ListView.ColumnWidthChanging" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.ColumnWidthChanging> Событие не будет выполняться, если полный окна возможностью — перетаскивание, параметр «Показать содержимое окна при перетаскивании» отключен.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.ListView.OnColumnWidthChanging%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanging(System.Windows.Forms.ColumnWidthChangingEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.ListView.OnColumnWidthChanging(System.Windows.Forms.ColumnWidthChangingEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDrawColumnHeader">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawColumnHeader (System.Windows.Forms.DrawListViewColumnHeaderEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawColumnHeader(class System.Windows.Forms.DrawListViewColumnHeaderEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawColumnHeader (e As DrawListViewColumnHeaderEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawColumnHeader(System::Windows::Forms::DrawListViewColumnHeaderEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawColumnHeader : System.Windows.Forms.DrawListViewColumnHeaderEventArgs -&gt; unit&#xA;override this.OnDrawColumnHeader : System.Windows.Forms.DrawListViewColumnHeaderEventArgs -&gt; unit" Usage="listView.OnDrawColumnHeader e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawListViewColumnHeaderEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.DrawListViewColumnHeaderEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.ListView.DrawColumnHeader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.ListView.OnDrawColumnHeader%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.ListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.ListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDrawItem">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawItem (System.Windows.Forms.DrawListViewItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawItem(class System.Windows.Forms.DrawListViewItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawItem (e As DrawListViewItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawItem(System::Windows::Forms::DrawListViewItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawItem : System.Windows.Forms.DrawListViewItemEventArgs -&gt; unit&#xA;override this.OnDrawItem : System.Windows.Forms.DrawListViewItemEventArgs -&gt; unit" Usage="listView.OnDrawItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawListViewItemEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.DrawListViewItemEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.ListView.DrawItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.ListView.OnDrawItem%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="T:System.Windows.Forms.DrawListViewItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnDrawSubItem">
      <MemberSignature Language="C#" Value="protected virtual void OnDrawSubItem (System.Windows.Forms.DrawListViewSubItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrawSubItem(class System.Windows.Forms.DrawListViewSubItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrawSubItem (e As DrawListViewSubItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrawSubItem(System::Windows::Forms::DrawListViewSubItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrawSubItem : System.Windows.Forms.DrawListViewSubItemEventArgs -&gt; unit&#xA;override this.OnDrawSubItem : System.Windows.Forms.DrawListViewSubItemEventArgs -&gt; unit" Usage="listView.OnDrawSubItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawListViewSubItemEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.DrawListViewSubItemEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.ListView.DrawSubItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.ListView.OnDrawSubItem%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.ListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.ListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="T:System.Windows.Forms.DrawListViewSubItemEventArgs" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
      </Docs>
    </Member>
    <Member MemberName="OnEnabledChanged">
      <MemberSignature Language="C#" Value="protected override void OnEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnEnabledChanged : EventArgs -&gt; unit" Usage="listView.OnEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="e">Объект, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.Control.EnabledChanged" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="listView.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные о событии.</param>
        <summary>Вызывает событие <see langword="FontChanged" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="listView.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.Control.HandleCreated" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected override void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="listView.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.Control.HandleDestroyed" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemActivate">
      <MemberSignature Language="C#" Value="protected virtual void OnItemActivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemActivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemActivate (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemActivate(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemActivate : EventArgs -&gt; unit&#xA;override this.OnItemActivate : EventArgs -&gt; unit" Usage="listView.OnItemActivate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.ListView.ItemActivate" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.ListView.OnItemActivate%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.ListView.OnItemActivate(System.EventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.ItemActivate" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCheck">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCheck (System.Windows.Forms.ItemCheckEventArgs ice);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCheck(class System.Windows.Forms.ItemCheckEventArgs ice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCheck (ice As ItemCheckEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCheck(System::Windows::Forms::ItemCheckEventArgs ^ ice);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCheck : System.Windows.Forms.ItemCheckEventArgs -&gt; unit&#xA;override this.OnItemCheck : System.Windows.Forms.ItemCheckEventArgs -&gt; unit" Usage="listView.OnItemCheck ice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ice" Type="System.Windows.Forms.ItemCheckEventArgs" />
      </Parameters>
      <Docs>
        <param name="ice">Объект класса <see cref="T:System.Windows.Forms.ItemCheckEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.ListView.ItemCheck" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.ListView.OnItemCheck%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.ListView.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.ItemCheck" />
        <altmember cref="T:System.Windows.Forms.ItemCheckEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemChecked">
      <MemberSignature Language="C#" Value="protected virtual void OnItemChecked (System.Windows.Forms.ItemCheckedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemChecked(class System.Windows.Forms.ItemCheckedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemChecked(System.Windows.Forms.ItemCheckedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemChecked (e As ItemCheckedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemChecked(System::Windows::Forms::ItemCheckedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemChecked : System.Windows.Forms.ItemCheckedEventArgs -&gt; unit&#xA;override this.OnItemChecked : System.Windows.Forms.ItemCheckedEventArgs -&gt; unit" Usage="listView.OnItemChecked e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ItemCheckedEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.Windows.Forms.ItemCheckedEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.ListView.ItemChecked" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.ListView.OnItemChecked%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.ListView.OnItemChecked(System.Windows.Forms.ItemCheckedEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.ListView.OnItemChecked(System.Windows.Forms.ItemCheckedEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnItemDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDrag (System.Windows.Forms.ItemDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDrag(class System.Windows.Forms.ItemDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDrag (e As ItemDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDrag(System::Windows::Forms::ItemDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDrag : System.Windows.Forms.ItemDragEventArgs -&gt; unit&#xA;override this.OnItemDrag : System.Windows.Forms.ItemDragEventArgs -&gt; unit" Usage="listView.OnItemDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ItemDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.Windows.Forms.ItemDragEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.ListView.ItemDrag" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.ListView.OnItemDrag%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.ItemDrag" />
        <altmember cref="T:System.Windows.Forms.ItemDragEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemMouseHover">
      <MemberSignature Language="C#" Value="protected virtual void OnItemMouseHover (System.Windows.Forms.ListViewItemMouseHoverEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemMouseHover(class System.Windows.Forms.ListViewItemMouseHoverEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemMouseHover(System.Windows.Forms.ListViewItemMouseHoverEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemMouseHover (e As ListViewItemMouseHoverEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemMouseHover(System::Windows::Forms::ListViewItemMouseHoverEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemMouseHover : System.Windows.Forms.ListViewItemMouseHoverEventArgs -&gt; unit&#xA;override this.OnItemMouseHover : System.Windows.Forms.ListViewItemMouseHoverEventArgs -&gt; unit" Usage="listView.OnItemMouseHover e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ListViewItemMouseHoverEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.ListViewItemMouseHoverEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.ListView.ItemMouseHover" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.ListView.OnItemMouseHover%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.ListView.OnItemMouseHover(System.Windows.Forms.ListViewItemMouseHoverEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.ListView.OnItemMouseHover(System.Windows.Forms.ListViewItemMouseHoverEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnItemSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemSelectionChanged (System.Windows.Forms.ListViewItemSelectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemSelectionChanged(class System.Windows.Forms.ListViewItemSelectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnItemSelectionChanged(System.Windows.Forms.ListViewItemSelectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemSelectionChanged (e As ListViewItemSelectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemSelectionChanged(System::Windows::Forms::ListViewItemSelectionChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemSelectionChanged : System.Windows.Forms.ListViewItemSelectionChangedEventArgs -&gt; unit&#xA;override this.OnItemSelectionChanged : System.Windows.Forms.ListViewItemSelectionChangedEventArgs -&gt; unit" Usage="listView.OnItemSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ListViewItemSelectionChangedEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.ListViewItemSelectionChangedEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.ListView.ItemSelectionChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.ListView.OnItemSelectionChanged%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.ListView.OnItemSelectionChanged(System.Windows.Forms.ListViewItemSelectionChangedEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.ListView.OnItemSelectionChanged(System.Windows.Forms.ListViewItemSelectionChangedEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected override void OnMouseHover (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseHover(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnMouseHover(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseHover (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseHover(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseHover : EventArgs -&gt; unit" Usage="listView.OnMouseHover e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.Control.MouseHover" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Windows.Forms.ListView.OnMouseHover%2A> метод вызывается, когда мышь наведена <xref:System.Windows.Forms.ListViewItem>, вызывает метод <xref:System.Windows.Forms.ListView.ItemMouseHover> событий.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.ListView.OnMouseHover%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.ListView.OnMouseHover(System.EventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.ListView.OnMouseHover(System.EventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : EventArgs -&gt; unit" Usage="listView.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.Control.MouseLeave" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnParentChanged">
      <MemberSignature Language="C#" Value="protected override void OnParentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnParentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnParentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnParentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnParentChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnParentChanged : EventArgs -&gt; unit" Usage="listView.OnParentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.Control.ParentChanged" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected override void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnResize(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnResize : EventArgs -&gt; unit" Usage="listView.OnResize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.Control.Resize" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRetrieveVirtualItem">
      <MemberSignature Language="C#" Value="protected virtual void OnRetrieveVirtualItem (System.Windows.Forms.RetrieveVirtualItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRetrieveVirtualItem(class System.Windows.Forms.RetrieveVirtualItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnRetrieveVirtualItem(System.Windows.Forms.RetrieveVirtualItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRetrieveVirtualItem (e As RetrieveVirtualItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRetrieveVirtualItem(System::Windows::Forms::RetrieveVirtualItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRetrieveVirtualItem : System.Windows.Forms.RetrieveVirtualItemEventArgs -&gt; unit&#xA;override this.OnRetrieveVirtualItem : System.Windows.Forms.RetrieveVirtualItemEventArgs -&gt; unit" Usage="listView.OnRetrieveVirtualItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.RetrieveVirtualItemEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.RetrieveVirtualItemEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.ListView.OnRetrieveVirtualItem%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.ListView.OnRetrieveVirtualItem(System.Windows.Forms.RetrieveVirtualItemEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.ListView.OnRetrieveVirtualItem(System.Windows.Forms.RetrieveVirtualItemEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRightToLeftLayoutChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRightToLeftLayoutChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRightToLeftLayoutChanged : EventArgs -&gt; unit&#xA;override this.OnRightToLeftLayoutChanged : EventArgs -&gt; unit" Usage="listView.OnRightToLeftLayoutChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.ListView.RightToLeftLayoutChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged(System.EventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged(System.EventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSearchForVirtualItem">
      <MemberSignature Language="C#" Value="protected virtual void OnSearchForVirtualItem (System.Windows.Forms.SearchForVirtualItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSearchForVirtualItem(class System.Windows.Forms.SearchForVirtualItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnSearchForVirtualItem(System.Windows.Forms.SearchForVirtualItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSearchForVirtualItem (e As SearchForVirtualItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSearchForVirtualItem(System::Windows::Forms::SearchForVirtualItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSearchForVirtualItem : System.Windows.Forms.SearchForVirtualItemEventArgs -&gt; unit&#xA;override this.OnSearchForVirtualItem : System.Windows.Forms.SearchForVirtualItemEventArgs -&gt; unit" Usage="listView.OnSearchForVirtualItem e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.SearchForVirtualItemEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.SearchForVirtualItemEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.ListView.SearchForVirtualItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.ListView.OnSearchForVirtualItem%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.ListView.OnSearchForVirtualItem(System.Windows.Forms.SearchForVirtualItemEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.ListView.OnSearchForVirtualItem(System.Windows.Forms.SearchForVirtualItemEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedIndexChanged : EventArgs -&gt; unit&#xA;override this.OnSelectedIndexChanged : EventArgs -&gt; unit" Usage="listView.OnSelectedIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.ListView.SelectedIndexChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.ListView.OnSelectedIndexChanged%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Windows.Forms.ListView.SelectedIndexChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnSystemColorsChanged">
      <MemberSignature Language="C#" Value="protected override void OnSystemColorsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSystemColorsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnSystemColorsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSystemColorsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSystemColorsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSystemColorsChanged : EventArgs -&gt; unit" Usage="listView.OnSystemColorsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.Control.SystemColorsChanged" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVirtualItemsSelectionRangeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnVirtualItemsSelectionRangeChanged (System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnVirtualItemsSelectionRangeChanged(class System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged(System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnVirtualItemsSelectionRangeChanged (e As ListViewVirtualItemsSelectionRangeChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnVirtualItemsSelectionRangeChanged(System::Windows::Forms::ListViewVirtualItemsSelectionRangeChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnVirtualItemsSelectionRangeChanged : System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs -&gt; unit&#xA;override this.OnVirtualItemsSelectionRangeChanged : System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs -&gt; unit" Usage="listView.OnVirtualItemsSelectionRangeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged(System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged(System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OwnerDraw">
      <MemberSignature Language="C#" Value="public bool OwnerDraw { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OwnerDraw" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.OwnerDraw" />
      <MemberSignature Language="VB.NET" Value="Public Property OwnerDraw As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OwnerDraw { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OwnerDraw : bool with get, set" Usage="System.Windows.Forms.ListView.OwnerDraw" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, является ли <see cref="T:System.Windows.Forms.ListView" /> прорисовывается операционной системой или предоставленным кодом.</summary>
        <value><see langword="true" /> Если <see cref="T:System.Windows.Forms.ListView" /> прорисовывается кодом разработчика; <see langword="false" /> Если <see cref="T:System.Windows.Forms.ListView" /> прорисовывается операционной системой. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Forms.ListView> обычно прорисовывается операционной системой. Чтобы настроить внешний вид <xref:System.Windows.Forms.ListView> пункты, подпункты и заголовки столбцов набора <xref:System.Windows.Forms.ListView.OwnerDraw%2A> свойства `true` и создать обработчик для одного или нескольких из следующих событий: <xref:System.Windows.Forms.ListView.DrawItem>, <xref:System.Windows.Forms.ListView.DrawSubItem>, <xref:System.Windows.Forms.ListView.DrawColumnHeader>. Это называется рисование владельцем. При <xref:System.Windows.Forms.ListView.View%2A> свойству <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>, все три события происходят; в противном случае — только <xref:System.Windows.Forms.ListView.DrawItem> событием.  
  
> [!NOTE]
>  Сведения подэлементов, обычно появляется в представлении плиток, а также представления, но в представлении плиток, его необходимо нарисовать в обработчике <xref:System.Windows.Forms.ListView.DrawItem> событий. <xref:System.Windows.Forms.ListView.DrawSubItem> Событие не возникает всем вложенным элементам, для которых нет <xref:System.Windows.Forms.ColumnHeader> был добавлен объект <xref:System.Windows.Forms.ListView.Columns%2A> коллекции. Обратите внимание, что первый подэлемент каждого <xref:System.Windows.Forms.ListViewItem> объект представляет собой родительский элемент и отображается в первом столбце.  
  
 В представлении сведений, можно обрабатывать <xref:System.Windows.Forms.ListView.DrawItem> событий рисования элементы, общие для всех подэлементов, таких как в фоновом режиме, и обработать <xref:System.Windows.Forms.ListView.DrawSubItem> событий для рисования элементов для отдельных подэлементов, таких как текстовые значения. Также можно рисовать все элементы <xref:System.Windows.Forms.ListView> управления с помощью только одного из двух событий, несмотря на то, что это может быть менее удобно. Чтобы нарисовать заголовки столбцов в представлении сведений, необходимо обрабатывать <xref:System.Windows.Forms.ListView.DrawColumnHeader> событий.  
  
> [!NOTE]
>  Чтобы избежать проблем с графики мерцание при рисовании, владельцем прерывания <xref:System.Windows.Forms.ListView> и задание <xref:System.Windows.Forms.ListView.DoubleBuffered%2A> свойства `true`.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано, как реализовать пользовательское рисование для <xref:System.Windows.Forms.ListView> элемента управления. <xref:System.Windows.Forms.ListView> Элемент управления в примере имеет градиентным фоном. Подэлементов с отрицательными значениями у красным цветом текста и черном фоне.  
  
 Обработчик для <xref:System.Windows.Forms.ListView.DrawItem> события рисует фон для всех элементов. Обработчик для <xref:System.Windows.Forms.ListView.DrawSubItem> события рисует текстовых значений и текста и фона для подэлементов, содержащих отрицательные значения. Обработчик для <xref:System.Windows.Forms.ListView.DrawColumnHeader> события рисует Заголовок каждого столбца.  
  
 Объект <xref:System.Windows.Forms.ContextMenu> компонент позволяет переключаться между в представлении сведений и в представлении списка. В представлении списка, только <xref:System.Windows.Forms.ListView.DrawItem> события. В этом случае текста и фона и отображаются в <xref:System.Windows.Forms.ListView.DrawItem> обработчик событий.  
  
 [!code-csharp[ListViewOwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewOwnerDraw/CS/listviewownerdraw.cs#1)]
 [!code-vb[ListViewOwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewOwnerDraw/VB/listviewownerdraw.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.DrawItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawSubItem" />
        <altmember cref="E:System.Windows.Forms.ListView.DrawColumnHeader" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
        <altmember cref="P:System.Windows.Forms.ListView.View" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.ListView.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает расстояние между <see cref="T:System.Windows.Forms.ListView" /> элемента управления и его содержимым.</summary>
        <value><see cref="T:System.Windows.Forms.Padding" /> , Указывающий расстояние между <see cref="T:System.Windows.Forms.ListView" /> элемента управления и его содержимым.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данное свойство не применимо к этому классу.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении значения свойства <see cref="P:System.Windows.Forms.ListView.Padding" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberSignature Language="F#" Value="member this.Paint : System.Windows.Forms.PaintEventHandler " Usage="member this.Paint : System.Windows.Forms.PaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при окрашивании элемента управления <see cref="T:System.Windows.Forms.ListView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView> Прорисовывается операционной системой или владельцем рисуется, поэтому <xref:System.Windows.Forms.ListView.Paint> событие никогда не вызывается. Дополнительные сведения о рисования владельцем, см. в разделе <xref:System.Windows.Forms.ListView.OwnerDraw%2A> свойство.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RealizeProperties">
      <MemberSignature Language="C#" Value="protected void RealizeProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RealizeProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.RealizeProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RealizeProperties ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RealizeProperties();" />
      <MemberSignature Language="F#" Value="member this.RealizeProperties : unit -&gt; unit" Usage="listView.RealizeProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Инициализирует свойства объекта <see cref="T:System.Windows.Forms.ListView" /> управления внешний вид элемента управления.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedrawItems">
      <MemberSignature Language="C#" Value="public void RedrawItems (int startIndex, int endIndex, bool invalidateOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RedrawItems(int32 startIndex, int32 endIndex, bool invalidateOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.RedrawItems(System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RedrawItems (startIndex As Integer, endIndex As Integer, invalidateOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RedrawItems(int startIndex, int endIndex, bool invalidateOnly);" />
      <MemberSignature Language="F#" Value="member this.RedrawItems : int * int * bool -&gt; unit" Usage="listView.RedrawItems (startIndex, endIndex, invalidateOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="endIndex" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="invalidateOnly" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="startIndex">Индекс первого элемента в перерисовываемом диапазоне.</param>
        <param name="endIndex">Индекс последнего элемента в перерисовываемом диапазоне.</param>
        <param name="invalidateOnly"><see langword="true" /> Чтобы сделать недействительным диапазон элементов; <see langword="false" /> чтобы сделать недействительными и Перекрасить элементы.</param>
        <summary>Заставляет диапазон <see cref="T:System.Windows.Forms.ListViewItem" /> объектов перерисовку.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.RedrawItems%2A> Метод можно использовать ли <xref:System.Windows.Forms.ListView> находится в виртуальном режиме или обычный режим.  
  
 Если <xref:System.Windows.Forms.ListView.BeginUpdate%2A> метод был вызван до вызова <xref:System.Windows.Forms.ListView.RedrawItems%2A>, перерисовки не произойдет.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startIndex" /> или <paramref name="endIndex" /> меньше 0, больше или равно числу элементов в <see cref="T:System.Windows.Forms.ListView" /> или, если в виртуальном режиме, больше, чем значение <see cref="P:System.Windows.Forms.ListView.VirtualListSize" />.  
  
-или- 
Заданный <paramref name="startIndex" /> больше, чем <paramref name="endIndex." /></exception>
      </Docs>
    </Member>
    <Member MemberName="RetrieveVirtualItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.RetrieveVirtualItemEventHandler RetrieveVirtualItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.RetrieveVirtualItemEventHandler RetrieveVirtualItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.RetrieveVirtualItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RetrieveVirtualItem As RetrieveVirtualItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::RetrieveVirtualItemEventHandler ^ RetrieveVirtualItem;" />
      <MemberSignature Language="F#" Value="member this.RetrieveVirtualItem : System.Windows.Forms.RetrieveVirtualItemEventHandler " Usage="member this.RetrieveVirtualItem : System.Windows.Forms.RetrieveVirtualItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RetrieveVirtualItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при <see cref="T:System.Windows.Forms.ListView" /> находится в виртуальном режиме и требует <see cref="T:System.Windows.Forms.ListViewItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:System.Windows.Forms.ListView> объект находится в виртуальном режиме, он создает <xref:System.Windows.Forms.ListViewItem> объектов динамически вместо использования <xref:System.Windows.Forms.ListView.Items%2A> коллекции. Это событие возникает в том случае, когда необходимо создать объект <xref:System.Windows.Forms.ListViewItem> объекта. Обработчик этого события необходимо создать соответствующий <xref:System.Windows.Forms.ListViewItem> или получить его из кэша и передать его обратно с помощью параметра <xref:System.Windows.Forms.RetrieveVirtualItemEventArgs.Item%2A> свойство.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется обработчик для этого события. В этом примере каждый должен listView1 <xref:System.Windows.Forms.ListViewItem> для отображения квадрат его индексу. Данный пример кода является частью большего примера для <xref:System.Windows.Forms.ListView.VirtualMode%2A> свойство.  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.RetrieveVirtualItemEventArgs.Item" /> Свойство не задано для элемента при <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> событие обрабатывается.</exception>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayout">
      <MemberSignature Language="C#" Value="public virtual bool RightToLeftLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeftLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.RightToLeftLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeftLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RightToLeftLayout { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeftLayout : bool with get, set" Usage="System.Windows.Forms.ListView.RightToLeftLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, должны ли составляющие элемента управления располагаться справа налево.</summary>
        <value><see langword="true" /> Чтобы указать <see cref="T:System.Windows.Forms.ListView" /> элемента управления выстраивается справа налево; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView> Свойство предназначен для использования с международными приложениями, где язык читается справа налево. Если задать <xref:System.Windows.Forms.ListView> и <xref:System.Windows.Forms.RightToLeft> значение true, содержимое и текст элемента управления располагаться справа налево.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.RightToLeftLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RightToLeftLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RightToLeftLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.RightToLeftLayoutChanged : EventHandler " Usage="member this.RightToLeftLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении значения свойства <see cref="P:System.Windows.Forms.ListView.RightToLeftLayout" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В примере обработчик событий сообщает о вхождение <xref:System.Windows.Forms.ListView.RightToLeftLayoutChanged> событий. Этот отчет позволяет выяснить, когда происходит событие и может оказаться полезным при отладке. Чтобы создать отчет для нескольких событий или событий, которые происходят часто, рассмотрите возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> с <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> или добавлении сообщения в многострочном <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы запустить пример кода, вставьте его в проект, который содержит экземпляр типа <xref:System.Windows.Forms.ListView> с именем `ListView1`. Убедитесь, что обработчик событий, связанный с <xref:System.Windows.Forms.ListView.RightToLeftLayoutChanged> событий.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#462](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#462)]
 [!code-vb[System.Windows.Forms.EventExamples#462](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#462)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scrollable">
      <MemberSignature Language="C#" Value="public bool Scrollable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Scrollable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Scrollable" />
      <MemberSignature Language="VB.NET" Value="Public Property Scrollable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Scrollable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Scrollable : bool with get, set" Usage="System.Windows.Forms.ListView.Scrollable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, добавляется ли к этому элементу управления полоса прокрутки, если для отображения всех составляющих элементов не хватает места.</summary>
        <value><see langword="true" /> Если добавляется полоса прокрутки к элементу управления, когда это необходимо разрешить пользователю просмотр всех элементов; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если присвоить этому свойству `true`, <xref:System.Windows.Forms.ListView> отображает вертикальную полосу прокрутки для использования, если количество элементов превышает размер клиентской области элемента управления. Это свойство можно использовать, чтобы убедиться, что пользователь может получить доступ к все элементы, доступные в <xref:System.Windows.Forms.ListView> элемента управления.  
  
> [!NOTE]
>  В версиях [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] до версии 2.0, заголовки столбцов были не закрашивается правильно при задании этого свойства `false` и изменение размеров элемента управления, чтобы ее увеличить. Чтобы обойти эту проблему, этому свойству присвоено `true` в <xref:System.Windows.Forms.Form.ResizeBegin> обработчик событий и верните значение `false` в <xref:System.Windows.Forms.Form.ResizeEnd> обработчик событий.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchForVirtualItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.SearchForVirtualItemEventHandler SearchForVirtualItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.SearchForVirtualItemEventHandler SearchForVirtualItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.SearchForVirtualItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SearchForVirtualItem As SearchForVirtualItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::SearchForVirtualItemEventHandler ^ SearchForVirtualItem;" />
      <MemberSignature Language="F#" Value="member this.SearchForVirtualItem : System.Windows.Forms.SearchForVirtualItemEventHandler " Usage="member this.SearchForVirtualItem : System.Windows.Forms.SearchForVirtualItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SearchForVirtualItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при <see cref="T:System.Windows.Forms.ListView" /> находится в виртуальном режиме и выполняется поиск.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие возникает, когда <xref:System.Windows.Forms.ListView> находится в виртуальном режиме и <xref:System.Windows.Forms.ListView.FindNearestItem%2A> или <xref:System.Windows.Forms.ListView.FindItemWithText%2A> вызывается метод. При обработке этого события, следует вычислить какому элементу из списка элементы, предоставляемые <xref:System.Windows.Forms.ListView.Items%2A> свойства соответствует условиям поиска и набор <xref:System.Windows.Forms.SearchForVirtualItemEventArgs.Index%2A?displayProperty=nameWithType> свойства индекс <xref:System.Windows.Forms.ListViewItem>. Если элемент не указан, <xref:System.Windows.Forms.ListView.FindNearestItem%2A> и <xref:System.Windows.Forms.ListView.FindItemWithText%2A> вернет `null`.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В примере поиск возвращает наиболее подходящий вариант для заданного целого числа в список первых десяти тысяч квадратов. Данный пример кода является частью большего примера для <xref:System.Windows.Forms.ListView.VirtualMode%2A> свойство.  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#4)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.SelectedIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedIndexChanged : EventHandler " Usage="member this.SelectedIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при <see cref="P:System.Windows.Forms.ListView.SelectedIndices" /> изменения коллекции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.SelectedIndices%2A> При каждом изменении коллекции <xref:System.Windows.Forms.ListViewItem.Selected%2A> свойство <xref:System.Windows.Forms.ListViewItem> изменения. Изменение свойства может выполняться программно или когда пользователь выбирает элемент, или отменяет выделение элемента. Когда пользователь выбирает элемент без нажатия клавиши CTRL, чтобы выполнять выбор нескольких элементов, элемент управления сначала удалит предыдущего выделения. В этом случае это событие происходит один раз для каждого элемента, который ранее был выбран и один раз для вновь выбранного элемента.  
  
 Чтобы определить, какие элементы выбраны в <xref:System.Windows.Forms.ListView> управления, используйте <xref:System.Windows.Forms.ListView.SelectedItems%2A> свойство для доступа к <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection>. Можно создать обработчик событий для этого события для выполнения задач при каждом изменении выбранных элементов в <xref:System.Windows.Forms.ListView> элемента управления.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Windows.Forms.ListView.SelectedItems%2A> свойство, <xref:System.Windows.Forms.ListView.SelectedIndexChanged> событий, <xref:System.Windows.Forms.ListView.HeaderStyle%2A> члены и <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection> класса. Чтобы выполнить этот пример, вставьте следующий код в форму, которая содержит <xref:System.Windows.Forms.ListView> объект с именем `ListView1` и <xref:System.Windows.Forms.TextBox> с именем `TextBox1`. Вызовите `InitializeListView` метод из конструктора формы или `Load` метод. В этом примере необходимо, чтобы обработчик событий был правильно связан с <xref:System.Windows.Forms.ListView.SelectedIndexChanged> событий  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.ItemSelectionChanged" />
        <altmember cref="M:System.Windows.Forms.ListView.OnSelectedIndexChanged(System.EventArgs)" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndices">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.SelectedIndexCollection SelectedIndices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/SelectedIndexCollection SelectedIndices" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SelectedIndices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedIndices As ListView.SelectedIndexCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::SelectedIndexCollection ^ SelectedIndices { System::Windows::Forms::ListView::SelectedIndexCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedIndices : System.Windows.Forms.ListView.SelectedIndexCollection" Usage="System.Windows.Forms.ListView.SelectedIndices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+SelectedIndexCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает индексы выбранных составляющих элементов в данном элементе управления.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" /> , содержащая индексы выбранных элементов. Если в данный момент ничего не выбрано, возвращается пустая коллекция <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.SelectedIndices%2A> Свойство не будет содержать все индексы, если это свойство вызывается перед <xref:System.Windows.Forms.ListView> создается дескриптор, что обычно происходит при <xref:System.Windows.Forms.ListView> изначально загружается для отображения в форме. Можно проверить, см. в разделе, если дескриптор создается с <xref:System.Windows.Forms.Control.IsHandleCreated%2A> свойство. Когда <xref:System.Windows.Forms.ListView.MultiSelect%2A> свойству `true`, это свойство возвращает коллекцию, содержащую индексы всех элементов, выбранных в <xref:System.Windows.Forms.ListView>. Для с единственным выбором <xref:System.Windows.Forms.ListView>, это свойство возвращает коллекцию, содержащую один элемент, содержащее индекс единственным элементом, выбранным в <xref:System.Windows.Forms.ListView>. Дополнительные сведения о задачах, которые могут быть выполнены с элементами в коллекции, см. в разделе <xref:System.Windows.Forms.ListView.SelectedIndexCollection>.  
  
 Если вы хотите получить коллекцию элементов, выбранных в <xref:System.Windows.Forms.ListView> управления, а не позиции индекса элементов, которые выбраны, используйте <xref:System.Windows.Forms.ListView.SelectedItems%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Windows.Forms.ListView.SelectedIndices%2A>, <xref:System.Windows.Forms.ListView.SelectedIndexChanged>, и <xref:System.Windows.Forms.ListView.HeaderStyle%2A> членов и <xref:System.Windows.Forms.ListView.SelectedIndexCollection> класса. Чтобы выполнить этот пример, вставьте следующий код в форму, которая содержит <xref:System.Windows.Forms.ListView> объект с именем `ListView1` и <xref:System.Windows.Forms.TextBox> с именем `TextBox1`. Вызовите `InitializeListView` метод из конструктора формы или `Load` метод. В этом примере требуется обработчик событий был правильно связан с <xref:System.Windows.Forms.ListView.SelectedIndexChanged> событий.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView1#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#3)]
[!code-csharp[System.Windows.Forms.ListView1#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#3)]
[!code-vb[System.Windows.Forms.ListView1#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedItems" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItems">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListView.SelectedListViewItemCollection SelectedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListView/SelectedListViewItemCollection SelectedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SelectedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedItems As ListView.SelectedListViewItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListView::SelectedListViewItemCollection ^ SelectedItems { System::Windows::Forms::ListView::SelectedListViewItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItems : System.Windows.Forms.ListView.SelectedListViewItemCollection" Usage="System.Windows.Forms.ListView.SelectedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListView+SelectedListViewItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает составляющие элементы, выбранные в данном элементе управления.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" /> , содержащий элементы, которые выбраны в элементе управления. Если в данный момент ничего не выбрано, возвращается пустая коллекция <see cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.SelectedItems%2A> Свойство не будет содержать все элементы, если это свойство вызывается перед <xref:System.Windows.Forms.ListView> создается дескриптор, что обычно происходит при <xref:System.Windows.Forms.ListView> изначально загружается для отображения в форме. Можно проверить, см. в разделе, если дескриптор создается с <xref:System.Windows.Forms.Control.IsHandleCreated%2A> свойство. Когда <xref:System.Windows.Forms.ListView.MultiSelect%2A> свойству `true`, это свойство возвращает коллекцию, содержащую элементы, которые выбраны на <xref:System.Windows.Forms.ListView>. Для с единственным выбором <xref:System.Windows.Forms.ListView>, это свойство возвращает коллекцию, содержащую единственным элементом, выбранным в <xref:System.Windows.Forms.ListView>. Дополнительные сведения о задачах, которые могут быть выполнены с элементами в коллекции, см. в разделе <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection>.  
  
 Если вы хотите получить коллекцию индексов в <xref:System.Windows.Forms.ListView.ListViewItemCollection> элементов, которые выбраны в <xref:System.Windows.Forms.ListView> элемента управления, а не элементы, которые выбраны, используйте <xref:System.Windows.Forms.ListView.SelectedIndices%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Windows.Forms.ListView.SelectedItems%2A>, <xref:System.Windows.Forms.ListView.SelectedIndexChanged> событий, и <xref:System.Windows.Forms.ListView.HeaderStyle%2A> членов и <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection> класса. Чтобы выполнить этот пример, вставьте следующий код в форму, которая содержит <xref:System.Windows.Forms.ListView> объект с именем `ListView1` и <xref:System.Windows.Forms.TextBox> с именем `TextBox1`. Вызовите `InitializeListView` метод из конструктора формы или `Load` метод. В этом примере требуется обработчик событий был правильно связан с <xref:System.Windows.Forms.ListView.SelectedIndexChanged> событий  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" />
        <altmember cref="P:System.Windows.Forms.ListView.SelectedIndices" />
      </Docs>
    </Member>
    <Member MemberName="ShowGroups">
      <MemberSignature Language="C#" Value="public bool ShowGroups { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowGroups" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ShowGroups" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowGroups As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowGroups { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowGroups : bool with get, set" Usage="System.Windows.Forms.ListView.ShowGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, отображаются ли элементы в группах.</summary>
        <value><see langword="true" /> Чтобы отобразить элементы в группах; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Все группы, назначенные <xref:System.Windows.Forms.ListView> отображаться каждый раз, когда элемент управления <xref:System.Windows.Forms.ListView.View%2A> свойству присвоено значение, отличное от <xref:System.Windows.Forms.View.List>. <xref:System.Windows.Forms.ListView> Функция группирования позволяет создавать группы visual логически связанных <xref:System.Windows.Forms.ListView> элементы в Windows XP и Windows Server 2003. Чтобы включить эту функцию, ваше приложение должно вызвать <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> метод. Дополнительные сведения см. в описании свойства <xref:System.Windows.Forms.ListView.Groups%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Groups" />
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
        <altmember cref="T:System.Windows.Forms.ListViewGroupCollection" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="ShowItemToolTips">
      <MemberSignature Language="C#" Value="public bool ShowItemToolTips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowItemToolTips" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ShowItemToolTips" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowItemToolTips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowItemToolTips { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowItemToolTips : bool with get, set" Usage="System.Windows.Forms.ListView.ShowItemToolTips" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, отображаются ли всплывающие подсказки для <see cref="T:System.Windows.Forms.ListViewItem" /> объектов, содержащихся в <see cref="T:System.Windows.Forms.ListView" />.</summary>
        <value><see langword="true" /> Если <see cref="T:System.Windows.Forms.ListViewItem" /> подсказки следует, отображается; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Windows.Forms.ListView.ShowItemToolTips%2A> свойству `true`любые <xref:System.Windows.Forms.ListViewItem> , имеющий подсказки будет отображать его; в противном случае ничего не отображается.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Windows.Forms.ListView.ShowItemToolTips%2A> и <xref:System.Windows.Forms.ListViewItem.ToolTipText%2A?displayProperty=nameWithType> свойства. Чтобы выполнить этот пример, вставьте код в форму Windows и вызовите `InitializeItemsWithToolTips` из конструктора формы или <xref:System.Windows.Forms.Form.Load> обработчик событий.  
  
 [!code-csharp[System.Windows.Forms.ListViewItemWhidbeyMembers#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ListViewItemWhidbeyMembers#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemWhidbeyMembers/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmallImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList SmallImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList SmallImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.SmallImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property SmallImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ SmallImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SmallImageList : System.Windows.Forms.ImageList with get, set" Usage="System.Windows.Forms.ListView.SmallImageList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <see cref="T:System.Windows.Forms.ImageList" /> , используемый при отображении элементов в виде мелких значков в элементе управления.</summary>
        <value><see cref="T:System.Windows.Forms.ImageList" /> , Содержащий значки, которые используются, когда <see cref="P:System.Windows.Forms.ListView.View" /> свойству <see cref="F:System.Windows.Forms.View.SmallIcon" />. Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.SmallImageList%2A> Свойство позволяет указать <xref:System.Windows.Forms.ImageList> , содержащий значки, которые используются при отображении элементов с помощью мелких значков (когда <xref:System.Windows.Forms.ListView.View%2A> свойству присвоено любое значение, отличное от <xref:System.Windows.Forms.View.LargeIcon>). <xref:System.Windows.Forms.ListView> Элемент управления может принимать любой графический формат, <xref:System.Windows.Forms.ImageList> поддерживает элемент управления при отображении значков. <xref:System.Windows.Forms.ListView> Управления не ограничивается ICO-файла. Один раз <xref:System.Windows.Forms.ImageList> назначается <xref:System.Windows.Forms.ListView.SmallImageList%2A> свойство, можно задать <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> свойства каждого <xref:System.Windows.Forms.ListViewItem> в <xref:System.Windows.Forms.ListView> управления позицию индекса соответствующий образ в <xref:System.Windows.Forms.ImageList>. Размер значков для <xref:System.Windows.Forms.ListView.SmallImageList%2A> задается <xref:System.Windows.Forms.ImageList.ImageSize%2A> свойство.  
  
 Так как только один индекс может быть указан для <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A?displayProperty=nameWithType> свойство, <xref:System.Windows.Forms.ImageList> объекты, указанные в <xref:System.Windows.Forms.ListView.LargeImageList%2A> и <xref:System.Windows.Forms.ListView.SmallImageList%2A> свойства должны иметь такие же позиции индекса для изображения для отображения. Например если <xref:System.Windows.Forms.ListViewItem.ImageIndex%2A> свойство <xref:System.Windows.Forms.ListViewItem> имеет значение 0, изображений, используемых для небольших и больших значков должны находиться в той же позиции индекса в <xref:System.Windows.Forms.ImageList> объекты, указанные в <xref:System.Windows.Forms.ListView.LargeImageList%2A> и <xref:System.Windows.Forms.ListView.SmallImageList%2A> свойства.  
  
> [!NOTE]
>  Когда изображения указаны с помощью ключей, по-прежнему требуется размещать мелкие и крупные варианты изображения в одно расположение индекса в соответствующих списках изображений. При переключении между представлениями, индекс изображения в один список используется для поиска изображения в другом списке независимо от указанного значения ключа.  
  
 Чтобы задать <xref:System.Windows.Forms.ImageList> , используемый при отображении крупными значками (при <xref:System.Windows.Forms.ListView.View%2A> свойству <xref:System.Windows.Forms.View.LargeIcon>), использовать <xref:System.Windows.Forms.ListView.LargeImageList%2A> свойство. Если вы хотите использовать изображения для отображения состояния элемента, используйте <xref:System.Windows.Forms.ListView.StateImageList%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода создается <xref:System.Windows.Forms.ListView> управления с тремя <xref:System.Windows.Forms.ListViewItem> объекты, указанные и три <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> объекты, указанные для каждого элемента. В примере также создается <xref:System.Windows.Forms.ColumnHeader> объектов для отображения в представлении сведений о подэлементы. Два <xref:System.Windows.Forms.ImageList> также создаются в примере кода для изображений <xref:System.Windows.Forms.ListViewItem> объектов. Эти <xref:System.Windows.Forms.ImageList> объекты добавляются в <xref:System.Windows.Forms.ListView.LargeImageList%2A> и <xref:System.Windows.Forms.ListView.SmallImageList%2A> свойства. В примере используется следующие свойства в создании <xref:System.Windows.Forms.ListView> элемента управления.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 В этом примере требуется, что добавлен код для <xref:System.Windows.Forms.Form> и вызвать метод, созданный в примере из конструктора или другого метода на форме. Также в этом примере предполагается, что образы с именем `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, и `MyLargeImage2` , находятся в корневом каталоге диска C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListView" />
        <altmember cref="P:System.Windows.Forms.ListView.LargeImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.StateImageList" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Sort();" />
      <MemberSignature Language="F#" Value="member this.Sort : unit -&gt; unit" Usage="listView.Sort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сортирует элементы в списке.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обычно элементы сортируются с помощью <xref:System.Windows.Forms.ListView.Sorting%2A> свойство, которое сортирует элементы, на основе текста элемента. Чтобы настроить порядок сортировки, необходимо создать класс, реализующий <xref:System.Collections.IComparer> интерфейс, а также задать <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> свойства объекта этого класса. Это полезно, например, если необходимо отсортировать элементы по тексту подэлемента. Дополнительные сведения о ручной сортировке элементов см. пример для <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> свойство.  
  
 Если <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> свойству присвоено значение, отличное от <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> или, если <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> свойство задано, список сортируется автоматически при добавлении элементов. Элементы не сортируются автоматически при изменении текста метки.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.ListViewItemSorter" />
      </Docs>
    </Member>
    <Member MemberName="Sorting">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.SortOrder Sorting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.SortOrder Sorting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Sorting" />
      <MemberSignature Language="VB.NET" Value="Public Property Sorting As SortOrder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::SortOrder Sorting { System::Windows::Forms::SortOrder get(); void set(System::Windows::Forms::SortOrder value); };" />
      <MemberSignature Language="F#" Value="member this.Sorting : System.Windows.Forms.SortOrder with get, set" Usage="System.Windows.Forms.ListView.Sorting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SortOrder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает порядок сортировки составляющих элементов в данном элементе управления.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Windows.Forms.SortOrder" />. Значение по умолчанию — <see cref="F:System.Windows.Forms.SortOrder.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.Sorting%2A> Свойство позволяет указать, сортируются ли элементы в <xref:System.Windows.Forms.ListView> элемента управления. По умолчанию сортировка не выполняется. При <xref:System.Windows.Forms.ListView.Sorting%2A> свойству <xref:System.Windows.Forms.SortOrder.Ascending> или <xref:System.Windows.Forms.SortOrder.Descending>, элементы в <xref:System.Windows.Forms.ListView> автоматически сортируются в алфавитном порядке по возрастанию (когда свойство имеет значение <xref:System.Windows.Forms.SortOrder.Ascending>) или по убыванию в алфавитном порядке (при свойство имеет значение <xref:System.Windows.Forms.SortOrder.Descending>). Это свойство можно использовать для автоматической сортировки элементов, отображаемых в вашей <xref:System.Windows.Forms.ListView> управления позволяет упростить для пользователей найти элементы, когда доступны большое число элементов.  
  
 Если вы хотите выполнить собственную сортировку вместо использования элементов <xref:System.Windows.Forms.ListView.Sorting%2A> свойство, используйте <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> свойство в сочетании с <xref:System.Windows.Forms.ListView.Sort%2A> метод.  
  
 Если <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> свойству присвоено значение, отличное от <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> или, если <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> свойство задано, список сортируется автоматически при добавлении элементов. Элементы не сортируются автоматически при изменении текста метки.  
  
   
  
## Examples  
 В следующем примере кода создается <xref:System.Windows.Forms.ListView> управления с тремя <xref:System.Windows.Forms.ListViewItem> объекты, указанные и три <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> объекты, указанные для каждого элемента. В примере также создается <xref:System.Windows.Forms.ColumnHeader> объектов для отображения в представлении сведений о подэлементы. Два <xref:System.Windows.Forms.ImageList> также создаются в примере кода для изображений <xref:System.Windows.Forms.ListViewItem> объектов. Эти <xref:System.Windows.Forms.ImageList> объекты добавляются в <xref:System.Windows.Forms.ListView.LargeImageList%2A> и <xref:System.Windows.Forms.ListView.SmallImageList%2A> свойства. В примере используется следующие свойства в создании <xref:System.Windows.Forms.ListView> элемента управления.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 В этом примере требуется, что добавлен код для <xref:System.Windows.Forms.Form> и вызвать метод, созданный в примере из конструктора или другого метода на форме. Также в этом примере предполагается, что образы с именем `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, и `MyLargeImage2` , находятся в корневом каталоге диска C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Значение не является одним из <see cref="T:System.Windows.Forms.SortOrder" /> значения.</exception>
        <altmember cref="T:System.Windows.Forms.SortOrder" />
      </Docs>
    </Member>
    <Member MemberName="StateImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList StateImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList StateImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.StateImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property StateImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ StateImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StateImageList : System.Windows.Forms.ImageList with get, set" Usage="System.Windows.Forms.ListView.StateImageList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <see cref="T:System.Windows.Forms.ImageList" /> связанных с устанавливаемыми приложением состояниями в элементе управления.</summary>
        <value><see cref="T:System.Windows.Forms.ImageList" /> , Содержащий набор изображений состояния, которые могут использоваться для указания состояния элемента определяется приложением. Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.StateImageList%2A> Свойство позволяет указать <xref:System.Windows.Forms.ImageList> , который содержит изображения, используемый для представления в приложении состояние элемента в <xref:System.Windows.Forms.ListView> элемента управления. Изображения состояния отображаются слева от значка для элемента. Изображений состояния, такие как операторы checked и unchecked флажки, можно использовать для указания состояния элементов, определяемые приложением. Изображения состояния отображаются во всех представлениях <xref:System.Windows.Forms.ListView> элемента управления.  
  
 Если <xref:System.Windows.Forms.ImageList> указывается в <xref:System.Windows.Forms.ListView.StateImageList%2A> свойство и <xref:System.Windows.Forms.ListView.CheckBoxes%2A> свойству `true`, изображения с индексами 0 и 1 в <xref:System.Windows.Forms.ImageList> отображаются вместо флажок. Вместо снят флажок отображается изображение по индексу 0, а вместо установленный флажок отображается изображение с индексом 1.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.LargeImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.SmallImageList" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.ListView.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Данное свойство не применимо к этому классу.</summary>
        <value>Текст, отображаемый в <see cref="T:System.Windows.Forms.ListView" /> элемента управления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данное свойство не применимо к этому классу.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberSignature Language="F#" Value="member this.TextChanged : EventHandler " Usage="member this.TextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении свойства <see cref="P:System.Windows.Forms.ListView.Text" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TileSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size TileSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size TileSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.TileSize" />
      <MemberSignature Language="VB.NET" Value="Public Property TileSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size TileSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.TileSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.ListView.TileSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает размер элементов мозаичного представления.</summary>
        <value>Объект <see cref="T:System.Drawing.Size" /> , содержащий новый размер мозаики.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство контролирует размер плитки, когда <xref:System.Windows.Forms.ListView.View%2A> свойству <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType>. Задание этого свойства полезно для предотвращения переноса строк в том случае, если текст подэлемента слишком велика для отображения на одной строке.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Windows.Forms.ListView> функция мозаичного заполнения. В примере в представлении плитки отображаются элементы, представляющие книги. Каждый элемент отображается как плитку содержит значок книги, название, автор и год публикации. Пример кода для работы необходимо включить файл значка с именем Book.ico в том же каталоге, что и в примере. Чтобы просмотреть плитку Просмотр без значков, закомментируйте строки, относящиеся к <xref:System.Windows.Forms.ImageList> объекта.  
  
 [!code-cpp[System.Windows.Forms.ListView.Tiling#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Tiling/CPP/listviewtilingexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.Tiling#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Tiling/CS/listviewtilingexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.Tiling#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Tiling/VB/listviewtilingexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />
        <altmember cref="T:System.Windows.Forms.View" />
      </Docs>
    </Member>
    <Member MemberName="TopItem">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem TopItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem TopItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.TopItem" />
      <MemberSignature Language="VB.NET" Value="Public Property TopItem As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem ^ TopItem { System::Windows::Forms::ListViewItem ^ get(); void set(System::Windows::Forms::ListViewItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TopItem : System.Windows.Forms.ListViewItem with get, set" Usage="System.Windows.Forms.ListView.TopItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает первый видимый составляющий элемент в данном элементе управления.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.ListViewItem" /> , представляющий первый видимый элемент в элементе управления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Изначально является элемент позицией индекса нуль (0) в верхней части <xref:System.Windows.Forms.ListView> элемента управления. Если <xref:System.Windows.Forms.ListView> прокрутки содержимого элемента управления, может быть другой элемент в верхней части элемента управления. Это свойство можно использовать, чтобы задать или узнать, какой элемент является видимым в верхней части <xref:System.Windows.Forms.ListView> элемента управления. Значение <xref:System.Windows.Forms.ListView.TopItem%2A> свойство будет всегда сохраняется, в зависимости от места верхний элемент в представлении списка.  
  
 Количество элементов, отображаемых в <xref:System.Windows.Forms.ListView> элемента управления в любое время зависит от высоты представления списка и размер элементов, он содержит. Если элементы превышает высоту элемента в представлении списка, они будут располагаться на нескольких страницах, которые пользователь сможет прокручивать. Если задать <xref:System.Windows.Forms.ListView.TopItem%2A> свойство к элементу в последнюю страницу <xref:System.Windows.Forms.ListView>, элемент будет автоматически прокручен в представлении; Однако <xref:System.Windows.Forms.ListView.TopItem%2A> будет указано значение фактического верхний элемент последней страницы.  
  
 Чтобы убедиться, что указанный элемент включен в видимой области элемента управления (но не обязательно в положение верхнего края), используйте <xref:System.Windows.Forms.ListView.EnsureVisible%2A> метод.  
  
> [!NOTE]
>  Задание этого свойства не действует, если <xref:System.Windows.Forms.ListView.Scrollable%2A> свойство имеет значение `false`.  
>   
>  Задание этого свойства не поддерживается в версиях [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] до версии 2.0.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется Сброс стиль <xref:System.Windows.Forms.ListViewItem> подэлементы объекта помощи <xref:System.Windows.Forms.ListView.TopItem%2A> свойство и <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.ResetStyle%2A?displayProperty=nameWithType> метод. Чтобы запустить пример, вставьте следующий код в форму, содержащую кнопки с именем `Button1` и вызвать `InitializeListView` метод в конструкторе формы или <xref:System.Windows.Forms.Form.Load> обработчик событий.  
  
 [!code-cpp[System.Windows.Forms.ListViewItemStyle#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListViewItemStyle#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ListViewItemStyle#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListViewItemStyle/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Для свойства <see cref="P:System.Windows.Forms.ListView.View" /> задано значение <see cref="F:System.Windows.Forms.View.LargeIcon" />, <see cref="F:System.Windows.Forms.View.SmallIcon" /> или <see cref="F:System.Windows.Forms.View.Tile" />.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
        <altmember cref="M:System.Windows.Forms.ListView.EnsureVisible(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="listView.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает строковое представление <see cref="T:System.Windows.Forms.ListView" /> элемента управления.</summary>
        <returns>Строка, которая задает элемент управления типа, количество элементов в <see cref="T:System.Windows.Forms.ListView" /> управления и тип первого элемента в <see cref="T:System.Windows.Forms.ListView" />, если количество не равно 0.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateExtendedStyles">
      <MemberSignature Language="C#" Value="protected void UpdateExtendedStyles ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateExtendedStyles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.UpdateExtendedStyles" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UpdateExtendedStyles ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UpdateExtendedStyles();" />
      <MemberSignature Language="F#" Value="member this.UpdateExtendedStyles : unit -&gt; unit" Usage="listView.UpdateExtendedStyles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Обновляет расширенные стили, применяющиеся к данному элементу управления "список".</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать <xref:System.Windows.Forms.ListView.UpdateExtendedStyles%2A> метод в производном классе позволяет переопределить расширенные стили, используемые <xref:System.Windows.Forms.ListView> элемента управления. Если вызвать этот метод, необходимо убедиться, что расширенные стили, заданные свойствами на <xref:System.Windows.Forms.ListView> управления используются в производной версии элемента управления.  
  
 Ниже приведены свойства, применяемые к расширенным стилем <xref:System.Windows.Forms.ListView> элемента управления.  
  
-   <xref:System.Windows.Forms.ListView.Activation%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.HoverSelection%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ListView.Activation" />
        <altmember cref="P:System.Windows.Forms.ListView.AllowColumnReorder" />
        <altmember cref="P:System.Windows.Forms.ListView.CheckBoxes" />
        <altmember cref="P:System.Windows.Forms.ListView.FullRowSelect" />
        <altmember cref="P:System.Windows.Forms.ListView.GridLines" />
        <altmember cref="P:System.Windows.Forms.ListView.HoverSelection" />
      </Docs>
    </Member>
    <Member MemberName="UseCompatibleStateImageBehavior">
      <MemberSignature Language="C#" Value="public bool UseCompatibleStateImageBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCompatibleStateImageBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCompatibleStateImageBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCompatibleStateImageBehavior { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseCompatibleStateImageBehavior : bool with get, set" Usage="System.Windows.Forms.ListView.UseCompatibleStateImageBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, является ли <see cref="T:System.Windows.Forms.ListView" /> , совместимый с работы с изображениями состояния используется [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 1.1 или [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0.</summary>
        <value><see langword="true" /> Если для работы с изображениями состояния совместим с [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 1.1; <see langword="false" /> Если поведение совместимо с [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Изменения в <xref:System.Windows.Forms.ListView> контролировать [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0 включить пользовательские изображения состояния содержать значение, указывающее, является ли элемент устанавливается или снимается, или в неопределенном состоянии. С появлением этой функции [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0 имеет другую логику поведения, чем .NET Framework 1.1. При создании приложений, которые зависят от поведения в [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 1.1, убедитесь, что <xref:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior%2A> свойству `true`, который является значением по умолчанию. Чтобы полностью воспользоваться преимуществами пользовательские изображения состояния, установим <xref:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior%2A> для `false`.  
  
> [!NOTE]
>  Если вы используете [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] конструкторе <xref:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior%2A> свойству будет присвоено `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.View View { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.View View" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.View" />
      <MemberSignature Language="VB.NET" Value="Public Property View As View" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::View View { System::Windows::Forms::View get(); void set(System::Windows::Forms::View value); };" />
      <MemberSignature Language="F#" Value="member this.View : System.Windows.Forms.View with get, set" Usage="System.Windows.Forms.ListView.View" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.View</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает способ отображения составляющих элементов в данном элементе управления.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Windows.Forms.View" />. Значение по умолчанию — <see cref="F:System.Windows.Forms.View.LargeIcon" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListView.View%2A> Свойство позволяет указать тип отображения <xref:System.Windows.Forms.ListView> управления используется для отображения элементов. Можно задать <xref:System.Windows.Forms.ListView.View%2A> свойство для отображения каждого элемента с помощью крупных или мелких значков или отображения элементов в вертикальном списке. Богатым является представление details, которое позволяет просматривать не только элементы, но всем вложенным элементам, для каждого элемента. Каждый элемент отображается в виде сетки с каждого перечисленного по вертикали элемента и подэлементов элемента каждого элемента, отображаемого в столбце, с заголовками столбцов. В представлении сведений является идеальным способом для отображения сведений о базе данных пользователю. В Windows XP и Windows Server 2003 можно также отображать элементы в виде плиток, соблюдая баланс между графическими и текстовыми представлениями информации, отображая крупных значков, а также сведения подэлементов по своему выбору. Чтобы включить мозаичное представление, ваше приложение должно вызвать <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> метод. Представление мелкими значками с каждый элемент отображается значок и текстовую информацию справа от значка. Большое изображение представления с каждый элемент отображается значок и текстовую информацию под значком. Размер значков для списка изображений, определяется <xref:System.Windows.Forms.ImageList.ImageSize%2A> свойство <xref:System.Windows.Forms.ImageList> для <xref:System.Windows.Forms.ListView.SmallImageList%2A> или <xref:System.Windows.Forms.ListView.LargeImageList%2A> свойства.  
  
> [!NOTE]
>  Если вы используете несколько списков изображений для малых и больших значков, с помощью <xref:System.Windows.Forms.ListView> элемента управления, необходимо поместить небольших и больших версий образа в то же расположение, в соответствующих списках изображений индекса. При переключении между представлениями, индекс изображения в один список используется для поиска изображения в другом списке независимо от указанного значения ключа.  
  
 Большинство свойств в <xref:System.Windows.Forms.ListView> управления затрагивают ведут себя и отображаются различные представления. Некоторые свойства, которые влияют на отображение элементов полезны только тогда, когда <xref:System.Windows.Forms.ListView.View%2A> свойству присвоено конкретное значение, а другие — во всех представлениях. Например, свойства, такие как <xref:System.Windows.Forms.ListView.GridLines%2A> и <xref:System.Windows.Forms.ListView.FullRowSelect%2A> полезны, только если <xref:System.Windows.Forms.ListView.View%2A> свойству <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>, хотя <xref:System.Windows.Forms.ListView.MultiSelect%2A> и <xref:System.Windows.Forms.ListView.CheckBoxes%2A> свойства полезны во всех представлениях.  
  
 Ниже приведены некоторые из <xref:System.Windows.Forms.ListView> члены и представления, они допустимы в.  
  
|Член ListView|Просмотр|  
|---------------------|----------|  
|Свойство <xref:System.Windows.Forms.ListView.Alignment%2A>|<xref:System.Windows.Forms.View.SmallIcon> или <xref:System.Windows.Forms.View.LargeIcon>|  
|Свойство <xref:System.Windows.Forms.ListView.AutoArrange%2A>|<xref:System.Windows.Forms.View.SmallIcon> или <xref:System.Windows.Forms.View.LargeIcon>|  
|Метод <xref:System.Windows.Forms.ListView.AutoResizeColumn%2A>|<xref:System.Windows.Forms.View.Details>|  
|<xref:System.Windows.Forms.ListView.CheckBoxes%2A>|Все представления, за исключением <xref:System.Windows.Forms.View.Tile>|  
|Свойство <xref:System.Windows.Forms.ListView.Columns%2A>|<xref:System.Windows.Forms.View.Details> или <xref:System.Windows.Forms.View.Tile>|  
|Событие<xref:System.Windows.Forms.ListView.DrawSubItem> |<xref:System.Windows.Forms.View.Details>|  
|Метод <xref:System.Windows.Forms.ListView.FindItemWithText%2A>|<xref:System.Windows.Forms.View.Details>, <xref:System.Windows.Forms.View.List>или <xref:System.Windows.Forms.View.Tile>|  
|Метод <xref:System.Windows.Forms.ListView.FindNearestItem%2A>|<xref:System.Windows.Forms.View.SmallIcon> или <xref:System.Windows.Forms.View.LargeIcon>|  
|Метод <xref:System.Windows.Forms.ListView.GetItemAt%2A>|<xref:System.Windows.Forms.View.Details> или <xref:System.Windows.Forms.View.Tile>|  
|Свойство <xref:System.Windows.Forms.ListView.Groups%2A>|Все представления, за исключением <xref:System.Windows.Forms.View.List>|  
|Свойство <xref:System.Windows.Forms.ListView.HeaderStyle%2A>|<xref:System.Windows.Forms.View.Details>|  
|Свойство <xref:System.Windows.Forms.ListView.InsertionMark%2A>|<xref:System.Windows.Forms.View.LargeIcon>, <xref:System.Windows.Forms.View.SmallIcon>или <xref:System.Windows.Forms.View.Tile>|  
  
 Можно использовать <xref:System.Windows.Forms.ListView.View%2A> свойство для предоставления различных представлений данных в приложении, или для конкретных представление, чтобы использовать преимущества этого представления блокировки. Например <xref:System.Windows.Forms.ListView.View%2A> часто свойству <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType> так, как в представлении сведений предоставляет ряд Просмотр параметров, недоступных в других представлениях.  
  
> [!NOTE]
>  Если ваш <xref:System.Windows.Forms.ListView> управления не поддерживает указанные заголовки столбцов и установке <xref:System.Windows.Forms.ListView.View%2A> свойства <xref:System.Windows.Forms.View.Details?displayProperty=nameWithType>, <xref:System.Windows.Forms.ListView> элемент управления не будет отображать какие-либо элементы. Если ваш <xref:System.Windows.Forms.ListView> управления не поддерживает указанные заголовки столбцов и установке <xref:System.Windows.Forms.ListView.View%2A> свойства <xref:System.Windows.Forms.View.Tile?displayProperty=nameWithType>, <xref:System.Windows.Forms.ListView> элемент управления не будет отображать всем вложенным элементам.  
  
 Мозаичное представление отображает каждый элемент в виде крупного значка и текстовой информации в правой части. Текстовые данные состоит из метки элемента, следуют подэлементы. По умолчанию отображается только первый подэлемент, соответствующее метке элемента. Чтобы отобразить дополнительные подэлементы, необходимо добавить <xref:System.Windows.Forms.ColumnHeader> объектов <xref:System.Windows.Forms.ListView.Columns%2A> коллекции. Каждого подэлемента в плитке соответствующий заголовок столбца. Чтобы управлять отображаются какие подэлементы и порядок, в котором они отображаются, необходимо задать <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A?displayProperty=nameWithType> свойство для каждого элемента и <xref:System.Windows.Forms.ColumnHeader.Name%2A?displayProperty=nameWithType> свойство для каждого заголовка. Затем добавлять, удалять и изменить порядок заголовков в <xref:System.Windows.Forms.ListView.Columns%2A> коллекции для достижения нужного результата.  
  
 Чтобы контролировать размер элементов мозаичного представления, присвойте <xref:System.Windows.Forms.ListView.TileSize%2A> свойство. Это полезно для предотвращения переноса строк в том случае, если текст подэлемента слишком велика для одной строки.  
  
 Пример мозаичного представления, см. в разделе <xref:System.Windows.Forms.ListView.TileSize%2A> свойство.  
  
> [!NOTE]
>  Несмотря на то, что в представлении сведений отображаются только столбцы, подэлементы без заголовков столбцов будет отображаться в представлении подробных сведений или мозаичного представления.  
  
 Мозаичное представление доступно только в Windows XP и Windows Server 2003, когда приложение вызывает <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> метод. В предыдущих версиях операционных систем код, связанный с мозаичным представлением, не оказывает никакого влияния, элемент управления <xref:System.Windows.Forms.ListView> отображается в представлении крупных значков. В результате любой код, зависящий от мозаичного представления может работать неправильно.  
  
 Можно включить код, который определяет, доступно ли мозаичное представление и обеспечения альтернативной функциональности, когда она недоступна. Например, при использовании рисование владельцем для настройки внешнего вида <xref:System.Windows.Forms.ListView> элементов в представлении плиток, вы можете использовать код прорисовки, соответствующий в представлении крупных значков при работе в операционных системах, которые не поддерживают мозаичного представления.  
  
 Функция мозаичного представления обеспечивается библиотеки, которую предоставляет функцию тем операционной системы. Чтобы проверить наличие этой библиотеки, вызовите <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> перегрузку метода и передать <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> значение.  
  
   
  
## Examples  
 В следующем примере кода создается <xref:System.Windows.Forms.ListView> управления с тремя <xref:System.Windows.Forms.ListViewItem> объекты, указанные и три <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> объекты, указанные для каждого элемента. В примере также создается <xref:System.Windows.Forms.ColumnHeader> объектов для отображения в представлении сведений о подэлементы. Два <xref:System.Windows.Forms.ImageList> также создаются в примере кода для изображений <xref:System.Windows.Forms.ListViewItem> объектов. Эти <xref:System.Windows.Forms.ImageList> объекты добавляются в <xref:System.Windows.Forms.ListView.LargeImageList%2A> и <xref:System.Windows.Forms.ListView.SmallImageList%2A> свойства. В примере используется следующие свойства в создании <xref:System.Windows.Forms.ListView> элемента управления.  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 В этом примере требуется, что добавлен код для <xref:System.Windows.Forms.Form> и вызвать метод, созданный в примере из конструктора или другого метода на форме. Также в этом примере предполагается, что образы с именем `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, и `MyLargeImage2` , находятся в корневом каталоге диска C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Значение не является одним из <see cref="T:System.Windows.Forms.View" /> значения.</exception>
        <altmember cref="T:System.Windows.Forms.View" />
        <altmember cref="P:System.Windows.Forms.ListView.TileSize" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
      </Docs>
    </Member>
    <Member MemberName="VirtualItemsSelectionRangeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler VirtualItemsSelectionRangeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler VirtualItemsSelectionRangeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VirtualItemsSelectionRangeChanged As ListViewVirtualItemsSelectionRangeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ListViewVirtualItemsSelectionRangeChangedEventHandler ^ VirtualItemsSelectionRangeChanged;" />
      <MemberSignature Language="F#" Value="member this.VirtualItemsSelectionRangeChanged : System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler " Usage="member this.VirtualItemsSelectionRangeChanged : System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при <see cref="T:System.Windows.Forms.ListView" /> находится в виртуальном режиме и выделение диапазона элементов, состояние изменилось.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Windows.Forms.ListView> не находится в виртуальном режиме <xref:System.Windows.Forms.ListView.ItemSelectionChanged> событие произойдет.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В примере обработчик событий сообщает о вхождение <xref:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged> событий. Этот отчет позволяет выяснить, когда происходит событие и может оказаться полезным при отладке. Чтобы создать отчет для нескольких событий или событий, которые происходят часто, рассмотрите возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> с <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> или добавлении сообщения в многострочном <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы запустить пример кода, вставьте его в проект, который содержит экземпляр типа <xref:System.Windows.Forms.ListView> с именем `ListView1`. Убедитесь, что обработчик событий, связанный с <xref:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged> событий.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#482](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#482)]
 [!code-vb[System.Windows.Forms.EventExamples#482](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#482)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.ListView.ItemSelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="VirtualListSize">
      <MemberSignature Language="C#" Value="public int VirtualListSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VirtualListSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.VirtualListSize" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualListSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int VirtualListSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.VirtualListSize : int with get, set" Usage="System.Windows.Forms.ListView.VirtualListSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает число <see cref="T:System.Windows.Forms.ListViewItem" /> объектов, содержащихся в списке, когда он находится в виртуальном режиме.</summary>
        <value>Число <see cref="T:System.Windows.Forms.ListViewItem" /> объектов, содержащихся в <see cref="T:System.Windows.Forms.ListView" /> при работе в виртуальном режиме.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Получение или установка <xref:System.Windows.Forms.ListView.VirtualListSize%2A> свойство при <xref:System.Windows.Forms.ListView.VirtualMode%2A> присвоено `false` не окажет никакого воздействия <xref:System.Windows.Forms.ListView>.  
  
 Если <xref:System.Windows.Forms.ListView.VirtualMode%2A> присваивается `true`и <xref:System.Windows.Forms.ListView.VirtualListSize%2A> больше, чем 0, необходимо обрабатывать <xref:System.Windows.Forms.ListView.RetrieveVirtualItem> события, предоставляя допустимый <xref:System.Windows.Forms.ListViewItem>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Windows.Forms.ListView.VirtualListSize" /> будет присвоено значение меньше 0.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.ListView.VirtualMode" /> имеет значение <see langword="true" />, <see cref="P:System.Windows.Forms.ListView.VirtualListSize" /> больше 0, и <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> не обрабатывается.</exception>
        <altmember cref="P:System.Windows.Forms.ListView.VirtualMode" />
      </Docs>
    </Member>
    <Member MemberName="VirtualMode">
      <MemberSignature Language="C#" Value="public bool VirtualMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VirtualMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.VirtualMode" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VirtualMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.VirtualMode : bool with get, set" Usage="System.Windows.Forms.ListView.VirtualMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, предоставляются ли определенные пользователем операции управления данными для элемента управления <see cref="T:System.Windows.Forms.ListView" />.</summary>
        <value><see langword="true" /> Если <see cref="T:System.Windows.Forms.ListView" /> использует операции управления данными, предоставленные пользователем; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Установка <xref:System.Windows.Forms.ListView.VirtualMode%2A> свойства `true` помещает <xref:System.Windows.Forms.ListView> в виртуальном режиме. В режиме обычной виртуальной <xref:System.Windows.Forms.ListView.Items%2A> коллекции не используется. Вместо этого <xref:System.Windows.Forms.ListViewItem> объектов создаются динамически, как <xref:System.Windows.Forms.ListView> они требуются.  
  
 Виртуальный режим может быть полезен во многих случаях. Если <xref:System.Windows.Forms.ListView> объекта должны быть заполнены с очень большая коллекция уже в памяти, создание <xref:System.Windows.Forms.ListViewItem> объект для каждой записи может быть излишним. В виртуальном режиме создаются только необходимые элементы. В других случаях значения <xref:System.Windows.Forms.ListViewItem> объектов может потребоваться повторное вычисление часто, и данное действие для всей коллекции вызовет снижение производительности. В виртуальном режиме вычисляются только необходимые элементы.  
  
 Чтобы использовать виртуальный режим, необходимо обрабатывать <xref:System.Windows.Forms.ListView.RetrieveVirtualItem> события, которое вызывается каждый раз <xref:System.Windows.Forms.ListView> требуется элемент. Этот обработчик событий необходимо создать <xref:System.Windows.Forms.ListViewItem> объекта, к которому принадлежит по указанному индексу. Кроме того <xref:System.Windows.Forms.ListView.VirtualListSize%2A> свойство должно иметь значение размера виртуального списка.  
  
 Обработка <xref:System.Windows.Forms.ListView.SearchForVirtualItem> событий обеспечивает поиск в виртуальном режиме. Если это событие не обработано, <xref:System.Windows.Forms.ListView.FindItemWithText%2A> и <xref:System.Windows.Forms.ListView.FindNearestItem%2A> методы возвращают `null`.  
  
 Можно обрабатывать <xref:System.Windows.Forms.ListView.CacheVirtualItems> событий для поддержания кэша <xref:System.Windows.Forms.ListViewItem> объектов. Если вычисление или поиск для создания <xref:System.Windows.Forms.ListViewItem> объекта — операция дорогостоящая, обслуживание, кэш может повысить производительность.  
  
 Если <xref:System.Windows.Forms.ListView.View%2A> свойству <xref:System.Windows.Forms.View.Tile>, значение автоматически изменяется <xref:System.Windows.Forms.View.LargeIcon> при <xref:System.Windows.Forms.ListView.VirtualMode%2A> присваивается `true`.  
  
 В виртуальном режиме <xref:System.Windows.Forms.ListView.Items%2A> коллекция отключена. Попытка доступа к нему приводит <xref:System.InvalidOperationException>. То же самое относится и к <xref:System.Windows.Forms.ListView.CheckedItems%2A> коллекции и <xref:System.Windows.Forms.ListView.SelectedItems%2A> коллекции. Если для извлечения элементов, выбранных или checked следует использовать <xref:System.Windows.Forms.ListView.SelectedIndices%2A> и <xref:System.Windows.Forms.ListView.CheckedIndices%2A> коллекции вместо этого.  
  
   
  
## Examples  
 В этом примере показан простой <xref:System.Windows.Forms.ListView> , содержимое которой представлено, первые десять тысяч квадратов. Он выполняет поиск и использует кэш для повышения производительности.  
  
 [!code-csharp[System.Windows.Forms.ListView.VirtualMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/cs/VirtualMode.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.VirtualMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.VirtualMode/vb/VirtualMode.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Forms.ListView.VirtualMode" /> имеет значение <see langword="true" /> и существует одно из следующих условий: 
-   <see cref="P:System.Windows.Forms.ListView.VirtualListSize" /> больше нуля и событие <see cref="E:System.Windows.Forms.ListView.RetrieveVirtualItem" /> не обрабатывается;  
  
-или- 
-   <see cref="P:System.Windows.Forms.ListView.Items" />, <see cref="P:System.Windows.Forms.ListView.CheckedItems" /> или <see cref="P:System.Windows.Forms.ListView.SelectedItems" /> содержит элементы;  
  
-или- 
– внесены изменения в свойство <see cref="P:System.Windows.Forms.ListView.Items" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="listView.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">Сообщение <see cref="T:System.Windows.Forms.Message" /> Windows для обработки.</param>
        <summary>Переопределяет <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>