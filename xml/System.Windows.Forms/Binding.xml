<Type Name="Binding" FullName="System.Windows.Forms.Binding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5a4163bd4edd352dc2528b0f67dd0bc285acc797" /><Meta Name="ms.sourcegitcommit" Value="cb4a1b695ae3cbb5d99ef8c39b476d40c35f42a2" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/28/2019" /><Meta Name="ms.locfileid" Value="64766681" /></Metadata><TypeSignature Language="C#" Value="public class Binding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Binding extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Binding" />
  <TypeSignature Language="VB.NET" Value="Public Class Binding" />
  <TypeSignature Language="C++ CLI" Value="public ref class Binding" />
  <TypeSignature Language="F#" Value="type Binding = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ListBindingConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет простую привязку между значением свойства объекта и значением свойства элемента управления.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Windows.Forms.Binding> класс для создания и поддержания простой привязки между свойством элемента управления и свойства объекта или свойства текущего объекта в списке объектов.  
  
 Например первого варианта, можно привязать <xref:System.Windows.Forms.Control.Text%2A> свойство <xref:System.Windows.Forms.TextBox> управления `FirstName` свойство `Customer` объекта. Например второго варианта, можно привязать <xref:System.Windows.Forms.Control.Text%2A> свойство <xref:System.Windows.Forms.TextBox> управления `FirstName` свойство <xref:System.Data.DataTable> , содержащий клиентов.  
  
 <xref:System.Windows.Forms.Binding> Класс также предоставляет возможность форматировать значения для отображения с помощью <xref:System.Windows.Forms.Binding.Format> событий и получения форматированного значения с помощью <xref:System.Windows.Forms.Binding.Parse> событий.  
  
 При создании <xref:System.Windows.Forms.Binding> с экземпляром <xref:System.Windows.Forms.Binding.%23ctor%2A> конструктор, необходимо указать три элемента:  
  
-   Имя свойства элемента управления для привязки.  
  
-   Источник данных.  
  
-   Путь перехода, который разрешается в список или свойства в источнике данных. Путь перехода также используется для создания объекта <xref:System.Windows.Forms.Binding.BindingMemberInfo%2A> свойство.  
  
 Во-первых необходимо указать имя свойства элемента управления, необходимо выполнить привязку данных. Например, чтобы данные отображались в <xref:System.Windows.Forms.TextBox> управления, укажите <xref:System.Windows.Forms.TextBoxBase.Text%2A> свойство.  
  
 Во-вторых можно указать экземпляр одного из классов в следующей таблице, как источник данных.  
  
|Описание|Пример в C#|  
|-----------------|-----------------|  
|Любой класс, реализующий <xref:System.ComponentModel.IBindingList> или <xref:System.ComponentModel.ITypedList>. К ним относятся следующие: <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, <xref:System.Data.DataView>, или <xref:System.Data.DataViewManager>.|`DataSet ds = new DataSet("myDataSet");`|  
|Любой класс, реализующий <xref:System.Collections.IList> создать индексированную коллекцию объектов. Коллекции должны будут созданы или заполнены перед созданием <xref:System.Windows.Forms.Binding>. Объекты в списке должны быть одного типа; в противном случае будет создано исключение.|`ArrayList ar1 = new ArrayList;  Customer1 cust1 = new Customer("Louis");  ar1.Add(cust1);`|  
|Строго типизированный <xref:System.Collections.IList> строго типизированных объектов|`Customer [] custList = new Customer[3];`|  
  
 В-третьих, необходимо указать путь перехода, который может быть пустой строкой ("»), одно имя свойства или иерархию разделенных точкой имен. Если путь навигации задано пустой строкой, <xref:System.Object.ToString%2A> метод будет вызываться на базовом объекте источника данных.  
  
 Если источником данных является <xref:System.Data.DataTable>, который может содержать несколько <xref:System.Data.DataColumn> объектов, путь перехода должен использоваться для разрешения на определенный столбец.  
  
> [!NOTE]
>  Если источником данных является <xref:System.Data.DataSet>, <xref:System.Data.DataViewManager>, или <xref:System.Data.DataTable>, реально привязка происходит к <xref:System.Data.DataView>. Следовательно, привязанные строки фактически являются <xref:System.Data.DataRowView> объектов.  
  
 Путь перехода с разделителями точками является обязательным, если источник данных имеет значение объект, который содержит несколько <xref:System.Data.DataTable> объекты (такие как <xref:System.Data.DataSet> или <xref:System.Data.DataViewManager>). Также можно использовать путь перехода с разделителями точками, при привязке к объекту, свойства которого возвращают ссылки на другие объекты (такие как класс со свойствами, которые возвращают другие объекты класса). Например следующие пути перехода описывают допустимые поля данных:  
  
-   «Size.Height»  
  
-   «Suppliers.CompanyName»  
  
-   «Regions.regionsToCustomers.CustomerFirstName»  
  
-   "Regions.regionsToCustomers.customersToOrders.ordersToDetails.Quantity"  
  
 Каждый член пути может возвращать свойство, результатом которого является единственное значение (например, целое число), или список значений (например, массив строк). Несмотря на то, что каждый элемент в пути может быть списка или свойство, свойство должно разрешаться последнего члена. Каждый член основан на предыдущий элемент: «Size.Height» разрешается в <xref:System.Drawing.Size.Height%2A> свойства для текущего <xref:System.Drawing.Size>; «Regions.regionsToCustomers.CustomerFirstName» разрешается в имя для текущего клиента, где клиент — один из клиентов для текущей области.  
  
 Объект <xref:System.Data.DataRelation> возвращает список значений путем связывания <xref:System.Data.DataTable> со вторым <xref:System.Data.DataTable> в <xref:System.Data.DataSet>. Если <xref:System.Data.DataSet> содержит <xref:System.Data.DataRelation> объектов, можно указать данные-член как <xref:System.Data.DataTable.TableName%2A> следуют <xref:System.Data.DataRelation.RelationName%2A>, а затем <xref:System.Data.DataColumn.ColumnName%2A>. Например если <xref:System.Data.DataTable> «поставщики» содержит <xref:System.Data.DataRelation> с именем «suppliers2products», элемент данных, который может быть «Suppliers.suppliers2products.ProductName».  
  
 Источник данных может состоять из набора связанных классов. Например предположим, набор классов, описывающих солнечные системы. Класс с именем `System` содержит свойство с именем `Stars` , возвращающий коллекцию `Star` объектов. Каждый `Star` объект имеет `Name` и `Mass` свойства, а также `Planets` свойство, которое возвращает коллекцию `Planet` объектов. В этой системе каждая планета также имеет `Mass` и `Name` свойства. Каждый `Planet` объект имеет `Moons` свойство, которое возвращает коллекцию `Moon` объектов, каждый из которых также имеет `Name` и `Mass` свойства. Если указать `System` объекта в виде источника данных, как элемент данных можно указать любой из следующих:  
  
-   «Stars.Name»  
  
-   «Stars.Mass»  
  
-   «Stars.Planets.Name»  
  
-   "Stars.Planets.Mass"  
  
-   «Stars.Planets.Moons.Name»  
  
-   "Stars.Planets.Moons.Mass"  
  
 Коллекция компонентов элементов управления, которые могут быть простой привязкой <xref:System.Windows.Forms.Binding> объекты в <xref:System.Windows.Forms.ControlBindingsCollection>, к которому можно получить через свойство элемента управления <xref:System.Windows.Forms.Control.DataBindings%2A> свойство. Добавляемые <xref:System.Windows.Forms.Binding> в коллекцию путем вызова <xref:System.Windows.Forms.ControlBindingsCollection.Add%2A> метод, тем самым привязка свойства элемента управления к свойству объекта (или к свойству текущего объекта в списке).  
  
 Можно выполнить простую привязку к любому объекту, который является производным от <xref:System.Windows.Forms.Control?displayProperty=nameWithType> класса, например, следующие элементы управления Windows:  
  
-   <xref:System.Windows.Forms.Button>  
  
-   <xref:System.Windows.Forms.CheckBox>  
  
-   <xref:System.Windows.Forms.CheckedListBox>  
  
-   <xref:System.Windows.Forms.ComboBox>  
  
-   <xref:System.Windows.Forms.DateTimePicker>  
  
-   <xref:System.Windows.Forms.DomainUpDown>  
  
-   <xref:System.Windows.Forms.GroupBox>  
  
-   <xref:System.Windows.Forms.HScrollBar>  
  
-   <xref:System.Windows.Forms.Label>  
  
-   <xref:System.Windows.Forms.LinkLabel>  
  
-   <xref:System.Windows.Forms.ListBox>  
  
-   <xref:System.Windows.Forms.ListView>  
  
-   <xref:System.Windows.Forms.MonthCalendar>  
  
-   <xref:System.Windows.Forms.NumericUpDown>  
  
-   <xref:System.Windows.Forms.PictureBox>  
  
-   <xref:System.Windows.Forms.ProgressBar>  
  
-   <xref:System.Windows.Forms.RadioButton>  
  
-   <xref:System.Windows.Forms.RichTextBox>  
  
-   <xref:System.Windows.Forms.ScrollBar>  
  
-   <xref:System.Windows.Forms.StatusBar>  
  
-   <xref:System.Windows.Forms.TextBox>  
  
-   <xref:System.Windows.Forms.TreeView>  
  
-   <xref:System.Windows.Forms.VScrollBar>  
  
> [!NOTE]
>  Только <xref:System.Windows.Forms.ListControl.SelectedValue%2A> свойство <xref:System.Windows.Forms.ComboBox>, <xref:System.Windows.Forms.CheckedListBox>, и <xref:System.Windows.Forms.ListBox> элемент управления имеет простую привязку.  
  
 <xref:System.Windows.Forms.BindingManagerBase> Класс является абстрактным классом, который управляет всеми <xref:System.Windows.Forms.Binding> объекты для конкретного источника данных и элемента данных. Классы, производные от <xref:System.Windows.Forms.BindingManagerBase> являются <xref:System.Windows.Forms.CurrencyManager> и <xref:System.Windows.Forms.PropertyManager> классы. Как <xref:System.Windows.Forms.Binding> управляется зависит от того <xref:System.Windows.Forms.Binding> привязки списков или привязку свойства. Например, если это привязка списка, можно использовать <xref:System.Windows.Forms.BindingManagerBase> для указания <xref:System.Windows.Forms.BindingManagerBase.Position%2A> в списке; <xref:System.Windows.Forms.BindingManagerBase.Position%2A>, таким образом, определяет, какой элемент (из всех элементов в списке) фактически привязан к элементу управления. Для возвращения соответствующего <xref:System.Windows.Forms.BindingManagerBase>, используйте <xref:System.Windows.Forms.BindingContext>.  
  
 Чтобы добавить новую строку в набор элементов управления, привязанных к тому же <xref:System.Windows.Forms.Binding.DataSource%2A>, использовать <xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> метод <xref:System.Windows.Forms.BindingManagerBase> класса. Используйте <xref:System.Windows.Forms.BindingContext.Item%2A> свойство <xref:System.Windows.Forms.BindingContext> класса для возвращения соответствующего <xref:System.Windows.Forms.CurrencyManager>. Чтобы избежать добавления новой строки, используйте <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> метод.  
  
   
  
## Examples  
 В следующем примере кода создается форма Windows с несколькими элементами управления, демонстрирующие простую привязку данных. В примере создается <xref:System.Data.DataSet> с двумя таблицами `Customers` и `Orders`и <xref:System.Data.DataRelation> с именем `custToOrders`. Четыре элемента управления ( <xref:System.Windows.Forms.DateTimePicker> и три <xref:System.Windows.Forms.TextBox> элементы управления) данные, привязанные к столбцам в таблицах. Для каждого элемента управления в примере, создает и добавляет <xref:System.Windows.Forms.Binding> элемент управления через <xref:System.Windows.Forms.Control.DataBindings%2A> свойство. В примере возвращается <xref:System.Windows.Forms.BindingManagerBase> для каждой таблицы через формы <xref:System.Windows.Forms.BindingContext>. Четыре <xref:System.Windows.Forms.Button> управляет инкремента или декремента <xref:System.Windows.Forms.BindingManagerBase.Position%2A> свойство <xref:System.Windows.Forms.BindingManagerBase> объектов.  
  
 [!code-cpp[Classic Binding Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding Example/CS/source.cs#1)]
 [!code-vb[Classic Binding Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding Example/VB/source.vb#1)]  
 
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.BindingContext" />
    <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
    <altmember cref="T:System.Windows.Forms.ComboBox" />
    <altmember cref="T:System.Windows.Forms.DataGrid" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Binding" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string propertyName, object dataSource, string dataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, object dataSource, string dataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, dataSource As Object, dataMember As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ propertyName, System::Object ^ dataSource, System::String ^ dataMember);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Binding : string * obj * string -&gt; System.Windows.Forms.Binding" Usage="new System.Windows.Forms.Binding (propertyName, dataSource, dataMember)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="dataSource" Type="System.Object" />
        <Parameter Name="dataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Имя привязываемого свойства элемента управления.</param>
        <param name="dataSource">Объект <see cref="T:System.Object" />, представляющий источник данных.</param>
        <param name="dataMember">Привязываемое свойство или список.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Binding" /> класса, выполняющего простую привязку указанного свойства элемента управления к элементу данных источника данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно указать экземпляр любого из следующих классов для источника данных:  
  
-   <xref:System.Data.DataSet>  
  
-   <xref:System.Data.DataTable>  
  
-   <xref:System.Data.DataView>  
  
-   <xref:System.Data.DataViewManager>  
  
-   <xref:System.Windows.Forms.BindingSource>  
  
-   Любой класс, реализующий <xref:System.Collections.IList> интерфейса  
  
-   Любой класс  
  
 См. в разделе <xref:System.Windows.Forms.Binding> класс Дополнительные сведения о создании `dataMember` строка.  
  
 При создании привязки к свойству элемента управления новый <xref:System.Windows.Forms.Binding> проверяет события, представляемые привязанного элемента управления и присоединяет к двум конкретным событиям:  
  
-   <xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>  
  
-   Событие, именуемое *PropertyName* `Changed` (например, <xref:System.Windows.Forms.Control.BackColorChanged?displayProperty=nameWithType>)  
  
 Если вы попытаетесь выполнить привязку к свойству, которое не существует, <xref:System.ArgumentException> возникает когда <xref:System.Windows.Forms.Binding> добавляется к элементу управления <xref:System.Windows.Forms.Control.DataBindings%2A?displayProperty=nameWithType> коллекции.  
  
   
  
## Examples  
 В следующем примере кода примере <xref:System.Windows.Forms.TextBox> управления со столбцом таблицы в <xref:System.Data.DataSet> с именем `myDataSet`. В этом примере предполагается, что вы объявили `myDataSet` в раздел объявлений модуля.  
  
 [!code-cpp[Classic Binding.Binding Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.Binding Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.Binding Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.Binding Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.Binding Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.Binding Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><paramref name="propertyName" /> не является ни допустимым свойством элемента управления, ни пустой строкой (»»).</exception>
        <exception cref="T:System.ArgumentException">Свойство, заданное параметром <paramref name="propertyName" /> не существует на элементе управления.</exception>
        <altmember cref="T:System.Windows.Forms.BindingsCollection" />
        <altmember cref="T:System.Windows.Forms.CurrencyManager" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string propertyName, object dataSource, string dataMember, bool formattingEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, object dataSource, string dataMember, bool formattingEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, dataSource As Object, dataMember As String, formattingEnabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ propertyName, System::Object ^ dataSource, System::String ^ dataMember, bool formattingEnabled);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Binding : string * obj * string * bool -&gt; System.Windows.Forms.Binding" Usage="new System.Windows.Forms.Binding (propertyName, dataSource, dataMember, formattingEnabled)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSource" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataMember" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formattingEnabled" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="propertyName">Имя привязываемого свойства элемента управления.</param>
        <param name="dataSource">Объект <see cref="T:System.Object" />, представляющий источник данных.</param>
        <param name="dataMember">Привязываемое свойство или список.</param>
        <param name="formattingEnabled">Значение <see langword="true" /> для форматирования отображаемых данных, в противном случае — значение <see langword="false" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Binding" /> класс, который выполняет привязку указанного свойства элемента управления к элементу данных источника данных и при необходимости включает применение форматирования.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Свойство, заданное параметром <paramref name="propertyName" /> не существует на элементе управления.  
  
-или- 
Свойство доступно только для чтения.</exception>
        <exception cref="T:System.Exception">Форматирование отключено и <paramref name="propertyName" /> не является ни допустимым свойством элемента управления, ни пустой строкой (»»).</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string propertyName, object dataSource, string dataMember, bool formattingEnabled, System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, object dataSource, string dataMember, bool formattingEnabled, valuetype System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String,System.Boolean,System.Windows.Forms.DataSourceUpdateMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ propertyName, System::Object ^ dataSource, System::String ^ dataMember, bool formattingEnabled, System::Windows::Forms::DataSourceUpdateMode dataSourceUpdateMode);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Binding : string * obj * string * bool * System.Windows.Forms.DataSourceUpdateMode -&gt; System.Windows.Forms.Binding" Usage="new System.Windows.Forms.Binding (propertyName, dataSource, dataMember, formattingEnabled, dataSourceUpdateMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSource" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataMember" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formattingEnabled" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSourceUpdateMode" Type="System.Windows.Forms.DataSourceUpdateMode" Index="4" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="propertyName">Имя привязываемого свойства элемента управления.</param>
        <param name="dataSource">Объект <see cref="T:System.Object" />, представляющий источник данных.</param>
        <param name="dataMember">Привязываемое свойство или список.</param>
        <param name="formattingEnabled">Значение <see langword="true" /> для форматирования отображаемых данных, в противном случае — значение <see langword="false" />.</param>
        <param name="dataSourceUpdateMode">Одно из значений перечисления <see cref="T:System.Windows.Forms.DataSourceUpdateMode" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Binding" /> , выполняющего привязку указанного свойства элемента управления к элементу данных заданного источника данных. При необходимости включает форматирование и выполняет распространение значений в источник данных на основе заданного значения параметра обновления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно указать экземпляр любого из следующих классов для источника данных:  
  
-   <xref:System.Data.DataSet>  
  
-   <xref:System.Data.DataTable>  
  
-   <xref:System.Data.DataView>  
  
-   <xref:System.Data.DataViewManager>  
  
-   <xref:System.Windows.Forms.BindingSource>  
  
-   Любой класс, реализующий <xref:System.Collections.IList> интерфейса  
  
-   Любой класс  
  
 См. в разделе <xref:System.Windows.Forms.Binding> класс Дополнительные сведения о создании `dataMember` строка.  
  
 При создании привязки к свойству элемента управления новый <xref:System.Windows.Forms.Binding> проверяет события, представляемые привязанного элемента управления и присоединяет к двум конкретным событиям:  
  
-   <xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>.  
  
-   Событие, именуемое *PropertyName* `Changed` (например, <xref:System.Windows.Forms.Control.BackColorChanged?displayProperty=nameWithType>)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Свойство, заданное параметром <paramref name="propertyName" /> не существует на элементе управления.  
  
-или- 
Данные источника данных элемента или элемента управления свойство или указан связаны с другой привязкой в коллекции.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string propertyName, object dataSource, string dataMember, bool formattingEnabled, System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, object dataSource, string dataMember, bool formattingEnabled, valuetype System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String,System.Boolean,System.Windows.Forms.DataSourceUpdateMode,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ propertyName, System::Object ^ dataSource, System::String ^ dataMember, bool formattingEnabled, System::Windows::Forms::DataSourceUpdateMode dataSourceUpdateMode, System::Object ^ nullValue);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Binding : string * obj * string * bool * System.Windows.Forms.DataSourceUpdateMode * obj -&gt; System.Windows.Forms.Binding" Usage="new System.Windows.Forms.Binding (propertyName, dataSource, dataMember, formattingEnabled, dataSourceUpdateMode, nullValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSource" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataMember" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formattingEnabled" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSourceUpdateMode" Type="System.Windows.Forms.DataSourceUpdateMode" Index="4" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="nullValue" Type="System.Object" Index="5" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="propertyName">Имя привязываемого свойства элемента управления.</param>
        <param name="dataSource">Объект <see cref="T:System.Object" />, представляющий источник данных.</param>
        <param name="dataMember">Привязываемое свойство или список.</param>
        <param name="formattingEnabled">Значение <see langword="true" /> для форматирования отображаемых данных, в противном случае — значение <see langword="false" />.</param>
        <param name="dataSourceUpdateMode">Одно из значений перечисления <see cref="T:System.Windows.Forms.DataSourceUpdateMode" />.</param>
        <param name="nullValue"><see cref="T:System.Object" /> Применяемый в свойство привязанного элемента управления, если значение источника данных равно <see cref="T:System.DBNull" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Binding" /> , выполняющего привязку указанного свойства элемента управления к указанным данным членом указанного источника данных. При необходимости включает форматирование, распространяет значения в источник данных, в зависимости от заданного параметра обновления и присваивает свойству указанное значение при <see cref="T:System.DBNull" /> возвращается из источника данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно указать экземпляр любого из следующих классов для источника данных:  
  
-   <xref:System.Data.DataSet>  
  
-   <xref:System.Data.DataTable>  
  
-   <xref:System.Data.DataView>  
  
-   <xref:System.Data.DataViewManager>  
  
-   <xref:System.Windows.Forms.BindingSource>  
  
-   Любой класс, реализующий <xref:System.Collections.IList> интерфейса  
  
-   Любой класс  
  
 См. в разделе <xref:System.Windows.Forms.Binding> класс Дополнительные сведения о создании `dataMember` строка.  
  
 При создании привязки к свойству элемента управления новый <xref:System.Windows.Forms.Binding> проверяет события, представляемые привязанного элемента управления и присоединяет к двум конкретным событиям:  
  
-   <xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>  
  
-   Событие, именуемое *PropertyName* `Changed` (например, <xref:System.Windows.Forms.Control.BackColorChanged?displayProperty=nameWithType>)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Свойство, заданное параметром <paramref name="propertyName" /> не существует на элементе управления.  
  
-или- 
Данные источника данных элемента или элемента управления свойство или указан связаны с другой привязкой в коллекции.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string propertyName, object dataSource, string dataMember, bool formattingEnabled, System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue, string formatString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, object dataSource, string dataMember, bool formattingEnabled, valuetype System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue, string formatString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String,System.Boolean,System.Windows.Forms.DataSourceUpdateMode,System.Object,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ propertyName, System::Object ^ dataSource, System::String ^ dataMember, bool formattingEnabled, System::Windows::Forms::DataSourceUpdateMode dataSourceUpdateMode, System::Object ^ nullValue, System::String ^ formatString);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Binding : string * obj * string * bool * System.Windows.Forms.DataSourceUpdateMode * obj * string -&gt; System.Windows.Forms.Binding" Usage="new System.Windows.Forms.Binding (propertyName, dataSource, dataMember, formattingEnabled, dataSourceUpdateMode, nullValue, formatString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSource" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataMember" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formattingEnabled" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSourceUpdateMode" Type="System.Windows.Forms.DataSourceUpdateMode" Index="4" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="nullValue" Type="System.Object" Index="5" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formatString" Type="System.String" Index="6" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="propertyName">Имя привязываемого свойства элемента управления.</param>
        <param name="dataSource">Объект <see cref="T:System.Object" />, представляющий источник данных.</param>
        <param name="dataMember">Привязываемое свойство или список.</param>
        <param name="formattingEnabled">Значение <see langword="true" /> для форматирования отображаемых данных, в противном случае — значение <see langword="false" />.</param>
        <param name="dataSourceUpdateMode">Одно из значений перечисления <see cref="T:System.Windows.Forms.DataSourceUpdateMode" />.</param>
        <param name="nullValue"><see cref="T:System.Object" /> Применяемый в свойство привязанного элемента управления, если значение источника данных равно <see cref="T:System.DBNull" />.</param>
        <param name="formatString">Один или несколько знаков описателя формата, определяющих способ отображения значения.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Binding" /> , выполняющего привязку указанного свойства элемента управления к элементу данных заданного источника данных. При необходимости включает форматирование с заданной строкой форматирования; распространяет значения в источник данных, в зависимости от заданного параметра обновления; и присваивает свойству указанное значение при <see cref="T:System.DBNull" /> возвращается из источника данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно указать экземпляр любого из следующих классов для источника данных:  
  
-   <xref:System.Data.DataSet>  
  
-   <xref:System.Data.DataTable>  
  
-   <xref:System.Data.DataView>  
  
-   <xref:System.Data.DataViewManager>  
  
-   <xref:System.Windows.Forms.BindingSource>  
  
-   Любой класс, реализующий <xref:System.Collections.IList> интерфейса  
  
-   Любой класс  
  
 См. в разделе <xref:System.Windows.Forms.Binding> класс Дополнительные сведения о создании `dataMember` строка.  
  
 При создании привязки к свойству элемента управления новый <xref:System.Windows.Forms.Binding> проверяет события, представляемые привязанного элемента управления и присоединяет к двум конкретным событиям:  
  
-   <xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>  
  
-   Событие, именуемое *PropertyName* `Changed` (например, <xref:System.Windows.Forms.Control.BackColorChanged?displayProperty=nameWithType>)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Свойство, заданное параметром <paramref name="propertyName" /> не существует на элементе управления.  
  
-или- 
Данные источника данных элемента или элемента управления свойство или указан связаны с другой привязкой в коллекции.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string propertyName, object dataSource, string dataMember, bool formattingEnabled, System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue, string formatString, IFormatProvider formatInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, object dataSource, string dataMember, bool formattingEnabled, valuetype System.Windows.Forms.DataSourceUpdateMode dataSourceUpdateMode, object nullValue, string formatString, class System.IFormatProvider formatInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.#ctor(System.String,System.Object,System.String,System.Boolean,System.Windows.Forms.DataSourceUpdateMode,System.Object,System.String,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ propertyName, System::Object ^ dataSource, System::String ^ dataMember, bool formattingEnabled, System::Windows::Forms::DataSourceUpdateMode dataSourceUpdateMode, System::Object ^ nullValue, System::String ^ formatString, IFormatProvider ^ formatInfo);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Binding : string * obj * string * bool * System.Windows.Forms.DataSourceUpdateMode * obj * string * IFormatProvider -&gt; System.Windows.Forms.Binding" Usage="new System.Windows.Forms.Binding (propertyName, dataSource, dataMember, formattingEnabled, dataSourceUpdateMode, nullValue, formatString, formatInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSource" Type="System.Object" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataMember" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formattingEnabled" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dataSourceUpdateMode" Type="System.Windows.Forms.DataSourceUpdateMode" Index="4" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="nullValue" Type="System.Object" Index="5" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formatString" Type="System.String" Index="6" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="formatInfo" Type="System.IFormatProvider" Index="7" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="propertyName">Имя привязываемого свойства элемента управления.</param>
        <param name="dataSource">Объект <see cref="T:System.Object" />, представляющий источник данных.</param>
        <param name="dataMember">Привязываемое свойство или список.</param>
        <param name="formattingEnabled">Значение <see langword="true" /> для форматирования отображаемых данных, в противном случае — значение <see langword="false" />.</param>
        <param name="dataSourceUpdateMode">Одно из значений перечисления <see cref="T:System.Windows.Forms.DataSourceUpdateMode" />.</param>
        <param name="nullValue"><see cref="T:System.Object" /> Применяемый в свойство привязанного элемента управления, если значение источника данных равно <see cref="T:System.DBNull" />.</param>
        <param name="formatString">Один или несколько знаков описателя формата, определяющих способ отображения значения.</param>
        <param name="formatInfo">Реализация <see cref="T:System.IFormatProvider" /> для переопределения стандартного поведения форматирования.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Binding" /> класса с помощью указанного свойства элемента управления к элементу данных заданного источника данных. При необходимости включает форматирование с заданной строкой форматирования; распространяет значения в источник данных, в зависимости от заданного параметра обновления; включает форматирование с заданной строкой форматирования; присваивает свойству указанное значение при <see cref="T:System.DBNull" /> возвращаются из источника данных; и задает заданный поставщик формата.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно указать экземпляр любого из следующих классов для источника данных:  
  
-   <xref:System.Data.DataSet>  
  
-   <xref:System.Data.DataTable>  
  
-   <xref:System.Data.DataView>  
  
-   <xref:System.Data.DataViewManager>  
  
-   <xref:System.Windows.Forms.BindingSource>  
  
-   Любой класс, реализующий <xref:System.Collections.IList> интерфейса  
  
-   Любой класс  
  
 См. в разделе <xref:System.Windows.Forms.Binding> класс Дополнительные сведения о создании `dataMember` строка.  
  
 При создании привязки к свойству элемента управления новый <xref:System.Windows.Forms.Binding> проверяет события, представляемые привязанного элемента управления и присоединяет к двум конкретным событиям:  
  
-   <xref:System.Windows.Forms.Control.Validating?displayProperty=nameWithType>  
  
-   Событие, именуемое *PropertyName* `Changed` (например, <xref:System.Windows.Forms.Control.BackColorChanged?displayProperty=nameWithType>)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Свойство, заданное параметром <paramref name="propertyName" /> не существует на элементе управления.  
  
-или- 
Данные источника данных элемента или элемента управления свойство или указан связаны с другой привязкой в коллекции.</exception>
      </Docs>
    </Member>
    <Member MemberName="BindableComponent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IBindableComponent BindableComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IBindableComponent BindableComponent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.BindableComponent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindableComponent As IBindableComponent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IBindableComponent ^ BindableComponent { System::Windows::Forms::IBindableComponent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindableComponent : System.Windows.Forms.IBindableComponent" Usage="System.Windows.Forms.Binding.BindableComponent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IBindableComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает элемент управления <see cref="T:System.Windows.Forms.Binding" /> связан.</summary>
        <value><see cref="T:System.Windows.Forms.IBindableComponent" /> <see cref="T:System.Windows.Forms.Binding" /> Связан.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingComplete">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingCompleteEventHandler BindingComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingCompleteEventHandler BindingComplete" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Binding.BindingComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BindingComplete As BindingCompleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingCompleteEventHandler ^ BindingComplete;" />
      <MemberSignature Language="F#" Value="member this.BindingComplete : System.Windows.Forms.BindingCompleteEventHandler " Usage="member this.BindingComplete : System.Windows.Forms.BindingCompleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingCompleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при <see cref="P:System.Windows.Forms.Binding.FormattingEnabled" /> свойству <see langword="true" /> и операциях привязки к завершается, например при передаче данных из элемента управления к источнику данных или наоборот</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие появляется при выполнении любого из следующих условий, если <xref:System.Windows.Forms.Binding.FormattingEnabled%2A> — `true`:  
  
-   Данные из источника данных помещается в свойство элемента управления.  
  
-   Данные из свойства элемента управления помещается в источнике данных.  
  
 Это событие возникает по завершении этих операций, независимо от состояния завершения. Например, если операции привязки привязывает значение null для <xref:System.Windows.Forms.DateTimePicker.Value%2A> свойство, создается исключение, но <xref:System.Windows.Forms.Binding.BindingComplete> событие по-прежнему возникает. Обработчик этого события может предпринять соответствующие действия, на основе на успех, ошибка или исключения во время процесса привязки с помощью проверки <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> свойство <xref:System.Windows.Forms.BindingCompleteEventArgs> параметр.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано, как обрабатывать <xref:System.Windows.Forms.Binding.BindingComplete> событий.  
  
 [!code-cpp[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Binding.FormattingEnabled" />
        <altmember cref="M:System.Windows.Forms.Binding.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BindingManagerBase">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingManagerBase BindingManagerBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.BindingManagerBase BindingManagerBase" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.BindingManagerBase" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingManagerBase As BindingManagerBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BindingManagerBase ^ BindingManagerBase { System::Windows::Forms::BindingManagerBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingManagerBase : System.Windows.Forms.BindingManagerBase" Usage="System.Windows.Forms.Binding.BindingManagerBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingManagerBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Windows.Forms.BindingManagerBase" /> для данного объекта <see cref="T:System.Windows.Forms.Binding" />.</summary>
        <value><see cref="T:System.Windows.Forms.BindingManagerBase" /> , Управляющий объектом <see cref="T:System.Windows.Forms.Binding" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Windows.Forms.BindingManagerBase> для прохода по списку привязкой к данным путем увеличения или уменьшения <xref:System.Windows.Forms.BindingManagerBase.Position%2A> свойство. <xref:System.Windows.Forms.BindingManagerBase> Класс является абстрактным. <xref:System.Windows.Forms.CurrencyManager> Наследует класс, который управляет привязкой к данным списков, <xref:System.Windows.Forms.BindingManagerBase> класса.  
  
   
  
## Examples  
 В следующем коде получается пример <xref:System.Windows.Forms.BindingManagerBase> из каждого <xref:System.Windows.Forms.Binding> на форму и печатает <xref:System.Windows.Forms.BindingManagerBase.Position%2A> свойство для каждого <xref:System.Windows.Forms.BindingManagerBase>.  
  
 [!code-cpp[Classic Binding.BindingManagerBase Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.BindingManagerBase Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.BindingManagerBase Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.BindingManagerBase Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.BindingManagerBase Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.BindingManagerBase Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingMemberInfo">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingMemberInfo BindingMemberInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BindingMemberInfo BindingMemberInfo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.BindingMemberInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingMemberInfo As BindingMemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BindingMemberInfo BindingMemberInfo { System::Windows::Forms::BindingMemberInfo get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingMemberInfo : System.Windows.Forms.BindingMemberInfo" Usage="System.Windows.Forms.Binding.BindingMemberInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingMemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект, содержащий сведения о данной привязке, основанные на <paramref name="dataMember" /> параметр в <see cref="Overload:System.Windows.Forms.Binding.#ctor" /> конструктор.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.BindingMemberInfo" /> , содержащий сведения об этом <see cref="T:System.Windows.Forms.Binding" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.BindingMemberInfo> Создается на основе `dataMember` строка, передаваемая <xref:System.Windows.Forms.Binding.%23ctor%2A> конструктор.  
  
   
  
## Examples  
 В следующем коде получается пример <xref:System.Windows.Forms.BindingMemberInfo> каждого <xref:System.Windows.Forms.Binding> на форме и печатает <xref:System.Windows.Forms.BindingMemberInfo.BindingPath%2A>, <xref:System.Windows.Forms.BindingMemberInfo.BindingField%2A>, и <xref:System.Windows.Forms.BindingMemberInfo.BindingMember%2A> значения свойств для этого <xref:System.Windows.Forms.Binding>.  
  
 [!code-cpp[Classic Binding.BindingMemberInfo Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.BindingMemberInfo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.BindingMemberInfo Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.BindingMemberInfo Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.BindingMemberInfo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.BindingMemberInfo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.BindingsCollection" />
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Control" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.Control" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Control As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ Control { System::Windows::Forms::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Control : System.Windows.Forms.Control" Usage="System.Windows.Forms.Binding.Control" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает элемент управления, которому принадлежит данная привязка.</summary>
        <value><see cref="T:System.Windows.Forms.Control" /> , К которому принадлежит привязка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем коде получается пример <xref:System.Windows.Forms.BindingManagerBase> для конкретного источника данных и вывод сведений о каждом <xref:System.Windows.Forms.Binding.Control%2A> свойства, привязанного к источнику данных. В примере используется <xref:System.Windows.Forms.BindingManagerBase.Bindings%2A> свойство <xref:System.Windows.Forms.BindingManagerBase> для получения всех элементов управления.  
  
 [!code-cpp[Classic Binding.Control Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.Control Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.Control Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.Control Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.Control Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.Control Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlUpdateMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ControlUpdateMode ControlUpdateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ControlUpdateMode ControlUpdateMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.ControlUpdateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlUpdateMode As ControlUpdateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ControlUpdateMode ControlUpdateMode { System::Windows::Forms::ControlUpdateMode get(); void set(System::Windows::Forms::ControlUpdateMode value); };" />
      <MemberSignature Language="F#" Value="member this.ControlUpdateMode : System.Windows.Forms.ControlUpdateMode with get, set" Usage="System.Windows.Forms.Binding.ControlUpdateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlUpdateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает момент распространения изменений, внесенных в источник данных, в свойство привязанного элемента управления.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Windows.Forms.ControlUpdateMode" />. Значение по умолчанию — <see cref="F:System.Windows.Forms.ControlUpdateMode.OnPropertyChanged" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : obj" Usage="System.Windows.Forms.Binding.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает источник данных для этой привязки.</summary>
        <value>Объект <see cref="T:System.Object" />, представляющий источник данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возможные источники данных включают:  
  
-   <xref:System.Data.DataSet>  
  
-   <xref:System.Data.DataTable>  
  
-   <xref:System.Data.DataView>  
  
-   <xref:System.Data.DataViewManager>  
  
-   Любой объект, реализующий <xref:System.Collections.IList> интерфейса  
  
-   Любой объект  
  
   
  
## Examples  
 В следующем примере кода используется <xref:System.Windows.Forms.Binding.DataSource%2A> возвращаемое свойство <xref:System.Data.DataSet>.  
  
 [!code-cpp[Classic Binding.DataSource Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.DataSource Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.DataSource Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.DataSource Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSourceNullValue">
      <MemberSignature Language="C#" Value="public object DataSourceNullValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSourceNullValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.DataSourceNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSourceNullValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSourceNullValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSourceNullValue : obj with get, set" Usage="System.Windows.Forms.Binding.DataSourceNullValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, будут сохранены в источнике данных, если элемент управления имеет значение <see langword="null" /> или пустым.</summary>
        <value><see cref="T:System.Object" /> Храниться в источнике данных, когда свойство элемента управления является пустым или <see langword="null" />. По умолчанию используется <see cref="T:System.DBNull" /> для типов значений и <see langword="null" /> для типов без значений.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать <xref:System.Windows.Forms.Binding.NullValue%2A> свойство, чтобы указать значения, отображаемого в связанный элемент управления, если источник данных содержит <xref:System.DBNull>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Binding.NullValue" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceUpdateMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataSourceUpdateMode DataSourceUpdateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataSourceUpdateMode DataSourceUpdateMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.DataSourceUpdateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSourceUpdateMode As DataSourceUpdateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataSourceUpdateMode DataSourceUpdateMode { System::Windows::Forms::DataSourceUpdateMode get(); void set(System::Windows::Forms::DataSourceUpdateMode value); };" />
      <MemberSignature Language="F#" Value="member this.DataSourceUpdateMode : System.Windows.Forms.DataSourceUpdateMode with get, set" Usage="System.Windows.Forms.Binding.DataSourceUpdateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataSourceUpdateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение момента распространения изменений, внесенных в свойство привязанного элемента управления, в источник данных.</summary>
        <value>Значение, указывающее, когда изменения распространяются. Значение по умолчанию — <see cref="F:System.Windows.Forms.DataSourceUpdateMode.OnValidation" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обратите внимание, что даже если это свойство имеет значение <xref:System.Windows.Forms.DataSourceUpdateMode.Never>, привязка будет обновлять по крайней мере один раз, когда он сначала устанавливается.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ConvertEventHandler Format;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ConvertEventHandler Format" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Binding.Format" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Format As ConvertEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ConvertEventHandler ^ Format;" />
      <MemberSignature Language="F#" Value="member this.Format : System.Windows.Forms.ConvertEventHandler " Usage="member this.Format : System.Windows.Forms.ConvertEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ConvertEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, если свойство элемента управления привязано к значению данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Binding.Format> Событие возникает при передаче данных из источника данных в элементе управления. Можно обрабатывать <xref:System.Windows.Forms.Binding.Format> событий для преобразования неформатированных данных из источника данных в формате данных для отображения. Когда данные извлекаются из элемента управления в источник данных, <xref:System.Windows.Forms.Binding.Parse> событие передается отменить форматирование отображаемое значение, а затем <xref:System.Windows.Forms.Binding.Format> событие возникает для изменения формата данных для отображения. Это гарантирует, что привязанный элемент управления отображает правильно отформатированные данные независимо от того, является ли пользователь вводит форматированном или неформатированном виде данных в элементе управления.  
  
 <xref:System.Windows.Forms.Binding.Format> И <xref:System.Windows.Forms.Binding.Parse> события позволяют создавать пользовательские форматы для отображения данных. Например, если данные в таблице имеют тип <xref:System.Decimal>, можно отобразить данные в формате местной валюте, задав <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> свойство <xref:System.Windows.Forms.ConvertEventArgs> отформатированное значение в <xref:System.Windows.Forms.Binding.Format> событий. Следовательно, необходимо отменить форматирование отображаемого значения в <xref:System.Windows.Forms.Binding.Parse> событий.  
  
 <xref:System.Windows.Forms.Binding.Format> Событие возникает каждый раз, когда <xref:System.Windows.Forms.BindingManagerBase.Current%2A> значение <xref:System.Windows.Forms.BindingManagerBase> изменения, которые включает в себя:  
  
-   При первом привязано свойство.  
  
-   Любое время <xref:System.Windows.Forms.BindingManagerBase.Position%2A> изменения.  
  
-   Каждый раз, когда список с данными сортировки или фильтрации, который является когда <xref:System.Data.DataView> предоставляет список.  
  
 <xref:System.Windows.Forms.Binding.Format> Событие также возникает после <xref:System.Windows.Forms.Binding.Parse> событий. Например когда элемент управления теряет фокус, выполняется разбор его содержимого. Сразу же после этого новые данные, отправляемые в элемент управления <xref:System.Windows.Forms.Binding.Format> событием нового содержимого для форматирования.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода создается <xref:System.Windows.Forms.Binding>, добавляет <xref:System.Windows.Forms.ConvertEventHandler> делегата к обоим <xref:System.Windows.Forms.Binding.Parse> и <xref:System.Windows.Forms.Binding.Format> события и добавляет <xref:System.Windows.Forms.Binding> для <xref:System.Windows.Forms.BindingsCollection> из <xref:System.Windows.Forms.TextBox> управлять через <xref:System.Windows.Forms.Control.DataBindings%2A> свойство. `DecimalToCurrencyString` Делегат события, добавляемого <xref:System.Windows.Forms.Binding.Format> событий, форматирует связанное значение ( <xref:System.Decimal> типа) как денежную единицу с помощью <xref:System.Decimal.ToString%2A> метод. `CurrencyStringToDecimal` Делегат события, добавляемого <xref:System.Windows.Forms.Binding.Parse> событий, преобразует значения, отображаемого элементом управления обратно <xref:System.Decimal> типа.  
  
 В этом примере предполагается наличие <xref:System.Data.DataSet> с именем `ds`.  
  
 [!code-cpp[Classic Binding.Format Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.Format Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.Format Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.Format Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.Format Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.Format Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Binding.Parse" />
        <altmember cref="M:System.Windows.Forms.Binding.OnFormat(System.Windows.Forms.ConvertEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="FormatInfo">
      <MemberSignature Language="C#" Value="public IFormatProvider FormatInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IFormatProvider FormatInfo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.FormatInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property FormatInfo As IFormatProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IFormatProvider ^ FormatInfo { IFormatProvider ^ get(); void set(IFormatProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FormatInfo : IFormatProvider with get, set" Usage="System.Windows.Forms.Binding.FormatInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IFormatProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <see cref="T:System.IFormatProvider" /> , предоставляющий пользовательское поведение форматирования.</summary>
        <value><see cref="T:System.IFormatProvider" /> Реализации, предоставляющий пользовательское поведение форматирования.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Задание этого свойства переопределяет поведение, которое использует форматирования по умолчанию <xref:System.Windows.Forms.Application.CurrentCulture%2A?displayProperty=nameWithType> значение свойства.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatString">
      <MemberSignature Language="C#" Value="public string FormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormatString" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.FormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property FormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FormatString : string with get, set" Usage="System.Windows.Forms.Binding.FormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает символы описателя формата, который определяет способ отображения значения.</summary>
        <value>Строка символов описателя формата, который указывает способ отображения значения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Формат строки должен полностью соответствовать спецификации формата .NET Framework. Дополнительные сведения см. в разделе [типы форматирования в .NET Framework](~/docs/standard/base-types/formatting-types.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormattingEnabled">
      <MemberSignature Language="C#" Value="public bool FormattingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FormattingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.FormattingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property FormattingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FormattingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.FormattingEnabled : bool with get, set" Usage="System.Windows.Forms.Binding.FormattingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, должно ли применяться преобразование типов и форматирование к данным свойствам элемента управления.</summary>
        <value><see langword="true" /> Если включено преобразование типов и форматирование данных свойства элемента управления; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этому свойству присвоить `true` также включает поведение обработки ошибок и вызывает <xref:System.Windows.Forms.Binding.BindingComplete> возникает событие. Обработчик этого события может предпринять соответствующие действия, на основе на успех, ошибка или исключения во время процесса привязки с помощью проверки <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> свойство <xref:System.Windows.Forms.BindingCompleteEventArgs> параметр.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Binding.BindingComplete" />
        <altmember cref="T:System.Windows.Forms.BindingCompleteEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="IsBinding">
      <MemberSignature Language="C#" Value="public bool IsBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBinding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.IsBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBinding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBinding { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBinding : bool" Usage="System.Windows.Forms.Binding.IsBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, активна ли привязка.</summary>
        <value><see langword="true" /> Если привязка активна; в противном случае <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Привязка активна при соблюдении следующих условий:  
  
-   Задаются все его свойства.  
  
-   Пользователь не вызвал <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> или <xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> на <xref:System.Windows.Forms.BindingManagerBase> , <xref:System.Windows.Forms.Binding> принадлежит.  
  
-   Элемент управления, к которому <xref:System.Windows.Forms.Binding> принадлежит будет создана.  
  
   
  
## Examples  
 Следующий код выводит пример <xref:System.Windows.Forms.Binding.PropertyName%2A> и <xref:System.Windows.Forms.Binding.IsBinding%2A> значение для каждого <xref:System.Windows.Forms.Binding> в форме.  
  
 [!code-cpp[Classic Binding.IsBinding Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.IsBinding Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.IsBinding Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.IsBinding Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.IsBinding Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.IsBinding Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NullValue">
      <MemberSignature Language="C#" Value="public object NullValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NullValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.NullValue" />
      <MemberSignature Language="VB.NET" Value="Public Property NullValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NullValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NullValue : obj with get, set" Usage="System.Windows.Forms.Binding.NullValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <see cref="T:System.Object" /> должен быть установлен как свойство элемента управления, если источник данных содержит <see cref="T:System.DBNull" /> значение.</summary>
        <value><see cref="T:System.Object" /> Должен быть установлен как свойство элемента управления, если источник данных содержит <see cref="T:System.DBNull" /> значение. Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Источник данных должен содержать <xref:System.DBNull> для <xref:System.Windows.Forms.Binding.NullValue%2A> свойства быть правильно применены. Если тип источника данных является типом, такие как строковое или целочисленное значение <xref:System.Windows.Forms.Binding.NullValue%2A> свойство будет пропущено. Кроме того <xref:System.Windows.Forms.Binding.NullValue%2A> свойство учитывается, если он становится равным `null`.  
  
 Значение null будут добавляться к источнику данных, если объект имеет значение свойства элемента управления <xref:System.Windows.Forms.Binding.NullValue%2A>. Если <xref:System.Windows.Forms.Binding.NullValue%2A> задано строковое значение сравнения регистр не учитывается.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBindingComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnBindingComplete (System.Windows.Forms.BindingCompleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBindingComplete(class System.Windows.Forms.BindingCompleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBindingComplete (e As BindingCompleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBindingComplete(System::Windows::Forms::BindingCompleteEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBindingComplete : System.Windows.Forms.BindingCompleteEventArgs -&gt; unit&#xA;override this.OnBindingComplete : System.Windows.Forms.BindingCompleteEventArgs -&gt; unit" Usage="binding.OnBindingComplete e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.BindingCompleteEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.Binding.BindingComplete" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.Binding.OnBindingComplete%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.Binding.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.Binding.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnFormat">
      <MemberSignature Language="C#" Value="protected virtual void OnFormat (System.Windows.Forms.ConvertEventArgs cevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormat(class System.Windows.Forms.ConvertEventArgs cevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.OnFormat(System.Windows.Forms.ConvertEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFormat (cevent As ConvertEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFormat(System::Windows::Forms::ConvertEventArgs ^ cevent);" />
      <MemberSignature Language="F#" Value="abstract member OnFormat : System.Windows.Forms.ConvertEventArgs -&gt; unit&#xA;override this.OnFormat : System.Windows.Forms.ConvertEventArgs -&gt; unit" Usage="binding.OnFormat cevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cevent" Type="System.Windows.Forms.ConvertEventArgs" />
      </Parameters>
      <Docs>
        <param name="cevent">Объект <see cref="T:System.Windows.Forms.ConvertEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.Binding.Format" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.Binding.OnFormat%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.Binding.OnFormat(System.Windows.Forms.ConvertEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.Binding.OnFormat(System.Windows.Forms.ConvertEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Windows.Forms.Binding.Format" />
        <altmember cref="M:System.Windows.Forms.Binding.OnParse(System.Windows.Forms.ConvertEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Binding.Parse" />
      </Docs>
    </Member>
    <Member MemberName="OnParse">
      <MemberSignature Language="C#" Value="protected virtual void OnParse (System.Windows.Forms.ConvertEventArgs cevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParse(class System.Windows.Forms.ConvertEventArgs cevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.OnParse(System.Windows.Forms.ConvertEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParse (cevent As ConvertEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParse(System::Windows::Forms::ConvertEventArgs ^ cevent);" />
      <MemberSignature Language="F#" Value="abstract member OnParse : System.Windows.Forms.ConvertEventArgs -&gt; unit&#xA;override this.OnParse : System.Windows.Forms.ConvertEventArgs -&gt; unit" Usage="binding.OnParse cevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cevent" Type="System.Windows.Forms.ConvertEventArgs" />
      </Parameters>
      <Docs>
        <param name="cevent">Объект <see cref="T:System.Windows.Forms.ConvertEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.Binding.Parse" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.Binding.OnParse%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.Binding.OnParse(System.Windows.Forms.ConvertEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.Binding.OnParse(System.Windows.Forms.ConvertEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Windows.Forms.Binding.Format" />
        <altmember cref="M:System.Windows.Forms.Binding.OnFormat(System.Windows.Forms.ConvertEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Binding.Parse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ConvertEventHandler Parse;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ConvertEventHandler Parse" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Binding.Parse" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Parse As ConvertEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ConvertEventHandler ^ Parse;" />
      <MemberSignature Language="F#" Value="member this.Parse : System.Windows.Forms.ConvertEventHandler " Usage="member this.Parse : System.Windows.Forms.ConvertEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ConvertEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении значения элемента управления с привязкой к данным.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Binding.Format> И <xref:System.Windows.Forms.Binding.Parse> события позволяют создавать пользовательские форматы для отображения данных. Например, если данные в таблице имеют тип <xref:System.Decimal>, можно отобразить данные в формате местной валюте, задав <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> свойство <xref:System.Windows.Forms.ConvertEventArgs> отформатированное значение в <xref:System.Windows.Forms.Binding.Format> событий. Следовательно, необходимо отменить форматирование отображаемого значения в <xref:System.Windows.Forms.Binding.Parse> событий.  
  
 <xref:System.Windows.Forms.Binding.Parse> Событие возникает при следующих условиях:  
  
-   После <xref:System.Windows.Forms.Control.Validated> событие <xref:System.Windows.Forms.Control> происходит.  
  
-   Когда <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> метод <xref:System.Windows.Forms.BindingManagerBase> вызывается.  
  
-   Когда <xref:System.Windows.Forms.BindingManagerBase.Current%2A> из <xref:System.Windows.Forms.BindingManagerBase> изменения (другими словами, в том случае, когда <xref:System.Windows.Forms.BindingManagerBase.Position%2A> изменения).  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода создается <xref:System.Windows.Forms.Binding>, добавляет <xref:System.Windows.Forms.ConvertEventHandler> делегата к обоим <xref:System.Windows.Forms.Binding.Parse> и <xref:System.Windows.Forms.Binding.Format> события и добавляет <xref:System.Windows.Forms.Binding> для <xref:System.Windows.Forms.BindingsCollection> из <xref:System.Windows.Forms.TextBox> управлять через <xref:System.Windows.Forms.Control.DataBindings%2A> свойство. `DecimalToCurrencyString` Делегат события, добавляемого <xref:System.Windows.Forms.Binding.Format> событий, форматирует связанное значение ( <xref:System.Decimal> типа) как денежную единицу с помощью <xref:System.Decimal.ToString%2A> метод. `CurrencyStringToDecimal` Делегат события, добавляемого <xref:System.Windows.Forms.Binding.Parse> событий, преобразует значения, отображаемого элементом управления обратно <xref:System.Decimal> типа.  
  
 [!code-cpp[Classic Binding.Parse Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.Parse Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.Parse Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.Parse Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.Parse Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.Parse Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Binding.Format" />
        <altmember cref="M:System.Windows.Forms.Binding.OnParse(System.Windows.Forms.ConvertEventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
      </Docs>
    </Member>
    <Member MemberName="PropertyName">
      <MemberSignature Language="C#" Value="public string PropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Binding.PropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PropertyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyName : string" Usage="System.Windows.Forms.Binding.PropertyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает имя свойства элемента управления с привязкой к данным.</summary>
        <value>Имя свойства элемента управления, к которому нужно выполнить привязку.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Windows.Forms.Binding.PropertyName%2A> для указания свойства элемента управления, который требуется привязать к списку в источнике данных. Чаще всего, такие как привязка свойства отображения <xref:System.Windows.Forms.Control.Text%2A> свойство <xref:System.Windows.Forms.TextBox> элемента управления. Тем не менее поскольку можно привязать любое свойство элемента управления, возможность программно создавать элементы управления во время выполнения, используя данные из базы данных.  
  
   
  
## Examples  
 Следующий код выводит пример <xref:System.Windows.Forms.Binding.PropertyName%2A> значения каждого <xref:System.Windows.Forms.Binding> для каждого элемента управления в форме.  
  
 [!code-cpp[Classic Binding.PropertyName Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Binding.PropertyName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Binding.PropertyName Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Binding.PropertyName Example/CS/source.cs#1)]
 [!code-vb[Classic Binding.PropertyName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Binding.PropertyName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadValue">
      <MemberSignature Language="C#" Value="public void ReadValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.ReadValue" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadValue ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadValue();" />
      <MemberSignature Language="F#" Value="member this.ReadValue : unit -&gt; unit" Usage="binding.ReadValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Присваивает свойству элемента управления значение, считанное из источника данных.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public void WriteValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Binding.WriteValue" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteValue ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteValue();" />
      <MemberSignature Language="F#" Value="member this.WriteValue : unit -&gt; unit" Usage="binding.WriteValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Считывает текущее значение из свойства элемента управления и записывает его в источник данных.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>