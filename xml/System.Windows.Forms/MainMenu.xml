<Type Name="MainMenu" FullName="System.Windows.Forms.MainMenu">
  <Metadata><Meta Name="ms.openlocfilehash" Value="da035ae924bf7da56890ace83630320858e56563" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75178593" /></Metadata><TypeSignature Language="C#" Value="public class MainMenu : System.Windows.Forms.Menu" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MainMenu extends System.Windows.Forms.Menu" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.MainMenu" />
  <TypeSignature Language="VB.NET" Value="Public Class MainMenu&#xA;Inherits Menu" />
  <TypeSignature Language="C++ CLI" Value="public ref class MainMenu : System::Windows::Forms::Menu" />
  <TypeSignature Language="F#" Value="type MainMenu = class&#xA;    inherit Menu" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Menu</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms.MainMenu")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет структуру меню формы. Хотя элемент управления <see cref="T:System.Windows.Forms.MenuStrip" /> заменяет элемент управления <see cref="T:System.Windows.Forms.MainMenu" /> предыдущих версий и расширяет его функциональные возможности, однако при необходимости элемент управления <see cref="T:System.Windows.Forms.MainMenu" /> можно сохранить для обратной совместимости и использования в будущем.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Элемент управления <xref:System.Windows.Forms.MainMenu> представляет контейнер для структуры меню формы. Меню состоит из <xref:System.Windows.Forms.MenuItem> объектов, представляющих отдельные команды меню в структуре меню. Каждый <xref:System.Windows.Forms.MenuItem> может быть командой для приложения или родительским меню для других пунктов подменю. Чтобы привязать <xref:System.Windows.Forms.MainMenu> к <xref:System.Windows.Forms.Form>, который будет отображать его, назначьте <xref:System.Windows.Forms.MainMenu> свойству <xref:System.Windows.Forms.Form.Menu%2A> <xref:System.Windows.Forms.Form>.  
  
 Для приложений, которые будут поддерживать несколько языков, можно использовать свойство <xref:System.Windows.Forms.MainMenu.RightToLeft%2A>, чтобы отобразить текст меню справа налево для поддержки языков, таких как арабский.  
  
 Можно создать различные <xref:System.Windows.Forms.MainMenu> объекты для представления различных структур меню для формы. Если вы хотите повторно использовать структуру меню, содержащуюся в конкретном <xref:System.Windows.Forms.MainMenu>, можно использовать его метод <xref:System.Windows.Forms.MainMenu.CloneMenu%2A> для создания копии. После создания копии структуры меню можно внести соответствующие изменения в новую структуру меню.  
  
> [!NOTE]
>  Вырезание и вставленные элементы меню из одной формы в другую в конструкторе могут не работать должным образом, если в форме, в которую вставляется элемент меню, не определено ни одного элемента.  
  
   
  
## Examples  
 Следующий пример кода создает <xref:System.Windows.Forms.MainMenu>, присваивает <xref:System.Windows.Forms.MainMenu> два объекта <xref:System.Windows.Forms.MenuItem> и привязывает его к форме. В этом примере необходимо создать <xref:System.Windows.Forms.Form> с именем `Form1`.  
  
 [!code-cpp[Classic MainMenu.MainMenu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MainMenu.MainMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MainMenu.MainMenu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MainMenu.MainMenu Example/CS/source.cs#1)]
 [!code-vb[Classic MainMenu.MainMenu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MainMenu.MainMenu Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.MenuItem" />
    <altmember cref="M:System.Windows.Forms.Menu.MenuItemCollection.Add(System.String)" />
    <altmember cref="P:System.Windows.Forms.Form.Menu" />
    <altmember cref="P:System.Windows.Forms.Menu.MenuItems" />
    <altmember cref="T:System.Windows.Forms.MenuStrip" />
    <altmember cref="T:System.Windows.Forms.ContextMenuStrip" />
    <related type="Article" href="https://msdn.microsoft.com/library/e361bf98-eed8-4ed3-9dfb-5a2e865e3ce6">Элемент управления MenuStrip (Windows Forms)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализация нового экземпляра класса <see cref="T:System.Windows.Forms.MainMenu" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MainMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MainMenu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MainMenu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.MainMenu" /> без каких-либо заданных элементов меню.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта версия конструктора создает <xref:System.Windows.Forms.MainMenu> без каких-либо заданных <xref:System.Windows.Forms.MenuItem> объектов. Чтобы добавить пункты меню в элемент управления, используйте другую версию этого конструктора, принимающую в качестве параметра массив <xref:System.Windows.Forms.MenuItem> объектов, или используйте метод <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> свойства <xref:System.Windows.Forms.Menu.MenuItems%2A>.  
  
   
  
## Examples  
 Следующий пример кода создает <xref:System.Windows.Forms.MainMenu>, присваивает <xref:System.Windows.Forms.MainMenu> два объекта <xref:System.Windows.Forms.MenuItem> и привязывает его к форме. В этом примере необходимо создать <xref:System.Windows.Forms.Form> с именем `Form1`.  
  
 [!code-cpp[Classic MainMenu.MainMenu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MainMenu.MainMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MainMenu.MainMenu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MainMenu.MainMenu Example/CS/source.cs#1)]
 [!code-vb[Classic MainMenu.MainMenu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MainMenu.MainMenu Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
        <altmember cref="M:System.Windows.Forms.Menu.MenuItemCollection.Add(System.String)" />
        <altmember cref="P:System.Windows.Forms.Form.Menu" />
        <altmember cref="P:System.Windows.Forms.Menu.MenuItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MainMenu (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MainMenu.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MainMenu(System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.MainMenu : System.ComponentModel.IContainer -&gt; System.Windows.Forms.MainMenu" Usage="new System.Windows.Forms.MainMenu container" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="container"><see cref="T:System.ComponentModel.IContainer" />, представляющий контейнер для <see cref="T:System.Windows.Forms.MainMenu" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.MainMenu" /> с указанным контейнером.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MainMenu (System.Windows.Forms.MenuItem[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.MenuItem[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MainMenu.#ctor(System.Windows.Forms.MenuItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As MenuItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MainMenu(cli::array &lt;System::Windows::Forms::MenuItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.MainMenu : System.Windows.Forms.MenuItem[] -&gt; System.Windows.Forms.MainMenu" Usage="new System.Windows.Forms.MainMenu items" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="items" Type="System.Windows.Forms.MenuItem[]" />
      </Parameters>
      <Docs>
        <param name="items">Массив объектов <see cref="T:System.Windows.Forms.MenuItem" />, который будет добавлен к <see cref="T:System.Windows.Forms.MainMenu" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.MainMenu" /> с указанным набором объектов <see cref="T:System.Windows.Forms.MenuItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор можно использовать для назначения массива <xref:System.Windows.Forms.MenuItem> объектов <xref:System.Windows.Forms.MainMenu> во время его создания. После создания <xref:System.Windows.Forms.MainMenu> можно добавить в <xref:System.Windows.Forms.MainMenu> дополнительные объекты <xref:System.Windows.Forms.MenuItem>, используя метод <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> свойства <xref:System.Windows.Forms.Menu.MenuItems%2A>.  
  
   
  
## Examples  
 В следующем примере кода создается <xref:System.Windows.Forms.MainMenu>и в <xref:System.Windows.Forms.MainMenu> назначается два <xref:System.Windows.Forms.MenuItem>ных объекта с помощью этой версии конструктора. Затем в примере выполняется привязка <xref:System.Windows.Forms.MainMenu> к <xref:System.Windows.Forms.Form>. В этом примере необходимо создать <xref:System.Windows.Forms.Form> с именем `Form1`.  
  
 [!code-cpp[Classic MainMenu.MainMenu1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MainMenu.MainMenu1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MainMenu.MainMenu1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MainMenu.MainMenu1 Example/CS/source.cs#1)]
 [!code-vb[Classic MainMenu.MainMenu1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MainMenu.MainMenu1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
      </Docs>
    </Member>
    <Member MemberName="CloneMenu">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.MainMenu CloneMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.MainMenu CloneMenu() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MainMenu.CloneMenu" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CloneMenu () As MainMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::MainMenu ^ CloneMenu();" />
      <MemberSignature Language="F#" Value="override this.CloneMenu : unit -&gt; System.Windows.Forms.MainMenu" Usage="mainMenu.CloneMenu " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MainMenu</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает новый объект <see cref="T:System.Windows.Forms.MainMenu" />, который является дубликатом текущего объекта <see cref="T:System.Windows.Forms.MainMenu" />.</summary>
        <returns>Объект <see cref="T:System.Windows.Forms.MainMenu" />, представляющий копию меню.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод можно использовать для создания копии структуры меню, хранящейся в <xref:System.Windows.Forms.MainMenu>. Этот метод можно использовать для повторного использования структуры меню, хранящейся в <xref:System.Windows.Forms.MainMenu>, в качестве основы для нового <xref:System.Windows.Forms.MainMenu>. Например, если вы хотите создать структуру меню, которая содержит те же элементы меню, что и существующий <xref:System.Windows.Forms.MainMenu> но в нее также добавлены дополнительные объекты <xref:System.Windows.Forms.MenuItem>, можно использовать метод <xref:System.Windows.Forms.MainMenu.CloneMenu%2A>, чтобы создать копию исходного <xref:System.Windows.Forms.MainMenu>, а затем добавить новые объекты <xref:System.Windows.Forms.MenuItem> в клонированную <xref:System.Windows.Forms.MainMenu>.  
  
   
  
## Examples  
 В следующем примере кода используется метод <xref:System.Windows.Forms.MainMenu.GetForm%2A>, чтобы определить, является ли <xref:System.Windows.Forms.MainMenu> родительским для формы. Если вызов в примере кода для <xref:System.Windows.Forms.MainMenu.GetForm%2A> не возвращает `null`, код копирует структуру меню <xref:System.Windows.Forms.MainMenu> с помощью метода <xref:System.Windows.Forms.MainMenu.CloneMenu%2A>. Затем код присваивает свойству <xref:System.Windows.Forms.MainMenu.RightToLeft%2A> значение true в новой копии <xref:System.Windows.Forms.MainMenu>, чтобы создать <xref:System.Windows.Forms.MainMenu>, который можно использовать для языков, поддерживающих текст справа налево. В этом примере необходимо создать <xref:System.Windows.Forms.MainMenu> с именем `mainMenu1`.  
  
 [!code-cpp[Classic MainMenu.GetForm Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MainMenu.GetForm Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MainMenu.GetForm Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MainMenu.GetForm Example/CS/source.cs#1)]
 [!code-vb[Classic MainMenu.GetForm Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MainMenu.GetForm Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public event EventHandler Collapse;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Collapse" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MainMenu.Collapse" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Collapse As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Collapse;" />
      <MemberSignature Language="F#" Value="member this.Collapse : EventHandler " Usage="member this.Collapse : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при сворачивании главного меню.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В этом примере обработчик событий сообщает о возникновении события <xref:System.Windows.Forms.MainMenu.Collapse>. Этот отчет поможет вам узнать, когда происходит событие и может помочь при отладке. Чтобы сообщить о нескольких событиях или событиях, которые происходят часто, попробуйте заменить <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> или добавив сообщение в многострочный <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы выполнить пример кода, вставьте его в проект, содержащий экземпляр типа <xref:System.Windows.Forms.MainMenu> с именем `MainMenu1`. Затем убедитесь, что обработчик событий связан с событием <xref:System.Windows.Forms.MainMenu.Collapse>.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#483](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#483)]
 [!code-vb[System.Windows.Forms.EventExamples#483](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#483)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMenuHandle">
      <MemberSignature Language="C#" Value="protected override IntPtr CreateMenuHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance native int CreateMenuHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MainMenu.CreateMenuHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateMenuHandle () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IntPtr CreateMenuHandle();" />
      <MemberSignature Language="F#" Value="override this.CreateMenuHandle : unit -&gt; nativeint" Usage="mainMenu.CreateMenuHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает новый дескриптор для меню.</summary>
        <returns>Дескриптор для меню, если метод выполнен успешно; в противном случае — <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Menu.CreateMenuHandle" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MainMenu.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="mainMenu.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
        <summary>Уничтожает ресурсы (кроме памяти), используемые классом <see cref="T:System.Windows.Forms.MainMenu" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите метод <xref:System.Windows.Forms.MainMenu.Dispose%2A> по окончании использования <xref:System.Windows.Forms.MainMenu>. Метод <xref:System.Windows.Forms.MainMenu.Dispose%2A> оставляет объект <xref:System.Windows.Forms.MainMenu> в состоянии, непригодном для использования. После вызова <xref:System.Windows.Forms.MainMenu.Dispose%2A>необходимо освободить все ссылки на <xref:System.Windows.Forms.MainMenu>, чтобы память, которую он занимают, могла быть освобождена при сборке мусора.  
  
> [!NOTE]
>  Всегда вызывайте метод <xref:System.Windows.Forms.MainMenu.Dispose%2A> перед освобождением последней ссылки на <xref:System.Windows.Forms.MainMenu>. В противном случае ресурсы, которые использует <xref:System.Windows.Forms.MainMenu>, не будут освобождены до тех пор, пока сборка мусора не вызовет деструктор объекта <xref:System.Windows.Forms.MainMenu>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetForm">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form GetForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.Form GetForm() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MainMenu.GetForm" />
      <MemberSignature Language="VB.NET" Value="Public Function GetForm () As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::Form ^ GetForm();" />
      <MemberSignature Language="F#" Value="member this.GetForm : unit -&gt; System.Windows.Forms.Form" Usage="mainMenu.GetForm " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Получает объект <see cref="T:System.Windows.Forms.Form" />, содержащий этот элемент управления.</summary>
        <returns><see cref="T:System.Windows.Forms.Form" />, являющийся контейнером для этого элемента управления. Возвращает <see langword="null" />, если элемент управления <see cref="T:System.Windows.Forms.MainMenu" /> не размещен в форме.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство позволяет определить, является ли определенный <xref:System.Windows.Forms.MainMenu> родительским для формы. Свойство обычно используется, когда в форме используется несколько <xref:System.Windows.Forms.MainMenu> объектов, и необходимо определить, какая из них используется формой в данный момент.  
  
   
  
## Examples  
 В следующем примере кода используется метод <xref:System.Windows.Forms.MainMenu.GetForm%2A>, чтобы определить, является ли <xref:System.Windows.Forms.MainMenu> родительским для формы. Если вызов в примере кода для <xref:System.Windows.Forms.MainMenu.GetForm%2A> не возвращает `null`, код копирует структуру меню <xref:System.Windows.Forms.MainMenu> с помощью метода <xref:System.Windows.Forms.MainMenu.CloneMenu%2A>. Затем код присваивает свойству <xref:System.Windows.Forms.MainMenu.RightToLeft%2A> значение true в новой копии <xref:System.Windows.Forms.MainMenu>, чтобы создать <xref:System.Windows.Forms.MainMenu>, который можно использовать для языков, поддерживающих текст справа налево. В этом примере необходимо создать <xref:System.Windows.Forms.MainMenu> с именем `mainMenu1`.  
  
 [!code-cpp[Classic MainMenu.GetForm Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MainMenu.GetForm Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MainMenu.GetForm Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MainMenu.GetForm Example/CS/source.cs#1)]
 [!code-vb[Classic MainMenu.GetForm Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MainMenu.GetForm Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
      </Docs>
    </Member>
    <Member MemberName="OnCollapse">
      <MemberSignature Language="C#" Value="protected internal virtual void OnCollapse (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnCollapse(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MainMenu.OnCollapse(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnCollapse (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnCollapse(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCollapse : EventArgs -&gt; unit&#xA;override this.OnCollapse : EventArgs -&gt; unit" Usage="mainMenu.OnCollapse e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Порождает событие <see cref="E:System.Windows.Forms.MainMenu.Collapse" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.MainMenu.OnCollapse%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении <see cref="M:System.Windows.Forms.MainMenu.OnCollapse(System.EventArgs)" /> в производном классе обязательно вызовите метод базового класса "<see cref="M:System.Windows.Forms.MainMenu.OnCollapse(System.EventArgs)" />, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.RightToLeft RightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.RightToLeft RightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MainMenu.RightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeft As RightToLeft" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::RightToLeft RightToLeft { System::Windows::Forms::RightToLeft get(); void set(System::Windows::Forms::RightToLeft value); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeft : System.Windows.Forms.RightToLeft with get, set" Usage="System.Windows.Forms.MainMenu.RightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.AmbientValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RightToLeft</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или устанавливает значение, указывающее, должен ли текст, выводимый на экран элементом управления, отображаться справа налево.</summary>
        <value>Одно из значений <see cref="T:System.Windows.Forms.RightToLeft" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство позволяет меню поддерживать языки, написанные справа налево. Если это свойство имеет значение `RightToLeft.Yes`, текст пункта меню будет отображаться справа налево вместо стандартного метода слева направо.  
  
> [!NOTE]
>  Дополнительные сведения о том, как включить выравнивание справа налево, влияет на Windows Forms элементы управления, см. в свойстве <xref:System.Windows.Forms.Control.RightToLeft%2A>.  
  
   
  
## Examples  
 В следующем примере кода используется метод <xref:System.Windows.Forms.MainMenu.GetForm%2A>, чтобы определить, является ли <xref:System.Windows.Forms.MainMenu> родительским для формы. Если вызов в примере кода для <xref:System.Windows.Forms.MainMenu.GetForm%2A> не возвращает `null`, код копирует структуру меню <xref:System.Windows.Forms.MainMenu> с помощью метода <xref:System.Windows.Forms.MainMenu.CloneMenu%2A>. Затем в примере кода задается свойство <xref:System.Windows.Forms.MainMenu.RightToLeft%2A> для `RightToLeft.Yes` новой копии <xref:System.Windows.Forms.MainMenu>, чтобы создать <xref:System.Windows.Forms.MainMenu>, который можно использовать для языков, поддерживающих текст справа налево. В этом примере необходимо создать <xref:System.Windows.Forms.MainMenu> с именем `mainMenu1`.  
  
 [!code-cpp[Classic MainMenu.RightToLeft Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MainMenu.RightToLeft Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MainMenu.RightToLeft Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MainMenu.RightToLeft Example/CS/source.cs#1)]
 [!code-vb[Classic MainMenu.RightToLeft Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MainMenu.RightToLeft Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Значение, присвоенное свойству, не является допустимым в перечислении <see cref="T:System.Windows.Forms.RightToLeft" />.</exception>
        <altmember cref="T:System.Windows.Forms.RightToLeft" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MainMenu.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="mainMenu.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает строку, представляющую объект <see cref="T:System.Windows.Forms.MainMenu" />.</summary>
        <returns>Строка, представляющая текущий объект <see cref="T:System.Windows.Forms.MainMenu" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращаемая строка включает тип и строку, возвращаемую методом <xref:System.Windows.Forms.Form.ToString%2A>, если <xref:System.Windows.Forms.MainMenu> назначена форме.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
