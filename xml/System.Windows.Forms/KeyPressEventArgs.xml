<Type Name="KeyPressEventArgs" FullName="System.Windows.Forms.KeyPressEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dc850724cf3d7d1b84a333ad7249356489ecc0d2" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70316868" /></Metadata><TypeSignature Language="C#" Value="public class KeyPressEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyPressEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.KeyPressEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyPressEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyPressEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type KeyPressEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет данные для события <see cref="E:System.Windows.Forms.Control.KeyPress" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.KeyPressEventArgs> Указывает символ, который формируется, когда пользователь нажимает клавишу. Например, когда пользователь нажимает Shift + K, <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> свойство возвращает прописную букву k.  
  
 <xref:System.Windows.Forms.Control.KeyPress> Событие возникает, когда пользователь нажимает клавишу. Два события, тесно связанных с <xref:System.Windows.Forms.Control.KeyPress> событием, — это <xref:System.Windows.Forms.Control.KeyDown> <xref:System.Windows.Forms.Control.KeyUp> и. Событие предшествует каждому <xref:System.Windows.Forms.Control.KeyPress> событию, когда пользователь нажимает клавишу, и <xref:System.Windows.Forms.Control.KeyUp> событие возникает, когда пользователь отпускает ключ. <xref:System.Windows.Forms.Control.KeyDown> Когда пользователь удерживает ключ, повторяющиеся <xref:System.Windows.Forms.Control.KeyDown> события и <xref:System.Windows.Forms.Control.KeyPress> возникают каждый раз при повторении символа. При <xref:System.Windows.Forms.Control.KeyUp> выпуске создается одно событие.  
  
 При каждом <xref:System.Windows.Forms.Control.KeyPress> событии передается значение <xref:System.Windows.Forms.KeyPressEventArgs> . Передается с каждым <xref:System.Windows.Forms.Control.KeyDown> событием и <xref:System.Windows.Forms.Control.KeyUp>. <xref:System.Windows.Forms.KeyEventArgs> Указывает <xref:System.Windows.Forms.KeyEventArgs> , были ли нажаты все клавиши-модификаторы (Ctrl, Shift или Alt) вместе с другим ключом. (Эти сведения об модификаторе также можно получить с помощью <xref:System.Windows.Forms.Control.ModifierKeys%2A> свойства <xref:System.Windows.Forms.Control> класса.)  
  
 Задайте <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> для `true` значение, чтобы `KeyPress` отменить событие. Это позволяет элементу управления обрабатывать нажатие клавиши.  
  
> [!NOTE]
>  Некоторые элементы управления обрабатывают определенные клавиши <xref:System.Windows.Forms.Control.KeyDown>. Например, <xref:System.Windows.Forms.RichTextBox> обрабатывает клавишу ВВОД перед <xref:System.Windows.Forms.Control.KeyPress> вызовом метода. В таких случаях нельзя отменить <xref:System.Windows.Forms.Control.KeyPress> событие, а <xref:System.Windows.Forms.Control.KeyDown> вместо этого отменить его.  
  
 Дополнительные сведения о модели событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере показано использование параметра <xref:System.Windows.Forms.KeyPressEventArgs> для подсчета ключей при их нажатии и отображение результатов после каждого нажатия клавиши. <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A>затем принимает значение true, чтобы операционная система не продолжала обрабатывать ключ. В примере предполагается наличие формы с <xref:System.Windows.Forms.TextBox> помещенным на нее.  
  
 [!code-cpp[Classic KeyPressEventArgs Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic KeyPressEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic KeyPressEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/VB/source.vb#1)]  
  
 Необходимо создать новый экземпляр этого класса. Необходимо также задать обработчик событий. Это можно сделать в конструкторе для класса.  
  
 [!code-cpp[Classic KeyPressEventArgs Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic KeyPressEventArgs Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CS/source2.cs#2)]
 [!code-vb[Classic KeyPressEventArgs Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/VB/source2.vb#2)]  
  
 При возникновении указанного события в элементе управления вызывается присоединенный метод, и приложение может выполнить код в ответ на событие.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
    <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
    <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
    <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
    <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyPressEventArgs (char keyChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char keyChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyPressEventArgs(char keyChar);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.KeyPressEventArgs : char -&gt; System.Windows.Forms.KeyPressEventArgs" Usage="new System.Windows.Forms.KeyPressEventArgs keyChar" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="keyChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="keyChar">Знак ASCII, соответствующий нажатой клавише.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.KeyPressEventArgs" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=nameWithType> Используйте свойство, чтобы получить текущее состояние клавиш модификатора.  
  
   
  
## Examples  
 В следующем примере выводится окно сообщения, в котором отображается текущее состояние клавиши SHIFT.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyPressEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Windows.Forms.KeyPressEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, показывающее, было ли обработано событие <see cref="E:System.Windows.Forms.Control.KeyPress" />.</summary>
        <value>Значение <see langword="true" />, если событие обработано; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если событие не обрабатывается, оно будет отправлено операционной системе для обработки по умолчанию. Задайте <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> для `true` значение, чтобы `KeyPress` отменить событие.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Windows.Forms.TextBox> элемент управления. `keypressed` Метод<xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> использует свойство, чтобы проверить, нажата ли клавиша ВВОД. Если нажата клавиша ВВОД, <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> свойство имеет `true`значение, которое указывает, что событие обрабатывается.  
  
 [!code-cpp[KeyPressEventArgs#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyPressEventArgs/CPP/form1.cpp#1)]
 [!code-csharp[KeyPressEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyPressEventArgs/CS/form1.cs#1)]
 [!code-vb[KeyPressEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyPressEventArgs/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
      </Docs>
    </Member>
    <Member MemberName="KeyChar">
      <MemberSignature Language="C#" Value="public char KeyChar { get; set; }" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance char KeyChar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyPressEventArgs.KeyChar" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyChar As Char" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char KeyChar { char get(); void set(char value); };" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.KeyChar : char with get, set" Usage="System.Windows.Forms.KeyPressEventArgs.KeyChar" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public char KeyChar { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyChar As Char" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char KeyChar { char get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.KeyChar : char" Usage="System.Windows.Forms.KeyPressEventArgs.KeyChar" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает знак, соответствующий нажатой клавише.</summary>
        <value>Получаемый знак ASCII. Например, при нажатии клавиш SHIFT + K данное свойство возвращает прописной знак K.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> Используйте свойство, чтобы выполнить выборку нажатий клавиш во время выполнения и изменить нажатия клавиш в особых обстоятельствах времени выполнения. Например, можно использовать для отключения <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> нечисловых сочетаний клавиш, когда пользователь вводит почтовый индекс, изменяет все буквенные нажатия на прописные в поле ввода данных или наблюдайте на клавиатуре или другом устройстве ввода клавиш для конкретных сочетаний клавиш.  
  
 Вы можете получить или задать следующие ключи:  
  
-   a – z, A – Z.  
  
-   КОМБИНАЦИ.  
  
-   Знаки препинания.  
  
-   Числовые ключи в верхней части клавиатуры и на цифровой клавиатуре.  
  
-   ВХОДИТЬ.  
  
 Невозможно получить или задать следующие ключи:  
  
-   Клавиша TAB.  
  
-   Вставка и удаление.  
  
-   ДОМОМ.  
  
-   КОНЦЕ.  
  
-   Выровнять по СТРАНИЦАм вверх и вниз.  
  
-   F1-F2.  
  
-   МЕЩАЮЩИЙ.  
  
-   Клавиши со стрелками  
  
> [!NOTE]
>  Дополнительные сведения об обнаружении любых несимвольных ключей, указанных выше, см. в <xref:System.Windows.Forms.KeyEventArgs> разделе класс.  
  
## Examples  
 В следующем примере создается <xref:System.Windows.Forms.TextBox> элемент управления. `keypressed` Метод<xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> использует свойство, чтобы проверить, нажата ли клавиша ВВОД. Если нажата клавиша ВВОД, <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> свойство имеет `true`значение, которое указывает, что событие обрабатывается.  
  
 [!code-cpp[KeyPressEventArgs#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyPressEventArgs/CPP/form1.cpp#1)]
 [!code-csharp[KeyPressEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyPressEventArgs/CS/form1.cs#1)]
 [!code-vb[KeyPressEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyPressEventArgs/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
        <altmember cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
      </Docs>
    </Member>
  </Members>
</Type>
