<Type Name="ContextMenu" FullName="System.Windows.Forms.ContextMenu">
  <Metadata><Meta Name="ms.openlocfilehash" Value="036650a66fdce46334e3f04319b8beba7adfb2b3" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70359214" /></Metadata><TypeSignature Language="C#" Value="public class ContextMenu : System.Windows.Forms.Menu" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContextMenu extends System.Windows.Forms.Menu" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ContextMenu" />
  <TypeSignature Language="VB.NET" Value="Public Class ContextMenu&#xA;Inherits Menu" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextMenu : System::Windows::Forms::Menu" />
  <TypeSignature Language="F#" Value="type ContextMenu = class&#xA;    inherit Menu" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Menu</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Popup")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет контекстное меню. Хотя элемент управления <see cref="T:System.Windows.Forms.ContextMenuStrip" /> заменяет элемент управления <see cref="T:System.Windows.Forms.ContextMenu" /> предыдущих версий и расширяет его функциональные возможности, однако при необходимости элемент управления <see cref="T:System.Windows.Forms.ContextMenu" /> можно сохранить для обратной совместимости и использования в будущем.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ContextMenu> Класс представляет контекстные меню, которые могут отображаться, когда пользователь нажимает правую кнопку мыши над элементом управления или областью формы. Контекстные меню обычно используются для объединения различных пунктов меню из <xref:System.Windows.Forms.MainMenu> формы, которые полезны для пользователя при наличии контекста приложения. Например, можно использовать контекстное меню, назначенное <xref:System.Windows.Forms.TextBox> элементу управления, чтобы предоставить пункты меню для изменения шрифта текста, поиска текста в элементе управления или функций буфера обмена для копирования и вставления текста. Можно также отобразить новые <xref:System.Windows.Forms.MenuItem> объекты в контекстном меню, не расположенном в, <xref:System.Windows.Forms.MainMenu> чтобы предоставить конкретные команды, которые не подходят <xref:System.Windows.Forms.MainMenu> для вывода.  
  
 Как правило, контекстное меню отображается, когда пользователь нажимает правую кнопку мыши над элементом управления или самой формой. Видимые элементы <xref:System.Windows.Forms.Form> управления и <xref:System.Windows.Forms.Control.ContextMenu%2A> имеют <xref:System.Windows.Forms.ContextMenu> свойство, которое привязывает класс к элементу управления, который отображает контекстное меню. Более одного элемента управления могут использовать <xref:System.Windows.Forms.ContextMenu>. Можно использовать <xref:System.Windows.Forms.ContextMenu.SourceControl%2A> свойство, чтобы определить, какой элемент управления последним отображал контекстное меню для выполнения задач, связанных с элементом управления, или для изменения контекстного меню, отображаемого для элемента управления.  
  
 Может потребоваться узнать, когда отображается контекстное меню, чтобы установить флажки, отключить элементы и выполнить другие задачи меню перед отображением меню пользователю. Можно выполнить обработку <xref:System.Windows.Forms.ContextMenu.Popup> события, чтобы определить, когда отображается контекстное меню.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.MenuItem> Чтобы повторно использовать объекты, отображаемые <xref:System.Windows.Forms.ContextMenu> <xref:System.Windows.Forms.MainMenu> в, для использования в, необходимо <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> создать копию меню с помощью метода <xref:System.Windows.Forms.MenuItem> класса. Можно также объединить пункты меню и их вложенные элементы в один <xref:System.Windows.Forms.MenuItem> объект, <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> используя метод <xref:System.Windows.Forms.MenuItem> класса.  
  
   
  
## Examples  
 В следующем примере кода создается обработчик событий для <xref:System.Windows.Forms.ContextMenu.Popup> события. <xref:System.Windows.Forms.ContextMenu> Код в обработчике событий определяет, какой из двух элементов управления <xref:System.Windows.Forms.PictureBox> с `pictureBox1` именем и <xref:System.Windows.Forms.TextBox> именем `textBox1` является элементом управления, отображающим контекстное меню. В зависимости от того <xref:System.Windows.Forms.ContextMenu> , какой элемент управления привел к отображению контекстного меню, элемент управления добавляет соответствующие <xref:System.Windows.Forms.MenuItem> объекты <xref:System.Windows.Forms.ContextMenu>в. В этом примере предполагается, что у вас есть <xref:System.Windows.Forms.ContextMenu> экземпляр класса с `contextMenu1`именем, определенный в форме. В этом примере также требуется, чтобы в <xref:System.Windows.Forms.TextBox> форму <xref:System.Windows.Forms.PictureBox> можно было добавить и, <xref:System.Windows.Forms.Control.ContextMenu%2A> а свойству этих элементов управления присвоено `contextMenu1`значение.  
  
 [!code-cpp[Classic ContextMenu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ContextMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ContextMenu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ContextMenu Example/CS/source.cs#1)]
 [!code-vb[Classic ContextMenu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ContextMenu Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Menu" />
    <altmember cref="T:System.Windows.Forms.MenuItem" />
    <altmember cref="T:System.Windows.Forms.MainMenu" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.ContextMenu" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextMenu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.ContextMenu" /> без указания команд меню.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 После использования этой версии конструктора можно добавить пункты <xref:System.Windows.Forms.ContextMenu> меню в, <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> используя метод <xref:System.Windows.Forms.Menu.MenuItemCollection> класса. Доступ к можно получить <xref:System.Windows.Forms.Menu.MenuItemCollection> с <xref:System.Windows.Forms.Menu.MenuItems%2A> помощью свойства.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Menu.MenuItemCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextMenu (System.Windows.Forms.MenuItem[] menuItems);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.MenuItem[] menuItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.#ctor(System.Windows.Forms.MenuItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (menuItems As MenuItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextMenu(cli::array &lt;System::Windows::Forms::MenuItem ^&gt; ^ menuItems);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ContextMenu : System.Windows.Forms.MenuItem[] -&gt; System.Windows.Forms.ContextMenu" Usage="new System.Windows.Forms.ContextMenu menuItems" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="menuItems" Type="System.Windows.Forms.MenuItem[]" />
      </Parameters>
      <Docs>
        <param name="menuItems">Массив объектов <see cref="T:System.Windows.Forms.MenuItem" />, представляющих добавляемые в контекстное меню команды.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.ContextMenu" /> с указанным набором объектов <see cref="T:System.Windows.Forms.MenuItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эту версию конструктора можно использовать для создания элемента <xref:System.Windows.Forms.ContextMenu> , у которого есть элементы меню, заданные во время создания. После использования этой версии конструктора можно добавить дополнительные пункты <xref:System.Windows.Forms.ContextMenu> меню в, <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> используя метод <xref:System.Windows.Forms.Menu.MenuItemCollection> класса. Доступ к можно получить <xref:System.Windows.Forms.Menu.MenuItemCollection> с <xref:System.Windows.Forms.Menu.MenuItems%2A> помощью свойства.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется создание контекстного меню и использование <xref:System.Windows.Forms.ContextMenu.Show%2A> метода. Чтобы выполнить пример, вставьте следующий код в форму, содержащую кнопку с именем Button1. Убедитесь, что все события связаны с их методами обработки событий.  
  
 [!code-cpp[System.Windows.Forms.ManualContextMenu#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ManualContextMenu#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ManualContextMenu#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
      </Docs>
    </Member>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public event EventHandler Collapse;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Collapse" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ContextMenu.Collapse" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Collapse As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Collapse;" />
      <MemberSignature Language="F#" Value="member this.Collapse : EventHandler " Usage="member this.Collapse : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при свертывании контекстного меню.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В этом примере обработчик событий сообщает о возникновении <xref:System.Windows.Forms.ContextMenu.Collapse> события. Этот отчет поможет вам узнать, когда происходит событие и может помочь при отладке. Чтобы сообщить о нескольких событиях или о событиях, которые происходят часто, рассмотрите <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> или добавления сообщения в многострочный <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы выполнить пример кода, вставьте его в проект, содержащий экземпляр типа <xref:System.Windows.Forms.ContextMenu> с именем. `ContextMenu1` Затем убедитесь, что обработчик событий связан с <xref:System.Windows.Forms.ContextMenu.Collapse> событием.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#170](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#170)]
 [!code-vb[System.Windows.Forms.EventExamples#170](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#170)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCollapse">
      <MemberSignature Language="C#" Value="protected internal virtual void OnCollapse (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnCollapse(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.OnCollapse(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnCollapse (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnCollapse(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCollapse : EventArgs -&gt; unit&#xA;override this.OnCollapse : EventArgs -&gt; unit" Usage="contextMenu.OnCollapse e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.ContextMenu.Collapse" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPopup">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPopup (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPopup(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.OnPopup(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPopup (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPopup(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPopup : EventArgs -&gt; unit&#xA;override this.OnPopup : EventArgs -&gt; unit" Usage="contextMenu.OnPopup e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.ContextMenu.Popup" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Popup">
      <MemberSignature Language="C#" Value="public event EventHandler Popup;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Popup" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ContextMenu.Popup" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Popup As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Popup;" />
      <MemberSignature Language="F#" Value="member this.Popup : EventHandler " Usage="member this.Popup : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед отображением контекстного меню.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие можно использовать для инициализации <xref:System.Windows.Forms.MenuItem> объектов перед их отображением. Например, <xref:System.Windows.Forms.ContextMenu> если вы используете для трех <xref:System.Windows.Forms.TextBox> элементов управления и хотите отключить <xref:System.Windows.Forms.ContextMenu> определенные пункты меню в в зависимости от того, что <xref:System.Windows.Forms.TextBox> отображает контекстное меню, можно создать обработчик событий для этого события. Можно использовать <xref:System.Windows.Forms.ContextMenu.SourceControl%2A> свойство, чтобы определить, что <xref:System.Windows.Forms.TextBox> собирается отображать <xref:System.Windows.Forms.ContextMenu> и отключить соответствующие <xref:System.Windows.Forms.MenuItem> объекты.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода создается обработчик событий для <xref:System.Windows.Forms.ContextMenu.Popup> события. <xref:System.Windows.Forms.ContextMenu> Код в обработчике событий определяет, какой из двух элементов управления <xref:System.Windows.Forms.PictureBox> с `pictureBox1` именем и <xref:System.Windows.Forms.TextBox> именем `textBox1` является элементом управления, отображающим контекстное меню. В зависимости от того <xref:System.Windows.Forms.ContextMenu> , какой элемент управления привел к отображению контекстного меню, элемент управления добавляет соответствующие <xref:System.Windows.Forms.MenuItem> объекты <xref:System.Windows.Forms.ContextMenu>в. В этом примере предполагается, что у вас есть <xref:System.Windows.Forms.ContextMenu> экземпляр класса с `contextMenu1`именем, определенный в форме. В этом примере также требуется, чтобы в <xref:System.Windows.Forms.TextBox> форму <xref:System.Windows.Forms.PictureBox> можно было добавить и, <xref:System.Windows.Forms.Control.ContextMenu%2A> а свойству этих элементов управления присвоено `contextMenu1`значение.  
  
 [!code-cpp[Classic ContextMenu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ContextMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ContextMenu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ContextMenu Example/CS/source.cs#1)]
 [!code-vb[Classic ContextMenu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ContextMenu Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected internal virtual bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData, System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; msg, valuetype System.Windows.Forms.Keys keyData, class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ProcessCmdKey(System::Windows::Forms::Message % msg, System::Windows::Forms::Keys keyData, System::Windows::Forms::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.ProcessCmdKey : Message * System.Windows.Forms.Keys * System.Windows.Forms.Control -&gt; bool" Usage="contextMenu.ProcessCmdKey (msg, keyData, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="control" Type="System.Windows.Forms.Control" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="msg">Передаваемый по ссылке объект <see cref="T:System.Windows.Forms.Message" />, который представляет сообщение окна для обработки.</param>
        <param name="keyData">Одно из значений <see cref="T:System.Windows.Forms.Keys" />, представляющее обрабатываемую клавишу.</param>
        <param name="control">Элемент управления, к которому относится клавиша для команд.</param>
        <summary>Обрабатывает клавишу для команд.</summary>
        <returns>Значение <see langword="true" />, если знак был обработан элементом управления; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается во время предварительной обработки сообщения для обработки ключей команд. Ключи команд — это ключи, которые всегда имеют приоритет над обычными входными ключами. Примеры клавиш команд: сочетания клавиш и ярлыки меню. Метод должен возвращать `true` значение, указывающее, что он обработал клавишу Command `false` , или указывает, что ключ не является клавишей команды. Этот метод вызывается только при размещении элемента управления в Windows Forms приложении или в качестве элемента управления ActiveX.  
  
 Метод сначала определяет <xref:System.Windows.Forms.ContextMenu>, имеет ли элемент управления, и, <xref:System.Windows.Forms.ContextMenu> если да, позволяет обработать ключ команды. <xref:System.Windows.Forms.ContextMenu.ProcessCmdKey%2A> Если клавиша Command не является ярлыком меню и у элемента управления есть родительский элемент, ключ передается в <xref:System.Windows.Forms.ContextMenu.ProcessCmdKey%2A> метод родителя. В результате используются клавиши команд «пузырьковая» в иерархии элементов управления. В дополнение к нажатию клавиши пользователем, ключевые данные также указывают, какие клавиши модификатора были нажаты в то же время, что и ключ. К клавишам модификатора относятся клавиши SHIFT, CTRL и ALT.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для непосредственного вызывающего объекта, чтобы вызвать неуправляемый код. Связанное перечисление:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <block subset="none" type="overrides"><para>При переопределении <see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /> метода в производном классе элемент управления должен вернуться <see langword="true" /> , чтобы показать, что он обработал ключ. Для ключей, которые не обрабатываются элементом управления, должен возвращаться результат вызова <see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /> метода базового класса. При необходимости элементы управления будут переопределять этот метод.</para></block>
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.RightToLeft RightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.RightToLeft RightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ContextMenu.RightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeft As RightToLeft" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::RightToLeft RightToLeft { System::Windows::Forms::RightToLeft get(); void set(System::Windows::Forms::RightToLeft value); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeft : System.Windows.Forms.RightToLeft with get, set" Usage="System.Windows.Forms.ContextMenu.RightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RightToLeft</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, размещается ли текст, отображаемый элементом управления, справа налево.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Windows.Forms.RightToLeft" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство позволяет меню поддерживать языки, написанные справа налево. Если для `RightToLeft.Yes`этого свойства задано значение, текст пункта меню отображается справа налево, а не по умолчанию — слева направо.  
  
> [!NOTE]
>  Дополнительные сведения о том, как включить выравнивание справа налево, влияет на Windows Forms элементы управления, <xref:System.Windows.Forms.Control.RightToLeft%2A> см. в свойстве.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Значение, присвоенное свойству, не является допустимым в перечислении <see cref="T:System.Windows.Forms.RightToLeft" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Show">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Отображает контекстное меню в заданном месте.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (System.Windows.Forms.Control control, System.Drawing.Point pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(class System.Windows.Forms.Control control, valuetype System.Drawing.Point pos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show(System::Windows::Forms::Control ^ control, System::Drawing::Point pos);" />
      <MemberSignature Language="F#" Value="member this.Show : System.Windows.Forms.Control * System.Drawing.Point -&gt; unit" Usage="contextMenu.Show (control, pos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="pos" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="control">Объект <see cref="T:System.Windows.Forms.Control" />, указывающий элемент управления, с которым связано это контекстное меню.</param>
        <param name="pos">Объект <see cref="T:System.Drawing.Point" />, указывающий координаты места отображения меню. Эти координаты указаны относительно клиентских координат элемента управления, указанных в параметре <paramref name="control" />.</param>
        <summary>Отображает контекстное меню в заданном месте.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обычно отображается, <xref:System.Windows.Forms.ContextMenu> когда пользователь нажимает правую кнопку мыши на элементе управления или области формы, к которой привязан объект. <xref:System.Windows.Forms.ContextMenu> С помощью этого метода можно вручную отобразить контекстное меню в определенном месте и привязать его к конкретному элементу управления. Этот метод не возвращает значение, пока меню не будет закрыто.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется создание контекстного меню и использование <xref:System.Windows.Forms.ContextMenu.Show%2A> метода. Чтобы выполнить пример, вставьте следующий код в форму, содержащую кнопку с именем Button1. Убедитесь, что все события связаны с их методами обработки событий.  
  
 [!code-cpp[System.Windows.Forms.ManualContextMenu#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ManualContextMenu#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ManualContextMenu#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="control" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Дескриптор элемента управления не существует или элемент управления является невидимым.</exception>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (System.Windows.Forms.Control control, System.Drawing.Point pos, System.Windows.Forms.LeftRightAlignment alignment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(class System.Windows.Forms.Control control, valuetype System.Drawing.Point pos, valuetype System.Windows.Forms.LeftRightAlignment alignment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.LeftRightAlignment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show(System::Windows::Forms::Control ^ control, System::Drawing::Point pos, System::Windows::Forms::LeftRightAlignment alignment);" />
      <MemberSignature Language="F#" Value="member this.Show : System.Windows.Forms.Control * System.Drawing.Point * System.Windows.Forms.LeftRightAlignment -&gt; unit" Usage="contextMenu.Show (control, pos, alignment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="pos" Type="System.Drawing.Point" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="alignment" Type="System.Windows.Forms.LeftRightAlignment" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="control">Объект <see cref="T:System.Windows.Forms.Control" />, указывающий элемент управления, с которым связано это контекстное меню.</param>
        <param name="pos">Объект <see cref="T:System.Drawing.Point" />, указывающий координаты места отображения меню. Эти координаты указаны относительно клиентских координат элемента управления, указанных в параметре <paramref name="control" />.</param>
        <param name="alignment">Объект <see cref="T:System.Windows.Forms.LeftRightAlignment" />, определяющий выравнивание элемента управления относительно позиции <paramref name="pos" />.</param>
        <summary>Отображает контекстное меню в заданном месте с указанным видом выравнивания.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control SourceControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control SourceControl" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ContextMenu.SourceControl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ SourceControl { System::Windows::Forms::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SourceControl : System.Windows.Forms.Control" Usage="System.Windows.Forms.ContextMenu.SourceControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает элемент управления, отображающий контекстное меню.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.Control" />, представляющий элемент управления, который отображает данное контекстное меню. Если контекстное меню не отображается ни одним элементом управления, свойство возвращает значение <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство позволяет определить, какой элемент управления в настоящее время отображает контекстное меню, <xref:System.Windows.Forms.ContextMenu>определенное в. Если контекстное меню в настоящий момент не отображается, можно использовать это свойство, чтобы определить, какой элемент управления последний раз отображал контекстное меню. Это свойство можно использовать в <xref:System.Windows.Forms.ContextMenu.Popup> событии, чтобы убедиться, что элемент управления отображает соответствующие пункты меню. Это свойство также можно использовать для передачи ссылки на элемент управления методу, который выполняет задачи, связанные с командой меню, отображаемой в контекстном меню. Поскольку класс наследуется от <xref:System.Windows.Forms.Control>, это свойство также можно использовать, если объект <xref:System.Windows.Forms.ContextMenu> связан с формой. <xref:System.Windows.Forms.Form>  
  
   
  
## Examples  
 В следующем примере кода создается обработчик событий для <xref:System.Windows.Forms.ContextMenu.Popup> события. <xref:System.Windows.Forms.ContextMenu> Код в обработчике событий определяет, какой из двух элементов управления <xref:System.Windows.Forms.PictureBox> с `pictureBox1` именем и <xref:System.Windows.Forms.TextBox> именем `textBox1` является элементом управления, отображающим контекстное меню. В зависимости от того <xref:System.Windows.Forms.ContextMenu> , какой элемент управления привел к отображению контекстного меню, элемент управления добавляет соответствующие <xref:System.Windows.Forms.MenuItem> объекты <xref:System.Windows.Forms.ContextMenu>в. В этом примере предполагается, что у вас есть <xref:System.Windows.Forms.ContextMenu> экземпляр класса с `contextMenu1`именем, определенный в форме. В этом примере также требуется, чтобы в <xref:System.Windows.Forms.TextBox> форму <xref:System.Windows.Forms.PictureBox> можно было добавить и, <xref:System.Windows.Forms.Control.ContextMenu%2A> а свойству этих элементов управления присвоено `contextMenu1`значение.  
  
 [!code-cpp[Classic ContextMenu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ContextMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ContextMenu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ContextMenu Example/CS/source.cs#1)]
 [!code-vb[Classic ContextMenu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ContextMenu Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
