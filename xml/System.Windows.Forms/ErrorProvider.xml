<Type Name="ErrorProvider" FullName="System.Windows.Forms.ErrorProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d482296137543f3440d573c1a38f718ab2a518e3" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65005811" /></Metadata><TypeSignature Language="C#" Value="public class ErrorProvider : System.ComponentModel.Component, System.ComponentModel.IExtenderProvider, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ErrorProvider extends System.ComponentModel.Component implements class System.ComponentModel.IExtenderProvider, class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ErrorProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class ErrorProvider&#xA;Inherits Component&#xA;Implements IExtenderProvider, ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class ErrorProvider : System::ComponentModel::Component, System::ComponentModel::IExtenderProvider, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type ErrorProvider = class&#xA;    inherit Component&#xA;    interface IExtenderProvider&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IExtenderProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.ComplexBindingProperties("DataSource", "DataMember")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ProvideProperty("IconPadding", typeof(System.Windows.Forms.Control))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ProvideProperty("IconAlignment", typeof(System.Windows.Forms.Control))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ProvideProperty("Error", typeof(System.Windows.Forms.Control))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет пользовательский интерфейс, указывающий на наличие ошибки, связанной с элементом управления в форме.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ErrorProvider> Представляет простой механизм, указывающий конечный пользователь, элемент управления в форме ошибка, связанная с ним. Если строка описания ошибки указан для элемента управления, появляется значок рядом с элементом управления. Значок мигает в соответствии с <xref:System.Windows.Forms.ErrorProvider.BlinkStyle%2A>, по ставке, определенной по <xref:System.Windows.Forms.ErrorProvider.BlinkRate%2A>. При наведении указателя мыши на значке появляется подсказка, показывающая строка описания ошибки.  
  
 Как правило, используется <xref:System.Windows.Forms.ErrorProvider> в связи с элементами управления с привязкой к данным. При использовании <xref:System.Windows.Forms.ErrorProvider> с привязкой к данным элементы управления, необходимо указать <xref:System.Windows.Forms.ErrorProvider.ContainerControl%2A>, в конструктор или установив <xref:System.Windows.Forms.ErrorProvider.ContainerControl%2A> свойство.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ErrorProvider> Компонент не предоставляет встроенную поддержку для клиенты специальных возможностей. Чтобы сделать приложение доступным при использовании этого компонента, необходимо предоставить механизм обратной связи дополнительные, доступны.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Windows.Forms.ErrorProvider> класса, чтобы уведомить пользователя о ошибку ввода данных. В примере создается <xref:System.Windows.Forms.Form> , содержащий <xref:System.Windows.Forms.TextBox> управления <xref:System.Windows.Forms.NumericUpDown> элемента управления и <xref:System.Windows.Forms.ComboBox> контролировать, каждый выполняет проверку содержимого и <xref:System.Windows.Forms.ErrorProvider> для каждого элемента управления. В этом примере ошибки с помощью значка <xref:System.Windows.Forms.ErrorProvider.BlinkRate%2A> и <xref:System.Windows.Forms.ErrorProvider.BlinkStyle%2A> свойства и <xref:System.Windows.Forms.ErrorProvider.SetIconAlignment%2A> и <xref:System.Windows.Forms.ErrorProvider.SetIconPadding%2A> методы. <xref:System.Windows.Forms.ErrorProvider.SetError%2A> Метод вызывается во время элемент управления с или без текста соответствующее сообщение об ошибке <xref:System.Windows.Forms.Control.Validated> событий, в зависимости от содержимого в элементе управления.  
  
 [!code-cpp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CPP/errorproviderexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CS/errorproviderexample.cs#1)]
 [!code-vb[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/VB/errorproviderexample.vb#1)]  
  
 В следующем примере кода показано, как использовать <xref:System.Windows.Forms.ErrorProvider> с <xref:System.Windows.Forms.ErrorProvider.DataSource%2A> и <xref:System.Windows.Forms.ErrorProvider.DataMember%2A> для указания ошибки данных пользователю.  
  
 [!code-cpp[Classic ErrorProvider Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ErrorProvider Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ErrorProvider Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ErrorProvider Example/CS/source.cs#1)]
 [!code-vb[Classic ErrorProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ErrorProvider Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.ErrorProvider" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ErrorProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ErrorProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.ErrorProvider" /> класса и инициализирует значения по умолчанию для <see cref="P:System.Windows.Forms.ErrorProvider.BlinkRate" />, <see cref="P:System.Windows.Forms.ErrorProvider.BlinkStyle" />и <see cref="P:System.Windows.Forms.ErrorProvider.Icon" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В следующей таблице представлены исходные значения свойств для экземпляра <xref:System.Windows.Forms.ErrorProvider>.  
  
|Свойство|Значение|  
|--------------|-----------|  
|<xref:System.Windows.Forms.ErrorProvider.Icon%2A>|Значок, состоящий из восклицательного знака в кружке с красным фоном|  
|<xref:System.Windows.Forms.ErrorProvider.BlinkRate%2A>|250|  
|<xref:System.Windows.Forms.ErrorProvider.BlinkStyle%2A>|<xref:System.Windows.Forms.ErrorBlinkStyle.BlinkIfDifferentError>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ErrorProvider (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ErrorProvider(System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ErrorProvider : System.ComponentModel.IContainer -&gt; System.Windows.Forms.ErrorProvider" Usage="new System.Windows.Forms.ErrorProvider container" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="container"><see cref="T:System.ComponentModel.IContainer" /> Для отслеживания ошибок.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.ErrorProvider" /> присоединенного к <see cref="T:System.ComponentModel.IContainer" /> реализации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.IContainer> Лежит объект-контейнер для элементов управления привязкой к данным связать поставщик ошибки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ErrorProvider (System.Windows.Forms.ContainerControl parentControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ContainerControl parentControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.#ctor(System.Windows.Forms.ContainerControl)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parentControl As ContainerControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ErrorProvider(System::Windows::Forms::ContainerControl ^ parentControl);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ErrorProvider : System.Windows.Forms.ContainerControl -&gt; System.Windows.Forms.ErrorProvider" Usage="new System.Windows.Forms.ErrorProvider parentControl" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentControl" Type="System.Windows.Forms.ContainerControl" />
      </Parameters>
      <Docs>
        <param name="parentControl">Контейнер элемента управления для отслеживания ошибок.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.ErrorProvider" /> присоединенного к контейнеру.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control> Определяется <xref:System.Windows.Forms.ErrorProvider.ContainerControl%2A> — это объект-контейнер для элементов управления привязкой к данным связать поставщик ошибки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindToDataAndErrors">
      <MemberSignature Language="C#" Value="public void BindToDataAndErrors (object newDataSource, string newDataMember);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindToDataAndErrors(object newDataSource, string newDataMember) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.BindToDataAndErrors(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindToDataAndErrors (newDataSource As Object, newDataMember As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindToDataAndErrors(System::Object ^ newDataSource, System::String ^ newDataMember);" />
      <MemberSignature Language="F#" Value="member this.BindToDataAndErrors : obj * string -&gt; unit" Usage="errorProvider.BindToDataAndErrors (newDataSource, newDataMember)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newDataSource" Type="System.Object" />
        <Parameter Name="newDataMember" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="newDataSource">Набор данных на основе <see cref="T:System.Collections.IList" /> интерфейс, который проверяется на наличие ошибок. Как правило, это <see cref="T:System.Data.DataSet" /> для отслеживания ошибок.</param>
        <param name="newDataMember">Коллекция в пределах <paramref name="newDataSource" /> для отслеживания ошибок. Как правило, это будет <see cref="T:System.Data.DataTable" />.</param>
        <summary>Предоставляет метод, позволяющий настраивать <see cref="P:System.Windows.Forms.ErrorProvider.DataSource" /> и <see cref="P:System.Windows.Forms.ErrorProvider.DataMember" /> во время выполнения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы избежать конфликтов во время выполнения, которые могут возникнуть при изменении <xref:System.Windows.Forms.ErrorProvider.DataSource%2A> и <xref:System.Windows.Forms.ErrorProvider.DataMember%2A>, следует использовать <xref:System.Windows.Forms.ErrorProvider.BindToDataAndErrors%2A> вместо того чтобы задавать <xref:System.Windows.Forms.ErrorProvider.DataSource%2A> и <xref:System.Windows.Forms.ErrorProvider.DataMember%2A> по отдельности.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BlinkRate">
      <MemberSignature Language="C#" Value="public int BlinkRate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlinkRate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ErrorProvider.BlinkRate" />
      <MemberSignature Language="VB.NET" Value="Public Property BlinkRate As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BlinkRate { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BlinkRate : int with get, set" Usage="System.Windows.Forms.ErrorProvider.BlinkRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(250)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает частоту мигания значка ошибки.</summary>
        <value>Частота мигания значка ошибки (в миллисекундах). Значение по умолчанию — 250 миллисекунд.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Мигания значка ошибки с указанной скоростью. Значение ноль <xref:System.Windows.Forms.ErrorProvider.BlinkStyle%2A> для <xref:System.Windows.Forms.ErrorBlinkStyle.NeverBlink>.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Windows.Forms.ErrorProvider> класса, чтобы уведомить пользователя о ошибку ввода данных. В примере создается <xref:System.Windows.Forms.Form> , содержащий <xref:System.Windows.Forms.TextBox> управления <xref:System.Windows.Forms.NumericUpDown> элемента управления и <xref:System.Windows.Forms.ComboBox> контролировать, каждый выполняет проверку содержимого и <xref:System.Windows.Forms.ErrorProvider> для каждого элемента управления. В этом примере ошибки с помощью значка <xref:System.Windows.Forms.ErrorProvider.BlinkRate%2A> и <xref:System.Windows.Forms.ErrorProvider.BlinkStyle%2A> свойства и <xref:System.Windows.Forms.ErrorProvider.SetIconAlignment%2A> и <xref:System.Windows.Forms.ErrorProvider.SetIconPadding%2A> методы. <xref:System.Windows.Forms.ErrorProvider.SetError%2A> Метод вызывается во время элемент управления с или без текста соответствующее сообщение об ошибке <xref:System.Windows.Forms.Control.Validated> событий, в зависимости от содержимого в элементе управления.  
  
 [!code-cpp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CPP/errorproviderexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CS/errorproviderexample.cs#1)]
 [!code-vb[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/VB/errorproviderexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение меньше нуля.</exception>
        <altmember cref="P:System.Windows.Forms.ErrorProvider.BlinkStyle" />
      </Docs>
    </Member>
    <Member MemberName="BlinkStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ErrorBlinkStyle BlinkStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ErrorBlinkStyle BlinkStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ErrorProvider.BlinkStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BlinkStyle As ErrorBlinkStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ErrorBlinkStyle BlinkStyle { System::Windows::Forms::ErrorBlinkStyle get(); void set(System::Windows::Forms::ErrorBlinkStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BlinkStyle : System.Windows.Forms.ErrorBlinkStyle with get, set" Usage="System.Windows.Forms.ErrorProvider.BlinkStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ErrorBlinkStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, когда мигает значок ошибки.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Windows.Forms.ErrorBlinkStyle" />. Значение по умолчанию — <see cref="F:System.Windows.Forms.ErrorBlinkStyle.BlinkIfDifferentError" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В соответствии с назначенного мигания значка ошибки <xref:System.Windows.Forms.ErrorBlinkStyle> при возникновении ошибки. Установка <xref:System.Windows.Forms.ErrorProvider.BlinkRate%2A> на ноль <xref:System.Windows.Forms.ErrorProvider.BlinkStyle%2A> для <xref:System.Windows.Forms.ErrorBlinkStyle.NeverBlink>.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Windows.Forms.ErrorProvider> класса, чтобы уведомить пользователя о ошибку ввода данных. В примере создается <xref:System.Windows.Forms.Form> , содержащий <xref:System.Windows.Forms.TextBox> управления <xref:System.Windows.Forms.NumericUpDown> элемента управления и <xref:System.Windows.Forms.ComboBox> контролировать, каждый выполняет проверку содержимого и <xref:System.Windows.Forms.ErrorProvider> для каждого элемента управления. В этом примере ошибки с помощью значка <xref:System.Windows.Forms.ErrorProvider.BlinkRate%2A> и <xref:System.Windows.Forms.ErrorProvider.BlinkStyle%2A> свойства и <xref:System.Windows.Forms.ErrorProvider.SetIconAlignment%2A> и <xref:System.Windows.Forms.ErrorProvider.SetIconPadding%2A> методы. <xref:System.Windows.Forms.ErrorProvider.SetError%2A> Метод вызывается во время элемент управления с или без текста соответствующее сообщение об ошибке <xref:System.Windows.Forms.Control.Validated> событий, в зависимости от содержимого в элементе управления.  
  
 [!code-cpp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CPP/errorproviderexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CS/errorproviderexample.cs#1)]
 [!code-vb[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/VB/errorproviderexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Присваиваемое значение не относится к значениям <see cref="T:System.Windows.Forms.ErrorBlinkStyle" />.</exception>
        <altmember cref="T:System.Windows.Forms.ErrorBlinkStyle" />
        <altmember cref="P:System.Windows.Forms.ErrorProvider.BlinkRate" />
      </Docs>
    </Member>
    <Member MemberName="CanExtend">
      <MemberSignature Language="C#" Value="public bool CanExtend (object extendee);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExtend(object extendee) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.CanExtend(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExtend (extendee As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanExtend(System::Object ^ extendee);" />
      <MemberSignature Language="F#" Value="abstract member CanExtend : obj -&gt; bool&#xA;override this.CanExtend : obj -&gt; bool" Usage="errorProvider.CanExtend extendee" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IExtenderProvider.CanExtend(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extendee" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="extendee">Элемент управления, который необходимо расширить.</param>
        <summary>Возвращает значение, определяющее возможность увеличения размера элемента управления.</summary>
        <returns><see langword="true" /> Если элемент управления может быть расширен; в противном случае <see langword="false" />.  
  
Это свойство будет иметь <see langword="true" /> Если объект является <see cref="T:System.Windows.Forms.Control" /> и не <see cref="T:System.Windows.Forms.Form" /> или <see cref="T:System.Windows.Forms.ToolBar" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило, вы воспользуетесь <xref:System.Windows.Forms.ErrorProvider.CanExtend%2A> чтобы определить возможность присоединения <xref:System.Windows.Forms.ErrorProvider> на указанный элемент управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="errorProvider.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Очищает все параметры, связанные с этим компонентом.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызвав этот метод удаляет все значения свойств для данного <xref:System.Windows.Forms.ErrorProvider>, восстановление свойства к значениям по умолчанию. Чтобы очистить сообщение об ошибке, вызовите <xref:System.Windows.Forms.ErrorProvider.SetError%2A> метод и передать <xref:System.String.Empty> для <xref:System.String> значение. При этом удаляются глиф ошибки из указанного <xref:System.Windows.Forms.Control>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ContainerControl ContainerControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContainerControl ContainerControl" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ErrorProvider.ContainerControl" />
      <MemberSignature Language="VB.NET" Value="Public Property ContainerControl As ContainerControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ContainerControl ^ ContainerControl { System::Windows::Forms::ContainerControl ^ get(); void set(System::Windows::Forms::ContainerControl ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContainerControl : System.Windows.Forms.ContainerControl with get, set" Usage="System.Windows.Forms.ErrorProvider.ContainerControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContainerControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее родительский элемент управления для данного <see cref="T:System.Windows.Forms.ErrorProvider" />.</summary>
        <value><see cref="T:System.Windows.Forms.ContainerControl" /> , Содержащий элементы управления, <see cref="T:System.Windows.Forms.ErrorProvider" /> присоединяется к.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило, это <xref:System.Windows.Forms.Form> находятся элементы управления с привязкой к данным на.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">для производные классы могли переопределять это свойство. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="DataMember">
      <MemberSignature Language="C#" Value="public string DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ErrorProvider.DataMember" />
      <MemberSignature Language="VB.NET" Value="Public Property DataMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataMember : string with get, set" Usage="System.Windows.Forms.ErrorProvider.DataMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberListEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberListEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataMemberListEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает список в источнике данных, который следует отслеживать.</summary>
        <value>Строка, представляющая собой список в источнике данных, определяемое <see cref="P:System.Windows.Forms.ErrorProvider.DataSource" /> для отслеживания. Как правило, это будет <see cref="T:System.Data.DataTable" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ErrorProvider.DataMember%2A> Основан на строку навигации <xref:System.Windows.Forms.ErrorProvider.DataSource%2A>.  
  
 Чтобы избежать конфликтов во время выполнения, которые могут возникнуть при изменении <xref:System.Windows.Forms.ErrorProvider.DataSource%2A> и <xref:System.Windows.Forms.ErrorProvider.DataMember%2A>, следует использовать <xref:System.Windows.Forms.ErrorProvider.BindToDataAndErrors%2A> вместо того чтобы задавать <xref:System.Windows.Forms.ErrorProvider.DataSource%2A> и <xref:System.Windows.Forms.ErrorProvider.DataMember%2A> по отдельности.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Windows.Forms.ErrorProvider> с <xref:System.Windows.Forms.ErrorProvider.DataSource%2A> и <xref:System.Windows.Forms.ErrorProvider.DataMember%2A> для указания ошибки данных пользователю.  
  
 [!code-cpp[Classic ErrorProvider Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ErrorProvider Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ErrorProvider Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ErrorProvider Example/CS/source.cs#1)]
 [!code-vb[Classic ErrorProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ErrorProvider Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ErrorProvider.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : obj with get, set" Usage="System.Windows.Forms.ErrorProvider.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.AttributeProvider(typeof(System.ComponentModel.IListSource))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Forms.Design.DataSourceConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает источник данных, который <see cref="T:System.Windows.Forms.ErrorProvider" /> мониторов.</summary>
        <value>Источник данных, основанный на <see cref="T:System.Collections.IList" /> интерфейс, который проверяется на наличие ошибок. Как правило, это <see cref="T:System.Data.DataSet" /> для отслеживания ошибок.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ErrorProvider.DataSource%2A> — Это источник данных, который можно подключить к элементу управления, и вы хотите отслеживать наличие ошибок. <xref:System.Windows.Forms.ErrorProvider.DataSource%2A> можно присвоить любой коллекции, реализующей <xref:System.Collections.IList>.  
  
 Чтобы избежать конфликтов во время выполнения, которые могут возникнуть при изменении <xref:System.Windows.Forms.ErrorProvider.DataSource%2A> и <xref:System.Windows.Forms.ErrorProvider.DataMember%2A>, следует использовать <xref:System.Windows.Forms.ErrorProvider.BindToDataAndErrors%2A> вместо того чтобы задавать <xref:System.Windows.Forms.ErrorProvider.DataSource%2A> и <xref:System.Windows.Forms.ErrorProvider.DataMember%2A> по отдельности.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Windows.Forms.ErrorProvider> с <xref:System.Windows.Forms.ErrorProvider.DataSource%2A> и <xref:System.Windows.Forms.ErrorProvider.DataMember%2A> для указания ошибки данных пользователю. Этот код предполагается, что вы создали и заполнили <xref:System.Data.DataSet> с именем `dataSet1` содержащий <xref:System.Data.DataTable> с именем `dataTable1`. При привязке <xref:System.Data.DataSet> к элементу управления, такие как <xref:System.Windows.Forms.DataGridView> управления, ошибки, указанные с помощью <xref:System.Data.DataRow> объекты отображаются как глиф ошибки в <xref:System.Windows.Forms.DataGridView> элемента управления.  
  
 [!code-cpp[Classic ErrorProvider Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ErrorProvider Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ErrorProvider Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ErrorProvider Example/CS/source.cs#1)]
 [!code-vb[Classic ErrorProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ErrorProvider Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ErrorProvider.DataMember" />
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="errorProvider.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</param>
        <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.ComponentModel.Component" />, а при необходимости освобождает также управляемые ресурсы.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetError">
      <MemberSignature Language="C#" Value="public string GetError (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetError(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.GetError(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetError(System::Windows::Forms::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetError : System.Windows.Forms.Control -&gt; string" Usage="errorProvider.GetError control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">Элемент, чтобы получить строку описания ошибки.</param>
        <summary>Возвращает строку описания текущей ошибки для указанного элемента управления.</summary>
        <returns>Строка описания ошибки для указанного элемента управления.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода используется <xref:System.Windows.Forms.ErrorProvider.GetError%2A> метод на наличие ошибки, прежде чем открывать диалоговое окно файла. Чтобы выполнить этот пример, вставьте следующий код в форму, содержащую <xref:System.Windows.Forms.TextBox> с именем `TextBox1`, <xref:System.Windows.Forms.OpenFileDialog> с именем `OpenFileDialog1`, кнопки с именем `Button1`и <xref:System.Windows.Forms.ErrorProvider> с именем `ErrorProvider1`. Убедитесь, что все события связаны с их обработчики событий.  
  
 [!code-cpp[System.Windows.Forms.FileDialog#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/CPP/filedialogform.cpp#2)]
 [!code-csharp[System.Windows.Forms.FileDialog#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/CS/filedialogform.cs#2)]
 [!code-vb[System.Windows.Forms.FileDialog#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/VB/filedialogform.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="control" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Forms.ErrorProvider.SetError(System.Windows.Forms.Control,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetIconAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ErrorIconAlignment GetIconAlignment (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.ErrorIconAlignment GetIconAlignment(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.GetIconAlignment(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ErrorIconAlignment GetIconAlignment(System::Windows::Forms::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetIconAlignment : System.Windows.Forms.Control -&gt; System.Windows.Forms.ErrorIconAlignment" Usage="errorProvider.GetIconAlignment control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ErrorIconAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">Элемент управления, необходимо получить положение значка.</param>
        <summary>Возвращает значение, указывающее на расположение значка ошибки по отношению к элементу управления.</summary>
        <returns>Одно из значений перечисления <see cref="T:System.Windows.Forms.ErrorIconAlignment" />. Выравнивание значка по умолчанию <see cref="F:System.Windows.Forms.ErrorIconAlignment.MiddleRight" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="control" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Forms.ErrorProvider.SetIconPadding(System.Windows.Forms.Control,System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ErrorProvider.SetIconAlignment(System.Windows.Forms.Control,System.Windows.Forms.ErrorIconAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="GetIconPadding">
      <MemberSignature Language="C#" Value="public int GetIconPadding (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetIconPadding(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.GetIconPadding(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetIconPadding(System::Windows::Forms::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetIconPadding : System.Windows.Forms.Control -&gt; int" Usage="errorProvider.GetIconPadding control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control">Элемент управления, чтобы получить значение заполнения.</param>
        <summary>Возвращает размер свободного места, которое необходимо оставить рядом со значком ошибки.</summary>
        <returns>Количество пикселей между значком и элементом управления.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Многие значки обычно имеют дополнительное пространство вокруг основного изображения, поэтому значение внутренних полей требуется, только если требуется дополнительное пространство. Значения полей может быть положительным или отрицательным. Отрицательные значения вызывают значок перекрывать границей элемента управления. Заполнение значок по умолчанию — 0.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="control" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Forms.ErrorProvider.SetIconPadding(System.Windows.Forms.Control,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public System.Drawing.Icon Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Icon Icon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ErrorProvider.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As Icon" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Icon ^ Icon { System::Drawing::Icon ^ get(); void set(System::Drawing::Icon ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Icon : System.Drawing.Icon with get, set" Usage="System.Windows.Forms.ErrorProvider.Icon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Icon</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <see cref="T:System.Drawing.Icon" /> отображается рядом с элементом управления, если для элемента управления была настроена строка описания ошибки.</summary>
        <value><see cref="T:System.Drawing.Icon" /> , Указывающий, что произошла ошибка. Значок, используемый по умолчанию, содержит восклицательный знак в красном круге.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для получения наилучших результатов используйте значок размером 16 x 16 пикселей. Указанный значки изменяется, чтобы быть 16 x 16 пикселей, при необходимости.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Присвоенное значение <see cref="T:System.Drawing.Icon" /> является <see langword="null" />.</exception>
        <altmember cref="T:System.Drawing.Icon" />
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.OnRightToLeftChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRightToLeftChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRightToLeftChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRightToLeftChanged : EventArgs -&gt; unit&#xA;override this.OnRightToLeftChanged : EventArgs -&gt; unit" Usage="errorProvider.OnRightToLeftChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.ErrorProvider.RightToLeftChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.ErrorProvider.OnRightToLeftChanged%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.ErrorProvider.OnRightToLeftChanged(System.EventArgs)" /> в производном классе, не забудьте вызвать базовый класс <see cref="M:System.Windows.Forms.ErrorProvider.OnRightToLeftChanged(System.EventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="public virtual bool RightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ErrorProvider.RightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RightToLeft { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeft : bool with get, set" Usage="System.Windows.Forms.ErrorProvider.RightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, которое указывает, используется ли компонент в контексте языкового стандарта, поддерживающего шрифты с направлением письма справа налево.</summary>
        <value><see langword="true" /> Если компонент используется в языковом стандарте справа налево; в противном случае <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если это свойство имеет значение true, ошибки отображается значок слева от связанного элемента управления и текст всплывающей подсказки отображается в порядке справа налево.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightToLeftChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ErrorProvider.RightToLeftChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RightToLeftChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RightToLeftChanged;" />
      <MemberSignature Language="F#" Value="member this.RightToLeftChanged : EventHandler " Usage="member this.RightToLeftChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при <see cref="P:System.Windows.Forms.ErrorProvider.RightToLeft" /> изменении значения свойства.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В примере обработчик событий сообщает о вхождение <xref:System.Windows.Forms.ErrorProvider.RightToLeftChanged> событий. Этот отчет позволяет выяснить, когда происходит событие и может оказаться полезным при отладке. Чтобы создать отчет для нескольких событий или событий, которые происходят часто, рассмотрите возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> с <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> или добавлении сообщения в многострочном <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы запустить пример кода, вставьте его в проект, который содержит экземпляр типа <xref:System.Windows.Forms.ErrorProvider> с именем `ErrorProvider1`. Убедитесь, что обработчик событий, связанный с <xref:System.Windows.Forms.ErrorProvider.RightToLeftChanged> событий.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#382](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#382)]
 [!code-vb[System.Windows.Forms.EventExamples#382](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#382)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetError">
      <MemberSignature Language="C#" Value="public void SetError (System.Windows.Forms.Control control, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetError(class System.Windows.Forms.Control control, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.SetError(System.Windows.Forms.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetError(System::Windows::Forms::Control ^ control, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetError : System.Windows.Forms.Control * string -&gt; unit" Usage="errorProvider.SetError (control, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">Элемент управления, для которого задается строка описания ошибки.</param>
        <param name="value">Строка описания ошибки, или <see langword="null" /> или <see cref="F:System.String.Empty" /> для удаления ошибки.</param>
        <summary>Задает строку описания ошибки для указанного элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если длина `value` не равно нулю, то отображается значок ошибки, а всплывающая подсказка для значка ошибки является текст описания ошибки. Если длина равна нулю или `value` является `null`, значок ошибки является скрытым.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Windows.Forms.ErrorProvider> класса, чтобы уведомить пользователя о ошибку ввода данных. В примере создается <xref:System.Windows.Forms.Form> , содержащий <xref:System.Windows.Forms.TextBox> управления <xref:System.Windows.Forms.NumericUpDown> элемента управления и <xref:System.Windows.Forms.ComboBox> контролировать, каждый выполняет проверку содержимого и <xref:System.Windows.Forms.ErrorProvider> для каждого элемента управления. В этом примере ошибки с помощью значка <xref:System.Windows.Forms.ErrorProvider.BlinkRate%2A> и <xref:System.Windows.Forms.ErrorProvider.BlinkStyle%2A> свойства и <xref:System.Windows.Forms.ErrorProvider.SetIconAlignment%2A> и <xref:System.Windows.Forms.ErrorProvider.SetIconPadding%2A> методы. <xref:System.Windows.Forms.ErrorProvider.SetError%2A> Метод вызывается во время элемент управления с или без текста соответствующее сообщение об ошибке <xref:System.Windows.Forms.Control.Validated> событий, в зависимости от содержимого в элементе управления.  
  
 [!code-cpp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CPP/errorproviderexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CS/errorproviderexample.cs#1)]
 [!code-vb[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/VB/errorproviderexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="control" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Forms.ErrorProvider.GetError(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="SetIconAlignment">
      <MemberSignature Language="C#" Value="public void SetIconAlignment (System.Windows.Forms.Control control, System.Windows.Forms.ErrorIconAlignment value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetIconAlignment(class System.Windows.Forms.Control control, valuetype System.Windows.Forms.ErrorIconAlignment value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.SetIconAlignment(System.Windows.Forms.Control,System.Windows.Forms.ErrorIconAlignment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetIconAlignment(System::Windows::Forms::Control ^ control, System::Windows::Forms::ErrorIconAlignment value);" />
      <MemberSignature Language="F#" Value="member this.SetIconAlignment : System.Windows.Forms.Control * System.Windows.Forms.ErrorIconAlignment -&gt; unit" Usage="errorProvider.SetIconAlignment (control, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="value" Type="System.Windows.Forms.ErrorIconAlignment" />
      </Parameters>
      <Docs>
        <param name="control">Элемент управления, чтобы задать расположение значка.</param>
        <param name="value">Одно из значений перечисления <see cref="T:System.Windows.Forms.ErrorIconAlignment" />.</param>
        <summary>Задает положение значка ошибки по отношению к элементу управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Конечное положение значка изменяется путем заполнения значения для значка.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Windows.Forms.ErrorProvider> класса, чтобы уведомить пользователя о ошибку ввода данных. В примере создается <xref:System.Windows.Forms.Form> , содержащий <xref:System.Windows.Forms.TextBox> управления <xref:System.Windows.Forms.NumericUpDown> элемента управления и <xref:System.Windows.Forms.ComboBox> контролировать, каждый выполняет проверку содержимого и <xref:System.Windows.Forms.ErrorProvider> для каждого элемента управления. В этом примере ошибки с помощью значка <xref:System.Windows.Forms.ErrorProvider.BlinkRate%2A> и <xref:System.Windows.Forms.ErrorProvider.BlinkStyle%2A> свойства и <xref:System.Windows.Forms.ErrorProvider.SetIconAlignment%2A> и <xref:System.Windows.Forms.ErrorProvider.SetIconPadding%2A> методы. <xref:System.Windows.Forms.ErrorProvider.SetError%2A> Метод вызывается во время элемент управления с или без текста соответствующее сообщение об ошибке <xref:System.Windows.Forms.Control.Validated> событий, в зависимости от содержимого в элементе управления.  
  
 [!code-cpp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CPP/errorproviderexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CS/errorproviderexample.cs#1)]
 [!code-vb[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/VB/errorproviderexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="control" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Forms.ErrorProvider.GetIconAlignment(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.ErrorProvider.SetIconAlignment(System.Windows.Forms.Control,System.Windows.Forms.ErrorIconAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="SetIconPadding">
      <MemberSignature Language="C#" Value="public void SetIconPadding (System.Windows.Forms.Control control, int padding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetIconPadding(class System.Windows.Forms.Control control, int32 padding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.SetIconPadding(System.Windows.Forms.Control,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetIconPadding(System::Windows::Forms::Control ^ control, int padding);" />
      <MemberSignature Language="F#" Value="member this.SetIconPadding : System.Windows.Forms.Control * int -&gt; unit" Usage="errorProvider.SetIconPadding (control, padding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="padding" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="control"><paramref name="control" /> Чтобы задать значение заполнения.</param>
        <param name="padding">Число пикселей, которое необходимо добавить между значком и <paramref name="control" />.</param>
        <summary>Задает расстояние, которое необходимо оставить между указанным элементом управления и значком ошибки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Многие значки обычно имеют дополнительное пространство вокруг основного изображения, поэтому значение внутренних полей необходим только в случае, если требуется дополнительное место. Значения полей может быть положительным или отрицательным. Отрицательные значения вызывают значок перекрывать границей элемента управления.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Windows.Forms.ErrorProvider> класса, чтобы уведомить пользователя о ошибку ввода данных. В примере создается <xref:System.Windows.Forms.Form> , содержащий <xref:System.Windows.Forms.TextBox> управления <xref:System.Windows.Forms.NumericUpDown> элемента управления и <xref:System.Windows.Forms.ComboBox> контролировать, каждый выполняет проверку содержимого и <xref:System.Windows.Forms.ErrorProvider> для каждого элемента управления. В этом примере ошибки с помощью значка <xref:System.Windows.Forms.ErrorProvider.BlinkRate%2A> и <xref:System.Windows.Forms.ErrorProvider.BlinkStyle%2A> свойства и <xref:System.Windows.Forms.ErrorProvider.SetIconAlignment%2A> и <xref:System.Windows.Forms.ErrorProvider.SetIconPadding%2A> методы. <xref:System.Windows.Forms.ErrorProvider.SetError%2A> Метод вызывается во время элемент управления с или без текста соответствующее сообщение об ошибке <xref:System.Windows.Forms.Control.Validated> событий, в зависимости от содержимого в элементе управления.  
  
 [!code-cpp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CPP/errorproviderexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/CS/errorproviderexample.cs#1)]
 [!code-vb[System.Windows.Forms.ErrorProvider#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ErrorProvider/VB/errorproviderexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="control" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Forms.ErrorProvider.GetIconPadding(System.Windows.Forms.Control)" />
        <altmember cref="M:System.Windows.Forms.ErrorProvider.SetIconAlignment(System.Windows.Forms.Control,System.Windows.Forms.ErrorIconAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ErrorProvider.Site" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ISite ^ Site {  void set(System::ComponentModel::ISite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : System.ComponentModel.ISite" Usage="System.Windows.Forms.ErrorProvider.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <see cref="T:System.ComponentModel.ISite" /> объекта <see cref="T:System.ComponentModel.Component" />.</summary>
        <value><see cref="T:System.ComponentModel.ISite" />, связанный с <see cref="T:System.ComponentModel.Component" />, или значение NULL, если <see cref="T:System.ComponentModel.Component" /> не инкапсулирован в <see cref="T:System.ComponentModel.IContainer" />, с <see cref="T:System.ComponentModel.Component" /> не связан никакой <see cref="T:System.ComponentModel.ISite" /> или <see cref="T:System.ComponentModel.Component" /> удален из <see cref="T:System.ComponentModel.IContainer" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.ComponentModel.Component.Site" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Подает сигнал объекту о начале инициализации.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Подает объекту сигнал о завершении инициализации.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ErrorProvider.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.ErrorProvider.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает объект, содержащий данные о компоненте.</summary>
        <value>Объект, содержащий данные об элементе управления. Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство используется для хранения пользовательских данных о компоненте.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateBinding">
      <MemberSignature Language="C#" Value="public void UpdateBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ErrorProvider.UpdateBinding" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateBinding();" />
      <MemberSignature Language="F#" Value="member this.UpdateBinding : unit -&gt; unit" Usage="errorProvider.UpdateBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Предоставляет метод, позволяющий обновлять привязки <see cref="P:System.Windows.Forms.ErrorProvider.DataSource" />, <see cref="P:System.Windows.Forms.ErrorProvider.DataMember" />и текст ошибки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило, этот метод вызывается после вызова <xref:System.Windows.Forms.ErrorProvider.BindToDataAndErrors%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>