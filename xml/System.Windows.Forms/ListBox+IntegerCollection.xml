<Type Name="ListBox+IntegerCollection" FullName="System.Windows.Forms.ListBox+IntegerCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8eb94855402df233346fe1f7256c34aa4e28c98a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69185535" /></Metadata><TypeSignature Language="C#" Value="public class ListBox.IntegerCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListBox/IntegerCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListBox.IntegerCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListBox.IntegerCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListBox::IntegerCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListBox.IntegerCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="f41ce-101">Представляет коллекцию целочисленных значений в <see cref="T:System.Windows.Forms.ListBox" />.</span><span class="sxs-lookup"><span data-stu-id="f41ce-101">Represents a collection of integers in a <see cref="T:System.Windows.Forms.ListBox" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f41ce-102"><xref:System.Windows.Forms.ListBox.IntegerCollection>упорядоченная коллекция, к которой добавляются элементы с помощью <xref:System.Windows.Forms.ListBox.IntegerCollection.Add%2A> методов и. <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A></span><span class="sxs-lookup"><span data-stu-id="f41ce-102"><xref:System.Windows.Forms.ListBox.IntegerCollection> is a sorted collection to which items are appended by using the <xref:System.Windows.Forms.ListBox.IntegerCollection.Add%2A> and <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> methods.</span></span> <span data-ttu-id="f41ce-103">Дублирующиеся значения удаляются.</span><span class="sxs-lookup"><span data-stu-id="f41ce-103">Duplicate values are removed.</span></span>  
  
 <span data-ttu-id="f41ce-104">Используется <xref:System.Windows.Forms.ListBox.IntegerCollection> в основном <xref:System.Windows.Forms.ListBox.CustomTabOffsets%2A> свойством.</span><span class="sxs-lookup"><span data-stu-id="f41ce-104">The <xref:System.Windows.Forms.ListBox.IntegerCollection> is used mainly by the <xref:System.Windows.Forms.ListBox.CustomTabOffsets%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntegerCollection (System.Windows.Forms.ListBox owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListBox owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.#ctor(System.Windows.Forms.ListBox)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListBox)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntegerCollection(System::Windows::Forms::ListBox ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListBox.IntegerCollection : System.Windows.Forms.ListBox -&gt; System.Windows.Forms.ListBox.IntegerCollection" Usage="new System.Windows.Forms.ListBox.IntegerCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListBox" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="f41ce-105">Объект <see cref="T:System.Windows.Forms.ListBox" />, которому принадлежит данная коллекция.</span><span class="sxs-lookup"><span data-stu-id="f41ce-105">The <see cref="T:System.Windows.Forms.ListBox" /> that owns the collection.</span></span></param>
        <summary><span data-ttu-id="f41ce-106">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="f41ce-106">Initializes a new instance of the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f41ce-107">Нельзя создать экземпляр класса, <xref:System.Windows.Forms.ListBox.IntegerCollection> не связав его <xref:System.Windows.Forms.ListBox> с элементом управления.</span><span class="sxs-lookup"><span data-stu-id="f41ce-107">You cannot create an instance of the <xref:System.Windows.Forms.ListBox.IntegerCollection> class without associating it with a <xref:System.Windows.Forms.ListBox> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Add(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(int item);" />
      <MemberSignature Language="F#" Value="member this.Add : int -&gt; int" Usage="integerCollection.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f41ce-108">Целое число, которое следует добавить в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="f41ce-108">The integer to add to the collection.</span></span></param>
        <summary><span data-ttu-id="f41ce-109">Добавляет уникальное целое значение в коллекцию в упорядоченном виде.</span><span class="sxs-lookup"><span data-stu-id="f41ce-109">Adds a unique integer to the collection in sorted order.</span></span></summary>
        <returns><span data-ttu-id="f41ce-110">Индекс добавляемого элемента.</span><span class="sxs-lookup"><span data-stu-id="f41ce-110">The index of the added item.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="f41ce-111">Недостаточно места для сохранения нового элемента.</span><span class="sxs-lookup"><span data-stu-id="f41ce-111">There is insufficient space available to store the new item.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f41ce-112">Добавляет группу целых чисел в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="f41ce-112">Adds a group of integers to the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (int[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(int32[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.AddRange(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;int&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.AddRange : int[] -&gt; unit" Usage="integerCollection.AddRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="items"><span data-ttu-id="f41ce-113">Массив целых чисел, добавляемый в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="f41ce-113">The array of integers to add to the collection.</span></span></param>
        <summary><span data-ttu-id="f41ce-114">Добавляет в коллекцию массив целых чисел.</span><span class="sxs-lookup"><span data-stu-id="f41ce-114">Adds an array of integers to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f41ce-115">Массив целых чисел добавляется в коллекцию, а дубликаты удаляются из коллекции.</span><span class="sxs-lookup"><span data-stu-id="f41ce-115">The array of integers is appended to the collection, and duplicates are removed from the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListBox.IntegerCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListBox/IntegerCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.AddRange(System.Windows.Forms.ListBox.IntegerCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As ListBox.IntegerCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListBox::IntegerCollection ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListBox.IntegerCollection -&gt; unit" Usage="integerCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListBox+IntegerCollection" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f41ce-116">Коллекция <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />, добавляемая в другую коллекцию.</span><span class="sxs-lookup"><span data-stu-id="f41ce-116">The <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> to add to another collection.</span></span></param>
        <summary><span data-ttu-id="f41ce-117">Добавляет содержимое существующей коллекции <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> в другую коллекцию.</span><span class="sxs-lookup"><span data-stu-id="f41ce-117">Adds the contents of an existing <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> to another collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f41ce-118">Содержимое существующих <xref:System.Windows.Forms.ListBox.IntegerCollection> элементов добавляется к текущей коллекции, а дубликаты удаляются из объединенной коллекции.</span><span class="sxs-lookup"><span data-stu-id="f41ce-118">The contents of the existing <xref:System.Windows.Forms.ListBox.IntegerCollection> are appended to the current collection, and duplicates are removed from the combined collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="integerCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f41ce-119">Удаляет все целые числа из <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="f41ce-119">Removes all integers from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.IntegerCollection.Remove(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Contains(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(int item);" />
      <MemberSignature Language="F#" Value="member this.Contains : int -&gt; bool" Usage="integerCollection.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f41ce-120">Целое число, которое следует найти в коллекции.</span><span class="sxs-lookup"><span data-stu-id="f41ce-120">The integer to search for in the collection.</span></span></param>
        <summary><span data-ttu-id="f41ce-121">Определяет, находится ли указанное целое число в коллекции.</span><span class="sxs-lookup"><span data-stu-id="f41ce-121">Determines whether the specified integer is in the collection.</span></span></summary>
        <returns><span data-ttu-id="f41ce-122"><see langword="true" />, если указанное целое число в коллекции; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f41ce-122"><see langword="true" /> if the specified integer is in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f41ce-123">Используйте метод, чтобы определить, является ли целое число членом <xref:System.Windows.Forms.ListBox.IntegerCollection>. <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A></span><span class="sxs-lookup"><span data-stu-id="f41ce-123">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> method to determine whether an integer is a member of the <xref:System.Windows.Forms.ListBox.IntegerCollection>.</span></span> <span data-ttu-id="f41ce-124">Если известно, что элемент находится в коллекции, можно использовать <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> метод, чтобы определить, где находится элемент в коллекции.</span><span class="sxs-lookup"><span data-stu-id="f41ce-124">Once you know that the item is located within the collection, you can use the <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> method to determine where the item is located within the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array destination, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array destination, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ destination, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="integerCollection.CopyTo (destination, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="f41ce-125">Массив, в который копируется коллекция <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="f41ce-125">The array into which the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> is copied.</span></span></param>
        <param name="index"><span data-ttu-id="f41ce-126">Местоположение в конечном массиве, в которое копируется коллекция <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="f41ce-126">The location within the destination array to which to copy the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="f41ce-127">Копирует всю коллекцию <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> в указанное место существующего массива целых чисел.</span><span class="sxs-lookup"><span data-stu-id="f41ce-127">Copies the entire <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> into an existing array of integers at a specified location within the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f41ce-128">Используйте метод <xref:System.Windows.Forms.ListBox.IntegerCollection.CopyTo%2A> , чтобы объединить целые числа из нескольких коллекций в один массив.</span><span class="sxs-lookup"><span data-stu-id="f41ce-128">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.CopyTo%2A> method to combine the integers from multiple collections into a single array.</span></span> <span data-ttu-id="f41ce-129">Затем этот массив можно использовать для заполнения содержимого другого <xref:System.Windows.Forms.ListBox> элемента управления <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> с помощью метода.</span><span class="sxs-lookup"><span data-stu-id="f41ce-129">You can then use this array to populate the contents of another <xref:System.Windows.Forms.ListBox> control using the <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListBox.IntegerCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f41ce-130">Возвращает число выбранных элементов в объекте <see cref="T:System.Windows.Forms.ListBox" />.</span><span class="sxs-lookup"><span data-stu-id="f41ce-130">Gets the number of selected items in the <see cref="T:System.Windows.Forms.ListBox" />.</span></span></summary>
        <value><span data-ttu-id="f41ce-131">Число выбранных элементов в объекте <see cref="T:System.Windows.Forms.ListBox" />.</span><span class="sxs-lookup"><span data-stu-id="f41ce-131">The number of selected items in the <see cref="T:System.Windows.Forms.ListBox" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f41ce-132">Используйте свойство для определения числа выбранных элементов <xref:System.Windows.Forms.ListBox.IntegerCollection>в. <xref:System.Windows.Forms.ListBox.IntegerCollection.Count%2A></span><span class="sxs-lookup"><span data-stu-id="f41ce-132">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Count%2A> property to determine the number of selected items in the <xref:System.Windows.Forms.ListBox.IntegerCollection>.</span></span> <span data-ttu-id="f41ce-133">Затем это значение можно использовать при переборе элементов и необходимо предоставить несколько итераций для выполнения цикла.</span><span class="sxs-lookup"><span data-stu-id="f41ce-133">You can then use this value when you are looping through the items and you need to provide a number of iterations to perform the loop.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.IndexOf(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(int item);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : int -&gt; int" Usage="integerCollection.IndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f41ce-134">Целое число, для которого следует извлечь индекс.</span><span class="sxs-lookup"><span data-stu-id="f41ce-134">The integer for which to retrieve the index.</span></span></param>
        <summary><span data-ttu-id="f41ce-135">Возвращает индекс указанного целого числа в коллекции <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="f41ce-135">Retrieves the index within the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> of the specified integer.</span></span></summary>
        <returns><span data-ttu-id="f41ce-136">Начинающийся с нуля индекс целого числа в коллекции <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />; в противном случае -1.</span><span class="sxs-lookup"><span data-stu-id="f41ce-136">The zero-based index of the integer in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />; otherwise, negative one (-1).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f41ce-137">Используйте метод <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> , чтобы определить, где находится элемент в коллекции.</span><span class="sxs-lookup"><span data-stu-id="f41ce-137">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> method to determine where an item is located within the collection.</span></span> <span data-ttu-id="f41ce-138">Чтобы определить, находится ли элемент в коллекции перед вызовом этого метода, используйте <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="f41ce-138">To determine whether an item is located within the collection before calling this method, use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public int this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int default[int] { int get(int index); void set(int index, int value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : int with get, set" Usage="System.Windows.Forms.ListBox.IntegerCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="f41ce-139">Позиция свойства <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> в коллекции.</span><span class="sxs-lookup"><span data-stu-id="f41ce-139">The position of the <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> in the collection.</span></span></param>
        <summary><span data-ttu-id="f41ce-140">Получает или задает объект <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> с заданным индексом.</span><span class="sxs-lookup"><span data-stu-id="f41ce-140">Gets or sets the <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> having the specified index.</span></span></summary>
        <value><span data-ttu-id="f41ce-141">Выбранное свойство <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> в указанной позиции.</span><span class="sxs-lookup"><span data-stu-id="f41ce-141">The selected <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> at the specified position.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Remove(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(int item);" />
      <MemberSignature Language="F#" Value="member this.Remove : int -&gt; unit" Usage="integerCollection.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f41ce-142">Целое число, которое следует удалить из коллекции <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="f41ce-142">The integer to remove from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="f41ce-143">Удаляет заданное целое число из коллекции <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="f41ce-143">Removes the specified integer from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f41ce-144">При удалении целого числа из значения <xref:System.Windows.Forms.ListBox.IntegerCollection>индексы изменяются для последующих целых чисел в коллекции.</span><span class="sxs-lookup"><span data-stu-id="f41ce-144">When you remove an integer from the <xref:System.Windows.Forms.ListBox.IntegerCollection>, the indexes change for subsequent integers in the collection.</span></span> <span data-ttu-id="f41ce-145">Все сведения об удаленном целочисленном удалении удаляются.</span><span class="sxs-lookup"><span data-stu-id="f41ce-145">All information about the removed integer is deleted.</span></span> <span data-ttu-id="f41ce-146">С помощью <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> метода можно удалить конкретный элемент из списка, указав фактический элемент, который необходимо удалить из списка.</span><span class="sxs-lookup"><span data-stu-id="f41ce-146">You can use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> method to remove a specific item from the list by specifying the actual item to remove from the list.</span></span> <span data-ttu-id="f41ce-147">Чтобы указать индекс удаляемого целого числа вместо самого целого числа, используйте <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="f41ce-147">To specify the index of the integer to remove instead of the integer itself, use the <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> method.</span></span>  
  
 <span data-ttu-id="f41ce-148">Если целое число отсутствует в <xref:System.Windows.Forms.ListBox.IntegerCollection>, этот метод не выполняет никаких действий.</span><span class="sxs-lookup"><span data-stu-id="f41ce-148">If the integer is not in the <xref:System.Windows.Forms.ListBox.IntegerCollection>, this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="integerCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="f41ce-149">Начинающийся с нуля индекс удаляемого целого числа.</span><span class="sxs-lookup"><span data-stu-id="f41ce-149">The zero-based index of the integer to remove.</span></span></param>
        <summary><span data-ttu-id="f41ce-150">Удаляет из коллекции <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> целое число с заданным индексом.</span><span class="sxs-lookup"><span data-stu-id="f41ce-150">Removes the integer at the specified index from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f41ce-151">При удалении целого числа из значения <xref:System.Windows.Forms.ListBox.IntegerCollection>индексы изменяются для последующих целых чисел в коллекции.</span><span class="sxs-lookup"><span data-stu-id="f41ce-151">When you remove an integer from the <xref:System.Windows.Forms.ListBox.IntegerCollection>, the indexes change for subsequent integers in the collection.</span></span> <span data-ttu-id="f41ce-152">Все сведения об удаленном целочисленном удалении удаляются.</span><span class="sxs-lookup"><span data-stu-id="f41ce-152">All information about the removed integer is deleted.</span></span> <span data-ttu-id="f41ce-153">С помощью <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> метода можно удалить определенное целое число из списка, указав индекс целого числа, которое необходимо удалить из списка.</span><span class="sxs-lookup"><span data-stu-id="f41ce-153">You can use the <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> method to remove a specific integer from the list by specifying the index of the integer to remove from the list.</span></span> <span data-ttu-id="f41ce-154">Чтобы указать удаляемый элемент, а не индекс элемента, используйте <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="f41ce-154">To specify the item to remove instead of the index to the item, use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f41ce-155">Возвращает значение, указывающее, является ли доступ к коллекции синхронизированным (потокобезопасным).</span><span class="sxs-lookup"><span data-stu-id="f41ce-155">Gets a value indicating whether access to the collection is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="f41ce-156">Значение <see langword="true" /> во всех случаях.</span><span class="sxs-lookup"><span data-stu-id="f41ce-156"><see langword="true" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f41ce-157">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="f41ce-157">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f41ce-158">Он может использоваться, только если экземпляр <xref:System.Windows.Forms.ListBox.IntegerCollection> приведен к типу интерфейса <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="f41ce-158">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f41ce-159">Возвращает объект, который может быть использован для синхронизации доступа к коллекции элементов управления.</span><span class="sxs-lookup"><span data-stu-id="f41ce-159">Gets an object that can be used to synchronize access to the collection of controls.</span></span></summary>
        <value><span data-ttu-id="f41ce-160">Объект, используемый для синхронизации коллекции.</span><span class="sxs-lookup"><span data-stu-id="f41ce-160">The object used to synchronize to the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f41ce-161">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="f41ce-161">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f41ce-162">Он может использоваться, только если экземпляр <xref:System.Windows.Forms.ListBox.IntegerCollection> приведен к типу интерфейса <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="f41ce-162">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f41ce-163">Получает перечисление всех целых чисел в коллекции <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="f41ce-163">Retrieves an enumeration of all the integers in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></summary>
        <returns><span data-ttu-id="f41ce-164">Интерфейс <see cref="T:System.Collections.IEnumerator" /> для <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="f41ce-164">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f41ce-165">Этот метод создает перечислитель, содержащий моментальный снимок коллекции.</span><span class="sxs-lookup"><span data-stu-id="f41ce-165">This method creates an enumerator that contains a snapshot of the collection.</span></span> <span data-ttu-id="f41ce-166">Коллекцию можно изменить, изменив перечислитель. Однако несколько перечислителей могут одновременно обращаться к одной и той же коллекции.</span><span class="sxs-lookup"><span data-stu-id="f41ce-166">You can change the collection by changing the enumerator; however, multiple enumerators can simultaneously access the same collection.</span></span> <span data-ttu-id="f41ce-167">Изменение коллекции (непосредственно или через другой перечислитель) может привести к <xref:System.Collections.IEnumerator.Current%2A> возникновению <xref:System.Collections.IEnumerator.MoveNext%2A> исключения или вызвать исключение.</span><span class="sxs-lookup"><span data-stu-id="f41ce-167">Changing the collection (either directly or through another enumerator) can thus cause <xref:System.Collections.IEnumerator.Current%2A> or <xref:System.Collections.IEnumerator.MoveNext%2A> to throw an exception.</span></span>  
  
 <span data-ttu-id="f41ce-168">Два перечислителей, созданные из одной коллекции в одно и то же время, могут содержать разные моментальные снимки.</span><span class="sxs-lookup"><span data-stu-id="f41ce-168">Two enumerators created from the same collection at the same time can contain different snapshots.</span></span>  
  
 <span data-ttu-id="f41ce-169">Удаление объектов из перечислителя также приводит к их удалению из коллекции.</span><span class="sxs-lookup"><span data-stu-id="f41ce-169">Removing objects from the enumerator also removes them from the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f41ce-170">Позиция табуляции, добавляемая в коллекцию <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="f41ce-170">The tab stop to add to the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="f41ce-171">Добавляет в коллекцию позицию табуляции.</span><span class="sxs-lookup"><span data-stu-id="f41ce-171">Adds a tab stop to the collection.</span></span></summary>
        <returns><span data-ttu-id="f41ce-172">Индекс, соответствующий целому числу, добавленному в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="f41ce-172">The index at which the integer was added to the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f41ce-173">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="f41ce-173">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f41ce-174">Он может использоваться, только если экземпляр <xref:System.Windows.Forms.ListBox.IntegerCollection> приведен к типу интерфейса <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="f41ce-174">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f41ce-175">Свойство <paramref name="item" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f41ce-175"><paramref name="item" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f41ce-176"><paramref name="item" /> не является 32-разрядным целым числом со знаком.</span><span class="sxs-lookup"><span data-stu-id="f41ce-176"><paramref name="item" /> is not an 32-bit signed integer.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="f41ce-177">Недостаточно места для сохранения нового элемента в коллекции.</span><span class="sxs-lookup"><span data-stu-id="f41ce-177">There is insufficient space to store the new item in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f41ce-178">Удаляет все позиции табуляции из коллекции.</span><span class="sxs-lookup"><span data-stu-id="f41ce-178">Clears all the tab stops from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f41ce-179">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="f41ce-179">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f41ce-180">Он может использоваться, только если экземпляр <xref:System.Windows.Forms.ListBox.IntegerCollection> приведен к типу интерфейса <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="f41ce-180">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ item) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f41ce-181">Позиция табуляции, которую следует найти в коллекции <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="f41ce-181">The tab stop to locate in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="f41ce-182">Определяет, находится ли указанная позиция табуляции в коллекции.</span><span class="sxs-lookup"><span data-stu-id="f41ce-182">Determines whether the specified tab stop is in the collection.</span></span></summary>
        <returns><span data-ttu-id="f41ce-183">Значение <see langword="true" />, если элемент является целым числом, находящимся в IntegerCollection; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f41ce-183"><see langword="true" /> if item is an integer located in the IntegerCollection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f41ce-184">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="f41ce-184">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f41ce-185">Он может использоваться, только если экземпляр <xref:System.Windows.Forms.ListBox.IntegerCollection> приведен к типу интерфейса <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="f41ce-185">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (item As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ item) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f41ce-186">Позиция табуляции, которую следует найти в коллекции <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="f41ce-186">The tab stop to locate in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="f41ce-187">Возвращает индекс заданной позиции табуляции в коллекции.</span><span class="sxs-lookup"><span data-stu-id="f41ce-187">Returns the index of the specified tab stop in the collection.</span></span></summary>
        <returns><span data-ttu-id="f41ce-188">Начинающийся с нуля индекс найденного элемента в коллекции <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />; в противном случае — -1.</span><span class="sxs-lookup"><span data-stu-id="f41ce-188">The zero-based index of item if it was found in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f41ce-189">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="f41ce-189">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f41ce-190">Он может использоваться, только если экземпляр <xref:System.Windows.Forms.ListBox.IntegerCollection> приведен к типу интерфейса <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="f41ce-190">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="f41ce-191">Индекс (отсчет с нуля), по которому необходимо вставить значение.</span><span class="sxs-lookup"><span data-stu-id="f41ce-191">The zero-based index at which value should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="f41ce-192">Объект, вставляемый в коллекцию <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="f41ce-192">The object to insert into the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="f41ce-193">Вставляет элемент в коллекцию по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="f41ce-193">Inserts an item into the collection at a specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f41ce-194">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="f41ce-194">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f41ce-195">Он может использоваться, только если экземпляр <xref:System.Windows.Forms.ListBox.IntegerCollection> приведен к типу интерфейса <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="f41ce-195">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f41ce-196">Создается всегда.</span><span class="sxs-lookup"><span data-stu-id="f41ce-196">Always thrown.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f41ce-197">Возвращает значение, указывающее, имеет ли коллекция фиксированный размер.</span><span class="sxs-lookup"><span data-stu-id="f41ce-197">Gets a value indicating whether the collection has a fixed size.</span></span></summary>
        <value><span data-ttu-id="f41ce-198">Значение <see langword="true" /> во всех случаях.</span><span class="sxs-lookup"><span data-stu-id="f41ce-198"><see langword="true" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f41ce-199">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="f41ce-199">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f41ce-200">Он может использоваться, только если экземпляр <xref:System.Windows.Forms.ListBox.IntegerCollection> приведен к типу интерфейса <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="f41ce-200">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f41ce-201">Возвращает значение, указывающее, является ли коллекция доступной только для чтения.</span><span class="sxs-lookup"><span data-stu-id="f41ce-201">Gets a value indicating whether the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="f41ce-202">Значение <see langword="false" /> во всех случаях.</span><span class="sxs-lookup"><span data-stu-id="f41ce-202"><see langword="false" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f41ce-203">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="f41ce-203">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f41ce-204">Он может использоваться, только если экземпляр <xref:System.Windows.Forms.ListBox.IntegerCollection> приведен к типу интерфейса <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="f41ce-204">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="f41ce-205">Начинающийся с нуля индекс, который указывает позицию табуляции, которую следует возвратить.</span><span class="sxs-lookup"><span data-stu-id="f41ce-205">The zero-based index that specifies which tab stop to get.</span></span></param>
        <summary><span data-ttu-id="f41ce-206">Получает или задает позицию табуляции по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="f41ce-206">Gets or sets the tab stop at the specified index.</span></span></summary>
        <value><span data-ttu-id="f41ce-207">Позиция табуляции, хранящаяся в определенном месте коллекции <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="f41ce-207">The tab stop that is stored at the specified location in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f41ce-208">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="f41ce-208">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f41ce-209">Он может использоваться, только если экземпляр <xref:System.Windows.Forms.ListBox.IntegerCollection> приведен к типу интерфейса <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="f41ce-209">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f41ce-210">Объект не является целым числом.</span><span class="sxs-lookup"><span data-stu-id="f41ce-210">The object is not an integer.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f41ce-211">Объект, добавляемый в коллекцию <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span><span class="sxs-lookup"><span data-stu-id="f41ce-211">The object to add to the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span></span></param>
        <summary><span data-ttu-id="f41ce-212">Удаляет первое вхождение элемента из коллекции.</span><span class="sxs-lookup"><span data-stu-id="f41ce-212">Removes the first occurrence of an item from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f41ce-213">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="f41ce-213">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f41ce-214">Он может использоваться, только если экземпляр <xref:System.Windows.Forms.ListBox.IntegerCollection> приведен к типу интерфейса <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="f41ce-214">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f41ce-215">Создается всегда.</span><span class="sxs-lookup"><span data-stu-id="f41ce-215">Always thrown.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="f41ce-216">Индекс удаляемого элемента.</span><span class="sxs-lookup"><span data-stu-id="f41ce-216">The index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="f41ce-217">Удаляет элемент по указанному индексу.</span><span class="sxs-lookup"><span data-stu-id="f41ce-217">Removes the item at a specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f41ce-218">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="f41ce-218">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f41ce-219">Он может использоваться, только если экземпляр <xref:System.Windows.Forms.ListBox.IntegerCollection> приведен к типу интерфейса <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="f41ce-219">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f41ce-220">Создается всегда.</span><span class="sxs-lookup"><span data-stu-id="f41ce-220">Always thrown.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
