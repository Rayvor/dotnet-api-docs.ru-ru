<Type Name="SearchForVirtualItemEventArgs" FullName="System.Windows.Forms.SearchForVirtualItemEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="51a619c25683f5506a53cf42cc11b4acdec8c3c1" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69180642" /></Metadata><TypeSignature Language="C#" Value="public class SearchForVirtualItemEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SearchForVirtualItemEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.SearchForVirtualItemEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SearchForVirtualItemEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SearchForVirtualItemEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type SearchForVirtualItemEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет данные для события <see cref="E:System.Windows.Forms.ListView.SearchForVirtualItem" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Forms.SearchForVirtualItemEventArgs> создается и передается <xref:System.Windows.Forms.ListView.SearchForVirtualItem> в <xref:System.Windows.Forms.ListView.FindItemWithText%2A> событие при вызове методов или <xref:System.Windows.Forms.ListView.FindNearestItem%2A> для <xref:System.Windows.Forms.ListView> элемента управления в виртуальном режиме.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование этого типа. В этом примере обработчик событий сообщает о возникновении <xref:System.Windows.Forms.ListView.SearchForVirtualItem> события. Этот отчет поможет вам узнать, когда происходит событие и может помочь при отладке. Чтобы сообщить о нескольких событиях или о событиях, которые происходят часто, рассмотрите <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A> или добавления сообщения в многострочный <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы выполнить пример кода, вставьте его в проект, содержащий экземпляр типа <xref:System.Windows.Forms.ListView> с именем. `ListView1` Затем убедитесь, что обработчик событий связан с <xref:System.Windows.Forms.ListView.SearchForVirtualItem> событием.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#480](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#480)]
 [!code-vb[System.Windows.Forms.EventExamples#480](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#480)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SearchForVirtualItemEventArgs (bool isTextSearch, bool isPrefixSearch, bool includeSubItemsInSearch, string text, System.Drawing.Point startingPoint, System.Windows.Forms.SearchDirectionHint direction, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool isTextSearch, bool isPrefixSearch, bool includeSubItemsInSearch, string text, valuetype System.Drawing.Point startingPoint, valuetype System.Windows.Forms.SearchDirectionHint direction, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.SearchForVirtualItemEventArgs.#ctor(System.Boolean,System.Boolean,System.Boolean,System.String,System.Drawing.Point,System.Windows.Forms.SearchDirectionHint,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (isTextSearch As Boolean, isPrefixSearch As Boolean, includeSubItemsInSearch As Boolean, text As String, startingPoint As Point, direction As SearchDirectionHint, startIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SearchForVirtualItemEventArgs(bool isTextSearch, bool isPrefixSearch, bool includeSubItemsInSearch, System::String ^ text, System::Drawing::Point startingPoint, System::Windows::Forms::SearchDirectionHint direction, int startIndex);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.SearchForVirtualItemEventArgs : bool * bool * bool * string * System.Drawing.Point * System.Windows.Forms.SearchDirectionHint * int -&gt; System.Windows.Forms.SearchForVirtualItemEventArgs" Usage="new System.Windows.Forms.SearchForVirtualItemEventArgs (isTextSearch, isPrefixSearch, includeSubItemsInSearch, text, startingPoint, direction, startIndex)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="isTextSearch" Type="System.Boolean" />
        <Parameter Name="isPrefixSearch" Type="System.Boolean" />
        <Parameter Name="includeSubItemsInSearch" Type="System.Boolean" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="startingPoint" Type="System.Drawing.Point" />
        <Parameter Name="direction" Type="System.Windows.Forms.SearchDirectionHint" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="isTextSearch">Значение, указывающее, является ли этот поиск текстовым поиском.</param>
        <param name="isPrefixSearch">Значение, указывающее, является ли этот поиск поиском префиксов.</param>
        <param name="includeSubItemsInSearch">Значение, указывающее, следует ли включать в поиск подэлементы списка элементов.</param>
        <param name="text">Текст искомого элемента.</param>
        <param name="startingPoint">Объект <see cref="T:System.Drawing.Point" />, с которого следует начать поиск.</param>
        <param name="direction">Одно из значений <see cref="T:System.Windows.Forms.SearchDirectionHint" />.</param>
        <param name="startIndex">Индекс элемента <see cref="T:System.Windows.Forms.ListViewItem" />, с которого требуется начать поиск.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.SearchForVirtualItemEventArgs" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.SearchDirectionHint Direction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.SearchDirectionHint Direction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.SearchForVirtualItemEventArgs.Direction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Direction As SearchDirectionHint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::SearchDirectionHint Direction { System::Windows::Forms::SearchDirectionHint get(); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Windows.Forms.SearchDirectionHint" Usage="System.Windows.Forms.SearchForVirtualItemEventArgs.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SearchDirectionHint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает направление из текущего элемента, в котором должен выполняться поиск.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Windows.Forms.SearchDirectionHint" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Определение ближайшего элемента в <xref:System.Windows.Forms.ListView> элементе управления может различаться в зависимости от операционной системы, в которой выполняется приложение, поэтому направление поиска является указанием, а не абсолютной гарантией результатов.  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В этом примере обработчик событий сообщает о возникновении <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> события. Этот отчет поможет вам узнать, когда происходит событие и может помочь при отладке. Чтобы сообщить о нескольких событиях или о событиях, которые происходят часто, рассмотрите <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> или добавления сообщения в многострочный <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы выполнить пример кода, вставьте его в проект, содержащий экземпляр типа <xref:System.Windows.Forms.ListView> с именем. `ListView1` Затем убедитесь, что обработчик событий связан с <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> событием.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#480](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#480)]
 [!code-vb[System.Windows.Forms.EventExamples#480](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#480)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeSubItemsInSearch">
      <MemberSignature Language="C#" Value="public bool IncludeSubItemsInSearch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeSubItemsInSearch" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.SearchForVirtualItemEventArgs.IncludeSubItemsInSearch" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncludeSubItemsInSearch As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeSubItemsInSearch { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IncludeSubItemsInSearch : bool" Usage="System.Windows.Forms.SearchForVirtualItemEventArgs.IncludeSubItemsInSearch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, следует ли включать в поиск подэлементы списка элементов.</summary>
        <value>Значение <see langword="true" />, если подэлементы должны быть включены в поиск; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Подэлементы обычно используются, когда <xref:System.Windows.Forms.ListView> представление находится в <xref:System.Windows.Forms.View.Details> представлении.  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В этом примере обработчик событий сообщает о возникновении <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> события. Этот отчет поможет вам узнать, когда происходит событие и может помочь при отладке. Чтобы сообщить о нескольких событиях или о событиях, которые происходят часто, рассмотрите <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> или добавления сообщения в многострочный <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы выполнить пример кода, вставьте его в проект, содержащий экземпляр типа <xref:System.Windows.Forms.ListView> с именем. `ListView1` Затем убедитесь, что обработчик событий связан с <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> событием.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#480](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#480)]
 [!code-vb[System.Windows.Forms.EventExamples#480](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#480)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.SearchForVirtualItemEventArgs.Index" />
      <MemberSignature Language="VB.NET" Value="Public Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Index : int with get, set" Usage="System.Windows.Forms.SearchForVirtualItemEventArgs.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает индекс элемента <see cref="T:System.Windows.Forms.ListViewItem" />, найденного в представлении <see cref="T:System.Windows.Forms.ListView" />.</summary>
        <value>Индекс элемента <see cref="T:System.Windows.Forms.ListViewItem" />, найденного в представлении <see cref="T:System.Windows.Forms.ListView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Задайте для <xref:System.Windows.Forms.ListView.SearchForVirtualItem> свойства индекс элемента, соответствующий условиям поиска при обработке события. <xref:System.Windows.Forms.SearchForVirtualItemEventArgs.Index%2A>  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В этом примере обработчик событий сообщает о возникновении <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> события. Этот отчет поможет вам узнать, когда происходит событие и может помочь при отладке. Чтобы сообщить о нескольких событиях или о событиях, которые происходят часто, рассмотрите <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> или добавления сообщения в многострочный <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы выполнить пример кода, вставьте его в проект, содержащий экземпляр типа <xref:System.Windows.Forms.ListView> с именем. `ListView1` Затем убедитесь, что обработчик событий связан с <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> событием.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#480](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#480)]
 [!code-vb[System.Windows.Forms.EventExamples#480](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#480)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrefixSearch">
      <MemberSignature Language="C#" Value="public bool IsPrefixSearch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrefixSearch" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.SearchForVirtualItemEventArgs.IsPrefixSearch" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrefixSearch As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrefixSearch { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrefixSearch : bool" Usage="System.Windows.Forms.SearchForVirtualItemEventArgs.IsPrefixSearch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, должен ли поиск получить элемент, если его текст начинается с текста, указанного в поисковом запросе.</summary>
        <value>Значение <see langword="true" />, если при поиске необходимо сопоставлять текст элемента, который начинается с текста, указанного в запросе; в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.SearchForVirtualItemEventArgs.Text%2A> Свойство может указывать подстроку требуемого текста. <xref:System.Windows.Forms.SearchForVirtualItemEventArgs.IsPrefixSearch%2A> Свойство указывает, должен ли поиск сопоставлять элементы, начинающиеся с искомого текста.  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В этом примере обработчик событий сообщает о возникновении <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> события. Этот отчет поможет вам узнать, когда происходит событие и может помочь при отладке. Чтобы сообщить о нескольких событиях или о событиях, которые происходят часто, рассмотрите <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> или добавления сообщения в многострочный <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы выполнить пример кода, вставьте его в проект, содержащий экземпляр типа <xref:System.Windows.Forms.ListView> с именем. `ListView1` Затем убедитесь, что обработчик событий связан с <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> событием.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#480](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#480)]
 [!code-vb[System.Windows.Forms.EventExamples#480](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#480)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTextSearch">
      <MemberSignature Language="C#" Value="public bool IsTextSearch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTextSearch" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.SearchForVirtualItemEventArgs.IsTextSearch" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTextSearch As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTextSearch { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTextSearch : bool" Usage="System.Windows.Forms.SearchForVirtualItemEventArgs.IsTextSearch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, является ли этот поиск текстовым поиском.</summary>
        <value>Значение <see langword="true" />, если поиск является текстовым; значение <see langword="false" />, если поиск является поиском местоположения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно выполнять поиск в <xref:System.Windows.Forms.ListView> элементе управления по расположению с <xref:System.Windows.Forms.ListView.FindNearestItem%2A> помощью метода или с помощью <xref:System.Windows.Forms.ListView.FindItemWithText%2A> метода.  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В этом примере обработчик событий сообщает о возникновении <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> события. Этот отчет поможет вам узнать, когда происходит событие и может помочь при отладке. Чтобы сообщить о нескольких событиях или о событиях, которые происходят часто, рассмотрите <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> или добавления сообщения в многострочный <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы выполнить пример кода, вставьте его в проект, содержащий экземпляр типа <xref:System.Windows.Forms.ListView> с именем. `ListView1` Затем убедитесь, что обработчик событий связан с <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> событием.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#480](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#480)]
 [!code-vb[System.Windows.Forms.EventExamples#480](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#480)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartIndex">
      <MemberSignature Language="C#" Value="public int StartIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StartIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.SearchForVirtualItemEventArgs.StartIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StartIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.StartIndex : int" Usage="System.Windows.Forms.SearchForVirtualItemEventArgs.StartIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает индекс элемента <see cref="T:System.Windows.Forms.ListViewItem" />, с которого начинается поиск.</summary>
        <value>Индекс элемента <see cref="T:System.Windows.Forms.ListViewItem" />, с которого начинается поиск.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство используется для поиска по расположению.  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В этом примере обработчик событий сообщает о возникновении <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> события. Этот отчет поможет вам узнать, когда происходит событие и может помочь при отладке. Чтобы сообщить о нескольких событиях или о событиях, которые происходят часто, рассмотрите <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> или добавления сообщения в многострочный <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы выполнить пример кода, вставьте его в проект, содержащий экземпляр типа <xref:System.Windows.Forms.ListView> с именем. `ListView1` Затем убедитесь, что обработчик событий связан с <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> событием.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#480](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#480)]
 [!code-vb[System.Windows.Forms.EventExamples#480](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#480)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartingPoint">
      <MemberSignature Language="C#" Value="public System.Drawing.Point StartingPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point StartingPoint" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.SearchForVirtualItemEventArgs.StartingPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartingPoint As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point StartingPoint { System::Drawing::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.StartingPoint : System.Drawing.Point" Usage="System.Windows.Forms.SearchForVirtualItemEventArgs.StartingPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает начальное положение поиска.</summary>
        <value>Объект <see cref="T:System.Drawing.Point" />, указывающий начальное положение для поиска.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно выполнять поиск в <xref:System.Windows.Forms.ListView> элементе управления по расположению с <xref:System.Windows.Forms.ListView.FindNearestItem%2A> помощью метода или с помощью <xref:System.Windows.Forms.ListView.FindItemWithText%2A> метода.  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В этом примере обработчик событий сообщает о возникновении <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> события. Этот отчет поможет вам узнать, когда происходит событие и может помочь при отладке. Чтобы сообщить о нескольких событиях или о событиях, которые происходят часто, рассмотрите <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> или добавления сообщения в многострочный <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы выполнить пример кода, вставьте его в проект, содержащий экземпляр типа <xref:System.Windows.Forms.ListView> с именем. `ListView1` Затем убедитесь, что обработчик событий связан с <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> событием.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#480](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#480)]
 [!code-vb[System.Windows.Forms.EventExamples#480](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#480)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.SearchForVirtualItemEventArgs.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Text : string" Usage="System.Windows.Forms.SearchForVirtualItemEventArgs.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает текст, используемый для нахождения элемента в элементе управления <see cref="T:System.Windows.Forms.ListView" />.</summary>
        <value>Текст, используемый для нахождения элемента в элементе управления <see cref="T:System.Windows.Forms.ListView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно выполнять поиск в <xref:System.Windows.Forms.ListView> элементе управления по расположению с <xref:System.Windows.Forms.ListView.FindNearestItem%2A> помощью метода или с помощью <xref:System.Windows.Forms.ListView.FindItemWithText%2A> метода.  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В этом примере обработчик событий сообщает о возникновении <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> события. Этот отчет поможет вам узнать, когда происходит событие и может помочь при отладке. Чтобы сообщить о нескольких событиях или о событиях, которые происходят часто, рассмотрите <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> или добавления сообщения в многострочный <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы выполнить пример кода, вставьте его в проект, содержащий экземпляр типа <xref:System.Windows.Forms.ListView> с именем. `ListView1` Затем убедитесь, что обработчик событий связан с <xref:System.Windows.Forms.ListView.SearchForVirtualItem?displayProperty=nameWithType> событием.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#480](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#480)]
 [!code-vb[System.Windows.Forms.EventExamples#480](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#480)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
