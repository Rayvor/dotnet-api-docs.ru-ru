<Type Name="IDataObject" FullName="System.Windows.Forms.IDataObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5abc2b039389d79c9a7337771dae53202d6337a9" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69187743" /></Metadata><TypeSignature Language="C#" Value="public interface IDataObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IDataObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataObject" />
  <TypeSignature Language="F#" Value="type IDataObject = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6a86f-101">Предоставляет не зависящий от формата механизм передачи данных.</span><span class="sxs-lookup"><span data-stu-id="6a86f-101">Provides a format-independent mechanism for transferring data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a86f-102">`IDataObject` Интерфейс используется<xref:System.Windows.Forms.Clipboard> классом и в операциях перетаскивания.</span><span class="sxs-lookup"><span data-stu-id="6a86f-102">The `IDataObject` interface is used by the <xref:System.Windows.Forms.Clipboard> class and in drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="6a86f-103">При реализации в классе <xref:System.Windows.Forms.IDataObject> методы позволяют пользователю хранить данные в нескольких форматах в экземпляре класса.</span><span class="sxs-lookup"><span data-stu-id="6a86f-103">When implemented in a class, the <xref:System.Windows.Forms.IDataObject> methods allow the user to store data in multiple formats in an instance of the class.</span></span> <span data-ttu-id="6a86f-104">Хранение данных в нескольких форматах повышает вероятность того, что целевое приложение, чьи требования к формату могут быть незнакомыми, может получить хранимые данные.</span><span class="sxs-lookup"><span data-stu-id="6a86f-104">Storing data in more than one format increases the chance that a target application, whose format requirements you might not know, can retrieve the stored data.</span></span> <span data-ttu-id="6a86f-105">Чтобы сохранить данные в экземпляре <xref:System.Windows.Forms.IDataObject>, <xref:System.Windows.Forms.IDataObject.SetData%2A> вызовите метод и укажите формат данных в `format` параметре.</span><span class="sxs-lookup"><span data-stu-id="6a86f-105">To store data in an instance of <xref:System.Windows.Forms.IDataObject>, call the <xref:System.Windows.Forms.IDataObject.SetData%2A> method and specify the data format in the `format` parameter.</span></span> <span data-ttu-id="6a86f-106">Установите параметр в `false` значение, если не нужно, чтобы сохраненные данные были преобразованы в другой формат при извлечении. `autoConvert`</span><span class="sxs-lookup"><span data-stu-id="6a86f-106">Set the `autoConvert` parameter to `false` if you do not want stored data to be converted to another format when it is retrieved.</span></span> <span data-ttu-id="6a86f-107">Вызовите <xref:System.Windows.Forms.IDataObject.SetData%2A> несколько раз в одном <xref:System.Windows.Forms.IDataObject> экземпляре для хранения данных более чем в одном формате.</span><span class="sxs-lookup"><span data-stu-id="6a86f-107">Invoke <xref:System.Windows.Forms.IDataObject.SetData%2A> multiple times on one instance of <xref:System.Windows.Forms.IDataObject> to store data in more than one format.</span></span>  
  
 <span data-ttu-id="6a86f-108">Хранимые данные извлекаются <xref:System.Windows.Forms.IDataObject> из объекта путем <xref:System.Windows.Forms.IDataObject.GetData%2A> вызова метода и указания формата данных в `format` параметре.</span><span class="sxs-lookup"><span data-stu-id="6a86f-108">You retrieve stored data from an <xref:System.Windows.Forms.IDataObject> by calling the <xref:System.Windows.Forms.IDataObject.GetData%2A> method and specifying the data format in the `format` parameter.</span></span> <span data-ttu-id="6a86f-109">Задайте для `autoConvert` `false` параметра значение, чтобы получить только данные, сохраненные в указанном формате.</span><span class="sxs-lookup"><span data-stu-id="6a86f-109">Set the `autoConvert` parameter to `false` to retrieve only data that was stored in the specified format.</span></span> <span data-ttu-id="6a86f-110">Для преобразования сохраненных данных в указанный формат задайте значение `autoConvert` `true`или не используйте `autoConvert`.</span><span class="sxs-lookup"><span data-stu-id="6a86f-110">To convert the stored data to the specified format, set `autoConvert` to `true`, or do not use `autoConvert`.</span></span>  
  
 <span data-ttu-id="6a86f-111">Чтобы определить форматы данных <xref:System.Windows.Forms.IDataObject>, хранящихся в, используйте следующие <xref:System.Windows.Forms.IDataObject> методы.</span><span class="sxs-lookup"><span data-stu-id="6a86f-111">To determine the formats of the data stored in an <xref:System.Windows.Forms.IDataObject>, use the following <xref:System.Windows.Forms.IDataObject> methods.</span></span>  
  
-   <span data-ttu-id="6a86f-112">Вызовите <xref:System.Windows.Forms.IDataObject.GetFormats%2A> метод, чтобы получить массив всех форматов, в которых доступны данные.</span><span class="sxs-lookup"><span data-stu-id="6a86f-112">Call the <xref:System.Windows.Forms.IDataObject.GetFormats%2A> method to retrieve an array of all the formats in which the data is available.</span></span> <span data-ttu-id="6a86f-113">Задайте для `autoConvert` `false` параметра значение, чтобы получить только те форматы, в которых хранятся данные.</span><span class="sxs-lookup"><span data-stu-id="6a86f-113">Set the `autoConvert` parameter to `false` to get only the formats in which the data is stored.</span></span> <span data-ttu-id="6a86f-114">Чтобы получить все форматы, в которых доступны данные, задайте для `autoConvert` `true`значение или не используйте этот параметр.</span><span class="sxs-lookup"><span data-stu-id="6a86f-114">To get all the formats in which the data is available, set `autoConvert` to `true`, or do not use this parameter.</span></span>  
  
-   <span data-ttu-id="6a86f-115">Вызовите <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> метод, чтобы определить, доступны ли сохраненные данные в определенном формате.</span><span class="sxs-lookup"><span data-stu-id="6a86f-115">Call the <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> method to determine whether stored data is available in a certain format.</span></span> <span data-ttu-id="6a86f-116">Если вы не хотите, чтобы сохраненные данные были преобразованы в указанный формат, присвойте `autoConvert` `false`параметру значение.</span><span class="sxs-lookup"><span data-stu-id="6a86f-116">If you do not want stored data to be converted to the specified format, set the `autoConvert` parameter to `false`.</span></span>  
  
 <span data-ttu-id="6a86f-117">См. <xref:System.Windows.Forms.DataObject> класс для реализации этого интерфейса.</span><span class="sxs-lookup"><span data-stu-id="6a86f-117">See the <xref:System.Windows.Forms.DataObject> class for an implementation of this interface.</span></span> <span data-ttu-id="6a86f-118"><xref:System.Windows.Forms.Clipboard> См. <xref:System.Windows.Forms.DataFormats> класс для предопределенных форматов данных.</span><span class="sxs-lookup"><span data-stu-id="6a86f-118">See the <xref:System.Windows.Forms.DataFormats> class for the predefined <xref:System.Windows.Forms.Clipboard> data formats.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataObject" />
    <altmember cref="T:System.Windows.Forms.DataFormats" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6a86f-119">Получает данные, связанные с заданным форматом.</span><span class="sxs-lookup"><span data-stu-id="6a86f-119">Retrieves the data associated with the specified data format.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string -&gt; obj" Usage="iDataObject.GetData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="6a86f-120">Формат извлекаемых данных.</span><span class="sxs-lookup"><span data-stu-id="6a86f-120">The format of the data to retrieve.</span></span> <span data-ttu-id="6a86f-121">Сведения о предварительно определенных форматах см. в разделе <see cref="T:System.Windows.Forms.DataFormats" />.</span><span class="sxs-lookup"><span data-stu-id="6a86f-121">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <summary><span data-ttu-id="6a86f-122">Получает данные, связанные с заданным форматом.</span><span class="sxs-lookup"><span data-stu-id="6a86f-122">Retrieves the data associated with the specified data format.</span></span></summary>
        <returns><span data-ttu-id="6a86f-123">Данные, связанные с заданным форматом, или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6a86f-123">The data associated with the specified format, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a86f-124">Если этот метод не может найти данные в указанном формате, он пытается преобразовать данные в формат.</span><span class="sxs-lookup"><span data-stu-id="6a86f-124">If this method cannot find data in the specified format, it attempts to convert the data to the format.</span></span> <span data-ttu-id="6a86f-125">Если данные не могут быть преобразованы в указанный формат, этот метод возвращает `null`значение.</span><span class="sxs-lookup"><span data-stu-id="6a86f-125">If the data cannot be converted to the specified format, this method returns `null`.</span></span>  
  
 <span data-ttu-id="6a86f-126">Чтобы определить, связаны ли данные с или их можно преобразовать в формат, вызовите <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> перед вызовом <xref:System.Windows.Forms.IDataObject.GetData%2A>метода.</span><span class="sxs-lookup"><span data-stu-id="6a86f-126">To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="6a86f-127">Вызовите метод <xref:System.Windows.Forms.IDataObject.GetFormats%2A> , чтобы получить список допустимых форматов для данных, хранящихся в этом экземпляре.</span><span class="sxs-lookup"><span data-stu-id="6a86f-127">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for a list of valid formats for the data stored in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a86f-128">Данные могут быть преобразованы в другой формат, если они были сохранены с указанием того, что преобразование разрешено, и если запрошенный формат совместим с сохраненным форматом.</span><span class="sxs-lookup"><span data-stu-id="6a86f-128">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="6a86f-129">Например, данные, хранящиеся в Юникоде, можно преобразовать в текст.</span><span class="sxs-lookup"><span data-stu-id="6a86f-129">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="6a86f-130">Реализацию этого метода см. в разделе <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6a86f-130">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a86f-131">В <xref:System.Windows.Forms.DataObject> этом примере используется класс, который реализует `IDataObject,` , чтобы `GetData` продемонстрировать использование метода.</span><span class="sxs-lookup"><span data-stu-id="6a86f-131">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject,` to demonstrate the use of the `GetData` method.</span></span> <span data-ttu-id="6a86f-132">Метод используется для получения данных, хранящихся в `myDataObject`, которые связаны `Text` с форматом.</span><span class="sxs-lookup"><span data-stu-id="6a86f-132">The method is used to retrieve the data stored in `myDataObject`, which is associated with the `Text` format.</span></span> <span data-ttu-id="6a86f-133">В этом примере предполагается, что вы уже <xref:System.Windows.Forms.Form> создали `Form1` именованный <xref:System.Windows.Forms.TextBox> объект `textBox1`и именованный объект.</span><span class="sxs-lookup"><span data-stu-id="6a86f-133">The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.</span></span>  
  
 [!code-cpp[GetData1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetData1/CPP/getdata1.cpp#1)]
 [!code-csharp[GetData1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetData1/CS/getdata1.cs#1)]
 [!code-vb[GetData1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetData1/VB/getdata1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetData(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(Type ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetData : Type -&gt; obj" Usage="iDataObject.GetData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="6a86f-134">Объект <see cref="T:System.Type" />, представляющий формат извлекаемых данных.</span><span class="sxs-lookup"><span data-stu-id="6a86f-134">A <see cref="T:System.Type" /> representing the format of the data to retrieve.</span></span> <span data-ttu-id="6a86f-135">Сведения о предварительно определенных форматах см. в разделе <see cref="T:System.Windows.Forms.DataFormats" />.</span><span class="sxs-lookup"><span data-stu-id="6a86f-135">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <summary><span data-ttu-id="6a86f-136">Получает данные, связанные с заданным форматом типа класса.</span><span class="sxs-lookup"><span data-stu-id="6a86f-136">Retrieves the data associated with the specified class type format.</span></span></summary>
        <returns><span data-ttu-id="6a86f-137">Данные, связанные с заданным форматом, или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6a86f-137">The data associated with the specified format, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a86f-138">Если этот метод не может найти данные в указанном формате, он пытается преобразовать данные в формат.</span><span class="sxs-lookup"><span data-stu-id="6a86f-138">If this method cannot find data in the specified format, it attempts to convert the data to the format.</span></span> <span data-ttu-id="6a86f-139">Если данные не могут быть преобразованы в указанный формат, этот метод возвращает `null`значение.</span><span class="sxs-lookup"><span data-stu-id="6a86f-139">If the data cannot be converted to the specified format, this method returns `null`.</span></span>  
  
 <span data-ttu-id="6a86f-140">Чтобы определить, связаны ли данные с или их можно преобразовать в формат, вызовите <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> перед вызовом <xref:System.Windows.Forms.IDataObject.GetData%2A>метода.</span><span class="sxs-lookup"><span data-stu-id="6a86f-140">To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="6a86f-141">Вызовите метод <xref:System.Windows.Forms.IDataObject.GetFormats%2A> , чтобы получить список допустимых форматов для данных, хранящихся в этом экземпляре.</span><span class="sxs-lookup"><span data-stu-id="6a86f-141">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for a list of valid formats for the data stored in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a86f-142">Данные могут быть преобразованы в другой формат, если они были сохранены с указанием того, что преобразование разрешено, и если запрошенный формат совместим с сохраненным форматом.</span><span class="sxs-lookup"><span data-stu-id="6a86f-142">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="6a86f-143">Например, данные, хранящиеся в Юникоде, можно преобразовать в текст.</span><span class="sxs-lookup"><span data-stu-id="6a86f-143">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="6a86f-144">Реализацию этого метода см. в разделе <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6a86f-144">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a86f-145">В этом примере используется <xref:System.Windows.Forms.DataObject> класс, реализующий `IDataObject`, для `GetData` демонстрации использования метода.</span><span class="sxs-lookup"><span data-stu-id="6a86f-145">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method.</span></span> <span data-ttu-id="6a86f-146">Метод используется для получения данных, хранящихся в `myObject`, которые связаны с конкретным `myType`типом.</span><span class="sxs-lookup"><span data-stu-id="6a86f-146">The method is used to retrieve the data stored in `myObject`, which is associated with a specific type, `myType`.</span></span> <span data-ttu-id="6a86f-147">Тип полученных данных отображается в окне сообщения.</span><span class="sxs-lookup"><span data-stu-id="6a86f-147">The type of the retrieved data is displayed in a message box.</span></span> <span data-ttu-id="6a86f-148">В этом примере предполагается, что вы уже <xref:System.Windows.Forms.Form> создали `Form1`именованный объект.</span><span class="sxs-lookup"><span data-stu-id="6a86f-148">The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetData2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetData2/CPP/getdata2.cpp#1)]
 [!code-csharp[GetData2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetData2/CS/getdata2.cs#1)]
 [!code-vb[GetData2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetData2/VB/getdata2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As String, autoConvert As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(System::String ^ format, bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string * bool -&gt; obj" Usage="iDataObject.GetData (format, autoConvert)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="6a86f-149">Формат извлекаемых данных.</span><span class="sxs-lookup"><span data-stu-id="6a86f-149">The format of the data to retrieve.</span></span> <span data-ttu-id="6a86f-150">Сведения о предварительно определенных форматах см. в разделе <see cref="T:System.Windows.Forms.DataFormats" />.</span><span class="sxs-lookup"><span data-stu-id="6a86f-150">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="autoConvert"><span data-ttu-id="6a86f-151">Значение <see langword="true" />, если данные необходимо преобразовать в указанный формат, и значение <see langword="false" /> в противном случае.</span><span class="sxs-lookup"><span data-stu-id="6a86f-151"><see langword="true" /> to convert the data to the specified format; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="6a86f-152">Получает данные, связанные с указанным форматом данных, используя значение типа Boolean для определения необходимости преобразования данных в этот формат.</span><span class="sxs-lookup"><span data-stu-id="6a86f-152">Retrieves the data associated with the specified data format, using a Boolean to determine whether to convert the data to the format.</span></span></summary>
        <returns><span data-ttu-id="6a86f-153">Данные, связанные с заданным форматом, или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6a86f-153">The data associated with the specified format, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a86f-154">Если параметр имеет значение `true` и этот метод не может найти данные в указанном формате, он пытается преобразовать данные в формат. `autoConvert`</span><span class="sxs-lookup"><span data-stu-id="6a86f-154">If the `autoConvert` parameter is `true` and this method cannot find data in the specified format, it attempts to convert the data to the format.</span></span> <span data-ttu-id="6a86f-155">Если данные не могут быть преобразованы в указанный формат или если данные были сохранены с `autoConvert` параметром, для `false`которого задано значение, этот `null`метод возвращает значение.</span><span class="sxs-lookup"><span data-stu-id="6a86f-155">If the data cannot be converted to the specified format, or if the data was stored with the `autoConvert` parameter set to `false`, this method returns `null`.</span></span>  
  
 <span data-ttu-id="6a86f-156">Если параметр имеет значение `false`, этот метод возвращает данные в указанном формате или `null` значение, если данные в этом формате не могут быть найдены. `autoConvert`</span><span class="sxs-lookup"><span data-stu-id="6a86f-156">If the `autoConvert` parameter is `false`, this method returns data in the specified format, or `null` if no data in this format can be found.</span></span>  
  
 <span data-ttu-id="6a86f-157">Чтобы определить, связаны ли данные с или их можно преобразовать в формат, вызовите <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> перед вызовом <xref:System.Windows.Forms.IDataObject.GetData%2A>метода.</span><span class="sxs-lookup"><span data-stu-id="6a86f-157">To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="6a86f-158">Вызовите метод <xref:System.Windows.Forms.IDataObject.GetFormats%2A> , чтобы получить список допустимых форматов для данных, хранящихся в этом экземпляре.</span><span class="sxs-lookup"><span data-stu-id="6a86f-158">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for a list of valid formats for the data stored in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a86f-159">Данные могут быть преобразованы в другой формат, если они были сохранены с указанием того, что преобразование разрешено, и если запрошенный формат совместим с сохраненным форматом.</span><span class="sxs-lookup"><span data-stu-id="6a86f-159">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="6a86f-160">Например, данные, хранящиеся в Юникоде, можно преобразовать в текст.</span><span class="sxs-lookup"><span data-stu-id="6a86f-160">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="6a86f-161">Реализацию этого метода см. в разделе <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6a86f-161">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a86f-162">В этом примере используется <xref:System.Windows.Forms.DataObject> класс, реализующий `IDataObject`, для `GetData` демонстрации использования метода.</span><span class="sxs-lookup"><span data-stu-id="6a86f-162">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method.</span></span> <span data-ttu-id="6a86f-163">В примере извлекаются данные `DataObject`, хранящиеся в, `autoConvert` с помощью параметра указывается, следует ли преобразовывать формат данных.</span><span class="sxs-lookup"><span data-stu-id="6a86f-163">The example retrieves the data stored in a `DataObject`, using the `autoConvert` parameter to specify whether or not to convert the data format.</span></span> <span data-ttu-id="6a86f-164">`myDataObject` Сначала создается с текстовыми данными.</span><span class="sxs-lookup"><span data-stu-id="6a86f-164">First, `myDataObject` is created with text data.</span></span> <span data-ttu-id="6a86f-165">Затем пример пытается дважды получить данные.</span><span class="sxs-lookup"><span data-stu-id="6a86f-165">Then the example tries twice to retrieve the data.</span></span> <span data-ttu-id="6a86f-166">В первой пробной версии она задает формат в виде строки и задает для `autoConvert` `false`параметра значение.</span><span class="sxs-lookup"><span data-stu-id="6a86f-166">In the first trial, it specifies its format as a string and sets the `autoConvert` parameter to `false`.</span></span> <span data-ttu-id="6a86f-167">Эта пробная версия завершается ошибкой, и результат отображается в окне сообщения с меткой "сообщение #1".</span><span class="sxs-lookup"><span data-stu-id="6a86f-167">This trial fails, and the result is displayed in a message box labeled "Message #1."</span></span> <span data-ttu-id="6a86f-168">Во второй пробной версии в примере извлекаются те же данные `autoConvert` с параметром `true`, имеющим значение.</span><span class="sxs-lookup"><span data-stu-id="6a86f-168">In the second trial, the example retrieves the same data with the `autoConvert` parameter set to `true`.</span></span> <span data-ttu-id="6a86f-169">Эта пробная версия прошла удачно, и результат отображается в окне сообщения с меткой "сообщение #2".</span><span class="sxs-lookup"><span data-stu-id="6a86f-169">This trial succeeds, and the result is displayed in a message box labeled "Message #2."</span></span> <span data-ttu-id="6a86f-170">В этом примере предполагается, что вы <xref:System.Windows.Forms.Form> создали `Form1`именованный объект.</span><span class="sxs-lookup"><span data-stu-id="6a86f-170">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetData3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetData3/CPP/getdata3.cpp#1)]
 [!code-csharp[GetData3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetData3/CS/getdata3.cs#1)]
 [!code-vb[GetData3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetData3/VB/getdata3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataPresent">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6a86f-171">Определяет, связаны ли хранимые в данном экземпляре данные с указанным форматом.</span><span class="sxs-lookup"><span data-stu-id="6a86f-171">Determines whether data stored in this instance is associated with the specified format.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(System::String ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : string -&gt; bool" Usage="iDataObject.GetDataPresent format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="6a86f-172">Формат, для которого выполняется проверка.</span><span class="sxs-lookup"><span data-stu-id="6a86f-172">The format for which to check.</span></span> <span data-ttu-id="6a86f-173">Сведения о предварительно определенных форматах см. в разделе <see cref="T:System.Windows.Forms.DataFormats" />.</span><span class="sxs-lookup"><span data-stu-id="6a86f-173">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <summary><span data-ttu-id="6a86f-174">Определяет, связаны ли хранимые в данном экземпляре данные с указанным форматом или возможно ли их преобразование в этот формат.</span><span class="sxs-lookup"><span data-stu-id="6a86f-174">Determines whether data stored in this instance is associated with, or can be converted to, the specified format.</span></span></summary>
        <returns><span data-ttu-id="6a86f-175">Значение <see langword="true" />, если хранящиеся в данном экземпляре данные связаны с указанным форматом или могут быть преобразованы в него. В противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6a86f-175"><see langword="true" /> if data stored in this instance is associated with, or can be converted to, the specified format; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a86f-176">Вызовите этот метод, чтобы определить, существует ли в <xref:System.Windows.Forms.DataObject> нем формат <xref:System.Windows.Forms.IDataObject.GetData%2A>перед вызовом.</span><span class="sxs-lookup"><span data-stu-id="6a86f-176">Call this method to determine whether a format exists in this <xref:System.Windows.Forms.DataObject> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="6a86f-177">Вызовите метод <xref:System.Windows.Forms.IDataObject.GetFormats%2A> для форматов, доступных в этом экземпляре.</span><span class="sxs-lookup"><span data-stu-id="6a86f-177">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for the formats that are available in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a86f-178">Данные могут быть преобразованы в другой формат, если они были сохранены с указанием того, что преобразование разрешено, и если запрошенный формат совместим с сохраненным форматом.</span><span class="sxs-lookup"><span data-stu-id="6a86f-178">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="6a86f-179">Например, данные, хранящиеся в Юникоде, можно преобразовать в текст.</span><span class="sxs-lookup"><span data-stu-id="6a86f-179">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="6a86f-180">Реализацию этого метода см. в разделе <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6a86f-180">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a86f-181">В этом примере используется <xref:System.Windows.Forms.DataObject> класс, реализующий `IDataObject`, для `GetDataPresent` демонстрации использования метода.</span><span class="sxs-lookup"><span data-stu-id="6a86f-181">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method.</span></span> <span data-ttu-id="6a86f-182">Во-первых, он создает объект данных, используя строку и `Text` формат.</span><span class="sxs-lookup"><span data-stu-id="6a86f-182">First, it creates a data object using a string and the `Text` format.</span></span> <span data-ttu-id="6a86f-183">Затем он проверяет наличие данных в `Text` формате и отображает результаты в окне сообщения.</span><span class="sxs-lookup"><span data-stu-id="6a86f-183">Then it verifies that the data is present in the `Text` format and displays the results in a message box.</span></span> <span data-ttu-id="6a86f-184">В этом примере предполагается, что вы <xref:System.Windows.Forms.Form> создали `Form1`именованный объект.</span><span class="sxs-lookup"><span data-stu-id="6a86f-184">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetDataPresent1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetDataPresent1/CPP/getdatapresent1.cpp#1)]
 [!code-csharp[GetDataPresent1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetDataPresent1/CS/getdatapresent1.cs#1)]
 [!code-vb[GetDataPresent1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetDataPresent1/VB/getdatapresent1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(Type ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : Type -&gt; bool" Usage="iDataObject.GetDataPresent format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="6a86f-185">Тип <see cref="T:System.Type" />, представляющий формат, для которого выполняется проверка.</span><span class="sxs-lookup"><span data-stu-id="6a86f-185">A <see cref="T:System.Type" /> representing the format for which to check.</span></span> <span data-ttu-id="6a86f-186">Сведения о предварительно определенных форматах см. в разделе <see cref="T:System.Windows.Forms.DataFormats" />.</span><span class="sxs-lookup"><span data-stu-id="6a86f-186">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <summary><span data-ttu-id="6a86f-187">Определяет, связаны ли хранимые в данном экземпляре данные с указанным форматом или возможно ли их преобразование в этот формат.</span><span class="sxs-lookup"><span data-stu-id="6a86f-187">Determines whether data stored in this instance is associated with, or can be converted to, the specified format.</span></span></summary>
        <returns><span data-ttu-id="6a86f-188">Значение <see langword="true" />, если хранящиеся в данном экземпляре данные связаны с указанным форматом или могут быть преобразованы в него. В противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6a86f-188"><see langword="true" /> if data stored in this instance is associated with, or can be converted to, the specified format; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a86f-189">Вызовите этот метод, чтобы определить, существует ли в <xref:System.Windows.Forms.DataObject> нем формат <xref:System.Windows.Forms.IDataObject.GetData%2A>перед вызовом.</span><span class="sxs-lookup"><span data-stu-id="6a86f-189">Call this method to determine whether a format exists in this <xref:System.Windows.Forms.DataObject> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="6a86f-190">Вызовите метод <xref:System.Windows.Forms.IDataObject.GetFormats%2A> для форматов, доступных в этом экземпляре.</span><span class="sxs-lookup"><span data-stu-id="6a86f-190">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for the formats that are available in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a86f-191">Данные могут быть преобразованы в другой формат, если они были сохранены с указанием того, что преобразование разрешено, и если запрошенный формат совместим с сохраненным форматом.</span><span class="sxs-lookup"><span data-stu-id="6a86f-191">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="6a86f-192">Например, данные, хранящиеся в Юникоде, можно преобразовать в текст.</span><span class="sxs-lookup"><span data-stu-id="6a86f-192">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="6a86f-193">Реализацию этого метода см. в разделе <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6a86f-193">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a86f-194">В этом примере используется <xref:System.Windows.Forms.DataObject> класс, реализующий `IDataObject`, для `GetDataPresent` демонстрации использования метода.</span><span class="sxs-lookup"><span data-stu-id="6a86f-194">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method.</span></span> <span data-ttu-id="6a86f-195">Во-первых, он создает компонент`myComponent`() и сохраняет его в объекте данных (`myDataObject`).</span><span class="sxs-lookup"><span data-stu-id="6a86f-195">First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`).</span></span> <span data-ttu-id="6a86f-196">Затем проверяется, хранятся ли указанные данные в `myDataObject`.</span><span class="sxs-lookup"><span data-stu-id="6a86f-196">Then it checks whether the specified data is stored in `myDataObject`.</span></span> <span data-ttu-id="6a86f-197">Если тест оценивается `true`, он отображает результат в окне сообщения и отображает тип данных в текстовом поле.</span><span class="sxs-lookup"><span data-stu-id="6a86f-197">If the test evaluates `true`, it displays the result in a message box and displays the data type in a text box.</span></span> <span data-ttu-id="6a86f-198">В <xref:System.Windows.Forms.Form> этом примере предполагается, что вы уже создали `Form1` именованный <xref:System.Windows.Forms.TextBox> объект `textBox1`и именованный объект.</span><span class="sxs-lookup"><span data-stu-id="6a86f-198">This example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.</span></span>  
  
 [!code-cpp[GetDataPresent2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetDataPresent2/CPP/getdatapresent2.cpp#1)]
 [!code-csharp[GetDataPresent2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetDataPresent2/CS/getdatapresent2.cs#1)]
 [!code-vb[GetDataPresent2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetDataPresent2/VB/getdatapresent2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As String, autoConvert As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(System::String ^ format, bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : string * bool -&gt; bool" Usage="iDataObject.GetDataPresent (format, autoConvert)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="6a86f-199">Формат, для которого выполняется проверка.</span><span class="sxs-lookup"><span data-stu-id="6a86f-199">The format for which to check.</span></span> <span data-ttu-id="6a86f-200">Сведения о предварительно определенных форматах см. в разделе <see cref="T:System.Windows.Forms.DataFormats" />.</span><span class="sxs-lookup"><span data-stu-id="6a86f-200">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="autoConvert"><span data-ttu-id="6a86f-201">Значение <see langword="true" />, если необходимо определить возможность преобразования данных, хранимых в данном экземпляре, в указанный формат, и значение <see langword="false" />, если необходимо проверить наличие данных в указанном формате.</span><span class="sxs-lookup"><span data-stu-id="6a86f-201"><see langword="true" /> to determine whether data stored in this instance can be converted to the specified format; <see langword="false" /> to check whether the data is in the specified format.</span></span></param>
        <summary><span data-ttu-id="6a86f-202">Определяет, связаны ли хранимые в данном экземпляре данные с указанным форматом, определяя с помощью значения типа Boolean, необходимо ли преобразовать данные в этот формат.</span><span class="sxs-lookup"><span data-stu-id="6a86f-202">Determines whether data stored in this instance is associated with the specified format, using a Boolean value to determine whether to convert the data to the format.</span></span></summary>
        <returns><span data-ttu-id="6a86f-203">Значение <see langword="true" />, если данные находятся в указанном формате или могут быть в него преобразованы; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6a86f-203"><see langword="true" /> if the data is in, or can be converted to, the specified format; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a86f-204">Вызовите этот метод, чтобы определить, существует ли в <xref:System.Windows.Forms.DataObject> нем формат <xref:System.Windows.Forms.IDataObject.GetData%2A>перед вызовом.</span><span class="sxs-lookup"><span data-stu-id="6a86f-204">Call this method to determine whether a format exists in this <xref:System.Windows.Forms.DataObject> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="6a86f-205">Вызовите метод <xref:System.Windows.Forms.IDataObject.GetFormats%2A> для форматов, доступных в этом экземпляре.</span><span class="sxs-lookup"><span data-stu-id="6a86f-205">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for the formats that are available in this instance.</span></span>  
  
 <span data-ttu-id="6a86f-206">Этот метод возвращает `true` значение, если:</span><span class="sxs-lookup"><span data-stu-id="6a86f-206">This method returns `true` when:</span></span>  
  
-   <span data-ttu-id="6a86f-207">Параметр имеет значение `true` , а данные имеют формат, который можно преобразовать в соответствующий формат. `autoConvert`</span><span class="sxs-lookup"><span data-stu-id="6a86f-207">The `autoConvert` parameter is `true` and the data is in a format that can be converted to the appropriate format.</span></span>  
  
-   <span data-ttu-id="6a86f-208">`autoConvert` Параметр имеет`false` значение, и данные имеют соответствующий формат.</span><span class="sxs-lookup"><span data-stu-id="6a86f-208">The `autoConvert` parameter is `false` and the data is in the appropriate format.</span></span>  
  
 <span data-ttu-id="6a86f-209">Этот метод возвращает `false` значение, если:</span><span class="sxs-lookup"><span data-stu-id="6a86f-209">This method returns `false` when:</span></span>  
  
-   <span data-ttu-id="6a86f-210">Параметр имеет значение `true` , и этот метод не может найти данные в указанном формате и не может преобразовать данные в указанный формат, или если данные `false`были сохранены с `autoConvert` параметром. `autoConvert`</span><span class="sxs-lookup"><span data-stu-id="6a86f-210">The `autoConvert` parameter is `true` and this method cannot find data in the specified format, and it cannot convert data to the specified format, or the data was stored with `autoConvert` set to `false`.</span></span>  
  
-   <span data-ttu-id="6a86f-211">Параметр имеет значение `false`, а данные не существуют в данном экземпляре в указанном формате. `autoConvert`</span><span class="sxs-lookup"><span data-stu-id="6a86f-211">The `autoConvert` parameter is `false`, and data does not exist in this instance in the specified format.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a86f-212">Данные могут быть преобразованы в другой формат, если они были сохранены с указанием того, что преобразование разрешено, и если запрошенный формат совместим с сохраненным форматом.</span><span class="sxs-lookup"><span data-stu-id="6a86f-212">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="6a86f-213">Например, данные, хранящиеся в Юникоде, можно преобразовать в текст.</span><span class="sxs-lookup"><span data-stu-id="6a86f-213">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="6a86f-214">Реализацию этого метода см. в разделе <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6a86f-214">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a86f-215">В этом примере используется <xref:System.Windows.Forms.DataObject> класс, реализующий `IDataObject`, для `GetDataPresent` демонстрации использования метода.</span><span class="sxs-lookup"><span data-stu-id="6a86f-215">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method.</span></span> <span data-ttu-id="6a86f-216">Во-первых, он создает объект данных`myDataObject`(), используя строку `Text` и формат.</span><span class="sxs-lookup"><span data-stu-id="6a86f-216">First, it creates a data object (`myDataObject`) using a string and the `Text` format.</span></span> <span data-ttu-id="6a86f-217">Затем он запрашивает у объекта данные, связанные с `Text` форматом, `autoConvert` а параметр имеет значение `false`.</span><span class="sxs-lookup"><span data-stu-id="6a86f-217">Then it queries the object for data associated with the `Text` format, with the `autoConvert` parameter set to `false`.</span></span> <span data-ttu-id="6a86f-218">Эта пробная версия завершается ошибкой, и результат отображается в окне сообщения с меткой "сообщение #1".</span><span class="sxs-lookup"><span data-stu-id="6a86f-218">This trial fails, and the result is displayed in a message box labeled "Message #1."</span></span> <span data-ttu-id="6a86f-219">Во второй пробной версии для `autoConvert` `true`параметра задается значение.</span><span class="sxs-lookup"><span data-stu-id="6a86f-219">In the second trial, it sets the `autoConvert` parameter to `true`.</span></span> <span data-ttu-id="6a86f-220">Эта пробная версия прошла удачно, и результат отображается в окне сообщения с меткой "сообщение #2".</span><span class="sxs-lookup"><span data-stu-id="6a86f-220">This trial succeeds, and the result is displayed in a message box labeled "Message #2."</span></span> <span data-ttu-id="6a86f-221">В этом примере предполагается, что вы <xref:System.Windows.Forms.Form> создали `Form1`именованный объект.</span><span class="sxs-lookup"><span data-stu-id="6a86f-221">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetDataPresent3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetDataPresent3/CPP/getdatapresent3.cpp#1)]
 [!code-csharp[GetDataPresent3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetDataPresent3/CS/getdatapresent3.cs#1)]
 [!code-vb[GetDataPresent3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetDataPresent3/VB/getdatapresent3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFormats">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6a86f-222">Возвращает список всех форматов, с которыми связаны данные, хранящиеся в этом экземпляре, или в которые они могут быть преобразованы.</span><span class="sxs-lookup"><span data-stu-id="6a86f-222">Returns a list of all formats that data stored in this instance is associated with or can be converted to.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormats () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetFormats();" />
      <MemberSignature Language="F#" Value="abstract member GetFormats : unit -&gt; string[]" Usage="iDataObject.GetFormats " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6a86f-223">Возвращает список всех форматов, с которыми связаны данные, хранящиеся в этом экземпляре, или в которые они могут быть преобразованы.</span><span class="sxs-lookup"><span data-stu-id="6a86f-223">Returns a list of all formats that data stored in this instance is associated with or can be converted to.</span></span></summary>
        <returns><span data-ttu-id="6a86f-224">Массив имен, представляющий список всех форматов, поддерживаемых данными, хранящимися в данном объекте.</span><span class="sxs-lookup"><span data-stu-id="6a86f-224">An array of the names that represents a list of all formats that are supported by the data stored in this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a86f-225">Вызовите этот метод, чтобы получить Поддерживаемые форматы данных перед вызовом <xref:System.Windows.Forms.IDataObject.GetData%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="6a86f-225">Call this method to get the supported data formats before calling the <xref:System.Windows.Forms.IDataObject.GetData%2A> method.</span></span> <span data-ttu-id="6a86f-226">См. <xref:System.Windows.Forms.DataFormats> класс для стандартных форматов.</span><span class="sxs-lookup"><span data-stu-id="6a86f-226">See the <xref:System.Windows.Forms.DataFormats> class for the predefined formats.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a86f-227">Данные могут быть преобразованы в другой формат, если они были сохранены с указанием того, что преобразование разрешено, и если запрошенный формат совместим с сохраненным форматом.</span><span class="sxs-lookup"><span data-stu-id="6a86f-227">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="6a86f-228">Например, данные, хранящиеся в Юникоде, можно преобразовать в текст.</span><span class="sxs-lookup"><span data-stu-id="6a86f-228">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="6a86f-229">Реализацию этого метода см. в разделе <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6a86f-229">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a86f-230">В этом примере используется <xref:System.Windows.Forms.DataObject> класс, реализующий `IDataObject`, для `GetFormats` демонстрации использования метода.</span><span class="sxs-lookup"><span data-stu-id="6a86f-230">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method.</span></span> <span data-ttu-id="6a86f-231">Во-первых, он создает объект данных`myDataObject`(), используя строку `Text` и формат.</span><span class="sxs-lookup"><span data-stu-id="6a86f-231">First, it creates a data object (`myDataObject`) using a string and the `Text` format.</span></span> <span data-ttu-id="6a86f-232">Затем он извлекает все форматы данных и форматы преобразования данных в объекте данных и отображает полученный список в окне сообщения.</span><span class="sxs-lookup"><span data-stu-id="6a86f-232">Then it retrieves all the data formats and data conversion formats in the data object, and displays the resulting list in a message box.</span></span> <span data-ttu-id="6a86f-233">В этом примере предполагается, что вы <xref:System.Windows.Forms.Form> создали `Form1`именованный объект.</span><span class="sxs-lookup"><span data-stu-id="6a86f-233">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetFormats1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetFormats1/CPP/getformats1.cpp#1)]
 [!code-csharp[GetFormats1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetFormats1/CS/getformats1.cs#1)]
 [!code-vb[GetFormats1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetFormats1/VB/getformats1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats (bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats(bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormats (autoConvert As Boolean) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetFormats(bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetFormats : bool -&gt; string[]" Usage="iDataObject.GetFormats autoConvert" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoConvert"><span data-ttu-id="6a86f-234">Значение <see langword="true" />, если необходимо извлечь все форматы, с которыми связаны данные, хранящиеся в этом экземпляре, или форматы, в которые они могут быть преобразованы. Значение <see langword="false" />, если необходимо извлечь только собственные форматы данных.</span><span class="sxs-lookup"><span data-stu-id="6a86f-234"><see langword="true" /> to retrieve all formats that data stored in this instance is associated with or can be converted to; <see langword="false" /> to retrieve only native data formats.</span></span></param>
        <summary><span data-ttu-id="6a86f-235">Получает список всех форматов, с которыми связаны хранимые в этом экземпляре данные или в которые они могут быть преобразованы. С помощью значения типа Boolean определяется, необходимо ли извлечь все форматы, в которые данные могут быть преобразованы, или только собственные форматы данных.</span><span class="sxs-lookup"><span data-stu-id="6a86f-235">Gets a list of all formats that data stored in this instance is associated with or can be converted to, using a Boolean value to determine whether to retrieve all formats that the data can be converted to or only native data formats.</span></span></summary>
        <returns><span data-ttu-id="6a86f-236">Массив имен, представляющий список всех форматов, поддерживаемых данными, хранящимися в данном объекте.</span><span class="sxs-lookup"><span data-stu-id="6a86f-236">An array of the names that represents a list of all formats that are supported by the data stored in this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a86f-237">Вызовите этот метод, чтобы получить Поддерживаемые форматы данных перед вызовом <xref:System.Windows.Forms.IDataObject.GetData%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="6a86f-237">Call this method to get the supported data formats before calling the <xref:System.Windows.Forms.IDataObject.GetData%2A> method.</span></span> <span data-ttu-id="6a86f-238">См. <xref:System.Windows.Forms.DataFormats> класс для стандартных форматов.</span><span class="sxs-lookup"><span data-stu-id="6a86f-238">See the <xref:System.Windows.Forms.DataFormats> class for the predefined formats.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6a86f-239">Данные могут быть преобразованы в другой формат, если они были сохранены с указанием того, что преобразование разрешено, и если запрошенный формат совместим с сохраненным форматом.</span><span class="sxs-lookup"><span data-stu-id="6a86f-239">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="6a86f-240">Например, данные, хранящиеся в Юникоде, можно преобразовать в текст.</span><span class="sxs-lookup"><span data-stu-id="6a86f-240">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="6a86f-241">Реализацию этого метода см. в разделе <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6a86f-241">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a86f-242">В этом примере используется <xref:System.Windows.Forms.DataObject> класс, реализующий `IDataObject`, для `GetFormats` демонстрации использования метода.</span><span class="sxs-lookup"><span data-stu-id="6a86f-242">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method.</span></span> <span data-ttu-id="6a86f-243">Во-первых, он создает объект данных`myDataObject`(), используя строку `UnicodeText` и формат.</span><span class="sxs-lookup"><span data-stu-id="6a86f-243">First, it creates a data object (`myDataObject`) using a string and the `UnicodeText` format.</span></span> <span data-ttu-id="6a86f-244">Затем он выполняет два запроса для получения форматов, связанных с данными.</span><span class="sxs-lookup"><span data-stu-id="6a86f-244">Then it makes two queries to get the formats associated with the data.</span></span> <span data-ttu-id="6a86f-245">В первом запросе он устанавливает `autoConvert` для `false` параметра значение: в этом случае возвращаются только собственные форматы данных.</span><span class="sxs-lookup"><span data-stu-id="6a86f-245">In the first query, it sets the `autoConvert` parameter to `false` : in this case, only the native format of the data is returned.</span></span> <span data-ttu-id="6a86f-246">Во втором запросе он устанавливает `autoConvert` для `true`параметра значение, чтобы он мог получить список форматов, включая форматы, в которые данные могут быть преобразованы.</span><span class="sxs-lookup"><span data-stu-id="6a86f-246">In the second query, it sets the `autoConvert` parameter to `true`, so that it gets the list of formats, including the formats that the data can be converted to.</span></span> <span data-ttu-id="6a86f-247">В каждом случае полученный список отображается в окне сообщения.</span><span class="sxs-lookup"><span data-stu-id="6a86f-247">In each case, the resulting list is displayed in a message box.</span></span> <span data-ttu-id="6a86f-248">В этом примере предполагается, что вы <xref:System.Windows.Forms.Form> создали `Form1`именованный объект.</span><span class="sxs-lookup"><span data-stu-id="6a86f-248">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetFormats2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetFormats2/CPP/getformats2.cpp#1)]
 [!code-csharp[GetFormats2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetFormats2/CS/getformats2.cs#1)]
 [!code-vb[GetFormats2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetFormats2/VB/getformats2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6a86f-249">Сохраняет указанные данные и связанный с ними формат в этом экземпляре.</span><span class="sxs-lookup"><span data-stu-id="6a86f-249">Stores the specified data and its associated format in this instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : obj -&gt; unit" Usage="iDataObject.SetData data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="6a86f-250">Сохраняемые данные.</span><span class="sxs-lookup"><span data-stu-id="6a86f-250">The data to store.</span></span></param>
        <summary><span data-ttu-id="6a86f-251">Сохраняет указанные данные в этом экземпляре, используя класс данных для формата.</span><span class="sxs-lookup"><span data-stu-id="6a86f-251">Stores the specified data in this instance, using the class of the data for the format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a86f-252">Формат является производным от класса данных.</span><span class="sxs-lookup"><span data-stu-id="6a86f-252">The format is derived from the data class.</span></span>  
  
 <span data-ttu-id="6a86f-253">Данные, хранимые с помощью этого метода, можно преобразовать в совместимый формат при извлечении.</span><span class="sxs-lookup"><span data-stu-id="6a86f-253">Data stored using this method can be converted to a compatible format when it is retrieved.</span></span>  
  
 <span data-ttu-id="6a86f-254">Реализацию этого метода см. в разделе <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6a86f-254">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a86f-255">В этом примере используется <xref:System.Windows.Forms.DataObject> класс, реализующий `IDataObject`, для `SetData` демонстрации использования метода.</span><span class="sxs-lookup"><span data-stu-id="6a86f-255">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="6a86f-256">Во-первых, он создает компонент`myComponent`() и сохраняет его в объекте данных (`myDataObject`).</span><span class="sxs-lookup"><span data-stu-id="6a86f-256">First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`).</span></span> <span data-ttu-id="6a86f-257">Затем он проверяет, хранятся ли указанные данные в объекте данных, и отображает результат в окне сообщения.</span><span class="sxs-lookup"><span data-stu-id="6a86f-257">Then it checks whether the specified data is stored in the data object, and displays the result in a message box.</span></span> <span data-ttu-id="6a86f-258">В этом примере предполагается, что вы <xref:System.Windows.Forms.Form> создали `Form1`именованный объект.</span><span class="sxs-lookup"><span data-stu-id="6a86f-258">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData1/CPP/setdata1.cpp#1)]
 [!code-csharp[SetData1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData1/CS/setdata1.cs#1)]
 [!code-vb[SetData1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData1/VB/setdata1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : string * obj -&gt; unit" Usage="iDataObject.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="6a86f-259">Формат, связанный с данными.</span><span class="sxs-lookup"><span data-stu-id="6a86f-259">The format associated with the data.</span></span> <span data-ttu-id="6a86f-260">Сведения о предварительно определенных форматах см. в разделе <see cref="T:System.Windows.Forms.DataFormats" />.</span><span class="sxs-lookup"><span data-stu-id="6a86f-260">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="data"><span data-ttu-id="6a86f-261">Сохраняемые данные.</span><span class="sxs-lookup"><span data-stu-id="6a86f-261">The data to store.</span></span></param>
        <summary><span data-ttu-id="6a86f-262">Сохраняет указанные данные и связанный с ними формат в этом экземпляре.</span><span class="sxs-lookup"><span data-stu-id="6a86f-262">Stores the specified data and its associated format in this instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a86f-263">Если вы не знакомы с форматом целевого приложения, вы можете хранить данные в нескольких форматах с помощью этого метода.</span><span class="sxs-lookup"><span data-stu-id="6a86f-263">If you do not know the format of the target application, you can store data in multiple formats using this method.</span></span>  
  
 <span data-ttu-id="6a86f-264">Данные, хранимые с помощью этого метода, можно преобразовать в совместимый формат при извлечении.</span><span class="sxs-lookup"><span data-stu-id="6a86f-264">Data stored using this method can be converted to a compatible format when it is retrieved.</span></span>  
  
 <span data-ttu-id="6a86f-265">Реализацию этого метода см. в разделе <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6a86f-265">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a86f-266">В этом примере используется <xref:System.Windows.Forms.DataObject> класс, реализующий `IDataObject`, для `SetData` демонстрации использования метода.</span><span class="sxs-lookup"><span data-stu-id="6a86f-266">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="6a86f-267">Сначала он создает объект данных (`myDataObject`) и сохраняет строку в объекте, `UnicodeText` задающем формат.</span><span class="sxs-lookup"><span data-stu-id="6a86f-267">First, it creates a data object (`myDataObject`) and stores a string in the object specifying the `UnicodeText` format.</span></span> <span data-ttu-id="6a86f-268">Затем он извлекает данные, хранящиеся в объекте, указав `Text` формат, чтобы данные были преобразованы `Text` в формат.</span><span class="sxs-lookup"><span data-stu-id="6a86f-268">Then it retrieves that data stored in the object specifying the `Text` format, so that the data is converted to the `Text` format.</span></span> <span data-ttu-id="6a86f-269">Результат отображается в окне сообщения.</span><span class="sxs-lookup"><span data-stu-id="6a86f-269">The result is displayed in a message box.</span></span> <span data-ttu-id="6a86f-270">В этом примере предполагается, что вы <xref:System.Windows.Forms.Form> создали `Form1`именованный объект.</span><span class="sxs-lookup"><span data-stu-id="6a86f-270">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData2/CPP/setdata2.cpp#1)]
 [!code-csharp[SetData2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData2/CS/setdata2.cs#1)]
 [!code-vb[SetData2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData2/VB/setdata2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (Type format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(class System.Type format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As Type, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(Type ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : Type * obj -&gt; unit" Usage="iDataObject.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="6a86f-271">Тип <see cref="T:System.Type" />, представляющий формат, связанный с данными.</span><span class="sxs-lookup"><span data-stu-id="6a86f-271">A <see cref="T:System.Type" /> representing the format associated with the data.</span></span> <span data-ttu-id="6a86f-272">Сведения о предварительно определенных форматах см. в разделе <see cref="T:System.Windows.Forms.DataFormats" />.</span><span class="sxs-lookup"><span data-stu-id="6a86f-272">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="data"><span data-ttu-id="6a86f-273">Сохраняемые данные.</span><span class="sxs-lookup"><span data-stu-id="6a86f-273">The data to store.</span></span></param>
        <summary><span data-ttu-id="6a86f-274">Сохраняет указанные данные и связанный с ними тип класса в этом экземпляре.</span><span class="sxs-lookup"><span data-stu-id="6a86f-274">Stores the specified data and its associated class type in this instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a86f-275">Если вы не знакомы с форматом целевого приложения, вы можете хранить данные в нескольких форматах с помощью этого метода.</span><span class="sxs-lookup"><span data-stu-id="6a86f-275">If you do not know the format of the target application, you can store data in multiple formats using this method.</span></span>  
  
 <span data-ttu-id="6a86f-276">Данные, хранимые с помощью этого метода, можно преобразовать в совместимый формат при извлечении.</span><span class="sxs-lookup"><span data-stu-id="6a86f-276">Data stored using this method can be converted to a compatible format when it is retrieved.</span></span>  
  
 <span data-ttu-id="6a86f-277">Реализацию этого метода см. в разделе <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6a86f-277">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a86f-278">В этом примере используется <xref:System.Windows.Forms.DataObject> класс, реализующий `IDataObject`, для `SetData` демонстрации использования метода.</span><span class="sxs-lookup"><span data-stu-id="6a86f-278">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="6a86f-279">Во-первых, он создает компонент`myComponent`() и сохраняет его в объекте данных (`myDataObject`), используя `myType` для указания формата данных.</span><span class="sxs-lookup"><span data-stu-id="6a86f-279">First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`), using `myType` to specify the data format.</span></span> <span data-ttu-id="6a86f-280">Затем он проверяет, хранится ли данные указанного типа в объекте, и отображает результат в окне сообщения.</span><span class="sxs-lookup"><span data-stu-id="6a86f-280">Then it checks whether the data of the specified type is stored in the object, and displays the result in a message box.</span></span> <span data-ttu-id="6a86f-281">В этом примере предполагается, что вы <xref:System.Windows.Forms.Form> создали `Form1`именованный объект.</span><span class="sxs-lookup"><span data-stu-id="6a86f-281">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData3/CPP/setdata3.cpp#1)]
 [!code-csharp[SetData3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData3/CS/setdata3.cs#1)]
 [!code-vb[SetData3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData3/VB/setdata3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, bool autoConvert, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, bool autoConvert, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As String, autoConvert As Boolean, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::String ^ format, bool autoConvert, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : string * bool * obj -&gt; unit" Usage="iDataObject.SetData (format, autoConvert, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="6a86f-282">Формат, связанный с данными.</span><span class="sxs-lookup"><span data-stu-id="6a86f-282">The format associated with the data.</span></span> <span data-ttu-id="6a86f-283">Сведения о предварительно определенных форматах см. в разделе <see cref="T:System.Windows.Forms.DataFormats" />.</span><span class="sxs-lookup"><span data-stu-id="6a86f-283">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="autoConvert"><span data-ttu-id="6a86f-284">Значение <see langword="true" />, если необходимо разрешить преобразование данных в другой формат; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6a86f-284"><see langword="true" /> to allow the data to be converted to another format; otherwise, <see langword="false" />.</span></span></param>
        <param name="data"><span data-ttu-id="6a86f-285">Сохраняемые данные.</span><span class="sxs-lookup"><span data-stu-id="6a86f-285">The data to store.</span></span></param>
        <summary><span data-ttu-id="6a86f-286">Сохраняет указанные данные и связанный с ними формат в этом экземпляре и в значении типа Boolean задает, возможно ли преобразование данных в другой формат.</span><span class="sxs-lookup"><span data-stu-id="6a86f-286">Stores the specified data and its associated format in this instance, using a Boolean value to specify whether the data can be converted to another format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a86f-287">Если вы не знакомы с форматом целевого приложения, вы можете хранить данные в нескольких форматах с помощью этого метода.</span><span class="sxs-lookup"><span data-stu-id="6a86f-287">If you do not know the format of the target application, you can store data in multiple formats using this method.</span></span>  
  
 <span data-ttu-id="6a86f-288">Реализацию этого метода см. в разделе <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6a86f-288">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a86f-289">В этом примере используется <xref:System.Windows.Forms.DataObject> класс, реализующий `IDataObject`, для `SetData` демонстрации использования метода.</span><span class="sxs-lookup"><span data-stu-id="6a86f-289">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="6a86f-290">Сначала он создает`myDataObject`объект данных () и `UnicodeText` сохраняет `autoConvert` в нем строку `false`с параметром, имеющим значение.</span><span class="sxs-lookup"><span data-stu-id="6a86f-290">First, it creates a data object (`myDataObject`) and stores a `UnicodeText` string in it, with the `autoConvert` parameter set to `false`.</span></span> <span data-ttu-id="6a86f-291">Затем он получает формат (ы), связанный с данными, хранящимися в объекте, и отображает результат в окне сообщения.</span><span class="sxs-lookup"><span data-stu-id="6a86f-291">Then it retrieves the format(s) associated with the data stored in the object and displays the result in a message box.</span></span> <span data-ttu-id="6a86f-292">Единственный формат, связанный с данными, — `UnicodeText` это формат.</span><span class="sxs-lookup"><span data-stu-id="6a86f-292">The only format associated with the data is the `UnicodeText` format.</span></span> <span data-ttu-id="6a86f-293">В этом примере предполагается, что вы <xref:System.Windows.Forms.Form> создали `Form1`именованный объект.</span><span class="sxs-lookup"><span data-stu-id="6a86f-293">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData4/CPP/form1.cpp#1)]
 [!code-csharp[SetData4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData4/CS/form1.cs#1)]
 [!code-vb[SetData4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData4/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>
