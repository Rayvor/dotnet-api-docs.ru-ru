<Type Name="IDataObject" FullName="System.Windows.Forms.IDataObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="107b075d1988af8904fd028834582734403a58f8" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65015632" /></Metadata><TypeSignature Language="C#" Value="public interface IDataObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IDataObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataObject" />
  <TypeSignature Language="F#" Value="type IDataObject = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e06dc-101">Зависящий от формата механизм передачи данных.</span><span class="sxs-lookup"><span data-stu-id="e06dc-101">Provides a format-independent mechanism for transferring data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e06dc-102">`IDataObject` Интерфейс используется <xref:System.Windows.Forms.Clipboard> класса и в операциях перетаскивания и вставки.</span><span class="sxs-lookup"><span data-stu-id="e06dc-102">The `IDataObject` interface is used by the <xref:System.Windows.Forms.Clipboard> class and in drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="e06dc-103">При реализации в классе, <xref:System.Windows.Forms.IDataObject> методы позволяют пользователю хранить данные в нескольких форматах в экземпляре класса.</span><span class="sxs-lookup"><span data-stu-id="e06dc-103">When implemented in a class, the <xref:System.Windows.Forms.IDataObject> methods allow the user to store data in multiple formats in an instance of the class.</span></span> <span data-ttu-id="e06dc-104">Хранение данных в нескольких форматах повышает вероятность того, что целевое приложение, требования к формату, которого вы можете не знать, можно извлечь сохраненные данные.</span><span class="sxs-lookup"><span data-stu-id="e06dc-104">Storing data in more than one format increases the chance that a target application, whose format requirements you might not know, can retrieve the stored data.</span></span> <span data-ttu-id="e06dc-105">Для хранения данных в экземпляре <xref:System.Windows.Forms.IDataObject>, вызовите <xref:System.Windows.Forms.IDataObject.SetData%2A> метод и указать формат данных в `format` параметра.</span><span class="sxs-lookup"><span data-stu-id="e06dc-105">To store data in an instance of <xref:System.Windows.Forms.IDataObject>, call the <xref:System.Windows.Forms.IDataObject.SetData%2A> method and specify the data format in the `format` parameter.</span></span> <span data-ttu-id="e06dc-106">Задайте `autoConvert` параметр `false` Если сохраненные данные для преобразования в другой формат при извлечении не нужно.</span><span class="sxs-lookup"><span data-stu-id="e06dc-106">Set the `autoConvert` parameter to `false` if you do not want stored data to be converted to another format when it is retrieved.</span></span> <span data-ttu-id="e06dc-107">Вызвать <xref:System.Windows.Forms.IDataObject.SetData%2A> несколько раз в одном экземпляре <xref:System.Windows.Forms.IDataObject> для хранения данных в нескольких форматах.</span><span class="sxs-lookup"><span data-stu-id="e06dc-107">Invoke <xref:System.Windows.Forms.IDataObject.SetData%2A> multiple times on one instance of <xref:System.Windows.Forms.IDataObject> to store data in more than one format.</span></span>  
  
 <span data-ttu-id="e06dc-108">Чтобы извлечь сохраненные данные из <xref:System.Windows.Forms.IDataObject> путем вызова <xref:System.Windows.Forms.IDataObject.GetData%2A> метод и указав данные форматирования в `format` параметра.</span><span class="sxs-lookup"><span data-stu-id="e06dc-108">You retrieve stored data from an <xref:System.Windows.Forms.IDataObject> by calling the <xref:System.Windows.Forms.IDataObject.GetData%2A> method and specifying the data format in the `format` parameter.</span></span> <span data-ttu-id="e06dc-109">Задайте `autoConvert` параметр `false` извлекать только те данные, хранящиеся в указанном формате.</span><span class="sxs-lookup"><span data-stu-id="e06dc-109">Set the `autoConvert` parameter to `false` to retrieve only data that was stored in the specified format.</span></span> <span data-ttu-id="e06dc-110">Чтобы преобразовать хранящиеся данные в указанный формат, задайте `autoConvert` для `true`, или не используйте `autoConvert`.</span><span class="sxs-lookup"><span data-stu-id="e06dc-110">To convert the stored data to the specified format, set `autoConvert` to `true`, or do not use `autoConvert`.</span></span>  
  
 <span data-ttu-id="e06dc-111">Чтобы определить форматы данных, хранящихся в <xref:System.Windows.Forms.IDataObject>, используйте следующую команду <xref:System.Windows.Forms.IDataObject> методы.</span><span class="sxs-lookup"><span data-stu-id="e06dc-111">To determine the formats of the data stored in an <xref:System.Windows.Forms.IDataObject>, use the following <xref:System.Windows.Forms.IDataObject> methods.</span></span>  
  
-   <span data-ttu-id="e06dc-112">Вызовите <xref:System.Windows.Forms.IDataObject.GetFormats%2A> метод для извлечения всех форматов, в котором данные недоступны в массиве.</span><span class="sxs-lookup"><span data-stu-id="e06dc-112">Call the <xref:System.Windows.Forms.IDataObject.GetFormats%2A> method to retrieve an array of all the formats in which the data is available.</span></span> <span data-ttu-id="e06dc-113">Задайте `autoConvert` параметр `false` для получения только форматов, в которых хранятся данные.</span><span class="sxs-lookup"><span data-stu-id="e06dc-113">Set the `autoConvert` parameter to `false` to get only the formats in which the data is stored.</span></span> <span data-ttu-id="e06dc-114">Чтобы получить все форматы, в которых данные недоступны, установите `autoConvert` для `true`, или этот параметр не используется.</span><span class="sxs-lookup"><span data-stu-id="e06dc-114">To get all the formats in which the data is available, set `autoConvert` to `true`, or do not use this parameter.</span></span>  
  
-   <span data-ttu-id="e06dc-115">Вызовите <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> метод, чтобы определить, доступен ли хранимые данные в определенном формате.</span><span class="sxs-lookup"><span data-stu-id="e06dc-115">Call the <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> method to determine whether stored data is available in a certain format.</span></span> <span data-ttu-id="e06dc-116">Если не хотите, чтобы хранимых данных для преобразования в указанный формат, задайте `autoConvert` параметр `false`.</span><span class="sxs-lookup"><span data-stu-id="e06dc-116">If you do not want stored data to be converted to the specified format, set the `autoConvert` parameter to `false`.</span></span>  
  
 <span data-ttu-id="e06dc-117">См. в разделе <xref:System.Windows.Forms.DataObject> класс для реализации этого интерфейса.</span><span class="sxs-lookup"><span data-stu-id="e06dc-117">See the <xref:System.Windows.Forms.DataObject> class for an implementation of this interface.</span></span> <span data-ttu-id="e06dc-118">См. в разделе <xref:System.Windows.Forms.DataFormats> класс для стандартных <xref:System.Windows.Forms.Clipboard> форматы данных.</span><span class="sxs-lookup"><span data-stu-id="e06dc-118">See the <xref:System.Windows.Forms.DataFormats> class for the predefined <xref:System.Windows.Forms.Clipboard> data formats.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataObject" />
    <altmember cref="T:System.Windows.Forms.DataFormats" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e06dc-119">Извлекает данные, связанные с заданным форматом.</span><span class="sxs-lookup"><span data-stu-id="e06dc-119">Retrieves the data associated with the specified data format.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string -&gt; obj" Usage="iDataObject.GetData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="e06dc-120">Формат извлекаемых данных.</span><span class="sxs-lookup"><span data-stu-id="e06dc-120">The format of the data to retrieve.</span></span> <span data-ttu-id="e06dc-121">См. в разделе <see cref="T:System.Windows.Forms.DataFormats" /> о предварительно определенных форматах.</span><span class="sxs-lookup"><span data-stu-id="e06dc-121">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <summary><span data-ttu-id="e06dc-122">Извлекает данные, связанные с заданным форматом.</span><span class="sxs-lookup"><span data-stu-id="e06dc-122">Retrieves the data associated with the specified data format.</span></span></summary>
        <returns><span data-ttu-id="e06dc-123">Данные, связанные с указанным форматом или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e06dc-123">The data associated with the specified format, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e06dc-124">Если этот метод не удается найти данные в указанном формате, он предпринимает попытку преобразования данных в формате.</span><span class="sxs-lookup"><span data-stu-id="e06dc-124">If this method cannot find data in the specified format, it attempts to convert the data to the format.</span></span> <span data-ttu-id="e06dc-125">Если данные невозможно преобразовать в указанный формат, этот метод возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="e06dc-125">If the data cannot be converted to the specified format, this method returns `null`.</span></span>  
  
 <span data-ttu-id="e06dc-126">Чтобы определить, связан с данных, или может быть преобразован в формат, вызовите <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> перед вызовом <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span><span class="sxs-lookup"><span data-stu-id="e06dc-126">To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="e06dc-127">Вызовите <xref:System.Windows.Forms.IDataObject.GetFormats%2A> список допустимых форматов для данных, хранящихся в данном экземпляре.</span><span class="sxs-lookup"><span data-stu-id="e06dc-127">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for a list of valid formats for the data stored in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e06dc-128">Данные могут преобразовываться в другой формат, если он был сохранен, указав, что преобразование разрешено, и в том случае, если запрошенный формат совместим с форматом данных.</span><span class="sxs-lookup"><span data-stu-id="e06dc-128">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="e06dc-129">Например данные, хранящиеся в виде Юникода могут быть преобразованы в текст.</span><span class="sxs-lookup"><span data-stu-id="e06dc-129">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="e06dc-130">Реализация этого метода, см. в разделе <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e06dc-130">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e06dc-131">В этом примере используется <xref:System.Windows.Forms.DataObject> класса, который реализует `IDataObject,` для демонстрации использования `GetData` метод.</span><span class="sxs-lookup"><span data-stu-id="e06dc-131">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject,` to demonstrate the use of the `GetData` method.</span></span> <span data-ttu-id="e06dc-132">Метод, используемый для получения данных, хранящихся в `myDataObject`, с которой связан `Text` формат.</span><span class="sxs-lookup"><span data-stu-id="e06dc-132">The method is used to retrieve the data stored in `myDataObject`, which is associated with the `Text` format.</span></span> <span data-ttu-id="e06dc-133">В примере предполагается, что вы уже создали <xref:System.Windows.Forms.Form> с именем `Form1` и <xref:System.Windows.Forms.TextBox> с именем `textBox1`.</span><span class="sxs-lookup"><span data-stu-id="e06dc-133">The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.</span></span>  
  
 [!code-cpp[GetData1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetData1/CPP/getdata1.cpp#1)]
 [!code-csharp[GetData1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetData1/CS/getdata1.cs#1)]
 [!code-vb[GetData1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetData1/VB/getdata1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetData(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(Type ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetData : Type -&gt; obj" Usage="iDataObject.GetData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="e06dc-134">Объект <see cref="T:System.Type" /> представляющий формат извлекаемых данных.</span><span class="sxs-lookup"><span data-stu-id="e06dc-134">A <see cref="T:System.Type" /> representing the format of the data to retrieve.</span></span> <span data-ttu-id="e06dc-135">См. в разделе <see cref="T:System.Windows.Forms.DataFormats" /> о предварительно определенных форматах.</span><span class="sxs-lookup"><span data-stu-id="e06dc-135">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <summary><span data-ttu-id="e06dc-136">Извлекает данные, связанные с заданным форматом типа класса.</span><span class="sxs-lookup"><span data-stu-id="e06dc-136">Retrieves the data associated with the specified class type format.</span></span></summary>
        <returns><span data-ttu-id="e06dc-137">Данные, связанные с указанным форматом или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e06dc-137">The data associated with the specified format, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e06dc-138">Если этот метод не удается найти данные в указанном формате, он предпринимает попытку преобразования данных в формате.</span><span class="sxs-lookup"><span data-stu-id="e06dc-138">If this method cannot find data in the specified format, it attempts to convert the data to the format.</span></span> <span data-ttu-id="e06dc-139">Если данные невозможно преобразовать в указанный формат, этот метод возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="e06dc-139">If the data cannot be converted to the specified format, this method returns `null`.</span></span>  
  
 <span data-ttu-id="e06dc-140">Чтобы определить, связан с данных, или может быть преобразован в формат, вызовите <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> перед вызовом <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span><span class="sxs-lookup"><span data-stu-id="e06dc-140">To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="e06dc-141">Вызовите <xref:System.Windows.Forms.IDataObject.GetFormats%2A> список допустимых форматов для данных, хранящихся в данном экземпляре.</span><span class="sxs-lookup"><span data-stu-id="e06dc-141">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for a list of valid formats for the data stored in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e06dc-142">Данные могут преобразовываться в другой формат, если он был сохранен, указав, что преобразование разрешено, и в том случае, если запрошенный формат совместим с форматом данных.</span><span class="sxs-lookup"><span data-stu-id="e06dc-142">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="e06dc-143">Например данные, хранящиеся в виде Юникода могут быть преобразованы в текст.</span><span class="sxs-lookup"><span data-stu-id="e06dc-143">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="e06dc-144">Реализация этого метода, см. в разделе <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e06dc-144">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e06dc-145">В этом примере используется <xref:System.Windows.Forms.DataObject> класса, который реализует `IDataObject`, чтобы продемонстрировать использование `GetData` метод.</span><span class="sxs-lookup"><span data-stu-id="e06dc-145">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method.</span></span> <span data-ttu-id="e06dc-146">Метод, используемый для получения данных, хранящихся в `myObject`, который связан с определенным типом, `myType`.</span><span class="sxs-lookup"><span data-stu-id="e06dc-146">The method is used to retrieve the data stored in `myObject`, which is associated with a specific type, `myType`.</span></span> <span data-ttu-id="e06dc-147">Тип полученных данных отображается в окне сообщения.</span><span class="sxs-lookup"><span data-stu-id="e06dc-147">The type of the retrieved data is displayed in a message box.</span></span> <span data-ttu-id="e06dc-148">В примере предполагается, что вы уже создали <xref:System.Windows.Forms.Form> с именем `Form1`.</span><span class="sxs-lookup"><span data-stu-id="e06dc-148">The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetData2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetData2/CPP/getdata2.cpp#1)]
 [!code-csharp[GetData2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetData2/CS/getdata2.cs#1)]
 [!code-vb[GetData2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetData2/VB/getdata2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As String, autoConvert As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(System::String ^ format, bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string * bool -&gt; obj" Usage="iDataObject.GetData (format, autoConvert)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="e06dc-149">Формат извлекаемых данных.</span><span class="sxs-lookup"><span data-stu-id="e06dc-149">The format of the data to retrieve.</span></span> <span data-ttu-id="e06dc-150">См. в разделе <see cref="T:System.Windows.Forms.DataFormats" /> о предварительно определенных форматах.</span><span class="sxs-lookup"><span data-stu-id="e06dc-150">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="autoConvert"><span data-ttu-id="e06dc-151"><see langword="true" /> для преобразования данных в указанном формате. в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e06dc-151"><see langword="true" /> to convert the data to the specified format; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e06dc-152">Извлекает данные, связанные с указанным форматом данных, используя значение типа Boolean для определения необходимости преобразования данных в формате.</span><span class="sxs-lookup"><span data-stu-id="e06dc-152">Retrieves the data associated with the specified data format, using a Boolean to determine whether to convert the data to the format.</span></span></summary>
        <returns><span data-ttu-id="e06dc-153">Данные, связанные с указанным форматом или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e06dc-153">The data associated with the specified format, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e06dc-154">Если `autoConvert` параметр `true` и этот метод не удается найти данные в указанном формате, он предпринимает попытку преобразования данных в формат.</span><span class="sxs-lookup"><span data-stu-id="e06dc-154">If the `autoConvert` parameter is `true` and this method cannot find data in the specified format, it attempts to convert the data to the format.</span></span> <span data-ttu-id="e06dc-155">Если данные невозможно преобразовать в указанный формат, или если данные были сохранены с `autoConvert` параметру присвоить `false`, этот метод возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="e06dc-155">If the data cannot be converted to the specified format, or if the data was stored with the `autoConvert` parameter set to `false`, this method returns `null`.</span></span>  
  
 <span data-ttu-id="e06dc-156">Если `autoConvert` параметр `false`, этот метод возвращает данные в указанном формате, или `null` Если невозможно найти данные в этом формате.</span><span class="sxs-lookup"><span data-stu-id="e06dc-156">If the `autoConvert` parameter is `false`, this method returns data in the specified format, or `null` if no data in this format can be found.</span></span>  
  
 <span data-ttu-id="e06dc-157">Чтобы определить, связан с данных, или может быть преобразован в формат, вызовите <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> перед вызовом <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span><span class="sxs-lookup"><span data-stu-id="e06dc-157">To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="e06dc-158">Вызовите <xref:System.Windows.Forms.IDataObject.GetFormats%2A> список допустимых форматов для данных, хранящихся в данном экземпляре.</span><span class="sxs-lookup"><span data-stu-id="e06dc-158">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for a list of valid formats for the data stored in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e06dc-159">Данные могут преобразовываться в другой формат, если он был сохранен, указав, что преобразование разрешено, и в том случае, если запрошенный формат совместим с форматом данных.</span><span class="sxs-lookup"><span data-stu-id="e06dc-159">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="e06dc-160">Например данные, хранящиеся в виде Юникода могут быть преобразованы в текст.</span><span class="sxs-lookup"><span data-stu-id="e06dc-160">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="e06dc-161">Реализация этого метода, см. в разделе <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e06dc-161">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e06dc-162">В этом примере используется <xref:System.Windows.Forms.DataObject> класса, который реализует `IDataObject`, чтобы продемонстрировать использование `GetData` метод.</span><span class="sxs-lookup"><span data-stu-id="e06dc-162">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method.</span></span> <span data-ttu-id="e06dc-163">Извлекаются данные, хранящиеся в `DataObject`, с использованием `autoConvert` параметр для указания необходимости преобразования формата данных.</span><span class="sxs-lookup"><span data-stu-id="e06dc-163">The example retrieves the data stored in a `DataObject`, using the `autoConvert` parameter to specify whether or not to convert the data format.</span></span> <span data-ttu-id="e06dc-164">Во-первых, `myDataObject` создается с текстовыми данными.</span><span class="sxs-lookup"><span data-stu-id="e06dc-164">First, `myDataObject` is created with text data.</span></span> <span data-ttu-id="e06dc-165">Затем в примере предпринимается дважды получить данные.</span><span class="sxs-lookup"><span data-stu-id="e06dc-165">Then the example tries twice to retrieve the data.</span></span> <span data-ttu-id="e06dc-166">В первой попытке, оно задается формат как строка и наборы `autoConvert` параметр `false`.</span><span class="sxs-lookup"><span data-stu-id="e06dc-166">In the first trial, it specifies its format as a string and sets the `autoConvert` parameter to `false`.</span></span> <span data-ttu-id="e06dc-167">Эта попытка завершается сбоем, и результат отображается в окне сообщения с меткой «Message #1».</span><span class="sxs-lookup"><span data-stu-id="e06dc-167">This trial fails, and the result is displayed in a message box labeled "Message #1."</span></span> <span data-ttu-id="e06dc-168">Во второй попытке, в примере извлекается те же данные `autoConvert` параметру присвоить `true`.</span><span class="sxs-lookup"><span data-stu-id="e06dc-168">In the second trial, the example retrieves the same data with the `autoConvert` parameter set to `true`.</span></span> <span data-ttu-id="e06dc-169">Эта попытка завершается успешно, и результат отображается в окне сообщения с меткой «Message #2».</span><span class="sxs-lookup"><span data-stu-id="e06dc-169">This trial succeeds, and the result is displayed in a message box labeled "Message #2."</span></span> <span data-ttu-id="e06dc-170">В примере предполагается, что вы создали <xref:System.Windows.Forms.Form> с именем `Form1`.</span><span class="sxs-lookup"><span data-stu-id="e06dc-170">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetData3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetData3/CPP/getdata3.cpp#1)]
 [!code-csharp[GetData3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetData3/CS/getdata3.cs#1)]
 [!code-vb[GetData3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetData3/VB/getdata3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataPresent">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e06dc-171">Определяет, связан ли хранимые в данном экземпляре данные с указанным форматом.</span><span class="sxs-lookup"><span data-stu-id="e06dc-171">Determines whether data stored in this instance is associated with the specified format.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(System::String ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : string -&gt; bool" Usage="iDataObject.GetDataPresent format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="e06dc-172">Формат, для которого требуется проверить.</span><span class="sxs-lookup"><span data-stu-id="e06dc-172">The format for which to check.</span></span> <span data-ttu-id="e06dc-173">См. в разделе <see cref="T:System.Windows.Forms.DataFormats" /> о предварительно определенных форматах.</span><span class="sxs-lookup"><span data-stu-id="e06dc-173">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <summary><span data-ttu-id="e06dc-174">Определяет, связан с данные, хранящиеся в данном экземпляре, или можно преобразовать в указанный формат.</span><span class="sxs-lookup"><span data-stu-id="e06dc-174">Determines whether data stored in this instance is associated with, or can be converted to, the specified format.</span></span></summary>
        <returns><span data-ttu-id="e06dc-175"><see langword="true" /> Если данные хранятся в связан с данного экземпляра, или могут быть преобразованы в указанный формат; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e06dc-175"><see langword="true" /> if data stored in this instance is associated with, or can be converted to, the specified format; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e06dc-176">Вызовите этот метод, чтобы определить, существует ли в этом формате <xref:System.Windows.Forms.DataObject> перед вызовом <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span><span class="sxs-lookup"><span data-stu-id="e06dc-176">Call this method to determine whether a format exists in this <xref:System.Windows.Forms.DataObject> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="e06dc-177">Вызовите <xref:System.Windows.Forms.IDataObject.GetFormats%2A> для форматов, доступных в данном экземпляре.</span><span class="sxs-lookup"><span data-stu-id="e06dc-177">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for the formats that are available in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e06dc-178">Данные могут преобразовываться в другой формат, если он был сохранен, указав, что преобразование разрешено, и в том случае, если запрошенный формат совместим с форматом данных.</span><span class="sxs-lookup"><span data-stu-id="e06dc-178">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="e06dc-179">Например данные, хранящиеся в виде Юникода могут быть преобразованы в текст.</span><span class="sxs-lookup"><span data-stu-id="e06dc-179">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="e06dc-180">Реализация этого метода, см. в разделе <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e06dc-180">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e06dc-181">В этом примере используется <xref:System.Windows.Forms.DataObject> класса, который реализует `IDataObject`, чтобы продемонстрировать использование `GetDataPresent` метод.</span><span class="sxs-lookup"><span data-stu-id="e06dc-181">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method.</span></span> <span data-ttu-id="e06dc-182">Во-первых, он создает объект данных, используя строку и `Text` формат.</span><span class="sxs-lookup"><span data-stu-id="e06dc-182">First, it creates a data object using a string and the `Text` format.</span></span> <span data-ttu-id="e06dc-183">Затем он проверяет, что данные уже находятся в `Text` форматирования и отображает результаты в окне сообщения.</span><span class="sxs-lookup"><span data-stu-id="e06dc-183">Then it verifies that the data is present in the `Text` format and displays the results in a message box.</span></span> <span data-ttu-id="e06dc-184">В примере предполагается, что вы создали <xref:System.Windows.Forms.Form> с именем `Form1`.</span><span class="sxs-lookup"><span data-stu-id="e06dc-184">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetDataPresent1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetDataPresent1/CPP/getdatapresent1.cpp#1)]
 [!code-csharp[GetDataPresent1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetDataPresent1/CS/getdatapresent1.cs#1)]
 [!code-vb[GetDataPresent1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetDataPresent1/VB/getdatapresent1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(Type ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : Type -&gt; bool" Usage="iDataObject.GetDataPresent format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="e06dc-185">Объект <see cref="T:System.Type" /> представляющий формат, для которого требуется проверить.</span><span class="sxs-lookup"><span data-stu-id="e06dc-185">A <see cref="T:System.Type" /> representing the format for which to check.</span></span> <span data-ttu-id="e06dc-186">См. в разделе <see cref="T:System.Windows.Forms.DataFormats" /> о предварительно определенных форматах.</span><span class="sxs-lookup"><span data-stu-id="e06dc-186">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <summary><span data-ttu-id="e06dc-187">Определяет, связан с данные, хранящиеся в данном экземпляре, или можно преобразовать в указанный формат.</span><span class="sxs-lookup"><span data-stu-id="e06dc-187">Determines whether data stored in this instance is associated with, or can be converted to, the specified format.</span></span></summary>
        <returns><span data-ttu-id="e06dc-188"><see langword="true" /> Если данные хранятся в связан с данного экземпляра, или могут быть преобразованы в указанный формат; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e06dc-188"><see langword="true" /> if data stored in this instance is associated with, or can be converted to, the specified format; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e06dc-189">Вызовите этот метод, чтобы определить, существует ли в этом формате <xref:System.Windows.Forms.DataObject> перед вызовом <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span><span class="sxs-lookup"><span data-stu-id="e06dc-189">Call this method to determine whether a format exists in this <xref:System.Windows.Forms.DataObject> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="e06dc-190">Вызовите <xref:System.Windows.Forms.IDataObject.GetFormats%2A> для форматов, доступных в данном экземпляре.</span><span class="sxs-lookup"><span data-stu-id="e06dc-190">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for the formats that are available in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e06dc-191">Данные могут преобразовываться в другой формат, если он был сохранен, указав, что преобразование разрешено, и в том случае, если запрошенный формат совместим с форматом данных.</span><span class="sxs-lookup"><span data-stu-id="e06dc-191">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="e06dc-192">Например данные, хранящиеся в виде Юникода могут быть преобразованы в текст.</span><span class="sxs-lookup"><span data-stu-id="e06dc-192">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="e06dc-193">Реализация этого метода, см. в разделе <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e06dc-193">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e06dc-194">В этом примере используется <xref:System.Windows.Forms.DataObject> класса, который реализует `IDataObject`, чтобы продемонстрировать использование `GetDataPresent` метод.</span><span class="sxs-lookup"><span data-stu-id="e06dc-194">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method.</span></span> <span data-ttu-id="e06dc-195">Во-первых, он создает компонент (`myComponent`) и сохраняет его в объект данных (`myDataObject`).</span><span class="sxs-lookup"><span data-stu-id="e06dc-195">First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`).</span></span> <span data-ttu-id="e06dc-196">Затем он проверяет, хранится ли указанные данные в `myDataObject`.</span><span class="sxs-lookup"><span data-stu-id="e06dc-196">Then it checks whether the specified data is stored in `myDataObject`.</span></span> <span data-ttu-id="e06dc-197">Если результатом проверки является `true`, он отображает результат в окне сообщения и отображает тип данных в текстовом поле.</span><span class="sxs-lookup"><span data-stu-id="e06dc-197">If the test evaluates `true`, it displays the result in a message box and displays the data type in a text box.</span></span> <span data-ttu-id="e06dc-198">В этом примере предполагается, что вы уже создали <xref:System.Windows.Forms.Form> с именем `Form1` и <xref:System.Windows.Forms.TextBox> с именем `textBox1`.</span><span class="sxs-lookup"><span data-stu-id="e06dc-198">This example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.</span></span>  
  
 [!code-cpp[GetDataPresent2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetDataPresent2/CPP/getdatapresent2.cpp#1)]
 [!code-csharp[GetDataPresent2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetDataPresent2/CS/getdatapresent2.cs#1)]
 [!code-vb[GetDataPresent2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetDataPresent2/VB/getdatapresent2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As String, autoConvert As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(System::String ^ format, bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : string * bool -&gt; bool" Usage="iDataObject.GetDataPresent (format, autoConvert)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="e06dc-199">Формат, для которого требуется проверить.</span><span class="sxs-lookup"><span data-stu-id="e06dc-199">The format for which to check.</span></span> <span data-ttu-id="e06dc-200">См. в разделе <see cref="T:System.Windows.Forms.DataFormats" /> о предварительно определенных форматах.</span><span class="sxs-lookup"><span data-stu-id="e06dc-200">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="autoConvert"><span data-ttu-id="e06dc-201"><see langword="true" /> для определения данных, хранимых в данном экземпляре можно преобразовать в указанный формат; <see langword="false" /> для проверки, являются ли данные в указанном формате.</span><span class="sxs-lookup"><span data-stu-id="e06dc-201"><see langword="true" /> to determine whether data stored in this instance can be converted to the specified format; <see langword="false" /> to check whether the data is in the specified format.</span></span></param>
        <summary><span data-ttu-id="e06dc-202">Определяет, связан ли хранимые в данном экземпляре данные с указанным форматом, используя значение типа Boolean для определения необходимости данные преобразуются в формат.</span><span class="sxs-lookup"><span data-stu-id="e06dc-202">Determines whether data stored in this instance is associated with the specified format, using a Boolean value to determine whether to convert the data to the format.</span></span></summary>
        <returns><span data-ttu-id="e06dc-203"><see langword="true" /> Если данные в, или могут быть преобразованы в указанный формат; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e06dc-203"><see langword="true" /> if the data is in, or can be converted to, the specified format; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e06dc-204">Вызовите этот метод, чтобы определить, существует ли в этом формате <xref:System.Windows.Forms.DataObject> перед вызовом <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span><span class="sxs-lookup"><span data-stu-id="e06dc-204">Call this method to determine whether a format exists in this <xref:System.Windows.Forms.DataObject> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="e06dc-205">Вызовите <xref:System.Windows.Forms.IDataObject.GetFormats%2A> для форматов, доступных в данном экземпляре.</span><span class="sxs-lookup"><span data-stu-id="e06dc-205">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for the formats that are available in this instance.</span></span>  
  
 <span data-ttu-id="e06dc-206">Этот метод возвращает `true` при:</span><span class="sxs-lookup"><span data-stu-id="e06dc-206">This method returns `true` when:</span></span>  
  
-   <span data-ttu-id="e06dc-207">`autoConvert` Параметр `true` , и данные в формате, который можно преобразовать в соответствующий формат.</span><span class="sxs-lookup"><span data-stu-id="e06dc-207">The `autoConvert` parameter is `true` and the data is in a format that can be converted to the appropriate format.</span></span>  
  
-   <span data-ttu-id="e06dc-208">`autoConvert` Параметр `false` , и данные в соответствующем формате.</span><span class="sxs-lookup"><span data-stu-id="e06dc-208">The `autoConvert` parameter is `false` and the data is in the appropriate format.</span></span>  
  
 <span data-ttu-id="e06dc-209">Этот метод возвращает `false` при:</span><span class="sxs-lookup"><span data-stu-id="e06dc-209">This method returns `false` when:</span></span>  
  
-   <span data-ttu-id="e06dc-210">`autoConvert` Параметр `true` и этот метод не удается найти данные в указанном формате и не может преобразовать их в указанный формат, или данные были сохранены с `autoConvert` присвоено `false`.</span><span class="sxs-lookup"><span data-stu-id="e06dc-210">The `autoConvert` parameter is `true` and this method cannot find data in the specified format, and it cannot convert data to the specified format, or the data was stored with `autoConvert` set to `false`.</span></span>  
  
-   <span data-ttu-id="e06dc-211">`autoConvert` Параметр `false`, и данные не существуют в данном экземпляре, в указанном формате.</span><span class="sxs-lookup"><span data-stu-id="e06dc-211">The `autoConvert` parameter is `false`, and data does not exist in this instance in the specified format.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e06dc-212">Данные могут преобразовываться в другой формат, если он был сохранен, указав, что преобразование разрешено, и в том случае, если запрошенный формат совместим с форматом данных.</span><span class="sxs-lookup"><span data-stu-id="e06dc-212">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="e06dc-213">Например данные, хранящиеся в виде Юникода могут быть преобразованы в текст.</span><span class="sxs-lookup"><span data-stu-id="e06dc-213">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="e06dc-214">Реализация этого метода, см. в разделе <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e06dc-214">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e06dc-215">В этом примере используется <xref:System.Windows.Forms.DataObject> класса, который реализует `IDataObject`, чтобы продемонстрировать использование `GetDataPresent` метод.</span><span class="sxs-lookup"><span data-stu-id="e06dc-215">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method.</span></span> <span data-ttu-id="e06dc-216">Во-первых, он создает объект данных (`myDataObject`) с помощью строки и `Text` формат.</span><span class="sxs-lookup"><span data-stu-id="e06dc-216">First, it creates a data object (`myDataObject`) using a string and the `Text` format.</span></span> <span data-ttu-id="e06dc-217">Затем он запрашивает у объекта данные, связанные с `Text` формат, с помощью `autoConvert` параметру присвоить `false`.</span><span class="sxs-lookup"><span data-stu-id="e06dc-217">Then it queries the object for data associated with the `Text` format, with the `autoConvert` parameter set to `false`.</span></span> <span data-ttu-id="e06dc-218">Эта попытка завершается сбоем, и результат отображается в окне сообщения с меткой «Message #1».</span><span class="sxs-lookup"><span data-stu-id="e06dc-218">This trial fails, and the result is displayed in a message box labeled "Message #1."</span></span> <span data-ttu-id="e06dc-219">Во второй попытке, он задает `autoConvert` параметр `true`.</span><span class="sxs-lookup"><span data-stu-id="e06dc-219">In the second trial, it sets the `autoConvert` parameter to `true`.</span></span> <span data-ttu-id="e06dc-220">Эта попытка завершается успешно, и результат отображается в окне сообщения с меткой «Message #2».</span><span class="sxs-lookup"><span data-stu-id="e06dc-220">This trial succeeds, and the result is displayed in a message box labeled "Message #2."</span></span> <span data-ttu-id="e06dc-221">В примере предполагается, что вы создали <xref:System.Windows.Forms.Form> с именем `Form1`.</span><span class="sxs-lookup"><span data-stu-id="e06dc-221">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetDataPresent3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetDataPresent3/CPP/getdatapresent3.cpp#1)]
 [!code-csharp[GetDataPresent3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetDataPresent3/CS/getdatapresent3.cs#1)]
 [!code-vb[GetDataPresent3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetDataPresent3/VB/getdatapresent3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFormats">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e06dc-222">Возвращает список всех форматов, в которых данные, хранящиеся в этом экземпляре или в которые они может быть преобразован в.</span><span class="sxs-lookup"><span data-stu-id="e06dc-222">Returns a list of all formats that data stored in this instance is associated with or can be converted to.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormats () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetFormats();" />
      <MemberSignature Language="F#" Value="abstract member GetFormats : unit -&gt; string[]" Usage="iDataObject.GetFormats " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e06dc-223">Возвращает список всех форматов, в которых данные, хранящиеся в этом экземпляре или в которые они может быть преобразован в.</span><span class="sxs-lookup"><span data-stu-id="e06dc-223">Returns a list of all formats that data stored in this instance is associated with or can be converted to.</span></span></summary>
        <returns><span data-ttu-id="e06dc-224">Массив имен, представляющий список всех форматов, поддерживаемых данные, хранящиеся в этом объекте.</span><span class="sxs-lookup"><span data-stu-id="e06dc-224">An array of the names that represents a list of all formats that are supported by the data stored in this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e06dc-225">Вызовите этот метод, чтобы получить поддерживаемые форматы данных перед вызовом <xref:System.Windows.Forms.IDataObject.GetData%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="e06dc-225">Call this method to get the supported data formats before calling the <xref:System.Windows.Forms.IDataObject.GetData%2A> method.</span></span> <span data-ttu-id="e06dc-226">См. в разделе <xref:System.Windows.Forms.DataFormats> класс для стандартных форматов.</span><span class="sxs-lookup"><span data-stu-id="e06dc-226">See the <xref:System.Windows.Forms.DataFormats> class for the predefined formats.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e06dc-227">Данные могут преобразовываться в другой формат, если он был сохранен, указав, что преобразование разрешено, и в том случае, если запрошенный формат совместим с форматом данных.</span><span class="sxs-lookup"><span data-stu-id="e06dc-227">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="e06dc-228">Например данные, хранящиеся в виде Юникода могут быть преобразованы в текст.</span><span class="sxs-lookup"><span data-stu-id="e06dc-228">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="e06dc-229">Реализация этого метода, см. в разделе <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e06dc-229">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e06dc-230">В этом примере используется <xref:System.Windows.Forms.DataObject> класса, который реализует `IDataObject`, чтобы продемонстрировать использование `GetFormats` метод.</span><span class="sxs-lookup"><span data-stu-id="e06dc-230">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method.</span></span> <span data-ttu-id="e06dc-231">Во-первых, он создает объект данных (`myDataObject`) с помощью строки и `Text` формат.</span><span class="sxs-lookup"><span data-stu-id="e06dc-231">First, it creates a data object (`myDataObject`) using a string and the `Text` format.</span></span> <span data-ttu-id="e06dc-232">Затем он извлекает все форматы данных и форматы преобразования данных в объекте данных и отображает полученный список в окне сообщения.</span><span class="sxs-lookup"><span data-stu-id="e06dc-232">Then it retrieves all the data formats and data conversion formats in the data object, and displays the resulting list in a message box.</span></span> <span data-ttu-id="e06dc-233">В этом примере предполагается, что вы создали <xref:System.Windows.Forms.Form> с именем `Form1`.</span><span class="sxs-lookup"><span data-stu-id="e06dc-233">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetFormats1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetFormats1/CPP/getformats1.cpp#1)]
 [!code-csharp[GetFormats1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetFormats1/CS/getformats1.cs#1)]
 [!code-vb[GetFormats1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetFormats1/VB/getformats1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats (bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats(bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormats (autoConvert As Boolean) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetFormats(bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetFormats : bool -&gt; string[]" Usage="iDataObject.GetFormats autoConvert" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoConvert"><span data-ttu-id="e06dc-234"><see langword="true" /> для извлечения всех форматов данные, хранящиеся в данном экземпляре, связанный с или могут быть преобразованы. <see langword="false" /> чтобы извлечь только собственные форматы данных.</span><span class="sxs-lookup"><span data-stu-id="e06dc-234"><see langword="true" /> to retrieve all formats that data stored in this instance is associated with or can be converted to; <see langword="false" /> to retrieve only native data formats.</span></span></param>
        <summary><span data-ttu-id="e06dc-235">Получает список всех форматов, данные, хранящиеся в данном экземпляре связаны с или могут быть преобразованы, используя значение типа Boolean для определения ли для извлечения всех форматов, которые могут быть преобразованы данные или данные форматов.</span><span class="sxs-lookup"><span data-stu-id="e06dc-235">Gets a list of all formats that data stored in this instance is associated with or can be converted to, using a Boolean value to determine whether to retrieve all formats that the data can be converted to or only native data formats.</span></span></summary>
        <returns><span data-ttu-id="e06dc-236">Массив имен, представляющий список всех форматов, поддерживаемых данные, хранящиеся в этом объекте.</span><span class="sxs-lookup"><span data-stu-id="e06dc-236">An array of the names that represents a list of all formats that are supported by the data stored in this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e06dc-237">Вызовите этот метод, чтобы получить поддерживаемые форматы данных перед вызовом <xref:System.Windows.Forms.IDataObject.GetData%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="e06dc-237">Call this method to get the supported data formats before calling the <xref:System.Windows.Forms.IDataObject.GetData%2A> method.</span></span> <span data-ttu-id="e06dc-238">См. в разделе <xref:System.Windows.Forms.DataFormats> класс для стандартных форматов.</span><span class="sxs-lookup"><span data-stu-id="e06dc-238">See the <xref:System.Windows.Forms.DataFormats> class for the predefined formats.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e06dc-239">Данные могут преобразовываться в другой формат, если он был сохранен, указав, что преобразование разрешено, и в том случае, если запрошенный формат совместим с форматом данных.</span><span class="sxs-lookup"><span data-stu-id="e06dc-239">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="e06dc-240">Например данные, хранящиеся в виде Юникода могут быть преобразованы в текст.</span><span class="sxs-lookup"><span data-stu-id="e06dc-240">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="e06dc-241">Реализация этого метода, см. в разделе <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e06dc-241">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e06dc-242">В этом примере используется <xref:System.Windows.Forms.DataObject> класса, который реализует `IDataObject`, чтобы продемонстрировать использование `GetFormats` метод.</span><span class="sxs-lookup"><span data-stu-id="e06dc-242">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method.</span></span> <span data-ttu-id="e06dc-243">Во-первых, он создает объект данных (`myDataObject`) с помощью строки и `UnicodeText` формат.</span><span class="sxs-lookup"><span data-stu-id="e06dc-243">First, it creates a data object (`myDataObject`) using a string and the `UnicodeText` format.</span></span> <span data-ttu-id="e06dc-244">Затем оно отправляет два запроса, чтобы получить список всех форматов, связанный с данными.</span><span class="sxs-lookup"><span data-stu-id="e06dc-244">Then it makes two queries to get the formats associated with the data.</span></span> <span data-ttu-id="e06dc-245">В первом запросе, он задает `autoConvert` параметр `false` : в этом случае возвращается только в собственном формате данных.</span><span class="sxs-lookup"><span data-stu-id="e06dc-245">In the first query, it sets the `autoConvert` parameter to `false` : in this case, only the native format of the data is returned.</span></span> <span data-ttu-id="e06dc-246">Во втором запросе, он задает `autoConvert` параметр `true`, так что он получает список форматов, включая форматы, которые могут быть преобразованы данные.</span><span class="sxs-lookup"><span data-stu-id="e06dc-246">In the second query, it sets the `autoConvert` parameter to `true`, so that it gets the list of formats, including the formats that the data can be converted to.</span></span> <span data-ttu-id="e06dc-247">В каждом случае полученный список отображается в окне сообщения.</span><span class="sxs-lookup"><span data-stu-id="e06dc-247">In each case, the resulting list is displayed in a message box.</span></span> <span data-ttu-id="e06dc-248">В этом примере предполагается, что вы создали <xref:System.Windows.Forms.Form> с именем `Form1`.</span><span class="sxs-lookup"><span data-stu-id="e06dc-248">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetFormats2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetFormats2/CPP/getformats2.cpp#1)]
 [!code-csharp[GetFormats2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetFormats2/CS/getformats2.cs#1)]
 [!code-vb[GetFormats2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetFormats2/VB/getformats2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e06dc-249">Сохраняет указанные данные и связанный с ними формат в этом экземпляре.</span><span class="sxs-lookup"><span data-stu-id="e06dc-249">Stores the specified data and its associated format in this instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : obj -&gt; unit" Usage="iDataObject.SetData data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e06dc-250">Сохраняемые данные.</span><span class="sxs-lookup"><span data-stu-id="e06dc-250">The data to store.</span></span></param>
        <summary><span data-ttu-id="e06dc-251">Сохраняет указанные данные в этом экземпляре, используя класс данных для формата.</span><span class="sxs-lookup"><span data-stu-id="e06dc-251">Stores the specified data in this instance, using the class of the data for the format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e06dc-252">Формат является производным от класса данных.</span><span class="sxs-lookup"><span data-stu-id="e06dc-252">The format is derived from the data class.</span></span>  
  
 <span data-ttu-id="e06dc-253">Хранить данные с помощью этого метода могут преобразовываться в совместимый формат при извлечении.</span><span class="sxs-lookup"><span data-stu-id="e06dc-253">Data stored using this method can be converted to a compatible format when it is retrieved.</span></span>  
  
 <span data-ttu-id="e06dc-254">Реализация этого метода, см. в разделе <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e06dc-254">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e06dc-255">В этом примере используется <xref:System.Windows.Forms.DataObject> класса, который реализует `IDataObject`, чтобы продемонстрировать использование `SetData` метод.</span><span class="sxs-lookup"><span data-stu-id="e06dc-255">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="e06dc-256">Во-первых, он создает компонент (`myComponent`) и сохраняет его в объект данных (`myDataObject`).</span><span class="sxs-lookup"><span data-stu-id="e06dc-256">First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`).</span></span> <span data-ttu-id="e06dc-257">Затем проверяется ли указанные данные хранятся в объекте данных и отображает результат в окне сообщения.</span><span class="sxs-lookup"><span data-stu-id="e06dc-257">Then it checks whether the specified data is stored in the data object, and displays the result in a message box.</span></span> <span data-ttu-id="e06dc-258">В примере предполагается, что вы создали <xref:System.Windows.Forms.Form> с именем `Form1`.</span><span class="sxs-lookup"><span data-stu-id="e06dc-258">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData1/CPP/setdata1.cpp#1)]
 [!code-csharp[SetData1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData1/CS/setdata1.cs#1)]
 [!code-vb[SetData1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData1/VB/setdata1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : string * obj -&gt; unit" Usage="iDataObject.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="e06dc-259">Формат, связанный с данными.</span><span class="sxs-lookup"><span data-stu-id="e06dc-259">The format associated with the data.</span></span> <span data-ttu-id="e06dc-260">См. в разделе <see cref="T:System.Windows.Forms.DataFormats" /> о предварительно определенных форматах.</span><span class="sxs-lookup"><span data-stu-id="e06dc-260">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="data"><span data-ttu-id="e06dc-261">Сохраняемые данные.</span><span class="sxs-lookup"><span data-stu-id="e06dc-261">The data to store.</span></span></param>
        <summary><span data-ttu-id="e06dc-262">Сохраняет указанные данные и связанный с ними формат в этом экземпляре.</span><span class="sxs-lookup"><span data-stu-id="e06dc-262">Stores the specified data and its associated format in this instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e06dc-263">Если вы не знаете формат целевого приложения, данные можно хранить в нескольких форматах, с помощью этого метода.</span><span class="sxs-lookup"><span data-stu-id="e06dc-263">If you do not know the format of the target application, you can store data in multiple formats using this method.</span></span>  
  
 <span data-ttu-id="e06dc-264">Хранить данные с помощью этого метода могут преобразовываться в совместимый формат при извлечении.</span><span class="sxs-lookup"><span data-stu-id="e06dc-264">Data stored using this method can be converted to a compatible format when it is retrieved.</span></span>  
  
 <span data-ttu-id="e06dc-265">Реализация этого метода, см. в разделе <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e06dc-265">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e06dc-266">В этом примере используется <xref:System.Windows.Forms.DataObject> класса, который реализует `IDataObject`, чтобы продемонстрировать использование `SetData` метод.</span><span class="sxs-lookup"><span data-stu-id="e06dc-266">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="e06dc-267">Во-первых, он создает объект данных (`myDataObject`) и сохраняет строки в объекте, который задает `UnicodeText` формат.</span><span class="sxs-lookup"><span data-stu-id="e06dc-267">First, it creates a data object (`myDataObject`) and stores a string in the object specifying the `UnicodeText` format.</span></span> <span data-ttu-id="e06dc-268">Затем он извлекает данные, хранящиеся в объекте, который задает `Text` форматирования, чтобы данные преобразуются в `Text` формате.</span><span class="sxs-lookup"><span data-stu-id="e06dc-268">Then it retrieves that data stored in the object specifying the `Text` format, so that the data is converted to the `Text` format.</span></span> <span data-ttu-id="e06dc-269">Результат отображается в окне сообщения.</span><span class="sxs-lookup"><span data-stu-id="e06dc-269">The result is displayed in a message box.</span></span> <span data-ttu-id="e06dc-270">В этом примере предполагается, что вы создали <xref:System.Windows.Forms.Form> с именем `Form1`.</span><span class="sxs-lookup"><span data-stu-id="e06dc-270">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData2/CPP/setdata2.cpp#1)]
 [!code-csharp[SetData2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData2/CS/setdata2.cs#1)]
 [!code-vb[SetData2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData2/VB/setdata2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (Type format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(class System.Type format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As Type, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(Type ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : Type * obj -&gt; unit" Usage="iDataObject.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="e06dc-271">Объект <see cref="T:System.Type" /> представляющий формат, связанный с данными.</span><span class="sxs-lookup"><span data-stu-id="e06dc-271">A <see cref="T:System.Type" /> representing the format associated with the data.</span></span> <span data-ttu-id="e06dc-272">См. в разделе <see cref="T:System.Windows.Forms.DataFormats" /> о предварительно определенных форматах.</span><span class="sxs-lookup"><span data-stu-id="e06dc-272">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="data"><span data-ttu-id="e06dc-273">Сохраняемые данные.</span><span class="sxs-lookup"><span data-stu-id="e06dc-273">The data to store.</span></span></param>
        <summary><span data-ttu-id="e06dc-274">Сохраняет указанные данные и связанный тип класса в этом экземпляре.</span><span class="sxs-lookup"><span data-stu-id="e06dc-274">Stores the specified data and its associated class type in this instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e06dc-275">Если вы не знаете формат целевого приложения, данные можно хранить в нескольких форматах, с помощью этого метода.</span><span class="sxs-lookup"><span data-stu-id="e06dc-275">If you do not know the format of the target application, you can store data in multiple formats using this method.</span></span>  
  
 <span data-ttu-id="e06dc-276">Хранить данные с помощью этого метода могут преобразовываться в совместимый формат при извлечении.</span><span class="sxs-lookup"><span data-stu-id="e06dc-276">Data stored using this method can be converted to a compatible format when it is retrieved.</span></span>  
  
 <span data-ttu-id="e06dc-277">Реализация этого метода, см. в разделе <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e06dc-277">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e06dc-278">В этом примере используется <xref:System.Windows.Forms.DataObject> класса, который реализует `IDataObject`, чтобы продемонстрировать использование `SetData` метод.</span><span class="sxs-lookup"><span data-stu-id="e06dc-278">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="e06dc-279">Во-первых, он создает компонент (`myComponent`) и сохраняет его в объект данных (`myDataObject`), с использованием `myType` указать формат данных.</span><span class="sxs-lookup"><span data-stu-id="e06dc-279">First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`), using `myType` to specify the data format.</span></span> <span data-ttu-id="e06dc-280">Затем он проверяет, хранится в объекте данных указанного типа и отображает результат в окне сообщения.</span><span class="sxs-lookup"><span data-stu-id="e06dc-280">Then it checks whether the data of the specified type is stored in the object, and displays the result in a message box.</span></span> <span data-ttu-id="e06dc-281">В примере предполагается, что вы создали <xref:System.Windows.Forms.Form> с именем `Form1`.</span><span class="sxs-lookup"><span data-stu-id="e06dc-281">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData3/CPP/setdata3.cpp#1)]
 [!code-csharp[SetData3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData3/CS/setdata3.cs#1)]
 [!code-vb[SetData3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData3/VB/setdata3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, bool autoConvert, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, bool autoConvert, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As String, autoConvert As Boolean, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::String ^ format, bool autoConvert, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : string * bool * obj -&gt; unit" Usage="iDataObject.SetData (format, autoConvert, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="e06dc-282">Формат, связанный с данными.</span><span class="sxs-lookup"><span data-stu-id="e06dc-282">The format associated with the data.</span></span> <span data-ttu-id="e06dc-283">См. в разделе <see cref="T:System.Windows.Forms.DataFormats" /> о предварительно определенных форматах.</span><span class="sxs-lookup"><span data-stu-id="e06dc-283">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="autoConvert"><span data-ttu-id="e06dc-284"><see langword="true" /> Чтобы данные для преобразования в другой формат; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e06dc-284"><see langword="true" /> to allow the data to be converted to another format; otherwise, <see langword="false" />.</span></span></param>
        <param name="data"><span data-ttu-id="e06dc-285">Сохраняемые данные.</span><span class="sxs-lookup"><span data-stu-id="e06dc-285">The data to store.</span></span></param>
        <summary><span data-ttu-id="e06dc-286">Сохраняет указанные данные и связанный с ними формат в этом экземпляре, используя значение типа Boolean для указания, может ли быть преобразован в другой формат данных.</span><span class="sxs-lookup"><span data-stu-id="e06dc-286">Stores the specified data and its associated format in this instance, using a Boolean value to specify whether the data can be converted to another format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e06dc-287">Если вы не знаете формат целевого приложения, данные можно хранить в нескольких форматах, с помощью этого метода.</span><span class="sxs-lookup"><span data-stu-id="e06dc-287">If you do not know the format of the target application, you can store data in multiple formats using this method.</span></span>  
  
 <span data-ttu-id="e06dc-288">Реализация этого метода, см. в разделе <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e06dc-288">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e06dc-289">В этом примере используется <xref:System.Windows.Forms.DataObject> класса, который реализует `IDataObject`, чтобы продемонстрировать использование `SetData` метод.</span><span class="sxs-lookup"><span data-stu-id="e06dc-289">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="e06dc-290">Во-первых, он создает объект данных (`myDataObject`) и сохраняет `UnicodeText` строка, с помощью `autoConvert` параметру присвоить `false`.</span><span class="sxs-lookup"><span data-stu-id="e06dc-290">First, it creates a data object (`myDataObject`) and stores a `UnicodeText` string in it, with the `autoConvert` parameter set to `false`.</span></span> <span data-ttu-id="e06dc-291">Затем получаются форматы, связанные с данными, хранящимися в объекте и отображает результат в окне сообщения.</span><span class="sxs-lookup"><span data-stu-id="e06dc-291">Then it retrieves the format(s) associated with the data stored in the object and displays the result in a message box.</span></span> <span data-ttu-id="e06dc-292">Единственный формат, связанный с данными — `UnicodeText` формат.</span><span class="sxs-lookup"><span data-stu-id="e06dc-292">The only format associated with the data is the `UnicodeText` format.</span></span> <span data-ttu-id="e06dc-293">В этом примере предполагается, что вы создали <xref:System.Windows.Forms.Form> с именем `Form1`.</span><span class="sxs-lookup"><span data-stu-id="e06dc-293">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData4/CPP/form1.cpp#1)]
 [!code-csharp[SetData4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData4/CS/form1.cs#1)]
 [!code-vb[SetData4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData4/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>