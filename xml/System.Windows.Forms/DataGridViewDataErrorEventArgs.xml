<Type Name="DataGridViewDataErrorEventArgs" FullName="System.Windows.Forms.DataGridViewDataErrorEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d2b5bffe9956e72b8e8780e77337ca78585e81c2" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64211405" /></Metadata><TypeSignature Language="C#" Value="public class DataGridViewDataErrorEventArgs : System.Windows.Forms.DataGridViewCellCancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewDataErrorEventArgs extends System.Windows.Forms.DataGridViewCellCancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewDataErrorEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewDataErrorEventArgs&#xA;Inherits DataGridViewCellCancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewDataErrorEventArgs : System::Windows::Forms::DataGridViewCellCancelEventArgs" />
  <TypeSignature Language="F#" Value="type DataGridViewDataErrorEventArgs = class&#xA;    inherit DataGridViewCellCancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataGridViewCellCancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет данные для события <see cref="E:System.Windows.Forms.DataGridView.DataError" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обработка <xref:System.Windows.Forms.DataGridView.DataError> событие позволяет обработки исключений, создаваемых кода за пределами элемента управления (например, с внешнего источника данных). Используйте <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Context%2A> свойства, чтобы определить состояние <xref:System.Windows.Forms.DataGridView> в момент возникновения исключения. Используйте <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception%2A> свойство для извлечения данных исключения. Если вы хотите обрабатывать исключения с дополнительных обработчиков событий, задайте <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A> свойства `true`.  
  
 <xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex%2A> И <xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.RowIndex%2A> свойства обычно указывают ячейки, в котором произошла ошибка в данных. При возникновении ошибки во внешнем источнике данных, тем не менее, источник данных не может предоставлять столбца, в котором произошла ошибка. В этом случае <xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex%2A> свойство обычно указывает столбца текущей ячейки в момент возникновения ошибки.  
  
   
  
## Examples  
 В следующем примере кода показано, как реагировать на сведения, предоставляемые <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs> класса. Этот пример является частью большего примера, доступных в <xref:System.Windows.Forms.DataGridViewComboBoxColumn> класс обзорной статье.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewDataErrorEventArgs (Exception exception, int columnIndex, int rowIndex, System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception, int32 columnIndex, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewDataErrorEventArgs.#ctor(System.Exception,System.Int32,System.Int32,System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewDataErrorEventArgs(Exception ^ exception, int columnIndex, int rowIndex, System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataGridViewDataErrorEventArgs : Exception * int * int * System.Windows.Forms.DataGridViewDataErrorContexts -&gt; System.Windows.Forms.DataGridViewDataErrorEventArgs" Usage="new System.Windows.Forms.DataGridViewDataErrorEventArgs (exception, columnIndex, rowIndex, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="exception">Возникшее исключение.</param>
        <param name="columnIndex">Индекс столбца ячейки, в которой возникло событие <see cref="E:System.Windows.Forms.DataGridView.DataError" />.</param>
        <param name="rowIndex">Индекс строки ячейки, в которой возникло событие <see cref="E:System.Windows.Forms.DataGridView.DataError" />.</param>
        <param name="context">Битовая комбинация значений <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" />, указывающая контекст, в котором произошла ошибка.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.DataGridViewDataErrorEventArgs" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewDataErrorContexts Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewDataErrorContexts Context" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As DataGridViewDataErrorContexts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewDataErrorContexts Context { System::Windows::Forms::DataGridViewDataErrorContexts get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Windows.Forms.DataGridViewDataErrorContexts" Usage="System.Windows.Forms.DataGridViewDataErrorEventArgs.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewDataErrorContexts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает сведения о состоянии объекта <see cref="T:System.Windows.Forms.DataGridView" /> во время возникновения ошибки.</summary>
        <value>Битовая комбинация значений <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" />, которая задает контекст, в котором произошла ошибка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Членами <xref:System.Windows.Forms.DataGridViewDataErrorContexts> перечисления могут объединяться с помощью побитовой операции `OR` оператора для представления состояния привязкой к данным <xref:System.Windows.Forms.DataGridView> когда произошла ошибка в данных. Например, если пользователь вводит недопустимое значение для ячейки (например, ввести имя, в ячейке, которая требует, чтобы дата), а затем выбирает другую ячейку, <xref:System.Windows.Forms.DataGridView> выполнит попытку зафиксировать недопустимое значение ячейки. При сбое фиксации <xref:System.Windows.Forms.DataGridView> вызовет <xref:System.Windows.Forms.DataGridView.DataError> события которого <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Context%2A> свойство будет иметь значение <xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit> и <xref:System.Windows.Forms.DataGridViewDataErrorContexts.CurrentCellChange>.  
  
   
  
## Examples  
 В следующем примере кода показано, как проверить контекст ошибки. Этот пример является частью большего примера, доступных в <xref:System.Windows.Forms.DataGridViewComboBoxColumn> класс обзорной статье.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает исключение, представляющее ошибку.</summary>
        <value>Объект <see cref="T:System.Exception" />, представляющий ошибку.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для обработки исключения более чем одной <xref:System.Windows.Forms.DataGridViewDataErrorEventHandler>, выдать исключение снова в конце обработчика, задав <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A> свойства `true`.  
  
   
  
## Examples  
 В следующем примере кода показано выполнение проверки <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception%2A> свойство. Этот пример является частью большего примера, доступных в <xref:System.Windows.Forms.DataGridViewComboBoxColumn> класс обзорной статье.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
      </Docs>
    </Member>
    <Member MemberName="ThrowException">
      <MemberSignature Language="C#" Value="public bool ThrowException { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThrowException" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />
      <MemberSignature Language="VB.NET" Value="Public Property ThrowException As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ThrowException { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ThrowException : bool with get, set" Usage="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, следует ли создавать исключение после того делегат <see cref="T:System.Windows.Forms.DataGridViewDataErrorEventHandler" /> закончил его обработку.</summary>
        <value>Значение <see langword="true" />, если следует вызвать исключение; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Присвойте этому свойству значение `false` Если <xref:System.Windows.Forms.DataGridViewDataErrorEventHandler> обрабатывал исключения, представляемого <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception%2A> , а также не требуется передавать исключение в другой <xref:System.Windows.Forms.DataGridViewDataErrorEventHandler> , могут обрабатывать <xref:System.Windows.Forms.DataGridView.DataError> событий.  
  
 В целях отладки полезно передавать исключение и просмотрите сведения о контексте ошибки трассировку стека.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A> свойство, указывающее, исключение не создается. Этот пример является частью большего примера, доступных в <xref:System.Windows.Forms.DataGridViewComboBoxColumn> класс обзорной статье.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Если это свойство устанавливается в значение <see langword="true" />, свойство <see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
      </Docs>
    </Member>
  </Members>
</Type>