<Type Name="NodeLabelEditEventArgs" FullName="System.Windows.Forms.NodeLabelEditEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5be971a476fad197635d2bd65778ba62459d9ffa" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64270246" /></Metadata><TypeSignature Language="C#" Value="public class NodeLabelEditEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NodeLabelEditEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.NodeLabelEditEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class NodeLabelEditEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class NodeLabelEditEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type NodeLabelEditEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет данные для событий <see cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" /> и <see cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TreeView.AfterLabelEdit> Событие происходит, когда пользователь заканчивает правку текст для узла дерева. <xref:System.Windows.Forms.TreeView.BeforeLabelEdit> Событие происходит, когда пользователь начинает правку текст для узла дерева. Объект <xref:System.Windows.Forms.NodeLabelEditEventArgs> определяет новый текст, который связан с узлом дерева, узел дерева, который содержит метку, и была ли отменена операция редактирования.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Следующий пример позволяет пользователю изменять некорневых узлов дерева с помощью <xref:System.Windows.Forms.ContextMenu>. Когда пользователь нажимает правую кнопку мыши, <xref:System.Windows.Forms.TreeNode> по этому позиции затем сохраняется в переменной с именем `mySelectedNode`. Если был выбран узел дерева корневым, он помещается в состояние, предоставляя пользователю возможность изменять метку узла. После завершения пользователем редактирование метки узла дерева, вычисляется и сохранить новый текст подписи. Например несколько символов расцениваются как недопустимые в тексте метки. Если один из недопустимых символов в строке метки, или строка пуста, пользователь получает уведомление об ошибке и возвращается первоначальный текст метки.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.NodeLabelEditEventHandler" />
    <altmember cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" />
    <altmember cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeLabelEditEventArgs (System.Windows.Forms.TreeNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.TreeNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NodeLabelEditEventArgs.#ctor(System.Windows.Forms.TreeNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (node As TreeNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NodeLabelEditEventArgs(System::Windows::Forms::TreeNode ^ node);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.NodeLabelEditEventArgs : System.Windows.Forms.TreeNode -&gt; System.Windows.Forms.NodeLabelEditEventArgs" Usage="new System.Windows.Forms.NodeLabelEditEventArgs node" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
      </Parameters>
      <Docs>
        <param name="node">узел дерева, содержащий редактируемый текст.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> для указанного объекта <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.NodeLabelEditEventArgs.Node%2A> Свойству назначается `node` значение параметра.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NodeLabelEditEventArgs (System.Windows.Forms.TreeNode node, string label);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.TreeNode node, string label) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NodeLabelEditEventArgs.#ctor(System.Windows.Forms.TreeNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (node As TreeNode, label As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NodeLabelEditEventArgs(System::Windows::Forms::TreeNode ^ node, System::String ^ label);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.NodeLabelEditEventArgs : System.Windows.Forms.TreeNode * string -&gt; System.Windows.Forms.NodeLabelEditEventArgs" Usage="new System.Windows.Forms.NodeLabelEditEventArgs (node, label)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">узел дерева, содержащий редактируемый текст.</param>
        <param name="label">Новый текст, который будет связан с узелом дерева.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> для указанного значения <see cref="T:System.Windows.Forms.TreeNode" /> и указанного текста, используемого для обновления метки узла дерева.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.NodeLabelEditEventArgs.Node%2A> Свойству назначается `node` значение параметра и <xref:System.Windows.Forms.NodeLabelEditEventArgs.Label%2A> свойству назначается `label` значение параметра.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.Text" />
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public bool CancelEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NodeLabelEditEventArgs.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancelEdit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : bool with get, set" Usage="System.Windows.Forms.NodeLabelEditEventArgs.CancelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, было ли отменено редактирование.</summary>
        <value>Значение <see langword="true" />, если редактирование было отменено; в обратном случае – значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Следующий пример позволяет пользователю изменять некорневых узлов дерева с помощью <xref:System.Windows.Forms.ContextMenu>. Когда пользователь нажимает правую кнопку мыши, <xref:System.Windows.Forms.TreeNode> по этому позиции затем сохраняется в переменной с именем `mySelectedNode`. Если был выбран узел дерева корневым, он помещается в состояние, предоставляя пользователю возможность изменять метку узла. После завершения пользователем редактирование метки узла дерева, вычисляется и сохранить новый текст подписи. Например несколько символов расцениваются как недопустимые в тексте метки. Если один из недопустимых символов в строке метки, или строка пуста, пользователь получает уведомление об ошибке и возвращается первоначальный текст метки.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NodeLabelEditEventArgs.Label" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Label : string" Usage="System.Windows.Forms.NodeLabelEditEventArgs.Label" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает новый текст, который будет связан с этим узлом дерева.</summary>
        <value>Строковое значение, которое представляет новую метку объекта <see cref="T:System.Windows.Forms.TreeNode" /> либо значение <see langword="null" />, если пользователь отменяет правку.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение этого свойства равно `null` Если пользователь нажимает клавишу ESC, чтобы отменить изменения или нажмет клавишу ВВОД без изменения текста метки. Если пользователь редактирует текст метки, значение этого свойства — это новый текст подписи. Это справедливо, даже если конечное значение измененного текста метки является таким же, как исходное значение.  
  
   
  
## Examples  
 Следующий пример позволяет пользователю изменять некорневых узлов дерева с помощью <xref:System.Windows.Forms.ContextMenu>. Когда пользователь нажимает правую кнопку мыши, <xref:System.Windows.Forms.TreeNode> по этому позиции затем сохраняется в переменной с именем `mySelectedNode`. Если был выбран узел дерева корневым, он помещается в состояние, предоставляя пользователю возможность изменять метку узла. После завершения пользователем редактирование метки узла дерева, вычисляется и сохранить новый текст подписи. Например несколько символов расцениваются как недопустимые в тексте метки. Если один из недопустимых символов в строке метки, или строка пуста, пользователь получает уведомление об ошибке и возвращается первоначальный текст метки.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.TreeNode.Text" />
      </Docs>
    </Member>
    <Member MemberName="Node">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode Node { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Node" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NodeLabelEditEventArgs.Node" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Node As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ Node { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Node : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.NodeLabelEditEventArgs.Node" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает узел дерева, содержащий редактируемый текст.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.TreeNode" />, представляющий узел дерева, который содержит редактируемый текст.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Следующий пример позволяет пользователю изменять некорневых узлов дерева с помощью <xref:System.Windows.Forms.ContextMenu>. Когда пользователь нажимает правую кнопку мыши, <xref:System.Windows.Forms.TreeNode> по этому позиции затем сохраняется в переменной с именем `mySelectedNode`. Если был выбран узел дерева корневым, он помещается в состояние, предоставляя пользователю возможность изменять метку узла. После завершения пользователем редактирование метки узла дерева, вычисляется и сохранить новый текст подписи. Например несколько символов расцениваются как недопустимые в тексте метки. Если один из недопустимых символов в строке метки, или строка пуста, пользователь получает уведомление об ошибке и возвращается первоначальный текст метки.  
  
 [!code-cpp[classic treenode.beginedit example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CPP/source.cpp#1)]
 [!code-csharp[classic treenode.beginedit example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[classic treenode.beginedit example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TreeNode.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
      </Docs>
    </Member>
  </Members>
</Type>