<Type Name="DataObject" FullName="System.Windows.Forms.DataObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fbeb22bd9356e133dcbbce574cca958c4f38c6f1" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65015816" /></Metadata><TypeSignature Language="C#" Value="public class DataObject : System.Runtime.InteropServices.ComTypes.IDataObject, System.Windows.Forms.IDataObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataObject extends System.Object implements class System.Runtime.InteropServices.ComTypes.IDataObject, class System.Windows.Forms.IDataObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataObject" />
  <TypeSignature Language="VB.NET" Value="Public Class DataObject&#xA;Implements IDataObject, IDataObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataObject : System::Runtime::InteropServices::ComTypes::IDataObject, System::Windows::Forms::IDataObject" />
  <TypeSignature Language="F#" Value="type DataObject = class&#xA;    interface IDataObject&#xA;    interface IDataObject" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.ComTypes.IDataObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IDataObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Реализует основной механизм передачи данных.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataObject> реализует <xref:System.Windows.Forms.IDataObject> интерфейс, методы которого позволяют зависящий от формата механизм передачи данных.  
  
 Объект <xref:System.Windows.Forms.DataObject> обычно используется с <xref:System.Windows.Forms.Clipboard> и в операциях перетаскивания и вставки. <xref:System.Windows.Forms.DataObject> Класс предоставляет реализацию рекомендуемые <xref:System.Windows.Forms.IDataObject> интерфейс. Рекомендуется использовать <xref:System.Windows.Forms.DataObject> класса, а не реализовывать <xref:System.Windows.Forms.IDataObject> самостоятельно.  
  
 Несколько фрагментов данных в различных форматах, которые могут храниться в <xref:System.Windows.Forms.DataObject>. Данные извлекаются из <xref:System.Windows.Forms.DataObject> , связанный с ними формат. Так как целевое приложение не могут быть известны, можно увеличить вероятность того, что данные будут в соответствующем формате для приложения путем помещения данных в <xref:System.Windows.Forms.DataObject> в различных форматах. См. в разделе <xref:System.Windows.Forms.DataFormats> о предварительно определенных форматах. Можно реализовать собственный формат, создав экземпляр <xref:System.Windows.Forms.DataFormats.Format> класса.  
  
 Чтобы хранить данные в <xref:System.Windows.Forms.DataObject>, передачи данных в конструктор или вызов <xref:System.Windows.Forms.DataObject.SetData%2A>. Можно добавлять данные в нескольких форматах и тому же <xref:System.Windows.Forms.DataObject>. Данные можно добавить в его собственном формате только вызов получить <xref:System.Windows.Forms.DataObject.SetData%28System.String%2CSystem.Boolean%2CSystem.Object%29> с `autoConvert` параметру присвоить `false`.  
  
 Данные могут быть получены из <xref:System.Windows.Forms.DataObject> в любом формате, который совместим с <xref:System.Windows.Forms.DataObject.GetData%2A>. Например можно преобразовать текст в Юникод. Чтобы получить данные в формате, в котором он был сохранен, вызовите <xref:System.Windows.Forms.DataObject.GetData%2A> с `autoConvert` параметру присвоить `false`.  
  
 Чтобы определить, какие форматы, данные хранятся в, вызовите <xref:System.Windows.Forms.DataObject.GetFormats%2A>. Чтобы определить, доступна ли формате, вызовите <xref:System.Windows.Forms.DataObject.GetDataPresent%2A> с необходимым форматом.  
  
 В [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], <xref:System.Windows.Forms.DataObject> класс предоставляет дополнительные методы, которые облегчают работать с данными в распространенных форматах. Чтобы добавить данные определенного формата для <xref:System.Windows.Forms.DataObject>, используйте соответствующий `Set` *формат* метод, такие как <xref:System.Windows.Forms.DataObject.SetText%2A>. Для получения данных из определенного формата <xref:System.Windows.Forms.DataObject>, сначала вызовите соответствующий `Contains` *формат* метод (например <xref:System.Windows.Forms.DataObject.ContainsText%2A>) для определения ли <xref:System.Windows.Forms.DataObject> содержит данные в этом формате, вызовите соответствующий `Get` *формат* метод (например <xref:System.Windows.Forms.DataObject.GetText%2A>) для получения данных, если <xref:System.Windows.Forms.DataObject> его содержит.  
  
> [!NOTE]
>  Особые замечания, может потребоваться при использовании формата метафайла с буфером обмена. Из-за ограничения в текущей реализации <xref:System.Windows.Forms.DataObject> класса, в формате метафайла, используемых в .NET Framework могут не распознаваться приложениями, которые используют более старый формат метафайла. В этом случае необходимо взаимодействовать с буфера обмена Win32 прикладного программирования (API).
>   
>  Объект должен поддерживать сериализацию для помещения в буфер обмена. См. в разделе <xref:System.Runtime.Serialization> Дополнительные сведения о сериализации. Если для целевого приложения требуется формат очень конкретных данных, заголовки, добавляемые данные в процессе сериализации могут помешать применению распознать данные. Чтобы сохранить вашего формата данных, добавления данных в качестве <xref:System.Byte> массив <xref:System.IO.MemoryStream> и передать <xref:System.IO.MemoryStream> для <xref:System.Windows.Forms.DataObject.SetData%2A> метод.  
  
   
  
## Examples  
 В следующем примере кода добавляет данные в <xref:System.Windows.Forms.DataObject>. Во-первых, новый <xref:System.Windows.Forms.DataObject> создается и в ней будут храниться компонента. Затем выполняется проверка того, существует ли данные в соответствующий тип в <xref:System.Windows.Forms.DataObject>. Результат отображается в текстовом поле. Этот код требует `textBox1` будет создана.  
  
 [!code-cpp[Classic DataObject Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject Example/VB/source.vb#1)]  
  
 Следующий пример извлекает данные, хранящиеся в <xref:System.Windows.Forms.DataObject>. Во-первых, новый <xref:System.Windows.Forms.DataObject> создается с текстовыми данными. Затем данные извлекаются, указанием формата в виде строки и отображается в текстовом поле. Формат данных автоматически преобразуется из текста в строку. Этот код требует `textBox1` будет создана.  
  
 [!code-cpp[Classic DataObject Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject Example/CPP/source.cpp#2)]
 [!code-csharp[Classic DataObject Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject Example/CS/source.cs#2)]
 [!code-vb[Classic DataObject Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject Example/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Clipboard" />
    <altmember cref="T:System.Windows.Forms.IDataObject" />
    <altmember cref="T:System.Windows.Forms.DataFormats" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.DataObject" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.DataObject" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода создается <xref:System.Windows.Forms.DataObject> и добавляет в него данные. Затем извлекает и отображает данные. Этот код требует `textBox1` будет создана.  
  
 [!code-cpp[Classic DataObject.DataObject2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.DataObject2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.DataObject2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.DataObject2 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.DataObject2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.DataObject2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataObject : obj -&gt; System.Windows.Forms.DataObject" Usage="new System.Windows.Forms.DataObject data" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Сохраняемые данные.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.DataObject" /> класса и добавляет указанный объект к нему.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вы можете добавить данные в любом формате на <xref:System.Windows.Forms.DataObject> при использовании этого конструктора, или можно добавить данные в виде <xref:System.Windows.Forms.IDataObject> для предоставления различных форматах за один раз. Если вы знакомы с программированием для COM, можно также добавить объект данных, который реализует COM `IDataObject` интерфейс. Дополнительные сведения см. в разделе `IDataObject` в библиотеке MSDN по адресу http://msdn.microsoft.com/library.  
  
   
  
## Examples  
 В следующем примере кода создается <xref:System.Windows.Forms.DataObject> , содержащего строку. Данные извлекаются с помощью формата данных. Результаты отображаются в текстовом поле. Этот код требует `textBox1` будет создана.  
  
 [!code-cpp[Classic DataObject.DataObject3 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.DataObject3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.DataObject3 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.DataObject3 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.DataObject3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.DataObject3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=150123">IDataObject</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject(System::String ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataObject : string * obj -&gt; System.Windows.Forms.DataObject" Usage="new System.Windows.Forms.DataObject (format, data)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Формат указанных данных. См. в разделе <see cref="T:System.Windows.Forms.DataFormats" /> о предварительно определенных форматах.</param>
        <param name="data">Сохраняемые данные.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.DataObject" /> класса и добавляет указанный объект в указанном формате.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода создается <xref:System.Windows.Forms.DataObject> с помощью строки, который указан как тип string. Данные извлекаются из <xref:System.Windows.Forms.DataObject> , указав его формат как текст. Результаты отображаются в текстовом поле. Этот код требует `textBox1` будет создана.  
  
 [!code-cpp[Classic DataObject.DataObject4 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.DataObject4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.DataObject4 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.DataObject4 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.DataObject4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.DataObject4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsAudio">
      <MemberSignature Language="C#" Value="public virtual bool ContainsAudio ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsAudio() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsAudio" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsAudio () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsAudio();" />
      <MemberSignature Language="F#" Value="abstract member ContainsAudio : unit -&gt; bool&#xA;override this.ContainsAudio : unit -&gt; bool" Usage="dataObject.ContainsAudio " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Указывает, содержит ли объект данных данные в <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> формате.</summary>
        <returns><see langword="true" /> Если объект данных содержит аудиозаписи в противном случае <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод позволяет определить, содержит ли объект данных звуковых данных перед его с возвращением <xref:System.Windows.Forms.DataObject.GetAudioStream%2A> метод.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetAudio" />
      </Docs>
    </Member>
    <Member MemberName="ContainsFileDropList">
      <MemberSignature Language="C#" Value="public virtual bool ContainsFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsFileDropList () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsFileDropList();" />
      <MemberSignature Language="F#" Value="abstract member ContainsFileDropList : unit -&gt; bool&#xA;override this.ContainsFileDropList : unit -&gt; bool" Usage="dataObject.ContainsFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Указывает, содержит ли объект данные, содержащиеся в <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> форматирования или могут быть преобразованы в этот формат.</summary>
        <returns><see langword="true" /> Если объект данных содержит раскрывающийся список файлов; в противном случае <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Раскрывающийся список файлов — это коллекция строк, содержащих сведения о пути для файлов.  
  
 Этот метод позволяет определить, содержит ли объект данных раскрывающийся список файлов перед его с возвращением <xref:System.Windows.Forms.DataObject.GetFileDropList%2A> метод.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFileDropList" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsImage">
      <MemberSignature Language="C#" Value="public virtual bool ContainsImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsImage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsImage () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsImage();" />
      <MemberSignature Language="F#" Value="abstract member ContainsImage : unit -&gt; bool&#xA;override this.ContainsImage : unit -&gt; bool" Usage="dataObject.ContainsImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Указывает, содержит ли объект данные, содержащиеся в <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> форматирования или могут быть преобразованы в этот формат.</summary>
        <returns><see langword="true" /> Если объект данных содержит графические данные; в противном случае <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод позволяет определить, содержит ли объект данных данные изображения перед его с возвращением <xref:System.Windows.Forms.DataObject.GetImage%2A> метод.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetImage" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ContainsText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Указывает, содержит ли объект текстовые данные.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public virtual bool ContainsText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsText () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsText();" />
      <MemberSignature Language="F#" Value="abstract member ContainsText : unit -&gt; bool&#xA;override this.ContainsText : unit -&gt; bool" Usage="dataObject.ContainsText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Указывает, содержит ли объект данных данные в <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> формате.</summary>
        <returns><see langword="true" /> Если объект данных содержит текстовые данные; в противном случае <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод позволяет определить, содержит ли объект данных текстовые данные, прежде чем получить его с <xref:System.Windows.Forms.DataObject.GetText%2A> метод.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public virtual bool ContainsText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsText (format As TextDataFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="abstract member ContainsText : System.Windows.Forms.TextDataFormat -&gt; bool&#xA;override this.ContainsText : System.Windows.Forms.TextDataFormat -&gt; bool" Usage="dataObject.ContainsText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format">Одно из значений перечисления <see cref="T:System.Windows.Forms.TextDataFormat" />.</param>
        <summary>Указывает, содержит ли объект данных текстовые данные в формате, указываемом заданным <see cref="T:System.Windows.Forms.TextDataFormat" /> значение.</summary>
        <returns><see langword="true" /> Если объект данных содержит текстовые данные в указанном формате; в противном случае <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод позволяет определить, содержит ли объект данных текстовые данные, прежде чем получить его с <xref:System.Windows.Forms.DataObject.GetText%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="format" /> не является допустимым значением <see cref="T:System.Windows.Forms.TextDataFormat" />.</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetAudioStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetAudioStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetAudioStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetAudioStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAudioStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetAudioStream();" />
      <MemberSignature Language="F#" Value="abstract member GetAudioStream : unit -&gt; System.IO.Stream&#xA;override this.GetAudioStream : unit -&gt; System.IO.Stream" Usage="dataObject.GetAudioStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает аудиопоток из объекта данных.</summary>
        <returns>Объект <see cref="T:System.IO.Stream" /> содержащий аудиозаписи или <see langword="null" /> Если объект данных не содержит никаких данных в <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> формате.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Windows.Forms.DataObject.ContainsAudio%2A> метод, чтобы определить, содержит ли объект данных звуковых данных перед его возвращением с помощью этого метода.  
  
 Используйте <xref:System.Windows.Forms.DataObject.SetAudio%2A> метод для добавления звуковых данных в объекте данных.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetAudio" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает данные, связанные с заданным форматом.</summary>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public virtual object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string -&gt; obj&#xA;override this.GetData : string -&gt; obj" Usage="dataObject.GetData format" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetData(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Формат извлекаемых данных. См. в разделе <see cref="T:System.Windows.Forms.DataFormats" /> о предварительно определенных форматах.</param>
        <summary>Возвращает данные, связанные с заданным форматом.</summary>
        <returns>Данные, связанные с указанным форматом или <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если этот метод не удается найти данные в указанном формате, он предпринимает попытку преобразования данных в формате. Если данные невозможно преобразовать в указанный формат, или при сохранении данных с автоматическим преобразованием, равным `false`, этот метод возвращает `null`.  
  
 Чтобы определить, связан с данных, или может быть преобразован в формат, вызовите <xref:System.Windows.Forms.DataObject.GetDataPresent%2A> перед вызовом <xref:System.Windows.Forms.DataObject.GetData%2A>. Вызовите <xref:System.Windows.Forms.DataObject.GetFormats%2A> список допустимых форматов для данных, хранящихся в этом <xref:System.Windows.Forms.DataObject>.  
  
> [!NOTE]
>  Данные могут преобразовываться в другой формат, если он был сохранен, указав, что преобразование разрешено, и в том случае, если запрошенный формат совместим с форматом данных. Например данные, хранящиеся в виде Юникода могут быть преобразованы в текст.  
>   
>  Когда `format` является <xref:System.Windows.Forms.DataFormats.Html>, этот метод возвращает строку в кодировке UTF-8 в приложениях, предназначенных для .NET 4.5 или более поздней и ANSI в кодировке в приложениях, ориентированных на .NET 4.0 или ниже.  
  
   
  
## Examples  
 В следующем примере кода извлекает данные, хранящиеся в <xref:System.Windows.Forms.DataObject>. Во-первых, новый <xref:System.Windows.Forms.DataObject> создается с текстовыми данными. Затем данные извлекаются, указанием формата в виде строки и отображается в текстовом поле.  
  
 Этот код требует `textBox1` будет создана.  
  
 [!code-cpp[classic dataobject example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject Example/CPP/source.cpp#1)]
 [!code-csharp[classic dataobject example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject Example/CS/source.cs#1)]
 [!code-vb[classic dataobject example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public virtual object GetData (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetData(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetData (format As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(Type ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetData : Type -&gt; obj&#xA;override this.GetData : Type -&gt; obj" Usage="dataObject.GetData format" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetData(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">Объект <see cref="T:System.Type" /> представляющий формат извлекаемых данных.</param>
        <summary>Возвращает данные, связанные с заданным форматом типа класса.</summary>
        <returns>Данные, связанные с указанным форматом или <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если этот метод не удается найти данные в указанном формате, он предпринимает попытку преобразования данных в формате. Если данные невозможно преобразовать в указанный формат, или при сохранении данных с автоматическим преобразованием, равным `false`, этот метод возвращает `null`.  
  
 Чтобы определить, связан с данных, или может быть преобразован в формат, вызовите <xref:System.Windows.Forms.DataObject.GetDataPresent%2A> перед вызовом <xref:System.Windows.Forms.DataObject.GetData%2A>. Вызовите <xref:System.Windows.Forms.DataObject.GetFormats%2A> список допустимых форматов для данных, хранящихся в этом <xref:System.Windows.Forms.DataObject>.  
  
> [!NOTE]
>  Данные могут преобразовываться в другой формат, если он был сохранен, указав, что преобразование разрешено, и в том случае, если запрошенный формат совместим с форматом данных. Например данные, хранящиеся в виде Юникода могут быть преобразованы в текст.  
  
   
  
## Examples  
 В следующем примере кода извлекает данные, хранящиеся в <xref:System.Windows.Forms.DataObject>. Во-первых, новый <xref:System.Windows.Forms.DataObject> создается с компонентом. Затем извлекаются данные, указывая его тип. Тип полученных данных отображается в текстовом поле.  
  
 Этот код требует `textBox1` будет создана.  
  
 [!code-cpp[Classic DataObject.GetData2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetData2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetData2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetData2 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetData2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetData2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public virtual object GetData (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetData (format As String, autoConvert As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(System::String ^ format, bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string * bool -&gt; obj&#xA;override this.GetData : string * bool -&gt; obj" Usage="dataObject.GetData (format, autoConvert)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">Формат извлекаемых данных. См. в разделе <see cref="T:System.Windows.Forms.DataFormats" /> о предварительно определенных форматах.</param>
        <param name="autoConvert"><see langword="true" /> данные необходимо преобразовать в указанный формат; в противном случае <see langword="false" />.</param>
        <summary>Возвращает данные, связанные с указанным форматом, используя параметр автоматического преобразования, чтобы определить необходимость преобразования данных в этот формат.</summary>
        <returns>Данные, связанные с указанным форматом или <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `autoConvert` параметр `true` и этот метод не удается найти данные в указанном формате, он предпринимает попытку преобразования данных в формат. Если данные невозможно преобразовать в указанный формат, или при сохранении данных с автоматическим преобразованием, равным `false`, этот метод возвращает `null`.  
  
 Если `autoConvert` параметр `false`, этот метод возвращает данные в указанном формате, или `null` Если невозможно найти данные в этом формате.  
  
 Чтобы определить, связан с данных, или может быть преобразован в формат, вызовите <xref:System.Windows.Forms.DataObject.GetDataPresent%2A> перед вызовом <xref:System.Windows.Forms.DataObject.GetData%2A>. Вызовите <xref:System.Windows.Forms.DataObject.GetFormats%2A> список допустимых форматов для данных, хранящихся в этом <xref:System.Windows.Forms.DataObject>.  
  
> [!NOTE]
>  Данные могут преобразовываться в другой формат, если он был сохранен, указав, что преобразование разрешено, и в том случае, если запрошенный формат совместим с форматом данных. Например данные, хранящиеся в виде Юникода могут быть преобразованы в текст.  
>   
>  Когда `format` является <xref:System.Windows.Forms.DataFormats.Html>, этот метод возвращает строку в кодировке UTF-8 в приложениях, предназначенных для .NET 4.5 или более поздней и ANSI в кодировке в приложениях, ориентированных на .NET 4.0 или ниже.  
  
   
  
## Examples  
 В следующем примере кода извлекает данные, хранящиеся в <xref:System.Windows.Forms.DataObject>, с использованием `autoConvert` параметр для указания возможности преобразования формата данных.  
  
 Во-первых, новый <xref:System.Windows.Forms.DataObject> создается с текстовыми данными. Затем в примере предпринимается попытка получения данных, указанием формата в виде строки, а не преобразование формата, то есть `autoConvert` параметр `false`. Эта операция завершается ошибкой, так как нет данных строки в <xref:System.Windows.Forms.DataObject>.  
  
 Затем в примере предпринимается попытка получить данные, с помощью `autoConvert` параметру присвоить `true`. Эта операция выполняется успешно, а результаты отображаются в <xref:System.Windows.Forms.MessageBox>.  
  
 Этот код требует `textBox1` будет создана.  
  
 [!code-cpp[Classic DataObject.GetData Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetData Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetData Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetData Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetData Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataPresent">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Определяет, хранятся ли данные в этом <see cref="T:System.Windows.Forms.DataObject" /> связан с указанным форматом.</summary>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public virtual bool GetDataPresent (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetDataPresent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataPresent (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetDataPresent(System::String ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : string -&gt; bool&#xA;override this.GetDataPresent : string -&gt; bool" Usage="dataObject.GetDataPresent format" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Проверяемый формат. См. в разделе <see cref="T:System.Windows.Forms.DataFormats" /> о предварительно определенных форматах.</param>
        <summary>Определяет, хранятся ли данные в этом <see cref="T:System.Windows.Forms.DataObject" /> связан, или могут быть преобразованы в указанный формат.</summary>
        <returns><see langword="true" /> Если данные хранятся в этом <see cref="T:System.Windows.Forms.DataObject" /> связан, или могут быть преобразованы в указанный формат; в противном случае <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите этот метод, чтобы определить, существует ли формат перед вызовом <xref:System.Windows.Forms.DataObject.GetData%2A>. Вызовите <xref:System.Windows.Forms.DataObject.GetFormats%2A> для форматов, доступных в этом <xref:System.Windows.Forms.DataObject>.  
  
> [!NOTE]
>  Данные могут преобразовываться в другой формат, если он был сохранен, указав, что преобразование разрешено, и в том случае, если запрошенный формат совместим с форматом данных. Например данные, хранящиеся в виде Юникода могут быть преобразованы в текст.  
  
> [!NOTE]
>  Если не удается извлечь данные, не исключение. Вместо этого `false` будут возвращены.  
  
   
  
## Examples  
 В следующем примере кода определяет ли в настоящее время хранящиеся в данном <xref:System.Windows.Forms.DataObject> связан, или могут быть преобразованы в указанный формат. Новый <xref:System.Windows.Forms.DataObject> инициализируется со строкой и связанного формата как текст.  
  
 Затем в примере печатаются ли текстовые данные существует в <xref:System.Windows.Forms.DataObject>. Этот код требует `textBox1` будет создана.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public virtual bool GetDataPresent (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataPresent (format As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetDataPresent(Type ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : Type -&gt; bool&#xA;override this.GetDataPresent : Type -&gt; bool" Usage="dataObject.GetDataPresent format" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">Объект <see cref="T:System.Type" /> представляющий проверяемый формат.</param>
        <summary>Определяет, хранятся ли данные в этом <see cref="T:System.Windows.Forms.DataObject" /> связан, или могут быть преобразованы в указанный формат.</summary>
        <returns><see langword="true" /> Если данные хранятся в этом <see cref="T:System.Windows.Forms.DataObject" /> связан, или могут быть преобразованы в указанный формат; в противном случае <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите этот метод, чтобы определить, существует ли формат перед вызовом <xref:System.Windows.Forms.DataObject.GetData%2A>. Вызовите <xref:System.Windows.Forms.DataObject.GetFormats%2A> для форматов, доступных в этом <xref:System.Windows.Forms.DataObject>.  
  
> [!NOTE]
>  Данные могут преобразовываться в другой формат, если он был сохранен, указав, что преобразование разрешено, и в том случае, если запрошенный формат совместим с форматом данных. Например данные, хранящиеся в виде Юникода могут быть преобразованы в текст.  
  
> [!NOTE]
>  Если не удается извлечь данные, не исключение. Вместо этого `false` будут возвращены.  
  
   
  
## Examples  
 В следующем примере кода определяет, существует ли в данных указанного типа <xref:System.Windows.Forms.DataObject>, или могут быть преобразованы данные в указанный тип. Результат отображается в текстовом поле. Для кода требуется, `textBox1` будет создана.  
  
 [!code-cpp[Classic DataObject.GetDataPresent Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetDataPresent Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetDataPresent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetDataPresent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public virtual bool GetDataPresent (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetDataPresent(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataPresent (format As String, autoConvert As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetDataPresent(System::String ^ format, bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : string * bool -&gt; bool&#xA;override this.GetDataPresent : string * bool -&gt; bool" Usage="dataObject.GetDataPresent (format, autoConvert)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">Проверяемый формат. См. в разделе <see cref="T:System.Windows.Forms.DataFormats" /> о предварительно определенных форматах.</param>
        <param name="autoConvert"><see langword="true" /> для определения данных, хранимых в данном <see cref="T:System.Windows.Forms.DataObject" /> можно преобразовать в указанный формат; <see langword="false" /> для проверки, являются ли данные в указанном формате.</param>
        <summary>Определяет, является ли это <see cref="T:System.Windows.Forms.DataObject" /> содержит данные в указанном формате, или, при необходимости, содержащий данные, которые можно преобразовать в указанный формат.</summary>
        <returns><see langword="true" /> Если данные в, или могут быть преобразованы в указанный формат; в противном случае <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите этот метод, чтобы определить, существует ли формат перед вызовом <xref:System.Windows.Forms.DataObject.GetData%2A>. Вызовите <xref:System.Windows.Forms.DataObject.GetFormats%2A> для форматов, доступных в этом <xref:System.Windows.Forms.DataObject>.  
  
 Этот метод возвращает `true` при:  
  
-   `autoConvert` Параметр `true` , и данные в формате, который можно преобразовать в соответствующий формат.  
  
-   `autoConvert` Параметр `false` , и данные в соответствующем формате.  
  
 Этот метод возвращает `false` при:  
  
-   `autoConvert` Параметр `true` этот метод не удается найти данные в указанном формате и не может преобразовать их в указанный формат и способа хранения данных с автоматическим преобразованием, равным `false`.  
  
-   `autoConvert` Параметр `false` и данных не существует в этом <xref:System.Windows.Forms.DataObject> в указанном формате.  
  
> [!NOTE]
>  Данные могут быть преобразованы в другой формат, если это было хранимых указав, что преобразование разрешено, и если запрошенный формат совместим с форматом данных. Например данные, хранящиеся в виде Юникода могут быть преобразованы в текст.  
  
> [!NOTE]
>  Если не удается извлечь данные, не исключение. Вместо этого `false` будут возвращены.  
  
   
  
## Examples  
 В следующем примере кода определяет, хранятся ли данные в настоящее время в <xref:System.Windows.Forms.DataObject> связан в указанном формате. Во-первых, новый <xref:System.Windows.Forms.DataObject> инициализируется со строкой, указанием формата как текст.  
  
 Затем <xref:System.Windows.Forms.DataObject> запрашиваются данные, связанные с форматом текста, указав `autoConvert` параметра в виде `false`. Результат этого запроса печатается в текстовом поле.  
  
 Затем <xref:System.Windows.Forms.DataObject> запрашиваются данные, связанные с форматом строки, указав `autoConvert` параметра в виде `true`. Результаты выводятся в текстовом поле. Этот код требует `textBox1` будет создана.  
  
 [!code-cpp[Classic DataObject.GetDataPresent1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetDataPresent1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetDataPresent1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetDataPresent1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetFileDropList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection GetFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.StringCollection GetFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileDropList () As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::StringCollection ^ GetFileDropList();" />
      <MemberSignature Language="F#" Value="abstract member GetFileDropList : unit -&gt; System.Collections.Specialized.StringCollection&#xA;override this.GetFileDropList : unit -&gt; System.Collections.Specialized.StringCollection" Usage="dataObject.GetFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает из объекта данных коллекцию имен файлов.</summary>
        <returns>Объект <see cref="T:System.Collections.Specialized.StringCollection" /> содержащая имена файлов или <see langword="null" /> Если объект данных не содержит никаких данных в <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> форматирования или могут быть преобразованы в этот формат.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Раскрывающийся список файлов — это коллекция строк, содержащих сведения о пути для файлов.  
  
 Раскрывающийся список файлов хранится в объекте данных, как <xref:System.String> массива. Этот метод преобразует этот массив для <xref:System.Collections.Specialized.StringCollection> и возвращает коллекцию.  
  
 Используйте <xref:System.Windows.Forms.DataObject.ContainsFileDropList%2A> метод, чтобы определить, является ли объект данных содержит раскрывающийся список файлов перед его возвращением с помощью этого метода.  
  
 Используйте <xref:System.Windows.Forms.DataObject.SetFileDropList%2A> метод, чтобы добавить раскрывающийся список файлов в объект данных.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.StringCollection" />
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFormats">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает список всех форматов, данные, хранящиеся в этом <see cref="T:System.Windows.Forms.DataObject" /> связаны с или может быть преобразован в.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public virtual string[] GetFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetFormats" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFormats () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetFormats();" />
      <MemberSignature Language="F#" Value="abstract member GetFormats : unit -&gt; string[]&#xA;override this.GetFormats : unit -&gt; string[]" Usage="dataObject.GetFormats " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetFormats</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает список всех форматов, данные, хранящиеся в этом <see cref="T:System.Windows.Forms.DataObject" /> связаны с или может быть преобразован в.</summary>
        <returns>Массив объектов типа <see cref="T:System.String" />, содержащий список всех форматов, поддерживаемых данные, хранящиеся в этом объекте.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите этот метод, чтобы получить поддерживаемые форматы данных перед вызовом <xref:System.Windows.Forms.DataObject.GetData%2A>. См. в разделе <xref:System.Windows.Forms.DataFormats> о предварительно определенных форматах.  
  
> [!NOTE]
>  Данные могут быть преобразованы в другой формат, если это было хранимых указав, что преобразование разрешено, и если запрошенный формат совместим с форматом данных. Например данные, хранящиеся в виде Юникода могут быть преобразованы в текст.  
  
   
  
## Examples  
 В следующем примере кода примеры запросов <xref:System.Windows.Forms.DataObject> для форматов, связанные с данными и форматы, которые могут быть преобразованы данные. Полученный список отображается в текстовом поле. Этот код требует `textBox1` будет создана.  
  
 [!code-cpp[Classic DataObject.GetFormats1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetFormats1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetFormats1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetFormats1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetFormats1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetFormats1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public virtual string[] GetFormats (bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats(bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFormats (autoConvert As Boolean) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetFormats(bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetFormats : bool -&gt; string[]&#xA;override this.GetFormats : bool -&gt; string[]" Usage="dataObject.GetFormats autoConvert" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoConvert"><see langword="true" /> Чтобы извлечь все форматы данные, хранящиеся в этом <see cref="T:System.Windows.Forms.DataObject" /> связаны с или могут быть преобразованы. <see langword="false" /> чтобы извлечь только собственные форматы данных.</param>
        <summary>Возвращает список всех форматов, данные, хранящиеся в этом <see cref="T:System.Windows.Forms.DataObject" /> связаны с или могут быть преобразованы, используя параметр автоматического преобразования для определения необходимости извлечения только собственных форматов данных или всех форматов, которые могут быть преобразованы данные.</summary>
        <returns>Массив объектов типа <see cref="T:System.String" />, содержащий список всех форматов, поддерживаемых данные, хранящиеся в этом объекте.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите этот метод, чтобы получить поддерживаемые форматы данных перед вызовом <xref:System.Windows.Forms.DataObject.GetData%2A>. См. в разделе <xref:System.Windows.Forms.DataFormats> о предварительно определенных форматах.  
  
> [!NOTE]
>  Данные могут быть преобразованы в другой формат, если это было хранимых указав, что преобразование разрешено, и если запрошенный формат совместим с форматом данных. Например данные, хранящиеся в виде Юникода могут быть преобразованы в текст.  
  
   
  
## Examples  
 В следующем примере кода примеры запросов <xref:System.Windows.Forms.DataObject> для форматов, связанные с данными. Указывает первый запрос `autoConvert` параметра в виде `false`, только собственный формат данных возвращается. Указывает второй запрос `autoConvert` параметра в виде `true`, поэтому список форматов поддерживает форматы, которые могут быть преобразованы данные.  
  
 Этот код требует `textBox1` будет создана.  
  
 [!code-cpp[Classic DataObject.GetFormats Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetFormats Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetFormats Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetFormats Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetFormats Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetFormats Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Image GetImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Drawing.Image GetImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetImage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetImage () As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Image ^ GetImage();" />
      <MemberSignature Language="F#" Value="abstract member GetImage : unit -&gt; System.Drawing.Image&#xA;override this.GetImage : unit -&gt; System.Drawing.Image" Usage="dataObject.GetImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает изображение из объекта данных.</summary>
        <returns><see cref="T:System.Drawing.Image" /> Представляющий графические данные в объекте данных или <see langword="null" /> Если объект данных не содержит никаких данных в <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> форматирования или могут быть преобразованы в этот формат.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Windows.Forms.DataObject.ContainsImage%2A> метод, чтобы определить, является ли объект данных содержит данные изображения перед его возвращением с помощью этого метода.  
  
 Используйте <xref:System.Windows.Forms.DataObject.SetImage%2A> метод для добавления данных изображения в объекте данных.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Извлекает текстовые данные из объекта данных.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public virtual string GetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetText();" />
      <MemberSignature Language="F#" Value="abstract member GetText : unit -&gt; string&#xA;override this.GetText : unit -&gt; string" Usage="dataObject.GetText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает текстовые данные из объекта данных в <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> формате.</summary>
        <returns>Текстовые данные в объекте данных или <see cref="F:System.String.Empty" /> Если объект данных не содержит данных в <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> формате.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Windows.Forms.DataObject.ContainsText%2A> метод, чтобы определить, содержит ли объект данных текстовые данные перед его возвращением с помощью этого метода.  
  
 Используйте <xref:System.Windows.Forms.DataObject.SetText%2A> метод для добавления в объект данных текстовые данные.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public virtual string GetText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetText (format As TextDataFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="abstract member GetText : System.Windows.Forms.TextDataFormat -&gt; string&#xA;override this.GetText : System.Windows.Forms.TextDataFormat -&gt; string" Usage="dataObject.GetText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format">Одно из значений перечисления <see cref="T:System.Windows.Forms.TextDataFormat" />.</param>
        <summary>Извлекает текстовые данные из объекта данных в формате, указываемом заданным <see cref="T:System.Windows.Forms.TextDataFormat" /> значение.</summary>
        <returns>Текстовые данные в объекте данных или <see cref="F:System.String.Empty" /> Если объект данных не содержит данных в указанном формате.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Windows.Forms.DataObject.ContainsText%2A> метод, чтобы определить, содержит ли объект данных текстовые данные перед его возвращением с помощью этого метода.  
  
 Используйте <xref:System.Windows.Forms.DataObject.SetText%2A> метод для добавления в объект данных текстовые данные.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="format" /> не является допустимым значением <see cref="T:System.Windows.Forms.TextDataFormat" />.</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAudio">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет данные в объект данных в <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> формате.</summary>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public virtual void SetAudio (byte[] audioBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudio(unsigned int8[] audioBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetAudio(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAudio (audioBytes As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAudio(cli::array &lt;System::Byte&gt; ^ audioBytes);" />
      <MemberSignature Language="F#" Value="abstract member SetAudio : byte[] -&gt; unit&#xA;override this.SetAudio : byte[] -&gt; unit" Usage="dataObject.SetAudio audioBytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBytes" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="audioBytes">Объект <see cref="T:System.Byte" /> массив, содержащий аудиозаписи.</param>
        <summary>Добавляет <see cref="T:System.Byte" /> объект данных в массив <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> формат после его преобразования <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для получения звуковых данных из объекта данных, сначала используйте <xref:System.Windows.Forms.DataObject.ContainsAudio%2A> метод, чтобы определить, содержит ли объект данных звуковых данных перед его с возвращением <xref:System.Windows.Forms.DataObject.GetAudioStream%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="audioBytes" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
      </Docs>
    </Member>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public virtual void SetAudio (System.IO.Stream audioStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudio(class System.IO.Stream audioStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetAudio(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAudio (audioStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAudio(System::IO::Stream ^ audioStream);" />
      <MemberSignature Language="F#" Value="abstract member SetAudio : System.IO.Stream -&gt; unit&#xA;override this.SetAudio : System.IO.Stream -&gt; unit" Usage="dataObject.SetAudio audioStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="audioStream">Объект <see cref="T:System.IO.Stream" /> содержащий аудиозаписи.</param>
        <summary>Добавляет <see cref="T:System.IO.Stream" /> объект данных в <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> формате.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для получения звуковых данных из объекта данных, сначала используйте <xref:System.Windows.Forms.DataObject.ContainsAudio%2A> метод, чтобы определить, содержит ли объект данных звуковых данных перед его с возвращением <xref:System.Windows.Forms.DataObject.GetAudioStream%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="audioStream" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет объект в <see cref="T:System.Windows.Forms.DataObject" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : obj -&gt; unit&#xA;override this.SetData : obj -&gt; unit" Usage="dataObject.SetData data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Сохраняемые данные.</param>
        <summary>Добавляет указанный объект в <see cref="T:System.Windows.Forms.DataObject" /> используя тип объекта в качестве формата данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 Если вы не знаете формат целевого приложения, данные можно хранить в нескольких форматах, с помощью этого метода. Хранить данные с помощью этого метода могут преобразовываться в совместимый формат при извлечении.  
  
 <xref:System.Windows.Forms.DataObject.SetData%28System.Object%29> Перегружать хранилищ `data` значение в формате, который определяет, путем вызова <xref:System.Object.GetType%2A?displayProperty=nameWithType> метод. Если `data` реализует <xref:System.Runtime.Serialization.ISerializable> интерфейс, данная перегрузка также сохраняет значение в <xref:System.Windows.DataFormats.Serializable> формате.  
  
   
  
## Examples  
 В следующем примере кода сохраняет данные в <xref:System.Windows.Forms.DataObject>. Во-первых, новый <xref:System.Windows.Forms.DataObject> создается и в ней будут храниться компонента. Затем данные извлекаются путем указания класса. Результат отображается в текстовом поле.  
  
 Этот код требует `textBox1` будет создана.  
  
 [!code-cpp[Classic DataObject.SetData3 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData3 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData3 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="N:System.Runtime.Serialization" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : string * obj -&gt; unit&#xA;override this.SetData : string * obj -&gt; unit" Usage="dataObject.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Формат, связанный с данными. См. в разделе <see cref="T:System.Windows.Forms.DataFormats" /> о предварительно определенных форматах.</param>
        <param name="data">Сохраняемые данные.</param>
        <summary>Добавляет указанный объект в <see cref="T:System.Windows.Forms.DataObject" /> в заданном формате.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 Если вы не знаете формат целевого приложения, данные можно хранить в нескольких форматах, с помощью этого метода.  
  
 Хранить данные с помощью этого метода могут преобразовываться в совместимый формат при извлечении.  
  
   
  
## Examples  
 В следующем примере кода сохраняет данные в <xref:System.Windows.Forms.DataObject>, указанием формата в кодировке Юникод.  
  
 Затем данные извлекаются путем указания текстовый формат, так как по умолчанию используется для преобразования данных, когда окончательный формат совместим. Результат отображается в текстовом поле.  
  
 Этот код требует `textBox1` будет создана.  
  
 [!code-cpp[Classic DataObject.SetData1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (Type format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(class System.Type format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (format As Type, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(Type ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : Type * obj -&gt; unit&#xA;override this.SetData : Type * obj -&gt; unit" Usage="dataObject.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Объект <see cref="T:System.Type" /> представляющий формат, связанный с данными.</param>
        <param name="data">Сохраняемые данные.</param>
        <summary>Добавляет указанный объект в <see cref="T:System.Windows.Forms.DataObject" /> с помощью указанного типа в качестве формата.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 Если вы не знаете формат целевого приложения, данные можно хранить в нескольких форматах, с помощью этого метода.  
  
 Хранить данные с помощью этого метода могут преобразовываться в совместимый формат при извлечении.  
  
   
  
## Examples  
 В следующем примере кода сохраняет данные в <xref:System.Windows.Forms.DataObject> с помощью <xref:System.Type> как формат данных. Затем данные извлекаются путем вызова <xref:System.Windows.Forms.DataObject.GetData%2A> с помощью <xref:System.Type> указать формат данных. Результат отображается в текстовом поле.  
  
 Этот код требует `textBox1` будет создана.  
  
 [!code-cpp[Classic DataObject.SetData2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData2 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (string format, bool autoConvert, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, bool autoConvert, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (format As String, autoConvert As Boolean, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::String ^ format, bool autoConvert, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : string * bool * obj -&gt; unit&#xA;override this.SetData : string * bool * obj -&gt; unit" Usage="dataObject.SetData (format, autoConvert, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Формат, связанный с данными. См. в разделе <see cref="T:System.Windows.Forms.DataFormats" /> о предварительно определенных форматах.</param>
        <param name="autoConvert"><see langword="true" /> Чтобы данные для преобразования в другой формат; в противном случае <see langword="false" />.</param>
        <param name="data">Сохраняемые данные.</param>
        <summary>Добавляет указанный объект в <see cref="T:System.Windows.Forms.DataObject" /> с указанным форматом и, указывающее, является ли данные могут быть преобразованы в другой формат.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 Если вы не знаете формат целевого приложения, данные можно хранить в нескольких форматах, с помощью этого метода.  
  
   
  
## Examples  
 В следующем примере кода сохраняет данные в <xref:System.Windows.Forms.DataObject> и указывает, что данные можно извлечь только в его собственном формате.  
  
 Во-первых, новый <xref:System.Windows.Forms.DataObject> создается. Данные в формате Юникод, хранятся в <xref:System.Windows.Forms.DataObject>, с помощью `autoConvert` присвоено `false`.  
  
 Затем <xref:System.Windows.Forms.DataObject> запрашивается список доступных форматов данных. Возвращается только в формате Юникод, несмотря на то, что данные Юникода, которые могут быть преобразованы в текст и другие форматы.  
  
 Этот код требует `textBox1` будет создана.  
  
 [!code-cpp[Classic DataObject.SetData Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="SetFileDropList">
      <MemberSignature Language="C#" Value="public virtual void SetFileDropList (System.Collections.Specialized.StringCollection filePaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFileDropList(class System.Collections.Specialized.StringCollection filePaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetFileDropList (filePaths As StringCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetFileDropList(System::Collections::Specialized::StringCollection ^ filePaths);" />
      <MemberSignature Language="F#" Value="abstract member SetFileDropList : System.Collections.Specialized.StringCollection -&gt; unit&#xA;override this.SetFileDropList : System.Collections.Specialized.StringCollection -&gt; unit" Usage="dataObject.SetFileDropList filePaths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePaths" Type="System.Collections.Specialized.StringCollection" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="filePaths">Объект <see cref="T:System.Collections.Specialized.StringCollection" /> содержащая имена файлов.</param>
        <summary>Добавляет коллекцию имен файлов в объект данных в <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> формате.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Раскрывающийся список файлов — это коллекция строк, содержащих сведения о пути для файлов.  
  
 Раскрывающийся список файлов хранится в объекте данных, как <xref:System.String> массива. Этот метод преобразует `filePaths` для <xref:System.String> массива перед добавлением его в объект данных.  
  
 Чтобы получить раскрывающийся список файлов из объекта данных, сначала используйте <xref:System.Windows.Forms.DataObject.ContainsFileDropList%2A> метод, чтобы определить, содержит ли объект данных в этом формате до извлечения его с <xref:System.Windows.Forms.DataObject.GetFileDropList%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="filePaths" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFileDropList" />
      </Docs>
    </Member>
    <Member MemberName="SetImage">
      <MemberSignature Language="C#" Value="public virtual void SetImage (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetImage(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetImage(System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetImage(System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="abstract member SetImage : System.Drawing.Image -&gt; unit&#xA;override this.SetImage : System.Drawing.Image -&gt; unit" Usage="dataObject.SetImage image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="image"><see cref="T:System.Drawing.Image" /> Для добавления в объект данных.</param>
        <summary>Добавляет <see cref="T:System.Drawing.Image" /> объект данных в <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> формате.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы получить данные изображения из объекта данных, сначала используйте <xref:System.Windows.Forms.DataObject.ContainsImage%2A> метод, чтобы определить, содержит ли объект данные изображения перед его с возвращением <xref:System.Windows.Forms.DataObject.GetImage%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="image" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetImage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет текст в объект данных.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public virtual void SetText (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetText(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetText (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetText(System::String ^ textData);" />
      <MemberSignature Language="F#" Value="abstract member SetText : string -&gt; unit&#xA;override this.SetText : string -&gt; unit" Usage="dataObject.SetText textData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="textData">Текст для добавления в объект данных.</param>
        <summary>Добавляет текст в объект данных в <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" /> формате.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы получить текстовые данные из объекта данных, сначала используйте <xref:System.Windows.Forms.DataObject.ContainsText%2A> метод, чтобы определить, содержит ли объект данные изображения перед его с возвращением <xref:System.Windows.Forms.DataObject.GetText%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="textData" /> имеет значение <see langword="null" /> или <see cref="F:System.String.Empty" />.</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public virtual void SetText (string textData, System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetText(string textData, valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetText(System.String,System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetText (textData As String, format As TextDataFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetText(System::String ^ textData, System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="abstract member SetText : string * System.Windows.Forms.TextDataFormat -&gt; unit&#xA;override this.SetText : string * System.Windows.Forms.TextDataFormat -&gt; unit" Usage="dataObject.SetText (textData, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="textData">Текст для добавления в объект данных.</param>
        <param name="format">Одно из значений перечисления <see cref="T:System.Windows.Forms.TextDataFormat" />.</param>
        <summary>Добавляет текст в объект данных в формате, указываемом заданным <see cref="T:System.Windows.Forms.TextDataFormat" /> значение.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы получить текстовые данные из объекта данных, сначала используйте <xref:System.Windows.Forms.DataObject.ContainsText%2A> метод, чтобы определить, содержит ли объект данные изображения перед его с возвращением <xref:System.Windows.Forms.DataObject.GetText%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="textData" /> имеет значение <see langword="null" /> или <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="format" /> не является допустимым значением <see cref="T:System.Windows.Forms.TextDataFormat" />.</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise">
      <MemberSignature Language="C#" Value="int IDataObject.DAdvise (ref System.Runtime.InteropServices.ComTypes.FORMATETC pFormatetc, System.Runtime.InteropServices.ComTypes.ADVF advf, System.Runtime.InteropServices.ComTypes.IAdviseSink pAdvSink, out int pdwConnection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pFormatetc, valuetype System.Runtime.InteropServices.ComTypes.ADVF advf, class System.Runtime.InteropServices.ComTypes.IAdviseSink pAdvSink, [out] int32&amp; pdwConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System::Runtime::InteropServices::ComTypes::FORMATETC % pFormatetc, System::Runtime::InteropServices::ComTypes::ADVF advf, System::Runtime::InteropServices::ComTypes::IAdviseSink ^ pAdvSink, [Runtime::InteropServices::Out] int % pdwConnection) = System::Runtime::InteropServices::ComTypes::IDataObject::DAdvise;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pFormatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="advf" Type="System.Runtime.InteropServices.ComTypes.ADVF" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="pAdvSink" Type="System.Runtime.InteropServices.ComTypes.IAdviseSink" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="pdwConnection" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="pFormatetc">Объект <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> структура, переданная ссылкой, которая определяет формат, целевое устройство, аспект и среду передачи, которые будут использоваться для будущих уведомлений.</param>
        <param name="advf">Один из <see cref="T:System.Runtime.InteropServices.ComTypes.ADVF" /> значения, задающее группу флагов для контролирования вспомогательного соединения.</param>
        <param name="pAdvSink">Указатель на <see cref="T:System.Runtime.InteropServices.ComTypes.IAdviseSink" /> интерфейс в приемнике уведомлений, который будет получать уведомления об изменениях.</param>
        <param name="pdwConnection">При возвращении данного метода содержит указатель на маркер DWORD, определяющий это соединение. Позднее этот токен можно использовать для удаления вспомогательного соединения, передав его в <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)" />. Если это значение равно нулю, соединение не было установлено. Этот параметр передается неинициализированным.</param>
        <summary>Создает соединение между объектом данных и приемником уведомлений. Этот метод вызывается объектом, который поддерживает приемник уведомлений и позволяет уведомлять приемник об изменениях в данных объекта.</summary>
        <returns>Этот метод поддерживает стандартные возвращаемые значения E_INVALIDARG, E_UNEXPECTED и E_OUTOFMEMORY, а также следующие. 
 <list type="table"><listheader><term> Значение 
 </term><description> Описание 
 </description></listheader><item><term> S_OK 
 </term><description> Было создано соединение для получения рекомендаций.  
  
 </description></item><item><term> E_NOTIMPL 
 </term><description> Этот метод не был реализован в объекте данных.  
  
 </description></item><item><term> DV_E_LINDEX 
 </term><description> Недопустимое значение для <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; в настоящий момент поддерживается только значение -1.  
  
 </description></item><item><term> DV_E_FORMATETC 
 </term><description> Недопустимое значение для <paramref name="pFormatetc" /> параметра.  
  
 </description></item><item><term> OLE_E_ADVISENOTSUPPORTED 
 </term><description> Объект данных не поддерживает уведомление об изменении.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только когда объект класса <xref:System.Windows.Forms.DataObject> приведен к типу интерфейса <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для вызова неуправляемого кода. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise">
      <MemberSignature Language="C#" Value="void IDataObject.DUnadvise (int dwConnection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(int32 dwConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DUnadvise(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub DUnadvise (dwConnection As Integer) Implements IDataObject.DUnadvise" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(int dwConnection) = System::Runtime::InteropServices::ComTypes::IDataObject::DUnadvise;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwConnection" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dwConnection">маркер DWORD, задающий соединение для удаления. Используйте значение, возвращенное <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" /> при первоначальной настройке соединения.</param>
        <summary>Разрывает соединение уведомления, которое было ранее установлено.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только когда объект класса <xref:System.Windows.Forms.DataObject> приведен к типу интерфейса <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для вызова неуправляемого кода. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise">
      <MemberSignature Language="C#" Value="int IDataObject.EnumDAdvise (out System.Runtime.InteropServices.ComTypes.IEnumSTATDATA enumAdvise);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise([out] class System.Runtime.InteropServices.ComTypes.IEnumSTATDATA&amp; enumAdvise) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumDAdvise(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)" />
      <MemberSignature Language="VB.NET" Value="Function EnumDAdvise (ByRef enumAdvise As IEnumSTATDATA) As Integer Implements IDataObject.EnumDAdvise" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise([Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::IEnumSTATDATA ^ % enumAdvise) = System::Runtime::InteropServices::ComTypes::IDataObject::EnumDAdvise;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumAdvise" Type="System.Runtime.InteropServices.ComTypes.IEnumSTATDATA" RefType="out" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="enumAdvise">При возвращении данного метода содержит <see cref="T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA" /> , получающий указатель интерфейса на новый объект перечислителя. Если при реализации <paramref name="enumAdvise" /> для <see langword="null" />, в настоящее время отсутствуют соединения с приемниками уведомлений. Этот параметр передается неинициализированным.</param>
        <summary>Создает объект, который может использоваться для перечисления текущих соединений для рекомендаций.</summary>
        <returns>Этот метод поддерживает стандартное возвращаемое значение E_OUTOFMEMORY, а также следующие.  
  
 <list type="table"><listheader><term> Значение  
  
 </term><description> Описание  
  
 </description></listheader><item><term> S_OK  
  
 </term><description> Экземпляр объекта перечисления успешно создан, или отсутствуют соединения.  
  
 </description></item><item><term> OLE_E_ADVISENOTSUPPORTED  
  
 </term><description> Этот объект не поддерживает уведомления о рекомендациях.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только когда объект класса <xref:System.Windows.Forms.DataObject> приведен к типу интерфейса <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для вызова неуправляемого кода. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc">
      <MemberSignature Language="C#" Value="System.Runtime.InteropServices.ComTypes.IEnumFORMATETC IDataObject.EnumFormatEtc (System.Runtime.InteropServices.ComTypes.DATADIR dwDirection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Runtime.InteropServices.ComTypes.IEnumFORMATETC System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(valuetype System.Runtime.InteropServices.ComTypes.DATADIR dwDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" />
      <MemberSignature Language="VB.NET" Value="Function EnumFormatEtc (dwDirection As DATADIR) As IEnumFORMATETC Implements IDataObject.EnumFormatEtc" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Runtime::InteropServices::ComTypes::IEnumFORMATETC ^ System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System::Runtime::InteropServices::ComTypes::DATADIR dwDirection) = System::Runtime::InteropServices::ComTypes::IDataObject::EnumFormatEtc;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.ComTypes.IEnumFORMATETC</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwDirection" Type="System.Runtime.InteropServices.ComTypes.DATADIR" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dwDirection">Один из <see cref="T:System.Runtime.InteropServices.ComTypes.DATADIR" /> значений, определяющее направление данных.</param>
        <summary>Создает объект для перечисления <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> структуры для объекта данных. Эти структуры используются в вызовах <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> или <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />.</summary>
        <returns>Этот метод поддерживает стандартные возвращаемые значения E_INVALIDARG и E_OUTOFMEMORY, а также следующие. 
 <list type="table"><listheader><term> Значение 
 </term><description> Описание 
 </description></listheader><item><term> S_OK 
 </term><description> Объект перечисления был успешно создан.  
  
 </description></item><item><term> E_NOTIMPL 
 </term><description> Направление, заданное параметром <paramref name="direction" /> параметр не поддерживается.  
  
 </description></item><item><term> OLE_S_USEREG 
 </term><description> Требует, чтобы OLE перечисляли форматы из реестра.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только когда объект класса <xref:System.Windows.Forms.DataObject> приведен к типу интерфейса <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для вызова неуправляемого кода. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc">
      <MemberSignature Language="C#" Value="int IDataObject.GetCanonicalFormatEtc (ref System.Runtime.InteropServices.ComTypes.FORMATETC pformatetcIn, out System.Runtime.InteropServices.ComTypes.FORMATETC pformatetcOut);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pformatetcIn, [out] valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pformatetcOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" />
      <MemberSignature Language="VB.NET" Value="Function GetCanonicalFormatEtc (ByRef pformatetcIn As FORMATETC, ByRef pformatetcOut As FORMATETC) As Integer Implements IDataObject.GetCanonicalFormatEtc" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System::Runtime::InteropServices::ComTypes::FORMATETC % pformatetcIn, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::FORMATETC % pformatetcOut) = System::Runtime::InteropServices::ComTypes::IDataObject::GetCanonicalFormatEtc;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pformatetcIn" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="pformatetcOut" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="out" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="pformatetcIn">Указатель на <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> структура, переданная ссылкой, которая определяет формат, среду и целевое устройство, которые вызывающий объект хотел бы использовать для извлечения данных в последующем вызове, например <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> Член не имеет значения в этом случае и его следует игнорировать.</param>
        <param name="pformatetcOut">Возвращаемые этим методом данные содержат указатель на структуру <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, которая содержит наиболее общие сведения для определенной прорисовки, делая его канонически эквивалентным <c>formatetcIn</c>. Вызывающий объект должен выделить эту структуру и <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" /> метод должен заполнить данные. Для извлечения данных в последующем вызове, например <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, вызывающий объект использует предоставленное значение параметра <c>formatOut</c>, если предоставленное значение не равно <see langword="null" />. Это значение равно <see langword="null" /> Если метод возвращает <see langword="DATA_S_SAMEFORMATETC" />. <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> Член не имеет значения в этом случае и его следует игнорировать. Этот параметр передается неинициализированным.</param>
        <summary>Предоставляет стандартный <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> структуру, которая логически эквивалентна более сложной структуре. Этот метод позволяет определить, является ли два разных <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> структуры будет возвращать те же данные, избавляя от необходимости повторной отрисовки.</summary>
        <returns>Этот метод поддерживает стандартные возвращаемые значения E_INVALIDARG, E_UNEXPECTED и E_OUTOFMEMORY, а также следующие. 
 <list type="table"><listheader><term> Значение 
 </term><description> Описание 
 </description></listheader><item><term> S_OK 
 </term><description> Возвращенный <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> структура отличается от того, который был передан.  
  
 </description></item><item><term> DATA_S_SAMEFORMATETC 
 </term><description> <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> Структуры одинаковы и <see langword="null" /> возвращается в <paramref name="formatOut" /> параметра.  
  
 </description></item><item><term> DV_E_LINDEX 
 </term><description> Недопустимое значение для <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; в настоящий момент поддерживается только значение -1.  
  
 </description></item><item><term> DV_E_FORMATETC 
 </term><description> Недопустимое значение для <paramref name="pFormatetc" /> параметра.  
  
 </description></item><item><term> OLE_E_NOTRUNNING 
 </term><description> Приложение не выполняется.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только когда объект класса <xref:System.Windows.Forms.DataObject> приведен к типу интерфейса <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для вызова неуправляемого кода. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetData">
      <MemberSignature Language="C#" Value="void IDataObject.GetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc, out System.Runtime.InteropServices.ComTypes.STGMEDIUM medium);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.GetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc, [out] valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; medium) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetData (ByRef formatetc As FORMATETC, ByRef medium As STGMEDIUM) Implements IDataObject.GetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System::Runtime::InteropServices::ComTypes::FORMATETC % formatetc, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::STGMEDIUM % medium) = System::Runtime::InteropServices::ComTypes::IDataObject::GetData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="medium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM" RefType="out" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="formatetc">Указатель на <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> структура, переданная ссылкой, которая определяет формат, средний и целевое устройство для использования при передаче данных. С помощью логического оператора OR можно задать более одной среды передачи, разрешив методу выбирать лучшую среду передачи среди заданных.</param>
        <param name="medium">При возвращении данного метода содержит указатель на <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> структуры, задающий среду хранения, содержащую возвращенные данные посредством его <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed" /> член и ответственность за освобождение среды передачи через значение своего <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" />член. Если <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> — <see langword="null" />, получатель среды передачи отвечает за ее освобождение; в противном случае <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> указывает <see langword="IUnknown" /> интерфейса в соответствующем объекте, поэтому его <see langword="Release" /> метод может вызываться. Носитель должен выделить и заполнена с помощью <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. Этот параметр передается неинициализированным.</param>
        <summary>Получает данные из исходного объекта данных. <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> Метод, который вызывается объектом-получателем данных, обрабатывает данные, описанные в указанном <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> структурировать и передает их через заданную <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> структуры. Затем в вызывающий объект несет ответственность за освобождение <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> структуры.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только когда объект класса <xref:System.Windows.Forms.DataObject> приведен к типу интерфейса <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">Не хватает памяти для выполнения этой операции.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для вызова неуправляемого кода. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere">
      <MemberSignature Language="C#" Value="void IDataObject.GetDataHere (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc, ref System.Runtime.InteropServices.ComTypes.STGMEDIUM medium);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc, valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; medium) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetDataHere (ByRef formatetc As FORMATETC, ByRef medium As STGMEDIUM) Implements IDataObject.GetDataHere" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System::Runtime::InteropServices::ComTypes::FORMATETC % formatetc, System::Runtime::InteropServices::ComTypes::STGMEDIUM % medium) = System::Runtime::InteropServices::ComTypes::IDataObject::GetDataHere;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="medium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM" RefType="ref" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="formatetc">Указатель на <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> структура, переданная ссылкой, которая определяет формат, средний и целевое устройство для использования при передаче данных. Только одна среда может быть задана в <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" />и только следующие <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> значения являются допустимыми: <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL" />, или <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE" />.</param>
        <param name="medium">Объект <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, передаваемый по ссылке, который определяет среду хранения, содержащую передаваемые данные. Носитель должен выделенный вызывающим объектом и заполнена с помощью <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. Также вызывающий объект должен освободить среду передачи. Реализация этого метода должно всегда предоставляться значение <see langword="null" /> для <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> членом <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> структуры, который указывает этот параметр.</param>
        <summary>Получает данные из исходного объекта данных. Этот метод, который вызывается объектом-получателем данных, отличается от <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> метод тем, что вызывающий объект должен выделить и освободить заданную среду хранения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только когда объект класса <xref:System.Windows.Forms.DataObject> приведен к типу интерфейса <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для вызова неуправляемого кода. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData">
      <MemberSignature Language="C#" Value="int IDataObject.QueryGetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)" />
      <MemberSignature Language="VB.NET" Value="Function QueryGetData (ByRef formatetc As FORMATETC) As Integer Implements IDataObject.QueryGetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(System::Runtime::InteropServices::ComTypes::FORMATETC % formatetc) = System::Runtime::InteropServices::ComTypes::IDataObject::QueryGetData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="formatetc">Указатель на <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> структура, переданная ссылкой, которая определяет формат, средний и целевое устройство для использования для запроса.</param>
        <summary>Определяет, является ли объект данных для визуализации данных, описанных в <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> структуры. Объекты, пытающиеся выполнять операцию вставки или перетаскивания могут вызывать этот метод перед вызовом <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> чтобы узнать, может ли операция быть успешной.</summary>
        <returns>Этот метод поддерживает стандартные возвращаемые значения E_INVALIDARG, E_UNEXPECTED и E_OUTOFMEMORY, а также следующие. 
 <list type="table"><listheader><term> Значение 
 </term><description> Описание 
 </description></listheader><item><term> S_OK 
 </term><description> Последующий вызов <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> скорее всего, будет успешным.  
  
 </description></item><item><term> DV_E_LINDEX 
 </term><description> Недопустимое значение для <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; в настоящий момент поддерживается только значение -1.  
  
 </description></item><item><term> DV_E_FORMATETC 
 </term><description> Недопустимое значение для <paramref name="pFormatetc" /> параметра.  
  
 </description></item><item><term> DV_E_TYMED 
 </term><description> Недопустимое значение <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed" />.  
  
 </description></item><item><term> DV_E_DVASPECT 
 </term><description> Недопустимое значение <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect" />.  
  
 </description></item><item><term> OLE_E_NOTRUNNING 
 </term><description> Приложение не выполняется.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только когда объект класса <xref:System.Windows.Forms.DataObject> приведен к типу интерфейса <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для вызова неуправляемого кода. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.SetData">
      <MemberSignature Language="C#" Value="void IDataObject.SetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC pFormatetcIn, ref System.Runtime.InteropServices.ComTypes.STGMEDIUM pmedium, bool fRelease);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.SetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pFormatetcIn, valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; pmedium, bool fRelease) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Sub SetData (ByRef pFormatetcIn As FORMATETC, ByRef pmedium As STGMEDIUM, fRelease As Boolean) Implements IDataObject.SetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System::Runtime::InteropServices::ComTypes::FORMATETC % pFormatetcIn, System::Runtime::InteropServices::ComTypes::STGMEDIUM % pmedium, bool fRelease) = System::Runtime::InteropServices::ComTypes::IDataObject::SetData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pFormatetcIn" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="pmedium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM" RefType="ref" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="fRelease" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="pFormatetcIn">Объект <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> структура, переданная ссылкой, которая определяет формат, используемый объектом данных при интерпретации данных, содержащихся в среде хранения.</param>
        <param name="pmedium">Объект <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> структура, переданная ссылкой, который определяет среду хранения, в котором передаются данные.</param>
        <param name="fRelease"><see langword="true" /> Чтобы указать, что вызванный объект данных, который реализует <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />, владеет средой хранения после возвращения вызова. Это означает, что объект данных должен освободить среду после ее использования, вызвав <see langword="ReleaseStgMedium" /> функции. <see langword="false" /> Чтобы указать, что вызывающий объект сохраняет владение средой хранения, а вызванный объект данных использует среду хранения во время вызова только.</param>
        <summary>Передает данные в объект, реализующий этот метод. Этот метод вызывается объектом, содержащим источник данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только когда объект класса <xref:System.Windows.Forms.DataObject> приведен к типу интерфейса <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Этот метод не поддерживает тип базового объекта данных.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для вызова неуправляемого кода. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>