<Type Name="DataObject" FullName="System.Windows.Forms.DataObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="058e7d5e11e151158b54039f65773d3041463997" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75179516" /></Metadata><TypeSignature Language="C#" Value="public class DataObject : System.Runtime.InteropServices.ComTypes.IDataObject, System.Windows.Forms.IDataObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataObject extends System.Object implements class System.Runtime.InteropServices.ComTypes.IDataObject, class System.Windows.Forms.IDataObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataObject" />
  <TypeSignature Language="VB.NET" Value="Public Class DataObject&#xA;Implements IDataObject, IDataObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataObject : System::Runtime::InteropServices::ComTypes::IDataObject, System::Windows::Forms::IDataObject" />
  <TypeSignature Language="F#" Value="type DataObject = class&#xA;    interface IDataObject&#xA;    interface IDataObject" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.ComTypes.IDataObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IDataObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Реализует основной механизм передачи данных.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.DataObject> реализует интерфейс <xref:System.Windows.Forms.IDataObject>, методы которого обеспечивают независимый от формата механизм передачи данных.  
  
 <xref:System.Windows.Forms.DataObject> обычно используется с <xref:System.Windows.Forms.Clipboard> и в операциях перетаскивания. Класс <xref:System.Windows.Forms.DataObject> предоставляет рекомендуемую реализацию интерфейса <xref:System.Windows.Forms.IDataObject>. Рекомендуется использовать класс <xref:System.Windows.Forms.DataObject>, а не реализовывать <xref:System.Windows.Forms.IDataObject> самостоятельно.  
  
 В <xref:System.Windows.Forms.DataObject>можно хранить несколько фрагментов данных в разных форматах. Данные извлекаются из <xref:System.Windows.Forms.DataObject> по связанному формату. Так как целевое приложение может быть неизвестно, можно увеличить вероятность того, что данные будут в соответствующем формате для приложения, поместив данные в <xref:System.Windows.Forms.DataObject> в нескольких форматах. См. раздел <xref:System.Windows.Forms.DataFormats> для предопределенных форматов. Вы можете реализовать собственный формат, создав экземпляр класса <xref:System.Windows.Forms.DataFormats.Format>.  
  
 Чтобы сохранить данные в <xref:System.Windows.Forms.DataObject>, передайте их в конструктор или вызовите <xref:System.Windows.Forms.DataObject.SetData%2A>. Можно добавить данные в несколько форматов в один и тот же <xref:System.Windows.Forms.DataObject>. Если требуется, чтобы данные, добавляемые для извлечения только в собственном формате, вызовите <xref:System.Windows.Forms.DataObject.SetData%28System.String%2CSystem.Boolean%2CSystem.Object%29> с параметром `autoConvert`, для которого задано значение `false`.  
  
 Данные можно получить из <xref:System.Windows.Forms.DataObject> в любом формате, совместимом с <xref:System.Windows.Forms.DataObject.GetData%2A>. Например, текст можно преобразовать в Юникод. Чтобы получить данные в формате, в котором они были сохранены, вызовите <xref:System.Windows.Forms.DataObject.GetData%2A> с параметром `autoConvert`, для которого задано значение `false`.  
  
 Чтобы определить, в каких форматах хранятся данные, вызовите <xref:System.Windows.Forms.DataObject.GetFormats%2A>. Чтобы определить, доступен ли формат, вызовите <xref:System.Windows.Forms.DataObject.GetDataPresent%2A> с требуемым форматом.  
  
 В [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]класс <xref:System.Windows.Forms.DataObject> предоставляет дополнительные методы, упрощающие работу с данными в общих форматах. Чтобы добавить данные определенного формата в <xref:System.Windows.Forms.DataObject>, используйте соответствующий метод *форматирования* `Set`, например <xref:System.Windows.Forms.DataObject.SetText%2A>. Чтобы получить данные определенного формата из <xref:System.Windows.Forms.DataObject>, сначала вызовите соответствующий метод *формата* `Contains`(например, <xref:System.Windows.Forms.DataObject.ContainsText%2A>), чтобы определить, содержит ли <xref:System.Windows.Forms.DataObject> данные в этом формате, а затем вызовите соответствующий метод *форматирования* `Get`(например, <xref:System.Windows.Forms.DataObject.GetText%2A>), чтобы получить данные, если <xref:System.Windows.Forms.DataObject> содержит его.  
  
> [!NOTE]
>  При использовании формата метафайлов с буфером обмена могут потребоваться особые соображения. Из-за ограничения в текущей реализации класса <xref:System.Windows.Forms.DataObject> формат метафайла, используемый .NET Framework, может не располагаться приложениями, использующими формат метафайлов более старой версии. В этом случае необходимо взаимодействовать с интерфейсами прикладного программирования (API) буфера Win32.
>   
>  Объект должен быть сериализуемым, чтобы его можно было разместить в буфере обмена. Дополнительные сведения о сериализации см. в разделе <xref:System.Runtime.Serialization>. Если целевому приложению требуется специальный формат данных, то заголовки, добавленные к данным в процессе сериализации, могут помешать приложению распознать ваши данные. Чтобы сохранить формат данных, добавьте данные в качестве массива <xref:System.Byte> в <xref:System.IO.MemoryStream> и передайте <xref:System.IO.MemoryStream> методу <xref:System.Windows.Forms.DataObject.SetData%2A>.  
  
   
  
## Examples  
 В следующем примере кода данные добавляются в <xref:System.Windows.Forms.DataObject>. Во-первых, создается новый <xref:System.Windows.Forms.DataObject> и компонент сохраняется в нем. Затем он проверяет, существует ли в <xref:System.Windows.Forms.DataObject>данные соответствующего типа. Результат отображается в текстовом поле. Для этого кода требуется, чтобы `textBox1` был создан.  
  
 [!code-cpp[Classic DataObject Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject Example/VB/source.vb#1)]  
  
 В следующем примере извлекаются данные, хранящиеся в <xref:System.Windows.Forms.DataObject>. Сначала создается новый <xref:System.Windows.Forms.DataObject> с текстовыми данными. Затем извлекаются данные, задаются их формат в виде строки и отображаются в текстовом поле. Формат данных автоматически преобразуется из текста в строку. Для этого кода требуется, чтобы `textBox1` был создан.  
  
 [!code-cpp[Classic DataObject Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject Example/CPP/source.cpp#2)]
 [!code-csharp[Classic DataObject Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject Example/CS/source.cs#2)]
 [!code-vb[Classic DataObject Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject Example/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Clipboard" />
    <altmember cref="T:System.Windows.Forms.IDataObject" />
    <altmember cref="T:System.Windows.Forms.DataFormats" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализация нового экземпляра класса <see cref="T:System.Windows.Forms.DataObject" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализация нового экземпляра класса <see cref="T:System.Windows.Forms.DataObject" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода создается <xref:System.Windows.Forms.DataObject> и добавляются в него данные. Затем в примере извлекаются и отображаются данные. Для этого кода требуется, чтобы `textBox1` был создан.  
  
 [!code-cpp[Classic DataObject.DataObject2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.DataObject2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.DataObject2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.DataObject2 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.DataObject2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.DataObject2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataObject : obj -&gt; System.Windows.Forms.DataObject" Usage="new System.Windows.Forms.DataObject data" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Сохраняемые данные.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.DataObject" /> и добавляет в него указанный объект.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно добавить данные в любой формат <xref:System.Windows.Forms.DataObject> при использовании этого конструктора или добавить данные в качестве <xref:System.Windows.Forms.IDataObject> для одновременного получения нескольких форматов. Если вы знакомы с программированием COM, можно также добавить объект данных, реализующий интерфейс `IDataObject` COM. Дополнительные сведения см. в разделе `IDataObject` в библиотеке MSDN по адресу https://msdn.microsoft.com/library.  
  
   
  
## Examples  
 В следующем примере кода создается <xref:System.Windows.Forms.DataObject>, содержащий строку. Данные извлекаются с использованием формата данных. Результаты отображаются в текстовом поле. Для этого кода требуется, чтобы `textBox1` был создан.  
  
 [!code-cpp[Classic DataObject.DataObject3 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.DataObject3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.DataObject3 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.DataObject3 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.DataObject3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.DataObject3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=150123">IDataObject</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject(System::String ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataObject : string * obj -&gt; System.Windows.Forms.DataObject" Usage="new System.Windows.Forms.DataObject (format, data)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Формат указанных данных. Сведения о предварительно определенных форматах см. в разделе <see cref="T:System.Windows.Forms.DataFormats" />.</param>
        <param name="data">Сохраняемые данные.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.DataObject" /> и добавляет указанный объект в заданном формате.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода создается <xref:System.Windows.Forms.DataObject> класс с помощью строки, заданной как тип строки. Данные извлекаются из <xref:System.Windows.Forms.DataObject> путем указания его формата в виде текста. Результаты отображаются в текстовом поле. Для этого кода требуется, чтобы `textBox1` был создан.  
  
 [!code-cpp[Classic DataObject.DataObject4 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.DataObject4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.DataObject4 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.DataObject4 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.DataObject4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.DataObject4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsAudio">
      <MemberSignature Language="C#" Value="public virtual bool ContainsAudio ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsAudio() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsAudio" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsAudio () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsAudio();" />
      <MemberSignature Language="F#" Value="abstract member ContainsAudio : unit -&gt; bool&#xA;override this.ContainsAudio : unit -&gt; bool" Usage="dataObject.ContainsAudio " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Показывает, содержит ли объект данные в формате <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />.</summary>
        <returns>Значение <see langword="true" />, если объект данных содержит аудиозаписи, и значение <see langword="false" /> в противном случае.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот метод, чтобы определить, содержит ли объект данных звуковые данные перед их получением с помощью метода <xref:System.Windows.Forms.DataObject.GetAudioStream%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetAudio" />
      </Docs>
    </Member>
    <Member MemberName="ContainsFileDropList">
      <MemberSignature Language="C#" Value="public virtual bool ContainsFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsFileDropList () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsFileDropList();" />
      <MemberSignature Language="F#" Value="abstract member ContainsFileDropList : unit -&gt; bool&#xA;override this.ContainsFileDropList : unit -&gt; bool" Usage="dataObject.ContainsFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Указывает, содержит ли объект данные, которые имеют формат <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> или могут быть преобразованы в этот формат.</summary>
        <returns>Значение <see langword="true" />, если объект данных содержит раскрывающийся список файлов, и значение <see langword="false" /> в противном случае.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Раскрывающийся список файлов представляет собой коллекцию строк, содержащих сведения о пути для файлов.  
  
 Используйте этот метод, чтобы определить, содержит ли объект данных раскрывающийся список файлов перед его получением с помощью метода <xref:System.Windows.Forms.DataObject.GetFileDropList%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFileDropList" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsImage">
      <MemberSignature Language="C#" Value="public virtual bool ContainsImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsImage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsImage () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsImage();" />
      <MemberSignature Language="F#" Value="abstract member ContainsImage : unit -&gt; bool&#xA;override this.ContainsImage : unit -&gt; bool" Usage="dataObject.ContainsImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Указывает, содержит ли объект данные, которые имеют формат <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> или могут быть преобразованы в этот формат.</summary>
        <returns>Значение <see langword="true" />, если объект данных содержит графические данные, и значение <see langword="false" /> в противном случае.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот метод, чтобы определить, содержит ли объект данных изображение данные, прежде чем получить его с помощью метода <xref:System.Windows.Forms.DataObject.GetImage%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetImage" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ContainsText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Указывает, содержит ли объект текстовые данные.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public virtual bool ContainsText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsText () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsText();" />
      <MemberSignature Language="F#" Value="abstract member ContainsText : unit -&gt; bool&#xA;override this.ContainsText : unit -&gt; bool" Usage="dataObject.ContainsText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Показывает, содержит ли объект данные в формате <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />.</summary>
        <returns>Значение <see langword="true" />, если объект данных содержит текстовые данные, и значение <see langword="false" /> в противном случае.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот метод, чтобы определить, содержит ли объект данных текстовые данные, прежде чем получить его с помощью метода <xref:System.Windows.Forms.DataObject.GetText%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public virtual bool ContainsText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.ContainsText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsText (format As TextDataFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="abstract member ContainsText : System.Windows.Forms.TextDataFormat -&gt; bool&#xA;override this.ContainsText : System.Windows.Forms.TextDataFormat -&gt; bool" Usage="dataObject.ContainsText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format">Одно из значений <see cref="T:System.Windows.Forms.TextDataFormat" />.</param>
        <summary>Показывает, содержит ли объект текстовые данные в формате, указываемом заданным значением <see cref="T:System.Windows.Forms.TextDataFormat" />.</summary>
        <returns>Значение <see langword="true" />, если объект данных содержит текст в указанном формате. В противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот метод, чтобы определить, содержит ли объект данных текстовые данные, прежде чем получить его с помощью метода <xref:System.Windows.Forms.DataObject.GetText%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="format" /> не является допустимым значением <see cref="T:System.Windows.Forms.TextDataFormat" />.</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetAudioStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetAudioStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetAudioStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetAudioStream" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAudioStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetAudioStream();" />
      <MemberSignature Language="F#" Value="abstract member GetAudioStream : unit -&gt; System.IO.Stream&#xA;override this.GetAudioStream : unit -&gt; System.IO.Stream" Usage="dataObject.GetAudioStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает аудиопоток из объекта данных.</summary>
        <returns>Поток <see cref="T:System.IO.Stream" />, содержащий аудиозаписи, или значение <see langword="null" />, если объект данных не содержит никаких данных в формате <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.Windows.Forms.DataObject.ContainsAudio%2A>, чтобы определить, содержит ли объект данных звуковые данные перед их извлечением с помощью этого метода.  
  
 Используйте метод <xref:System.Windows.Forms.DataObject.SetAudio%2A> для добавления звуковых данных в объект данных.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetAudio" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает данные, связанные с заданным форматом.</summary>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public virtual object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string -&gt; obj&#xA;override this.GetData : string -&gt; obj" Usage="dataObject.GetData format" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetData(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Формат извлекаемых данных. Сведения о предварительно определенных форматах см. в разделе <see cref="T:System.Windows.Forms.DataFormats" />.</param>
        <summary>Возвращает данные, связанные с заданным форматом.</summary>
        <returns>Данные, связанные с заданным форматом, или значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если этот метод не может найти данные в указанном формате, он пытается преобразовать данные в формат. Если данные не могут быть преобразованы в указанный формат или если данные были сохранены с автоматическим преобразованием в `false`, этот метод возвращает `null`.  
  
 Чтобы определить, связаны ли данные с или их можно преобразовать в формат, вызовите <xref:System.Windows.Forms.DataObject.GetDataPresent%2A> перед вызовом <xref:System.Windows.Forms.DataObject.GetData%2A>. Вызовите <xref:System.Windows.Forms.DataObject.GetFormats%2A>, чтобы получить список допустимых форматов для данных, хранящихся в этом <xref:System.Windows.Forms.DataObject>.  
  
> [!NOTE]
>  Данные могут быть преобразованы в другой формат, если они были сохранены с указанием того, что преобразование разрешено, и если запрошенный формат совместим с сохраненным форматом. Например, данные, хранящиеся в Юникоде, можно преобразовать в текст.  
>   
>  Если `format` <xref:System.Windows.Forms.DataFormats.Html>, этот метод возвращает строку в формате UTF-8 в приложениях, предназначенных для .NET 4,5 или более поздней версии, и строку в кодировке ANSI в приложениях, предназначенных для .NET 4,0 или более низкого уровня.  
  
   
  
## Examples  
 В следующем примере кода извлекаются данные, хранящиеся в <xref:System.Windows.Forms.DataObject>. Сначала создается новый <xref:System.Windows.Forms.DataObject> с текстовыми данными. Затем извлекаются данные, задаются их формат в виде строки и отображаются в текстовом поле.  
  
 Для этого кода требуется, чтобы `textBox1` был создан.  
  
 [!code-cpp[classic dataobject example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject Example/CPP/source.cpp#1)]
 [!code-csharp[classic dataobject example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject Example/CS/source.cs#1)]
 [!code-vb[classic dataobject example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public virtual object GetData (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetData(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetData (format As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(Type ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetData : Type -&gt; obj&#xA;override this.GetData : Type -&gt; obj" Usage="dataObject.GetData format" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetData(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">Объект <see cref="T:System.Type" />, представляющий формат извлекаемых данных.</param>
        <summary>Возвращает данные, связанные с заданным форматом типа класса.</summary>
        <returns>Данные, связанные с заданным форматом, или значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если этот метод не может найти данные в указанном формате, он пытается преобразовать данные в формат. Если данные не могут быть преобразованы в указанный формат или если данные были сохранены с автоматическим преобразованием в `false`, этот метод возвращает `null`.  
  
 Чтобы определить, связаны ли данные с или их можно преобразовать в формат, вызовите <xref:System.Windows.Forms.DataObject.GetDataPresent%2A> перед вызовом <xref:System.Windows.Forms.DataObject.GetData%2A>. Вызовите <xref:System.Windows.Forms.DataObject.GetFormats%2A>, чтобы получить список допустимых форматов для данных, хранящихся в этом <xref:System.Windows.Forms.DataObject>.  
  
> [!NOTE]
>  Данные могут быть преобразованы в другой формат, если они были сохранены с указанием того, что преобразование разрешено, и если запрошенный формат совместим с сохраненным форматом. Например, данные, хранящиеся в Юникоде, можно преобразовать в текст.  
  
   
  
## Examples  
 В следующем примере кода извлекаются данные, хранящиеся в <xref:System.Windows.Forms.DataObject>. Во-первых, создается новый <xref:System.Windows.Forms.DataObject> с компонентом. Затем извлекаются данные, указывая их тип. Тип извлеченных данных отображается в текстовом поле.  
  
 Для этого кода требуется, чтобы `textBox1` был создан.  
  
 [!code-cpp[Classic DataObject.GetData2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetData2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetData2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetData2 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetData2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetData2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public virtual object GetData (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetData (format As String, autoConvert As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(System::String ^ format, bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string * bool -&gt; obj&#xA;override this.GetData : string * bool -&gt; obj" Usage="dataObject.GetData (format, autoConvert)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">Формат извлекаемых данных. Сведения о предварительно определенных форматах см. в разделе <see cref="T:System.Windows.Forms.DataFormats" />.</param>
        <param name="autoConvert">Значение <see langword="true" />, если данные необходимо преобразовать в указанный формат, и значение <see langword="false" /> в противном случае.</param>
        <summary>Возвращает данные, связанные с указанным форматом, используя параметр автоматического преобразования, чтобы определить необходимость преобразования данных в этот формат.</summary>
        <returns>Данные, связанные с заданным форматом, или значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если параметр `autoConvert` имеет значение `true` и этот метод не может найти данные в указанном формате, он пытается преобразовать данные в формат. Если данные не могут быть преобразованы в указанный формат или если данные хранились с автоматическим преобразованием в значение `false`, этот метод возвращает `null`.  
  
 Если параметр `autoConvert` имеет значение `false`, этот метод возвращает данные в указанном формате или `null`, если не удается найти данные в этом формате.  
  
 Чтобы определить, связаны ли данные с или их можно преобразовать в формат, вызовите <xref:System.Windows.Forms.DataObject.GetDataPresent%2A> перед вызовом <xref:System.Windows.Forms.DataObject.GetData%2A>. Вызовите <xref:System.Windows.Forms.DataObject.GetFormats%2A>, чтобы получить список допустимых форматов для данных, хранящихся в этом <xref:System.Windows.Forms.DataObject>.  
  
> [!NOTE]
>  Данные могут быть преобразованы в другой формат, если они были сохранены с указанием того, что преобразование разрешено, и если запрошенный формат совместим с сохраненным форматом. Например, данные, хранящиеся в Юникоде, можно преобразовать в текст.  
>   
>  Если `format` <xref:System.Windows.Forms.DataFormats.Html>, этот метод возвращает строку в формате UTF-8 в приложениях, предназначенных для .NET 4,5 или более поздней версии, и строку в кодировке ANSI в приложениях, предназначенных для .NET 4,0 или более низкого уровня.  
  
   
  
## Examples  
 Следующий пример кода извлекает данные, хранящиеся в <xref:System.Windows.Forms.DataObject>, используя параметр `autoConvert`, чтобы указать, следует ли преобразовать формат данных.  
  
 Сначала создается новый <xref:System.Windows.Forms.DataObject> с текстовыми данными. Затем пример пытается извлечь данные, указав его формат в виде строки без преобразования формата, то есть параметр `autoConvert` `false`. Эта операция завершается ошибкой, так как в <xref:System.Windows.Forms.DataObject>отсутствуют строковые данные.  
  
 Далее в примере предпринимается попытка повторного получения данных с параметром `autoConvert`, для которого задано значение `true`. Эта операция выполняется, и результаты отображаются в <xref:System.Windows.Forms.MessageBox>.  
  
 Для этого кода требуется, чтобы `textBox1` был создан.  
  
 [!code-cpp[Classic DataObject.GetData Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetData Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetData Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetData Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetData Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataPresent">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Определяет, связаны ли хранимые в этом экземпляре <see cref="T:System.Windows.Forms.DataObject" /> данные с указанным форматом.</summary>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public virtual bool GetDataPresent (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetDataPresent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataPresent (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetDataPresent(System::String ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : string -&gt; bool&#xA;override this.GetDataPresent : string -&gt; bool" Usage="dataObject.GetDataPresent format" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Проверяемый формат. Сведения о предварительно определенных форматах см. в разделе <see cref="T:System.Windows.Forms.DataFormats" />.</param>
        <summary>Определяет, связаны ли хранимые в этом экземпляре <see cref="T:System.Windows.Forms.DataObject" /> данные с указанным форматом и возможно ли их преобразование в этот формат.</summary>
        <returns>Значение <see langword="true" />, если хранящиеся в данном экземпляре <see cref="T:System.Windows.Forms.DataObject" /> данные связаны с указанным форматом или могут быть преобразованы в него, и значение <see langword="false" /> в противном случае.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите этот метод, чтобы определить, существует ли формат перед вызовом <xref:System.Windows.Forms.DataObject.GetData%2A>. Вызовите <xref:System.Windows.Forms.DataObject.GetFormats%2A> для форматов, доступных в этом <xref:System.Windows.Forms.DataObject>.  
  
> [!NOTE]
>  Данные могут быть преобразованы в другой формат, если они были сохранены с указанием того, что преобразование разрешено, и если запрошенный формат совместим с сохраненным форматом. Например, данные, хранящиеся в Юникоде, можно преобразовать в текст.  
  
> [!NOTE]
>  Если данные не могут быть получены, исключение не создается. Вместо этого будет возвращено `false`.  
  
   
  
## Examples  
 В следующем примере кода определяется, связаны ли данные, которые в данный момент хранятся в этом <xref:System.Windows.Forms.DataObject>, с указанным форматом или преобразуются в него. Новый <xref:System.Windows.Forms.DataObject> инициализируется строкой и связанным с ней форматом, указанным в качестве текста.  
  
 Затем в примерах выводятся сведения о том, существуют ли текстовые данные в <xref:System.Windows.Forms.DataObject>. Для этого кода требуется, чтобы `textBox1` был создан.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public virtual bool GetDataPresent (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataPresent (format As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetDataPresent(Type ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : Type -&gt; bool&#xA;override this.GetDataPresent : Type -&gt; bool" Usage="dataObject.GetDataPresent format" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">Объект <see cref="T:System.Type" />, представляющий проверяемый формат.</param>
        <summary>Определяет, связаны ли хранимые в этом экземпляре <see cref="T:System.Windows.Forms.DataObject" /> данные с указанным форматом и возможно ли их преобразование в этот формат.</summary>
        <returns>Значение <see langword="true" />, если хранящиеся в данном экземпляре <see cref="T:System.Windows.Forms.DataObject" /> данные связаны с указанным форматом или могут быть преобразованы в него, и значение <see langword="false" /> в противном случае.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите этот метод, чтобы определить, существует ли формат перед вызовом <xref:System.Windows.Forms.DataObject.GetData%2A>. Вызовите <xref:System.Windows.Forms.DataObject.GetFormats%2A> для форматов, доступных в этом <xref:System.Windows.Forms.DataObject>.  
  
> [!NOTE]
>  Данные могут быть преобразованы в другой формат, если они были сохранены с указанием того, что преобразование разрешено, и если запрошенный формат совместим с сохраненным форматом. Например, данные, хранящиеся в Юникоде, можно преобразовать в текст.  
  
> [!NOTE]
>  Если данные не могут быть получены, исключение не создается. Вместо этого будет возвращено `false`.  
  
   
  
## Examples  
 В следующем примере кода определяется, существуют ли данные указанного типа в <xref:System.Windows.Forms.DataObject>или можно ли их преобразовать в указанный тип. Результат отображается в текстовом поле. Для кода требуется, чтобы `textBox1` был создан.  
  
 [!code-cpp[Classic DataObject.GetDataPresent Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetDataPresent Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetDataPresent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetDataPresent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public virtual bool GetDataPresent (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetDataPresent(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataPresent (format As String, autoConvert As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetDataPresent(System::String ^ format, bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : string * bool -&gt; bool&#xA;override this.GetDataPresent : string * bool -&gt; bool" Usage="dataObject.GetDataPresent (format, autoConvert)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">Проверяемый формат. Сведения о предварительно определенных форматах см. в разделе <see cref="T:System.Windows.Forms.DataFormats" />.</param>
        <param name="autoConvert">Значение <see langword="true" />, если необходимо определить возможность преобразования данных, хранимых в данном экземпляре <see cref="T:System.Windows.Forms.DataObject" />, в указанный формат, и значение <see langword="false" />, если необходимо проверить наличие данных в указанном формате.</param>
        <summary>Определяет, содержит ли этот экземпляр <see cref="T:System.Windows.Forms.DataObject" /> данные в указанном формате или данные, которые можно преобразовать в этот формат.</summary>
        <returns>Значение <see langword="true" />, если данные находятся в указанном формате или могут быть в него преобразованы; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите этот метод, чтобы определить, существует ли формат перед вызовом <xref:System.Windows.Forms.DataObject.GetData%2A>. Вызовите <xref:System.Windows.Forms.DataObject.GetFormats%2A> для форматов, доступных в этом <xref:System.Windows.Forms.DataObject>.  
  
 Этот метод возвращает `true`, если:  
  
-   Параметр `autoConvert` `true` и данные имеют формат, который можно преобразовать в соответствующий формат.  
  
-   Параметр `autoConvert` `false` и данные имеют соответствующий формат.  
  
 Этот метод возвращает `false`, если:  
  
-   Параметр `autoConvert` `true`, и этот метод не может найти данные в указанном формате и не может преобразовать данные в указанный формат, или если данные были сохранены с автоматическим преобразованием в `false`.  
  
-   Параметр `autoConvert` `false`, и данные не существуют в этом <xref:System.Windows.Forms.DataObject> в указанном формате.  
  
> [!NOTE]
>  Данные могут быть преобразованы в другой формат, если они были сохранены с указанием того, что преобразование разрешено и запрошенный формат совместим с сохраненным форматом. Например, данные, хранящиеся в Юникоде, можно преобразовать в текст.  
  
> [!NOTE]
>  Если данные не могут быть получены, исключение не создается. Вместо этого будет возвращено `false`.  
  
   
  
## Examples  
 В следующем примере кода определяется, связаны ли данные, хранящиеся в <xref:System.Windows.Forms.DataObject>, с указанным форматом. Сначала инициализируется новая <xref:System.Windows.Forms.DataObject> со строкой, в которой в качестве формата используется текст.  
  
 Затем <xref:System.Windows.Forms.DataObject> запрашивает данные, связанные с текстовым форматом, указывая параметр `autoConvert` как `false`. Результат этого запроса печатается в текстовом поле.  
  
 Затем <xref:System.Windows.Forms.DataObject> запрашивает данные, связанные со строковым форматом, указывая параметр `autoConvert` как `true`. Результаты выводятся в текстовом поле. Для этого кода требуется, чтобы `textBox1` был создан.  
  
 [!code-cpp[Classic DataObject.GetDataPresent1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetDataPresent1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetDataPresent1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetDataPresent1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetDataPresent1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetFileDropList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection GetFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.StringCollection GetFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileDropList () As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::StringCollection ^ GetFileDropList();" />
      <MemberSignature Language="F#" Value="abstract member GetFileDropList : unit -&gt; System.Collections.Specialized.StringCollection&#xA;override this.GetFileDropList : unit -&gt; System.Collections.Specialized.StringCollection" Usage="dataObject.GetFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает из объекта данных коллекцию имен файлов.</summary>
        <returns>Коллекция <see cref="T:System.Collections.Specialized.StringCollection" />, содержащая имена файлов, или значение <see langword="null" />, если объект данных не содержит никаких данных в формате <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> или данных, которые могут быть преобразованы в этот формат.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Раскрывающийся список файлов представляет собой коллекцию строк, содержащих сведения о пути для файлов.  
  
 Раскрывающийся список файлов хранится в объекте данных в виде массива <xref:System.String>. Этот метод преобразует этот массив в <xref:System.Collections.Specialized.StringCollection> и возвращает коллекцию.  
  
 Используйте метод <xref:System.Windows.Forms.DataObject.ContainsFileDropList%2A>, чтобы определить, содержит ли объект данных раскрывающийся список файлов перед его извлечением с помощью этого метода.  
  
 Используйте метод <xref:System.Windows.Forms.DataObject.SetFileDropList%2A> для добавления раскрывающегося списка файлов в объект данных.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.StringCollection" />
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFormats">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает список всех форматов, с которыми связаны или в которые могут быть преобразованы данные, хранящиеся в этом экземпляре <see cref="T:System.Windows.Forms.DataObject" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public virtual string[] GetFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetFormats" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFormats () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetFormats();" />
      <MemberSignature Language="F#" Value="abstract member GetFormats : unit -&gt; string[]&#xA;override this.GetFormats : unit -&gt; string[]" Usage="dataObject.GetFormats " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetFormats</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает список всех форматов, с которыми связаны или в которые могут быть преобразованы данные, хранящиеся в этом экземпляре <see cref="T:System.Windows.Forms.DataObject" />.</summary>
        <returns>Массив типа <see cref="T:System.String" />, содержащий список всех форматов, поддерживаемых данными, хранимыми в этом объекте.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите этот метод, чтобы получить Поддерживаемые форматы данных перед вызовом <xref:System.Windows.Forms.DataObject.GetData%2A>. См. раздел <xref:System.Windows.Forms.DataFormats> для предопределенных форматов.  
  
> [!NOTE]
>  Данные могут быть преобразованы в другой формат, если они были сохранены с указанием того, что преобразование разрешено и запрошенный формат совместим с сохраненным форматом. Например, данные, хранящиеся в Юникоде, можно преобразовать в текст.  
  
   
  
## Examples  
 В следующем примере кода запрашивается <xref:System.Windows.Forms.DataObject> для форматов, связанных с данными, а также форматы, в которые данные могут быть преобразованы. Полученный список отображается в текстовом поле. Для этого кода требуется, чтобы `textBox1` был создан.  
  
 [!code-cpp[Classic DataObject.GetFormats1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetFormats1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetFormats1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetFormats1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetFormats1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetFormats1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public virtual string[] GetFormats (bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats(bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFormats (autoConvert As Boolean) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetFormats(bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetFormats : bool -&gt; string[]&#xA;override this.GetFormats : bool -&gt; string[]" Usage="dataObject.GetFormats autoConvert" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoConvert">Значение <see langword="true" />, если необходимо извлечь все форматы, с которыми связаны данные, хранящиеся в этом экземпляре <see cref="T:System.Windows.Forms.DataObject" />, или форматы, в которые они могут быть преобразованы. Значение <see langword="false" />, если необходимо извлечь только собственные форматы данных.</param>
        <summary>Возвращает список всех форматов, в которых данные хранятся в этом экземпляре <see cref="T:System.Windows.Forms.DataObject" /> или в которые они могут быть преобразованы, используя параметр автоматического преобразования для определения необходимости извлечения только собственных форматов данных или всех форматов, в которые данные могут быть преобразованы.</summary>
        <returns>Массив типа <see cref="T:System.String" />, содержащий список всех форматов, поддерживаемых данными, хранимыми в этом объекте.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите этот метод, чтобы получить Поддерживаемые форматы данных перед вызовом <xref:System.Windows.Forms.DataObject.GetData%2A>. См. раздел <xref:System.Windows.Forms.DataFormats> для предопределенных форматов.  
  
> [!NOTE]
>  Данные могут быть преобразованы в другой формат, если они были сохранены с указанием того, что преобразование разрешено и запрошенный формат совместим с сохраненным форматом. Например, данные, хранящиеся в Юникоде, можно преобразовать в текст.  
  
   
  
## Examples  
 В следующем примере кода запрашивается <xref:System.Windows.Forms.DataObject> для форматов, связанных с данными. Первый запрос указывает параметр `autoConvert` как `false`, поэтому возвращается только собственный формат данных. Второй запрос указывает параметр `autoConvert` как `true`, поэтому список форматов включает форматы, в которые данные могут быть преобразованы.  
  
 Для этого кода требуется, чтобы `textBox1` был создан.  
  
 [!code-cpp[Classic DataObject.GetFormats Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.GetFormats Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.GetFormats Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.GetFormats Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.GetFormats Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.GetFormats Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Image GetImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Drawing.Image GetImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetImage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetImage () As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Image ^ GetImage();" />
      <MemberSignature Language="F#" Value="abstract member GetImage : unit -&gt; System.Drawing.Image&#xA;override this.GetImage : unit -&gt; System.Drawing.Image" Usage="dataObject.GetImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает изображение из объекта данных.</summary>
        <returns>Объект <see cref="T:System.Drawing.Image" />, представляющий графические данные объекта данных, или значение <see langword="null" />, если объект не содержит никаких данных в формате <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> или данных, которые могут быть преобразованы в этот формат.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.Windows.Forms.DataObject.ContainsImage%2A>, чтобы определить, содержит ли объект данных изображение данные, прежде чем получить его с помощью этого метода.  
  
 Используйте метод <xref:System.Windows.Forms.DataObject.SetImage%2A>, чтобы добавить данные изображения в объект данных.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Извлекает текстовые данные из объекта данных.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public virtual string GetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetText();" />
      <MemberSignature Language="F#" Value="abstract member GetText : unit -&gt; string&#xA;override this.GetText : unit -&gt; string" Usage="dataObject.GetText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает из объекта данных текст в формате <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />.</summary>
        <returns>Текстовые данные, содержащиеся в объекте, или значение <see cref="F:System.String.Empty" />, если объект данных не содержит данных в формате <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.Windows.Forms.DataObject.ContainsText%2A>, чтобы определить, содержит ли объект данных текстовые данные, перед их извлечением с помощью этого метода.  
  
 Используйте метод <xref:System.Windows.Forms.DataObject.SetText%2A>, чтобы добавить текстовые данные в объект данных.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public virtual string GetText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.GetText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetText (format As TextDataFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="abstract member GetText : System.Windows.Forms.TextDataFormat -&gt; string&#xA;override this.GetText : System.Windows.Forms.TextDataFormat -&gt; string" Usage="dataObject.GetText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="format">Одно из значений <see cref="T:System.Windows.Forms.TextDataFormat" />.</param>
        <summary>Извлекает текстовые данные из объекта данных в формате, указанном заданным значением <see cref="T:System.Windows.Forms.TextDataFormat" />.</summary>
        <returns>Текстовые данные, содержащиеся в объекте, или значение <see cref="F:System.String.Empty" />, если объект данных не содержит данных в указанном формате.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.Windows.Forms.DataObject.ContainsText%2A>, чтобы определить, содержит ли объект данных текстовые данные, перед их извлечением с помощью этого метода.  
  
 Используйте метод <xref:System.Windows.Forms.DataObject.SetText%2A>, чтобы добавить текстовые данные в объект данных.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="format" /> не является допустимым значением <see cref="T:System.Windows.Forms.TextDataFormat" />.</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.SetText" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAudio">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет в объект данные в формате <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />.</summary>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public virtual void SetAudio (byte[] audioBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudio(unsigned int8[] audioBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetAudio(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAudio (audioBytes As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAudio(cli::array &lt;System::Byte&gt; ^ audioBytes);" />
      <MemberSignature Language="F#" Value="abstract member SetAudio : byte[] -&gt; unit&#xA;override this.SetAudio : byte[] -&gt; unit" Usage="dataObject.SetAudio audioBytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBytes" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="audioBytes">Массив <see cref="T:System.Byte" />, содержащий аудиозаписи.</param>
        <summary>Добавляет в объект данных массив <see cref="T:System.Byte" /> в формате <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> после его преобразования в <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы получить звуковые данные из объекта данных, сначала используйте метод <xref:System.Windows.Forms.DataObject.ContainsAudio%2A>, чтобы определить, содержит ли объект данных звуковые данные перед их получением с помощью метода <xref:System.Windows.Forms.DataObject.GetAudioStream%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="audioBytes" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
      </Docs>
    </Member>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public virtual void SetAudio (System.IO.Stream audioStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudio(class System.IO.Stream audioStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetAudio(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAudio (audioStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAudio(System::IO::Stream ^ audioStream);" />
      <MemberSignature Language="F#" Value="abstract member SetAudio : System.IO.Stream -&gt; unit&#xA;override this.SetAudio : System.IO.Stream -&gt; unit" Usage="dataObject.SetAudio audioStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="audioStream">Поток <see cref="T:System.IO.Stream" />, содержащий аудиозаписи.</param>
        <summary>Добавляет поток <see cref="T:System.IO.Stream" /> в объект данных в формате <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы получить звуковые данные из объекта данных, сначала используйте метод <xref:System.Windows.Forms.DataObject.ContainsAudio%2A>, чтобы определить, содержит ли объект данных звуковые данные перед их получением с помощью метода <xref:System.Windows.Forms.DataObject.GetAudioStream%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="audioStream" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetAudioStream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет объект в <see cref="T:System.Windows.Forms.DataObject" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : obj -&gt; unit&#xA;override this.SetData : obj -&gt; unit" Usage="dataObject.SetData data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Сохраняемые данные.</param>
        <summary>Добавляет указанный объект в <see cref="T:System.Windows.Forms.DataObject" />, используя тип объекта в качестве формата данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 Если вы не знакомы с форматом целевого приложения, вы можете хранить данные в нескольких форматах с помощью этого метода. Данные, хранимые с помощью этого метода, можно преобразовать в совместимый формат при извлечении.  
  
 Перегрузка <xref:System.Windows.Forms.DataObject.SetData%28System.Object%29> сохраняет значение `data` в формате, который он определяет, вызывая метод <xref:System.Object.GetType%2A?displayProperty=nameWithType>. Если `data` реализует интерфейс <xref:System.Runtime.Serialization.ISerializable>, эта перегрузка также сохраняет значение в формате <xref:System.Windows.DataFormats.Serializable>.  
  
   
  
## Examples  
 В следующем примере кода данные сохраняются в <xref:System.Windows.Forms.DataObject>. Во-первых, создается новый <xref:System.Windows.Forms.DataObject> и компонент сохраняется в нем. Затем данные извлекаются путем указания класса. Результат отображается в текстовом поле.  
  
 Для этого кода требуется, чтобы `textBox1` был создан.  
  
 [!code-cpp[Classic DataObject.SetData3 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData3 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData3 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="N:System.Runtime.Serialization" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : string * obj -&gt; unit&#xA;override this.SetData : string * obj -&gt; unit" Usage="dataObject.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Формат, связанный с данными. Сведения о предварительно определенных форматах см. в разделе <see cref="T:System.Windows.Forms.DataFormats" />.</param>
        <param name="data">Сохраняемые данные.</param>
        <summary>Добавляет указанный объект в <see cref="T:System.Windows.Forms.DataObject" />, используя заданный формат.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 Если вы не знакомы с форматом целевого приложения, вы можете хранить данные в нескольких форматах с помощью этого метода.  
  
 Данные, хранимые с помощью этого метода, можно преобразовать в совместимый формат при извлечении.  
  
   
  
## Examples  
 В следующем примере кода данные сохраняются в <xref:System.Windows.Forms.DataObject>, указывая его формат в Юникоде.  
  
 Затем данные извлекаются путем указания формата текста, поскольку по умолчанию данные преобразуются, когда последний формат является совместимым. Результат отображается в текстовом поле.  
  
 Для этого кода требуется, чтобы `textBox1` был создан.  
  
 [!code-cpp[Classic DataObject.SetData1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData1 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (Type format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(class System.Type format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (format As Type, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(Type ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : Type * obj -&gt; unit&#xA;override this.SetData : Type * obj -&gt; unit" Usage="dataObject.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Тип <see cref="T:System.Type" />, представляющий формат, связанный с данными.</param>
        <param name="data">Сохраняемые данные.</param>
        <summary>Добавляет указанный объект в <see cref="T:System.Windows.Forms.DataObject" />, используя заданный тип в качестве формата.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 Если вы не знакомы с форматом целевого приложения, вы можете хранить данные в нескольких форматах с помощью этого метода.  
  
 Данные, хранимые с помощью этого метода, можно преобразовать в совместимый формат при извлечении.  
  
   
  
## Examples  
 В следующем примере кода данные сохраняются в <xref:System.Windows.Forms.DataObject> с использованием <xref:System.Type> в качестве формата данных. Затем данные извлекаются путем вызова <xref:System.Windows.Forms.DataObject.GetData%2A> использование <xref:System.Type> для указания формата данных. Результат отображается в текстовом поле.  
  
 Для этого кода требуется, чтобы `textBox1` был создан.  
  
 [!code-cpp[Classic DataObject.SetData2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData2 Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public virtual void SetData (string format, bool autoConvert, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, bool autoConvert, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetData (format As String, autoConvert As Boolean, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::String ^ format, bool autoConvert, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : string * bool * obj -&gt; unit&#xA;override this.SetData : string * bool * obj -&gt; unit" Usage="dataObject.SetData (format, autoConvert, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Формат, связанный с данными. Сведения о предварительно определенных форматах см. в разделе <see cref="T:System.Windows.Forms.DataFormats" />.</param>
        <param name="autoConvert">Значение <see langword="true" />, если необходимо разрешить преобразование данных в другой формат; в противном случае — значение <see langword="false" />.</param>
        <param name="data">Сохраняемые данные.</param>
        <summary>Добавляет указанный объект в <see cref="T:System.Windows.Forms.DataObject" /> в заданном формате и указывает возможность преобразования данных в другой формат.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]

 Если вы не знакомы с форматом целевого приложения, вы можете хранить данные в нескольких форматах с помощью этого метода.  
  
   
  
## Examples  
 В следующем примере кода данные сохраняются в <xref:System.Windows.Forms.DataObject> и указывает, что данные могут быть получены только в собственном формате.  
  
 Сначала создается новый <xref:System.Windows.Forms.DataObject>. Данные в формате Юникода хранятся в <xref:System.Windows.Forms.DataObject>, для `autoConvert` задано значение `false`.  
  
 Затем <xref:System.Windows.Forms.DataObject> запрашивается список доступных форматов данных. Возвращается только формат Юникода, хотя данные в Юникоде могут быть преобразованы в текст и другие форматы.  
  
 Для этого кода требуется, чтобы `textBox1` был создан.  
  
 [!code-cpp[Classic DataObject.SetData Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DataObject.SetData Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DataObject.SetData Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DataObject.SetData Example/CS/source.cs#1)]
 [!code-vb[Classic DataObject.SetData Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DataObject.SetData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="SetFileDropList">
      <MemberSignature Language="C#" Value="public virtual void SetFileDropList (System.Collections.Specialized.StringCollection filePaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFileDropList(class System.Collections.Specialized.StringCollection filePaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetFileDropList (filePaths As StringCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetFileDropList(System::Collections::Specialized::StringCollection ^ filePaths);" />
      <MemberSignature Language="F#" Value="abstract member SetFileDropList : System.Collections.Specialized.StringCollection -&gt; unit&#xA;override this.SetFileDropList : System.Collections.Specialized.StringCollection -&gt; unit" Usage="dataObject.SetFileDropList filePaths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePaths" Type="System.Collections.Specialized.StringCollection" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="filePaths">Коллекция <see cref="T:System.Collections.Specialized.StringCollection" />, содержащая имена файлов.</param>
        <summary>Добавляет в объект данных коллекцию имен файлов в формате <see cref="F:System.Windows.Forms.DataFormats.FileDrop" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Раскрывающийся список файлов представляет собой коллекцию строк, содержащих сведения о пути для файлов.  
  
 Раскрывающийся список файлов хранится в объекте данных в виде массива <xref:System.String>. Этот метод преобразует `filePaths` в массив <xref:System.String>, прежде чем добавлять его в объект данных.  
  
 Чтобы получить раскрывающийся список файлов из объекта данных, сначала используйте метод <xref:System.Windows.Forms.DataObject.ContainsFileDropList%2A>, чтобы определить, содержит ли объект данных данные в этом формате перед их извлечением с помощью метода <xref:System.Windows.Forms.DataObject.GetFileDropList%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="filePaths" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFileDropList" />
      </Docs>
    </Member>
    <Member MemberName="SetImage">
      <MemberSignature Language="C#" Value="public virtual void SetImage (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetImage(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetImage(System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetImage(System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="abstract member SetImage : System.Drawing.Image -&gt; unit&#xA;override this.SetImage : System.Drawing.Image -&gt; unit" Usage="dataObject.SetImage image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="image">Объект <see cref="T:System.Drawing.Image" />, который добавляется в объект данных.</param>
        <summary>Добавляет объект <see cref="T:System.Drawing.Image" /> в объект данных в формате <see cref="F:System.Windows.Forms.DataFormats.Bitmap" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы получить данные изображения из объекта данных, сначала используйте метод <xref:System.Windows.Forms.DataObject.ContainsImage%2A>, чтобы определить, содержит ли объект данных изображение, прежде чем получить его с помощью метода <xref:System.Windows.Forms.DataObject.GetImage%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="image" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.DataObject.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetImage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет текст в объект данных.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public virtual void SetText (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetText(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetText (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetText(System::String ^ textData);" />
      <MemberSignature Language="F#" Value="abstract member SetText : string -&gt; unit&#xA;override this.SetText : string -&gt; unit" Usage="dataObject.SetText textData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="textData">Текст для добавления в объект данных.</param>
        <summary>Добавляет в объект данных текст в формате <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы получить текстовые данные из объекта данных, сначала используйте метод <xref:System.Windows.Forms.DataObject.ContainsText%2A>, чтобы определить, содержит ли объект данных изображение, прежде чем получить его с помощью метода <xref:System.Windows.Forms.DataObject.GetText%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="textData" /> имеет значение <see langword="null" /> или <see cref="F:System.String.Empty" />.</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public virtual void SetText (string textData, System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetText(string textData, valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.SetText(System.String,System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetText (textData As String, format As TextDataFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetText(System::String ^ textData, System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="abstract member SetText : string * System.Windows.Forms.TextDataFormat -&gt; unit&#xA;override this.SetText : string * System.Windows.Forms.TextDataFormat -&gt; unit" Usage="dataObject.SetText (textData, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="textData">Текст для добавления в объект данных.</param>
        <param name="format">Одно из значений <see cref="T:System.Windows.Forms.TextDataFormat" />.</param>
        <summary>Добавляет в объект данных текстовые данные в формате, указанном заданным значением <see cref="T:System.Windows.Forms.TextDataFormat" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы получить текстовые данные из объекта данных, сначала используйте метод <xref:System.Windows.Forms.DataObject.ContainsText%2A>, чтобы определить, содержит ли объект данных изображение, прежде чем получить его с помощью метода <xref:System.Windows.Forms.DataObject.GetText%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="textData" /> имеет значение <see langword="null" /> или <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="format" /> не является допустимым значением <see cref="T:System.Windows.Forms.TextDataFormat" />.</exception>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.DataObject.GetText" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise">
      <MemberSignature Language="C#" Value="int IDataObject.DAdvise (ref System.Runtime.InteropServices.ComTypes.FORMATETC pFormatetc, System.Runtime.InteropServices.ComTypes.ADVF advf, System.Runtime.InteropServices.ComTypes.IAdviseSink pAdvSink, out int pdwConnection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pFormatetc, valuetype System.Runtime.InteropServices.ComTypes.ADVF advf, class System.Runtime.InteropServices.ComTypes.IAdviseSink pAdvSink, [out] int32&amp; pdwConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System::Runtime::InteropServices::ComTypes::FORMATETC % pFormatetc, System::Runtime::InteropServices::ComTypes::ADVF advf, System::Runtime::InteropServices::ComTypes::IAdviseSink ^ pAdvSink, [Runtime::InteropServices::Out] int % pdwConnection) = System::Runtime::InteropServices::ComTypes::IDataObject::DAdvise;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pFormatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="advf" Type="System.Runtime.InteropServices.ComTypes.ADVF" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="pAdvSink" Type="System.Runtime.InteropServices.ComTypes.IAdviseSink" Index="2" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="pdwConnection" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="pFormatetc">Структура <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, переданная ссылкой, определяющая формат, целевое устройство, аспект и среду передачи, которые будут использоваться для будущих уведомлений.</param>
        <param name="advf">Одно из значений <see cref="T:System.Runtime.InteropServices.ComTypes.ADVF" />, задающее группу флагов для контролирования вспомогательного соединения.</param>
        <param name="pAdvSink">Указатель на интерфейс <see cref="T:System.Runtime.InteropServices.ComTypes.IAdviseSink" /> в приемнике уведомлений, который будет получать уведомления об изменениях.</param>
        <param name="pdwConnection">При возвращении данного метода содержит указатель на маркер DWORD, определяющий это соединение. Позднее этот маркер можно использовать для удаления вспомогательного соединения, передав его в <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)" />. Если это значение равно нулю, соединение не было установлено. Этот параметр передается неинициализированным.</param>
        <summary>Создает соединение между объектом данных и приемником уведомлений. Этот метод вызывается объектом, который поддерживает приемник уведомлений и позволяет уведомлять приемник об изменениях в данных объекта.</summary>
        <returns>Этот метод поддерживает стандартные возвращаемые значения E_INVALIDARG, E_UNEXPECTED и E_OUTOFMEMORY, а также следующие. 
 <list type="table"><listheader><term> Значение 
 </term><description> Описание 
 </description></listheader><item><term> S_OK 
 </term><description> Было создано соединение для получения рекомендаций.  
  
 </description></item><item><term> E_NOTIMPL 
 </term><description> Этот метод не был реализован в объекте данных.  
  
 </description></item><item><term> DV_E_LINDEX 
 </term><description> Недопустимое значение для <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; в настоящий момент поддерживается только значение -1.  
  
 </description></item><item><term> DV_E_FORMATETC 
 </term><description> Недопустимое значение для параметра <paramref name="pFormatetc" />.  
  
 </description></item><item><term> OLE_E_ADVISENOTSUPPORTED 
 </term><description> Объект данных не поддерживает уведомление об изменении.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это член является явной реализацией члена интерфейса. Он может использоваться, только когда объект класса <xref:System.Windows.Forms.DataObject> приведен к типу интерфейса <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для вызова неуправляемого кода. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise">
      <MemberSignature Language="C#" Value="void IDataObject.DUnadvise (int dwConnection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(int32 dwConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DUnadvise(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub DUnadvise (dwConnection As Integer) Implements IDataObject.DUnadvise" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(int dwConnection) = System::Runtime::InteropServices::ComTypes::IDataObject::DUnadvise;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwConnection" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dwConnection">маркер DWORD, задающий соединение для удаления. Используйте значение, возвращенное <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" /> при первоначальной настройке соединения.</param>
        <summary>Разрывает соединение уведомления, которое было ранее установлено.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это член является явной реализацией члена интерфейса. Он может использоваться, только когда объект класса <xref:System.Windows.Forms.DataObject> приведен к типу интерфейса <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для вызова неуправляемого кода. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise">
      <MemberSignature Language="C#" Value="int IDataObject.EnumDAdvise (out System.Runtime.InteropServices.ComTypes.IEnumSTATDATA enumAdvise);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise([out] class System.Runtime.InteropServices.ComTypes.IEnumSTATDATA&amp; enumAdvise) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumDAdvise(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)" />
      <MemberSignature Language="VB.NET" Value="Function EnumDAdvise (ByRef enumAdvise As IEnumSTATDATA) As Integer Implements IDataObject.EnumDAdvise" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise([Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::IEnumSTATDATA ^ % enumAdvise) = System::Runtime::InteropServices::ComTypes::IDataObject::EnumDAdvise;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumAdvise" Type="System.Runtime.InteropServices.ComTypes.IEnumSTATDATA" RefType="out" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="enumAdvise">При возвращении данного метода содержит компонент <see cref="T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA" />, получающий указатель интерфейса на новый объект перечислителя. Если при реализации для параметра <paramref name="enumAdvise" /> задается значение <see langword="null" />, в это время отсутствуют соединения с приемниками уведомлений. Этот параметр передается неинициализированным.</param>
        <summary>Создает объект, который может использоваться для перечисления текущих соединений для рекомендаций.</summary>
        <returns>Этот метод поддерживает стандартное возвращаемое значение E_OUTOFMEMORY, а также следующие.  
  
 <list type="table"><listheader><term> Значение  
  
 </term><description> Описание  
  
 </description></listheader><item><term> S_OK  
  
 </term><description> Экземпляр объекта перечисления успешно создан, или отсутствуют соединения.  
  
 </description></item><item><term> OLE_E_ADVISENOTSUPPORTED  
  
 </term><description> Этот объект не поддерживает уведомления о рекомендациях.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это член является явной реализацией члена интерфейса. Он может использоваться, только когда объект класса <xref:System.Windows.Forms.DataObject> приведен к типу интерфейса <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для вызова неуправляемого кода. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc">
      <MemberSignature Language="C#" Value="System.Runtime.InteropServices.ComTypes.IEnumFORMATETC IDataObject.EnumFormatEtc (System.Runtime.InteropServices.ComTypes.DATADIR dwDirection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Runtime.InteropServices.ComTypes.IEnumFORMATETC System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(valuetype System.Runtime.InteropServices.ComTypes.DATADIR dwDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" />
      <MemberSignature Language="VB.NET" Value="Function EnumFormatEtc (dwDirection As DATADIR) As IEnumFORMATETC Implements IDataObject.EnumFormatEtc" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Runtime::InteropServices::ComTypes::IEnumFORMATETC ^ System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System::Runtime::InteropServices::ComTypes::DATADIR dwDirection) = System::Runtime::InteropServices::ComTypes::IDataObject::EnumFormatEtc;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.ComTypes.IEnumFORMATETC</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwDirection" Type="System.Runtime.InteropServices.ComTypes.DATADIR" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="dwDirection">Одно из значений <see cref="T:System.Runtime.InteropServices.ComTypes.DATADIR" />, определяющее направление данных.</param>
        <summary>Создает объект для перечисления структур <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> для объекта данных. Эти структуры используются в вызовах <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> или <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />.</summary>
        <returns>Этот метод поддерживает стандартные возвращаемые значения E_INVALIDARG и E_OUTOFMEMORY, а также следующие. 
 <list type="table"><listheader><term> Значение 
 </term><description> Описание 
 </description></listheader><item><term> S_OK 
 </term><description> Объект перечисления был успешно создан.  
  
 </description></item><item><term> E_NOTIMPL 
 </term><description> Направление, заданное параметром <paramref name="direction" />, не поддерживается.  
  
 </description></item><item><term> OLE_S_USEREG 
 </term><description> Требует, чтобы OLE перечисляли форматы из реестра.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это член является явной реализацией члена интерфейса. Он может использоваться, только когда объект класса <xref:System.Windows.Forms.DataObject> приведен к типу интерфейса <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для вызова неуправляемого кода. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc">
      <MemberSignature Language="C#" Value="int IDataObject.GetCanonicalFormatEtc (ref System.Runtime.InteropServices.ComTypes.FORMATETC pformatetcIn, out System.Runtime.InteropServices.ComTypes.FORMATETC pformatetcOut);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pformatetcIn, [out] valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pformatetcOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" />
      <MemberSignature Language="VB.NET" Value="Function GetCanonicalFormatEtc (ByRef pformatetcIn As FORMATETC, ByRef pformatetcOut As FORMATETC) As Integer Implements IDataObject.GetCanonicalFormatEtc" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System::Runtime::InteropServices::ComTypes::FORMATETC % pformatetcIn, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::FORMATETC % pformatetcOut) = System::Runtime::InteropServices::ComTypes::IDataObject::GetCanonicalFormatEtc;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pformatetcIn" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="pformatetcOut" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="out" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="pformatetcIn">Указатель на структуру <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, переданную ссылкой, определяющую формат, среду передачи и целевое устройство, которые вызывающий объект хотел бы использовать для извлечения данных в последующем вызове, например <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. В этом случае элемент <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> не важен и должен быть проигнорирован.</param>
        <param name="pformatetcOut">Возвращаемые этим методом данные содержат указатель на структуру <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, которая содержит наиболее общие сведения для определенной прорисовки, делая его канонически эквивалентным <c>formatetcIn</c>. Вызывающий объект должен выделить эту структуру, а метод <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" /> должен заполнить данные. Для извлечения данных в последующем вызове, например <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, вызывающий объект использует предоставленное значение параметра <c>formatOut</c>, если предоставленное значение не равно <see langword="null" />. Это значение равняется <see langword="null" />, если метод возвращает <see langword="DATA_S_SAMEFORMATETC" />. В этом случае элемент <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> не важен и должен быть проигнорирован. Этот параметр передается неинициализированным.</param>
        <summary>Предоставляет стандартную структуру <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, которая логически эквивалентна более сложной структуре. Этот метод применяется, чтобы определить, будут ли две различные структуры <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> возвращать одинаковые данные, что позволяет избежать ненужной повторной отрисовки.</summary>
        <returns>Этот метод поддерживает стандартные возвращаемые значения E_INVALIDARG, E_UNEXPECTED и E_OUTOFMEMORY, а также следующие. 
 <list type="table"><listheader><term> Значение 
 </term><description> Описание 
 </description></listheader><item><term> S_OK 
 </term><description> Возвращенная структура <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> отличается от структуры, которая была передана.  
  
 </description></item><item><term> DATA_S_SAMEFORMATETC 
 </term><description> Структуры <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> — те же самые, и значение <see langword="null" /> возвращается в параметре <paramref name="formatOut" />.  
  
 </description></item><item><term> DV_E_LINDEX 
 </term><description> Недопустимое значение для <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; в настоящий момент поддерживается только значение -1.  
  
 </description></item><item><term> DV_E_FORMATETC 
 </term><description> Недопустимое значение для параметра <paramref name="pFormatetc" />.  
  
 </description></item><item><term> OLE_E_NOTRUNNING 
 </term><description> Приложение не выполняется.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это член является явной реализацией члена интерфейса. Он может использоваться, только когда объект класса <xref:System.Windows.Forms.DataObject> приведен к типу интерфейса <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для вызова неуправляемого кода. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetData">
      <MemberSignature Language="C#" Value="void IDataObject.GetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc, out System.Runtime.InteropServices.ComTypes.STGMEDIUM medium);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.GetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc, [out] valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; medium) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetData (ByRef formatetc As FORMATETC, ByRef medium As STGMEDIUM) Implements IDataObject.GetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System::Runtime::InteropServices::ComTypes::FORMATETC % formatetc, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::STGMEDIUM % medium) = System::Runtime::InteropServices::ComTypes::IDataObject::GetData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="medium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM" RefType="out" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="formatetc">Указатель на структуру <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, переданную ссылкой, которая определяет формат, среду передачи и целевое устройство для использования при передаче данных. С помощью логического оператора OR можно задать более одной среды передачи, разрешив методу выбирать лучшую среду передачи среди заданных.</param>
        <param name="medium">При возвращении данного метода содержит указатель на структуру <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, задающий среду хранения, содержащую возвращенные данные посредством своего элемента <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed" />, и ответственность за освобождение среды передачи через значение своего элемента <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" />. Если <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> равняется <see langword="null" />, получатель среды передачи отвечает за ее освобождение; в противном случае <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> указывает на интерфейс <see langword="IUnknown" /> в соответствующем объекте, так чтобы можно было вызвать его метод <see langword="Release" />. Среда передачи должна быть выделена и заполнена с помощью <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. Этот параметр передается неинициализированным.</param>
        <summary>Получает данные из исходного объекта данных. Метод <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, который вызывается объектом-получателем данных, обрабатывает данные, описанные в заданной структуре <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, и передает их через заданную структуру <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />. Затем вызывающий объект несет ответственность за освобождение структуры <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это член является явной реализацией члена интерфейса. Он может использоваться, только когда объект класса <xref:System.Windows.Forms.DataObject> приведен к типу интерфейса <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">Недостаточно памяти для выполнения этой операции.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для вызова неуправляемого кода. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere">
      <MemberSignature Language="C#" Value="void IDataObject.GetDataHere (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc, ref System.Runtime.InteropServices.ComTypes.STGMEDIUM medium);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc, valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; medium) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetDataHere (ByRef formatetc As FORMATETC, ByRef medium As STGMEDIUM) Implements IDataObject.GetDataHere" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System::Runtime::InteropServices::ComTypes::FORMATETC % formatetc, System::Runtime::InteropServices::ComTypes::STGMEDIUM % medium) = System::Runtime::InteropServices::ComTypes::IDataObject::GetDataHere;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="medium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM" RefType="ref" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="formatetc">Указатель на структуру <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, переданную ссылкой, которая определяет формат, среду передачи и целевое устройство для использования при передаче данных. Только одна среда может быть задана в <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" />, и только следующие значения <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> являются действительными: <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM" />, <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL" /> или <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE" />.</param>
        <param name="medium">Компонент <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, переданный ссылкой, который определяет среду хранения, содержащую передаваемые данные. Среда передачи должна быть выделена вызывающим объектом и заполнена с помощью <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />. Также вызывающий объект должен освободить среду передачи. При реализации этого метода должно всегда предоставляться значение <see langword="null" /> для элемента <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> структуры <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, на которую указывает этот параметр.</param>
        <summary>Получает данные из исходного объекта данных. Этот метод, который вызывается объектом-получателем данных, отличается от метода <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, в котором вызывающий объект должен выделить и освободить заданную среду хранения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это член является явной реализацией члена интерфейса. Он может использоваться, только когда объект класса <xref:System.Windows.Forms.DataObject> приведен к типу интерфейса <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для вызова неуправляемого кода. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData">
      <MemberSignature Language="C#" Value="int IDataObject.QueryGetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)" />
      <MemberSignature Language="VB.NET" Value="Function QueryGetData (ByRef formatetc As FORMATETC) As Integer Implements IDataObject.QueryGetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(System::Runtime::InteropServices::ComTypes::FORMATETC % formatetc) = System::Runtime::InteropServices::ComTypes::IDataObject::QueryGetData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="formatetc">Указатель на структуру <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, переданную ссылкой, которая определяет формат, среду передачи и целевое устройство, которые должны использоваться для запроса.</param>
        <summary>Определяет, способен ли объект данных выполнять отрисовку данных, описанных в структуре <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />. Объекты, пытающиеся выполнять операцию вставки или перетаскивания, могут вызывать этот метод перед вызовом <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, чтобы получить указание о том, может ли операция быть успешной.</summary>
        <returns>Этот метод поддерживает стандартные возвращаемые значения E_INVALIDARG, E_UNEXPECTED и E_OUTOFMEMORY, а также следующие. 
 <list type="table"><listheader><term> Значение 
 </term><description> Описание 
 </description></listheader><item><term> S_OK 
 </term><description> Последующий вызов <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />, возможно, будет успешным.  
  
 </description></item><item><term> DV_E_LINDEX 
 </term><description> Недопустимое значение для <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" />; в настоящий момент поддерживается только значение -1.  
  
 </description></item><item><term> DV_E_FORMATETC 
 </term><description> Недопустимое значение для параметра <paramref name="pFormatetc" />.  
  
 </description></item><item><term> DV_E_TYMED 
 </term><description> Недопустимое значение <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed" />.  
  
 </description></item><item><term> DV_E_DVASPECT 
 </term><description> Недопустимое значение <see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect" />.  
  
 </description></item><item><term> OLE_E_NOTRUNNING 
 </term><description> Приложение не выполняется.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это член является явной реализацией члена интерфейса. Он может использоваться, только когда объект класса <xref:System.Windows.Forms.DataObject> приведен к типу интерфейса <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для вызова неуправляемого кода. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.SetData">
      <MemberSignature Language="C#" Value="void IDataObject.SetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC pFormatetcIn, ref System.Runtime.InteropServices.ComTypes.STGMEDIUM pmedium, bool fRelease);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.SetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pFormatetcIn, valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; pmedium, bool fRelease) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Sub SetData (ByRef pFormatetcIn As FORMATETC, ByRef pmedium As STGMEDIUM, fRelease As Boolean) Implements IDataObject.SetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System::Runtime::InteropServices::ComTypes::FORMATETC % pFormatetcIn, System::Runtime::InteropServices::ComTypes::STGMEDIUM % pmedium, bool fRelease) = System::Runtime::InteropServices::ComTypes::IDataObject::SetData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pFormatetcIn" Type="System.Runtime.InteropServices.ComTypes.FORMATETC" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="pmedium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM" RefType="ref" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="fRelease" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="pFormatetcIn">Структура <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" />, переданная ссылкой, которая определяет формат, используемый объектом данных при интерпретации данных, содержащихся в среде хранения.</param>
        <param name="pmedium">Структура <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />, переданная ссылкой, которая определяет среду хранения, в которой передаются данные.</param>
        <param name="fRelease">Значение <see langword="true" /> задает, что вызванный объект данных, который реализует <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />, владеет средой хранения после возвращения вызова. Это означает, что объект данных должен освободить среду после ее использования, вызвав функцию <see langword="ReleaseStgMedium" />. Значение <see langword="false" /> для указания того, что вызывающий объект сохраняет владение средой хранения, а вызванный объект данных использует среду хранения только во время выполнения вызова.</param>
        <summary>Передает данные в объект, реализующий этот метод. Этот метод вызывается объектом, содержащим источник данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это член является явной реализацией члена интерфейса. Он может использоваться, только когда объект класса <xref:System.Windows.Forms.DataObject> приведен к типу интерфейса <xref:System.Runtime.InteropServices.ComTypes.IDataObject>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Этот метод не поддерживает тип базового объекта данных.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для вызова неуправляемого кода. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>
