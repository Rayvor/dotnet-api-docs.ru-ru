<Type Name="BindingManagerBase" FullName="System.Windows.Forms.BindingManagerBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b2fa7938e115d94938337372cd1ff925941cdda4" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75175278" /></Metadata><TypeSignature Language="C#" Value="public abstract class BindingManagerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BindingManagerBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.BindingManagerBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BindingManagerBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingManagerBase abstract" />
  <TypeSignature Language="F#" Value="type BindingManagerBase = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8d7b7-101">Управляет всеми объектами <see cref="T:System.Windows.Forms.Binding" />, которые привязаны к одному источнику данных и элементу данных.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-101">Manages all <see cref="T:System.Windows.Forms.Binding" /> objects that are bound to the same data source and data member.</span></span> <span data-ttu-id="8d7b7-102">Этот класс является абстрактным.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-102">This class is abstract.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7b7-103"><xref:System.Windows.Forms.BindingManagerBase> позволяет синхронизировать элементы управления с привязкой к данным в форме Windows Forms, привязанные к одному и тому же источнику данных.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-103">The <xref:System.Windows.Forms.BindingManagerBase> enables the synchronization of data-bound controls on a Windows Form that are bound to the same data source.</span></span> <span data-ttu-id="8d7b7-104">(Дополнительные сведения о простой привязке элемента управления к источнику данных см. в разделе класс <xref:System.Windows.Forms.Binding>.) Например, предположим, что форма содержит два элемента управления <xref:System.Windows.Forms.TextBox>, которые привязаны к одному и тому же источнику данных, но и к разным столбцам.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-104">(For more information about simple binding a control to a data source, see the <xref:System.Windows.Forms.Binding> class.) For example, suppose that a form contains two <xref:System.Windows.Forms.TextBox> controls that are bound to the same data source but to different columns.</span></span> <span data-ttu-id="8d7b7-105">Источником данных может быть <xref:System.Data.DataTable>, содержащий имена клиентов, тогда как столбцы могут содержать имя и фамилию.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-105">The data source might be a <xref:System.Data.DataTable> that contains customer names, while the columns might contain the first and last names.</span></span> <span data-ttu-id="8d7b7-106">Эти два элемента управления должны быть синхронизированы, чтобы отображались правильные имена и фамилии для одного и того же клиента.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-106">The two controls must be synchronized in order to display the correct first and last names together for the same customer.</span></span> <span data-ttu-id="8d7b7-107"><xref:System.Windows.Forms.CurrencyManager>, который наследует от класса <xref:System.Windows.Forms.BindingManagerBase>, выполняет синхронизацию, сохраняя указатель на текущий элемент в источнике данных.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-107">The <xref:System.Windows.Forms.CurrencyManager>, which inherits from the <xref:System.Windows.Forms.BindingManagerBase> class, accomplishes this synchronization by maintaining a pointer to the current item in the data source.</span></span> <span data-ttu-id="8d7b7-108">Элементы управления <xref:System.Windows.Forms.TextBox> привязаны к текущему элементу, поэтому они отображают информацию для одной и той же строки.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-108">The <xref:System.Windows.Forms.TextBox> controls are bound to the current item so they display the information for the same row.</span></span> <span data-ttu-id="8d7b7-109">При изменении текущего элемента <xref:System.Windows.Forms.CurrencyManager> уведомляет все привязанные элементы управления, чтобы они могли обновить свои данные.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-109">When the current item changes, the <xref:System.Windows.Forms.CurrencyManager> notifies all the bound controls so that they can refresh their data.</span></span> <span data-ttu-id="8d7b7-110">Кроме того, можно задать свойство <xref:System.Windows.Forms.BindingManagerBase.Position%2A>, чтобы указать строку в <xref:System.Data.DataTable>, на которую указывают элементы управления.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-110">Furthermore, you can set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property to specify the row in the <xref:System.Data.DataTable> that the controls point to.</span></span> <span data-ttu-id="8d7b7-111">Чтобы определить, сколько строк существует в источнике данных, используйте свойство <xref:System.Windows.Forms.BindingManagerBase.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-111">To determine how many rows exist in the data source, use the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property.</span></span>  
  
 <span data-ttu-id="8d7b7-112"><xref:System.Windows.Forms.CurrencyManager> необходимо, так как источники данных не обязательно поддерживают указатель текущего элемента.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-112">The <xref:System.Windows.Forms.CurrencyManager> is necessary because data sources do not necessarily maintain a current-item pointer.</span></span> <span data-ttu-id="8d7b7-113">Например, массивы и <xref:System.Collections.ArrayList> объекты могут быть источниками данных, но у них нет свойства, возвращающего текущий элемент.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-113">For instance, arrays and <xref:System.Collections.ArrayList> objects can be data sources, but they do not have a property that returns the current item.</span></span> <span data-ttu-id="8d7b7-114">Чтобы получить текущий элемент, используйте свойство <xref:System.Windows.Forms.BindingManagerBase.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-114">To get the current item, use the <xref:System.Windows.Forms.BindingManagerBase.Current%2A> property.</span></span>  
  
 <span data-ttu-id="8d7b7-115"><xref:System.Windows.Forms.PropertyManager> также наследуется от <xref:System.Windows.Forms.BindingManagerBase>и используется для поддержания текущего свойства объекта, а не свойства текущего объекта в источнике данных.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-115">The <xref:System.Windows.Forms.PropertyManager> also inherits from the <xref:System.Windows.Forms.BindingManagerBase>, and it is used to maintain the current property of an object, rather than the property of a current object in a data source.</span></span> <span data-ttu-id="8d7b7-116">По этой причине попытка задать свойство <xref:System.Windows.Forms.BindingManagerBase.Position%2A> или <xref:System.Windows.Forms.BindingManagerBase.Count%2A> для <xref:System.Windows.Forms.PropertyManager> не оказывает никакого влияния.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-116">For this reason, trying to set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> or <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property for a <xref:System.Windows.Forms.PropertyManager> has no effect.</span></span>  
  
 <span data-ttu-id="8d7b7-117">Чтобы создать <xref:System.Windows.Forms.BindingManagerBase>, используйте класс <xref:System.Windows.Forms.BindingContext>, который возвращает либо <xref:System.Windows.Forms.CurrencyManager>, либо <xref:System.Windows.Forms.PropertyManager>в зависимости от управляемого источника данных.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-117">To create a <xref:System.Windows.Forms.BindingManagerBase>, use the <xref:System.Windows.Forms.BindingContext> class, which returns either a <xref:System.Windows.Forms.CurrencyManager> or a <xref:System.Windows.Forms.PropertyManager>, depending on the data source being managed.</span></span>  
  
 <span data-ttu-id="8d7b7-118">Программистам решений рекомендуется привязывать элементы управления непосредственно к <xref:System.Windows.Forms.BindingSource> компоненту, который выступает в качестве источника данных и соединителя данных для фактического целевого источника данных.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-118">Solutions programmers are encouraged to bind controls directly to a <xref:System.Windows.Forms.BindingSource> component, which acts as both a data source and data connector to the actual target data source.</span></span> <span data-ttu-id="8d7b7-119"><xref:System.Windows.Forms.BindingSource> значительно упрощает простую и сложную привязку данных, в том числе управление валютой между элементом управления и его целью.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-119"><xref:System.Windows.Forms.BindingSource> greatly simplifies both simple and complex data binding, including managing currency between the control and its target.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7b7-120">В следующем примере кода используется <xref:System.Windows.Forms.BindingContext> для возврата <xref:System.Windows.Forms.BindingManagerBase> для определенного источника данных.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-120">The following code example uses the <xref:System.Windows.Forms.BindingContext> to return a <xref:System.Windows.Forms.BindingManagerBase> for a specific data source.</span></span> <span data-ttu-id="8d7b7-121">(В этом примере предполагается, что вы объявили `myBindingManagerBase` в разделе Declarations модуля.) Затем в примере добавляются делегаты событий к событиям <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> и <xref:System.Windows.Forms.BindingManagerBase.PositionChanged>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-121">(The example assumes you have declared `myBindingManagerBase` in the Declarations section of the module.) The example then adds event delegates to the <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> and <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> events.</span></span> <span data-ttu-id="8d7b7-122">Наконец, в примере содержатся четыре метода (`MoveNext`, `MovePrevious`, `MoveFirst`и `MoveLast`), которые увеличивают или уменьшают значение свойства <xref:System.Windows.Forms.BindingManagerBase.Position%2A> и устанавливают для <xref:System.Windows.Forms.BindingManagerBase.Position%2A> первую или последнюю строку в списке.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-122">Lastly, the example contains four methods (`MoveNext`, `MovePrevious`, `MoveFirst`, and `MoveLast`) that increment or decrement the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property, and set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> to the first or last row in the list.</span></span> <span data-ttu-id="8d7b7-123">Последняя строка в списке определяется с помощью свойства <xref:System.Windows.Forms.BindingManagerBase.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-123">The last row in the list is determined by using the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="8d7b7-124">При наследовании от <see cref="T:System.Windows.Forms.BindingManagerBase" />необходимо переопределить следующие абстрактные члены: <see cref="M:System.Windows.Forms.BindingManagerBase.AddNew" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Count" />, <see cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Current" />, <see cref="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />, <see cref="M:System.Windows.Forms.BindingManagerBase.GetItemProperties" />, <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Position" />, <see cref="M:System.Windows.Forms.BindingManagerBase.RemoveAt(System.Int32)" />, <see cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />, <see cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />и <see cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-124">When you inherit from <see cref="T:System.Windows.Forms.BindingManagerBase" />, you must override the following abstract members: <see cref="M:System.Windows.Forms.BindingManagerBase.AddNew" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Count" />, <see cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Current" />, <see cref="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />, <see cref="M:System.Windows.Forms.BindingManagerBase.GetItemProperties" />, <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Position" />, <see cref="M:System.Windows.Forms.BindingManagerBase.RemoveAt(System.Int32)" />, <see cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />, <see cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />, and <see cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />.</span></span></para></block>
    <altmember cref="T:System.Windows.Forms.BindingSource" />
    <altmember cref="T:System.Windows.Forms.BindingContext" />
    <altmember cref="T:System.Windows.Forms.CurrencyManager" />
    <altmember cref="T:System.Windows.Forms.PropertyManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingManagerBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingManagerBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d7b7-125">Инициализация нового экземпляра класса <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-125">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingManagerBase" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7b7-126">Конструктор без параметров задает для свойства <xref:System.Windows.Forms.BindingManagerBase.Bindings%2A> значение `null`.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-126">The parameterless constructor sets the <xref:System.Windows.Forms.BindingManagerBase.Bindings%2A> property to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public abstract void AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddNew();" />
      <MemberSignature Language="F#" Value="abstract member AddNew : unit -&gt; unit" Usage="bindingManagerBase.AddNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d7b7-127">При переопределении в производном классе добавляет новый элемент в базовый список.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-127">When overridden in a derived class, adds a new item to the underlying list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7b7-128">Метод <xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> добавляет новый элемент в базовый список с помощью конструктора без параметров для типа этого элемента.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-128">The <xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> method adds a new item to the underlying list by using the parameterless constructor for that item's type.</span></span> <span data-ttu-id="8d7b7-129"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> предназначено в первую очередь для использования программистами, которые добавляют сложную поддержку привязки данных в свой пользовательский компонент.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-129"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> is intended primarily to be used by programmers adding complex data-binding support to their custom component.</span></span>  
  
 <span data-ttu-id="8d7b7-130"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> обычно реализуется с помощью следующего шаблона, который позволяет программистам приложений внедрять собственный код для создания настраиваемых элементов:</span><span class="sxs-lookup"><span data-stu-id="8d7b7-130"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> is commonly implemented using the following pattern that allows application programmers to inject their own code for creating customized items:</span></span>  
  
1.  <span data-ttu-id="8d7b7-131">Метод <xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> формирует событие <xref:System.Windows.Forms.BindingSource.AddingNew>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-131"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> raises the <xref:System.Windows.Forms.BindingSource.AddingNew> event.</span></span>  
  
2.  <span data-ttu-id="8d7b7-132">Программист может предоставить пользовательский элемент, обрабатывая событие <xref:System.Windows.Forms.BindingSource.AddingNew> и установив для свойства <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> параметра <xref:System.ComponentModel.AddingNewEventArgs> новый элемент.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-132">The programmer can supply a custom item by handling the <xref:System.Windows.Forms.BindingSource.AddingNew> event and setting the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property of the <xref:System.ComponentModel.AddingNewEventArgs> parameter to the new item.</span></span> <span data-ttu-id="8d7b7-133">В противном случае компонент должен создать элемент с помощью конструктора без параметров.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-133">Otherwise, the component should create an item using the parameterless constructor.</span></span>  
  
3.  <span data-ttu-id="8d7b7-134">Если источник данных не реализует интерфейс <xref:System.ComponentModel.IEditableObject>, элемент немедленно добавляется в источник данных и в базовый список.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-134">If the data source does not implement the <xref:System.ComponentModel.IEditableObject> interface, the item is immediately added to the data source and underlying list.</span></span> <span data-ttu-id="8d7b7-135">Если этот интерфейс поддерживается, то добавление в транзакции осуществляется с помощью методов <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> и <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-135">If this interface is supported, then the addition is transacted by the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> and <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.AddingNewEventArgs.NewObject" />
        <altmember cref="T:System.ComponentModel.AddingNewEventArgs" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />
      </Docs>
    </Member>
    <Member MemberName="BindingComplete">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingCompleteEventHandler BindingComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingCompleteEventHandler BindingComplete" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BindingComplete As BindingCompleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingCompleteEventHandler ^ BindingComplete;" />
      <MemberSignature Language="F#" Value="member this.BindingComplete : System.Windows.Forms.BindingCompleteEventHandler " Usage="member this.BindingComplete : System.Windows.Forms.BindingCompleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingCompleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d7b7-136">Происходит во время завершения операции по привязке данных.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-136">Occurs at the completion of a data-binding operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7b7-137">Событие <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> возникает после завершения операции привязки данных, которая может включать в себя следующее:</span><span class="sxs-lookup"><span data-stu-id="8d7b7-137">The <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event occurs after the completion of a data-binding operation, which may include the following:</span></span>  
  
-   <span data-ttu-id="8d7b7-138">Принудительная отправка информации из источника данных в свойство привязанного элемента управления.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-138">Pushing information from the data source into the property of its bound control.</span></span>  
  
-   <span data-ttu-id="8d7b7-139">Извлечение сведений из привязанного элемента управления в связанный с ним источник данных.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-139">Pulling information from a bound control into its associated data source.</span></span>  
  
 <span data-ttu-id="8d7b7-140">Обратите внимание, что это событие возникает независимо от состояния завершения операции привязки, хотя это состояние можно определить, изучив свойство <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> параметра <xref:System.Windows.Forms.BindingCompleteEventArgs>, связанного с событием.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-140">Note that this event is raised regardless of the completion status of the binding operation, although this status can be determined by examining the <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> property of the <xref:System.Windows.Forms.BindingCompleteEventArgs> parameter associated with the event.</span></span> <span data-ttu-id="8d7b7-141"><xref:System.Windows.Forms.BindingCompleteEventArgs> также могут содержать сведения об ошибках и исключениях.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-141"><xref:System.Windows.Forms.BindingCompleteEventArgs> may also contain error and exception information.</span></span> <span data-ttu-id="8d7b7-142">Например, операция привязки, которая пытается отправить значение NULL из источника данных в элемент управления <xref:System.Windows.Forms.DateTimePicker>, создаст исключение, так как <xref:System.DateTime> не может быть `null`.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-142">For example, a binding operation that attempts to push a null value from a data source into a <xref:System.Windows.Forms.DateTimePicker> control will generate an exception, since a <xref:System.DateTime> cannot be `null`.</span></span> <span data-ttu-id="8d7b7-143">В этом случае, несмотря на то, что операция привязки не завершается успешно, будет вызвано событие <xref:System.Windows.Forms.BindingManagerBase.BindingComplete>, а событие будет содержать сведения о неудачной попытке привязки.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-143">In this case, although the binding operation does not successfully complete, the <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event will be raised, and the event will contain information on the failed binding attempt.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7b7-144">В следующем примере кода показано, как выполнить обработку события <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> и убедиться, что несколько элементов управления, привязанных к одному и тому же источнику данных, будут синхронизированы при изменении одного из значений элементов управления.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-144">The following code example demonstrates how to handle the <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event and ensure multiple controls bound to the same data source remain synchronized when one of the control values is changed.</span></span> <span data-ttu-id="8d7b7-145">Чтобы выполнить этот пример, вставьте код в форму Windows Forms и вызовите метод `InitializeControlsAndData` из конструктора формы или <xref:System.Windows.Forms.Form.Load> метода обработки событий.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-145">To run this example, paste the code into a Windows Form and call the `InitializeControlsAndData` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
        <altmember cref="T:System.Windows.Forms.BindingCompleteEventArgs" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
      </Docs>
    </Member>
    <Member MemberName="Bindings">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingsCollection Bindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.BindingsCollection Bindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bindings As BindingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BindingsCollection ^ Bindings { System::Windows::Forms::BindingsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Bindings : System.Windows.Forms.BindingsCollection" Usage="System.Windows.Forms.BindingManagerBase.Bindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d7b7-146">Возвращает коллекцию управляемых привязок.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-146">Gets the collection of bindings being managed.</span></span></summary>
        <value><span data-ttu-id="8d7b7-147">Коллекция <see cref="T:System.Windows.Forms.BindingsCollection" />, содержащая объекты <see cref="T:System.Windows.Forms.Binding" />, управляемые этим экземпляром <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-147">A <see cref="T:System.Windows.Forms.BindingsCollection" /> that contains the <see cref="T:System.Windows.Forms.Binding" /> objects managed by this <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d7b7-148">В следующем примере кода возвращается <xref:System.Windows.Forms.BindingManagerBase> для определенного источника данных.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-148">The following code example gets the <xref:System.Windows.Forms.BindingManagerBase> for a specific data source.</span></span> <span data-ttu-id="8d7b7-149">Затем в примере используется свойство <xref:System.Windows.Forms.BindingManagerBase.Bindings%2A> для вывода сведений о каждом элементе управления, привязанном к одному и тому же источнику данных.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-149">The example then uses the <xref:System.Windows.Forms.BindingManagerBase.Bindings%2A> property to print information about each control bound to the same data source.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Bindings Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Bindings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Bindings Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Bindings Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Bindings Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Bindings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Binding" />
        <altmember cref="T:System.Windows.Forms.BindingContext" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
      </Docs>
    </Member>
    <Member MemberName="CancelCurrentEdit">
      <MemberSignature Language="C#" Value="public abstract void CancelCurrentEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelCurrentEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CancelCurrentEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CancelCurrentEdit();" />
      <MemberSignature Language="F#" Value="abstract member CancelCurrentEdit : unit -&gt; unit" Usage="bindingManagerBase.CancelCurrentEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d7b7-150">При переопределении в производном классе отменяет текущее изменение.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-150">When overridden in a derived class, cancels the current edit.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7b7-151">Этот метод поддерживается только в том случае, если источник данных реализует интерфейс <xref:System.ComponentModel.IEditableObject>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-151">This method is supported only if the data source implements the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="8d7b7-152">Если объект не реализует интерфейс <xref:System.ComponentModel.IEditableObject>, изменения, вносимые в данные, не будут удалены.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-152">If the object does not implement the <xref:System.ComponentModel.IEditableObject> interface, changes made to the data will not be discarded.</span></span>  
  
 <span data-ttu-id="8d7b7-153">Вызов метода <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> приводит к возникновению события <xref:System.Windows.Forms.Binding.Format>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-153">Calling the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> method causes the <xref:System.Windows.Forms.Binding.Format> event to occur.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7b7-154">В следующем примере кода демонстрируются методы <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> и <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-154">The following code example demonstrates both the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> and the <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> methods.</span></span> <span data-ttu-id="8d7b7-155">При вызове методов <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> изменения, вносимые в данные, отбрасываются.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-155">When you call the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> methods, changes made to the data are discarded.</span></span> <span data-ttu-id="8d7b7-156">При вызове метода <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> изменения сохраняются.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-156">When you call the <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> method, the changes are kept.</span></span>  
  
 [!code-cpp[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/CPP/canceledit.cpp#1)]
 [!code-csharp[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/CS/canceledit.cs#1)]
 [!code-vb[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/VB/canceledit.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public abstract int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.Count" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.BindingManagerBase.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d7b7-157">При переопределении в производном классе получает число строк, управляемых объектом <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-157">When overridden in a derived class, gets the number of rows managed by the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></summary>
        <value><span data-ttu-id="8d7b7-158">Число строк, управляемых объектом <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-158">The number of rows managed by the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7b7-159">Свойство <xref:System.Windows.Forms.BindingManagerBase.Count%2A> используется для определения последнего элемента в списке строк, поддерживаемых <xref:System.Windows.Forms.BindingManagerBase>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-159">Use the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property to determine the last item in the list of rows maintained by the <xref:System.Windows.Forms.BindingManagerBase>.</span></span> <span data-ttu-id="8d7b7-160">Чтобы вернуться к последнему элементу, присвойте свойству <xref:System.Windows.Forms.BindingManagerBase.Position%2A> значение свойства <xref:System.Windows.Forms.BindingManagerBase.Count%2A> минус 1.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-160">To go to the last item, set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property to the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property value minus 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7b7-161">В следующем примере кода показаны четыре метода, которые задают свойство <xref:System.Windows.Forms.BindingManagerBase.Position%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-161">The following code example shows four methods that set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property.</span></span> <span data-ttu-id="8d7b7-162">Метод `MoveNext` увеличивает свойство на 1.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-162">The `MoveNext` method increments the property by 1.</span></span> <span data-ttu-id="8d7b7-163">Метод `MovePrevious` уменьшает свойство на 1.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-163">The `MovePrevious` method decrements the property by 1.</span></span> <span data-ttu-id="8d7b7-164">Метод `MoveFirst` задает для свойства значение 0.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-164">The `MoveFirst` method sets the property to 0.</span></span> <span data-ttu-id="8d7b7-165">Метод `MoveLast` присваивает свойству значение свойства <xref:System.Windows.Forms.BindingManagerBase.Count%2A> минус 1.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-165">The `MoveLast` method sets the property to the value of the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property minus 1.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Position" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public abstract object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.Current" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Windows.Forms.BindingManagerBase.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d7b7-166">При переопределении в производном классе возвращает текущий объект.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-166">When overridden in a derived class, gets the current object.</span></span></summary>
        <value><span data-ttu-id="8d7b7-167">Объект <see cref="T:System.Object" />, представляющий текущий объект.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-167">An <see cref="T:System.Object" /> that represents the current object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7b7-168">Объект <xref:System.Windows.Forms.BindingManagerBase.Current%2A> содержит значение текущего элемента в источнике данных.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-168">The <xref:System.Windows.Forms.BindingManagerBase.Current%2A> object contains the value of the current item in the data source.</span></span> <span data-ttu-id="8d7b7-169">Чтобы использовать значение текущего элемента, необходимо привести элемент к <xref:System.Type>у объекта, содержащегося в <xref:System.Windows.Forms.Binding.DataSource%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-169">To use the value of the current item, you must cast the item to the <xref:System.Type> of the object contained by the <xref:System.Windows.Forms.Binding.DataSource%2A>.</span></span> <span data-ttu-id="8d7b7-170">Например, <xref:System.Data.DataTable> содержит объекты <xref:System.Data.DataRowView>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-170">For example, a <xref:System.Data.DataTable> contains <xref:System.Data.DataRowView> objects.</span></span> <span data-ttu-id="8d7b7-171">Чтобы определить тип текущего объекта, используйте методы <xref:System.Object.GetType%2A> и <xref:System.Type.ToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-171">To determine the type of the current object, use the <xref:System.Object.GetType%2A> and <xref:System.Type.ToString%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d7b7-172">Если <xref:System.Windows.Forms.Binding.DataSource%2A> является <xref:System.Data.DataSet>, <xref:System.Data.DataViewManager>или <xref:System.Data.DataTable>, то фактически выполняется привязка к <xref:System.Data.DataView>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-172">When the <xref:System.Windows.Forms.Binding.DataSource%2A> is a <xref:System.Data.DataSet>, <xref:System.Data.DataViewManager>, or <xref:System.Data.DataTable>, you are actually binding to a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="8d7b7-173">Следовательно, каждый объект <xref:System.Windows.Forms.BindingManagerBase.Current%2A> является объектом <xref:System.Data.DataRowView>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-173">Consequently, each <xref:System.Windows.Forms.BindingManagerBase.Current%2A> object is a <xref:System.Data.DataRowView> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7b7-174">Следующий пример кода выводит значение объекта <xref:System.Windows.Forms.BindingManagerBase.Current%2A> в <xref:System.Windows.Forms.BindingManagerBase> в событии <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-174">The following code example prints the value of the <xref:System.Windows.Forms.BindingManagerBase.Current%2A> object in a <xref:System.Windows.Forms.BindingManagerBase> in the <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> event.</span></span> <span data-ttu-id="8d7b7-175">В примере предполагается, что источником данных является <xref:System.Data.DataTable>, содержащий <xref:System.Data.DataColumn> с именем `CustName`.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-175">The example assumes the data source is a <xref:System.Data.DataTable> containing a <xref:System.Data.DataColumn> named `CustName`.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Current Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Current Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Current Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Position" />
      </Docs>
    </Member>
    <Member MemberName="CurrentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentChanged : EventHandler " Usage="member this.CurrentChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d7b7-176">Происходит при изменении элемента, к которому имеется привязка.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-176">Occurs when the currently bound item changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7b7-177">Событие <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> возникает при изменении свойства <xref:System.Windows.Forms.BindingManagerBase.Current%2A> или при возникновении события <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-177">The <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> event is raised whenever the <xref:System.Windows.Forms.BindingManagerBase.Current%2A> property changes or the <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> event occurs.</span></span>  
  
 <span data-ttu-id="8d7b7-178">Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="8d7b7-178">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7b7-179">Следующий пример кода выводит значение объекта <xref:System.Windows.Forms.BindingManagerBase.Current%2A> в <xref:System.Windows.Forms.BindingManagerBase> в событии <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-179">The following code example prints the value of the <xref:System.Windows.Forms.BindingManagerBase.Current%2A> object in a <xref:System.Windows.Forms.BindingManagerBase> in the <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> event.</span></span> <span data-ttu-id="8d7b7-180">В примере предполагается, что источником данных является <xref:System.Data.DataTable>, содержащий <xref:System.Data.DataColumn> с именем `CustName`.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-180">The example assumes the data source is a <xref:System.Data.DataTable> containing a <xref:System.Data.DataColumn> named `CustName`.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Current Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Current Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Current Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Current" />
      </Docs>
    </Member>
    <Member MemberName="CurrentItemChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentItemChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentItemChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentItemChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentItemChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentItemChanged : EventHandler " Usage="member this.CurrentItemChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d7b7-181">Происходит при изменении состояния элемента, к которому имеется привязка.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-181">Occurs when the state of the currently bound item changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7b7-182">Событие <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> возникает при изменении состояния в элементе, привязанном к текущему элементу.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-182">The <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> event occurs whenever there is a change in the state in the currently bound item.</span></span> <span data-ttu-id="8d7b7-183">Это может произойти при изменении одного из свойств этого элемента или при замене или перемещении самого элемента.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-183">This can occur if one of the properties of this item is changed or if the item itself is replaced or moved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7b7-184">В следующем примере кода показано использование этого элемента.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-184">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8d7b7-185">В этом примере обработчик событий сообщает о возникновении события <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-185">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> event.</span></span> <span data-ttu-id="8d7b7-186">Этот отчет поможет вам узнать, когда происходит событие и может помочь при отладке.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-186">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8d7b7-187">Чтобы сообщить о нескольких событиях или событиях, которые происходят часто, попробуйте заменить <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> или добавив сообщение в многострочный <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-187">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8d7b7-188">Чтобы выполнить пример кода, вставьте его в проект, содержащий экземпляр типа, который наследуется от <xref:System.Windows.Forms.BindingManagerBase>, например <xref:System.Windows.Forms.PropertyManager> или <xref:System.Windows.Forms.CurrencyManager>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-188">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.BindingManagerBase>, such as a <xref:System.Windows.Forms.PropertyManager> or <xref:System.Windows.Forms.CurrencyManager>.</span></span> <span data-ttu-id="8d7b7-189">Затем присвойте экземпляру имя `BindingManagerBase1` и убедитесь, что обработчик событий связан с событием <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-189">Then name the instance `BindingManagerBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#82](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#82)]
 [!code-vb[System.Windows.Forms.EventExamples#82](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#82)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataError">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingManagerDataErrorEventHandler DataError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingManagerDataErrorEventHandler DataError" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.DataError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataError As BindingManagerDataErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingManagerDataErrorEventHandler ^ DataError;" />
      <MemberSignature Language="F#" Value="member this.DataError : System.Windows.Forms.BindingManagerDataErrorEventHandler " Usage="member this.DataError : System.Windows.Forms.BindingManagerDataErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingManagerDataErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d7b7-190">Происходит, когда исключение <see cref="T:System.Exception" /> автоматически обрабатывается объектом <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-190">Occurs when an <see cref="T:System.Exception" /> is silently handled by the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7b7-191">Это событие является информационным и сообщает только о CLS-совместимых исключениях.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-191">This event is informational and reports Common Language Specification (CLS)-compliant exceptions only.</span></span> <span data-ttu-id="8d7b7-192">Чтобы определить, какой тип исключения произошло, обработайте это событие и проверьте свойство <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A> <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-192">To determine what type of exception occurred, handle this event and check the <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A> property of the <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs>.</span></span>  
  
 <span data-ttu-id="8d7b7-193">Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="8d7b7-193">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7b7-194">В следующем примере кода показано использование этого элемента.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-194">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="8d7b7-195">В этом примере обработчик событий сообщает о возникновении события <xref:System.Windows.Forms.BindingManagerBase.DataError>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-195">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.BindingManagerBase.DataError> event.</span></span> <span data-ttu-id="8d7b7-196">Этот отчет поможет вам узнать, когда происходит событие и может помочь при отладке.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-196">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="8d7b7-197">Чтобы сообщить о нескольких событиях или событиях, которые происходят часто, попробуйте заменить <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> или добавив сообщение в многострочный <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-197">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="8d7b7-198">Чтобы выполнить пример кода, вставьте его в проект, содержащий экземпляр типа, который наследуется от <xref:System.Windows.Forms.BindingManagerBase>, например <xref:System.Windows.Forms.PropertyManager> или <xref:System.Windows.Forms.CurrencyManager>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-198">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.BindingManagerBase>, such as a <xref:System.Windows.Forms.PropertyManager> or <xref:System.Windows.Forms.CurrencyManager>.</span></span> <span data-ttu-id="8d7b7-199">Затем присвойте экземпляру имя `BindingManagerBase1` и убедитесь, что обработчик событий связан с событием <xref:System.Windows.Forms.BindingManagerBase.DataError>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-199">Then name the instance `BindingManagerBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.BindingManagerBase.DataError> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#83](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#83)]
 [!code-vb[System.Windows.Forms.EventExamples#83](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#83)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCurrentEdit">
      <MemberSignature Language="C#" Value="public abstract void EndCurrentEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCurrentEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndCurrentEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndCurrentEdit();" />
      <MemberSignature Language="F#" Value="abstract member EndCurrentEdit : unit -&gt; unit" Usage="bindingManagerBase.EndCurrentEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d7b7-200">При переопределении в производном классе завершает текущее изменение.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-200">When overridden in a derived class, ends the current edit.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7b7-201">Этот метод поддерживается только в том случае, если источник данных реализует интерфейс <xref:System.ComponentModel.IEditableObject>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-201">This method is supported only if the data source implements the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="8d7b7-202">В этом случае изменения будут сохранены.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-202">In that case, changes will be saved.</span></span> <span data-ttu-id="8d7b7-203">Если объект не реализует интерфейс <xref:System.ComponentModel.IEditableObject>, изменения, вносимые в данные, не будут сохранены.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-203">If the object does not implement the <xref:System.ComponentModel.IEditableObject> interface, changes made to the data will not be saved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7b7-204">В следующем примере кода демонстрируются методы <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> и <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-204">The following code example demonstrates both the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> and the <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> methods.</span></span> <span data-ttu-id="8d7b7-205">При вызове методов <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> изменения, вносимые в данные, отбрасываются.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-205">When you call the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> methods, changes made to the data are discarded.</span></span> <span data-ttu-id="8d7b7-206">При вызове метода <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> изменения сохраняются.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-206">When you call the <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> method, the changes are kept.</span></span>  
  
 [!code-cpp[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/CPP/canceledit.cpp#1)]
 [!code-csharp[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/CS/canceledit.cs#1)]
 [!code-vb[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/VB/canceledit.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetItemProperties">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d7b7-207">Возвращает список дескрипторов свойств для источника данных.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-207">Gets the list of property descriptors for the data source.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties ();" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.GetItemProperties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemProperties () As PropertyDescriptorCollection" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties();" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : unit -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetItemProperties : unit -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="bindingManagerBase.GetItemProperties " FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public abstract System.ComponentModel.PropertyDescriptorCollection GetItemProperties ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItemProperties () As PropertyDescriptorCollection" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : unit -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="bindingManagerBase.GetItemProperties " FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d7b7-208">При переопределении в производном классе возвращает коллекцию дескрипторов свойств для привязки.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-208">When overridden in a derived class, gets the collection of property descriptors for the binding.</span></span></summary>
        <returns><span data-ttu-id="8d7b7-209">Объект <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, представляющий дескрипторы свойств для привязки.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-209">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the property descriptors for the binding.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d7b7-210">В следующем примере кода используется метод <xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A> для возврата <xref:System.ComponentModel.PropertyDescriptorCollection>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-210">The following code example uses the <xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A> method to return a <xref:System.ComponentModel.PropertyDescriptorCollection>.</span></span> <span data-ttu-id="8d7b7-211">В примере выводится <xref:System.ComponentModel.MemberDescriptor.Name%2A> и значение текущего <xref:System.Data.DataColumn> с помощью метода <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-211">The example prints the <xref:System.ComponentModel.MemberDescriptor.Name%2A> and value of the current <xref:System.Data.DataColumn> using the <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> method of the <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.GetItemProperties Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.GetItemProperties Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.GetItemProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)" />
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="protected internal virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.Collections.ArrayList dataSources, System.Collections.ArrayList listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.Collections.ArrayList dataSources, class System.Collections.ArrayList listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.GetItemProperties(System.Collections.ArrayList,System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetItemProperties (dataSources As ArrayList, listAccessors As ArrayList) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(System::Collections::ArrayList ^ dataSources, System::Collections::ArrayList ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : System.Collections.ArrayList * System.Collections.ArrayList -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetItemProperties : System.Collections.ArrayList * System.Collections.ArrayList -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="bindingManagerBase.GetItemProperties (dataSources, listAccessors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSources" Type="System.Collections.ArrayList" />
        <Parameter Name="listAccessors" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="dataSources"><span data-ttu-id="8d7b7-212">Список <see cref="T:System.Collections.ArrayList" />, содержащий источники данных.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-212">An <see cref="T:System.Collections.ArrayList" /> containing the data sources.</span></span></param>
        <param name="listAccessors"><span data-ttu-id="8d7b7-213">Список <see cref="T:System.Collections.ArrayList" />, содержащий свойства привязки для таблицы.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-213">An <see cref="T:System.Collections.ArrayList" /> containing the table's bound properties.</span></span></param>
        <summary><span data-ttu-id="8d7b7-214">Получает коллекцию дескрипторов свойств для привязки с помощью указанного списка <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-214">Gets the collection of property descriptors for the binding using the specified <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="8d7b7-215">Объект <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, представляющий дескрипторы свойств для привязки.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-215">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the property descriptors for the binding.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7b7-216">Этот метод используется разработчиками для создания элементов управления с привязкой к данным.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-216">This method is used by developers creating data-bound controls.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)" />
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties (Type listType, int offset, System.Collections.ArrayList dataSources, System.Collections.ArrayList listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.Type listType, int32 offset, class System.Collections.ArrayList dataSources, class System.Collections.ArrayList listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.GetItemProperties(System.Type,System.Int32,System.Collections.ArrayList,System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetItemProperties (listType As Type, offset As Integer, dataSources As ArrayList, listAccessors As ArrayList) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(Type ^ listType, int offset, System::Collections::ArrayList ^ dataSources, System::Collections::ArrayList ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetItemProperties : Type * int * System.Collections.ArrayList * System.Collections.ArrayList -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetItemProperties : Type * int * System.Collections.ArrayList * System.Collections.ArrayList -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="bindingManagerBase.GetItemProperties (listType, offset, dataSources, listAccessors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listType" Type="System.Type" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="dataSources" Type="System.Collections.ArrayList" />
        <Parameter Name="listAccessors" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="listType"><span data-ttu-id="8d7b7-217">Тип <see cref="T:System.Type" /> списка с привязкой.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-217">The <see cref="T:System.Type" /> of the bound list.</span></span></param>
        <param name="offset"><span data-ttu-id="8d7b7-218">Счетчик, используемый для рекурсивного вызова метода.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-218">A counter used to recursively call the method.</span></span></param>
        <param name="dataSources"><span data-ttu-id="8d7b7-219">Список <see cref="T:System.Collections.ArrayList" />, содержащий источники данных.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-219">An <see cref="T:System.Collections.ArrayList" /> containing the data sources.</span></span></param>
        <param name="listAccessors"><span data-ttu-id="8d7b7-220">Список <see cref="T:System.Collections.ArrayList" />, содержащий свойства привязки для таблицы.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-220">An <see cref="T:System.Collections.ArrayList" /> containing the table's bound properties.</span></span></param>
        <summary><span data-ttu-id="8d7b7-221">Получает список свойств элементов, управляемых этим объектом <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-221">Gets the list of properties of the items managed by this <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span></span></summary>
        <returns><span data-ttu-id="8d7b7-222">Объект <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, представляющий дескрипторы свойств для привязки.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-222">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the property descriptors for the binding.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7b7-223">Эта перегрузка используется разработчиками для создания элементов управления с привязкой к данным.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-223">This overload is used by developers to create data-bound controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7b7-224">В следующем примере кода метод <xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A> используется для возврата <xref:System.ComponentModel.PropertyDescriptorCollection> для <xref:System.Windows.Forms.BindingManagerBase>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-224">The following code example uses the <xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A> method to return a <xref:System.ComponentModel.PropertyDescriptorCollection> for a <xref:System.Windows.Forms.BindingManagerBase>.</span></span> <span data-ttu-id="8d7b7-225">Затем в примере выводится <xref:System.ComponentModel.MemberDescriptor.Name%2A> и <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> каждого <xref:System.ComponentModel.PropertyDescriptor> в коллекции.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-225">The example then prints out the <xref:System.ComponentModel.MemberDescriptor.Name%2A> and <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> of each <xref:System.ComponentModel.PropertyDescriptor> in the collection.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.GetItemProperties2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.GetItemProperties2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties2 Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.GetItemProperties2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="protected internal abstract string GetListName (System.Collections.ArrayList listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetListName(class System.Collections.ArrayList listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetListName (listAccessors As ArrayList) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::String ^ GetListName(System::Collections::ArrayList ^ listAccessors);" />
      <MemberSignature Language="F#" Value="abstract member GetListName : System.Collections.ArrayList -&gt; string" Usage="bindingManagerBase.GetListName listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="listAccessors"><span data-ttu-id="8d7b7-226">Список <see cref="T:System.Collections.ArrayList" />, содержащий свойства привязки для таблицы.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-226">An <see cref="T:System.Collections.ArrayList" /> containing the table's bound properties.</span></span></param>
        <summary><span data-ttu-id="8d7b7-227">При переопределении в производном классе возвращает имя списка, предоставляющего данные для привязки.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-227">When overridden in a derived class, gets the name of the list supplying the data for the binding.</span></span></summary>
        <returns><span data-ttu-id="8d7b7-228">Имя списка, предоставляющего данные для привязки.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-228">The name of the list supplying the data for the binding.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBindingSuspended">
      <MemberSignature Language="C#" Value="public bool IsBindingSuspended { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBindingSuspended" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.IsBindingSuspended" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBindingSuspended As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBindingSuspended { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBindingSuspended : bool" Usage="System.Windows.Forms.BindingManagerBase.IsBindingSuspended" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d7b7-229">Возвращает значение, указывающее, приостановлено ли действие привязки.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-229">Gets a value indicating whether binding is suspended.</span></span></summary>
        <value><span data-ttu-id="8d7b7-230">Значение <see langword="true" />, если действие привязки приостановлено, и значение <see langword="false" /> в противном случае.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-230"><see langword="true" /> if binding is suspended; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBindingComplete">
      <MemberSignature Language="C#" Value="protected internal void OnBindingComplete (System.Windows.Forms.BindingCompleteEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnBindingComplete(class System.Windows.Forms.BindingCompleteEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub OnBindingComplete (args As BindingCompleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void OnBindingComplete(System::Windows::Forms::BindingCompleteEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="member this.OnBindingComplete : System.Windows.Forms.BindingCompleteEventArgs -&gt; unit" Usage="bindingManagerBase.OnBindingComplete args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Windows.Forms.BindingCompleteEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="8d7b7-231">Объект <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" />, содержащий данные, которые относятся к событию.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-231">A <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8d7b7-232">Порождает событие <see cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-232">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7b7-233">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-233">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8d7b7-234">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="8d7b7-234">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8d7b7-235">Метод <xref:System.Windows.Forms.BindingManagerBase.OnBindingComplete%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-235">The <xref:System.Windows.Forms.BindingManagerBase.OnBindingComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8d7b7-236">Это предпочтительная методика обработки событий в производном классе.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-236">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8d7b7-237">При переопределении метода <see cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-237">When overriding <see cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnCurrentChanged">
      <MemberSignature Language="C#" Value="protected internal abstract void OnCurrentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnCurrentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnCurrentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnCurrentChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCurrentChanged : EventArgs -&gt; unit" Usage="bindingManagerBase.OnCurrentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8d7b7-238">Объект <see cref="T:System.EventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-238">The <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8d7b7-239">Порождает событие <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-239">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7b7-240">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-240">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8d7b7-241">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="8d7b7-241">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8d7b7-242">Метод <xref:System.Windows.Forms.BindingManagerBase.OnCurrentChanged%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-242">The <xref:System.Windows.Forms.BindingManagerBase.OnCurrentChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8d7b7-243">Это предпочтительная методика обработки событий в производном классе.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-243">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8d7b7-244">При переопределении метода <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-244">When overriding <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Current" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Position" />
      </Docs>
    </Member>
    <Member MemberName="onCurrentChangedHandler">
      <MemberSignature Language="C#" Value="protected EventHandler onCurrentChangedHandler;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.EventHandler onCurrentChangedHandler" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.BindingManagerBase.onCurrentChangedHandler" />
      <MemberSignature Language="VB.NET" Value="Protected onCurrentChangedHandler As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="protected: EventHandler ^ onCurrentChangedHandler;" />
      <MemberSignature Language="F#" Value="val mutable onCurrentChangedHandler : EventHandler" Usage="System.Windows.Forms.BindingManagerBase.onCurrentChangedHandler" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d7b7-245">Задает обработчик событий для события <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-245">Specifies the event handler for the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnCurrentItemChanged">
      <MemberSignature Language="C#" Value="protected internal abstract void OnCurrentItemChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnCurrentItemChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnCurrentItemChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnCurrentItemChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCurrentItemChanged : EventArgs -&gt; unit" Usage="bindingManagerBase.OnCurrentItemChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8d7b7-246">Объект <see cref="T:System.EventArgs" />, содержащий данные события.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-246">The <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="8d7b7-247">Порождает событие <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-247">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7b7-248">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-248">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8d7b7-249">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="8d7b7-249">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8d7b7-250">Метод <xref:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-250">The <xref:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8d7b7-251">Это предпочтительная методика обработки событий в производном классе.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-251">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8d7b7-252">При переопределении метода <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-252">When overriding <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Current" />
      </Docs>
    </Member>
    <Member MemberName="OnDataError">
      <MemberSignature Language="C#" Value="protected internal void OnDataError (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnDataError(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub OnDataError (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void OnDataError(Exception ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnDataError : Exception -&gt; unit" Usage="bindingManagerBase.OnDataError e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8d7b7-253">Исключение <see cref="T:System.Exception" />, которое приводит к созданию события <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" />.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-253">An <see cref="T:System.Exception" /> that caused the <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" /> event to occur.</span></span></param>
        <summary><span data-ttu-id="8d7b7-254">Порождает событие <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" />.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-254">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7b7-255">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-255">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="8d7b7-256">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="8d7b7-256">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="8d7b7-257">Метод <xref:System.Windows.Forms.BindingManagerBase.OnDataError%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-257">The <xref:System.Windows.Forms.BindingManagerBase.OnDataError%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="8d7b7-258">Это предпочтительная методика обработки событий в производном классе.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-258">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8d7b7-259">При переопределении метода <see cref="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-259">When overriding <see cref="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="onPositionChangedHandler">
      <MemberSignature Language="C#" Value="protected EventHandler onPositionChangedHandler;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.EventHandler onPositionChangedHandler" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.BindingManagerBase.onPositionChangedHandler" />
      <MemberSignature Language="VB.NET" Value="Protected onPositionChangedHandler As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="protected: EventHandler ^ onPositionChangedHandler;" />
      <MemberSignature Language="F#" Value="val mutable onPositionChangedHandler : EventHandler" Usage="System.Windows.Forms.BindingManagerBase.onPositionChangedHandler" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d7b7-260">Задает обработчик событий для события <see cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-260">Specifies the event handler for the <see cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public abstract int Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.Position" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Position As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Position { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int with get, set" Usage="System.Windows.Forms.BindingManagerBase.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d7b7-261">При переопределении в производном классе возвращает или задает позицию в базовом списке, на которую указывают элементы управления, привязанные к этому источнику данных.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-261">When overridden in a derived class, gets or sets the position in the underlying list that controls bound to this data source point to.</span></span></summary>
        <value><span data-ttu-id="8d7b7-262">Отсчитываемый от нуля индекс, задающий позицию в базовом списке.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-262">A zero-based index that specifies a position in the underlying list.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7b7-263">Используйте свойство <xref:System.Windows.Forms.BindingManagerBase.Position%2A> для прохода по базовому списку, поддерживаемому <xref:System.Windows.Forms.BindingManagerBase>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-263">Use the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property to iterate through the underlying list maintained by the <xref:System.Windows.Forms.BindingManagerBase>.</span></span> <span data-ttu-id="8d7b7-264">Чтобы вернуться к первому элементу, задайте для <xref:System.Windows.Forms.BindingManagerBase.Position%2A> значение 0.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-264">To go to the first item, set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> to 0.</span></span> <span data-ttu-id="8d7b7-265">Чтобы вернуться к концу списка, задайте для <xref:System.Windows.Forms.BindingManagerBase.Position%2A> значение свойства <xref:System.Windows.Forms.BindingManagerBase.Count%2A> минус 1.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-265">To go to the end of the list, set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> to the value of the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property minus 1.</span></span>  
  
 <span data-ttu-id="8d7b7-266">Событие <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> возникает при изменении значения свойства <xref:System.Windows.Forms.BindingManagerBase.Position%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-266">The <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> event occurs when the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property value changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7b7-267">В следующем примере кода показаны четыре метода, которые задают свойство <xref:System.Windows.Forms.BindingManagerBase.Position%2A>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-267">The following code example shows four methods that set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property.</span></span> <span data-ttu-id="8d7b7-268">Метод `MoveNext` увеличивает свойство на 1.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-268">The `MoveNext` method increments the property by 1.</span></span> <span data-ttu-id="8d7b7-269">Метод `MovePrevious` уменьшает свойство на 1.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-269">The `MovePrevious` method decrements the property by 1.</span></span> <span data-ttu-id="8d7b7-270">Метод `MoveFirst` задает для свойства значение 0, а метод `MoveLast` задает свойству значения свойства <xref:System.Windows.Forms.BindingManagerBase.Count%2A> минус 1.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-270">The `MoveFirst` method sets the property to 0, and the `MoveLast` method sets the property to the value of the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property minus 1.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Current" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Count" />
      </Docs>
    </Member>
    <Member MemberName="PositionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PositionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PositionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PositionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PositionChanged;" />
      <MemberSignature Language="F#" Value="member this.PositionChanged : EventHandler " Usage="member this.PositionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d7b7-271">Происходит после изменения значения свойства <see cref="P:System.Windows.Forms.BindingManagerBase.Position" />.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-271">Occurs after the value of the <see cref="P:System.Windows.Forms.BindingManagerBase.Position" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7b7-272">Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="8d7b7-272">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d7b7-273">В следующем примере кода создается <xref:System.Windows.Forms.Binding>, а затем он добавляется в коллекцию объектов <xref:System.Windows.Forms.Binding> для элемента управления <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-273">The following code example creates a <xref:System.Windows.Forms.Binding>, and then adds it to a collection of <xref:System.Windows.Forms.Binding> objects for a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="8d7b7-274">Затем в примере получается <xref:System.Windows.Forms.BindingManagerBase> для источника данных и добавляется делегат к событию <xref:System.Windows.Forms.BindingManagerBase.PositionChanged>.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-274">The example then gets the <xref:System.Windows.Forms.BindingManagerBase> for the data source and adds a delegate to the <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> event.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.PositionChanged Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.PositionChanged Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.PositionChanged Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.PositionChanged Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.PositionChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.PositionChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PullData">
      <MemberSignature Language="C#" Value="protected void PullData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PullData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.PullData" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PullData ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PullData();" />
      <MemberSignature Language="F#" Value="member this.PullData : unit -&gt; unit" Usage="bindingManagerBase.PullData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d7b7-275">Передает данные из привязанного к данным элемента управления в источник данных, не возвращая никаких сведений.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-275">Pulls data from the data-bound control into the data source, returning no information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7b7-276">Метод <xref:System.Windows.Forms.BindingManagerBase.PullData%2A> является программным способом извлечения информации из элемента управления с привязкой к данным обратно в источник данных.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-276">The <xref:System.Windows.Forms.BindingManagerBase.PullData%2A> method is a programmatic way to pull information from the data-bound control back into the data source.</span></span> <span data-ttu-id="8d7b7-277">Он не является обязательным для стандартной работы элемента управления, так как обычно элемент управления автоматически обновляет связанный источник данных, когда фокус покидает его.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-277">It is not required for standard operation of a control, since normally a control automatically updates its bound data source when focus leaves it.</span></span>  
  
 <span data-ttu-id="8d7b7-278"><xref:System.Windows.Forms.BindingManagerBase.PullData%2A> при необходимости вызывает событие <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> и события изменения в источнике данных.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-278"><xref:System.Windows.Forms.BindingManagerBase.PullData%2A> raises the <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event and change events on the data source as appropriate.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.PushData" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="PushData">
      <MemberSignature Language="C#" Value="protected void PushData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PushData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.PushData" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PushData ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PushData();" />
      <MemberSignature Language="F#" Value="member this.PushData : unit -&gt; unit" Usage="bindingManagerBase.PushData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d7b7-279">Принудительно передает данные из источника данных в привязанный к данным элемент управления, не возвращая никаких сведений.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-279">Pushes data from the data source into the data-bound control, returning no information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7b7-280">Метод <xref:System.Windows.Forms.BindingManagerBase.PushData%2A> является программным способом отправки информации из источника данных в элемент управления с привязкой к данным.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-280">The <xref:System.Windows.Forms.BindingManagerBase.PushData%2A> method is a programmatic way to push information from the data source into the data-bound control.</span></span> <span data-ttu-id="8d7b7-281">Этот метод не требуется, если источник данных реализует интерфейс <xref:System.ComponentModel.IBindingList?displayProperty=nameWithType>, так как событие <xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=nameWithType> должно автоматически обновлять элемент управления с помощью диспетчера валюты.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-281">This method is not required if the data source implements the <xref:System.ComponentModel.IBindingList?displayProperty=nameWithType> interface, because the <xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=nameWithType> event should automatically cause the control to be updated through its currency manager.</span></span>  
  
 <span data-ttu-id="8d7b7-282">Если этот метод выдается при выполнении операции <xref:System.Windows.Forms.BindingManagerBase.PullData%2A>, метод <xref:System.Windows.Forms.BindingManagerBase.PushData%2A> возвращает значение, равное `true`.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-282">If this method is issued when a <xref:System.Windows.Forms.BindingManagerBase.PullData%2A> operation is being performed, the <xref:System.Windows.Forms.BindingManagerBase.PushData%2A> method returns immediately with a value of `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.PullData" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
        <altmember cref="T:System.ComponentModel.IBindingList" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public abstract void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="bindingManagerBase.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="8d7b7-283">Индекс удаляемой строки.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-283">The index of the row to delete.</span></span></param>
        <summary><span data-ttu-id="8d7b7-284">При переопределении в производном классе удаляет строку с указанным индексом из базового списка.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-284">When overridden in a derived class, deletes the row at the specified index from the underlying list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7b7-285">Метод <xref:System.Windows.Forms.BindingManagerBase.RemoveAt%2A> использует базовый источник данных для определения того, как работает метод.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-285">The <xref:System.Windows.Forms.BindingManagerBase.RemoveAt%2A> method relies on the underlying data source to determine how the method behaves.</span></span> <span data-ttu-id="8d7b7-286">(Список поддерживаемых источников данных см. в <xref:System.Windows.Forms.Binding> классе.) Для классов, реализующих <xref:System.Collections.IList>, <xref:System.ComponentModel.IBindingList>или <xref:System.ComponentModel.ITypedList>, а также строго типизированных классов, реализующих <xref:System.Collections.IList>, метод <xref:System.Windows.Forms.BindingManagerBase.RemoveAt%2A> фактически удаляет строку в базовом списке, а не удаляет ее содержимое.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-286">(See the <xref:System.Windows.Forms.Binding> class for a list of supported data sources.) For classes that implement <xref:System.Collections.IList>, <xref:System.ComponentModel.IBindingList>, or <xref:System.ComponentModel.ITypedList>, as well as strongly typed classes that implement <xref:System.Collections.IList>, the <xref:System.Windows.Forms.BindingManagerBase.RemoveAt%2A> method actually deletes the row in the underlying list instead of removing its contents.</span></span>  
  
 <span data-ttu-id="8d7b7-287">Если базовый список реализует интерфейс <xref:System.ComponentModel.IBindingList>, свойство <xref:System.ComponentModel.IBindingList.AllowRemove%2A> должно возвращать `true`.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-287">If the underlying list implements the <xref:System.ComponentModel.IBindingList> interface, the <xref:System.ComponentModel.IBindingList.AllowRemove%2A> property must return `true`.</span></span> <span data-ttu-id="8d7b7-288">Если базовый список реализует интерфейс <xref:System.Collections.IList>, свойство <xref:System.Collections.IList.IsFixedSize%2A> должно возвращать `false`.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-288">If the underlying list implements the <xref:System.Collections.IList> interface, the <xref:System.Collections.IList.IsFixedSize%2A> property must return `false`.</span></span>  
  
   
  
## Examples  
 [!code-cpp[BindingManagerBase_RemoveAt#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase_RemoveAt/CPP/bindingmanagerbase_removeat.cpp#1)]
 [!code-csharp[BindingManagerBase_RemoveAt#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase_RemoveAt/CS/bindingmanagerbase_removeat.cs#1)]
 [!code-vb[BindingManagerBase_RemoveAt#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase_RemoveAt/VB/bindingmanagerbase_removeat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="8d7b7-289">По указанному индексу <paramref name="index" /> нет строки.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-289">There is no row at the specified <paramref name="index" />.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Position" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="ResumeBinding">
      <MemberSignature Language="C#" Value="public abstract void ResumeBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResumeBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ResumeBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ResumeBinding();" />
      <MemberSignature Language="F#" Value="abstract member ResumeBinding : unit -&gt; unit" Usage="bindingManagerBase.ResumeBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d7b7-290">При переопределении в производном классе возобновляет действие привязки данных.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-290">When overridden in a derived class, resumes data binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7b7-291"><xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> и <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> — это два метода, которые позволяют временно Приостановка и возобновление привязки данных.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-291"><xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of data binding.</span></span> <span data-ttu-id="8d7b7-292">Как правило, привязка данных приостанавливается, если пользователю необходимо разрешить изменение полей данных перед проверкой.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-292">You would typically suspend data binding if the user must be allowed to edit data fields before validation occurs.</span></span> <span data-ttu-id="8d7b7-293">Например, пользователю может потребоваться изменить поле в соответствии со вторым полем. в противном случае проверка первого поля приведет к ошибке во втором поле.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-293">For example, the user might need to change a field to be in accordance with a second field; otherwise, validating the first field would cause the second field to be in error.</span></span>  
  
   
  
## Examples  
 [!code-cpp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CPP/bindingmanagerbase_suspend_resume_binding.cpp#2)]
 [!code-csharp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CS/bindingmanagerbase_suspend_resume_binding.cs#2)]
 [!code-vb[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/VB/bindingmanagerbase_suspend_resume_binding.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="SuspendBinding">
      <MemberSignature Language="C#" Value="public abstract void SuspendBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SuspendBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SuspendBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SuspendBinding();" />
      <MemberSignature Language="F#" Value="abstract member SuspendBinding : unit -&gt; unit" Usage="bindingManagerBase.SuspendBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d7b7-294">При переопределении в производном классе приостанавливает действие привязки данных.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-294">When overridden in a derived class, suspends data binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7b7-295"><xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> и <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> — это два метода, которые позволяют временно Приостановка и возобновление привязки данных.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-295"><xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of data binding.</span></span> <span data-ttu-id="8d7b7-296">Как правило, привязка данных приостанавливается, если пользователю необходимо разрешить изменение полей данных перед проверкой.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-296">You would typically suspend data binding if the user must be allowed to edit data fields before validation occurs.</span></span> <span data-ttu-id="8d7b7-297">Например, пользователю может потребоваться изменить поле в соответствии со вторым полем. в противном случае проверка первого поля приведет к ошибке во втором поле.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-297">For example, the user might need to change a field to be in accordance with a second field; otherwise, validating the first field would cause the second field to be in error.</span></span>  
  
   
  
## Examples  
 [!code-cpp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CPP/bindingmanagerbase_suspend_resume_binding.cpp#2)]
 [!code-csharp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CS/bindingmanagerbase_suspend_resume_binding.cs#2)]
 [!code-vb[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/VB/bindingmanagerbase_suspend_resume_binding.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="UpdateIsBinding">
      <MemberSignature Language="C#" Value="protected abstract void UpdateIsBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UpdateIsBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub UpdateIsBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void UpdateIsBinding();" />
      <MemberSignature Language="F#" Value="abstract member UpdateIsBinding : unit -&gt; unit" Usage="bindingManagerBase.UpdateIsBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d7b7-298">При переопределении в производном классе обновляет привязку.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-298">When overridden in a derived class, updates the binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d7b7-299">Метод <xref:System.Windows.Forms.BindingManagerBase.UpdateIsBinding%2A> обновляет привязку данных между связанным элементом управления и его источником данных.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-299">The <xref:System.Windows.Forms.BindingManagerBase.UpdateIsBinding%2A> method updates the data binding between the bound control and its data source.</span></span> <span data-ttu-id="8d7b7-300">Для сложных сценариев привязки данных он также сбрасывает текущую точку до начала базового списка.</span><span class="sxs-lookup"><span data-stu-id="8d7b7-300">For complex data-binding scenarios, it also resets the current position to the beginning of the underlying list.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
  </Members>
</Type>
