<Type Name="OpacityConverter" FullName="System.Windows.Forms.OpacityConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="06429a0b393b4859e4e9282dd00e9ce1b82b8efd" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68392699" /></Metadata><TypeSignature Language="C#" Value="public class OpacityConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OpacityConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.OpacityConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class OpacityConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class OpacityConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type OpacityConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет преобразователь типов типа для преобразования значений прозрачности в строковый тип и из строкового типа.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило, экземпляр класса <xref:System.Windows.Forms.OpacityConverter>не создается напрямую. Вместо этого вызывается <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> <xref:System.ComponentModel.TypeDescriptor> метод класса. Дополнительные сведения о преобразователях типов и просмотре примеров кода см. в <xref:System.ComponentModel.TypeConverter> разделе базовый класс [и как Реализуйте преобразователь](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120))типов.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpacityConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpacityConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OpacityConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует экземпляр класса <see cref="T:System.Windows.Forms.OpacityConverter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это конструктор без параметров, предоставляемый компилятором.  
  
 Как правило, экземпляр класса <xref:System.Windows.Forms.OpacityConverter>не создается напрямую. Вместо этого вызовите <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> <xref:System.ComponentModel.TypeDescriptor> метод класса. Дополнительные сведения см. в примерах кода в <xref:System.ComponentModel.TypeConverter> базовом классе.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpacityConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="opacityConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий данные о контексте преобразователя типов.</param>
        <param name="sourceType">Объект <see cref="T:System.Type" />, представляющий тип, из которого требуется выполнить преобразование.</param>
        <summary>Возвращает значение, показывающее, может ли этот преобразователь преобразовать объект заданного исходного типа в собственный тип преобразователя, который использует указанный контекст.</summary>
        <returns>Имеет значение <see langword="true" />, если преобразователь может выполнить преобразование, в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `sourceType` Предполагается<xref:System.String>, что является.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Переопределите этот метод в соответствии с требованиями к преобразованию.  
  
С помощью <paramref name="context" /> параметра можно извлечь дополнительные сведения о среде, из которой вызывается этот преобразователь. Параметр может иметь <see langword="null" />значение, поэтому всегда следует проверять содержимое. Кроме того, свойства в <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> также могут возвращать <see langword="null" />значение.</para></block>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="Overload:System.Windows.Forms.OpacityConverter.ConvertFrom" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpacityConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="opacityConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий данные о контексте преобразователя типов.</param>
        <param name="culture">Сведения о языковом стандарте для преобразования.</param>
        <param name="value">Преобразуемый объект.</param>
        <summary>Преобразует указанный объект в собственный тип преобразователя.</summary>
        <returns>Объект <see cref="T:System.Object" />, представляющий преобразованное значение <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод является специализированным для преобразования <xref:System.String> значений, представляющих процентные или десятичные дроби, <xref:System.Double> в соответствующие значения, которые представляют непрозрачность в процентах. <xref:System.Windows.Forms.OpacityConverter.ConvertFrom%2A> Типы, отличные <xref:System.String> от, передаются в реализацию этого метода в базовом классе.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Тип объекта не поддерживается для преобразования.</exception>
        <exception cref="T:System.FormatException">Не удалось преобразовать параметр <paramref name="value" /> в тип <see cref="T:System.Double" />.  
  
-или- 
Результирующий параметр <paramref name="value" /> после преобразования имеет значение менее нуля процентов или более ста процентов.</exception>
        <block subset="none" type="overrides"><para>Переопределите этот метод в соответствии с требованиями к преобразованию.  
  
С помощью <paramref name="context" /> параметра можно извлечь дополнительные сведения о среде, из которой вызывается этот преобразователь. Параметр может иметь <see langword="null" />значение, поэтому всегда следует проверять содержимое. Кроме того, свойства в <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> также могут возвращать <see langword="null" />значение.</para></block>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="Overload:System.Windows.Forms.OpacityConverter.CanConvertFrom" />
        <altmember cref="Overload:System.Windows.Forms.OpacityConverter.ConvertTo" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpacityConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="opacityConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Объект <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий данные о контексте преобразователя типов.</param>
        <param name="culture">Сведения о языковом стандарте для преобразования.</param>
        <param name="value">Преобразуемое значение.</param>
        <param name="destinationType">Тип, в который требуется преобразовать объект.</param>
        <summary>Преобразует значение собственного типа преобразователя в значение конечного типа.</summary>
        <returns>Объект <see cref="T:System.Object" />, представляющий преобразованное значение <paramref name="value" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод является специализированным для преобразования целочисленных значений <xref:System.String> в процентные представления. <xref:System.Windows.Forms.OpacityConverter.ConvertTo%2A> Другие типы передаются в реализацию этого метода в базовом классе.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationType" /> — <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Не удается преобразовать значение <paramref name="value" /> в тип <paramref name="destinationType" />.</exception>
        <block subset="none" type="overrides"><para>Переопределите этот метод в соответствии с требованиями к преобразованию.  
  
С помощью <paramref name="context" /> параметра можно извлечь дополнительные сведения о среде, из которой вызывается этот преобразователь. Параметр может иметь <see langword="null" />значение, поэтому всегда следует проверять содержимое. Кроме того, свойства в <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> также могут возвращать <see langword="null" />значение.  
  
Итоговый объект представляет собой <see cref="T:System.String" /> процент непрозрачности.</para></block>
        <altmember cref="Overload:System.Windows.Forms.OpacityConverter.CanConvertFrom" />
        <altmember cref="Overload:System.Windows.Forms.OpacityConverter.ConvertFrom" />
      </Docs>
    </Member>
  </Members>
</Type>