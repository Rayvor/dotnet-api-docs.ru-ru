<Type Name="DragEventArgs" FullName="System.Windows.Forms.DragEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="362efc2e49ef25fa1abd34d6e38fa23b4d880bd7" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75179360" /></Metadata><TypeSignature Language="C#" Value="public class DragEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DragEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DragEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DragEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DragEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DragEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет данные для события <see cref="E:System.Windows.Forms.Control.DragDrop" />, <see cref="E:System.Windows.Forms.Control.DragEnter" /> или <see cref="E:System.Windows.Forms.Control.DragOver" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Событие <xref:System.Windows.Forms.Control.DragDrop> возникает, когда пользователь завершает операцию перетаскивания путем перетаскивания объекта на элемент управления, а затем удаляет его в элемент управления, отпустив кнопку мыши. Событие <xref:System.Windows.Forms.Control.DragEnter> возникает, когда пользователь перемещает указатель мыши на элемент управления при перетаскивании объекта с помощью мыши. Событие <xref:System.Windows.Forms.Control.DragOver> возникает, когда пользователь перемещает указатель мыши над элементом управления при перетаскивании объекта с помощью мыши.  
  
 Объект <xref:System.Windows.Forms.DragEventArgs> указывает любые данные, связанные с этим событием; Текущее состояние клавиш SHIFT, CTRL и ALT; расположение указателя мыши; и эффекты перетаскивания, разрешенные исходным и целевым объектом события перетаскивания.  
  
 Дополнительные сведения о модели событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере демонстрируется операция перетаскивания между двумя элементами управления <xref:System.Windows.Forms.ListBox>. В примере вызывается метод <xref:System.Windows.Forms.Control.DoDragDrop%2A>, когда начинается действие перетаскивания. Действие перетаскивания начинается, если мышь переместила больше <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> из положения мыши во время события <xref:System.Windows.Forms.Control.MouseDown>. Метод <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> используется для определения индекса элемента, перетаскиваемого во время события `MouseDown`.  
  
 В примере также демонстрируется использование пользовательских курсоров для операции перетаскивания. В этом примере предполагается, что два файла курсора, `3dwarro.cur` и `3dwno.cur`, существуют в каталоге приложения для настраиваемых курсоров перетаскивания и без перетаскивания соответственно. Пользовательские курсоры будут использоваться, если установлен флажок `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>. Пользовательские курсоры задаются в обработчике событий <xref:System.Windows.Forms.Control.GiveFeedback>.  
  
 Состояние клавиатуры вычисляется в обработчике событий <xref:System.Windows.Forms.Control.DragOver> для правой `ListBox`, чтобы определить, какая операция перетаскивания будет основываться на состоянии клавиш SHIFT, CTRL, ALT или CTRL + ALT. Расположение в `ListBox`, где происходит удаление, также определяется во время события `DragOver`. Если данные для удаления не являются `String`, <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> устанавливается в значение <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Наконец, состояние удаления отображается в <xref:System.Windows.Forms.Label>`DropLocationLabel`.  
  
 Данные, которые нужно удалить для правильного `ListBox`, определяются в обработчике событий <xref:System.Windows.Forms.Control.DragDrop>, а `String` значение добавляется в соответствующее место `ListBox`. Если операция перетаскивания выходит за границы формы, операция перетаскивания отменяется в обработчике событий <xref:System.Windows.Forms.Control.QueryContinueDrag>.  
  
 Этот фрагмент кода демонстрирует использование класса <xref:System.Windows.Forms.DragEventArgs>. Полный пример кода см. в описании метода <xref:System.Windows.Forms.Control.DoDragDrop%2A>.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 В следующем примере показано, как передаются <xref:System.Windows.Forms.DragEventArgs> между источником и целевым объектом операции перетаскивания. В этом примере элемент управления <xref:System.Windows.Forms.ListBox> является источником данных, а элемент управления <xref:System.Windows.Forms.RichTextBox> — целевым объектом. В примере предполагается, что элемент управления <xref:System.Windows.Forms.ListBox> заполнен списком допустимых имен файлов. Когда пользователь перетаскивает одно из отображаемых имен файлов из элемента управления <xref:System.Windows.Forms.ListBox> на элемент управления <xref:System.Windows.Forms.RichTextBox>, открывается файл, указанный в имени файла.  
  
 Операция инициируется в событии MouseDown элемента управления <xref:System.Windows.Forms.ListBox>. В обработчике событий <xref:System.Windows.Forms.RichTextBox.DragEnter> в примере используется метод <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>, чтобы убедиться, что данные имеют формат, который может быть отображен элементом управления <xref:System.Windows.Forms.RichTextBox>, а затем устанавливает свойство <xref:System.Windows.Forms.DragDropEffects>, чтобы указать, что данные должны копироваться из системы управления версиями в целевой элемент управления. Наконец, обработчик событий DragDrop элемента управления <xref:System.Windows.Forms.RichTextBox> использует метод <xref:System.Windows.Forms.IDataObject.GetData%2A>, чтобы получить открываемое имя файла.  
  
 [!code-cpp[RichTextDragDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextDragDrop/CPP/form1.cpp#1)]
 [!code-csharp[RichTextDragDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextDragDrop/CS/form1.cs#1)]
 [!code-vb[RichTextDragDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextDragDrop/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DragDropEffects" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
    <altmember cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.DragOver" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DragEventArgs (System.Windows.Forms.IDataObject data, int keyState, int x, int y, System.Windows.Forms.DragDropEffects allowedEffect, System.Windows.Forms.DragDropEffects effect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.IDataObject data, int32 keyState, int32 x, int32 y, valuetype System.Windows.Forms.DragDropEffects allowedEffect, valuetype System.Windows.Forms.DragDropEffects effect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DragEventArgs.#ctor(System.Windows.Forms.IDataObject,System.Int32,System.Int32,System.Int32,System.Windows.Forms.DragDropEffects,System.Windows.Forms.DragDropEffects)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As IDataObject, keyState As Integer, x As Integer, y As Integer, allowedEffect As DragDropEffects, effect As DragDropEffects)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DragEventArgs(System::Windows::Forms::IDataObject ^ data, int keyState, int x, int y, System::Windows::Forms::DragDropEffects allowedEffect, System::Windows::Forms::DragDropEffects effect);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DragEventArgs : System.Windows.Forms.IDataObject * int * int * int * System.Windows.Forms.DragDropEffects * System.Windows.Forms.DragDropEffects -&gt; System.Windows.Forms.DragEventArgs" Usage="new System.Windows.Forms.DragEventArgs (data, keyState, x, y, allowedEffect, effect)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="data" Type="System.Windows.Forms.IDataObject" />
        <Parameter Name="keyState" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="allowedEffect" Type="System.Windows.Forms.DragDropEffects" />
        <Parameter Name="effect" Type="System.Windows.Forms.DragDropEffects" />
      </Parameters>
      <Docs>
        <param name="data">Данные, связанные с этим событием.</param>
        <param name="keyState">Текущее состояние клавиш SHIFT, CTRL и ALT.</param>
        <param name="x">Координата курсора мыши в пикселях по оси X.</param>
        <param name="y">Координата курсора мыши в пикселях по оси Y.</param>
        <param name="allowedEffect">Одно из значений перечисления <see cref="T:System.Windows.Forms.DragDropEffects" />.</param>
        <param name="effect">Одно из значений перечисления <see cref="T:System.Windows.Forms.DragDropEffects" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.DragEventArgs" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="AllowedEffect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects AllowedEffect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects AllowedEffect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.AllowedEffect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedEffect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects AllowedEffect { System::Windows::Forms::DragDropEffects get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedEffect : System.Windows.Forms.DragDropEffects" Usage="System.Windows.Forms.DragEventArgs.AllowedEffect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, какие операции перетаскивания разрешены исходным элементом управления (источником) события перетаскивания.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Windows.Forms.DragDropEffects" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда элемент управления инициирует операцию перетаскивания путем вызова метода <xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=nameWithType>, он указывает допустимые эффекты операции. Например, при перетаскивании файла из источника, если файл доступен только для чтения (или на носителе, доступном только для чтения, например на компакт-диске), источник сообщит, что файл может быть скопирован, но не передан в целевой объект.  
  
 Прежде чем пытаться выполнить операцию с перенесенными данными, следует проверить это свойство, чтобы убедиться, что операция разрешена.  
  
   
  
## Examples  
 В следующем примере демонстрируется операция перетаскивания между двумя элементами управления <xref:System.Windows.Forms.ListBox>. В примере вызывается метод <xref:System.Windows.Forms.Control.DoDragDrop%2A>, когда начинается действие перетаскивания. Действие перетаскивания начинается, если мышь переместила больше <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> из положения мыши во время события <xref:System.Windows.Forms.Control.MouseDown>. Метод <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> используется для определения индекса элемента, перетаскиваемого во время события `MouseDown`.  
  
 В примере также демонстрируется использование пользовательских курсоров для операции перетаскивания. В этом примере предполагается, что два файла курсора, `3dwarro.cur` и `3dwno.cur`, существуют в каталоге приложения для настраиваемых курсоров перетаскивания и без перетаскивания соответственно. Пользовательские курсоры будут использоваться, если установлен флажок `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>. Пользовательские курсоры задаются в обработчике событий <xref:System.Windows.Forms.Control.GiveFeedback>.  
  
 Состояние клавиатуры вычисляется в обработчике событий <xref:System.Windows.Forms.Control.DragOver> для правой `ListBox`, чтобы определить, какая операция перетаскивания будет основываться на состоянии клавиш SHIFT, CTRL, ALT или CTRL + ALT. Расположение в `ListBox`, где происходит удаление, также определяется во время события `DragOver`. Если данные для удаления не являются `String`, <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> устанавливается в значение <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Наконец, состояние удаления отображается в <xref:System.Windows.Forms.Label>`DropLocationLabel`.  
  
 Данные, которые нужно удалить для правильного `ListBox`, определяются в обработчике событий <xref:System.Windows.Forms.Control.DragDrop>, а `String` значение добавляется в соответствующее место `ListBox`. Если операция перетаскивания выходит за границы формы, операция перетаскивания отменяется в обработчике событий <xref:System.Windows.Forms.Control.QueryContinueDrag>.  
  
 Этот фрагмент кода демонстрирует использование класса <xref:System.Windows.Forms.DragEventArgs>. Полный пример кода см. в описании метода <xref:System.Windows.Forms.Control.DoDragDrop%2A>.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IDataObject Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IDataObject Data" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As IDataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IDataObject ^ Data { System::Windows::Forms::IDataObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : System.Windows.Forms.IDataObject" Usage="System.Windows.Forms.DragEventArgs.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IDataObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает интерфейс <see cref="T:System.Windows.Forms.IDataObject" />, содержащий данные, связанные с этим событием.</summary>
        <value>Данные, связанные с этим событием.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В теле обработчика событий можно использовать метод <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>, чтобы определить, соответствуют ли данные требованиям к формату элемента управления, на который перетаскиваются данные. Можно также указать, нужно ли попытаться преобразовать данные в соответствии с требованиями к формату. Если перетаскиваемые данные соответствуют требованиям к формату, используйте метод <xref:System.Windows.Forms.IDataObject.GetData%2A> для получения данных.  
  
   
  
## Examples  
 В следующем примере демонстрируется операция перетаскивания между двумя элементами управления <xref:System.Windows.Forms.ListBox>. В примере вызывается метод <xref:System.Windows.Forms.Control.DoDragDrop%2A>, когда начинается действие перетаскивания. Действие перетаскивания начинается, если мышь переместила больше <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> из положения мыши во время события <xref:System.Windows.Forms.Control.MouseDown>. Метод <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> используется для определения индекса элемента, перетаскиваемого во время события `MouseDown`.  
  
 В примере также демонстрируется использование пользовательских курсоров для операции перетаскивания. В этом примере предполагается, что два файла курсора, `3dwarro.cur` и `3dwno.cur`, существуют в каталоге приложения для настраиваемых курсоров перетаскивания и без перетаскивания соответственно. Пользовательские курсоры будут использоваться, если установлен флажок `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>. Пользовательские курсоры задаются в обработчике событий <xref:System.Windows.Forms.Control.GiveFeedback>.  
  
 Состояние клавиатуры вычисляется в обработчике событий <xref:System.Windows.Forms.Control.DragOver> для правой `ListBox`, чтобы определить, какая операция перетаскивания будет основываться на состоянии клавиш SHIFT, CTRL, ALT или CTRL + ALT. Расположение в `ListBox`, где происходит удаление, также определяется во время события `DragOver`. Если данные для удаления не являются `String`, <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> устанавливается в значение <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Наконец, состояние удаления отображается в <xref:System.Windows.Forms.Label>`DropLocationLabel`.  
  
 Данные, которые нужно удалить для правильного `ListBox`, определяются в обработчике событий <xref:System.Windows.Forms.Control.DragDrop>, а `String` значение добавляется в соответствующее место `ListBox`. Если операция перетаскивания выходит за границы формы, операция перетаскивания отменяется в обработчике событий <xref:System.Windows.Forms.Control.QueryContinueDrag>.  
  
 Этот фрагмент кода демонстрирует использование класса <xref:System.Windows.Forms.DragEventArgs>. Полный пример кода см. в описании метода <xref:System.Windows.Forms.Control.DoDragDrop%2A>.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects Effect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DragDropEffects Effect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Effect" />
      <MemberSignature Language="VB.NET" Value="Public Property Effect As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DragDropEffects Effect { System::Windows::Forms::DragDropEffects get(); void set(System::Windows::Forms::DragDropEffects value); };" />
      <MemberSignature Language="F#" Value="member this.Effect : System.Windows.Forms.DragDropEffects with get, set" Usage="System.Windows.Forms.DragEventArgs.Effect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает эффект сброса в операции перетаскивания.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Windows.Forms.DragDropEffects" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию применяемый результат определяет курсор мыши для целевого объекта операции перетаскивания. Это полезно для предоставления отзывов пользователю о выполняемой операции. Например, если нажать клавишу CTRL при перетаскивании файла из источника, укажите <xref:System.Windows.Forms.DragDropEffects.Copy?displayProperty=nameWithType>, чтобы указать целевому объекту, что будет пытаться выполнить операцию копирования.  
  
 Сведения об использовании пользовательских курсоров для операции перетаскивания см. в разделе <xref:System.Windows.Forms.GiveFeedbackEventArgs.UseDefaultCursors%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 В следующем примере демонстрируется операция перетаскивания между двумя элементами управления <xref:System.Windows.Forms.ListBox>. В примере вызывается метод <xref:System.Windows.Forms.Control.DoDragDrop%2A>, когда начинается действие перетаскивания. Действие перетаскивания начинается, если мышь переместила больше <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> из положения мыши во время события <xref:System.Windows.Forms.Control.MouseDown>. Метод <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> используется для определения индекса элемента, перетаскиваемого во время события `MouseDown`.  
  
 В примере также демонстрируется использование пользовательских курсоров для операции перетаскивания. В этом примере предполагается, что два файла курсора, `3dwarro.cur` и `3dwno.cur`, существуют в каталоге приложения для настраиваемых курсоров перетаскивания и без перетаскивания соответственно. Пользовательские курсоры будут использоваться, если установлен флажок `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>. Пользовательские курсоры задаются в обработчике событий <xref:System.Windows.Forms.Control.GiveFeedback>.  
  
 Состояние клавиатуры вычисляется в обработчике событий <xref:System.Windows.Forms.Control.DragOver> для правой `ListBox`, чтобы определить, какая операция перетаскивания будет основываться на состоянии клавиш SHIFT, CTRL, ALT или CTRL + ALT. Расположение в `ListBox`, где происходит удаление, также определяется во время события `DragOver`. Если данные для удаления не являются `String`, <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> устанавливается в значение <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Наконец, состояние удаления отображается в <xref:System.Windows.Forms.Label>`DropLocationLabel`.  
  
 Данные, которые нужно удалить для правильного `ListBox`, определяются в обработчике событий <xref:System.Windows.Forms.Control.DragDrop>, а `String` значение добавляется в соответствующее место `ListBox`. Если операция перетаскивания выходит за границы формы, операция перетаскивания отменяется в обработчике событий <xref:System.Windows.Forms.Control.QueryContinueDrag>.  
  
 Этот фрагмент кода демонстрирует использование класса <xref:System.Windows.Forms.DragEventArgs>. Полный пример кода см. в описании метода <xref:System.Windows.Forms.Control.DoDragDrop%2A>.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DragDropEffects" />
      </Docs>
    </Member>
    <Member MemberName="KeyState">
      <MemberSignature Language="C#" Value="public int KeyState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.KeyState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyState As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyState { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyState : int" Usage="System.Windows.Forms.DragEventArgs.KeyState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает текущее состояние клавиш SHIFT, CTRL и ALT, а также состояние кнопок мыши.</summary>
        <value>Текущее состояние клавиш SHIFT, CTRL и ALT, а также кнопок мыши.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно сделать так, чтобы результат операции перетаскивания зависел от состояния определенного ключа. Например, можно выбрать копирование или перемещение данных в зависимости от того, нажаты ли клавиши CTRL или SHIFT во время операции перетаскивания.  
  
 Биты, заданные в свойстве <xref:System.Windows.Forms.DragEventArgs.KeyState%2A>, определяют ключи или кнопки мыши, которые были нажаты во время операции. Например, если нажата левая кнопка мыши, то устанавливается первый бит в свойстве <xref:System.Windows.Forms.DragEventArgs.KeyState%2A>. Для проверки данного состояния ключа можно использовать оператор побитового и.  
  
 В следующей таблице перечислены значения, используемые для указанного события.  
  
|Значение|Ключ|  
|-----------|---------|  
|1 (бит 0)|Левая кнопка мыши.|  
|2 (бит 1)|Правая кнопка мыши.|  
|4 (бит 2)|Клавиша SHIFT.|  
|8 (бит 3)|Клавиша CTRL.|  
|16 (бит 4)|Средняя кнопка мыши.|  
|32 (бит 5)|Клавиша ALT.|  
  
   
  
## Examples  
 В следующем примере демонстрируется операция перетаскивания между двумя элементами управления <xref:System.Windows.Forms.ListBox>. В примере вызывается метод <xref:System.Windows.Forms.Control.DoDragDrop%2A>, когда начинается действие перетаскивания. Действие перетаскивания начинается, если мышь переместила больше <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> из положения мыши во время события <xref:System.Windows.Forms.Control.MouseDown>. Метод <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> используется для определения индекса элемента, перетаскиваемого во время события `MouseDown`.  
  
 В примере также демонстрируется использование пользовательских курсоров для операции перетаскивания. В этом примере предполагается, что два файла курсора, `3dwarro.cur` и `3dwno.cur`, существуют в каталоге приложения для настраиваемых курсоров перетаскивания и без перетаскивания соответственно. Пользовательские курсоры будут использоваться, если установлен флажок `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>. Пользовательские курсоры задаются в обработчике событий <xref:System.Windows.Forms.Control.GiveFeedback>.  
  
 Состояние клавиатуры вычисляется в обработчике событий <xref:System.Windows.Forms.Control.DragOver> для правой `ListBox`, чтобы определить, какая операция перетаскивания будет основываться на состоянии клавиш SHIFT, CTRL, ALT или CTRL + ALT. Расположение в `ListBox`, где происходит удаление, также определяется во время события `DragOver`. Если данные для удаления не являются `String`, <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> устанавливается в значение <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Наконец, состояние удаления отображается в <xref:System.Windows.Forms.Label>`DropLocationLabel`.  
  
 Данные, которые нужно удалить для правильного `ListBox`, определяются в обработчике событий <xref:System.Windows.Forms.Control.DragDrop>, а `String` значение добавляется в соответствующее место `ListBox`. Если операция перетаскивания выходит за границы формы, операция перетаскивания отменяется в обработчике событий <xref:System.Windows.Forms.Control.QueryContinueDrag>.  
  
 Этот фрагмент кода демонстрирует использование класса <xref:System.Windows.Forms.DragEventArgs>. Полный пример кода см. в описании метода <xref:System.Windows.Forms.Control.DoDragDrop%2A>.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public int X { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.X" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property X As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int X { int get(); };" />
      <MemberSignature Language="F#" Value="member this.X : int" Usage="System.Windows.Forms.DragEventArgs.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает координату по оси X для указателя мыши в экранных координатах.</summary>
        <value>Координата указателя мыши по оси X в пикселях.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере демонстрируется операция перетаскивания между двумя элементами управления <xref:System.Windows.Forms.ListBox>. В примере вызывается метод <xref:System.Windows.Forms.Control.DoDragDrop%2A>, когда начинается действие перетаскивания. Действие перетаскивания начинается, если мышь переместила больше <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> из положения мыши во время события <xref:System.Windows.Forms.Control.MouseDown>. Метод <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> используется для определения индекса элемента, перетаскиваемого во время события `MouseDown`.  
  
 В примере также демонстрируется использование пользовательских курсоров для операции перетаскивания. В этом примере предполагается, что два файла курсора, `3dwarro.cur` и `3dwno.cur`, существуют в каталоге приложения для настраиваемых курсоров перетаскивания и без перетаскивания соответственно. Пользовательские курсоры будут использоваться, если установлен флажок `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>. Пользовательские курсоры задаются в обработчике событий <xref:System.Windows.Forms.Control.GiveFeedback>.  
  
 Состояние клавиатуры вычисляется в обработчике событий <xref:System.Windows.Forms.Control.DragOver> для правой `ListBox`, чтобы определить, какая операция перетаскивания будет основываться на состоянии клавиш SHIFT, CTRL, ALT или CTRL + ALT. Расположение в `ListBox`, где происходит удаление, также определяется во время события `DragOver`. Если данные для удаления не являются `String`, <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> устанавливается в значение <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Наконец, состояние удаления отображается в <xref:System.Windows.Forms.Label>`DropLocationLabel`.  
  
 Данные, которые нужно удалить для правильного `ListBox`, определяются в обработчике событий <xref:System.Windows.Forms.Control.DragDrop>, а `String` значение добавляется в соответствующее место `ListBox`. Если операция перетаскивания выходит за границы формы, операция перетаскивания отменяется в обработчике событий <xref:System.Windows.Forms.Control.QueryContinueDrag>.  
  
 Этот фрагмент кода демонстрирует использование класса <xref:System.Windows.Forms.DragEventArgs>. Полный пример кода см. в описании метода <xref:System.Windows.Forms.Control.DoDragDrop%2A>.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DragEventArgs.Y" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public int Y { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DragEventArgs.Y" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Y As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Y { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Y : int" Usage="System.Windows.Forms.DragEventArgs.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает координату указателя мыши по оси Y в экранных координатах.</summary>
        <value>Координата указателя мыши по оси Y в пикселях.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере демонстрируется операция перетаскивания между двумя элементами управления <xref:System.Windows.Forms.ListBox>. В примере вызывается метод <xref:System.Windows.Forms.Control.DoDragDrop%2A>, когда начинается действие перетаскивания. Действие перетаскивания начинается, если мышь переместила больше <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> из положения мыши во время события <xref:System.Windows.Forms.Control.MouseDown>. Метод <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> используется для определения индекса элемента, перетаскиваемого во время события `MouseDown`.  
  
 В примере также демонстрируется использование пользовательских курсоров для операции перетаскивания. В этом примере предполагается, что два файла курсора, `3dwarro.cur` и `3dwno.cur`, существуют в каталоге приложения для настраиваемых курсоров перетаскивания и без перетаскивания соответственно. Пользовательские курсоры будут использоваться, если установлен флажок `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox>. Пользовательские курсоры задаются в обработчике событий <xref:System.Windows.Forms.Control.GiveFeedback>.  
  
 Состояние клавиатуры вычисляется в обработчике событий <xref:System.Windows.Forms.Control.DragOver> для правой `ListBox`, чтобы определить, какая операция перетаскивания будет основываться на состоянии клавиш SHIFT, CTRL, ALT или CTRL + ALT. Расположение в `ListBox`, где происходит удаление, также определяется во время события `DragOver`. Если данные для удаления не являются `String`, <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> устанавливается в значение <xref:System.Windows.Forms.DragDropEffects.None?displayProperty=nameWithType>. Наконец, состояние удаления отображается в <xref:System.Windows.Forms.Label>`DropLocationLabel`.  
  
 Данные, которые нужно удалить для правильного `ListBox`, определяются в обработчике событий <xref:System.Windows.Forms.Control.DragDrop>, а `String` значение добавляется в соответствующее место `ListBox`. Если операция перетаскивания выходит за границы формы, операция перетаскивания отменяется в обработчике событий <xref:System.Windows.Forms.Control.QueryContinueDrag>.  
  
 Этот фрагмент кода демонстрирует использование класса <xref:System.Windows.Forms.DragEventArgs>. Полный пример кода см. в описании метода <xref:System.Windows.Forms.Control.DoDragDrop%2A>.  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DragEventArgs.X" />
      </Docs>
    </Member>
  </Members>
</Type>
