<Type Name="MaskedTextBox" FullName="System.Windows.Forms.MaskedTextBox">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4fa1a5b8dfd6830403ad1f318c5ea51e6693aac4" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65015396" /></Metadata><TypeSignature Language="C#" Value="public class MaskedTextBox : System.Windows.Forms.TextBoxBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MaskedTextBox extends System.Windows.Forms.TextBoxBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.MaskedTextBox" />
  <TypeSignature Language="VB.NET" Value="Public Class MaskedTextBox&#xA;Inherits TextBoxBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class MaskedTextBox : System::Windows::Forms::TextBoxBase" />
  <TypeSignature Language="F#" Value="type MaskedTextBox = class&#xA;    inherit TextBoxBase" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.TextBoxBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultBindingProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("MaskInputRejected")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Mask")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.MaskedTextBoxDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.MaskedTextBoxDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Использует маску для различения допустимого и недопустимого ввода данных пользователем.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox> Класс — это расширенная <xref:System.Windows.Forms.TextBox> элемента управления, поддерживающего декларативный синтаксис для принятия или отклонения введенных пользователем данных. С помощью <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> можно указать следующие входные данные без написания настраиваемую логику проверки в приложении:  
  
-   Обязательные входные символы.  
  
-   Необязательные входные символы.  
  
-   Тип входных данных, ожидаемых в заданной позиции в маске; Например цифра или символ является буквой алфавита или буквенно-цифровых.  
  
-   Маскировать литералы и символы, которые должны отображаться непосредственно в <xref:System.Windows.Forms.MaskedTextBox>; например, дефисы (-) в номер телефона, или символ валюты в цену.  
  
-   Особая обработка для ввода символов. Например, для преобразования в верхний регистр букв.  
  
 Когда <xref:System.Windows.Forms.MaskedTextBox> отображения элемента управления во время выполнения, он представляет маску как ряд знаки приглашения и дополнительных литералов. Каждая позиция редактируемой маска, представляющая обязательные и необязательные входные данные, отображается в виде одного символа приглашения. Например знак номера (#) часто используется как заполнитель для ввода числового символа. Можно использовать <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A> свойство, чтобы указать пользовательские символ приглашения. <xref:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave%2A> Свойство определяет, если пользователь увидит символы подсказки при потере элементом управления фокус ввода.  
  
 Как пользователь вводит данные в текстовое поле с маской, допустимые входные символы замените символов приглашения последовательно. Если пользователь вводит недопустимое входного символа, не замена происходит, но вместо этого выдается звукового сигнала, если <xref:System.Windows.Forms.MaskedTextBox.BeepOnError%2A> свойству `true`и <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> события. Обрабатывая это событие можно предоставить собственную логику настраиваемой ошибки.  
  
 Когда точка вставки буквенный символ, пользователь имеет несколько вариантов:  
  
-   Если символ, отличный от символа приглашения типизирован, литерала автоматически пропускается, и введенный символ будет применяться к Далее редактируемой позиции, представленных следующим символом приглашения.  
  
-   Если введен знак приглашения и <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A> свойство имеет значение true, входные данные будут замены символ приглашения и вставки точка перемещается в следующую позицию в маске.  
  
-   Как всегда в случае, можно использовать клавиши со стрелками для перехода к следующей или предыдущей позиции.  
  
 Можно использовать <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A> свойство для проверки ли пользователь ввел все необходимые входные данные. <xref:System.Windows.Forms.MaskedTextBox.Text%2A> Свойство будет всегда получают ввод пользователя, отформатированное в соответствии со маску и <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> свойство.  
  
 <xref:System.Windows.Forms.MaskedTextBox> Управления фактически откладывает все этапы обработки маски до <xref:System.ComponentModel.MaskedTextProvider?displayProperty=nameWithType> класс, указанный <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> свойство. Этот стандартный поставщик поддерживает все символы Юникода, за исключением суррогаты и по вертикали в сочетании символов; Тем не менее <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> свойство может использоваться для ограничения входных данных для символов наборов a – z, A-Z и 0 – 9.  
  
 Маски не всегда гарантирует, что входные данные пользователя будут представляет допустимое значение для заданного типа. Например можно ввести -9 для возраст в годах. Убедитесь, что входные данные пользователя представляет допустимое значение, назначив экземпляр типа этого значения для <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> свойство. Вы можете обнаружить, является ли пользователь удаляет фокус из <xref:System.Windows.Forms.MaskedTextBox> когда он содержит недопустимое значение, отслеживая <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> событий. Если тип проверка прошла успешно, объект, представляющий значение будет доступно <xref:System.Windows.Forms.TypeValidationEventArgs.ReturnValue%2A> свойство <xref:System.Windows.Forms.TypeValidationEventArgs> параметр.  
  
 Как и в <xref:System.Windows.Forms.TextBox> элемента управления, распространенные сочетания клавиш не работают с <xref:System.Windows.Forms.MaskedTextBox>. В частности, CTRL + R (выравнивание по правому краю текста), сочетание клавиш CTRL-L (выравнивание по левому краю текста), и сочетание клавиш CTRL-L (выровнять текст по центру) не влияют.  
  
## <a name="compatibility-with-visual-basic-60"></a>Совместимость с Visual Basic 6.0  
 <xref:System.Windows.Forms.MaskedTextBox> был разработан для хранения большинство функциональных возможностей элемента управления Masked Edit в Visual Basic 6.0. В следующей таблице перечислены общие свойства в элемент управления Masked Edit и обеспечивает их эквиваленты в <xref:System.Windows.Forms.MaskedTextBox>.  
  
|Скрытый свойство редактирования элемента управления (Visual Basic 6.0)|Эквивалентное MaskedTextBox ([!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]) свойства|  
|-------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------|  
|Свойство `AllowPrompt`|<xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A>|  
|Свойство `AutoTab`|Нет|  
|Свойство `ClipMode`|<xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A>|  
|Свойство `ClipText`|<xref:System.Windows.Forms.MaskedTextBox.Text%2A> (при <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> присваивается <xref:System.Windows.Forms.MaskFormat.ExcludePromptAndLiterals>)|  
|Свойство `Format`|Нет|  
|Свойство `FormattedText`|<xref:System.Windows.Forms.MaskedTextBox.Text%2A> (при <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> присваивается <xref:System.Windows.Forms.MaskFormat.IncludePromptAndLiterals>)|  
|Свойство `Mask`|<xref:System.Windows.Forms.MaskedTextBox.Mask%2A>|  
|Свойство `PromptChar`|<xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A>|  
|Свойство `PromptInclude`|<xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A>|  
|Событие`ValidationError` |<xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected>|  
  
> [!CAUTION]
>  <xref:System.Windows.Forms.MaskedTextBox> Управления не поддерживает многострочной конфигурации или отмены. Тем не менее при элементы, связанные с этими функциями были сохранены для обеспечения совместимости с <xref:System.Windows.Forms.TextBoxBase> базового класса, их реализации не выполняют никаких действий.  
  
   
  
## Examples  
 В следующем примере кода пример инициализирует <xref:System.Windows.Forms.MaskedTextBox> принять дату, использует оба <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> и <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> события, чтобы предупредить пользователя недопустимые входные данные.  
  
 [!code-csharp[MaskInputRejectedSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MaskInputRejectedSample/CS/form1.cs#1)]
 [!code-vb[MaskInputRejectedSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MaskInputRejectedSample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
    <altmember cref="T:System.ComponentModel.MaskedTextProvider" />
    <related type="Article" href="https://msdn.microsoft.com/library/235d6121-027d-481d-8d59-4f6794d15d0c">Элемент управления MaskedTextBox (Windows Forms)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.MaskedTextBox" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.MaskedTextBox" /> используя значения по умолчанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение по умолчанию <xref:System.Windows.Forms.MaskedTextBox.%23ctor> конструктора задает <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> свойство null маске, в строке «<>». Маска null будет принимать любое сочетание символов, как входные данные.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextBox (System.ComponentModel.MaskedTextProvider maskedTextProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.MaskedTextProvider maskedTextProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.#ctor(System.ComponentModel.MaskedTextProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextBox(System::ComponentModel::MaskedTextProvider ^ maskedTextProvider);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.MaskedTextBox : System.ComponentModel.MaskedTextProvider -&gt; System.Windows.Forms.MaskedTextBox" Usage="new System.Windows.Forms.MaskedTextBox maskedTextProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="maskedTextProvider" Type="System.ComponentModel.MaskedTextProvider" />
      </Parameters>
      <Docs>
        <param name="maskedTextProvider">Поставщик нестандартного маски языка, производным от <see cref="T:System.ComponentModel.MaskedTextProvider" /> класса.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.MaskedTextBox" /> класса с помощью указанного поставщика нестандартного маски языка.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `maskedTextProvider` Параметр определяет язык маски, используемый <xref:System.Windows.Forms.MaskedTextBox>. Он отвечает за синтаксический анализ маски и определить, соответствует ли ввод данных пользователем в текущей позиции маски. Можно наследовать новый класс из <xref:System.ComponentModel.MaskedTextProvider?displayProperty=nameWithType> определить собственные пользовательские маски языка, и использовать <xref:System.Windows.Forms.MaskedTextBox.%23ctor%28System.ComponentModel.MaskedTextProvider%29> конструктор для замены стандартного <xref:System.ComponentModel.MaskedTextProvider?displayProperty=nameWithType>.  
  
 Если вы хотите использовать язык маски по умолчанию и предоставить собственную маску ввода, вы не обязательно должны использовать этот конструктор. Вместо этого вы можете использовать <xref:System.Windows.Forms.MaskedTextBox.%23ctor%28System.String%29> конструктору, или используйте конструктор по умолчанию, задайте <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> свойство.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="maskedTextProvider" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
        <altmember cref="T:System.ComponentModel.MaskedTextProvider" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MaskedTextBox (string mask);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mask As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MaskedTextBox(System::String ^ mask);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.MaskedTextBox : string -&gt; System.Windows.Forms.MaskedTextBox" Usage="new System.Windows.Forms.MaskedTextBox mask" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mask" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mask">Объект <see cref="T:System.String" /> представляющая маску ввода. Начальное значение <see cref="P:System.Windows.Forms.MaskedTextBox.Mask" /> свойства.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.MaskedTextBox" /> класса, используя указанную маску ввода.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.%23ctor%28System.String%29> Конструктор использует стандарт <xref:System.ComponentModel.MaskedTextProvider?displayProperty=nameWithType> с входными данными `mask` выполнить синтаксический анализ входных данных пользователя <xref:System.Windows.Forms.MaskedTextBox>.  
  
 Если назначить новую маску для <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> свойства, она переопределит значение, заданное этим конструктором.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="mask" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="T:System.ComponentModel.MaskedTextProvider" />
      </Docs>
    </Member>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.AcceptsTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsTab { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptsTab : bool with get, set" Usage="System.Windows.Forms.MaskedTextBox.AcceptsTab" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, определяющее, как обрабатывается нажатие клавиши TAB в многострочной конфигурации. Это свойство не поддерживается <see cref="T:System.Windows.Forms.MaskedTextBox" />.</summary>
        <value>Значение <see langword="false" /> во всех случаях.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.AcceptsTab%2A> Свойство наследуется от базового <xref:System.Windows.Forms.TextBoxBase> класса. Тем не менее поскольку <xref:System.Windows.Forms.MaskedTextBox> управления не поддерживает многострочной конфигурации, это свойство не поддерживается.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.AcceptsTabChanged" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Multiline" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Lines" />
      </Docs>
    </Member>
    <Member MemberName="AcceptsTabChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AcceptsTabChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AcceptsTabChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MaskedTextBox.AcceptsTabChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AcceptsTabChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AcceptsTabChanged;" />
      <MemberSignature Language="F#" Value="member this.AcceptsTabChanged : EventHandler " Usage="member this.AcceptsTabChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит в результате изменения значения свойства <see cref="P:System.Windows.Forms.MaskedTextBox.AcceptsTab" />. Это событие не вызывается элементом <see cref="T:System.Windows.Forms.MaskedTextBox" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.AcceptsTabChanged> Событие наследуется от базового <xref:System.Windows.Forms.TextBoxBase> класса. Тем не менее поскольку <xref:System.Windows.Forms.MaskedTextBox> управления не поддерживает многострочной конфигурации, это событие не поддерживается.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AcceptsTab" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Multiline" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Lines" />
      </Docs>
    </Member>
    <Member MemberName="AllowPromptAsInput">
      <MemberSignature Language="C#" Value="public bool AllowPromptAsInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPromptAsInput" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowPromptAsInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowPromptAsInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowPromptAsInput : bool with get, set" Usage="System.Windows.Forms.MaskedTextBox.AllowPromptAsInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, является ли <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" /> можно ввести в качестве допустимых данных пользователем.</summary>
        <value><see langword="true" /> Если пользователь может вводить символ приглашения в элементе управления; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Даже в том случае, когда <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A> является `true`, чтобы принять символ приглашения должен быть допустимым для текущей позиции в маске. Например если <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A> — «*», и текущей позиции в маске пользователю ввести цифры, введя символ звездочки (\*) не удастся и вызвать <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> возникновения события.  
  
 <xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A> Свойство имеет приоритет над <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnPrompt" />
      </Docs>
    </Member>
    <Member MemberName="AsciiOnly">
      <MemberSignature Language="C#" Value="public bool AsciiOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AsciiOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.AsciiOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property AsciiOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AsciiOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AsciiOnly : bool with get, set" Usage="System.Windows.Forms.MaskedTextBox.AsciiOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, является ли <see cref="T:System.Windows.Forms.MaskedTextBox" /> элемент управления принимает символы вне набора символов ASCII.</summary>
        <value><see langword="true" /> Если только принимается ASCII; <see langword="false" /> Если <see cref="T:System.Windows.Forms.MaskedTextBox" /> элемент управления может принимать любой символ Юникода. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `true`, <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> ограничивает ввод пользовательских данных в символы a – z и A – Z. Управляющие символы ASCII, не допускаются.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.SkipLiterals" />
      </Docs>
    </Member>
    <Member MemberName="BeepOnError">
      <MemberSignature Language="C#" Value="public bool BeepOnError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BeepOnError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.BeepOnError" />
      <MemberSignature Language="VB.NET" Value="Public Property BeepOnError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BeepOnError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BeepOnError : bool with get, set" Usage="System.Windows.Forms.MaskedTextBox.BeepOnError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, подает ли элемент управления "текстовое поле с маской" звуковой сигнал для каждого отклоненного нажатия клавиши.</summary>
        <value><see langword="true" /> Если <see cref="T:System.Windows.Forms.MaskedTextBox" /> элемент управления должен подавать на недопустимый ввод; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> События по-прежнему возникают, если <xref:System.Windows.Forms.MaskedTextBox.BeepOnError%2A> свойству `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.MaskInputRejected" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.ValidateText" />
      </Docs>
    </Member>
    <Member MemberName="CanUndo">
      <MemberSignature Language="C#" Value="public bool CanUndo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUndo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.CanUndo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanUndo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanUndo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUndo : bool" Usage="System.Windows.Forms.MaskedTextBox.CanUndo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, может ли пользователь отменить предыдущую операцию. Это свойство не поддерживается <see cref="T:System.Windows.Forms.MaskedTextBox" />.</summary>
        <value>Значение <see langword="false" /> во всех случаях.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.CanUndo%2A> Свойство наследуется от базового <xref:System.Windows.Forms.TextBoxBase> класса. Тем не менее так как <xref:System.Windows.Forms.MaskedTextBox> не поддержка функции отмены, это свойство всегда имеет значение `false`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.ClearUndo" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.Undo" />
      </Docs>
    </Member>
    <Member MemberName="ClearUndo">
      <MemberSignature Language="C#" Value="public void ClearUndo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearUndo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.ClearUndo" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearUndo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearUndo();" />
      <MemberSignature Language="F#" Value="override this.ClearUndo : unit -&gt; unit" Usage="maskedTextBox.ClearUndo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет из буфера отмены текстового поля сведения относительно последней операции. Этот метод не поддерживается <see cref="T:System.Windows.Forms.MaskedTextBox" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.ClearUndo%2A> Метод наследуется от базового <xref:System.Windows.Forms.TextBoxBase> класса. Тем не менее <xref:System.Windows.Forms.MaskedTextBox> не поддерживает функцию отмены.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.CanUndo" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.Undo" />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected override void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateHandle();" />
      <MemberSignature Language="F#" Value="override this.CreateHandle : unit -&gt; unit" Usage="maskedTextBox.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает дескриптор для элемента управления.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.MaskedTextBox.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает параметры, необходимые для создания дескриптора элемента управления.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.CreateParams" />, представляющий сведения, необходимые при создании элемента управления.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo with get, set" Usage="System.Windows.Forms.MaskedTextBox.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает сведения о языке и региональных параметрах, связанные с текстовым полем с маской.</summary>
        <value>Объект <see cref="T:System.Globalization.CultureInfo" /> представляющий культуру, поддерживаемую <see cref="T:System.Windows.Forms.MaskedTextBox" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.Windows.Forms.MaskedTextBox.Culture" /> было присвоено <see langword="null" />.</exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.FormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="CutCopyMaskFormat">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MaskFormat CutCopyMaskFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.MaskFormat CutCopyMaskFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property CutCopyMaskFormat As MaskFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MaskFormat CutCopyMaskFormat { System::Windows::Forms::MaskFormat get(); void set(System::Windows::Forms::MaskFormat value); };" />
      <MemberSignature Language="F#" Value="member this.CutCopyMaskFormat : System.Windows.Forms.MaskFormat with get, set" Usage="System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MaskFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, определяющее, копируются ли литералы и символы приглашения в буфер обмена.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Windows.Forms.MaskFormat" />. Значение по умолчанию — <see cref="F:System.Windows.Forms.MaskFormat.IncludeLiterals" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A> Свойство определяет, как текст, выбранные в <xref:System.Windows.Forms.MaskedTextBox> управления, интерпретируется, когда он копируется в буфер обмена или получить с помощью <xref:System.Windows.Forms.MaskedTextBox.SelectedText%2A> свойство. В частности он определяет, литералы и символы приглашения, включены ли при обращении к выделенный текст. Если символы приглашения не включаются, они преобразуются в пробелы в скопированной строки.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> Свойства служат одинаковой цели с точки зрения как <xref:System.Windows.Forms.MaskedTextBox.Text%2A> интерпретируется свойство.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Свойства задано <see cref="T:System.Windows.Forms.MaskFormat" /> значение, которое является недопустимым.</exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.TextMaskFormat" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.ToString" />
      </Docs>
    </Member>
    <Member MemberName="FormatProvider">
      <MemberSignature Language="C#" Value="public IFormatProvider FormatProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IFormatProvider FormatProvider" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.FormatProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property FormatProvider As IFormatProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IFormatProvider ^ FormatProvider { IFormatProvider ^ get(); void set(IFormatProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FormatProvider : IFormatProvider with get, set" Usage="System.Windows.Forms.MaskedTextBox.FormatProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IFormatProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает <see cref="T:System.IFormatProvider" /> для использования при проверке типа.</summary>
        <value>Объект, реализующий интерфейс <see cref="T:System.IFormatProvider" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> Определяет, какие символы используются для валюты, даты и другими региональными маска заполнители, когда происходит проверка типа и элемент управления имеет отличный от null <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> свойство.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Culture" />
      </Docs>
    </Member>
    <Member MemberName="GetCharFromPosition">
      <MemberSignature Language="C#" Value="public override char GetCharFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetCharFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.GetCharFromPosition(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharFromPosition (pt As Point) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetCharFromPosition(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="override this.GetCharFromPosition : System.Drawing.Point -&gt; char" Usage="maskedTextBox.GetCharFromPosition pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt">Местоположение, начиная с которого осуществляется поиск ближайшего символа.</param>
        <summary>Возвращает символ, ближайший к указанному местоположению в элементе управления.</summary>
        <returns>Символ в заданном местоположении.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)" />
      </Docs>
    </Member>
    <Member MemberName="GetCharIndexFromPosition">
      <MemberSignature Language="C#" Value="public override int GetCharIndexFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharIndexFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.GetCharIndexFromPosition(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharIndexFromPosition (pt As Point) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharIndexFromPosition(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="override this.GetCharIndexFromPosition : System.Drawing.Point -&gt; int" Usage="maskedTextBox.GetCharIndexFromPosition pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt">Местоположение для поиска.</param>
        <summary>Возвращает индекс ближайшего к указанному местоположению символа.</summary>
        <returns>Отсчитываемый от нуля индекс символа в указанном местоположении.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstCharIndexFromLine">
      <MemberSignature Language="C#" Value="public int GetFirstCharIndexFromLine (int lineNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstCharIndexFromLine(int32 lineNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.GetFirstCharIndexFromLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstCharIndexFromLine (lineNumber As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstCharIndexFromLine(int lineNumber);" />
      <MemberSignature Language="F#" Value="override this.GetFirstCharIndexFromLine : int -&gt; int" Usage="maskedTextBox.GetFirstCharIndexFromLine lineNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineNumber">Этот параметр не используется.</param>
        <summary>Возвращает индекс первого символа заданной строки. Этот метод не поддерживается <see cref="T:System.Windows.Forms.MaskedTextBox" />.</summary>
        <returns>Этот метод всегда возвращает значение 0.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.GetFirstCharIndexFromLine%2A> Метод наследуется от базового <xref:System.Windows.Forms.TextBoxBase> класса. Тем не менее поскольку <xref:System.Windows.Forms.MaskedTextBox> управления не поддерживает многострочной конфигурации, этот метод не поддерживается.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Multiline" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.GetFirstCharIndexOfCurrentLine" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.GetLineFromCharIndex(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstCharIndexOfCurrentLine">
      <MemberSignature Language="C#" Value="public int GetFirstCharIndexOfCurrentLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstCharIndexOfCurrentLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.GetFirstCharIndexOfCurrentLine" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstCharIndexOfCurrentLine () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstCharIndexOfCurrentLine();" />
      <MemberSignature Language="F#" Value="override this.GetFirstCharIndexOfCurrentLine : unit -&gt; int" Usage="maskedTextBox.GetFirstCharIndexOfCurrentLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает индекс первого символа текущей строки. Этот метод не поддерживается <see cref="T:System.Windows.Forms.MaskedTextBox" />.</summary>
        <returns>Этот метод всегда возвращает значение 0.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.GetFirstCharIndexOfCurrentLine%2A> Метод наследуется от базового <xref:System.Windows.Forms.TextBoxBase> класса. Тем не менее поскольку <xref:System.Windows.Forms.MaskedTextBox> управления не поддерживает многострочной конфигурации, этот метод не поддерживается.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Multiline" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.GetFirstCharIndexFromLine(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.GetLineFromCharIndex(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetLineFromCharIndex">
      <MemberSignature Language="C#" Value="public override int GetLineFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLineFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.GetLineFromCharIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLineFromCharIndex (index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLineFromCharIndex(int index);" />
      <MemberSignature Language="F#" Value="override this.GetLineFromCharIndex : int -&gt; int" Usage="maskedTextBox.GetLineFromCharIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Этот параметр не используется.</param>
        <summary>Вычисляет номер строки по указанному положению символа в тексте элемента управления. Этот метод не поддерживается <see cref="T:System.Windows.Forms.MaskedTextBox" />.</summary>
        <returns>Этот метод всегда возвращает значение 0.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.GetLineFromCharIndex%2A> Метод наследуется от базового <xref:System.Windows.Forms.TextBoxBase> класса. Тем не менее поскольку <xref:System.Windows.Forms.MaskedTextBox> управления не поддерживает многострочной конфигурации, этот метод не поддерживается.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Multiline" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.GetFirstCharIndexFromLine(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.GetFirstCharIndexOfCurrentLine" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionFromCharIndex">
      <MemberSignature Language="C#" Value="public override System.Drawing.Point GetPositionFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Drawing.Point GetPositionFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.GetPositionFromCharIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPositionFromCharIndex (index As Integer) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Drawing::Point GetPositionFromCharIndex(int index);" />
      <MemberSignature Language="F#" Value="override this.GetPositionFromCharIndex : int -&gt; System.Drawing.Point" Usage="maskedTextBox.GetPositionFromCharIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Индекс символа, расположение которого требуется определить.</param>
        <summary>Вычисляет положение в элементе управления по указанному индексу символа.</summary>
        <returns>Расположение указанного символа в клиентском прямоугольнике элемента управления.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HidePromptOnLeave">
      <MemberSignature Language="C#" Value="public bool HidePromptOnLeave { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HidePromptOnLeave" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave" />
      <MemberSignature Language="VB.NET" Value="Public Property HidePromptOnLeave As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HidePromptOnLeave { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HidePromptOnLeave : bool with get, set" Usage="System.Windows.Forms.MaskedTextBox.HidePromptOnLeave" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, скрываются ли символы подсказки в маске ввода, когда фокус покидает элемент управления "текстовое поле с маской".</summary>
        <value><see langword="true" /> Если <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" /> скрываются, когда <see cref="T:System.Windows.Forms.MaskedTextBox" /> не имеет фокуса; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnPrompt" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.TextMaskFormat" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat" />
      </Docs>
    </Member>
    <Member MemberName="InsertKeyMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.InsertKeyMode InsertKeyMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.InsertKeyMode InsertKeyMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.InsertKeyMode" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertKeyMode As InsertKeyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::InsertKeyMode InsertKeyMode { System::Windows::Forms::InsertKeyMode get(); void set(System::Windows::Forms::InsertKeyMode value); };" />
      <MemberSignature Language="F#" Value="member this.InsertKeyMode : System.Windows.Forms.InsertKeyMode with get, set" Usage="System.Windows.Forms.MaskedTextBox.InsertKeyMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.InsertKeyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает режим вставки текста в элементе управления "текстовое поле с маской".</summary>
        <value><see cref="T:System.Windows.Forms.InsertKeyMode" /> Значение, указывающее текущий режим вставки. Значение по умолчанию — <see cref="F:System.Windows.Forms.InsertKeyMode.Default" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> Свойство управляет поведением вставки символов <xref:System.Windows.Forms.MaskedTextBox> элемента управления. Состояние этого свойства определяется <xref:System.Windows.Forms.InsertKeyMode> перечисления, который может быть always on, off или всегда присвоено используется значение, указанное клавиатуры пользователя. Это свойство заменяет режим вставки клавиатуры. Например, если имеет значение клавиатуры, чтобы перезаписать файл но <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> присваивается `Insert`, <xref:System.Windows.Forms.MaskedTextBox> будет работать в режиме вставки. <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> Свойство получит доступ к режимом true вставки <xref:System.Windows.Forms.MaskedTextBox>.  
  
 Если изменение <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> изменяет значение <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A>, <xref:System.Windows.Forms.MaskedTextBox> вызовет <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged> событий.  
  
 Если маска не было задано, это свойство игнорируется.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Указан недопустимый <see cref="T:System.Windows.Forms.InsertKeyMode" /> было передано значение при задании этого свойства.</exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.IsOverwriteMode" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AsciiOnly" />
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected override bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="maskedTextBox.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">Одно из значений перечисления <see cref="T:System.Windows.Forms.Keys" />.</param>
        <summary>Определяет, является ли указанная клавиша клавишей ввода или специальной клавишей, требующей предварительной обработки.</summary>
        <returns><see langword="true" /> Если заданная клавиша является клавишей ввода; в противном случае <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOverwriteMode">
      <MemberSignature Language="C#" Value="public bool IsOverwriteMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOverwriteMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.IsOverwriteMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOverwriteMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOverwriteMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOverwriteMode : bool" Usage="System.Windows.Forms.MaskedTextBox.IsOverwriteMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, определяющее, заменяют ли данные, вводимые пользователем, ранее введенные данные в текущей позиции.</summary>
        <value><see langword="true" /> Если <see cref="T:System.Windows.Forms.MaskedTextBox" /> существующие символы будут заменяться, который пользователь вводит новые; <see langword="false" /> Если <see cref="T:System.Windows.Forms.MaskedTextBox" /> будут сдвигаться вперед существующие символы. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> учитывает значения параметра <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> свойства и состояние клавиатуры пользователя. Если <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> может принимать значение <xref:System.Windows.Forms.InsertKeyMode.Insert> или <xref:System.Windows.Forms.InsertKeyMode.Overwrite>, <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> вернет `false` или `true`, соответственно. Если <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> присваивается <xref:System.Windows.Forms.InsertKeyMode.Default>, он возвращает состояние клавиши INSERT.  
  
 Когда <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> — `false`, <xref:System.Windows.Forms.MaskedTextBox> отклонит как недопустимые любой символ записи, которая может привести к нарушению в любом месте в маске. В описание Если знак вставки могут привести к символ в позицию маски, где будет допустимым, должны сдвигаться через вставку символов будут отклонены.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.InsertKeyMode" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AsciiOnly" />
      </Docs>
    </Member>
    <Member MemberName="IsOverwriteModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler IsOverwriteModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler IsOverwriteModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsOverwriteModeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ IsOverwriteModeChanged;" />
      <MemberSignature Language="F#" Value="member this.IsOverwriteModeChanged : EventHandler " Usage="member this.IsOverwriteModeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после изменения режима вставки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged> Событие вызывается после значение <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> изменении свойства.  
  
 Это событие необходимо для правильной привязки данных <xref:System.Windows.Forms.MaskedTextBox> элемента управления.  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В примере обработчик событий сообщает о вхождение <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged> событий. Этот отчет позволяет выяснить, когда происходит событие и может оказаться полезным при отладке. Чтобы создать отчет для нескольких событий или событий, которые происходят часто, рассмотрите возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> с <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> или добавлении сообщения в многострочном <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы запустить пример кода, вставьте его в проект, который содержит экземпляр типа <xref:System.Windows.Forms.MaskedTextBox> с именем `MaskedTextBox1`. Убедитесь, что обработчик событий, связанный с <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged> событий.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#484](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#484)]
 [!code-vb[System.Windows.Forms.EventExamples#484](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#484)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.IsOverwriteMode" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.OnIsOverwriteModeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public string[] Lines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Lines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.Lines" />
      <MemberSignature Language="VB.NET" Value="Public Property Lines As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ Lines { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Lines : string[] with get, set" Usage="System.Windows.Forms.MaskedTextBox.Lines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает строки текста в многострочной конфигурации. Это свойство не поддерживается <see cref="T:System.Windows.Forms.MaskedTextBox" />.</summary>
        <value>Массив объектов типа <see cref="T:System.String" /> , содержащий одну строку.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.Lines%2A> Свойство наследуется от базового <xref:System.Windows.Forms.TextBoxBase> класса. Тем не менее поскольку <xref:System.Windows.Forms.MaskedTextBox> управления не поддерживает многострочной конфигурации, это свойство не поддерживается.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AcceptsTab" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.AcceptsTabChanged" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Multiline" />
      </Docs>
    </Member>
    <Member MemberName="Mask">
      <MemberSignature Language="C#" Value="public string Mask { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Mask" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.Mask" />
      <MemberSignature Language="VB.NET" Value="Public Property Mask As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Mask { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Mask : string with get, set" Usage="System.Windows.Forms.MaskedTextBox.Mask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.MaskPropertyEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.MaskPropertyEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает маску ввода для использования во время выполнения.</summary>
        <value>Объект <see cref="T:System.String" /> представляющая текущую маску. По умолчанию используется пустая строка, которая разрешает ввод любых символов.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> является свойством по умолчанию для <xref:System.Windows.Forms.MaskedTextBox> класса.  
  
 <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> должны строка состоять из одного или нескольких элементов маски, как показано в следующей таблице. Маскирование язык, используемый <xref:System.Windows.Forms.MaskedTextBox> определяется, связанный с ним <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A>. Стандартный поставщик язык маски, в зависимости от того, используемые элементом управления Masked Edit в Visual Basic 6.0 и должны быть хорошо знакомы пользователям, переход с этой платформы.  
  
|Элемент маски|Описание|  
|---------------------|-----------------|  
|0|Цифра, требуется. Этот элемент будет принимать любой цифре от 0 до 9.|  
|9|Цифра или пробел, необязательно.|  
|#|Цифра или пробел, необязательно. Если эта позиция в маске пуста, то он будет отображаться как пробел в <xref:System.Windows.Forms.MaskedTextBox.Text%2A> свойство. Плюс (+) и минус (-) допускаются знаки.|  
|L|Буква, требуется. Ограничивает входные данные для ASCII буквы a – z и A – Z. Этот элемент маски эквивалентно [a-zA-Z] в регулярных выражениях.|  
|?|Буква, необязательно. Ограничивает входные данные для ASCII буквы a – z и A – Z. Этот элемент маски эквивалентно [a-zA-Z]? в регулярных выражениях.|  
|&|Символ, необходимый. Если <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> свойство имеет значение true, этот элемент, ведет себя как элемент «L».|  
|В|Символ, необязательно. Любой символ без элемента управления. Если <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> свойству `true`, этот элемент ведет себя как «?» элемент.|  
|А|Буквенно-цифровых, требуется. Если <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> свойству `true`, являются только те символы, он будет принимать ASCII буквы a – z и A – Z. Этот элемент маски ведет себя как элемент «».|  
|пример|Буквенно-цифровой, необязательно. Если <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A> свойству `true`, являются только те символы, он будет принимать ASCII буквы a – z и A – Z. Этот элемент маски ведет себя как элемент «».|  
|.|Заполнитель десятичного разделителя. Фактическое отображение символ, используемый будет десятичный разделитель, соответствующий поставщику формат, как определить с помощью элемента управления <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> свойство.|  
|,|Тысячи заполнителя. Фактическому отображению будет использоваться тысяч соответствующий поставщик формата, как определить с помощью элемента управления местозаполнителя <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> свойство.|  
|:|Разделитель компонентов времени. Символ фактическому отображению, используемый будет время символ, соответствующий поставщик формата, как определить с помощью элемента управления <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> свойство.|  
|/|Разделитель компонентов даты. Символ фактическому отображению, используемый будет дата символ, соответствующий поставщик формата, как определить с помощью элемента управления <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> свойство.|  
|$|Символ валюты. Фактический символ, который отображается будет символ валюты, соответствующий поставщику формат, как определить с помощью элемента управления <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> свойство.|  
|\<|Сдвинуть вниз. Преобразует все последующие символы в нижний регистр.|  
|>|Сдвинуть. Преобразует все последующие символы в верхнем регистре.|  
|&#124;|Отмена предыдущего изменения вверх или выполнить сдвиг.|  
|&#92;|Escape. Escape-последовательности символов маски литерал. "\\\\" — escape-последовательность для обратной косой черты.|  
|Все остальные символы|Литералы. Все элементы без маски отображаются в <xref:System.Windows.Forms.MaskedTextBox>. Литералы всегда занимают статический позиции в маске во время выполнения и нельзя переместить или удалены пользователем.|  
  
 Если изменить маску при <xref:System.Windows.Forms.MaskedTextBox> уже содержит введенные пользователем данные, отфильтрованные по предыдущей маску, <xref:System.Windows.Forms.MaskedTextBox> попытается перенести эти входные данные в новое определение маски. Если происходит сбой, будут сброшены существующие входные данные. Присвоить строку нулевой длины, что маска сохранит все существующие данные в элементе управления. При использовании с маской нулевой длины, <xref:System.Windows.Forms.MaskedTextBox> ведет себя как однострочный <xref:System.Windows.Forms.TextBox> элемента управления.  
  
 Decimal (.), разделитель тысяч (,), времени (:), дата (/) и символы валют ($) по умолчанию отображаются в соответствии с определением языка и региональных параметров приложения. Можно принудительно отображать символы для другого языка и региональных параметров с помощью <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A> свойство.  
  
 Вставить символ в маске во время выполнения контролируется <xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A> свойство. Пользователи могут перемещаться по маске с помощью влево и вправо или курсор мыши и позволяет пропустить необязательные позиции в маске, введя пробел.  
  
> [!IMPORTANT]
>  <xref:System.Windows.Forms.MaskedTextBox> поддерживает все символы Юникода, за исключением суррогаты и по вертикали несамостоятельных знаков.  
  
 В следующей таблице показаны примеры масок.  
  
|Маска|Поведение|  
|----------|--------------|  
|`00/00/0000`|Дата (день, месяц, год) в международном формате. Символ «/» является логическим разделителем даты, а также будет отображаться для пользователя как разделитель компонентов даты, подходящие для текущего языка и региональных параметров приложения.|  
|`00->L<LL-0000`|Дата (день, сокращенное обозначение месяца и год) в формате США, в котором отображается сокращенное название месяца с начальным прописными буквами следуют две буквы нижнего регистра.|  
|`(999)-000-0000`|Номер телефона в США, код города необязательно. Если не требуется вводить дополнительные символы, их можно ввести пробелы или наведите указатель мыши непосредственно в позиции в маске, представленную первым 0.|  
|`$999,999.00`|Значение валюты в диапазоне от 0 до 999999. Валюты, разделителя и десятичные символы будут заменены во время выполнения их эквиваленты, зависящие от культуры.|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Строка, заданная в <see cref="P:System.Windows.Forms.MaskedTextBox.Mask" /> свойство не является допустимым маски. К недопустимым маскам относятся те, которые содержат непечатаемые символы.</exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskFull" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskCompleted" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.MaskChanged" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
      </Docs>
    </Member>
    <Member MemberName="MaskChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MaskChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MaskChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MaskedTextBox.MaskChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MaskChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MaskChanged;" />
      <MemberSignature Language="F#" Value="member this.MaskChanged : EventHandler " Usage="member this.MaskChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после изменения маски ввода.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.MaskChanged> Событие вызывается после значение <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> изменении свойства. Это событие возникает также в том случае, если <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> косвенно изменении член например <xref:System.Windows.Forms.MaskedTextBox.Mask%2A>, <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A>, <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A>, и <xref:System.Windows.Forms.MaskedTextBox.Culture%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В примере обработчик событий сообщает о вхождение <xref:System.Windows.Forms.MaskedTextBox.MaskChanged> событий. Этот отчет позволяет выяснить, когда происходит событие и может оказаться полезным при отладке. Чтобы создать отчет для нескольких событий или событий, которые происходят часто, рассмотрите возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> с <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> или добавлении сообщения в многострочном <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы запустить пример кода, вставьте его в проект, который содержит экземпляр типа <xref:System.Windows.Forms.MaskedTextBox> с именем `MaskedTextBox1`. Убедитесь, что обработчик событий, связанный с <xref:System.Windows.Forms.MaskedTextBox.MaskChanged> событий.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#485](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#485)]
 [!code-vb[System.Windows.Forms.EventExamples#485](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#485)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.OnMaskChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
      </Docs>
    </Member>
    <Member MemberName="MaskCompleted">
      <MemberSignature Language="C#" Value="public bool MaskCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaskCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.MaskCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaskCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaskCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.MaskCompleted : bool" Usage="System.Windows.Forms.MaskedTextBox.MaskCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, были ли введены в маску ввода строки все необходимые данные.</summary>
        <value><see langword="true" /> Если все необходимые входные данные были внесены в маске; в противном случае <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.MaskCompleted%2A> проверяет обязательные входные элементы. Чтобы определить, ли все обязательные и необязательные входные элементы будут заполнены, используйте <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A> свойство вместо этого.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskFull" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.MaskChanged" />
      </Docs>
    </Member>
    <Member MemberName="MaskedTextProvider">
      <MemberSignature Language="C#" Value="public System.ComponentModel.MaskedTextProvider MaskedTextProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.MaskedTextProvider MaskedTextProvider" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaskedTextProvider As MaskedTextProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::MaskedTextProvider ^ MaskedTextProvider { System::ComponentModel::MaskedTextProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MaskedTextProvider : System.ComponentModel.MaskedTextProvider" Usage="System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.MaskedTextProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает точную копию поставщика маски, связанного с этим экземпляром элемента управления "текстовое поле с маской".</summary>
        <value>Маски поставщик языка типа <see cref="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> Свойство определяет модуль разбора маски и маски язык, используемый <xref:System.Windows.Forms.MaskedTextBox> элемента управления. Поставщик по умолчанию <xref:System.ComponentModel.MaskedTextProvider?displayProperty=nameWithType> класса; Однако пользовательского поставщика можно указать при помощи <xref:System.Windows.Forms.MaskedTextBox.%23ctor%28System.ComponentModel.MaskedTextProvider%29> конструктор.  
  
 <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> Невозможно задать напрямую. Однако, если выбрать часть свойств <xref:System.Windows.Forms.MaskedTextBox> — например <xref:System.Windows.Forms.MaskedTextBox.Mask%2A>, <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A>, <xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A>, и <xref:System.Windows.Forms.MaskedTextBox.Culture%2A> -внутренне приводят к созданию нового <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.MaskedTextProvider" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
      </Docs>
    </Member>
    <Member MemberName="MaskFull">
      <MemberSignature Language="C#" Value="public bool MaskFull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaskFull" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.MaskFull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaskFull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaskFull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.MaskFull : bool" Usage="System.Windows.Forms.MaskedTextBox.MaskFull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, были ли введены в маску ввода все необходимые и необязательные элементы.</summary>
        <value><see langword="true" /> Если были введены все обязательные и необязательные знаки; в противном случае <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A> свойство в пределах <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> обработчик событий, чтобы определить, если введенные пользователем было отклонено, поскольку существуют оставшиеся входные данные в маске. Чтобы определить, были ли введены только необходимые элементы ввода, используйте <xref:System.Windows.Forms.MaskedTextBox.MaskCompleted%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода обрабатывается <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> событий, а также используется <xref:System.Windows.Forms.ToolTip> чтобы предупредить пользователя, если попытка ввести данные в конце концов использовались позиций в маске.  
  
 [!code-csharp[MaskInputRejectedSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MaskInputRejectedSample/CS/form1.cs#1)]
 [!code-vb[MaskInputRejectedSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MaskInputRejectedSample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskCompleted" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.MaskChanged" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.MaskInputRejected" />
      </Docs>
    </Member>
    <Member MemberName="MaskInputRejected">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MaskInputRejectedEventHandler MaskInputRejected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MaskInputRejectedEventHandler MaskInputRejected" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MaskedTextBox.MaskInputRejected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MaskInputRejected As MaskInputRejectedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MaskInputRejectedEventHandler ^ MaskInputRejected;" />
      <MemberSignature Language="F#" Value="member this.MaskInputRejected : System.Windows.Forms.MaskInputRejectedEventHandler " Usage="member this.MaskInputRejected : System.Windows.Forms.MaskInputRejectedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MaskInputRejectedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит в том случае, если назначенный или введенный пользователем знак не совпадает с соответствующим элементом формата маски ввода.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> — Это событие по умолчанию для <xref:System.Windows.Forms.MaskedTextBox> класса.  
  
 <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> Событие возникает при отклонении символ в маске ввода. Маски ввода, представленный <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> свойство, интерпретируется поставщиком скрытый текст, связанный с этим элементом управления посредством <xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A> свойство. <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> возникает в следующих ситуациях:  
  
-   Входной символ не соответствует соответствующим элементом формата. Например пользователь вводит алфавитным символом, когда требуется цифра. Возможно, это самая распространенная причина, почему это событие.  
  
-   Пользователь пытается ввести лишние знаки за пределами маски из-за маски уже должна быть заполнена или текущей позиции курсора была перенесена в самом конце маски.  
  
-   Операции вставки вставляется символ, не соответствующий элемента форматирования, или если <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> свойство `false`, существующие символы сдвигаются в новые позиции, где они не совпадают, их формат элементов.  
  
-   Операция вырезания существующие символы сдвигаются влево, и один или несколько символов не соответствуют их новых элементов форматирования.  
  
-   Предпринята попытка присвоить значение для <xref:System.Windows.Forms.MaskedTextBox.Text%2A> свойство и назначенное строковое вызвали один или несколько нарушений маски.  
  
 Если строка была назначена для управления, который вызывает <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> возникает, никакая часть строки будет отображаться в <xref:System.Windows.Forms.MaskedTextBox>.  
  
 Обработку по умолчанию <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> воспроизводится звуковой сигнал Если <xref:System.Windows.Forms.MaskedTextBox.BeepOnError%2A> свойству `true`. Это событие часто используется для реализации обработки ошибок, например, для перемещения в следующий пользовательский элемент управления ввода, если маска заполнен или для отображения диалоговое окно настраиваемых ошибок или подсказки, если введенный символ является недопустимым.  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В примере обработчик событий сообщает о вхождение <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> событий. Этот отчет позволяет выяснить, когда происходит событие и может оказаться полезным при отладке. Чтобы создать отчет для нескольких событий или событий, которые происходят часто, рассмотрите возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> с <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> или добавлении сообщения в многострочном <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы запустить пример кода, вставьте его в проект, который содержит экземпляр типа <xref:System.Windows.Forms.MaskedTextBox> с именем `MaskedTextBox1`. Убедитесь, что обработчик событий, связанный с <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> событий.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#486](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#486)]
 [!code-vb[System.Windows.Forms.EventExamples#486](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#486)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
        <altmember cref="T:System.Windows.Forms.MaskInputRejectedEventArgs" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.IsOverwriteMode" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.BeepOnError" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public override int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="System.Windows.Forms.MaskedTextBox.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает максимальное число символов, которое разрешается вводить или вставлять в элемент управления "текстовое поле". Это свойство не поддерживается <see cref="T:System.Windows.Forms.MaskedTextBox" />.</summary>
        <value>Это свойство всегда возвращает значение 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 См. в разделе <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> свойство и <xref:System.Windows.Forms.MaskInputRejectedEventArgs.Position%2A> свойство в <xref:System.Windows.Forms.MaskInputRejectedEventArgs> класс для информации о том, как определить максимальную длину строки в <xref:System.Windows.Forms.MaskedTextBox>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskInputRejectedEventArgs.Position" />
      </Docs>
    </Member>
    <Member MemberName="Multiline">
      <MemberSignature Language="C#" Value="public override bool Multiline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.Multiline" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Multiline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Multiline { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Multiline : bool with get, set" Usage="System.Windows.Forms.MaskedTextBox.Multiline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, показывающее, является ли данный элемент управления "Многострочным текстовым полем". Это свойство не поддерживается полностью <see cref="T:System.Windows.Forms.MaskedTextBox" />.</summary>
        <value>Данное свойство всегда возвращает значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.AcceptsTab%2A> Свойство наследуется от базового <xref:System.Windows.Forms.TextBoxBase> класса. Тем не менее так как <xref:System.Windows.Forms.MaskedTextBox> управления не поддерживает многострочной конфигурации, это свойство поддерживается не полностью; его нельзя установить и он всегда разрешается в `false`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AcceptsTab" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.AcceptsTabChanged" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Lines" />
      </Docs>
    </Member>
    <Member MemberName="MultilineChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MultilineChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MultilineChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MaskedTextBox.MultilineChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MultilineChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MultilineChanged;" />
      <MemberSignature Language="F#" Value="member this.MultilineChanged : EventHandler " Usage="member this.MultilineChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Обычно возникает, когда значение <see cref="P:System.Windows.Forms.MaskedTextBox.Multiline" /> свойство изменилось; тем не менее, это событие не вызывается элементом <see cref="T:System.Windows.Forms.MaskedTextBox" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.MultilineChanged> Событие наследуется от базового <xref:System.Windows.Forms.TextBoxBase> класса. Тем не менее так как <xref:System.Windows.Forms.MaskedTextBox> управления не поддерживает многострочной конфигурации, это событие не реализуется в <xref:System.Windows.Forms.MaskedTextBox>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Multiline" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.OnMultilineChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBackColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBackColorChanged : EventArgs -&gt; unit" Usage="maskedTextBox.OnBackColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Происходит при изменении значения свойства <see cref="P:System.Windows.Forms.Control.BackColor" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnHandleCreated : EventArgs -&gt; unit" Usage="maskedTextBox.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.Control.HandleCreated" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsOverwriteModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsOverwriteModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsOverwriteModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnIsOverwriteModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsOverwriteModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsOverwriteModeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsOverwriteModeChanged : EventArgs -&gt; unit&#xA;override this.OnIsOverwriteModeChanged : EventArgs -&gt; unit" Usage="maskedTextBox.OnIsOverwriteModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.EventArgs" />, содержащий данные событий.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.MaskedTextBox.OnIsOverwriteModeChanged%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.MaskedTextBox.OnIsOverwriteModeChanged(System.EventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.MaskedTextBox.OnIsOverwriteModeChanged(System.EventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.IsOverwriteMode" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="maskedTextBox.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.KeyEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.Control.KeyDown" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyPress">
      <MemberSignature Language="C#" Value="protected override void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyPress(class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyPress (e As KeyPressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyPress(System::Windows::Forms::KeyPressEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyPress : System.Windows.Forms.KeyPressEventArgs -&gt; unit" Usage="maskedTextBox.OnKeyPress e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.KeyPressEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.Control.KeyPress" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="maskedTextBox.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.KeyEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.Control.KeyUp" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMaskChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMaskChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMaskChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnMaskChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMaskChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMaskChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMaskChanged : EventArgs -&gt; unit&#xA;override this.OnMaskChanged : EventArgs -&gt; unit" Usage="maskedTextBox.OnMaskChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.EventArgs" />, содержащий данные событий.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.MaskedTextBox.MaskChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.MaskedTextBox.OnMaskChanged%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.MaskedTextBox.OnMaskChanged(System.EventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.MaskedTextBox.OnMaskChanged(System.EventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.MaskChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnMultilineChanged">
      <MemberSignature Language="C#" Value="protected override void OnMultilineChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMultilineChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnMultilineChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMultilineChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMultilineChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMultilineChanged : EventArgs -&gt; unit" Usage="maskedTextBox.OnMultilineChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.EventArgs" />, содержащий данные событий.</param>
        <summary>Обычно вызывает <see cref="E:System.Windows.Forms.MaskedTextBox.MultilineChanged" /> событий, но отключен для <see cref="T:System.Windows.Forms.MaskedTextBox" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.OnMultilineChanged%2A> Метод наследуется от базового <xref:System.Windows.Forms.TextBoxBase> класса. Тем не менее поскольку <xref:System.Windows.Forms.MaskedTextBox> управления не поддерживает многострочной конфигурации, этот метод переопределяется, чтобы не выполняют никаких действий.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Multiline" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.MultilineChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTextAlignChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTextAlignChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextAlignChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnTextAlignChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextAlignChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextAlignChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextAlignChanged : EventArgs -&gt; unit&#xA;override this.OnTextAlignChanged : EventArgs -&gt; unit" Usage="maskedTextBox.OnTextAlignChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.EventArgs" />, содержащий данные событий.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.MaskedTextBox.TextAlignChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.MaskedTextBox.OnTextAlignChanged%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.MaskedTextBox.OnTextAlignChanged(System.EventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.MaskedTextBox.OnTextAlignChanged(System.EventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.TextAlign" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.TextAlignChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextChanged : EventArgs -&gt; unit" Usage="maskedTextBox.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.EventArgs" />, содержащий данные событий.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.Control.TextChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.MaskedTextBox.OnTextChanged%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.MaskedTextBox.OnTextChanged(System.EventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.MaskedTextBox.OnTextChanged(System.EventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="E:System.Windows.Forms.Control.TextChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnValidating">
      <MemberSignature Language="C#" Value="protected override void OnValidating (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValidating(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.OnValidating(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValidating (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValidating(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnValidating : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="maskedTextBox.OnValidating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.ComponentModel.CancelEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.Control.Validating" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.OnValidating%2A> Метод вызывает входной строки по <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> свойство, если <xref:System.Type> был указан для этого свойства. Затем также возникнет <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> событий.  
  
> [!NOTE]
>  Чтобы обеспечить согласованность с элементами управления на основе текста, проверка будет проведена даже в том случае, если <xref:System.Windows.Forms.MaskedTextBox> доступен только для чтения (его <xref:System.Windows.Forms.MaskedTextBox.ReadOnly%2A> свойству `true`).  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.MaskedTextBox.OnValidating%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Во время синтаксического анализа входной строки произошло критическое исключение.</exception>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Windows.Forms.MaskedTextBox.OnValidating(System.ComponentModel.CancelEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.MaskedTextBox.OnValidating(System.ComponentModel.CancelEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Windows.Forms.Control.Validating" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.MaskInputRejected" />
      </Docs>
    </Member>
    <Member MemberName="PasswordChar">
      <MemberSignature Language="C#" Value="public char PasswordChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.PasswordChar" />
      <MemberSignature Language="VB.NET" Value="Public Property PasswordChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PasswordChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordChar : char with get, set" Usage="System.Windows.Forms.MaskedTextBox.PasswordChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue('\0')</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает символ, отображаемый в качестве замены для данных, вводимых пользователем.</summary>
        <value><see cref="T:System.Char" /> Значение, используемое в качестве знака пароля.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для конфиденциальных введенных данных это распространенная практика для скрытия фактические данные, введенные пользователем. Если <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> задано для ненулевой символ, <xref:System.Windows.Forms.MaskedTextBox> будет отображаться этот символ для всех входных данных в элемент управления. Этому свойству присвоить `null` будет отключить эту функцию.  
  
 Если вы хотите использовать системную знак пароля, который определен в COMCTL32.dll, используйте <xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> свойство вместо этого. Если оба <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> и <xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> свойства активируются, последний имеет более высокий приоритет.  
  
> [!IMPORTANT]
>  По соображениям безопасности <xref:System.Windows.Forms.MaskedTextBox> управления отключает операции вырезания и копирования строк, защищенный паролем.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Символ, заданный при задании этого свойства не является допустимым знаком пароля, что определяется <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> метод <see cref="T:System.ComponentModel.MaskedTextProvider" /> класса.</exception>
        <exception cref="T:System.InvalidOperationException">Указанный знак пароля совпадает с текущим символом приглашения — <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />. Эти два знака должны отличаться.</exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected override bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; msg, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ProcessCmdKey (ByRef msg As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ProcessCmdKey(System::Windows::Forms::Message % msg, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="override this.ProcessCmdKey :  * System.Windows.Forms.Keys -&gt; bool" Usage="maskedTextBox.ProcessCmdKey (msg, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="msg">Передаваемый по ссылке объект <see cref="T:System.Windows.Forms.Message" />, который представляет сообщение окна для обработки.</param>
        <param name="keyData">Одно из значений <see cref="T:System.Windows.Forms.Keys" />, представляющее обрабатываемое сочетание клавиш.</param>
        <summary>Обрабатывает клавишу для команд.</summary>
        <returns>Значение <see langword="true" />, если командная клавиша была обработана элементом управления; в противном случае значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyMessage">
      <MemberSignature Language="C#" Value="protected internal override bool ProcessKeyMessage (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessKeyMessage(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.ProcessKeyMessage(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ProcessKeyMessage (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool ProcessKeyMessage(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.ProcessKeyMessage :  -&gt; bool" Usage="maskedTextBox.ProcessKeyMessage m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">Передаваемый по ссылке объект <see cref="T:System.Windows.Forms.Message" />, который представляет сообщение окна для обработки.</param>
        <summary>Переопределяет базовую реализацию этого метода, чтобы обрабатывать изменения языка ввода.</summary>
        <returns>Значение <see langword="true" />, если сообщение было обработано элементом управления; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox> переопределяет реализацию его базового элемента управления <xref:System.Windows.Forms.MaskedTextBox.ProcessKeyMessage%2A> для правильной обработки события символ, когда пользователь вводит символы с помощью редактора метода ввода (IME), например, используется для ввода японского, китайского и другие сложные сценарии Нелатинские. <xref:System.Windows.Forms.MaskedTextBox.ProcessKeyMessage%2A> обнаруживает сообщения WM_CHAR, которые произошли после он получает сообщение WM_IME_CHAR и запрещает их, чтобы не допустить эти символы отображаются в элементе управления. Если производный от этого элемента управления и переопределить это сообщение, следует скопировать это поведение, при желании новый элемент управления для работы с редактором IME.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PromptChar">
      <MemberSignature Language="C#" Value="public char PromptChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PromptChar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
      <MemberSignature Language="VB.NET" Value="Public Property PromptChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PromptChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PromptChar : char with get, set" Usage="System.Windows.Forms.MaskedTextBox.PromptChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue('_')</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает символ, используемый для представления отсутствия пользовательского ввода на <see cref="T:System.Windows.Forms.MaskedTextBox" />.</summary>
        <value>Знак, предлагающий пользователю ввести данные. По умолчанию это знак подчеркивания (_).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A> будет отображаться в <xref:System.Windows.Forms.MaskedTextBox> для любой позиции маски, пользователь еще не заполнены в.  
  
 Используйте <xref:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave%2A> свойство, чтобы указать, отображается ли командной строке при <xref:System.Windows.Forms.MaskedTextBox> не имеет фокуса.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Символ, заданный при задании этого свойства не является недопустимым знаком приглашения, что определяется <see cref="M:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)" /> метод <see cref="T:System.ComponentModel.MaskedTextProvider" /> класса.</exception>
        <exception cref="T:System.InvalidOperationException">Указанный символ приглашения совпадает с текущим знаком пароля <see cref="P:System.Windows.Forms.MaskedTextBox.PasswordChar" />. Эти два знака должны отличаться.</exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PasswordChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.TextMaskFormat" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Windows.Forms.MaskedTextBox.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, является ли текст в текстовом поле только для чтения.</summary>
        <value><see langword="true" /> Чтобы указать, что текст доступен только для чтения; в противном случае <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RejectInputOnFirstFailure">
      <MemberSignature Language="C#" Value="public bool RejectInputOnFirstFailure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RejectInputOnFirstFailure" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.RejectInputOnFirstFailure" />
      <MemberSignature Language="VB.NET" Value="Public Property RejectInputOnFirstFailure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RejectInputOnFirstFailure { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RejectInputOnFirstFailure : bool with get, set" Usage="System.Windows.Forms.MaskedTextBox.RejectInputOnFirstFailure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, должен ли прекращаться синтаксический анализ вводимых пользователем данных, когда обнаруживается первый недопустимый символ.</summary>
        <value><see langword="true" /> Если обработка входной строки должна прекращаться после первой ошибки синтаксического анализа; в противном случае <see langword="false" /> при обработке следует пропускать все ошибки. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Иногда пользователь будет вводить несколько символов в <xref:System.Windows.Forms.MaskedTextBox> за одну операцию ввода, как правило, скопировав и вставив строку. Если вся строка содержит только допустимые символы, согласно их положению вставки в маске ввода, вся операция завершится успешно. Тем не менее, при синтаксическом анализе возникает ошибка, поведение <xref:System.Windows.Forms.MaskedTextBox> зависит от значения <xref:System.Windows.Forms.MaskedTextBox.RejectInputOnFirstFailure%2A>, как показано ниже:  
  
-   Если это свойство имеет `true`, то обработка входной строки останавливается на недопустимый символ. Все последующие символы игнорируются. Один <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> события.  
  
-   Если это свойство имеет `false`, затем отклоняется недопустимый символ, но синтаксический анализ продолжает следующий символ во входной строке. Объект <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> событие вызывается каждый недопустимый символ во входной строке.  
  
 <xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A>, <xref:System.Windows.Forms.MaskedTextBox.ResetOnSpace%2A> И <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> свойства может также повлиять на интерпретацию вводимых пользователем данных.  
  
 Если <xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A> свойство `false`, то любой знаков в маске ввода, справа от курсора будет смещаются принятые числом символов. Этот сдвиг может вызвать дополнительные ошибки синтаксического анализа.  
  
 Операции вставки можно имитировать программным способом, задав <xref:System.Windows.Forms.MaskedTextBox.SelectedText%2A> свойство.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.MaskInputRejected" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnPrompt" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnSpace" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.IsOverwriteMode" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.SelectedText" />
      </Docs>
    </Member>
    <Member MemberName="ResetOnPrompt">
      <MemberSignature Language="C#" Value="public bool ResetOnPrompt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResetOnPrompt" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.ResetOnPrompt" />
      <MemberSignature Language="VB.NET" Value="Public Property ResetOnPrompt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ResetOnPrompt { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ResetOnPrompt : bool with get, set" Usage="System.Windows.Forms.MaskedTextBox.ResetOnPrompt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, определяющее способ обработки введенного символа, совпадающего с символом приглашения.</summary>
        <value><see langword="true" /> Если Ввод знака приглашения вызывает текущей редактируемой позиции в маске требуется сбросить; в противном случае <see langword="false" /> чтобы показать, что знак приглашения должен обрабатываться как обычный введенный знак. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox> Можно рассматривать две категории знаков - пробелы и символы приглашения - специально. Как правило, каждый входной символ будет проверяться для маски и либо принят или отклонен. Предположим, что <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A> свойство имеет значение к отличным от`null`, задав <xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A> свойства `true` приведет к специальной обработки для символа приглашения. Если пользователь вводит символ приглашения в маске, то текущей позиции символа маски для очистки и текущей позицией с целью доходить до следующего редактируемых знаков.  
  
 <xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A> имеет приоритет над <xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A> свойства, как показано в следующей таблице.  
  
|Значение ResetOnPrompt|Значение AllowPromptAsInput|Результирующее поведение|  
|-------------------------|------------------------------|------------------------|  
|`true`|`true`|Можно ввести символ приглашения и вызывает сброс текущей позиции маски. Это значение по умолчанию.|  
|`true`|`false`|Можно ввести символ приглашения и вызывает сброс текущей позиции маски.|  
|`false`|`true`|Знак приглашения обрабатывается как стандартный введенный знак.|  
|`false`|`false`|Знак приглашения не является допустимым и вызывает <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> событий.|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnSpace" />
      </Docs>
    </Member>
    <Member MemberName="ResetOnSpace">
      <MemberSignature Language="C#" Value="public bool ResetOnSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResetOnSpace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.ResetOnSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property ResetOnSpace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ResetOnSpace { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ResetOnSpace : bool with get, set" Usage="System.Windows.Forms.MaskedTextBox.ResetOnSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, определяющее способ обработки введенного знака пробела.</summary>
        <value><see langword="true" /> Если введенный знак пробела вызывает текущей редактируемой позиции в маске требуется сбросить; в противном случае <see langword="false" /> чтобы указать, что не должен обрабатываться как обычный введенный знак. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox> Можно рассматривать две категории знаков - пробелы и символы приглашения - специально. Как правило, каждый входной символ будет проверяться для маски и либо принят или отклонен. Установка <xref:System.Windows.Forms.MaskedTextBox.ResetOnSpace%2A> свойства `true` приведет к текущей позиции символа маски для очистки и текущей позицией с целью доходить до следующего редактируемых знаков.  
  
 Тип ввода, символ определит ли обработчик маски перемещается вперед к следующему символу в маске, или остается в текущей позиции и ожидает соответствующий знак. Если введенный символ — это пространство, а не совпадает с текущей нередактируемые в маске, обработки маски будет сразу перейти к следующему символу в маске. Если входной символ не является пробелом и не совпадает с текущей нередактируемые в маске, обработки маски остаются в текущей позиции маски и пытается сопоставить следующий входной символ на ее основе.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ResetOnPrompt" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToCaret">
      <MemberSignature Language="C#" Value="public void ScrollToCaret ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToCaret() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.ScrollToCaret" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToCaret ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToCaret();" />
      <MemberSignature Language="F#" Value="override this.ScrollToCaret : unit -&gt; unit" Usage="maskedTextBox.ScrollToCaret " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Прокручивает содержимое элемента управления до текущей позиции курсора. Этот метод не поддерживается <see cref="T:System.Windows.Forms.MaskedTextBox" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.ScrollToCaret%2A> Метод наследуется от базового <xref:System.Windows.Forms.TextBoxBase> класса. Тем не менее поскольку <xref:System.Windows.Forms.MaskedTextBox> управления не поддерживает многострочной конфигурации, этот метод переопределяется, чтобы не выполняют никаких действий.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Multiline" />
      </Docs>
    </Member>
    <Member MemberName="SelectedText">
      <MemberSignature Language="C#" Value="public override string SelectedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.SelectedText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SelectedText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SelectedText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedText : string with get, set" Usage="System.Windows.Forms.MaskedTextBox.SelectedText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает текущее выделение в <see cref="T:System.Windows.Forms.MaskedTextBox" /> элемента управления.</summary>
        <value>Текущий выделенный текст как <see cref="T:System.String" />. Если в текущий момент текст не выбран, это свойство возвращает пустую строку.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Выбранные параметры, полученные с помощью этого свойства форматируются в соответствии с свойств форматирования элемента управления, такие как <xref:System.Windows.Forms.MaskedTextBox.Mask%2A>, <xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A>, <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> и <xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A>. Выбранные параметры, заданные с помощью этого свойства ведут себя как операции вставки: каждый символ противопоставляется маски и <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> события недопустимые символы. Если <xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A> — `true`, литералы и символы приглашения разрешены при задании <xref:System.Windows.Forms.MaskedTextBox.SelectedText%2A>и будут удалены автоматически, если они нарушают маски.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.RejectInputOnFirstFailure" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.GetPositionFromCharIndex(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SkipLiterals">
      <MemberSignature Language="C#" Value="public bool SkipLiterals { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipLiterals" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.SkipLiterals" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipLiterals As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipLiterals { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SkipLiterals : bool with get, set" Usage="System.Windows.Forms.MaskedTextBox.SkipLiterals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, разрешено ли пользователю повторно вводить значения литералов.</summary>
        <value><see langword="true" /> Чтобы разрешить повторный ввод; литералов в противном случае <see langword="false" /> позволяющее пользователю перезаписывать символы литералов. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Маски ввода обычно содержат литералы. Когда пользователь вводит символы в <xref:System.Windows.Forms.MaskedTextBox> во время выполнения текущей позиции символа будет иногда приходится на литерал. <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> Свойство описывает способ ввода пользователем следующий символ для обработки, следующим образом:  
  
-   Если это свойство имеет `true`, пользователь может либо повторно ввести тот же символ как литерал в текущей позиции, или можно ввести следующий редактируемый символ, переместив текущей позиции в этой позиции.  
  
-   Если это свойство имеет `false`, пользователь может ввести только Далее редактируемых знаков. Если следующей позиции в маске не примет литеральный символ (например, пользовательские типы «/» и следующей позиции принимает только цифры), элемент управления будет вызывать <xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected> событий.  
  
 Например, в маске ввода даты «90/90/0000» знаки косой черты являются литералами. Предполагается, что пользователь ввел две первых цифры, «11», поэтому текущую позицию в маске находится первый литерал косой черты (/). Если <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> — `true`, то пользователь имеет следующие допустимые варианты:  
  
-   Пользователь может ввести символ «/». Это приводит к позиции, перемещается на следующий символ, который в этом примере является четвертой позиции, 9, элемент маски.  
  
-   Пользователь может ввести следующий редактируемый символ, который в данном примере является цифрой. Цифра будет проверяться, и текущей позиции будет автоматически перемещена пятую позицию, который является элементом маски "0".  
  
 Если <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A> — `false`, то разрешается только входных данных допустимые данные, что в этом примере было бы цифры.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.MaskInputRejected" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.MaskedTextBox.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.MaskedTextBoxTextEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.MaskedTextBoxTextEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает текст, отображаемый в настоящее время для пользователя.</summary>
        <value>Объект <see cref="T:System.String" /> , содержащую текст, отображаемый в текущий момент элементом управления. Значение по умолчанию - пустая строка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.Text%2A> — Это свойства привязки по умолчанию для <xref:System.Windows.Forms.MaskedTextBox> класса.  
  
 Получить с помощью этого свойства строки форматируются в соответствии с свойств форматирования элемента управления, такие как <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> и <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A>.  
  
 Можно назначить строку с или без литеральные символы для <xref:System.Windows.Forms.MaskedTextBox.Text%2A> в зависимости от значения <xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A>, <xref:System.Windows.Forms.MaskedTextBox.ResetOnSpace%2A>, и <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A>.  
  
 <xref:System.Windows.Forms.MaskedTextBox.Text%2A> — Это свойства привязки по умолчанию для <xref:System.Windows.Forms.MaskedTextBox>.  
  
 <xref:System.Windows.Forms.MaskedTextBox> будет выдано <xref:System.Windows.Forms.Control.TextChanged> событие при каждом изменении значения форматированного текста. Другие свойства могут или не может вызвать изменение этого значения. Например, изменение <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> свойство не вызовут <xref:System.Windows.Forms.Control.TextChanged> событий, но изменение <xref:System.Windows.Forms.MaskedTextBox.Mask%2A> будет свойство.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Windows.Forms.MaskedTextBox.Text%2A> свойство.  
  
 [!code-vb[TestMaskedTextBox#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TestMaskedTextBox/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DefaultBindingPropertyAttribute" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.SelectedText" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.FormatProvider" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.TextMaskFormat" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Culture" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave" />
      </Docs>
    </Member>
    <Member MemberName="TextAlign">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HorizontalAlignment TextAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.HorizontalAlignment TextAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.TextAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlign As HorizontalAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HorizontalAlignment TextAlign { System::Windows::Forms::HorizontalAlignment get(); void set(System::Windows::Forms::HorizontalAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlign : System.Windows.Forms.HorizontalAlignment with get, set" Usage="System.Windows.Forms.MaskedTextBox.TextAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HorizontalAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, определяющее способ выравнивания текста в элементе управления "текстовое поле с маской".</summary>
        <value>Один из <see cref="T:System.Windows.Forms.HorizontalAlignment" /> значений перечисления, задающее способ выравнивания текста относительно элемента управления. Значение по умолчанию — <see cref="F:System.Windows.Forms.HorizontalAlignment.Left" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать <xref:System.Windows.Forms.MaskedTextBox.TextAlign%2A> свойство для выравнивания текста, отображаемого в <xref:System.Windows.Forms.MaskedTextBox> для соответствия компоновке визуальных элементов на форму. Например, если элементы управления расположены в правой части формы, можно задать <xref:System.Windows.Forms.MaskedTextBox.TextAlign%2A> свойства <xref:System.Windows.Forms.HorizontalAlignment.Right>, и текст будет выравниваться по правому краю элемента управления, а не по умолчанию выравнивание по левому краю.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Значение, присваиваемое этому свойству не относится к типу <see cref="T:System.Windows.Forms.HorizontalAlignment" />.</exception>
        <altmember cref="T:System.Windows.Forms.HorizontalAlignment" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.TextLength" />
        <altmember cref="P:System.Windows.Forms.TextBoxBase.AutoSize" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.TextAlignChanged" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextAlignChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextAlignChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MaskedTextBox.TextAlignChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextAlignChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextAlignChanged;" />
      <MemberSignature Language="F#" Value="member this.TextAlignChanged : EventHandler " Usage="member this.TextAlignChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, когда изменяется выравнивание текста.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.TextAlignChanged> Событие вызывается после <xref:System.Windows.Forms.MaskedTextBox.TextAlign%2A> изменении свойства.  
  
   
  
## Examples  
 В следующем примере кода показано использование этого элемента. В примере обработчик событий сообщает о вхождение <xref:System.Windows.Forms.MaskedTextBox.TextAlignChanged> событий. Этот отчет позволяет выяснить, когда происходит событие и может оказаться полезным при отладке. Чтобы создать отчет для нескольких событий или событий, которые происходят часто, рассмотрите возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> с <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> или добавлении сообщения в многострочном <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы запустить пример кода, вставьте его в проект, который содержит экземпляр типа <xref:System.Windows.Forms.MaskedTextBox> с именем `MaskedTextBox1`. Убедитесь, что обработчик событий, связанный с <xref:System.Windows.Forms.MaskedTextBox.TextAlignChanged> событий.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#487](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#487)]
 [!code-vb[System.Windows.Forms.EventExamples#487](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#487)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.TextAlign" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.OnTextAlignChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TextLength">
      <MemberSignature Language="C#" Value="public override int TextLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.TextLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TextLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TextLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TextLength : int" Usage="System.Windows.Forms.MaskedTextBox.TextLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает длину отображаемого текста.</summary>
        <value>Значение типа Int32 представляет число символов в <see cref="P:System.Windows.Forms.MaskedTextBox.Text" /> свойство. <see cref="P:System.Windows.Forms.MaskedTextBox.TextLength" /> учитывает свойства, такие как <see cref="P:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave" />, что означает, что возвращаемые результаты могут различаться в зависимости от того, является ли элемент управления имеет фокус.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextMaskFormat">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MaskFormat TextMaskFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.MaskFormat TextMaskFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.TextMaskFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property TextMaskFormat As MaskFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::MaskFormat TextMaskFormat { System::Windows::Forms::MaskFormat get(); void set(System::Windows::Forms::MaskFormat value); };" />
      <MemberSignature Language="F#" Value="member this.TextMaskFormat : System.Windows.Forms.MaskFormat with get, set" Usage="System.Windows.Forms.MaskedTextBox.TextMaskFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MaskFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, определяющее, включаются ли литералы и символы приглашения в форматированную строку.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Windows.Forms.MaskFormat" />. Значение по умолчанию — <see cref="F:System.Windows.Forms.MaskFormat.IncludeLiterals" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> Свойство определяет, как обрабатываются символы литералы и приглашения в маске при создающем форматируемой строки. В частности, он определяет, включаются ли литералы и символы приглашения в <xref:System.Windows.Forms.MaskedTextBox.Text%2A> свойство. Если символы приглашения не включаются, они преобразуются в пробелы в форматируемую строку.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A> Свойства служат одинаковой цели с точки зрения как <xref:System.Windows.Forms.MaskedTextBox.Text%2A> интерпретируется свойство.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Свойства задано <see cref="T:System.Windows.Forms.MaskFormat" /> значение, которое является недопустимым.</exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.ToString" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="maskedTextBox.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает строку, представляющую текущее текстовое поле с маской. Этот метод переопределяет метод <see cref="M:System.Windows.Forms.TextBoxBase.ToString" />.</summary>
        <returns>Объект <see cref="T:System.String" /> , содержащий сведения о текущем <see cref="T:System.Windows.Forms.MaskedTextBox" />. Строка включает тип, упрощенное представление строки ввода и форматированную строку ввода.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта версия <xref:System.Windows.Forms.MaskedTextBox.ToString%2A> метода вызывает реализацию базового класса этого метода <xref:System.Windows.Forms.TextBoxBase.ToString%2A?displayProperty=nameWithType>, затем добавляет входной строки после обработки маской. Этот метод учитывает свойства, которые изменяют внешний вид форматируемой строки, за исключением следующих случаев:  
  
-   Возвращаемая строка всегда включает знаки приглашения и литералы, независимо от значений <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> свойство.  
  
-   Символы пароля учитываются, чтобы возвращались фактические символы, введенные пользователем. Другими словами, значения <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> и <xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> свойства игнорируются.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.TextMaskFormat" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PasswordChar" />
      </Docs>
    </Member>
    <Member MemberName="TypeValidationCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.TypeValidationEventHandler TypeValidationCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.TypeValidationEventHandler TypeValidationCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TypeValidationCompleted As TypeValidationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::TypeValidationEventHandler ^ TypeValidationCompleted;" />
      <MemberSignature Language="F#" Value="member this.TypeValidationCompleted : System.Windows.Forms.TypeValidationEventHandler " Usage="member this.TypeValidationCompleted : System.Windows.Forms.TypeValidationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TypeValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при <see cref="T:System.Windows.Forms.MaskedTextBox" /> завершает анализ текущего значения с использованием <see cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" /> свойство.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox> Управления будет при необходимости проверки пользовательского ввода для типа, определенного его <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A?displayProperty=nameWithType> свойство. Если этому свойству не присвоено `null`, происходит следующая последовательность событий:  
  
1.  Проверка запускается, когда происходит одно из следующих:  
  
    -   <xref:System.Windows.Forms.MaskedTextBox> элемент управления теряет фокус.  
  
    -   <xref:System.Windows.Forms.MaskedTextBox.Text%2A> Извлекается свойство.  
  
    -   вызывается метод <xref:System.Windows.Forms.MaskedTextBox.ValidateText%2A> .  
  
2.  Привести любое из этих событий вызова `Parse` метод типа, указанного с помощью <xref:System.Windows.Forms.TypeValidationEventArgs.ValidatingType%2A> свойство. `Parse` отвечает за преобразование отформатированной входной строки в целевой тип. Успешное преобразование означает успешное завершение проверки.  
  
3.  После `Parse` возвращении <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> события. Обработчик событий для этого события обычно реализуется для обработки проверки типа или маски. Он получает <xref:System.Windows.Forms.TypeValidationEventArgs> параметр, содержащий сведения о преобразовании; например, <xref:System.Windows.Forms.TypeValidationEventArgs.IsValidInput%2A> элемент указывает, успешно ли выполнено преобразование.  
  
4.  После обработчика событий для <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> возвращает события, события стандартные проверки, <xref:System.Windows.Forms.Control.Validating>, возникает. Можно реализовать обработчик для выполнения стандартной проверки, может включать отмену события.  
  
5.  Если событие не отменено на шаге 3, стандартный элемент управления события проверки <xref:System.Windows.Forms.Control.Validated> возникает.  
  
 Если <xref:System.Windows.Forms.TypeValidationEventArgs.Cancel%2A> свойству `true` в <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> обработчик событий, событие будет отменена и <xref:System.Windows.Forms.MaskedTextBox> элемент управления сохраняет фокус, если последующих <xref:System.Windows.Forms.Control.Validating> событий задает его версию <xref:System.ComponentModel.CancelEventArgs.Cancel%2A?displayProperty=nameWithType> свойство к `false`.  
  
   
  
## Examples  
 В следующем примере кода пытается выполнить синтаксический анализ ввод пользователя в качестве допустимого <xref:System.DateTime> объекта. В случае неудачи <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> обработчик событий отображает сообщение об ошибке для пользователя. Если значение является допустимым <xref:System.DateTime>, этот код проверяет, что переданная дата не до текущей даты. Данный пример кода требует, что проект Windows Forms содержит <xref:System.Windows.Forms.MaskedTextBox> управления с именем `MaskedTextBox1` и <xref:System.Windows.Forms.ToolTip> управления с именем `ToolTip1`.  
  
 [!code-csharp[ValidatingTypeSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ValidatingTypeSample/CS/form1.cs#1)]
 [!code-vb[ValidatingTypeSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ValidatingTypeSample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.ValidateText" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" />
        <altmember cref="T:System.Windows.Forms.TypeValidationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberSignature Language="F#" Value="override this.Undo : unit -&gt; unit" Usage="maskedTextBox.Undo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Отменяет последнюю операцию редактирования в текстовом поле. Этот метод не поддерживается <see cref="T:System.Windows.Forms.MaskedTextBox" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.Undo%2A> Метод наследуется от базового <xref:System.Windows.Forms.TextBoxBase> класса. Тем не менее <xref:System.Windows.Forms.MaskedTextBox> не поддерживает функцию отмены.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.CanUndo" />
        <altmember cref="M:System.Windows.Forms.MaskedTextBox.ClearUndo" />
      </Docs>
    </Member>
    <Member MemberName="UseSystemPasswordChar">
      <MemberSignature Language="C#" Value="public bool UseSystemPasswordChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSystemPasswordChar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar" />
      <MemberSignature Language="VB.NET" Value="Public Property UseSystemPasswordChar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSystemPasswordChar { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseSystemPasswordChar : bool with get, set" Usage="System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, должен ли использоваться символ пароля, предоставляемый операционной системой.</summary>
        <value><see langword="true" /> Если пароль системы следует использовать в качестве символа приглашения; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> Свойство определяет, отображаются ли входные данные, предоставленные пользователем в <xref:System.Windows.Forms.MaskedTextBox> как несколько вхождений знака пароль, определенные операционной системой. <xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> функции, подобные <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A> свойство, но вместо использования символа, предоставленные программистом командной строке <xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A> использует строки, определенные операционной системой. Это свойство имеет приоритет над <xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A>.  
  
> [!IMPORTANT]
>  По соображениям безопасности <xref:System.Windows.Forms.MaskedTextBox> управления отключает операции вырезания и копирования строк, защищенный паролем.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Указанный знак пароля совпадает с текущим символом приглашения — <see cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />. Эти два знака должны отличаться.</exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PromptChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.PasswordChar" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput" />
      </Docs>
    </Member>
    <Member MemberName="ValidateText">
      <MemberSignature Language="C#" Value="public object ValidateText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ValidateText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.ValidateText" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateText () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ValidateText();" />
      <MemberSignature Language="F#" Value="member this.ValidateText : unit -&gt; obj" Usage="maskedTextBox.ValidateText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Преобразует введенную пользователем строку в экземпляр типа проверки.</summary>
        <returns>В случае успешного выполнения <see cref="T:System.Object" /> из типа, заданного параметром <see cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" /> свойство; в противном случае <see langword="null" /> , указывающее на ошибку преобразования.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.MaskedTextBox.ValidateText%2A> Метод пытается преобразовать форматируемой строки, содержащиеся в <xref:System.Windows.Forms.MaskedTextBox.Text%2A> свойство для экземпляра типа, который задается параметром <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> свойство. Символы приглашения учитываются в форматируемой строке, но литералы обрабатываются в соответствии с текущим значением <xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A> свойство.  
  
 <xref:System.Windows.Forms.MaskedTextBox.ValidateText%2A> вызывает <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> событий после попытки преобразования, независимо от его успешное выполнение.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Во время синтаксического анализа входной строки произошло критическое исключение.</exception>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Text" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.TextMaskFormat" />
      </Docs>
    </Member>
    <Member MemberName="ValidatingType">
      <MemberSignature Language="C#" Value="public Type ValidatingType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValidatingType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.ValidatingType" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatingType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ValidatingType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatingType : Type with get, set" Usage="System.Windows.Forms.MaskedTextBox.ValidatingType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает тип данных, используемый для проверки данных, вводимых пользователем.</summary>
        <value>Объект <see cref="T:System.Type" /> представляющий тип данных, используемый для проверки. Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Использование масок само по себе не гарантирует, что входные данные пользователя будут представляет допустимое значение для данного типа. Следующий код C# показана маска:  
  
```  
maskedTextBox1.Mask = "99/99/9999";  
```  
  
 В следующем коде Visual Basic показано маски:  
  
 `MaskedTextBox1.Mask = "99/99/9999"`  
  
 Эта маска может требовать пользователя введите восьми цифр, что не удается проверить, что пользователь вводит месяца, даты и значения года в допустимом диапазоне. «12/20/2003» и «70/90/0000"являются одинаково допустимыми, так как здесь маски.  
  
 Можно использовать <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> Чтобы проверить, попадает ли данные, введенные пользователем в правильном диапазоне - в случае упомянутых ранее, назначив ей экземпляр <xref:System.DateTime> типа. Текущий текст в элементе управления будет проверяться, когда пользователь покидает элемент управления. Можно определить ли данные не проходит проверку, отслеживая <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> событий. <xref:System.Windows.Forms.MaskedTextBox> только выполняет проверку по <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A> Если <xref:System.Windows.Forms.MaskedTextBox.MaskCompleted%2A> является `true`.  
  
 Если вы хотите использовать собственные типы пользовательских данных с помощью <xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A>, необходимо реализовать статический `Parse` метод, который принимает в качестве параметра строку. Этот метод должен быть реализован один или оба из следующих сигнатур:  
  
 `public static Object Parse(string)`  
  
 `public static Object Parse(string, IFormatProvider)`  
  
   
  
## Examples  
 В следующем примере кода пытается выполнить синтаксический анализ ввод пользователя в качестве допустимого <xref:System.DateTime>. В случае неудачи <xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted> обработчик событий отображает сообщение об ошибке для пользователя. Если значение является допустимым <xref:System.DateTime>, код выполняет дополнительную проверку, чтобы убедиться, что переданная дата не до текущей даты. Данный пример кода требует, что проект Windows Forms содержит <xref:System.Windows.Forms.MaskedTextBox> управления с именем `MaskedTextBox1` и <xref:System.Windows.Forms.ToolTip> управления с именем `ToolTip1`.  
  
 [!code-csharp[ValidatingTypeSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ValidatingTypeSample/CS/form1.cs#1)]
 [!code-vb[ValidatingTypeSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ValidatingTypeSample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Mask" />
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.MaskedTextProvider" />
        <altmember cref="E:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MaskedTextBox.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="maskedTextBox.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">Сообщение <see cref="T:System.Windows.Forms.Message" /> Windows для обработки.</param>
        <summary>Обрабатывает сообщения Windows.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.TextBoxBase.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="WordWrap">
      <MemberSignature Language="C#" Value="public bool WordWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WordWrap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.MaskedTextBox.WordWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property WordWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WordWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WordWrap : bool with get, set" Usage="System.Windows.Forms.MaskedTextBox.WordWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, выполняется ли автоматический перенос по словам в элементе управления "Многострочное текстовое поле". Это свойство не поддерживается <see cref="T:System.Windows.Forms.MaskedTextBox" />.</summary>
        <value><see cref="P:System.Windows.Forms.MaskedTextBox.WordWrap" /> Свойство всегда возвращает <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Так как <xref:System.Windows.Forms.MaskedTextBox> не поддерживает несколько строк входных данных, <xref:System.Windows.Forms.MaskedTextBox.WordWrap%2A> свойство учитывается.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.MaskedTextBox.Multiline" />
      </Docs>
    </Member>
  </Members>
</Type>