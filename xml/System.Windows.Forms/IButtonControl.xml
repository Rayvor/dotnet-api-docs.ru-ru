<Type Name="IButtonControl" FullName="System.Windows.Forms.IButtonControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="42984f65aa9a0d97f468634d8079057f060f761d" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69187965" /></Metadata><TypeSignature Language="C#" Value="public interface IButtonControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IButtonControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IButtonControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IButtonControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IButtonControl" />
  <TypeSignature Language="F#" Value="type IButtonControl = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Позволяет элементу управления действовать аналогично кнопке по отношению к форме.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Примером того, где может быть реализован этот интерфейс, является обработка по умолчанию и нажатие кнопки отмены. Кнопки по умолчанию уведомляются при вводе необработанного ключа ввода для формы, так же как и при закрытии диалогового окна. Аналогичным образом кнопки отмены выводятся при каждом вводе необработанного клавиши ESC в форму, подобно тому, что диалоговое окно будет закрыто.  
  
   
  
## Examples  
 В следующем примере <xref:System.Windows.Forms.ButtonBase> класс наследуется от класса и <xref:System.Windows.Forms.IButtonControl> реализует интерфейс. Реализация добавляется к <xref:System.Windows.Forms.IButtonControl.DialogResult%2A> свойствам <xref:System.Windows.Forms.IButtonControl.NotifyDefault%2A> и методам <xref:System.Windows.Forms.IButtonControl.PerformClick%2A> и.  
  
 [!code-cpp[IButtonControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IButtonControl Implementation/CPP/mybutton.cpp#1)]
 [!code-csharp[IButtonControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IButtonControl Implementation/CS/mybutton.cs#1)]
 [!code-vb[IButtonControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IButtonControl Implementation/VB/mybutton.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Реализуйте этот интерфейс в классах, которые действуют как элементы управления "Кнопка". Члены этого интерфейса предоставляют основные функциональные возможности кнопки, такие как предоставление <see cref="T:System.Windows.Forms.DialogResult" /> к родительской форме или возможность <see cref="E:System.Windows.Forms.Control.Click" /> выполнения события или выполнение в качестве кнопки по умолчанию в форме.</para></block>
    <altmember cref="T:System.Windows.Forms.Button" />
    <altmember cref="T:System.Windows.Forms.Form" />
  </Docs>
  <Members>
    <Member MemberName="DialogResult">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult DialogResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DialogResult DialogResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IButtonControl.DialogResult" />
      <MemberSignature Language="VB.NET" Value="Public Property DialogResult As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DialogResult DialogResult { System::Windows::Forms::DialogResult get(); void set(System::Windows::Forms::DialogResult value); };" />
      <MemberSignature Language="F#" Value="member this.DialogResult : System.Windows.Forms.DialogResult with get, set" Usage="System.Windows.Forms.IButtonControl.DialogResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, возвращаемое в родительскую форму при нажатии кнопки.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Windows.Forms.DialogResult" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда форма отображается в виде диалогового окна с помощью <xref:System.Windows.Forms.Form.ShowDialog%2A> метода и нажатия одной из его кнопок, <xref:System.Windows.Forms.IButtonControl.DialogResult%2A> значение кнопки <xref:System.Windows.Forms.Form.DialogResult%2A> присваивается свойству формы.  
  
   
  
## Examples  
 В следующем примере <xref:System.Windows.Forms.ButtonBase> класс наследуется от класса и <xref:System.Windows.Forms.IButtonControl> реализует интерфейс. Реализация добавляется к <xref:System.Windows.Forms.IButtonControl.DialogResult%2A> свойствам <xref:System.Windows.Forms.IButtonControl.NotifyDefault%2A> и методам <xref:System.Windows.Forms.IButtonControl.PerformClick%2A> и.  
  
 [!code-cpp[IButtonControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IButtonControl Implementation/CPP/mybutton.cpp#1)]
 [!code-csharp[IButtonControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IButtonControl Implementation/CS/mybutton.cs#1)]
 [!code-vb[IButtonControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IButtonControl Implementation/VB/mybutton.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.AcceptButton" />
        <altmember cref="P:System.Windows.Forms.Form.CancelButton" />
        <altmember cref="P:System.Windows.Forms.Form.DialogResult" />
      </Docs>
    </Member>
    <Member MemberName="NotifyDefault">
      <MemberSignature Language="C#" Value="public void NotifyDefault (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyDefault(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IButtonControl.NotifyDefault(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub NotifyDefault (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NotifyDefault(bool value);" />
      <MemberSignature Language="F#" Value="abstract member NotifyDefault : bool -&gt; unit" Usage="iButtonControl.NotifyDefault value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">Значение <see langword="true" />, если элемент управления должен действовать как кнопка по умолчанию; в противном случае — значение <see langword="false" />.</param>
        <summary>Оповещает элемент управления, что кнопка является кнопкой по умолчанию, поэтому ее отображение и поведение настроены соответствующим образом.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается родительской формой для того, чтобы сделать элемент управления кнопкой по умолчанию. Для кнопок по умолчанию задана очень толстая граница.  
  
   
  
## Examples  
 В следующем примере <xref:System.Windows.Forms.ButtonBase> класс наследуется от класса и <xref:System.Windows.Forms.IButtonControl> реализует интерфейс. Реализация добавляется к <xref:System.Windows.Forms.IButtonControl.DialogResult%2A> свойствам <xref:System.Windows.Forms.IButtonControl.NotifyDefault%2A> и методам <xref:System.Windows.Forms.IButtonControl.PerformClick%2A> и.  
  
 [!code-cpp[IButtonControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IButtonControl Implementation/CPP/mybutton.cpp#1)]
 [!code-csharp[IButtonControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IButtonControl Implementation/CS/mybutton.cs#1)]
 [!code-vb[IButtonControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IButtonControl Implementation/VB/mybutton.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformClick">
      <MemberSignature Language="C#" Value="public void PerformClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IButtonControl.PerformClick" />
      <MemberSignature Language="VB.NET" Value="Public Sub PerformClick ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PerformClick();" />
      <MemberSignature Language="F#" Value="abstract member PerformClick : unit -&gt; unit" Usage="iButtonControl.PerformClick " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает событие <see cref="E:System.Windows.Forms.Control.Click" /> для элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается для кнопки, имеющей фокус, или для кнопки по умолчанию (если другие кнопки не имеют фокуса), когда пользователь нажимает клавишу ВВОД. Этот метод также вызывается, когда пользователь нажимает клавишу ESC, если кнопка была задана как кнопка отмены.  
  
   
  
## Examples  
 В следующем примере <xref:System.Windows.Forms.ButtonBase> класс наследуется от класса и <xref:System.Windows.Forms.IButtonControl> реализует интерфейс. Реализация добавляется к <xref:System.Windows.Forms.IButtonControl.DialogResult%2A> свойствам <xref:System.Windows.Forms.IButtonControl.NotifyDefault%2A> и методам <xref:System.Windows.Forms.IButtonControl.PerformClick%2A> и.  
  
 [!code-cpp[IButtonControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IButtonControl Implementation/CPP/mybutton.cpp#1)]
 [!code-csharp[IButtonControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IButtonControl Implementation/CS/mybutton.cs#1)]
 [!code-vb[IButtonControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IButtonControl Implementation/VB/mybutton.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Click" />
      </Docs>
    </Member>
  </Members>
</Type>
