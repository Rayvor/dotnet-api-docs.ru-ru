<Type Name="IMultiTargetingSupportService" FullName="System.Activities.Presentation.Hosting.IMultiTargetingSupportService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="45152876284512f879336a32d2b5999b56f370d1" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70469100" /></Metadata><TypeSignature Language="C#" Value="public interface IMultiTargetingSupportService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMultiTargetingSupportService" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Hosting.IMultiTargetingSupportService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMultiTargetingSupportService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMultiTargetingSupportService" />
  <TypeSignature Language="F#" Value="type IMultiTargetingSupportService = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="74139-101">Обеспечивает многоплатформенное нацеливание для узлов конструктора рабочих процессов Windows.</span><span class="sxs-lookup"><span data-stu-id="74139-101">Provides multi-targeting for Windows Workflow Designer hosts.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74139-102">*Настройка для различных версий* — это возможность найти нужную версию загруженной сборки, которая соответствует целевой версии [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] текущего проекта рабочего процесса в [!INCLUDE[vs2010](~/includes/vs2010-md.md)].</span><span class="sxs-lookup"><span data-stu-id="74139-102">*Multi-targeting* is the ability to find the right version of the loaded assembly that corresponds to the target [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] version of the current workflow project in [!INCLUDE[vs2010](~/includes/vs2010-md.md)].</span></span>  
  
 <span data-ttu-id="74139-103">Этот интерфейс реализуется и используется внутри конструктора компонентов [!INCLUDE[wf1](~/includes/wf1-md.md)] для поиска нужных сборок [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] с учетом версий в приложениях размещения [!INCLUDE[vs2010](~/includes/vs2010-md.md)].</span><span class="sxs-lookup"><span data-stu-id="74139-103">This interface is implemented and used internally by [!INCLUDE[wf1](~/includes/wf1-md.md)] designer components to resolve [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] assemblies in a multi-targeting aware fashion within the [!INCLUDE[vs2010](~/includes/vs2010-md.md)] hosting application.</span></span> <span data-ttu-id="74139-104">Компоненты конструктора используют реализацию этого интерфейса только в том случае, когда дополнительные сборки должны динамически загружаться в редактирование  `AppDomain` .  [!INCLUDE[wf1](~/includes/wf1-md.md)]</span><span class="sxs-lookup"><span data-stu-id="74139-104">The [!INCLUDE[wf1](~/includes/wf1-md.md)] designer components use the implementation of this interface only when additional assemblies need to be loaded dynamically into the editing `AppDomain`.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetReflectionAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly GetReflectionAssembly (System.Reflection.AssemblyName targetAssemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetReflectionAssembly(class System.Reflection.AssemblyName targetAssemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReflectionAssembly (targetAssemblyName As AssemblyName) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ GetReflectionAssembly(System::Reflection::AssemblyName ^ targetAssemblyName);" />
      <MemberSignature Language="F#" Value="abstract member GetReflectionAssembly : System.Reflection.AssemblyName -&gt; System.Reflection.Assembly" Usage="iMultiTargetingSupportService.GetReflectionAssembly targetAssemblyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetAssemblyName" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="targetAssemblyName"><span data-ttu-id="74139-105">Имя сборки.</span><span class="sxs-lookup"><span data-stu-id="74139-105">The assembly name.</span></span></param>
        <summary><span data-ttu-id="74139-106">Возвращает текущую загруженную сборку по заданному имени.</span><span class="sxs-lookup"><span data-stu-id="74139-106">Returns the currently loaded assembly given the assembly name.</span></span></summary>
        <returns><span data-ttu-id="74139-107">Текущая загруженная сборка, заданная по имени.</span><span class="sxs-lookup"><span data-stu-id="74139-107">The currently loaded assembly given the assembly name.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeType">
      <MemberSignature Language="C#" Value="public Type GetRuntimeType (Type reflectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetRuntimeType(class System.Type reflectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRuntimeType (reflectionType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetRuntimeType(Type ^ reflectionType);" />
      <MemberSignature Language="F#" Value="abstract member GetRuntimeType : Type -&gt; Type" Usage="iMultiTargetingSupportService.GetRuntimeType reflectionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reflectionType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="reflectionType"><span data-ttu-id="74139-108">Тип, по которому выбирается тип среды выполнения.</span><span class="sxs-lookup"><span data-stu-id="74139-108">The type to get the runtime type of.</span></span></param>
        <summary><span data-ttu-id="74139-109">Возвращает тип среды выполнения, соответствующий указанному типу.</span><span class="sxs-lookup"><span data-stu-id="74139-109">Gets the runtime type that corresponds to the specified type.</span></span></summary>
        <returns><span data-ttu-id="74139-110">Тип среды выполнения, соответствующий указанному типу.</span><span class="sxs-lookup"><span data-stu-id="74139-110">The runtime type that corresponds to the specified type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedType">
      <MemberSignature Language="C#" Value="public bool IsSupportedType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSupportedType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSupportedType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member IsSupportedType : Type -&gt; bool" Usage="iMultiTargetingSupportService.IsSupportedType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="74139-111">Тип, который необходимо проверить.</span><span class="sxs-lookup"><span data-stu-id="74139-111">The type to inspect.</span></span></param>
        <summary><span data-ttu-id="74139-112">Возвращает значение, которое показывает, поддерживается ли ли указанный тип.</span><span class="sxs-lookup"><span data-stu-id="74139-112">Returns a value that indicates whether the specified type is supported.</span></span></summary>
        <returns><span data-ttu-id="74139-113">Значение <see langword="true" />, если указанный тип поддерживается; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="74139-113"><see langword="true" /> if the specified type is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
