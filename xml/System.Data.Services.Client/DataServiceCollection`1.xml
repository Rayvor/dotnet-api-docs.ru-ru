<Type Name="DataServiceCollection&lt;T&gt;" FullName="System.Data.Services.Client.DataServiceCollection&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8b24f12be9fdf857dc365785bc9a39fda9b13ba6" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69125705" /></Metadata><TypeSignature Language="C#" Value="public class DataServiceCollection&lt;T&gt; : System.Collections.ObjectModel.ObservableCollection&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataServiceCollection`1&lt;T&gt; extends System.Collections.ObjectModel.ObservableCollection`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.Client.DataServiceCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Class DataServiceCollection(Of T)&#xA;Inherits ObservableCollection(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class DataServiceCollection : System::Collections::ObjectModel::ObservableCollection&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type DataServiceCollection&lt;'T&gt; = class&#xA;    inherit ObservableCollection&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services.Client</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.ObservableCollection&lt;T&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">T</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">Тип сущности.</typeparam>
    <summary>Представляет коллекцию динамических сущностей, обеспечивающую выдачу уведомлений при добавлении и удалении элементов или при обновлении списка.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]<xref:System.Data.Services.Client.DataServiceCollection%601> предоставляет класс для поддержки привязки данных к элементам управления в клиентских приложениях. Этот класс наследует от <xref:System.Collections.ObjectModel.ObservableCollection%601> класса, который <xref:System.Collections.Specialized.INotifyCollectionChanged> реализует интерфейс и является основным механизмом привязки данных для Windows Presentation Foundation (WPF) и приложений на основе Silverlight.  
  
 Загрузить коллекцию привязок <xref:System.Collections.ObjectModel.ObservableCollection%601> можно с помощью любой коллекции, реализующей интерфейс <xref:System.Collections.Generic.IEnumerable%601>. Элементы, загруженные в коллекцию привязок, должны реализовать интерфейс <xref:System.ComponentModel.INotifyPropertyChanged>. Дополнительные сведения см. [в разделе Привязка данных к элементам управления](~/docs/framework/data/wcf/binding-data-to-controls-wcf-data-services.md).  
  
   
  
## Examples  
 Следующий пример взят из страницы с выделенным кодом для страницы на языке XAML, которая определяет окно `SalesOrders` в WPF. При загрузке <xref:System.Data.Services.Client.DataServiceCollection%601> окна создается на основе результата запроса, который возвращает клиентов со связанными объектами, отфильтрованными по стране или региону. Результат привязывается к свойству <xref:System.Windows.FrameworkElement.DataContext%2A> объекта <xref:System.Windows.Controls.StackPanel>, являющегося корневым элементом управления макетом в окне WPF.  
  
 [!code-csharp[Astoria Northwind Client#WpfDataBinding](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/customerorderswpf.xaml.cs#wpfdatabinding)]
 [!code-vb[Astoria Northwind Client#WpfDataBinding](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/customerorderswpf.xaml.vb#wpfdatabinding)]  
  
 Ниже приводится код XAML, определяющий окно `SalesOrders` в WPF для предыдущего примера.  
  
 [!code-xaml[Astoria Northwind Client#WpfDataBindingXaml](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/customerorderswpf.xaml#wpfdatabindingxaml)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/b32e1d49-c214-4cb1-867e-88fbb3d08c8d">Привязка данных к элементам управления (службы данных WCF)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Создает новый экземпляр класса <see cref="T:System.Data.Services.Client.DataServiceCollection`1" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Создает новый экземпляр класса <see cref="T:System.Data.Services.Client.DataServiceCollection`1" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию автоматическое отслеживание изменений включено для <xref:System.Data.Services.Client.DataServiceCollection%601>. Можно создать экземпляр <xref:System.Data.Services.Client.DataServiceCollection%601>, который использует отслеживание изменений вручную при создании экземпляра с помощью конструктора, который позволяет предоставлять значение <xref:System.Data.Services.Client.TrackingMode.None> для <xref:System.Data.Services.Client.TrackingMode>. При использовании отслеживания вручную необходимо реализовать <xref:System.ComponentModel.INotifyPropertyChanged> и <xref:System.Collections.Specialized.INotifyCollectionChanged> и обрабатывать вызываемые события, предоставляя вручную отчеты об изменениях в <xref:System.Data.Services.Client.DataServiceContext>.  
  
 Автоматическое отслеживание изменений начинается после загрузки элементов в коллекцию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; : seq&lt;'T&gt; -&gt; System.Data.Services.Client.DataServiceCollection&lt;'T&gt;" Usage="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; items" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">Объект <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> или запрос LINQ, возвращающий коллекцию объектов <see cref="T:System.Collections.Generic.IEnumerable`1" />, используемых для инициализации этой коллекции.</param>
        <summary>Создает новый экземпляр класса <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> на основании выполнения запроса.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Коллекция объектов <xref:System.Collections.Generic.IEnumerable%601>, предоставляемых для `items`, обычно представляет собой запрос, который возвращает элементы в коллекцию. При этом может поставляться любая коллекция <xref:System.Collections.Generic.IEnumerable%601> правильного типа.  
  
 По умолчанию автоматическое отслеживание изменений включено для <xref:System.Data.Services.Client.DataServiceCollection%601>. Можно создать экземпляр <xref:System.Data.Services.Client.DataServiceCollection%601>, который использует отслеживание изменений вручную при создании экземпляра с помощью конструктора, который позволяет предоставлять значение <xref:System.Data.Services.Client.TrackingMode.None> для <xref:System.Data.Services.Client.TrackingMode>. При использовании отслеживания вручную необходимо реализовать <xref:System.ComponentModel.INotifyPropertyChanged> и <xref:System.Collections.Specialized.INotifyCollectionChanged> и обрабатывать вызываемые события, предоставляя вручную отчеты об изменениях в <xref:System.Data.Services.Client.DataServiceContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Data.Services.Client.DataServiceContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Services.Client.DataServiceContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As DataServiceContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Data::Services::Client::DataServiceContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; : System.Data.Services.Client.DataServiceContext -&gt; System.Data.Services.Client.DataServiceCollection&lt;'T&gt;" Usage="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Services.Client.DataServiceContext" />
      </Parameters>
      <Docs>
        <param name="context">Объект <see cref="T:System.Data.Services.Client.DataServiceContext" />, используемый для отслеживания изменений объектов в коллекции.</param>
        <summary>Создает новый экземпляр класса <see cref="T:System.Data.Services.Client.DataServiceCollection`1" />, использующего заданный объект <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется для создания пустой коллекции <xref:System.Data.Services.Client.DataServiceCollection%601>, в которую можно добавлять объекты сущностей без выполнения запроса службы или в случае, если недоступно перечисление <xref:System.Collections.Generic.IEnumerable%601>.  
  
 По умолчанию автоматическое отслеживание изменений включено для <xref:System.Data.Services.Client.DataServiceCollection%601>. Можно создать экземпляр <xref:System.Data.Services.Client.DataServiceCollection%601>, который использует отслеживание изменений вручную при создании экземпляра с помощью конструктора, который позволяет предоставлять значение <xref:System.Data.Services.Client.TrackingMode.None> для <xref:System.Data.Services.Client.TrackingMode>. При использовании отслеживания вручную необходимо реализовать <xref:System.ComponentModel.INotifyPropertyChanged> и <xref:System.Collections.Specialized.INotifyCollectionChanged> и обрабатывать вызываемые события, предоставляя вручную отчеты об изменениях в <xref:System.Data.Services.Client.DataServiceContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Collections.Generic.IEnumerable&lt;T&gt; items, System.Data.Services.Client.TrackingMode trackingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items, valuetype System.Data.Services.Client.TrackingMode trackingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items, System::Data::Services::Client::TrackingMode trackingMode);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; : seq&lt;'T&gt; * System.Data.Services.Client.TrackingMode -&gt; System.Data.Services.Client.DataServiceCollection&lt;'T&gt;" Usage="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; (items, trackingMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="trackingMode" Type="System.Data.Services.Client.TrackingMode" />
      </Parameters>
      <Docs>
        <param name="items">Объект <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> или запрос LINQ, возвращающий коллекцию объектов <see cref="T:System.Collections.Generic.IEnumerable`1" />, используемых для инициализации этой коллекции.</param>
        <param name="trackingMode">Значение <see cref="T:System.Data.Services.Client.TrackingMode" />, указывающее, отслеживаются ли изменения элементов данной коллекции автоматически.</param>
        <summary>Создает новый экземпляр класса <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> на основе выполнения запросов и с заданным режимом отслеживания.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию автоматическое отслеживание изменений включено для <xref:System.Data.Services.Client.DataServiceCollection%601>. Используйте этот конструктор классов и укажите значение <xref:System.Data.Services.Client.TrackingMode.None> для `trackingMode`, чтобы создать экземпляр <xref:System.Data.Services.Client.DataServiceCollection%601>, использующий отслеживание изменений вручную. При использовании отслеживания вручную необходимо реализовать <xref:System.ComponentModel.INotifyPropertyChanged> и <xref:System.Collections.Specialized.INotifyCollectionChanged> и обрабатывать вызываемые события, предоставляя вручную отчеты об изменениях в <xref:System.Data.Services.Client.DataServiceContext>.  
  
 Коллекция объектов <xref:System.Collections.Generic.IEnumerable%601>, предоставляемых для `items`, обычно представляет собой запрос, который возвращает элементы в коллекцию. При этом может поставляться любая коллекция <xref:System.Collections.Generic.IEnumerable%601> правильного типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Data.Services.Client.DataServiceContext context, string entitySetName, Func&lt;System.Data.Services.Client.EntityChangedParams,bool&gt; entityChangedCallback, Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,bool&gt; collectionChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Services.Client.DataServiceContext context, string entitySetName, class System.Func`2&lt;class System.Data.Services.Client.EntityChangedParams, bool&gt; entityChangedCallback, class System.Func`2&lt;class System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; collectionChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As DataServiceContext, entitySetName As String, entityChangedCallback As Func(Of EntityChangedParams, Boolean), collectionChangedCallback As Func(Of EntityCollectionChangedParams, Boolean))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Data::Services::Client::DataServiceContext ^ context, System::String ^ entitySetName, Func&lt;System::Data::Services::Client::EntityChangedParams ^, bool&gt; ^ entityChangedCallback, Func&lt;System::Data::Services::Client::EntityCollectionChangedParams ^, bool&gt; ^ collectionChangedCallback);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; : System.Data.Services.Client.DataServiceContext * string * Func&lt;System.Data.Services.Client.EntityChangedParams, bool&gt; * Func&lt;System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; -&gt; System.Data.Services.Client.DataServiceCollection&lt;'T&gt;" Usage="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; (context, entitySetName, entityChangedCallback, collectionChangedCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Services.Client.DataServiceContext" />
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entityChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityChangedParams,System.Boolean&gt;" />
        <Parameter Name="collectionChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="context">Объект <see cref="T:System.Data.Services.Client.DataServiceContext" />, используемый для отслеживания элементов в коллекции.</param>
        <param name="entitySetName">Набор сущностей объектов в коллекции.</param>
        <param name="entityChangedCallback">Делегат, который инкапсулирует метод, вызываемый при изменении какой-либо сущности.</param>
        <param name="collectionChangedCallback">Делегат, который инкапсулирует метод, вызываемый при изменении какой-либо коллекции сущностей.</param>
        <summary>Создает новый экземпляр класса <see cref="T:System.Data.Services.Client.DataServiceCollection`1" />, использующего заданный <see cref="T:System.Data.Services.Client.DataServiceContext" />, с предоставленными делегатами метода change.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется для создания пустой коллекции <xref:System.Data.Services.Client.DataServiceCollection%601>, в которую можно добавлять объекты сущностей без выполнения запроса службы или в случае, если недоступно перечисление <xref:System.Collections.Generic.IEnumerable%601>.  
  
 По умолчанию автоматическое отслеживание изменений включено для <xref:System.Data.Services.Client.DataServiceCollection%601>. Можно создать экземпляр <xref:System.Data.Services.Client.DataServiceCollection%601>, который использует отслеживание изменений вручную при создании экземпляра с помощью конструктора, который позволяет предоставлять значение <xref:System.Data.Services.Client.TrackingMode.None> для <xref:System.Data.Services.Client.TrackingMode>. При использовании отслеживания вручную необходимо реализовать <xref:System.ComponentModel.INotifyPropertyChanged> и <xref:System.Collections.Specialized.INotifyCollectionChanged> и обрабатывать вызываемые события, предоставляя вручную отчеты об изменениях в <xref:System.Data.Services.Client.DataServiceContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Collections.Generic.IEnumerable&lt;T&gt; items, System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, Func&lt;System.Data.Services.Client.EntityChangedParams,bool&gt; entityChangedCallback, Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,bool&gt; collectionChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items, valuetype System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, class System.Func`2&lt;class System.Data.Services.Client.EntityChangedParams, bool&gt; entityChangedCallback, class System.Func`2&lt;class System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; collectionChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items, System::Data::Services::Client::TrackingMode trackingMode, System::String ^ entitySetName, Func&lt;System::Data::Services::Client::EntityChangedParams ^, bool&gt; ^ entityChangedCallback, Func&lt;System::Data::Services::Client::EntityCollectionChangedParams ^, bool&gt; ^ collectionChangedCallback);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; : seq&lt;'T&gt; * System.Data.Services.Client.TrackingMode * string * Func&lt;System.Data.Services.Client.EntityChangedParams, bool&gt; * Func&lt;System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; -&gt; System.Data.Services.Client.DataServiceCollection&lt;'T&gt;" Usage="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; (items, trackingMode, entitySetName, entityChangedCallback, collectionChangedCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="trackingMode" Type="System.Data.Services.Client.TrackingMode" />
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entityChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityChangedParams,System.Boolean&gt;" />
        <Parameter Name="collectionChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="items">Объект <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> или запрос LINQ, возвращающий коллекцию объектов <see cref="T:System.Collections.Generic.IEnumerable`1" />, используемых для инициализации этой коллекции.</param>
        <param name="trackingMode">Значение <see cref="T:System.Data.Services.Client.TrackingMode" />, указывающее, отслеживаются ли изменения элементов данной коллекции автоматически.</param>
        <param name="entitySetName">Набор сущностей объектов в коллекции.</param>
        <param name="entityChangedCallback">Делегат, который инкапсулирует метод, вызываемый при изменении какой-либо сущности.</param>
        <param name="collectionChangedCallback">Делегат, который инкапсулирует метод, вызываемый при изменении какой-либо коллекции сущностей.</param>
        <summary>Создает новый экземпляр класса <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> на основании выполнения запроса с предоставленными делегатами метода Change.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Функции `entityChanged` и `collectionChanged` вызываются соответственно событиями <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> и <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged>. Метод `entityChanged` принимает значение <xref:System.Data.Services.Client.EntityCollectionChangedParams>, а метод `collectionChanged` принимает значение <xref:System.Data.Services.Client.EntityChangedParams>. Оба метода должны возвращать логическое значение, указывающее, было ли событие обработано функцией. При возврате `true`из метода по-прежнему происходит поведение по умолчанию.  
  
 По умолчанию автоматическое отслеживание изменений включено для <xref:System.Data.Services.Client.DataServiceCollection%601>. Можно создать экземпляр <xref:System.Data.Services.Client.DataServiceCollection%601>, который использует отслеживание изменений вручную при создании экземпляра с помощью конструктора, который позволяет предоставлять значение <xref:System.Data.Services.Client.TrackingMode.None> для <xref:System.Data.Services.Client.TrackingMode>. При использовании отслеживания вручную необходимо реализовать <xref:System.ComponentModel.INotifyPropertyChanged> и <xref:System.Collections.Specialized.INotifyCollectionChanged> и обрабатывать вызываемые события, предоставляя вручную отчеты об изменениях в <xref:System.Data.Services.Client.DataServiceContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Data.Services.Client.DataServiceContext context, System.Collections.Generic.IEnumerable&lt;T&gt; items, System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, Func&lt;System.Data.Services.Client.EntityChangedParams,bool&gt; entityChangedCallback, Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,bool&gt; collectionChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Services.Client.DataServiceContext context, class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items, valuetype System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, class System.Func`2&lt;class System.Data.Services.Client.EntityChangedParams, bool&gt; entityChangedCallback, class System.Func`2&lt;class System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; collectionChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Data::Services::Client::DataServiceContext ^ context, System::Collections::Generic::IEnumerable&lt;T&gt; ^ items, System::Data::Services::Client::TrackingMode trackingMode, System::String ^ entitySetName, Func&lt;System::Data::Services::Client::EntityChangedParams ^, bool&gt; ^ entityChangedCallback, Func&lt;System::Data::Services::Client::EntityCollectionChangedParams ^, bool&gt; ^ collectionChangedCallback);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; : System.Data.Services.Client.DataServiceContext * seq&lt;'T&gt; * System.Data.Services.Client.TrackingMode * string * Func&lt;System.Data.Services.Client.EntityChangedParams, bool&gt; * Func&lt;System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; -&gt; System.Data.Services.Client.DataServiceCollection&lt;'T&gt;" Usage="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; (context, items, trackingMode, entitySetName, entityChangedCallback, collectionChangedCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Services.Client.DataServiceContext" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="trackingMode" Type="System.Data.Services.Client.TrackingMode" />
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entityChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityChangedParams,System.Boolean&gt;" />
        <Parameter Name="collectionChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="context">Объект <see cref="T:System.Data.Services.Client.DataServiceContext" />, используемый для отслеживания элементов в коллекции.</param>
        <param name="items">Объект <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> или запрос LINQ, возвращающий коллекцию объектов <see cref="T:System.Collections.Generic.IEnumerable`1" />, используемых для инициализации этой коллекции.</param>
        <param name="trackingMode">Значение <see cref="T:System.Data.Services.Client.TrackingMode" />, указывающее, отслеживаются ли изменения элементов данной коллекции автоматически.</param>
        <param name="entitySetName">Набор сущностей объектов в коллекции.</param>
        <param name="entityChangedCallback">Делегат, который инкапсулирует метод, вызываемый при изменении какой-либо сущности.</param>
        <param name="collectionChangedCallback">Делегат, который инкапсулирует метод, вызываемый при изменении какой-либо коллекции сущностей.</param>
        <summary>Создает новый экземпляр класса <see cref="T:System.Data.Services.Client.DataServiceCollection`1" />, использующего предоставленный <see cref="T:System.Data.Services.Client.DataServiceContext" />, на основе выполнения запроса, с предоставленными делегатами метода change.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию автоматическое отслеживание изменений включено для <xref:System.Data.Services.Client.DataServiceCollection%601>. Используйте этот конструктор классов и укажите значение <xref:System.Data.Services.Client.TrackingMode.None> для `trackingMode`, чтобы создать экземпляр <xref:System.Data.Services.Client.DataServiceCollection%601>, использующий отслеживание изменений вручную. При использовании отслеживания вручную необходимо реализовать <xref:System.ComponentModel.INotifyPropertyChanged> и <xref:System.Collections.Specialized.INotifyCollectionChanged> и обрабатывать вызываемые события, предоставляя вручную отчеты об изменениях в <xref:System.Data.Services.Client.DataServiceContext>.  
  
 <xref:System.Data.Services.Client.DataServiceContext> должен всегда предоставляться, если `items` не является <xref:System.Data.Services.Client.DataServiceQuery%601> или <xref:System.Data.Services.Client.QueryOperationResponse%601>, ссылающимся на экземпляр <xref:System.Data.Services.Client.DataServiceContext>.  
  
 Функции `entityChanged` и `collectionChanged` вызываются соответственно событиями <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> и <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged>. Метод `entityChanged` принимает значение <xref:System.Data.Services.Client.EntityCollectionChangedParams>, а метод `collectionChanged` принимает значение <xref:System.Data.Services.Client.EntityChangedParams>. Оба метода должны возвращать логическое значение, указывающее, было ли событие обработано функцией. Когда метод возвращает `true`значение, поведение по умолчанию будет по-прежнему происходить.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear (bool stopTracking);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear(bool stopTracking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Clear(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear (stopTracking As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear(bool stopTracking);" />
      <MemberSignature Language="F#" Value="override this.Clear : bool -&gt; unit" Usage="dataServiceCollection.Clear stopTracking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stopTracking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stopTracking">При значении <see langword="true" /> отсоединяет все элементы от контекста <see cref="T:System.Data.Services.Client.DataServiceContext" />.</param>
        <summary>Удаляет все элементы из данной коллекции и при необходимости отсоединяет все элементы от контекста <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При отсоединении элемента все связанные объекты в графе данных также отсоединяются от <xref:System.Data.Services.Client.DataServiceContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Continuation">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt; Continuation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Services.Client.DataServiceQueryContinuation`1&lt;!T&gt; Continuation" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceCollection`1.Continuation" />
      <MemberSignature Language="VB.NET" Value="Public Property Continuation As DataServiceQueryContinuation(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ Continuation { System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ get(); void set(System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Continuation : System.Data.Services.Client.DataServiceQueryContinuation&lt;'T&gt; with get, set" Usage="System.Data.Services.Client.DataServiceCollection&lt;'T&gt;.Continuation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает дополнительный объект, используемый возвратить следующий набор результатов с постраничным выводом.</summary>
        <value>Объект <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" />, который содержит универсальный код ресурса для возвращения следующего набора результатов с постраничным выводом.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Data.Services.Client.DataServiceCollection%601.Continuation%2A> возвращает ссылку, которая используется для доступа к следующему набору результатов, разбитых по страницам, если в службе данных включено разбиение по страницам. Дополнительные сведения см. [в разделе Настройка службы данных](~/docs/framework/data/wcf/configuring-the-data-service-wcf-data-services.md).  
  
 При загрузке постраничного результата в <xref:System.Data.Services.Client.DataServiceCollection%601> необходимо явно загрузить страницы путем вызова метода <xref:System.Data.Services.Client.DataServiceCollection%601.Load%28System.Collections.Generic.IEnumerable%7B%600%7D%29> в коллекции <xref:System.Data.Services.Client.DataServiceCollection%601>, передавая результат выполнения URI, полученный из свойства <xref:System.Data.Services.Client.DataServiceCollection%601.Continuation%2A>.  
  
   
  
## Examples  
 Следующий пример взят из страницы с выделенным кодом для страницы на языке XAML, которая определяет окно `SalesOrders` в WPF. При загрузке <xref:System.Data.Services.Client.DataServiceCollection%601> окна создается на основе результата запроса, который возвращает клиентов, отфильтрованные по странам или регионам. Загружаются все страницы разбитого на страницы результата вместе со связанными заказами. После этого данные привязываются к свойству <xref:System.Windows.FrameworkElement.DataContext%2A> объекта <xref:System.Windows.Controls.StackPanel>, который является корневым элементом управления макетом в окне WPF. Дополнительные сведения см. в разделе [Практическое руководство. Привязка данных к Windows Presentation Foundation элементам](~/docs/framework/data/wcf/bind-data-to-wpf-elements-wcf-data-services.md).  
  
 [!code-csharp[Astoria Northwind Client#BindPagedData](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/customerorderswpf3.xaml.cs#bindpageddata)]
 [!code-vb[Astoria Northwind Client#BindPagedData](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/customerorderswpf3.xaml.vb#bindpageddata)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/32f9b588-c832-44c4-a7e0-fcce635df59a">Загрузка отложенного содержимого (службы данных WCF)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b32e1d49-c214-4cb1-867e-88fbb3d08c8d">Привязка данных к элементам управления (службы данных WCF)</related>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="public void Detach ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Detach() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Detach" />
      <MemberSignature Language="VB.NET" Value="Public Sub Detach ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Detach();" />
      <MemberSignature Language="F#" Value="member this.Detach : unit -&gt; unit" Usage="dataServiceCollection.Detach " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Отключает отслеживание всех элементов коллекции посредством <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Data.Services.Client.DataServiceCollection%601.Detach%2A> можно вызывать только в том случае, если <xref:System.Data.Services.Client.DataServiceCollection%601> является корневой коллекцией.  
  
 Если метод <xref:System.Data.Services.Client.DataServiceCollection%601.Detach%2A> вызывается для коллекции, которая является корневой, отслеживание также прекращается для всех связанных объектов в графе данных.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.InsertItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, T item);" />
      <MemberSignature Language="F#" Value="override this.InsertItem : int * 'T -&gt; unit" Usage="dataServiceCollection.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">Индекс добавляемого элемента.</param>
        <param name="item">Добавляемый элемент.</param>
        <summary>Добавляет заданный элемент в коллекцию по указанному индексу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если отслеживание изменений в коллекции выполняется вручную, необходимо переопределить метод <xref:System.Data.Services.Client.DataServiceCollection%601.InsertItem%2A>, чтобы предотвратить автоматическое добавление элементов в коллекцию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Загружает сущности в коллекцию.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Load(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (items As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.Load : seq&lt;'T&gt; -&gt; unit" Usage="dataServiceCollection.Load items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">Коллекция объектов сущностей, добавляемая в коллекцию <see cref="T:System.Data.Services.Client.DataServiceCollection`1" />.</param>
        <summary>Загружает коллекцию объектов сущности в данную коллекцию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При вызове метод <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A> присоединяет все объекты в коллекции, если они еще не присоединены к <xref:System.Data.Services.Client.DataServiceContext>, который связан с <xref:System.Data.Services.Client.DataServiceCollection%601>.  
  
 Если объект присоединен с помощью метода <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A>, присоединяются также все связанные объекты.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Load(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(T item);" />
      <MemberSignature Language="F#" Value="member this.Load : 'T -&gt; unit" Usage="dataServiceCollection.Load item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">Добавляемый объект сущности.</param>
        <summary>Загружает один объект сущности в коллекцию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При вызове метод <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A> присоединяет объект, если он еще не присоединен к <xref:System.Data.Services.Client.DataServiceContext>, который связан с <xref:System.Data.Services.Client.DataServiceCollection%601>.  
  
 Если объект присоединен с помощью метода <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A>, присоединяются также все связанные объекты.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
