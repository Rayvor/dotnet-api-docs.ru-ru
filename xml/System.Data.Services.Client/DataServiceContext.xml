<Type Name="DataServiceContext" FullName="System.Data.Services.Client.DataServiceContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c995701a8f0b59f1f2a0774d205c1d1cf2bf0595" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70327425" /></Metadata><TypeSignature Language="C#" Value="public class DataServiceContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataServiceContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.Client.DataServiceContext" />
  <TypeSignature Language="VB.NET" Value="Public Class DataServiceContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataServiceContext" />
  <TypeSignature Language="F#" Value="type DataServiceContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services.Client</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Класс <see cref="T:System.Data.Services.Client.DataServiceContext" /> представляет контекст среды выполнения службы данных.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] не поддерживает состояние, а <xref:System.Data.Services.Client.DataServiceContext> поддерживает. На клиентском компьютере состояние поддерживается между операциями, что обеспечивает поддержку таких возможностей, как управление обновлениями. Этот класс и класс <xref:System.Data.Services.Client.DataServiceQuery>, представляющий конкретный HTTP-запрос к службе данных, являются двумя основными классами в клиентской библиотеке.  
  
   
  
## Examples  
 В следующем примере показано, как использовать контекст <xref:System.Data.Services.Client.DataServiceContext>, созданный инструментом «Добавить ссылку на службу» для неявного выполнения запроса к службе данных Northwind, возвращающей всех клиентов. URI запрашиваемого набора сущностей `Customers` автоматически определяется контекстом. Запрос выполняется неявно при запуске перечисления. Служба данных Northwind создается при завершении [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] .  
  
 [!code-csharp[Astoria Northwind Client#GetAllCustomers](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/source.cs#getallcustomers)]
 [!code-vb[Astoria Northwind Client#GetAllCustomers](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/source.vb#getallcustomers)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/21075e50-8917-413e-a8ea-35a0f6e65aa5">Работа с клиентскими библиотеками .NET Framework (WCF Data Services)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceContext (Uri serviceRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri serviceRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceRoot As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceContext(Uri ^ serviceRoot);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceContext : Uri -&gt; System.Data.Services.Client.DataServiceContext" Usage="new System.Data.Services.Client.DataServiceContext serviceRoot" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceRoot" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="serviceRoot">Абсолютный универсальный код ресурса (URI), идентифицирующий корень службы данных.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Data.Services.Client.DataServiceContext" /> указанным значением <paramref name="serviceRoot" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Клиентская библиотека ожидает, что `baseURI` будет указывать на корень службы данных, но не выдает запрос для его проверки. Если `baseURI` не определяет корень службы, то поведение клиентской библиотеки является неопределенным.  
  
 URI с конечной косой чертой эквивалентен URI без конечного символа.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Когда для <paramref name="serviceRoot" /> задано значение NULL.</exception>
        <exception cref="T:System.ArgumentException">Если <paramref name="serviceRoot" /> не является абсолютным универсальным кодом ресурса (URI). 
-или- 
Если <paramref name="serviceRoot" /> является универсальным кодом ресурса (URI) с правильным форматом без запроса или фрагмента запроса.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddLink">
      <MemberSignature Language="C#" Value="public void AddLink (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLink(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AddLink(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLink (source As Object, sourceProperty As String, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLink(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.AddLink : obj * string * obj -&gt; unit" Usage="dataServiceContext.AddLink (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">Исходный объект новой ссылки.</param>
        <param name="sourceProperty">Имя свойства навигации объекта source, которое возвращает связанный объект.</param>
        <param name="target">Объект, связанный с исходным объектом новой ссылкой.</param>
        <summary>Добавляет заданную ссылку в набор объектов, отслеживаемых объектом <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Уведомляет <xref:System.Data.Services.Client.DataServiceContext>, что существует новая ссылка между связанными исходным и целевым объектами и что ссылка представлена указанным свойством источника. <xref:System.Data.Services.Client.DataServiceContext> добавляет эту ссылку в набор вновь созданных ссылок, которые передаются в службу данных при следующем вызове <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>.  
  
 Ссылки — это односторонние связи. Так как ассоциации являются двунаправленными, в связи "один к одному" необходимо <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A> повторно вызвать обратную связь, а в ассоциации "многие к одному" необходимо вызвать <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A> , чтобы создать ссылку на конец ассоциации "One".  
  
 Целевой объект должен иметь тип, определенный параметром `sourceProperty` или подтипом типа.  
  
   
  
## Examples  
 В следующем примере показано, как использовать методы <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A> и <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A> для создания ссылок, которые определяют связи. В этом примере также явно заданы свойства навигации объекта `Order_Details`. В этом примере используется <xref:System.Data.Services.Client.DataServiceContext> объект, созданный средством Добавление ссылки на службу на основе службы данных Northwind, которая создается при [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] завершении.  
  
 [!code-csharp[Astoria Northwind Client#AddOrderDetailToOrder](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/source.cs#addorderdetailtoorder)]
 [!code-vb[Astoria Northwind Client#AddOrderDetailToOrder](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/source.vb#addorderdetailtoorder)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Когда для <paramref name="source" />, <paramref name="sourceProperty" /> или <paramref name="target" /> задано значение NULL.</exception>
        <exception cref="T:System.InvalidOperationException">Если ссылка уже существует.  
  
-или- 
Если объект <paramref name="source" /> или <paramref name="target" /> находится в состоянии <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> или <see cref="F:System.Data.Services.Client.EntityStates.Deleted" />.  
  
- или - 
Если <paramref name="sourceProperty" /> не является коллекцией.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public void AddObject (string entitySetName, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddObject(string entitySetName, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AddObject(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddObject (entitySetName As String, entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddObject(System::String ^ entitySetName, System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.AddObject : string * obj -&gt; unit" Usage="dataServiceContext.AddObject (entitySetName, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entitySetName">Имя набора сущностей, в который добавляется ресурс.</param>
        <param name="entity">Объект, который требуется отслеживать с помощью <see cref="T:System.Data.Services.Client.DataServiceContext" />.</param>
        <summary>Добавляет указанный объект к набору отслеживаемых объектов <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект помещается в отслеживаемый набор <xref:System.Data.Services.Client.DataServiceContext> в состоянии <xref:System.Data.Services.Client.EntityStates.Added>. <xref:System.Data.Services.Client.DataServiceContext> пытается вставить объект с помощью HTTP POST при следующем вызове <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>. Этот метод не добавляет объекты, связанные с указанной сущностью, к <xref:System.Data.Services.Client.DataServiceContext>. Каждый объект должен добавляться посредством отдельного вызова <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>.  
  
 Метод не проверяет, что указанный набор сущностей находится в службе данных, связанной с <xref:System.Data.Services.Client.DataServiceContext> объектом, или что добавленный объект содержит необходимые свойства, необходимые для добавления в указанное `entity set`свойство.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Если <paramref name="entitySetName" /> или <paramref name="entity" /> имеет значение NULL.</exception>
        <exception cref="T:System.ArgumentException">Если <paramref name="entitySetName" /> пуст.  
  
-или- 
Если <paramref name="entity" /> не имеет определенного ключевого свойства.</exception>
        <exception cref="T:System.InvalidOperationException">Если сущность уже отслеживается контекстом.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRelatedObject">
      <MemberSignature Language="C#" Value="public void AddRelatedObject (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRelatedObject(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AddRelatedObject(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRelatedObject (source As Object, sourceProperty As String, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRelatedObject(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.AddRelatedObject : obj * string * obj -&gt; unit" Usage="dataServiceContext.AddRelatedObject (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">Родительский объект, отслеживаемый данным контекстом.</param>
        <param name="sourceProperty">Имя свойства навигации исходного объекта, которое возвращает связанный объект на основании ассоциации между двумя сущностями.</param>
        <param name="target">Добавляемый связанный объект.</param>
        <summary>Добавляет связанный объект в контекст и создает ссылку, определяющую отношение между двумя объектами в рамках одного запроса.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно вызывать метод <xref:System.Data.Services.Client.DataServiceContext.AddRelatedObject%2A> для добавления связанного объекта вместо выхода следующих трех методов: <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>, <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyingChanges">
      <MemberSignature Language="C#" Value="public bool ApplyingChanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyingChanges" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.ApplyingChanges" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplyingChanges As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyingChanges { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplyingChanges : bool" Usage="System.Data.Services.Client.DataServiceContext.ApplyingChanges" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, которое указывает, применяет ли контекст <see cref="T:System.Data.Services.Client.DataServiceContext" /> изменения к отслеживаемым объектам.</summary>
        <value>Возвращает значение <see langword="true" /> в момент применения изменений; в противном случае возвращает значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttachLink">
      <MemberSignature Language="C#" Value="public void AttachLink (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachLink(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AttachLink(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AttachLink (source As Object, sourceProperty As String, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachLink(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.AttachLink : obj * string * obj -&gt; unit" Usage="dataServiceContext.AttachLink (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">Исходный объект в новой ссылке.</param>
        <param name="sourceProperty">Имя свойства исходного объекта, который представляет связь между исходным и целевым объектами.</param>
        <param name="target">Целевой объект в ссылке, привязанной к исходному объекту, указанному в этом вызове. Целевой объект должен иметь тип, определенный исходным свойством или подтипом.</param>
        <summary>Уведомляет <see cref="T:System.Data.Services.Client.DataServiceContext" /> о начале отслеживания указанной ссылки, которая определяет связь между объектами сущности.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Если <paramref name="source" />, <paramref name="sourceProperty" /> или <paramref name="target" /> имеет значение NULL.</exception>
        <exception cref="T:System.InvalidOperationException">Если ссылка между двумя сущностями уже существует.  
  
- или - 
Если <paramref name="source" /> или <paramref name="target" /> в состоянии <see cref="F:System.Data.Services.Client.EntityStates.Added" /> или <see cref="F:System.Data.Services.Client.EntityStates.Deleted" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AttachTo">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Уведомляет объект <see cref="T:System.Data.Services.Client.DataServiceContext" /> о необходимости начать отслеживание заданного ресурса и указывает местоположение ресурса в заданном наборе ресурсов.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AttachTo">
      <MemberSignature Language="C#" Value="public void AttachTo (string entitySetName, object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachTo(string entitySetName, object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AttachTo(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AttachTo (entitySetName As String, entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachTo(System::String ^ entitySetName, System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.AttachTo : string * obj -&gt; unit" Usage="dataServiceContext.AttachTo (entitySetName, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entitySetName">Имя набора, содержащего ресурс.</param>
        <param name="entity">Ресурс, который должен отслеживаться объектом <see cref="T:System.Data.Services.Client.DataServiceContext" />. Этот ресурс присоединяется в неизменном состоянии.</param>
        <summary>Уведомляет <see cref="T:System.Data.Services.Client.DataServiceContext" /> о необходимости начать отслеживание заданного ресурса и указывает расположение ресурса в заданном наборе ресурсов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если сущность является частью графа объектов, эта операция не просматривает граф для добавления связанных объектов. Это неполная операция.  
  
 Метод не проверяет наличие указанного набора сущностей в службе данных, связанной с <xref:System.Data.Services.Client.DataServiceContext>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Если <paramref name="entity" /> или <paramref name="entitySetName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Если параметр <paramref name="entitySetName" /> является пустой строкой.  
  
-или- 
Когда для <paramref name="entity" /> не определено свойство ключа.</exception>
        <exception cref="T:System.InvalidOperationException">Когда <paramref name="entity" /> уже отслеживается средствами контекста.</exception>
      </Docs>
    </Member>
    <Member MemberName="AttachTo">
      <MemberSignature Language="C#" Value="public void AttachTo (string entitySetName, object entity, string etag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AttachTo(string entitySetName, object entity, string etag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.AttachTo(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AttachTo (entitySetName As String, entity As Object, etag As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AttachTo(System::String ^ entitySetName, System::Object ^ entity, System::String ^ etag);" />
      <MemberSignature Language="F#" Value="member this.AttachTo : string * obj * string -&gt; unit" Usage="dataServiceContext.AttachTo (entitySetName, entity, etag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="etag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entitySetName">Строковое значение, содержащее имя набора сущностей, к которому присоединена сущность.</param>
        <param name="entity">Добавляемая сущность.</param>
        <param name="etag">Значение параметра etag (тег сущности), которое представляет состояние сущности на момент, когда она в последний раз извлекалась из службы данных. Это значение рассматривается как непрозрачная строка; никакая ее проверка клиентской библиотекой не выполняется.</param>
        <summary>Уведомляет объект <see cref="T:System.Data.Services.Client.DataServiceContext" /> о необходимости начать отслеживание заданного ресурса и указывает местоположение ресурса в заданном наборе ресурсов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов этого метода уведомляет <xref:System.Data.Services.Client.DataServiceContext> о начале отслеживания указанной сущности и определяет набор сущностей, к которому принадлежит отслеживаемая сущность.  
  
 Если сущность является частью графа объектов, эта операция не просматривает граф для добавления связанных объектов. Объект добавляется в <xref:System.Data.Services.Client.DataServiceContext> в неизмененном состоянии. Метод не проверяет наличие указанного набора сущностей в службе данных, связанной с <xref:System.Data.Services.Client.DataServiceContext>.  
  
 Если используется перегрузка с etag, указанный etag ассоциируется с вновь присоединенной сущностью. Etag затем передается в службу данных со всеми последующими операциями обновления или запроса для сущности в соответствии с семантикой HTTP. Создавать значения etag вручную не рекомендуется. Эта перегрузка предоставляется для того, чтобы сущности, которые можно сериализовать и сохранять, можно было повторно подключить вместе с соответствующими метаданными параллелизма.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Если значение параметра <paramref name="entitySetName" /> равно <see langword="null" />.  
  
- или - 
Если значение параметра <paramref name="entity" /> равно <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Если параметр <paramref name="entitySetName" /> является пустой строкой.  
  
- или - 
Когда предоставленный объект не имеет свойства ключа.</exception>
        <exception cref="T:System.InvalidOperationException">Когда предоставленный объект уже отслеживается контекстом</exception>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseUri : Uri" Usage="System.Data.Services.Client.DataServiceContext.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает абсолютный URI, идентифицирующий корневой адрес целевой службы данных.</summary>
        <value>Абсолютный URI, определяющий корень службы данных T.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 URI с конечной косой чертой эквивалентен URI без конечного символа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginExecute&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Асинхронно отправляет службе данных запрос о выполнении заданного URI.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginExecute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecute&lt;T&gt; (System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt; continuation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecute&lt;T&gt;(class System.Data.Services.Client.DataServiceQueryContinuation`1&lt;!!T&gt; continuation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginExecute``1(System.Data.Services.Client.DataServiceQueryContinuation{``0},System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecute(Of T) (continuation As DataServiceQueryContinuation(Of T), callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; IAsyncResult ^ BeginExecute(System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ continuation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginExecute : System.Data.Services.Client.DataServiceQueryContinuation&lt;'T&gt; * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginExecute (continuation, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuation" Type="System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt;" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="T">Тип, возвращаемый запросом.</typeparam>
        <param name="continuation">Объект <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" />, представляющий следующую страницу данных, которую необходимо возвратить из службы данных.</param>
        <param name="callback">Делегат для вызова, когда результаты доступны для клиента.</param>
        <param name="state">Определяемый пользователем объект состояния передается функции обратного вызова.</param>
        <summary>Асинхронно отправляет службе данных запрос об извлечении следующей страницы данных в результатах запроса с постраничным выводом.</summary>
        <returns>Объект <see cref="T:System.IAsyncResult" />, представляющий состояние операции.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Предоставленный объект <xref:System.Data.Services.Client.DataServiceQueryContinuation%601> содержит URI, который при выполнении возвращает следующую страницу данных в результатах запроса.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExecute&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecute&lt;TElement&gt; (Uri requestUri, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecute&lt;TElement&gt;(class System.Uri requestUri, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginExecute``1(System.Uri,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecute(Of TElement) (requestUri As Uri, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA; IAsyncResult ^ BeginExecute(Uri ^ requestUri, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginExecute : Uri * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginExecute (requestUri, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="TElement">Тип, возвращаемый запросом.</typeparam>
        <param name="requestUri">URI, по которому будет отправлен запрос. URI может быть любым допустимым URI службы данных и содержать параметры запроса <c>$</c>.</param>
        <param name="callback">Делегат для вызова, когда результаты доступны для клиента.</param>
        <param name="state">Определяемый пользователем объект состояния передается функции обратного вызова.</param>
        <summary>Асинхронно направляет запрос, чтобы этот вызов не блокировал обработку на время ожидания результатов от службы.</summary>
        <returns>Объект, который используется для отслеживания состояния асинхронной операции.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращаемый объект <xref:System.IAsyncResult> используется для определения момента завершения асинхронной операции. Дополнительные сведения см. в разделе [асинхронные операции](~/docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md).  
  
 Метод <xref:System.Data.Services.Client.DataServiceContext.BeginExecute%2A> использует ту же семантику, что и метод <xref:System.Data.Services.Client.DataServiceContext.Execute%2A>, однако этот метод асинхронно отправляет запрос таким образом, чтобы вызов не блокировал обработку на время ожидания результатов от службы. В соответствии со стандартной асинхронной технологией begin-end, предоставленный обратный вызов запрашивается при извлечении результатов запроса.  
  
   
  
## Examples  
 Следующий пример иллюстрирует выполнение асинхронного запроса путем вызова метода <xref:System.Data.Services.Client.DataServiceQuery%601.BeginExecute%2A> для запуска запроса. Встроенный делегат вызывает метод <xref:System.Data.Services.Client.DataServiceQuery%601.EndExecute%2A> для отображения результатов запроса. В этом примере используется <xref:System.Data.Services.Client.DataServiceContext> объект, созданный средством Добавление ссылки на службу на основе службы данных Northwind, которая создается при [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] завершении.  
  
 [!code-csharp[Astoria Northwind Client#ExecuteQueryAsync](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/source.cs#executequeryasync)]
 [!code-vb[Astoria Northwind Client#ExecuteQueryAsync](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/source.vb#executequeryasync)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/902a2dc1-d0e9-4b00-90a8-becc4cb1f6a7">Практическое руководство. Выполнение асинхронных запросов к службе данных (службы данных WCF)</related>
      </Docs>
    </Member>
    <Member MemberName="BeginExecuteBatch">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecuteBatch (AsyncCallback callback, object state, params System.Data.Services.Client.DataServiceRequest[] queries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecuteBatch(class System.AsyncCallback callback, object state, class System.Data.Services.Client.DataServiceRequest[] queries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginExecuteBatch(System.AsyncCallback,System.Object,System.Data.Services.Client.DataServiceRequest[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecuteBatch (callback As AsyncCallback, state As Object, ParamArray queries As DataServiceRequest()) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecuteBatch(AsyncCallback ^ callback, System::Object ^ state, ... cli::array &lt;System::Data::Services::Client::DataServiceRequest ^&gt; ^ queries);" />
      <MemberSignature Language="F#" Value="member this.BeginExecuteBatch : AsyncCallback * obj * System.Data.Services.Client.DataServiceRequest[] -&gt; IAsyncResult" Usage="dataServiceContext.BeginExecuteBatch (callback, state, queries)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="queries" Type="System.Data.Services.Client.DataServiceRequest[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="callback">Делегат, вызываемый при получении ответа на пакетный запрос.</param>
        <param name="state">Определяемый пользователем объект состояния, используемый для передачи контекстных данных методу обратного вызова.</param>
        <param name="queries">Массив запросов для включения в пакетный запрос.</param>
        <summary>Асинхронно передает группу запросов в виде пакета службе данных.</summary>
        <returns>Объект <see cref="T:System.IAsyncResult" />, используемый для отслеживания состояния асинхронной операции.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращаемый объект <xref:System.IAsyncResult> используется для определения момента завершения асинхронной операции. Дополнительные сведения см. в разделе [асинхронные операции](~/docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md).  
  
 Запросы задаются в виде экземпляров <xref:System.Data.Services.Client.DataServiceRequest%601>. Возвращает <xref:System.Data.Services.Client.DataServiceResponse>, представляющий ответ на пакетный запрос в целом. Отдельные ответы на запросы представлены в виде объектов <xref:System.Data.Services.Client.DataServiceResponse>, доступ к которым осуществляется путем перечисления экземпляра <xref:System.Data.Services.Client.DataServiceResponse>.  
  
 Когда этот метод возвращает результат, все HTTP-ответы для пакетного запроса уже считаны из сетевого потока, но ответы еще не обработаны. Разрешение идентичности или материализация объектов не выполняется для указанной сущности в ответе до выполнения перечисления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetReadStream">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetReadStream (object entity, System.Data.Services.Client.DataServiceRequestArgs args, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetReadStream(object entity, class System.Data.Services.Client.DataServiceRequestArgs args, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginGetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetReadStream (entity As Object, args As DataServiceRequestArgs, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetReadStream(System::Object ^ entity, System::Data::Services::Client::DataServiceRequestArgs ^ args, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginGetReadStream : obj * System.Data.Services.Client.DataServiceRequestArgs * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginGetReadStream (entity, args, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="args" Type="System.Data.Services.Client.DataServiceRequestArgs" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Сущность, двоичное свойство которой необходимо извлечь.</param>
        <param name="args">Экземпляр класса <see cref="T:System.Data.Services.Client.DataServiceRequestArgs" />, содержащий параметры сообщения HTTP-запроса.</param>
        <param name="callback">Делегат для вызова, когда результаты доступны для клиента.</param>
        <param name="state">Определяемый пользователем объект состояния передается функции обратного вызова.</param>
        <summary>Выполняет асинхронное возвращение двоичных данных свойств для указанной сущности в виде потока данных (включая заголовки заданного сообщения).</summary>
        <returns>Объект <see cref="T:System.IAsyncResult" />, используемый для отслеживания состояния асинхронной операции.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод асинхронно запрашивает поток данных, содержащий двоичное свойство запрошенного `entity`объекта. <xref:System.Data.Services.Client.DataServiceContext.GetReadStream%2A>  
  
 В протоколе `entity` AtomPub — это запись ссылки на носитель, а свойство binary — связанный ресурс мультимедиа.  
  
 Проверка не выполняется в заголовках, которые заданы в `args`. Не изменяйте заголовок HTTP, чтобы не изменить значение запроса.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Все параметры, предоставленные этому методу, имеют значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="entity" /> не отслеживается данным контекстом <see cref="T:System.Data.Services.Client.DataServiceContext" />.  
  
-или- 
Параметр <paramref name="entity" /> находится в состоянии <see cref="F:System.Data.Services.Client.EntityStates.Added" />.  
  
- или - 
Параметр <paramref name="entity" /> не является записью ссылки на медиа-ресурс и не имеет двоичного свойства.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoadProperty">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Начинает операцию загрузки значения заданного свойства из службы данных.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoadProperty">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadProperty (object entity, string propertyName, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadProperty(object entity, string propertyName, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadProperty (entity As Object, propertyName As String, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadProperty(System::Object ^ entity, System::String ^ propertyName, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoadProperty : obj * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginLoadProperty (entity, propertyName, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Сущность, содержащая свойства для загрузки.</param>
        <param name="propertyName">Имя свойства для указанной сущности для загрузки.</param>
        <param name="callback">Делегат вызывается при получении ответа на запрос.</param>
        <param name="state">Пользовательский объект состояния, который используется для передачи контекстных данных в метод обратного вызова.</param>
        <summary>Асинхронно загружает значение указанного свойства из службы данных.</summary>
        <returns><see langword="IAsyncResult" />, представляющий состояние асинхронной операции.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов этого метода вызывает сетевую операцию для получения значения свойства. Указанное свойство может быть одним из свойств сущности, включая свойства, которые представляют ассоциации или ссылки. Если свойство представляет ассоциацию или ссылку или отсроченное свойство, то вызов этого метода предоставляет клиенту возможность загрузить связанные ресурсы. Если сущность находится в измененном состоянии, значение свойства загружает связанные сущности и помечает их и любые ссылки как неизмененные.  
  
 Если свойство уже загружено, вызов этого метода позволяет обновить значение свойства.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadProperty">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadProperty (object entity, string propertyName, System.Data.Services.Client.DataServiceQueryContinuation continuation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadProperty(object entity, string propertyName, class System.Data.Services.Client.DataServiceQueryContinuation continuation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadProperty (entity As Object, propertyName As String, continuation As DataServiceQueryContinuation, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadProperty(System::Object ^ entity, System::String ^ propertyName, System::Data::Services::Client::DataServiceQueryContinuation ^ continuation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoadProperty : obj * string * System.Data.Services.Client.DataServiceQueryContinuation * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginLoadProperty (entity, propertyName, continuation, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="continuation" Type="System.Data.Services.Client.DataServiceQueryContinuation" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Сущность, содержащая свойства для загрузки.</param>
        <param name="propertyName">Имя свойства для указанной сущности для загрузки.</param>
        <param name="continuation">Объект <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" />, представляющий следующую страницу данных о связанной сущности, которую необходимо возвратить из службы данных.</param>
        <param name="callback">Делегат для вызова, когда результаты доступны для клиента.</param>
        <param name="state">Определяемый пользователем объект состояния передается функции обратного вызова.</param>
        <summary>Выполняет асинхронную загрузку следующей страницы связанных сущностей из службы данных посредством предоставленного объекта продолжения запроса.</summary>
        <returns>Объект <see cref="T:System.IAsyncResult" />, представляющий состояние операции.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Предоставленный объект <xref:System.Data.Services.Client.DataServiceQueryContinuation%601> содержит URI, который при выполнении возвращает следующую страницу данных в результатах запроса.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadProperty">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadProperty (object entity, string propertyName, Uri nextLinkUri, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadProperty(object entity, string propertyName, class System.Uri nextLinkUri, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.Uri,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadProperty (entity As Object, propertyName As String, nextLinkUri As Uri, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadProperty(System::Object ^ entity, System::String ^ propertyName, Uri ^ nextLinkUri, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginLoadProperty : obj * string * Uri * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginLoadProperty (entity, propertyName, nextLinkUri, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="nextLinkUri" Type="System.Uri" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Сущность, содержащая свойства для загрузки.</param>
        <param name="propertyName">Имя свойства для указанной сущности для загрузки.</param>
        <param name="nextLinkUri">URI, который используется для загрузки следующей страницы результатов.</param>
        <param name="callback">Делегат для вызова, когда результаты доступны для клиента.</param>
        <param name="state">Определяемый пользователем объект состояния передается функции обратного вызова.</param>
        <summary>Асинхронно загружает страницу связанных сущностей из службы данных с использованием предоставленного URI следующей ссылки.</summary>
        <returns>Объект <see cref="T:System.IAsyncResult" />, используемый для отслеживания состояния асинхронной операции.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `entity` находится в состоянии <xref:System.Data.Services.Client.EntityStates.Unchanged> или <xref:System.Data.Services.Client.EntityStates.Modified>, связанные сущности загружаются в состоянии <xref:System.Data.Services.Client.EntityStates.Unchanged>, ссылки между сущностями также создаются в состоянии <xref:System.Data.Services.Client.EntityStates.Unchanged>.  
  
 Если `entity` находится в состоянии <xref:System.Data.Services.Client.EntityStates.Deleted>, связанные сущности загружаются в состоянии <xref:System.Data.Services.Client.EntityStates.Unchanged>, ссылки между сущностями создаются в состоянии <xref:System.Data.Services.Client.EntityStates.Deleted>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginSaveChanges">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Передает в службу данных ожидающие изменения, собранные контекстом <see cref="T:System.Data.Services.Client.DataServiceContext" /> с момента последнего сохранения изменений.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginSaveChanges">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSaveChanges (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSaveChanges(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSaveChanges (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSaveChanges(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSaveChanges : AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginSaveChanges (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Делегат, вызываемый по завершении операции.</param>
        <param name="state">Пользовательский объект состояния, который используется для передачи контекстных данных в метод обратного вызова.</param>
        <summary>Асинхронно пересылает отложенные изменения в службу данных, собирая их с помощью <see cref="T:System.Data.Services.Client.DataServiceContext" /> с момента последнего сохранения изменений.</summary>
        <returns><see langword="IAsyncResult" />, представляющий состояние асинхронной операции.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Изменения добавляются в <xref:System.Data.Services.Client.DataServiceContext> путем вызова <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>, <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.AttachTo%2A>, <xref:System.Data.Services.Client.DataServiceContext.AttachLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.DeleteObject%2A>, <xref:System.Data.Services.Client.DataServiceContext.DeleteLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.Detach%2A> или <xref:System.Data.Services.Client.DataServiceContext.DetachLink%2A>.  
  
 Изменения передаются в службу данных, как с помощью метода <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>, — по одной операции изменения на HTTP-запрос.  
  
 Если во время обработки операции произошла ошибка, дополнительные операции службой данных не обрабатываются. Вместо этого формируется ответ, сообщающий клиенту, какие операции выполнены, их результаты и какие операции не рассматривались из-за ошибки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSaveChanges">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSaveChanges (System.Data.Services.Client.SaveChangesOptions options, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSaveChanges(valuetype System.Data.Services.Client.SaveChangesOptions options, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.Data.Services.Client.SaveChangesOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSaveChanges (options As SaveChangesOptions, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSaveChanges(System::Data::Services::Client::SaveChangesOptions options, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSaveChanges : System.Data.Services.Client.SaveChangesOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="dataServiceContext.BeginSaveChanges (options, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Data.Services.Client.SaveChangesOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="options">Параметры, определяющие, как клиент может сохранить отложенный набор изменений.</param>
        <param name="callback">Делегат, вызываемый по завершении операции.</param>
        <param name="state">Пользовательский объект состояния, который используется для передачи контекстных данных в метод обратного вызова.</param>
        <summary>Асинхронно пересылает отложенные изменения в службу данных, собирая их с помощью <see cref="T:System.Data.Services.Client.DataServiceContext" /> с момента последнего сохранения изменений.</summary>
        <returns><see cref="T:System.IAsyncResult" />, представляющий состояние асинхронной операции.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Изменения добавляются в <xref:System.Data.Services.Client.DataServiceContext> путем вызова <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>, <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.AttachTo%2A>, <xref:System.Data.Services.Client.DataServiceContext.AttachLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.DeleteObject%2A>, <xref:System.Data.Services.Client.DataServiceContext.DeleteLink%2A>, <xref:System.Data.Services.Client.DataServiceContext.Detach%2A> или <xref:System.Data.Services.Client.DataServiceContext.DetachLink%2A>.  
  
 Если задан <xref:System.Data.Services.Client.SaveChangesOptions.Batch>, то все отложенные изменения включаются в один набор изменений в пакете и передаются в службу данных в одном HTTP-запросе. Целевая служба при этом должна поддерживать пакетную обработку.  
  
 Если <xref:System.Data.Services.Client.SaveChangesOptions.Batch> не задан:  
  
-   Изменения передаются в службу данных, например с помощью метода <xref:System.Data.Services.Client.DataServiceContext.SaveChanges>: одна операция изменения на HTTP-запрос.  
  
-   <xref:System.Data.Services.Client.OperationResponse.StatusCode%2A> — всегда 200.  
  
-   Свойство <xref:System.Data.Services.Client.OperationResponse.Headers%2A> возвращает пустую коллекцию.  
  
 Если <xref:System.Data.Services.Client.SaveChangesOptions.ContinueOnError> задан:  
  
-   Если при обработке операции в наборе изменений произошла ошибка, то последующие операции в наборе изменений не обрабатываются. Однако служба данных продолжит обработку следующего набора изменений в пакете.  
  
-   Этот параметр не может быть задан, если задан <xref:System.Data.Services.Client.SaveChangesOptions.Batch>, так как при включенной пакетной обработке все операции включаются в один набор изменений.  
  
 Если <xref:System.Data.Services.Client.SaveChangesOptions.ContinueOnError> не задан:  
  
-   Если во время обработки операции произошла ошибка, дополнительные операции службой данных не обрабатываются.  
  
 Формируется ответ клиенту, сообщающий, какие операции выполнены, их результаты и какие операции не рассматривались из-за ошибки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelRequest">
      <MemberSignature Language="C#" Value="public void CancelRequest (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelRequest(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.CancelRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelRequest (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelRequest(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.CancelRequest : IAsyncResult -&gt; unit" Usage="dataServiceContext.CancelRequest asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Объект <see cref="T:System.IAsyncResult" /> из отменяемой операции.</param>
        <summary>Пытается отменить операцию, связанную с предоставленным объектом <see cref="T:System.IAsyncResult" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.IAsyncResult>, переданный в параметр `asyncResult`, — это объект, возвращаемый при асинхронном выполнении операции. Дополнительные сведения см. в разделе [асинхронные операции](~/docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md). До обработки <xref:System.Data.Services.Client.DataServiceContext> этого запроса экземпляр не находится в прогнозируемом состоянии. Можно <xref:System.Data.Services.Client.DataServiceContext> безопасно использовать, <xref:System.IAsyncResult.IsCompleted%2A> если свойство объекта `asyncResult` возвращает значение `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateQuery&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceQuery&lt;T&gt; CreateQuery&lt;T&gt; (string entitySetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceQuery`1&lt;!!T&gt; CreateQuery&lt;T&gt;(string entitySetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.CreateQuery``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateQuery(Of T) (entitySetName As String) As DataServiceQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Data::Services::Client::DataServiceQuery&lt;T&gt; ^ CreateQuery(System::String ^ entitySetName);" />
      <MemberSignature Language="F#" Value="member this.CreateQuery : string -&gt; System.Data.Services.Client.DataServiceQuery&lt;'T&gt;" Usage="dataServiceContext.CreateQuery entitySetName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">Тип, возвращаемый запросом.</typeparam>
        <param name="entitySetName">Строка, разрешаемая в URI.</param>
        <summary>Создает запрос к службе данных на получение данных определенного универсального типа.</summary>
        <returns>Новый экземпляр <see cref="T:System.Data.Services.Client.DataServiceQuery`1" />, представляющий запрос к службе данных.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Data.Services.Client.DataServiceContext.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает сведения об аутентификации, которые используются всеми запросами, созданными с помощью объекта <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <value>Базовый интерфейс аутентификации для извлечения учетных данных для проверки подлинности веб-клиентов.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataNamespace">
      <MemberSignature Language="C#" Value="public string DataNamespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.DataNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Property DataNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataNamespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataNamespace : string with get, set" Usage="System.Data.Services.Client.DataServiceContext.DataNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает пространство имен XML для элементов данных (но не элементов метаданных) полезной нагрузки Atom.</summary>
        <value>Строка, представляющая пространство имен для элементов данных полезной нагрузки в формате ATOM.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значением по умолчанию этого свойства является значение по умолчанию пространства имен [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]: `http://schemas.microsoft.com/ado/2007/08/dataservices`.  
  
 Это свойство влияет на пространство имен, которое используется для синтаксического анализа содержимого из службы данных, и пространство имен, используемое для создания содержимого, отправленного в службу данных.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteLink">
      <MemberSignature Language="C#" Value="public void DeleteLink (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteLink(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.DeleteLink(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteLink (source As Object, sourceProperty As String, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteLink(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.DeleteLink : obj * string * obj -&gt; unit" Usage="dataServiceContext.DeleteLink (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">Исходный объект в ссылке, помечаемой к удалению.</param>
        <param name="sourceProperty">Имя свойства навигации исходного объекта, которое используется для доступа к целевому объекту.</param>
        <param name="target">Целевой объект в ссылке, связанный с исходным объектом. Целевой объект должен иметь тип, определенный исходным свойством или подтипом.</param>
        <summary>Изменяет состояние ссылки на удаленное в списке ссылок, отслеживаемых объектом <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно отсоединить любые ссылки, отслеживаемые <xref:System.Data.Services.Client.DataServiceContext>, независимо от их текущего состояния.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Если <paramref name="source" />, <paramref name="sourceProperty" /> или <paramref name="target" /> имеет значение NULL.</exception>
        <exception cref="T:System.InvalidOperationException">Когда <paramref name="source" /> или <paramref name="target" /> находится в состоянии <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> или <see cref="F:System.Data.Services.Client.EntityStates.Added" />.  
  
- или - 
Когда <paramref name="sourceProperty" /> не является коллекцией.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteObject">
      <MemberSignature Language="C#" Value="public void DeleteObject (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteObject(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.DeleteObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteObject (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteObject(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.DeleteObject : obj -&gt; unit" Usage="dataServiceContext.DeleteObject entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Отслеживаемая сущность, состояние которой нужно изменить на удаленное.</param>
        <summary>Изменяет состояние заданного объекта на удаленное в <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Все ссылки на указанную сущность также помечены как удаленные.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Если значение параметра <paramref name="entity" /> равно <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Когда объект не отслеживается средствами <see cref="T:System.Data.Services.Client.DataServiceContext" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="public bool Detach (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Detach(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.Detach(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Detach (entity As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Detach(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.Detach : obj -&gt; bool" Usage="dataServiceContext.Detach entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Отслеживаемая сущность, которую нужно отсоединить от <see cref="T:System.Data.Services.Client.DataServiceContext" />.</param>
        <summary>Удаляет сущность из списка сущностей, отслеживаемых объектом <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <returns>Возвращает значение <see langword="true" /> при отсоединении заданной сущности; в противном случае возвращает значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как только объект отсоединяется, он больше не отслеживается <xref:System.Data.Services.Client.DataServiceContext>.  
  
 Вызывать метод <xref:System.Data.Services.Client.DataServiceContext.Detach%2A> можно для отсоединения любого объекта независимо от его <xref:System.Data.Services.Client.EntityStates>.  
  
 После отсоединения указанной сущности этот метод также отсоединяет любые ссылки, относящиеся к сущности.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Если значение параметра <paramref name="entity" /> равно <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DetachLink">
      <MemberSignature Language="C#" Value="public bool DetachLink (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool DetachLink(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.DetachLink(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function DetachLink (source As Object, sourceProperty As String, target As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool DetachLink(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.DetachLink : obj * string * obj -&gt; bool" Usage="dataServiceContext.DetachLink (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">Исходный объект в ссылке, помечаемой к удалению.</param>
        <param name="sourceProperty">Имя свойства исходного объекта, представляющее исходный объект в ссылке между исходным и целевым объектами.</param>
        <param name="target">Целевой объект в ссылке, связанный с исходным объектом. Целевой объект должен иметь тип, определенный исходным свойством или подтипом.</param>
        <summary>Удаляет заданную ссылку из списка ссылок, отслеживаемых объектом <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <returns>Возвращает значение true, если заданная сущность отсоединена; в противном случае возвращает значение false.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно отсоединить любые ссылки, отслеживаемые <xref:System.Data.Services.Client.DataServiceContext>, независимо от их текущего состояния.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Если значение параметра <paramref name="source" /> или <paramref name="sourceProperty" /> равно <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Если параметр <paramref name="sourceProperty" /> является пустой строкой.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndExecute&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TElement&gt; EndExecute&lt;TElement&gt; (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt; EndExecute&lt;TElement&gt;(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.EndExecute``1(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecute(Of TElement) (asyncResult As IAsyncResult) As IEnumerable(Of TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA; System::Collections::Generic::IEnumerable&lt;TElement&gt; ^ EndExecute(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecute : IAsyncResult -&gt; seq&lt;'Element&gt;" Usage="dataServiceContext.EndExecute asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <typeparam name="TElement">Тип, возвращаемый запросом.</typeparam>
        <param name="asyncResult">Объект <see cref="T:System.IAsyncResult" />.</param>
        <summary>Вызывается для завершения вызова метода <see cref="M:System.Data.Services.Client.DataServiceContext.BeginExecute``1(System.Uri,System.AsyncCallback,System.Object)" />.</summary>
        <returns>Результаты, возвращенные операцией запроса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В соответствии со стандартной асинхронной технологией begin-end, предоставленный обратный вызов запрашивается при извлечении результатов запроса. Дополнительные сведения см. в разделе [асинхронные операции](~/docs/framework/data/wcf/asynchronous-operations-wcf-data-services.md).  
  
 При вызове функции обратного вызова все результаты считываются из HTTP-потока, но еще не обрабатываются. Локальные пользовательские объекты еще не материализовывались и не изменялись. Разрешение идентичности не выполнялось. Если вызывается <xref:System.Data.Services.Client.DataServiceContext.EndExecute%2A>, создается и возвращается <xref:System.Data.Services.Client.DataServiceResponse>, но результаты еще не обрабатываются. Разрешение идентичности, материализация объектов и манипулирование происходят только после перечисления результатов пользователем.  
  
   
  
## Examples  
 Следующий пример иллюстрирует выполнение асинхронного запроса путем вызова метода <xref:System.Data.Services.Client.DataServiceQuery%601.BeginExecute%2A> для запуска запроса. Встроенный делегат вызывает метод <xref:System.Data.Services.Client.DataServiceQuery%601.EndExecute%2A> для отображения результатов запроса. В этом примере используется <xref:System.Data.Services.Client.DataServiceContext> объект, созданный средством Добавление ссылки на службу на основе службы данных Northwind, которая создается при [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] завершении.  
  
 [!code-csharp[Astoria Northwind Client#ExecuteQueryAsync](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/source.cs#executequeryasync)]
 [!code-vb[Astoria Northwind Client#ExecuteQueryAsync](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/source.vb#executequeryasync)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Если значение параметра <paramref name="asyncResult" /> равно <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Если <paramref name="asyncResult" /> не происходит от этого экземпляра <see cref="T:System.Data.Services.Client.DataServiceContext" />.  
  
- или - 
Если метод <see cref="M:System.Data.Services.Client.DataServiceContext.EndExecute``1(System.IAsyncResult)" /> был ранее вызван.</exception>
        <exception cref="T:System.InvalidOperationException">При возникновении ошибки во время выполнения запроса или во время преобразования им содержимого ответного сообщения в объекты.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/902a2dc1-d0e9-4b00-90a8-becc4cb1f6a7">Практическое руководство. Выполнение асинхронных запросов к службе данных (службы данных WCF)</related>
      </Docs>
    </Member>
    <Member MemberName="EndExecuteBatch">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceResponse EndExecuteBatch (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceResponse EndExecuteBatch(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.EndExecuteBatch(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecuteBatch (asyncResult As IAsyncResult) As DataServiceResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceResponse ^ EndExecuteBatch(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndExecuteBatch : IAsyncResult -&gt; System.Data.Services.Client.DataServiceResponse" Usage="dataServiceContext.EndExecuteBatch asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><see cref="T:System.IAsyncResult" />, представляющий состояние асинхронной операции.</param>
        <summary>Вызывается для завершения вызова метода <see cref="M:System.Data.Services.Client.DataServiceContext.BeginExecuteBatch(System.AsyncCallback,System.Object,System.Data.Services.Client.DataServiceRequest[])" />.</summary>
        <returns>Объект <see langword="DataServiceResult" />, показывающий результаты пакетной операции.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Передает группу запросов в виде пакета службе данных. Отдельные ответы на запросы представлены в виде объектов <xref:System.Data.Services.Client.DataServiceResponse>, производных от <xref:System.Data.Services.Client.OperationResponse>, доступ к которым осуществляется от экземпляра <xref:System.Data.Services.Client.DataServiceResponse>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetReadStream">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceStreamResponse EndGetReadStream (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceStreamResponse EndGetReadStream(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.EndGetReadStream(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetReadStream (asyncResult As IAsyncResult) As DataServiceStreamResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceStreamResponse ^ EndGetReadStream(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndGetReadStream : IAsyncResult -&gt; System.Data.Services.Client.DataServiceStreamResponse" Usage="dataServiceContext.EndGetReadStream asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceStreamResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Результат, полученный от операции <see cref="M:System.Data.Services.Client.DataServiceContext.BeginGetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.AsyncCallback,System.Object)" />, содержащий поток двоичных данных.</param>
        <summary>Вызывается для завершения асинхронной операции извлечения двоичного свойства в виде потока.</summary>
        <returns>Экземпляр <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" />, содержащий поток откликов и его метаданные.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Data.Services.Client.DataServiceContext.EndGetReadStream%2A> вызывается для получения результатов из метода <xref:System.Data.Services.Client.DataServiceContext.BeginGetReadStream%2A>.  
  
 Метод <xref:System.Data.Services.Client.DataServiceContext.EndGetReadStream%2A> не завершается до получения ответа от метода <xref:System.Data.Services.Client.DataServiceContext.BeginGetReadStream%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoadProperty">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse EndLoadProperty (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse EndLoadProperty(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.EndLoadProperty(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndLoadProperty (asyncResult As IAsyncResult) As QueryOperationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::QueryOperationResponse ^ EndLoadProperty(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndLoadProperty : IAsyncResult -&gt; System.Data.Services.Client.QueryOperationResponse" Usage="dataServiceContext.EndLoadProperty asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><see cref="T:System.IAsyncResult" />, представляющий состояние асинхронной операции.</param>
        <summary>Вызывается для завершения операции <see cref="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.AsyncCallback,System.Object)" />.</summary>
        <returns>Ответ на операцию загрузки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если произошла ошибка во время запроса или при обработке ответа от службы данных, вызывается исключение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSaveChanges">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceResponse EndSaveChanges (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceResponse EndSaveChanges(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.EndSaveChanges(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSaveChanges (asyncResult As IAsyncResult) As DataServiceResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceResponse ^ EndSaveChanges(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndSaveChanges : IAsyncResult -&gt; System.Data.Services.Client.DataServiceResponse" Usage="dataServiceContext.EndSaveChanges asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><see cref="T:System.IAsyncResult" />, представляющий состояние асинхронной операции.</param>
        <summary>Вызывается для завершения операции <see cref="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.AsyncCallback,System.Object)" />.</summary>
        <returns>Объект <see cref="T:System.Data.Services.Client.DataServiceResponse" />, показывающий результаты пакетной операции.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Services.Client.DataServiceResponse.BatchStatusCode%2A> должен проверяться для просмотра результатов пакетных операций. Отдельные результаты операций можно получить из объектов операций, возвращаемых перечислителем <xref:System.Data.Services.Client.DataServiceResponse>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Entities">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.EntityDescriptor&gt; Entities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Services.Client.EntityDescriptor&gt; Entities" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.Entities" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entities As ReadOnlyCollection(Of EntityDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Services::Client::EntityDescriptor ^&gt; ^ Entities { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Services::Client::EntityDescriptor ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Entities : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.EntityDescriptor&gt;" Usage="System.Data.Services.Client.DataServiceContext.Entities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.EntityDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает список ресурсов, отслеживаемых в данный момент объектом <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <value>Список объектов <see cref="T:System.Data.Services.Client.EntityDescriptor" />, представляющих все ресурсы, отслеживание которых в настоящее время производит контекст <see cref="T:System.Data.Services.Client.DataServiceContext" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если ресурсы не отслеживаются, то возвращается пустой список.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Execute&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Отправляет службе данных запрос о выполнении заданного URI.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Execute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse&lt;T&gt; Execute&lt;T&gt; (System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt; continuation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse`1&lt;!!T&gt; Execute&lt;T&gt;(class System.Data.Services.Client.DataServiceQueryContinuation`1&lt;!!T&gt; continuation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.Execute``1(System.Data.Services.Client.DataServiceQueryContinuation{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute(Of T) (continuation As DataServiceQueryContinuation(Of T)) As QueryOperationResponse(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Data::Services::Client::QueryOperationResponse&lt;T&gt; ^ Execute(System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ continuation);" />
      <MemberSignature Language="F#" Value="member this.Execute : System.Data.Services.Client.DataServiceQueryContinuation&lt;'T&gt; -&gt; System.Data.Services.Client.QueryOperationResponse&lt;'T&gt;" Usage="dataServiceContext.Execute continuation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="continuation" Type="System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">Тип, возвращаемый запросом.</typeparam>
        <param name="continuation">Объект <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" />, представляющий следующую страницу данных, которую необходимо возвратить из службы данных.</param>
        <summary>Отправляет службе данных запрос об извлечении следующей страницы данных в результатах запроса с постраничным выводом.</summary>
        <returns>Ответ, содержащий следующую страницу данных в результатах запроса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Предоставленный объект <xref:System.Data.Services.Client.DataServiceQueryContinuation%601> содержит URI, который при выполнении возвращает следующую страницу данных в результатах запроса.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">При возникновении ошибки во время выполнения запроса или во время преобразования им содержимого ответного сообщения в объекты.</exception>
      </Docs>
    </Member>
    <Member MemberName="Execute&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;TElement&gt; Execute&lt;TElement&gt; (Uri requestUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt; Execute&lt;TElement&gt;(class System.Uri requestUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.Execute``1(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute(Of TElement) (requestUri As Uri) As IEnumerable(Of TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TElement&gt;&#xA; System::Collections::Generic::IEnumerable&lt;TElement&gt; ^ Execute(Uri ^ requestUri);" />
      <MemberSignature Language="F#" Value="member this.Execute : Uri -&gt; seq&lt;'Element&gt;" Usage="dataServiceContext.Execute requestUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="requestUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <typeparam name="TElement">Тип, возвращаемый запросом.</typeparam>
        <param name="requestUri">URI, по которому будет отправлен запрос. Этим URI может быть любой допустимый URI службы данных. Может содержать $-параметры запроса.</param>
        <summary>Отправляет службе данных запрос о выполнении заданного URI.</summary>
        <returns>Результаты операции запроса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Data.Services.Client.DataServiceContext.Execute%2A> используется для запроса службы данных с помощью URI. Этот метод создает запрос HTTP GET к службе данных. Указанный URI запроса может быть абсолютным или относительным.  
  
 Если `requestUri` является абсолютным, этот метод проверяет, указывает ли URI на ту же службу данных, которая указана при создании <xref:System.Data.Services.Client.DataServiceContext>. Если `requestUri` является относительным, этот метод удаляет все начальные символы косой черты и присоединяет `requestUri` к адресу, предоставленному при создании <xref:System.Data.Services.Client.DataServiceContext>. Символ косой черты присоединяется после передачи URI в конструктор <xref:System.Data.Services.Client.DataServiceContext>, если ни одного из них еще нет.  
  
 Когда этот метод возвращает результат, все HTTP-ответы для запроса уже считаны из сетевого потока, но ответы еще не будут обработаны. Разрешение идентичности или материализация объектов не происходит. Разрешение идентичности или полная материализация объектов не выполняется для указанной сущности в ответе до выполнения перечисления.  
  
   
  
## Examples  
 Этот пример использует цикл `do…while` для загрузки сущностей `Customers` из разбитых на страницы результатов службы данных. Метод <xref:System.Data.Services.Client.DataServiceContext.Execute%2A> вызывается с использованием URI следующей ссылки для получения следующей страницы данных.  
  
 [!code-csharp[Astoria Northwind Client#GetCustomersPaged](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/source.cs#getcustomerspaged)]
 [!code-vb[Astoria Northwind Client#GetCustomersPaged](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/source.vb#getcustomerspaged)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.WebException">Если ответ на запрос к <paramref name="requestUri" /> не получен.</exception>
        <exception cref="T:System.ArgumentNullException">Если значение параметра <paramref name="requestUri" /> равно <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Когда <paramref name="requestUri" /> не является допустимым URI для службы данных.</exception>
        <exception cref="T:System.InvalidOperationException">При возникновении ошибки во время выполнения запроса или во время преобразования им содержимого ответного сообщения в объекты.</exception>
        <exception cref="T:System.Data.Services.Client.DataServiceQueryException">Когда служба данных возвращает ошибку "HTTP 404: ресурс не найден".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/32f9b588-c832-44c4-a7e0-fcce635df59a">Загрузка отложенного содержимого (службы данных WCF)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/bb786ea4-f3ef-4ad3-9a41-3a0b7feb6a1f">Практическое руководство. Загрузка результатов, разбитых на страницы (службы данных WCF)</related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceResponse ExecuteBatch (params System.Data.Services.Client.DataServiceRequest[] queries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceResponse ExecuteBatch(class System.Data.Services.Client.DataServiceRequest[] queries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.ExecuteBatch(System.Data.Services.Client.DataServiceRequest[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteBatch (ParamArray queries As DataServiceRequest()) As DataServiceResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceResponse ^ ExecuteBatch(... cli::array &lt;System::Data::Services::Client::DataServiceRequest ^&gt; ^ queries);" />
      <MemberSignature Language="F#" Value="member this.ExecuteBatch : System.Data.Services.Client.DataServiceRequest[] -&gt; System.Data.Services.Client.DataServiceResponse" Usage="dataServiceContext.ExecuteBatch queries" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queries" Type="System.Data.Services.Client.DataServiceRequest[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="queries">Массив объектов <see cref="T:System.Data.Services.Client.DataServiceRequest" />, составляющих запросы.</param>
        <summary>Передает группу запросов в виде пакета службе данных.</summary>
        <returns>Ответ на пакетную операцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Запросы задаются в виде экземпляров <xref:System.Data.Services.Client.DataServiceRequest%601>. Возвращает <xref:System.Data.Services.Client.DataServiceResponse>, представляющий ответ на пакетный запрос в целом. Отдельные ответы на запросы представлены в виде отдельных объектов <xref:System.Data.Services.Client.OperationResponse>, доступ к которым осуществляется путем перечисления экземпляра <xref:System.Data.Services.Client.DataServiceResponse>.  
  
 Когда этот метод возвращает результат, весь HTTP-ответ для пакетного запроса уже считан из сетевого потока, но ответы еще не будут обработаны. Разрешение идентичности или материализация объектов не выполняется для указанной сущности в ответе до выполнения перечисления.  
  
   
  
## Examples  
 Следующий пример иллюстрирует вызов метода <xref:System.Data.Services.Client.DataServiceContext.ExecuteBatch*> для выполнения массива объектов <xref:System.Data.Services.Client.DataServiceRequest%601>, содержащих запросы, которые возвращают как объекты `Customers`, так и объекты `Products` из службы данных Northwind. Коллекция объектов <xref:System.Data.Services.Client.QueryOperationResponse%601> в возвращенном объекте <xref:System.Data.Services.Client.DataServiceResponse> перечисляется, также перечисляется и коллекция объектов, содержащаяся в каждом объекте <xref:System.Data.Services.Client.QueryOperationResponse%601>. В этом примере используется <xref:System.Data.Services.Client.DataServiceContext> объект, созданный средством Добавление ссылки на службу на основе службы данных Northwind, которая создается при [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] завершении.  
  
 [!code-csharp[Astoria Northwind Client#BatchQuery](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/source.cs#batchquery)]
 [!code-vb[Astoria Northwind Client#BatchQuery](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/source.vb#batchquery)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/3b4db7df-bd33-43a1-8ea4-63a18e131f97">Практическое руководство. Пакетное выполнение запросов (службы данных WCF)</related>
      </Docs>
    </Member>
    <Member MemberName="GetEntityDescriptor">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.EntityDescriptor GetEntityDescriptor (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.EntityDescriptor GetEntityDescriptor(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetEntityDescriptor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEntityDescriptor (entity As Object) As EntityDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::EntityDescriptor ^ GetEntityDescriptor(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetEntityDescriptor : obj -&gt; System.Data.Services.Client.EntityDescriptor" Usage="dataServiceContext.GetEntityDescriptor entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.EntityDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Объект, для которого необходимо возвратить дескриптор сущности.</param>
        <summary>Получает объект <see cref="T:System.Data.Services.Client.EntityDescriptor" /> для предоставленного объекта сущности.</summary>
        <returns>Экземпляр <see cref="T:System.Data.Services.Client.EntityDescriptor" /> для сущности <paramref name="entity" /> или <see langword="null" />, если дескриптор <see cref="T:System.Data.Services.Client.EntityDescriptor" /> для данного объекта не существует.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLinkDescriptor">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.LinkDescriptor GetLinkDescriptor (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.LinkDescriptor GetLinkDescriptor(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetLinkDescriptor(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLinkDescriptor (source As Object, sourceProperty As String, target As Object) As LinkDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::LinkDescriptor ^ GetLinkDescriptor(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.GetLinkDescriptor : obj * string * obj -&gt; System.Data.Services.Client.LinkDescriptor" Usage="dataServiceContext.GetLinkDescriptor (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.LinkDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">Исходный объект в ссылке</param>
        <param name="sourceProperty">Имя свойства навигации объекта <paramref name="source" />, которое возвращает связанный объект.</param>
        <param name="target">Связанная сущность.</param>
        <summary>Получает дескриптор <see cref="T:System.Data.Services.Client.LinkDescriptor" /> для заданной ссылки, определяющей отношение между двумя сущностями.</summary>
        <returns>Экземпляр <see cref="T:System.Data.Services.Client.LinkDescriptor" /> для указанного отношения или <see langword="null" />, если дескриптор <see cref="T:System.Data.Services.Client.LinkDescriptor" /> для данного отношения не существует.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataUri">
      <MemberSignature Language="C#" Value="public Uri GetMetadataUri ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri GetMetadataUri() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetMetadataUri" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataUri () As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ GetMetadataUri();" />
      <MemberSignature Language="F#" Value="member this.GetMetadataUri : unit -&gt; Uri" Usage="dataServiceContext.GetMetadataUri " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает универсальный код ресурса (URI) местоположения EDMX-файла метаданных.</summary>
        <returns>Универсальный код ресурса (URI) местоположения описания метаданных в формате EDMX для службы данных, идентифицируемой базовым URI, переданным конструктору.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращает URI, передаваемый в конструктор, с приложением одного сегмента пути (`/$metadata`). Вызов этого метода может создавать сетевую операцию для динамического обнаружения URI метаданных.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetReadStream">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Получает двоичные данные свойств для указанной сущности в виде потока данных.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetReadStream">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceStreamResponse GetReadStream (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceStreamResponse GetReadStream(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetReadStream(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadStream (entity As Object) As DataServiceStreamResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceStreamResponse ^ GetReadStream(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetReadStream : obj -&gt; System.Data.Services.Client.DataServiceStreamResponse" Usage="dataServiceContext.GetReadStream entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceStreamResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Сущность, двоичное свойство которой необходимо извлечь.</param>
        <summary>Получает двоичные данные свойств для указанной сущности в виде потока данных.</summary>
        <returns>Экземпляр <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" />, представляющий отклик.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод синхронно запрашивает поток данных, содержащий двоичное свойство запрошенного `entity`объекта. <xref:System.Data.Services.Client.DataServiceContext.GetReadStream%2A>  
  
 В протоколе `entity` AtomPub — это запись ссылки на носитель, а свойство binary — связанный ресурс мультимедиа.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="entity" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="entity" /> не отслеживается данным контекстом <see cref="T:System.Data.Services.Client.DataServiceContext" />.  
  
- или - 
Параметр <paramref name="entity" /> находится в состоянии <see cref="F:System.Data.Services.Client.EntityStates.Added" />.  
  
- или - 
Параметр <paramref name="entity" /> не является записью ссылки на медиа-ресурс и не имеет двоичного свойства.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReadStream">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceStreamResponse GetReadStream (object entity, System.Data.Services.Client.DataServiceRequestArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceStreamResponse GetReadStream(object entity, class System.Data.Services.Client.DataServiceRequestArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadStream (entity As Object, args As DataServiceRequestArgs) As DataServiceStreamResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceStreamResponse ^ GetReadStream(System::Object ^ entity, System::Data::Services::Client::DataServiceRequestArgs ^ args);" />
      <MemberSignature Language="F#" Value="member this.GetReadStream : obj * System.Data.Services.Client.DataServiceRequestArgs -&gt; System.Data.Services.Client.DataServiceStreamResponse" Usage="dataServiceContext.GetReadStream (entity, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceStreamResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="args" Type="System.Data.Services.Client.DataServiceRequestArgs" />
      </Parameters>
      <Docs>
        <param name="entity">Сущность, двоичное свойство которой необходимо извлечь.</param>
        <param name="args">Экземпляр класса <see cref="T:System.Data.Services.Client.DataServiceRequestArgs" />, содержащий параметры сообщения HTTP-запроса.</param>
        <summary>Получает двоичные данные свойств для указанной сущности в виде потока данных (включая заголовки заданного сообщения).</summary>
        <returns>Экземпляр <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" />, представляющий отклик.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод синхронно запрашивает поток данных, содержащий двоичное свойство запрошенного `entity`объекта. <xref:System.Data.Services.Client.DataServiceContext.GetReadStream%2A>  
  
 В протоколе `entity` AtomPub — это запись ссылки на носитель, а свойство binary — связанный ресурс мультимедиа.  
  
 Проверка не выполняется в заголовках, которые заданы в `args`. Не изменяйте заголовок HTTP, чтобы не изменить значение запроса.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="entity" /> имеет значение <see langword="null" />.  
  
-или- 
 Свойство <paramref name="args" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="entity" /> не отслеживается данным контекстом <see cref="T:System.Data.Services.Client.DataServiceContext" />.  
  
- или - 
Параметр <paramref name="entity" /> находится в состоянии <see cref="F:System.Data.Services.Client.EntityStates.Added" />.  
  
- или - 
Параметр <paramref name="entity" /> не является записью ссылки на медиа-ресурс и не имеет двоичного свойства.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReadStream">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceStreamResponse GetReadStream (object entity, string acceptContentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceStreamResponse GetReadStream(object entity, string acceptContentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetReadStream(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadStream (entity As Object, acceptContentType As String) As DataServiceStreamResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceStreamResponse ^ GetReadStream(System::Object ^ entity, System::String ^ acceptContentType);" />
      <MemberSignature Language="F#" Value="member this.GetReadStream : obj * string -&gt; System.Data.Services.Client.DataServiceStreamResponse" Usage="dataServiceContext.GetReadStream (entity, acceptContentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceStreamResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="acceptContentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entity">Сущность, двоичное свойство которой необходимо извлечь.</param>
        <param name="acceptContentType">Тип содержимого данных, запрошенных службой данных, указанный в заголовке Accept.</param>
        <summary>Получает двоичные данные свойств для указанной сущности в виде потока данных (включая заголовок заданного сообщения Accept).</summary>
        <returns>Экземпляр <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" />, представляющий отклик.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `acceptContentType` Параметр должен быть допустимым значением заголовка HTTP Accept.  
  
 Метод синхронно запрашивает поток данных, содержащий двоичное свойство запрошенного `entity`объекта. <xref:System.Data.Services.Client.DataServiceContext.GetReadStream%2A>  
  
 В протоколе `entity` AtomPub — это запись ссылки на носитель, а свойство binary — связанный ресурс мультимедиа.  
  
 Проверка не выполняется в заголовках, которые заданы в `acceptContentType`. Не изменяйте этот заголовок HTTP, чтобы не изменить значение запроса.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="entity" /> имеет значение <see langword="null" />.  
  
- или - 
 Свойство <paramref name="acceptContentType" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="entity" /> не отслеживается данным контекстом <see cref="T:System.Data.Services.Client.DataServiceContext" />.  
  
- или - 
Параметр <paramref name="entity" /> находится в состоянии <see cref="F:System.Data.Services.Client.EntityStates.Added" />.  
  
- или - 
Параметр <paramref name="entity" /> не является записью ссылки на медиа-ресурс и не имеет двоичного свойства.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReadStreamUri">
      <MemberSignature Language="C#" Value="public Uri GetReadStreamUri (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri GetReadStreamUri(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.GetReadStreamUri(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadStreamUri (entity As Object) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ GetReadStreamUri(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetReadStreamUri : obj -&gt; Uri" Usage="dataServiceContext.GetReadStreamUri entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Сущность, двоичное свойство которой необходимо извлечь.</param>
        <summary>Получает универсальный код ресурса, используемый для возвращения двоичных данных свойств в виде потока данных.</summary>
        <returns>Прочитанный универсальный код ресурса потока двоичных данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если указанная сущность `entity` является медиассылкой, то метод <xref:System.Data.Services.Client.DataServiceContext.GetReadStreamUri%2A> возвращает URI, используемый для доступа к содержимому медиаресурса.  
  
 Этот URI используется только в запросе GET для считывания содержимого медиаресурса. Он может не отвечать на запросы POST, PUT или DELETE.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Если указанная сущность — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="entity" /> не отслеживается данным контекстом <see cref="T:System.Data.Services.Client.DataServiceContext" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IgnoreMissingProperties">
      <MemberSignature Language="C#" Value="public bool IgnoreMissingProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreMissingProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.IgnoreMissingProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreMissingProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreMissingProperties { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreMissingProperties : bool with get, set" Usage="System.Data.Services.Client.DataServiceContext.IgnoreMissingProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, следует ли сопоставить прочитанные из типа свойства свойствам типа клиентской стороны.</summary>
        <value>Логическое значение, указывающее, следует ли сопоставить прочитанные из типа свойства свойствам типа клиентской стороны.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `true`значение равно, материализация будет выполнена, даже если свойства типа не могут быть сопоставлены со свойствами типа клиента. Если `false`значение равно, то несоответствие свойств вызывает исключение во время материализации объекта.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreResourceNotFoundException">
      <MemberSignature Language="C#" Value="public bool IgnoreResourceNotFoundException { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreResourceNotFoundException" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.IgnoreResourceNotFoundException" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreResourceNotFoundException As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreResourceNotFoundException { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreResourceNotFoundException : bool with get, set" Usage="System.Data.Services.Client.DataServiceContext.IgnoreResourceNotFoundException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает возникновение или невозникновение исключения при возвращении службой данных ошибки 404 ("ресурс не найден").</summary>
        <value>Если значение равно <see langword="true" />, клиентская библиотека возвращает пустой набор вместо создания исключения <see cref="T:System.Data.Services.Client.DataServiceQueryException" />, когда служба данных возвращает ошибку HTTP 404 "Ресурс не найден".</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Links">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.LinkDescriptor&gt; Links { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Services.Client.LinkDescriptor&gt; Links" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.Links" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Links As ReadOnlyCollection(Of LinkDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Services::Client::LinkDescriptor ^&gt; ^ Links { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Services::Client::LinkDescriptor ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Links : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.LinkDescriptor&gt;" Usage="System.Data.Services.Client.DataServiceContext.Links" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Services.Client.LinkDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию всех ассоциаций или ссылок, отслеживаемых в данный момент объектом <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
        <value>Коллекция объектов <see cref="T:System.Data.Services.Client.LinkDescriptor" />, представляющих все ассоциации или ссылки, отслеживание которых в настоящее время производит объект <see cref="T:System.Data.Services.Client.DataServiceContext" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если ссылки не отслеживаются, возвращается пустой список. Коллекция предназначена только для чтения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadProperty">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Загружает отложенное содержимое из службы данных.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadProperty">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse LoadProperty (object entity, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse LoadProperty(object entity, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.LoadProperty(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadProperty (entity As Object, propertyName As String) As QueryOperationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::QueryOperationResponse ^ LoadProperty(System::Object ^ entity, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : obj * string -&gt; System.Data.Services.Client.QueryOperationResponse" Usage="dataServiceContext.LoadProperty (entity, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entity">Сущность, содержащая свойства для загрузки.</param>
        <param name="propertyName">Имя свойства для указанной сущности для загрузки.</param>
        <summary>Загружает отложенное содержимое для заданного свойства из службы данных.</summary>
        <returns>Ответ на операцию загрузки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов этого метода вызывает сетевую операцию для выборки значения свойства. Указанное свойство может быть одним из свойств сущности, в том числе свойств, представляющих ассоциации или ссылки.  
  
 Если свойство представляет ассоциацию, ссылку, отсроченное свойство, то вызов этого метода предоставляет клиенту возможность медленно загрузить связанные ресурсы.  
  
 Если сущность находится в неизмененном или измененном состоянии, значение свойства загружает связанные сущности и помечает их и любые ссылки как неизмененные.  
  
 Если свойство уже загружено, вызов этого метода позволяет обновить значение свойства.  
  
   
  
## Examples  
 Следующий пример иллюстрирует явную загрузку объекта `Customers`, связанного с каждым возвращенным экземпляром `Orders`. В этом примере используется <xref:System.Data.Services.Client.DataServiceContext> объект, созданный средством Добавление ссылки на службу на основе службы данных Northwind, которая создается при [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] завершении.  
  
 [!code-csharp[Astoria Northwind Client#LoadRelatedOrderCustomer](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/source.cs#loadrelatedordercustomer)]
 [!code-vb[Astoria Northwind Client#LoadRelatedOrderCustomer](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/source.vb#loadrelatedordercustomer)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadProperty">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse LoadProperty (object entity, string propertyName, System.Data.Services.Client.DataServiceQueryContinuation continuation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse LoadProperty(object entity, string propertyName, class System.Data.Services.Client.DataServiceQueryContinuation continuation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.LoadProperty(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadProperty (entity As Object, propertyName As String, continuation As DataServiceQueryContinuation) As QueryOperationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::QueryOperationResponse ^ LoadProperty(System::Object ^ entity, System::String ^ propertyName, System::Data::Services::Client::DataServiceQueryContinuation ^ continuation);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : obj * string * System.Data.Services.Client.DataServiceQueryContinuation -&gt; System.Data.Services.Client.QueryOperationResponse" Usage="dataServiceContext.LoadProperty (entity, propertyName, continuation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="continuation" Type="System.Data.Services.Client.DataServiceQueryContinuation" />
      </Parameters>
      <Docs>
        <param name="entity">Сущность, содержащая свойства для загрузки.</param>
        <param name="propertyName">Имя свойства для указанной сущности для загрузки.</param>
        <param name="continuation">Объект <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" />, представляющий следующую страницу связанных сущностей, которую необходимо загрузить из службы данных.</param>
        <summary>Выполняет загрузку следующей страницы связанных сущностей из службы данных посредством предоставленного объекта продолжения запроса.</summary>
        <returns>Ответ, содержащий следующую страницу данных о связанной сущности.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `entity` находится в состоянии <xref:System.Data.Services.Client.EntityStates.Unchanged> или <xref:System.Data.Services.Client.EntityStates.Modified>, связанные сущности загружаются в виде объектов в состоянии <xref:System.Data.Services.Client.EntityStates.Unchanged> со ссылками также в состоянии <xref:System.Data.Services.Client.EntityStates.Unchanged>.  
  
 Если `entity` находится в состоянии <xref:System.Data.Services.Client.EntityStates.Deleted>, связанные сущности загружаются в состоянии <xref:System.Data.Services.Client.EntityStates.Unchanged> со ссылками в состоянии <xref:System.Data.Services.Client.EntityStates.Deleted>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Когда <paramref name="entity" /> находится в состоянии <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> или <see cref="F:System.Data.Services.Client.EntityStates.Added" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadProperty">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse LoadProperty (object entity, string propertyName, Uri nextLinkUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse LoadProperty(object entity, string propertyName, class System.Uri nextLinkUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.LoadProperty(System.Object,System.String,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadProperty (entity As Object, propertyName As String, nextLinkUri As Uri) As QueryOperationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::QueryOperationResponse ^ LoadProperty(System::Object ^ entity, System::String ^ propertyName, Uri ^ nextLinkUri);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : obj * string * Uri -&gt; System.Data.Services.Client.QueryOperationResponse" Usage="dataServiceContext.LoadProperty (entity, propertyName, nextLinkUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="nextLinkUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="entity">Сущность, содержащая свойства для загрузки.</param>
        <param name="propertyName">Имя свойства для указанной сущности для загрузки.</param>
        <param name="nextLinkUri">Универсальный код ресурса, используемый для загрузки следующей страницы результатов.</param>
        <summary>Загружает страницу связанных сущностей посредством предоставленного универсального кода ресурса следующей ссылки.</summary>
        <returns>Экземпляр <see cref="T:System.Data.Services.Client.QueryOperationResponse`1" />, содержащий результаты запроса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `entity` находится в состоянии <xref:System.Data.Services.Client.EntityStates.Unchanged> или <xref:System.Data.Services.Client.EntityStates.Modified>, связанные сущности загружаются в состоянии <xref:System.Data.Services.Client.EntityStates.Unchanged>, ссылки между сущностями также создаются в состоянии <xref:System.Data.Services.Client.EntityStates.Unchanged>.  
  
 Если `entity` находится в состоянии <xref:System.Data.Services.Client.EntityStates.Deleted>, связанные сущности загружаются в состоянии <xref:System.Data.Services.Client.EntityStates.Unchanged>, ссылки между сущностями создаются в состоянии <xref:System.Data.Services.Client.EntityStates.Deleted>.  
  
   
  
## Examples  
 Этот пример возвращает связанные сущности `Orders` вместе с каждой сущностью `Customers` и использует цикл `do…while` для загрузки страниц сущностей `Customers`, а также вложенный цикл `while` для загрузки страниц связанных сущностей `Orders` из службы данных. Метод <xref:System.Data.Services.Client.DataServiceContext.LoadProperty%2A> используется для загрузки страниц связанных сущностей `Orders`.  
  
 [!code-csharp[Astoria Northwind Client#GetCustomersPagedNested](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/source.cs#getcustomerspagednested)]
 [!code-vb[Astoria Northwind Client#GetCustomersPagedNested](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/source.vb#getcustomerspagednested)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Когда <paramref name="entity" /> находится в состоянии <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> или <see cref="F:System.Data.Services.Client.EntityStates.Added" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/bb786ea4-f3ef-4ad3-9a41-3a0b7feb6a1f">Практическое руководство. Загрузка результатов, разбитых на страницы (службы данных WCF)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/32f9b588-c832-44c4-a7e0-fcce635df59a">Загрузка отложенного содержимого (службы данных WCF)</related>
      </Docs>
    </Member>
    <Member MemberName="LoadProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.QueryOperationResponse&lt;T&gt; LoadProperty&lt;T&gt; (object entity, string propertyName, System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt; continuation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.QueryOperationResponse`1&lt;!!T&gt; LoadProperty&lt;T&gt;(object entity, string propertyName, class System.Data.Services.Client.DataServiceQueryContinuation`1&lt;!!T&gt; continuation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.LoadProperty``1(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadProperty(Of T) (entity As Object, propertyName As String, continuation As DataServiceQueryContinuation(Of T)) As QueryOperationResponse(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Data::Services::Client::QueryOperationResponse&lt;T&gt; ^ LoadProperty(System::Object ^ entity, System::String ^ propertyName, System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ continuation);" />
      <MemberSignature Language="F#" Value="member this.LoadProperty : obj * string * System.Data.Services.Client.DataServiceQueryContinuation&lt;'T&gt; -&gt; System.Data.Services.Client.QueryOperationResponse&lt;'T&gt;" Usage="dataServiceContext.LoadProperty (entity, propertyName, continuation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.QueryOperationResponse&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="continuation" Type="System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">Тип элемента коллекции, который необходимо загрузить.</typeparam>
        <param name="entity">Сущность, содержащая свойства для загрузки.</param>
        <param name="propertyName">Имя свойства для указанной сущности для загрузки.</param>
        <param name="continuation">Объект <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" />, представляющий следующую страницу связанных сущностей, которую необходимо загрузить из службы данных.</param>
        <summary>Выполняет загрузку следующей страницы связанных сущностей из службы данных посредством предоставленного универсального объекта продолжения запроса.</summary>
        <returns>Ответ, содержащий следующую страницу данных о связанной сущности.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `entity` находится в состоянии <xref:System.Data.Services.Client.EntityStates.Unchanged> или <xref:System.Data.Services.Client.EntityStates.Modified>, связанные сущности загружаются в виде объектов в состоянии <xref:System.Data.Services.Client.EntityStates.Unchanged> со ссылками также в состоянии <xref:System.Data.Services.Client.EntityStates.Unchanged>.  
  
 Если `entity` находится в состоянии <xref:System.Data.Services.Client.EntityStates.Deleted>, связанные сущности загружаются в состоянии <xref:System.Data.Services.Client.EntityStates.Unchanged> со ссылками в состоянии <xref:System.Data.Services.Client.EntityStates.Deleted>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Когда <paramref name="entity" /> находится в состоянии <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> или <see cref="F:System.Data.Services.Client.EntityStates.Added" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MergeOption">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.MergeOption MergeOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Services.Client.MergeOption MergeOption" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.MergeOption" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeOption As MergeOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Client::MergeOption MergeOption { System::Data::Services::Client::MergeOption get(); void set(System::Data::Services::Client::MergeOption value); };" />
      <MemberSignature Language="F#" Value="member this.MergeOption : System.Data.Services.Client.MergeOption with get, set" Usage="System.Data.Services.Client.DataServiceContext.MergeOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.MergeOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает параметр синхронизации для получения сущностей от службы данных.</summary>
        <value>Один из членов перечисления <see cref="T:System.Data.Services.Client.MergeOption" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это значение считывается компонентом десериализации клиента до материализации объектов. Перед выполнением запросов или обновления службы данных задайте это свойство для соответствующего параметра материализации. Значение по умолчанию — <xref:System.Data.Services.Client.MergeOption.AppendOnly>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadingEntity">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; ReadingEntity;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; ReadingEntity" />
      <MemberSignature Language="DocId" Value="E:System.Data.Services.Client.DataServiceContext.ReadingEntity" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReadingEntity As EventHandler(Of ReadingWritingEntityEventArgs) " FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Data::Services::Client::ReadingWritingEntityEventArgs ^&gt; ^ ReadingEntity;" />
      <MemberSignature Language="F#" Value="member this.ReadingEntity : EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; " Usage="member this.ReadingEntity : System.EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event ReadingEntity As EventHandler(Of ReadingWritingEntityEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает после окончательной передачи данных сущности объекту сущности.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Событие <xref:System.Data.Services.Client.DataServiceContext.ReadingEntity> происходит после полного считывания данных сущности в целевом объекте вместе со всеми вложенными сущностями. Если отслеживание отличается от <xref:System.Data.Services.Client.MergeOption.NoTracking>, объект прикрепляется до возникновения события.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveName">
      <MemberSignature Language="C#" Value="public Func&lt;Type,string&gt; ResolveName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Type, string&gt; ResolveName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.ResolveName" />
      <MemberSignature Language="VB.NET" Value="Public Property ResolveName As Func(Of Type, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;Type ^, System::String ^&gt; ^ ResolveName { Func&lt;Type ^, System::String ^&gt; ^ get(); void set(Func&lt;Type ^, System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResolveName : Func&lt;Type, string&gt; with get, set" Usage="System.Data.Services.Client.DataServiceContext.ResolveName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Type,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает функцию, применяемую для замены стратегии выбора типов, которая используется по умолчанию клиентской библиотекой при отправке сущностей службе данных.</summary>
        <value>Возвращает строку, содержащую имя объекта <see cref="T:System.Data.Services.Client.DataServiceContext" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Позволяет переопределять разрешение типа по умолчанию, используемое клиентской библиотекой. Задайте это свойство для делегата, который идентифицирует функцию, используемую для определения типа в клиентском приложении для имени типа с пространством имен. Это позволяет клиенту выполнить пользовательское сопоставление имени типа, представленного в ответе от сервера, и типа на стороне клиента.  
  
> [!NOTE]
>  Этот метод позволяет переопределить имя сущности, которая сериализуется в целевое представление, например Atom или JSON, для указанного типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveType">
      <MemberSignature Language="C#" Value="public Func&lt;string,Type&gt; ResolveType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;string, class System.Type&gt; ResolveType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.ResolveType" />
      <MemberSignature Language="VB.NET" Value="Public Property ResolveType As Func(Of String, Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::String ^, Type ^&gt; ^ ResolveType { Func&lt;System::String ^, Type ^&gt; ^ get(); void set(Func&lt;System::String ^, Type ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResolveType : Func&lt;string, Type&gt; with get, set" Usage="System.Data.Services.Client.DataServiceContext.ResolveType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.String,System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает функцию, применяемую для замены параметра выбора типов, который используется по умолчанию клиентской библиотекой при получении сущностей от службы данных.</summary>
        <value>Делегат функции, идентифицирующий замещающую функцию, используемую для замены параметра разрешения типов, применяемого по умолчанию клиентской библиотекой.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Позволяет переопределять стратегию разрешения типа по умолчанию, которая используется клиентской библиотекой. Задайте это свойство для делегата, определяющего функцию, используемую для определения имени типа с пространством имен в типе в клиентском приложении. Это позволяет клиенту выполнить пользовательское сопоставление имени типа, представленного в ответе от сервера, и типа на стороне клиента.  
  
 Переопределение типа разрешения также позволяет включить стратегию пользовательского сопоставления имени типа и типа. Это не влияет на материализацию ответа в выявленном типе.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveChanges">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Сохраняет изменения, отслеживаемые объектом <see cref="T:System.Data.Services.Client.DataServiceContext" />, в хранилище.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Data.Services.Client.DataServiceResponse>, содержащий состояние, заголовки и ошибки, полученные в результате вызова метода <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SaveChanges">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceResponse SaveChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceResponse SaveChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.SaveChanges" />
      <MemberSignature Language="VB.NET" Value="Public Function SaveChanges () As DataServiceResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceResponse ^ SaveChanges();" />
      <MemberSignature Language="F#" Value="member this.SaveChanges : unit -&gt; System.Data.Services.Client.DataServiceResponse" Usage="dataServiceContext.SaveChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сохраняет изменения, отслеживаемые объектом <see cref="T:System.Data.Services.Client.DataServiceContext" />, в хранилище.</summary>
        <returns>Объект <see cref="T:System.Data.Services.Client.DataServiceResponse" />, содержащий состояние, заголовки и ошибки, полученные в результате вызова метода <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChanges">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceResponse SaveChanges (System.Data.Services.Client.SaveChangesOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Services.Client.DataServiceResponse SaveChanges(valuetype System.Data.Services.Client.SaveChangesOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.SaveChanges(System.Data.Services.Client.SaveChangesOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function SaveChanges (options As SaveChangesOptions) As DataServiceResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Client::DataServiceResponse ^ SaveChanges(System::Data::Services::Client::SaveChangesOptions options);" />
      <MemberSignature Language="F#" Value="member this.SaveChanges : System.Data.Services.Client.SaveChangesOptions -&gt; System.Data.Services.Client.DataServiceResponse" Usage="dataServiceContext.SaveChanges options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Data.Services.Client.SaveChangesOptions" />
      </Parameters>
      <Docs>
        <param name="options">Член перечисления <see cref="T:System.Data.Services.Client.MergeOption" />, задающий параметр материализации.</param>
        <summary>Сохраняет изменения, отслеживаемые объектом <see cref="T:System.Data.Services.Client.DataServiceContext" />, в хранилище.</summary>
        <returns>Объект <see cref="T:System.Data.Services.Client.DataServiceResponse" />, содержащий состояние, заголовки и ошибки, полученные в результате вызова метода <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Операции отправляются в службу данных в следующем порядке.  
  
1.  <xref:System.Data.Services.Client.DataServiceContext.DeleteLink%2A>  
  
2.  <xref:System.Data.Services.Client.DataServiceContext.DeleteObject%2A>  
  
3.  <xref:System.Data.Services.Client.DataServiceContext.UpdateObject%2A>  
  
4.  <xref:System.Data.Services.Client.DataServiceContext.AddObject%2A>  
  
5.  <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A> и <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesDefaultOptions">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.SaveChangesOptions SaveChangesDefaultOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Services.Client.SaveChangesOptions SaveChangesDefaultOptions" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.SaveChangesDefaultOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveChangesDefaultOptions As SaveChangesOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Client::SaveChangesOptions SaveChangesDefaultOptions { System::Data::Services::Client::SaveChangesOptions get(); void set(System::Data::Services::Client::SaveChangesOptions value); };" />
      <MemberSignature Language="F#" Value="member this.SaveChangesDefaultOptions : System.Data.Services.Client.SaveChangesOptions with get, set" Usage="System.Data.Services.Client.DataServiceContext.SaveChangesDefaultOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.SaveChangesOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значения <see cref="T:System.Data.Services.Client.SaveChangesOptions" />, используемые методом <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" />.</summary>
        <value>Текущие параметры операции сохранения изменений.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство предоставляется таким образом, чтобы семантику параметров, например слияния и замены, можно было один раз задать для <xref:System.Data.Services.Client.DataServiceContext>, а затем переопределить при необходимости путем вызова одной из перегрузок <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendingRequest">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Data.Services.Client.SendingRequestEventArgs&gt; SendingRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Data.Services.Client.SendingRequestEventArgs&gt; SendingRequest" />
      <MemberSignature Language="DocId" Value="E:System.Data.Services.Client.DataServiceContext.SendingRequest" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SendingRequest As EventHandler(Of SendingRequestEventArgs) " FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Data::Services::Client::SendingRequestEventArgs ^&gt; ^ SendingRequest;" />
      <MemberSignature Language="F#" Value="member this.SendingRequest : EventHandler&lt;System.Data.Services.Client.SendingRequestEventArgs&gt; " Usage="member this.SendingRequest : System.EventHandler&lt;System.Data.Services.Client.SendingRequestEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event SendingRequest As EventHandler(Of SendingRequestEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Data.Services.Client.SendingRequestEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает при создании нового объекта <see cref="T:System.Net.HttpWebRequest" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Событие <xref:System.Data.Services.Client.DataServiceContext.SendingRequest> происходит до задания необходимых значений свойств для объекта. вывод  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLink">
      <MemberSignature Language="C#" Value="public void SetLink (object source, string sourceProperty, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLink(object source, string sourceProperty, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.SetLink(System.Object,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLink (source As Object, sourceProperty As String, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLink(System::Object ^ source, System::String ^ sourceProperty, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.SetLink : obj * string * obj -&gt; unit" Usage="dataServiceContext.SetLink (source, sourceProperty, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="sourceProperty" Type="System.String" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">Исходный объект новой ссылки.</param>
        <param name="sourceProperty">Свойство исходного объекта, идентифицирующее целевой объект новой ссылки.</param>
        <param name="target">Дочерний объект, включенный в новую ссылку, инициализированную вызовом этого метода. Целевой объект должен быть подтипом типа, идентифицированного параметром <paramref name="sourceProperty" />. Если свойство <paramref name="target" /> имеет значение NULL, данный вызов представляет операцию удаления ссылки.</param>
        <summary>Уведомляет <see cref="T:System.Data.Services.Client.DataServiceContext" /> о существовании новой ссылки между заданными объектами, представленной свойством, заданным параметром <paramref name="sourceProperty" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Новая ссылка создается с состоянием <xref:System.Data.Services.Client.EntityStates.Added>. <xref:System.Data.Services.Client.DataServiceContext> добавляет эту новую ссылку в набор вновь созданных ссылок, которые передаются в службу данных при следующем вызове <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>.  
  
 Если целевой аргумент не определен, ссылку, представленную sourceProperty, следует переместить или удалить (ссылка перемещается в состояние <xref:System.Data.Services.Client.EntityStates.Deleted>).  
  
 Ссылки — это односторонние связи. Если существует указатель обратной связи, указывающий двустороннее сопоставление, этот метод следует вызвать снова, чтобы <xref:System.Data.Services.Client.DataServiceContext> уведомить о второй ссылке.  
  
 Этот метод поддерживает только добавление ссылок к отношениям со значением кратности = 1 (исходное свойство является ссылкой на объект). Например, если класс `Person` связан с другим классом `Person` с помощью свойства `Friend`, этот вызов можно использовать для связи `Person` с `Person`. Этот метод создает исключение, если представленный `sourceProperty` содержит связь с количеством элементов более одного.  
  
   
  
## Examples  
 В следующем примере показано, как использовать методы <xref:System.Data.Services.Client.DataServiceContext.AddLink%2A> и <xref:System.Data.Services.Client.DataServiceContext.SetLink%2A> для создания ссылок, которые определяют связи. В этом примере также явно заданы свойства навигации объекта `Order_Details`.  
  
 [!code-csharp[Astoria Northwind Client#AddOrderDetailToOrder](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/source.cs#addorderdetailtoorder)]
 [!code-vb[Astoria Northwind Client#AddOrderDetailToOrder](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/source.vb#addorderdetailtoorder)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Когда для <paramref name="source" />, <paramref name="sourceProperty" /> или <paramref name="target" /> задано значение NULL.</exception>
        <exception cref="T:System.InvalidOperationException">Когда указанная ссылка уже существует.  
  
- или - 
Когда объекты, переданные в качестве <paramref name="source" /> или <paramref name="target" />, находятся в состоянии <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> или <see cref="F:System.Data.Services.Client.EntityStates.Deleted" />.  
  
- или - 
Когда <paramref name="sourceProperty" /> не является свойством навигации, которое определяет ссылку на один связанный объект.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSaveStream">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Назначает новый поток данных двоичным свойством какой-либо сущности.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSaveStream">
      <MemberSignature Language="C#" Value="public void SetSaveStream (object entity, System.IO.Stream stream, bool closeStream, System.Data.Services.Client.DataServiceRequestArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSaveStream(object entity, class System.IO.Stream stream, bool closeStream, class System.Data.Services.Client.DataServiceRequestArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.SetSaveStream(System.Object,System.IO.Stream,System.Boolean,System.Data.Services.Client.DataServiceRequestArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSaveStream(System::Object ^ entity, System::IO::Stream ^ stream, bool closeStream, System::Data::Services::Client::DataServiceRequestArgs ^ args);" />
      <MemberSignature Language="F#" Value="member this.SetSaveStream : obj * System.IO.Stream * bool * System.Data.Services.Client.DataServiceRequestArgs -&gt; unit" Usage="dataServiceContext.SetSaveStream (entity, stream, closeStream, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="closeStream" Type="System.Boolean" />
        <Parameter Name="args" Type="System.Data.Services.Client.DataServiceRequestArgs" />
      </Parameters>
      <Docs>
        <param name="entity">Сущность, имеющая двоичное свойство, которому необходимо назначить поток данных.</param>
        <param name="stream">Объект <see cref="T:System.IO.Stream" />, из которого необходимо прочитать двоичные данные.</param>
        <param name="closeStream">Значение <see cref="T:System.Boolean" />, которое определяет, закрыть ли поток данных по завершении работы метода <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" />.</param>
        <param name="args">Экземпляр класса <see cref="T:System.Data.Services.Client.DataServiceRequestArgs" />, содержащий параметры сообщения HTTP-запроса.</param>
        <summary>Назначает новый поток данных двоичным свойством какой-либо сущности с учетом параметров, указанных в сообщении запроса.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод задает двоичный поток, который является ресурсом мультимедиа, связанным `entity`с, который называется записью ссылки на носитель. <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A>  
  
 Вызов метода <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> помечает сущности как записи медиассылки. Состояние сущности также задается в <xref:System.Data.Services.Client.EntityStates.Modified> таким образом, чтобы поток направлялся в службу данных при следующем вызове метода <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>.  
  
 Метод <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> считывает <xref:System.IO.Stream> до конца. Не происходит попытки выполнить операцию <xref:System.IO.Stream.Seek%2A> для <xref:System.IO.Stream>.  
  
 Если `closeStream` имеет `true`значение ,<xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> метод закрывает поток перед возвратом. Поток закрыт даже тогда, когда возникает ошибка и поток не считывается.  
  
 Если у сущности `entity` есть атрибут <xref:System.Data.Services.Client.MediaEntryAttribute>, то медиаресурс не может быть потоком данных. Уделите этот атрибут перед заданием потока данных для `entity`.  
  
 Проверка не выполняется в заголовках, которые заданы в `args`. Не изменяйте заголовок HTTP, чтобы не изменить значение запроса.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Все параметры, предоставленные этому методу, имеют значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="entity" /> не отслеживается этим экземпляром <see cref="T:System.Data.Services.Client.DataServiceContext" />.  
  
- или - 
К параметру <paramref name="entity" /> применен <see cref="T:System.Data.Services.Client.MediaEntryAttribute" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetSaveStream">
      <MemberSignature Language="C#" Value="public void SetSaveStream (object entity, System.IO.Stream stream, bool closeStream, string contentType, string slug);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSaveStream(object entity, class System.IO.Stream stream, bool closeStream, string contentType, string slug) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.SetSaveStream(System.Object,System.IO.Stream,System.Boolean,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSaveStream(System::Object ^ entity, System::IO::Stream ^ stream, bool closeStream, System::String ^ contentType, System::String ^ slug);" />
      <MemberSignature Language="F#" Value="member this.SetSaveStream : obj * System.IO.Stream * bool * string * string -&gt; unit" Usage="dataServiceContext.SetSaveStream (entity, stream, closeStream, contentType, slug)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="closeStream" Type="System.Boolean" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="slug" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entity">Сущность, имеющая двоичное свойство, которому необходимо назначить поток данных.</param>
        <param name="stream">Объект <see cref="T:System.IO.Stream" />, из которого необходимо прочитать двоичные данные.</param>
        <param name="closeStream">Значение <see cref="T:System.Boolean" />, которое определяет, закрыть ли поток данных по завершении работы метода <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" />.</param>
        <param name="contentType">Значение заголовка Content-Type для сообщения запроса.</param>
        <param name="slug">Значение заголовка Slug для сообщения запроса.</param>
        <summary>Назначает новый поток данных двоичным свойством какой-либо сущности. Указанные заголовки Content-Type и Slug включены в сообщение запроса.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод задает двоичный поток, который является ресурсом мультимедиа, связанным `entity`с, который называется записью ссылки на носитель. <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A>  
  
 Вызов метода <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> помечает сущности как медиассылки. Состояние сущности также задается в <xref:System.Data.Services.Client.EntityStates.Modified> таким образом, чтобы поток направлялся в службу данных при следующем вызове метода <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>.  
  
 Метод <xref:System.Data.Services.Client.DataServiceContext.SetSaveStream%2A> считывает <xref:System.IO.Stream> до конца. Не происходит попытки выполнить операцию <xref:System.IO.Stream.Seek%2A> для <xref:System.IO.Stream>.  
  
 Если `closeStream` имеет `true`значение ,<xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A> метод закрывает поток перед возвратом. Поток закрыт даже тогда, когда возникает ошибка и поток не считывается.  
  
 Если у сущности `entity` есть атрибут <xref:System.Data.Services.Client.MediaEntryAttribute>, то медиаресурс не может быть потоком данных. Уделите этот атрибут перед заданием потока данных для `entity`.  
  
 Проверка не выполняется в заголовках, которые заданы в `contentType` и `slug`. Не изменяйте эти заголовки HTTP, чтобы не изменить значение запроса.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Все параметры, предоставленные этому методу, имеют значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="entity" /> не отслеживается этим экземпляром <see cref="T:System.Data.Services.Client.DataServiceContext" />.  
  
- или - 
К параметру <see langword="entity" /> применен <see cref="T:System.Data.Services.Client.MediaEntryAttribute" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Data.Services.Client.DataServiceContext.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает параметр времени ожидания, используемый при отправке базового HTTP-запроса службе данных.</summary>
        <value>Целое число, обозначающее интервал времени до времени ожидания запроса службы.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это значение передается <xref:System.Net.HttpWebRequest.Timeout> свойству базового <xref:System.Net.HttpWebRequest> объекта. Значение необходимо задать до выполнения любого запроса или операций обновления, иначе целевая служба данных может повлиять на запрос. Значение можно изменить между запросами к службе данных. Новое значение будет использоваться при следующем запросе службы данных.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntity&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetEntity&lt;TEntity&gt; (Uri identity, out TEntity entity) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEntity&lt;class TEntity&gt;(class System.Uri identity, [out] !!TEntity&amp; entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.TryGetEntity``1(System.Uri,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEntity(Of TEntity As Class) (identity As Uri, ByRef entity As TEntity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class bool TryGetEntity(Uri ^ identity, [Runtime::InteropServices::Out] TEntity % entity);" />
      <MemberSignature Language="F#" Value="member this.TryGetEntity : Uri * 'Entity -&gt; bool (requires 'Entity : null)" Usage="dataServiceContext.TryGetEntity (identity, entity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.Uri" />
        <Parameter Name="entity" Type="TEntity" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">Тип сущности.</typeparam>
        <param name="identity">URI отслеживаемой сущности, которую требуется извлечь.</param>
        <param name="entity">Извлекаемая сущность.</param>
        <summary>Тестовое извлечение сущности, отслеживаемой объектом <see cref="T:System.Data.Services.Client.DataServiceContext" />, по ссылке на универсальный код ресурса (URI) этой сущности.</summary>
        <returns>Если сущность найдена по <paramref name="resourceUri" />, она возвращается в выходном параметре <paramref name="entity" /> и метод возвращает значение true. Если сущность не найдена, возвращается значение false.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если сущность находится в состоянии <xref:System.Data.Services.Client.EntityStates.Detached> или <xref:System.Data.Services.Client.EntityStates.Added>, она не имеет URI и не может быть извлечена с помощью этого метода.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Если значение параметра <paramref name="identity" /> равно <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetUri">
      <MemberSignature Language="C#" Value="public bool TryGetUri (object entity, out Uri identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetUri(object entity, [out] class System.Uri&amp; identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.TryGetUri(System.Object,System.Uri@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetUri (entity As Object, ByRef identity As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetUri(System::Object ^ entity, [Runtime::InteropServices::Out] Uri ^ % identity);" />
      <MemberSignature Language="F#" Value="member this.TryGetUri : obj * Uri -&gt; bool" Usage="dataServiceContext.TryGetUri (entity, identity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="identity" Type="System.Uri" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entity">Сущность, идентифицируемая значением <paramref name="identity" />.</param>
        <param name="identity">URI-адрес сущности.</param>
        <summary>Извлекает канонический URI, связанный с заданной сущностью, если таковой имеется.</summary>
        <returns>Возвращает значение true, если канонический URI возвращен в выходном параметре. Если заданная сущность не отслеживается объектом <see cref="T:System.Data.Services.Client.DataServiceContext" /> или находится в добавленном состоянии, URI недоступен и возвращается значение false.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объекты в состоянии <xref:System.Data.Services.Client.EntityStates.Added> еще не имеют URI.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Если значение параметра <paramref name="entity" /> равно <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TypeScheme">
      <MemberSignature Language="C#" Value="public Uri TypeScheme { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri TypeScheme" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.TypeScheme" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeScheme As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ TypeScheme { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeScheme : Uri with get, set" Usage="System.Data.Services.Client.DataServiceContext.TypeScheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает URI, используемый для указания типа схемы, используемой службой.</summary>
        <value>Объект <see cref="T:System.Uri" />, содержащий схему типов.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В полезных данных ATOM возвращаемое значение представляет собой атрибут схемы элемента категории, используемый для идентификации типа сущности. Значение по умолчанию — `http://schemas.microsoft.com/ado/2007/08/dataservices/scheme`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateObject">
      <MemberSignature Language="C#" Value="public void UpdateObject (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateObject(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceContext.UpdateObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateObject (entity As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateObject(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.UpdateObject : obj -&gt; unit" Usage="dataServiceContext.UpdateObject entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Отслеживаемая сущность, которой нужно присвоить состояние <see cref="F:System.Data.Services.Client.EntityStates.Modified" />.</param>
        <summary>Изменяет состояние заданного объекта в <see cref="T:System.Data.Services.Client.DataServiceContext" /> на <see cref="F:System.Data.Services.Client.EntityStates.Modified" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Следующий пример извлекает и модифицирует существующий объект, после чего вызывает метод <xref:System.Data.Services.Client.DataServiceContext.UpdateObject%2A> в контексте <xref:System.Data.Services.Client.DataServiceContext>, чтобы пометить элемент контекста как обновленный. Сообщение HTTP MERGE передается в службу данных при вызове <xref:System.Data.Services.Client.DataServiceContext.SaveChanges%2A>. В этом примере используется <xref:System.Data.Services.Client.DataServiceContext> объект, созданный средством Добавление ссылки на службу на основе службы данных Northwind, которая создается при [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] завершении.  
  
 [!code-csharp[Astoria Northwind Client#ModifyCustomer](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/source.cs#modifycustomer)]
 [!code-vb[Astoria Northwind Client#ModifyCustomer](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/source.vb#modifycustomer)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Если значение параметра <paramref name="entity" /> равно <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Когда <paramref name="entity" /> находится в состоянии <see cref="F:System.Data.Services.Client.EntityStates.Detached" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UsePostTunneling">
      <MemberSignature Language="C#" Value="public bool UsePostTunneling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsePostTunneling" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceContext.UsePostTunneling" />
      <MemberSignature Language="VB.NET" Value="Public Property UsePostTunneling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsePostTunneling { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UsePostTunneling : bool with get, set" Usage="System.Data.Services.Client.DataServiceContext.UsePostTunneling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает логическое значение, которое указывает, следует ли использовать POST-туннелирование.</summary>
        <value>Логическое значение, которое указывает, следует ли использовать POST-туннелирование.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство определяет, будет ли использоваться POST-туннелирование протоколов для запросов на создание, обновление и удаление, отправленных в службу данных. Если задано значение true, туннелирование используется. Если задано значение false, используются стандартные методы HTTP.  
  
 Значение по умолчанию для этого свойства — false.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WritingEntity">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; WritingEntity;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; WritingEntity" />
      <MemberSignature Language="DocId" Value="E:System.Data.Services.Client.DataServiceContext.WritingEntity" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WritingEntity As EventHandler(Of ReadingWritingEntityEventArgs) " FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Data::Services::Client::ReadingWritingEntityEventArgs ^&gt; ^ WritingEntity;" />
      <MemberSignature Language="F#" Value="member this.WritingEntity : EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; " Usage="member this.WritingEntity : System.EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event WritingEntity As EventHandler(Of ReadingWritingEntityEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Data.Services.Client.ReadingWritingEntityEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает после полной сериализации сущности в XML в составе сообщения запроса.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обработка события <xref:System.Data.Services.Client.DataServiceContext.WritingEntity> позволяет изменять XML в запросе перед отправкой.  
  
 Событие <xref:System.Data.Services.Client.DataServiceContext.WritingEntity> может происходить в другом потоке при вызове <xref:System.Data.Services.Client.DataServiceContext.BeginSaveChanges%28System.Data.Services.Client.SaveChangesOptions%2CSystem.AsyncCallback%2CSystem.Object%29> без включения <xref:System.Data.Services.Client.SaveChangesOptions.Batch> в предоставляемое значение <xref:System.Data.Services.Client.SaveChangesOptions>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
