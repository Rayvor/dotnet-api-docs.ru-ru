<Type Name="EnumerationOptions" FullName="System.IO.EnumerationOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d096a9c01a62a35c9165cda5d3b3c44934291e8b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69243704" /></Metadata><TypeSignature Language="C#" Value="public class EnumerationOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EnumerationOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.EnumerationOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class EnumerationOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class EnumerationOptions" />
  <TypeSignature Language="F#" Value="type EnumerationOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnumerationOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.EnumerationOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EnumerationOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e17ec-101">Инициализирует новый экземпляр класса <see cref="T:System.IO.EnumerationOptions" /> с рекомендуемыми параметрами по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="e17ec-101">Initializes a new instance of the <see cref="T:System.IO.EnumerationOptions" /> class with the recommended default options.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributesToSkip">
      <MemberSignature Language="C#" Value="public System.IO.FileAttributes AttributesToSkip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.FileAttributes AttributesToSkip" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.AttributesToSkip" />
      <MemberSignature Language="VB.NET" Value="Public Property AttributesToSkip As FileAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::FileAttributes AttributesToSkip { System::IO::FileAttributes get(); void set(System::IO::FileAttributes value); };" />
      <MemberSignature Language="F#" Value="member this.AttributesToSkip : System.IO.FileAttributes with get, set" Usage="System.IO.EnumerationOptions.AttributesToSkip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e17ec-102">Возвращает или задает пропускаемые атрибуты.</span><span class="sxs-lookup"><span data-stu-id="e17ec-102">Gets or sets the attributes to skip.</span></span> <span data-ttu-id="e17ec-103">Значение по умолчанию — <c>FileAttributes.Hidden | FileAttributes.System</c>.</span><span class="sxs-lookup"><span data-stu-id="e17ec-103">The default is <c>FileAttributes.Hidden | FileAttributes.System</c>.</span></span></summary>
        <value><span data-ttu-id="e17ec-104">Пропускаемые атрибуты.</span><span class="sxs-lookup"><span data-stu-id="e17ec-104">The attributes to skip.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferSize">
      <MemberSignature Language="C#" Value="public int BufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BufferSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.BufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property BufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BufferSize : int with get, set" Usage="System.IO.EnumerationOptions.BufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e17ec-105">Возвращает или задает рекомендуемый размер буфера в байтах.</span><span class="sxs-lookup"><span data-stu-id="e17ec-105">Gets or sets the suggested buffer size, in bytes.</span></span> <span data-ttu-id="e17ec-106">Значение по умолчанию — 0 (без рекомендаций).</span><span class="sxs-lookup"><span data-stu-id="e17ec-106">The default is 0 (no suggestion).</span></span></summary>
        <value><span data-ttu-id="e17ec-107">Размер буфера.</span><span class="sxs-lookup"><span data-stu-id="e17ec-107">The buffer size.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="e17ec-108">Не на всех платформах используются выделенные пользователем буферы, а для некоторых требуются фиксированные буферы или буфер, в котором достаточно места для возврата полного результата.</span><span class="sxs-lookup"><span data-stu-id="e17ec-108">Not all platforms use user allocated buffers, and some require either fixed buffers or a buffer that has enough space to return a full result.</span></span> <span data-ttu-id="e17ec-109">Один из сценариев, где этот вариант полезен, — это перечисление удаленных общих ресурсов в Windows.</span><span class="sxs-lookup"><span data-stu-id="e17ec-109">One scenario where this option is useful is with remote share enumeration on Windows.</span></span> <span data-ttu-id="e17ec-110">Наличие большого буфера может повысить производительность, так как дополнительные результаты могут быть пакетированы по сети (например, через сетевую папку).</span><span class="sxs-lookup"><span data-stu-id="e17ec-110">Having a large buffer may result in better performance as more results can be batched over the wire (for example, over a network share).</span></span>
<span data-ttu-id="e17ec-111">Например, "крупный" буфер будет иметь значение 16 КБ.</span><span class="sxs-lookup"><span data-stu-id="e17ec-111">A "large" buffer, for example, would be 16K.</span></span> <span data-ttu-id="e17ec-112">Обычная — 4 КБ.</span><span class="sxs-lookup"><span data-stu-id="e17ec-112">Typical is 4K.</span></span>
            
<span data-ttu-id="e17ec-113">Предлагаемый размер буфера не будет использоваться, если он не имеет смысла для собственных API-интерфейсов на текущей платформе или если он слишком мал для получения по крайней мере одного результата.</span><span class="sxs-lookup"><span data-stu-id="e17ec-113">The suggested buffer size will not be used if it has no meaning for the native APIs on the current platform or if it would be too small for getting at least a single result.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreInaccessible">
      <MemberSignature Language="C#" Value="public bool IgnoreInaccessible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreInaccessible" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.IgnoreInaccessible" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreInaccessible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreInaccessible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreInaccessible : bool with get, set" Usage="System.IO.EnumerationOptions.IgnoreInaccessible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e17ec-114">Возвращает или задает значение, указывающее, следует ли пропускать файлы или каталоги при отказе в доступе (например, <see cref="T:System.UnauthorizedAccessException" /> или <see cref="T:System.Security.SecurityException" />).</span><span class="sxs-lookup"><span data-stu-id="e17ec-114">Gets or sets a value that indicates whether to skip files or directories when access is denied (for example, <see cref="T:System.UnauthorizedAccessException" /> or <see cref="T:System.Security.SecurityException" />).</span></span> <span data-ttu-id="e17ec-115">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="e17ec-115">The default is <see langword="true" />.</span></span></summary>
        <value><span data-ttu-id="e17ec-116"><see langword="true" />Пропуск файлов или каталогов иннацессибле; в противном случае —. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="e17ec-116"><see langword="true" /> to skip innacessible files or directories; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchCasing">
      <MemberSignature Language="C#" Value="public System.IO.MatchCasing MatchCasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.MatchCasing MatchCasing" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.MatchCasing" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchCasing As MatchCasing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::MatchCasing MatchCasing { System::IO::MatchCasing get(); void set(System::IO::MatchCasing value); };" />
      <MemberSignature Language="F#" Value="member this.MatchCasing : System.IO.MatchCasing with get, set" Usage="System.IO.EnumerationOptions.MatchCasing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MatchCasing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e17ec-117">Возвращает или задает поведение сопоставления вариантов.</span><span class="sxs-lookup"><span data-stu-id="e17ec-117">Gets or sets the case matching behavior.</span></span></summary>
        <value><span data-ttu-id="e17ec-118">Одно из значений перечисления, указывающее поведение сопоставления вариантов.</span><span class="sxs-lookup"><span data-stu-id="e17ec-118">One of the enumeration values that indicates the case matching behavior.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="e17ec-119">Для API-интерфейсов, позволяющих указывать выражение соответствия, это свойство позволяет указать поведение сопоставления вариантов.</span><span class="sxs-lookup"><span data-stu-id="e17ec-119">For APIs that allow specifying a match expression, this property allows you to specify the case matching behavior.</span></span>
<span data-ttu-id="e17ec-120">Значение по умолчанию соответствует значениям по умолчанию для платформы, которые изменяются с учетом регистра временной папки.</span><span class="sxs-lookup"><span data-stu-id="e17ec-120">The default is to match platform defaults, which are gleaned from the case sensitivity of the temporary folder.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchType">
      <MemberSignature Language="C#" Value="public System.IO.MatchType MatchType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.MatchType MatchType" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.MatchType" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchType As MatchType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::MatchType MatchType { System::IO::MatchType get(); void set(System::IO::MatchType value); };" />
      <MemberSignature Language="F#" Value="member this.MatchType : System.IO.MatchType with get, set" Usage="System.IO.EnumerationOptions.MatchType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MatchType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e17ec-121">Возвращает или задает тип соответствия.</span><span class="sxs-lookup"><span data-stu-id="e17ec-121">Gets or sets the match type.</span></span></summary>
        <value><span data-ttu-id="e17ec-122">Одно из значений перечисления, указывающее тип соответствия.</span><span class="sxs-lookup"><span data-stu-id="e17ec-122">One of the enumeration values that indicates the match type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="e17ec-123">Для API-интерфейсов, позволяющих указывать выражение соответствия, это свойство позволяет указать способ интерпретации выражения соответствия.</span><span class="sxs-lookup"><span data-stu-id="e17ec-123">For APIs that allow specifying a match expression, this property allows you to specify how to interpret the match expression.</span></span>
<span data-ttu-id="e17ec-124">По умолчанию используется простое сопоставление, где "\*" всегда имеет 0 или более символов, а "?" — один символ.</span><span class="sxs-lookup"><span data-stu-id="e17ec-124">The default is simple matching where '\*' is always 0 or more characters and '?' is a single character.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecurseSubdirectories">
      <MemberSignature Language="C#" Value="public bool RecurseSubdirectories { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RecurseSubdirectories" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.RecurseSubdirectories" />
      <MemberSignature Language="VB.NET" Value="Public Property RecurseSubdirectories As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RecurseSubdirectories { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RecurseSubdirectories : bool with get, set" Usage="System.IO.EnumerationOptions.RecurseSubdirectories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e17ec-125">Возвращает или задает значение, указывающее, следует ли выполнять рекурсивный перебор во вложенных каталогах при перечислении.</span><span class="sxs-lookup"><span data-stu-id="e17ec-125">Gets or sets a value that indicates whether to recurse into subdirectories while enumerating.</span></span> <span data-ttu-id="e17ec-126">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e17ec-126">The default is <see langword="false" />.</span></span></summary>
        <value><span data-ttu-id="e17ec-127"><see langword="true" />для рекурсии в подкаталоги; в противном случае —. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="e17ec-127"><see langword="true" /> to recurse into subdirectories; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnSpecialDirectories">
      <MemberSignature Language="C#" Value="public bool ReturnSpecialDirectories { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReturnSpecialDirectories" />
      <MemberSignature Language="DocId" Value="P:System.IO.EnumerationOptions.ReturnSpecialDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Property ReturnSpecialDirectories As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReturnSpecialDirectories { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReturnSpecialDirectories : bool with get, set" Usage="System.IO.EnumerationOptions.ReturnSpecialDirectories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e17ec-128">Возвращает или задает значение, указывающее, следует ли возвращать специальные записи каталога "." и "..".</span><span class="sxs-lookup"><span data-stu-id="e17ec-128">Gets or sets a value that indicates whether to return the special directory entries "." and "..".</span></span></summary>
        <value><span data-ttu-id="e17ec-129"><see langword="true" />для получения специальных записей каталога "." и ".."; в противном случае —. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="e17ec-129"><see langword="true" /> to return the special directory entries "." and ".."; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
