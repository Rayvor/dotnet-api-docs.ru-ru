<Type Name="WindowsRuntimeStorageExtensions" FullName="System.IO.WindowsRuntimeStorageExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8d68f95a6f90e7895766eaf1a1dfb2a03c280bf7" /><Meta Name="ms.sourcegitcommit" Value="59288d18b8fbc142a5d38d416d6fdfb982023216" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/28/2019" /><Meta Name="ms.locfileid" Value="70115189" /></Metadata><TypeSignature Language="C#" Value="public static class WindowsRuntimeStorageExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WindowsRuntimeStorageExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.WindowsRuntimeStorageExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module WindowsRuntimeStorageExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsRuntimeStorageExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type WindowsRuntimeStorageExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="dotnet-uwp-10.0">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Содержит методы расширения для интерфейсов <see cref="T:Windows.Storage.IStorageFile" /> и <see cref="T:Windows.Storage.IStorageFolder" /> в среде выполнения Windows при разработке приложений для Магазина приложений Windows.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

Эти методы расширения доступны только при разработке приложений для Магазина Windows. Методы предоставляют удобные способы открытия файлов для чтения или записи в приложениях для Магазина Windows. Экземпляр `WindowsRuntimeStorageExtensions` класса не создается; вместо этого вы используете эти методы из экземпляров <xref:Windows.Storage.IStorageFile> интерфейсов и <xref:Windows.Storage.IStorageFolder> .

Класс содержит два метода, которые расширяются <xref:Windows.Storage.IStorageFile> для чтения или записи: `WindowsRuntimeStorageExtensions`

  - <xref:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFile)>
  - <xref:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFile)>

Класс виндовсрунтиместоражеекстенсионс содержит два метода, которые расширяются <xref:Windows.Storage.IStorageFolder> для чтения и записи:
  - <xref:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFolder,System.String)>
  - <xref:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.CreationCollisionOption)>

## Examples

В следующем примере показано, как открыть файл в данных приложения в приложении для <xref:System.IO.Stream> магазина Windows и выполнить запись в него с помощью экземпляра <xref:System.IO.StreamWriter> класса. Затем он считывает содержимое файла с помощью экземпляра <xref:System.IO.StreamReader> класса.

[!code-csharp[windowsruntimestorageextensions#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage4.xaml.cs#8)]
[!code-vb[windowsruntimestorageextensions#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/vb/blankpage4.xaml.vb#8)]

В следующем примере показан код XAML, связанный с предыдущим примером. 

[!code-xaml[windowsruntimestorageextensions#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage4.xaml#7)]

]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateSafeFileHandle">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Создает и возвращает ссылку на безопасный дескриптор файла для расширяемого экземпляра IStorage.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

После обновления годовщины Windows 10 новые интерфейсы <xref:Windows.Storage.IStorageFolder> были добавлены в и <xref:Windows.Storage.IStorageFile> , позволяющие создать стандартный файловый обработчик Win32: `IStorageFolderHandleAccess` и `IStorageItemHandleAccess`. Группа методов расширения использует преимущества `Create` методов этих интерфейсов. `CreateSafeFileHandle`

Ключевым преимуществом API является доступ к брокеру `SafeFileHandle`. Это критически важно, если вы <xref:System.IO.FileStream> хотите создать <xref:Windows.Storage.IStorageItem> вокруг или <xref:Windows.Storage.IStorageFolder> при работе в [AppContainer](https://docs.microsoft.com/windows/win32/secauthz/appcontainer-isolation). При работе в AppContainer приложение имеет очень ограниченные права доступа к файлам. Для работы с изображениями и папками документов требуется использовать собственный собственный обработчик файлов через `RuntimeBroker.exe`, так как сам процесс приложения не имеет прав на большинство файлов. Этот API получает маркер прокси-сервера. При доступе к папкам данных пользователя или с помощью средства выбора файлов этот API всегда следует использовать <xref:System.IO.FileStream>для создания. Использование пути часто приводит к созданию <xref:System.AccessViolationException> исключения в таких случаях.

          ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSafeFileHandle">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.SafeHandles.SafeFileHandle CreateSafeFileHandle (this Windows.Storage.IStorageFolder rootDirectory, string relativePath, System.IO.FileMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.SafeHandles.SafeFileHandle CreateSafeFileHandle(class Windows.Storage.IStorageFolder rootDirectory, string relativePath, valuetype System.IO.FileMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.CreateSafeFileHandle(Windows.Storage.IStorageFolder,System.String,System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateSafeFileHandle (rootDirectory As IStorageFolder, relativePath As String, mode As FileMode) As SafeFileHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Win32::SafeHandles::SafeFileHandle ^ CreateSafeFileHandle(Windows::Storage::IStorageFolder ^ rootDirectory, System::String ^ relativePath, System::IO::FileMode mode);" />
      <MemberSignature Language="F#" Value="static member CreateSafeFileHandle : Windows.Storage.IStorageFolder * string * System.IO.FileMode -&gt; Microsoft.Win32.SafeHandles.SafeFileHandle" Usage="System.IO.WindowsRuntimeStorageExtensions.CreateSafeFileHandle (rootDirectory, relativePath, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeFileHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootDirectory" Type="Windows.Storage.IStorageFolder" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0" RefType="this" />
        <Parameter Name="relativePath" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0" />
        <Parameter Name="mode" Type="System.IO.FileMode" Index="2" FrameworkAlternate="dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="rootDirectory">Текущий экземпляр папки хранилища.</param>
        <param name="relativePath">Имя файла, для которого нужно получить дескриптор.</param>
        <param name="mode">Режим, в котором операционная система должна открыть файл.</param>
        <summary>Создает безопасный дескриптор для файла, который находится в текущем экземпляре папки хранилища.</summary>
        <returns>Экземпляр безопасного дескриптора файла, если операция выполнена успешно. Значение <see langword="null" />, если в результате преобразования <paramref name="rootDirectory" /> в IStorageFolderHandleAccess возвращается <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

При вызове этого метода, если указан режим <xref:System.IO.FileMode.Append?displayProperty=nameWithType>, файл будет открыт с разрешением на <xref:System.IO.FileAccess.Read?displayProperty=nameWithType> доступ. Для любых других режимов файл будет открыт с разрешением на <xref:System.IO.FileAccess.ReadWrite?displayProperty=nameWithType> доступ.

Кроме того, этот метод откроет файл с <xref:System.IO.FileShare.Read?displayProperty=nameWithType> доступом к потоковой передаче <xref:System.IO.FileOptions.None?displayProperty=nameWithType> и с дополнительными параметрами создания файла.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rootDirectory" /> — <see langword="null" />.

- или -

Свойство <paramref name="relativePath" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSafeFileHandle">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.SafeHandles.SafeFileHandle CreateSafeFileHandle (this Windows.Storage.IStorageFile windowsRuntimeFile, System.IO.FileAccess access = System.IO.FileAccess.ReadWrite, System.IO.FileShare share = System.IO.FileShare.Read, System.IO.FileOptions options = System.IO.FileOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.SafeHandles.SafeFileHandle CreateSafeFileHandle(class Windows.Storage.IStorageFile windowsRuntimeFile, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share, valuetype System.IO.FileOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.CreateSafeFileHandle(Windows.Storage.IStorageFile,System.IO.FileAccess,System.IO.FileShare,System.IO.FileOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateSafeFileHandle (windowsRuntimeFile As IStorageFile, Optional access As FileAccess = System.IO.FileAccess.ReadWrite, Optional share As FileShare = System.IO.FileShare.Read, Optional options As FileOptions = System.IO.FileOptions.None) As SafeFileHandle" />
      <MemberSignature Language="F#" Value="static member CreateSafeFileHandle : Windows.Storage.IStorageFile * System.IO.FileAccess * System.IO.FileShare * System.IO.FileOptions -&gt; Microsoft.Win32.SafeHandles.SafeFileHandle" Usage="System.IO.WindowsRuntimeStorageExtensions.CreateSafeFileHandle (windowsRuntimeFile, access, share, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeFileHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeFile" Type="Windows.Storage.IStorageFile" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0" RefType="this" />
        <Parameter Name="access" Type="System.IO.FileAccess" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0" />
        <Parameter Name="share" Type="System.IO.FileShare" Index="2" FrameworkAlternate="dotnet-plat-ext-3.0" />
        <Parameter Name="options" Type="System.IO.FileOptions" Index="3" FrameworkAlternate="dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeFile">Экземпляр файла хранилища.</param>
        <param name="access">Тип доступа, который должен использоваться при открытии файла. Значение по умолчанию — <see cref="F:System.IO.FileAccess.ReadWrite" />.</param>
        <param name="share">Тип общего доступа к потокам, который может быть у разных объектов <see cref="T:System.IO.FileStream" /> к одному и тому же файлу. Значение по умолчанию — <see cref="F:System.IO.FileShare.Read" />.</param>
        <param name="options">Расширенные параметры для создания объекта <see cref="T:System.IO.FileStream" />. Значение по умолчанию — <see cref="F:System.IO.FileOptions.None" />.</param>
        <summary>Создает безопасный дескриптор файла для текущего экземпляра файла хранилища.</summary>
        <returns>Экземпляр безопасного дескриптора файла, если операция выполнена успешно. Значение <see langword="null" />, если в результате преобразования <paramref name="windowsRuntimeFile" /> в IStoragerItemHandleAccess возвращается <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="windowsRuntimeFile" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSafeFileHandle">
      <MemberSignature Language="C#" Value="public static Microsoft.Win32.SafeHandles.SafeFileHandle CreateSafeFileHandle (this Windows.Storage.IStorageFolder rootDirectory, string relativePath, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share = System.IO.FileShare.Read, System.IO.FileOptions options = System.IO.FileOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Win32.SafeHandles.SafeFileHandle CreateSafeFileHandle(class Windows.Storage.IStorageFolder rootDirectory, string relativePath, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share, valuetype System.IO.FileOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.CreateSafeFileHandle(Windows.Storage.IStorageFolder,System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.FileOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateSafeFileHandle (rootDirectory As IStorageFolder, relativePath As String, mode As FileMode, access As FileAccess, Optional share As FileShare = System.IO.FileShare.Read, Optional options As FileOptions = System.IO.FileOptions.None) As SafeFileHandle" />
      <MemberSignature Language="F#" Value="static member CreateSafeFileHandle : Windows.Storage.IStorageFolder * string * System.IO.FileMode * System.IO.FileAccess * System.IO.FileShare * System.IO.FileOptions -&gt; Microsoft.Win32.SafeHandles.SafeFileHandle" Usage="System.IO.WindowsRuntimeStorageExtensions.CreateSafeFileHandle (rootDirectory, relativePath, mode, access, share, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeFileHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootDirectory" Type="Windows.Storage.IStorageFolder" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0" RefType="this" />
        <Parameter Name="relativePath" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0" />
        <Parameter Name="mode" Type="System.IO.FileMode" Index="2" FrameworkAlternate="dotnet-plat-ext-3.0" />
        <Parameter Name="access" Type="System.IO.FileAccess" Index="3" FrameworkAlternate="dotnet-plat-ext-3.0" />
        <Parameter Name="share" Type="System.IO.FileShare" Index="4" FrameworkAlternate="dotnet-plat-ext-3.0" />
        <Parameter Name="options" Type="System.IO.FileOptions" Index="5" FrameworkAlternate="dotnet-plat-ext-3.0" />
      </Parameters>
      <Docs>
        <param name="rootDirectory">Текущий экземпляр папки хранилища.</param>
        <param name="relativePath">Имя файла, для которого нужно получить дескриптор.</param>
        <param name="mode">Режим, в котором операционная система должна открыть файл.</param>
        <param name="access">Тип доступа, который должен использоваться при открытии файла.</param>
        <param name="share">Тип общего доступа к потокам, который может быть у разных объектов <see cref="T:System.IO.FileStream" /> к одному и тому же файлу. Значение по умолчанию — <see cref="F:System.IO.FileShare.Read" />.</param>
        <param name="options">Расширенные параметры для создания объекта <see cref="T:System.IO.FileStream" />. Значение по умолчанию — <see cref="F:System.IO.FileOptions.None" />.</param>
        <summary>Создает безопасный дескриптор для файла, который находится в текущем экземпляре папки хранилища.</summary>
        <returns>Экземпляр безопасного дескриптора файла, если операция выполнена успешно. Значение <see langword="null" />, если в результате преобразования <paramref name="rootDirectory" /> в IStorageFolderHandleAccess возвращается <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rootDirectory" /> — <see langword="null" />.

-или-

<paramref name="relativePath" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenStreamForReadAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenStreamForReadAsync (this Windows.Storage.IStorageFile windowsRuntimeFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenStreamForReadAsync(class Windows.Storage.IStorageFile windowsRuntimeFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFile)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OpenStreamForReadAsync (windowsRuntimeFile As IStorageFile) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenStreamForReadAsync(Windows::Storage::IStorageFile ^ windowsRuntimeFile);" />
      <MemberSignature Language="F#" Value="static member OpenStreamForReadAsync : Windows.Storage.IStorageFile -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync windowsRuntimeFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeFile" Type="Windows.Storage.IStorageFile" RefType="this" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeFile">Объект среды выполнения Windows <see cref="T:Windows.Storage.IStorageFile" /> для считывания данные.</param>
        <summary>Извлекает поток для чтения из указанного файла.</summary>
        <returns>Задача, представляющая асинхронную операцию чтения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> В Visual Basic и C#этот метод можно вызвать как метод экземпляра для любого объекта типа <xref:Windows.Storage.IStorageFile>. При вызове метода для экземпляра следует опускать первый параметр. Дополнительные сведения см. в разделе [методы расширения (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) или [методы расширенияC# (руководством по программированию)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

## Examples

В следующем примере показано, как открыть файл <xref:System.IO.Stream> в приложении для Магазина Windows и прочитать его содержимое с помощью экземпляра <xref:System.IO.StreamReader> класса.

[!code-csharp[windowsruntimestorageextensions#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage.xaml.cs#2)]
[!code-vb[windowsruntimestorageextensions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/vb/blankpage.xaml.vb#2)]

В следующем примере показан код XAML, связанный с предыдущим примером. 

[!code-xaml[windowsruntimestorageextensions#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage.xaml#1)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="windowsRuntimeFile" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">Невозможно открыть файл или извлечь его как поток.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenStreamForReadAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenStreamForReadAsync (this Windows.Storage.IStorageFolder rootDirectory, string relativePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenStreamForReadAsync(class Windows.Storage.IStorageFolder rootDirectory, string relativePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync(Windows.Storage.IStorageFolder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OpenStreamForReadAsync (rootDirectory As IStorageFolder, relativePath As String) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenStreamForReadAsync(Windows::Storage::IStorageFolder ^ rootDirectory, System::String ^ relativePath);" />
      <MemberSignature Language="F#" Value="static member OpenStreamForReadAsync : Windows.Storage.IStorageFolder * string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="System.IO.WindowsRuntimeStorageExtensions.OpenStreamForReadAsync (rootDirectory, relativePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootDirectory" Type="Windows.Storage.IStorageFolder" RefType="this" />
        <Parameter Name="relativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rootDirectory">Объект среды выполнения Windows <see cref="T:Windows.Storage.IStorageFile" />, содержащий файл для считывания данных.</param>
        <param name="relativePath">Путь, относительно корневой папки, к файлу, из которого выполняется чтение.</param>
        <summary>Извлекает поток для чтения из файла в указанной родительской папке.</summary>
        <returns>Задача, представляющая асинхронную операцию чтения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> В Visual Basic и C#этот метод можно вызвать как метод экземпляра для любого объекта типа исторажефолдер. При вызове метода для экземпляра следует опускать первый параметр. Дополнительные сведения см. в разделе [методы расширения (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) или [методы расширенияC# (руководством по программированию)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

## Examples

В следующем примере показано, как открыть файл <xref:System.IO.Stream> в приложении для Магазина Windows и прочитать его содержимое с помощью экземпляра <xref:System.IO.StreamReader> класса.

[!code-csharp[windowsruntimestorageextensions#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage2.xaml.cs#4)]
[!code-vb[windowsruntimestorageextensions#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/vb/blankpage2.xaml.vb#4)]

В следующем примере показан код XAML, связанный с предыдущим примером. 

[!code-xaml[windowsruntimestorageextensions#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage2.xaml#3)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="rootDirectory" /> или <paramref name="relativePath" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="relativePath" /> является пустой строкой или содержит только пробелы.</exception>
        <exception cref="T:System.IO.IOException">Невозможно открыть файл или извлечь его как поток.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenStreamForWriteAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenStreamForWriteAsync (this Windows.Storage.IStorageFile windowsRuntimeFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenStreamForWriteAsync(class Windows.Storage.IStorageFile windowsRuntimeFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFile)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OpenStreamForWriteAsync (windowsRuntimeFile As IStorageFile) As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenStreamForWriteAsync(Windows::Storage::IStorageFile ^ windowsRuntimeFile);" />
      <MemberSignature Language="F#" Value="static member OpenStreamForWriteAsync : Windows.Storage.IStorageFile -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync windowsRuntimeFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeFile" Type="Windows.Storage.IStorageFile" RefType="this" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeFile">Объект среды выполнения Windows <see cref="T:Windows.Storage.IStorageFile" /> для записи данных.</param>
        <summary>Извлекает поток для записи в указанный файл.</summary>
        <returns>Задача, представляющая асинхронную операцию записи.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> В Visual Basic и C#этот метод можно вызвать как метод экземпляра для любого объекта типа <xref:Windows.Storage.IStorageFile>. При вызове метода для экземпляра следует опускать первый параметр. Дополнительные сведения см. в разделе [методы расширения (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) или [методы расширенияC# (руководством по программированию)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

## Examples

В следующем примере показано, как открыть файл <xref:System.IO.Stream> в приложении для Магазина Windows и выполнить запись в него с помощью экземпляра <xref:System.IO.StreamReader> класса.

[!code-csharp[windowsruntimestorageextensions#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage3.xaml.cs#6)]
[!code-vb[windowsruntimestorageextensions#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/vb/blankpage3.xaml.vb#6)]

В следующем примере показан код XAML, связанный с предыдущим примером. 

[!code-xaml[windowsruntimestorageextensions#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage3.xaml#5)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="windowsRuntimeFile" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">Невозможно открыть файл или извлечь его как поток.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenStreamForWriteAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.IO.Stream&gt; OpenStreamForWriteAsync (this Windows.Storage.IStorageFolder rootDirectory, string relativePath, Windows.Storage.CreationCollisionOption creationCollisionOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; OpenStreamForWriteAsync(class Windows.Storage.IStorageFolder rootDirectory, string relativePath, valuetype Windows.Storage.CreationCollisionOption creationCollisionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync(Windows.Storage.IStorageFolder,System.String,Windows.Storage.CreationCollisionOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ OpenStreamForWriteAsync(Windows::Storage::IStorageFolder ^ rootDirectory, System::String ^ relativePath, Windows::Storage::CreationCollisionOption creationCollisionOption);" />
      <MemberSignature Language="F#" Value="static member OpenStreamForWriteAsync : Windows.Storage.IStorageFolder * string * Windows.Storage.CreationCollisionOption -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="System.IO.WindowsRuntimeStorageExtensions.OpenStreamForWriteAsync (rootDirectory, relativePath, creationCollisionOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootDirectory" Type="Windows.Storage.IStorageFolder" RefType="this" />
        <Parameter Name="relativePath" Type="System.String" />
        <Parameter Name="creationCollisionOption" Type="Windows.Storage.CreationCollisionOption" />
      </Parameters>
      <Docs>
        <param name="rootDirectory">Объект среды выполнения Windows <see cref="T:Windows.Storage.IStorageFile" />, содержащий файл для записи данных.</param>
        <param name="relativePath">Путь, относительно корневой папки, к файлу, в который производится запись.</param>
        <param name="creationCollisionOption">Значение перечисления среды выполнения Windows <see cref="T:Windows.Storage.CreationCollisionOption" />, которое определяет поведение, применяемое при совпадении имени создаваемого файла с именем существующего файла.</param>
        <summary>Извлекает поток для записи в файл в указанной родительской папке.</summary>
        <returns>Задача, представляющая асинхронную операцию записи.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> В Visual Basic и C#этот метод можно вызвать как метод экземпляра для любого объекта типа <xref:Windows.Storage.IStorageFolder>. При вызове метода для экземпляра следует опускать первый параметр. Дополнительные сведения см. в разделе [методы расширения (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) или [методы расширенияC# (руководством по программированию)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

## Examples

В следующем примере показано, как открыть файл <xref:System.IO.Stream> в приложении для Магазина Windows и выполнить запись в него с помощью экземпляра <xref:System.IO.StreamReader> класса.

[!code-csharp[windowsruntimestorageextensions#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage4.xaml.cs#8)]
[!code-vb[windowsruntimestorageextensions#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/vb/blankpage4.xaml.vb#8)]

В следующем примере показан код XAML, связанный с предыдущим примером. 

[!code-xaml[windowsruntimestorageextensions#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestorageextensions/cs/blankpage4.xaml#7)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="rootDirectory" /> или <paramref name="relativePath" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="relativePath" /> является пустой строкой или содержит только пробелы.</exception>
        <exception cref="T:System.IO.IOException">Невозможно открыть файл или извлечь его как поток.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
