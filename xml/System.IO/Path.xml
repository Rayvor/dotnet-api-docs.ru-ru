<Type Name="Path" FullName="System.IO.Path">
  <TypeSignature Language="C#" Value="public static class Path" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed Path extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Path" />
  <TypeSignature Language="VB.NET" Value="Public Class Path" />
  <TypeSignature Language="C++ CLI" Value="public ref class Path abstract sealed" />
  <TypeSignature Language="F#" Value="type Path = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f0da3-101">Выполняет операции для экземпляров класса <see cref="T:System.String" />, содержащих сведения о пути к файлу или каталогу.</span><span class="sxs-lookup"><span data-stu-id="f0da3-101">Performs operations on <see cref="T:System.String" /> instances that contain file or directory path information.</span></span> <span data-ttu-id="f0da3-102">Эти операции выполняются межплатформенным способом.</span><span class="sxs-lookup"><span data-stu-id="f0da3-102">These operations are performed in a cross-platform manner.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
 <span data-ttu-id="f0da3-103">Путь — это строка, которая предоставляет расположение файла или каталога.</span><span class="sxs-lookup"><span data-stu-id="f0da3-103">A path is a string that provides the location of a file or directory.</span></span> <span data-ttu-id="f0da3-104">Путь не обязательно указывает на расположение на диске; Например, путь может сопоставляться с расположением в памяти или на устройстве.</span><span class="sxs-lookup"><span data-stu-id="f0da3-104">A path does not necessarily point to a location on disk; for example, a path might map to a location in memory or on a device.</span></span> <span data-ttu-id="f0da3-105">Точный формат пути определяется текущей платформой.</span><span class="sxs-lookup"><span data-stu-id="f0da3-105">The exact format of a path is determined by the current platform.</span></span> <span data-ttu-id="f0da3-106">Например, в некоторых системах путь может начинаться с буквы диска или тома, а этот элемент отсутствует в других системах.</span><span class="sxs-lookup"><span data-stu-id="f0da3-106">For example, on some systems, a path can start with a drive or volume letter, while this element is not present in other systems.</span></span> <span data-ttu-id="f0da3-107">В некоторых системах пути к файлам могут содержать расширения, которые указывают тип данных, хранящихся в файле.</span><span class="sxs-lookup"><span data-stu-id="f0da3-107">On some systems, file paths can contain extensions, which indicate the type of information stored in the file.</span></span> <span data-ttu-id="f0da3-108">Формат расширения имени файла зависит от платформы; Например, некоторые системы ограничивают расширения тремя символами, а другие — нет.</span><span class="sxs-lookup"><span data-stu-id="f0da3-108">The format of a file name extension is platform-dependent; for example, some systems limit extensions to three characters, and others do not.</span></span> <span data-ttu-id="f0da3-109">Текущая платформа также определяет набор символов, используемых для разделения элементов пути, и набор символов, которые не могут быть использованы при указании путей.</span><span class="sxs-lookup"><span data-stu-id="f0da3-109">The current platform also determines the set of characters used to separate the elements of a path, and the set of characters that cannot be used when specifying paths.</span></span> <span data-ttu-id="f0da3-110">Из-за этих различий поля `Path` класса, а также точное поведение некоторых членов `Path` класса являются зависимыми от платформы.</span><span class="sxs-lookup"><span data-stu-id="f0da3-110">Because of these differences, the fields of the `Path` class as well as the exact behavior of some members of the `Path` class are platform-dependent.</span></span>  
  
 <span data-ttu-id="f0da3-111">Путь может содержать абсолютные или относительные сведения о расположении.</span><span class="sxs-lookup"><span data-stu-id="f0da3-111">A path can contain absolute or relative location information.</span></span> <span data-ttu-id="f0da3-112">Абсолютные пути полностью указывают расположение: файл или каталог могут быть однозначно идентифицированы независимо от текущего расположения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-112">Absolute paths fully specify a location: the file or directory can be uniquely identified regardless of the current location.</span></span> <span data-ttu-id="f0da3-113">Относительные пути указывают на неполное расположение: текущее расположение используется в качестве отправной точки при поиске файла, указанного относительного пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-113">Relative paths specify a partial location: the current location is used as the starting point when locating a file specified with a relative path.</span></span> <span data-ttu-id="f0da3-114">Чтобы определить текущий каталог, вызовите <xref:System.IO.Directory.GetCurrentDirectory%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f0da3-114">To determine the current directory, call <xref:System.IO.Directory.GetCurrentDirectory%2A?displayProperty=nameWithType>.</span></span>  

 <span data-ttu-id="f0da3-115">.NET Core 1,1 и более поздние версии и .NET Framework 4.6.2 и более поздних версий также поддерживают доступ к объектам файловой системы, которые являются именами\\устройств, например\""? \c:.</span><span class="sxs-lookup"><span data-stu-id="f0da3-115">.NET Core 1.1 and later versions and .NET Framework 4.6.2 and later versions also support access to file system objects that are device names, such as "\\?\C:\".</span></span>

<span data-ttu-id="f0da3-116">Дополнительные сведения о форматах путей к файлам в Windows см. в разделе [форматы путей к файлам в системах Windows](~/docs/standard/io/file-path-formats.md).</span><span class="sxs-lookup"><span data-stu-id="f0da3-116">For more information on file path formats on Windows, see [File path formats on Windows systems](~/docs/standard/io/file-path-formats.md).</span></span>

 <span data-ttu-id="f0da3-117">Большинство членов `Path` класса не взаимодействуют с файловой системой и не проверяют существование файла, указанного в строке пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-117">Most members of the `Path` class do not interact with the file system and do not verify the existence of the file specified by a path string.</span></span> <span data-ttu-id="f0da3-118">`Path`члены класса, которые изменяют строку пути, <xref:System.IO.Path.ChangeExtension%2A>например, не влияют на имена файлов в файловой системе.</span><span class="sxs-lookup"><span data-stu-id="f0da3-118">`Path` class members that modify a path string, such as <xref:System.IO.Path.ChangeExtension%2A>, have no effect on names of files in the file system.</span></span> <span data-ttu-id="f0da3-119">`Path`Однако члены проверяют содержимое указанной строки пути и создают <xref:System.ArgumentException> исключение, если строка содержит недопустимые символы в строках пути, как определено в символах, возвращаемых <xref:System.IO.Path.GetInvalidPathChars%2A> методом.</span><span class="sxs-lookup"><span data-stu-id="f0da3-119">`Path` members do, however, validate the contents of a specified path string, and throw an <xref:System.ArgumentException> exception if the string contains characters that are not valid in path strings, as defined in the characters returned from the <xref:System.IO.Path.GetInvalidPathChars%2A> method.</span></span> <span data-ttu-id="f0da3-120">Например, на настольных платформах Windows недопустимые символы пути могут содержать кавычки ("), меньше\<(), больше (>), pipe (&#124;), Backspace (\b), null (\ 0) и символы Юникода от 16 до 18 и от 20 до 25.</span><span class="sxs-lookup"><span data-stu-id="f0da3-120">For example, on Windows-based desktop platforms, invalid path characters might include quote ("), less than (\<), greater than (>), pipe (&#124;), backspace (\b), null (\0), and Unicode characters 16 through 18 and 20 through 25.</span></span>  
  
 <span data-ttu-id="f0da3-121">Члены `Path` класса позволяют быстро и легко выполнять стандартные операции, такие как определение того, является ли расширение имени файла частью пути, и объединяет две строки в одно имя пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-121">The members of the `Path` class enable you to quickly and easily perform common operations such as determining whether a file name extension is part of a path, and combining two strings into one path name.</span></span>  
  
 <span data-ttu-id="f0da3-122">Все члены `Path` класса являются статическими и поэтому могут быть вызваны без наличия экземпляра пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-122">All members of the `Path` class are static and can therefore be called without having an instance of a path.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f0da3-123">В членах, принимающих путь в качестве входной строки, этот путь должен иметь правильный формат или возникнет исключение.</span><span class="sxs-lookup"><span data-stu-id="f0da3-123">In members that accept a path as an input string, that path must be well-formed or an exception is raised.</span></span> <span data-ttu-id="f0da3-124">Например, если путь является полным, но начинается с пробела, путь не усекается в методах класса.</span><span class="sxs-lookup"><span data-stu-id="f0da3-124">For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</span></span> <span data-ttu-id="f0da3-125">Поэтому путь имеет неправильный формат и возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="f0da3-125">Therefore, the path is malformed and an exception is raised.</span></span> <span data-ttu-id="f0da3-126">Аналогично, путь или сочетание путей не могут быть полными и дважды.</span><span class="sxs-lookup"><span data-stu-id="f0da3-126">Similarly, a path or a combination of paths cannot be fully qualified twice.</span></span> <span data-ttu-id="f0da3-127">Например, "c:\temp c:\Windows" также вызывает исключение в большинстве случаев.</span><span class="sxs-lookup"><span data-stu-id="f0da3-127">For example, "c:\temp c:\windows" also raises an exception in most cases.</span></span> <span data-ttu-id="f0da3-128">При использовании методов, принимающих строку пути, убедитесь, что пути имеют правильный формат.</span><span class="sxs-lookup"><span data-stu-id="f0da3-128">Ensure that your paths are well-formed when using methods that accept a path string.</span></span>  
  
 <span data-ttu-id="f0da3-129">В членах, принимающих путь, путь может ссылаться на файл или только на каталог.</span><span class="sxs-lookup"><span data-stu-id="f0da3-129">In members that accept a path, the path can refer to a file or just a directory.</span></span> <span data-ttu-id="f0da3-130">Указанный путь может также ссылаться на относительный путь или путь в формате UNC для имени сервера и общего ресурса.</span><span class="sxs-lookup"><span data-stu-id="f0da3-130">The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</span></span> <span data-ttu-id="f0da3-131">Например, все следующие допустимые пути:</span><span class="sxs-lookup"><span data-stu-id="f0da3-131">For example, all the following are acceptable paths:</span></span>  
  
-   <span data-ttu-id="f0da3-132">"c:\\\мидир\\\мифиле.ткст" in C#или "к:\мидир\мифиле.ткст" в Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="f0da3-132">"c:\\\MyDir\\\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="f0da3-133">"c:\\\мидир" in C#или "к:\мидир" в Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="f0da3-133">"c:\\\MyDir" in C#, or "c:\MyDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="f0da3-134">«MyDir\\\мисубдир» в C#или «мидир\мисубдир» в Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="f0da3-134">"MyDir\\\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="f0da3-135">«\\\\ C#\Мисервер \мишаре» в или«\\\MyServer\MyShare» в Visual Basic.\\\\</span><span class="sxs-lookup"><span data-stu-id="f0da3-135">"\\\\\\\MyServer\\\MyShare" in C#, or "\\\MyServer\MyShare" in Visual Basic.</span></span>  
  
 <span data-ttu-id="f0da3-136">Так как все эти операции выполняются на строках, невозможно проверить, являются ли результаты допустимыми во всех сценариях.</span><span class="sxs-lookup"><span data-stu-id="f0da3-136">Because all these operations are performed on strings, it is impossible to verify that the results are valid in all scenarios.</span></span> <span data-ttu-id="f0da3-137">Например, <xref:System.IO.Path.GetExtension%2A> метод анализирует строку, которую вы передали в нее, и возвращает расширение из этой строки.</span><span class="sxs-lookup"><span data-stu-id="f0da3-137">For example, the <xref:System.IO.Path.GetExtension%2A> method parses a string that you pass to it and returns the extension from that string.</span></span> <span data-ttu-id="f0da3-138">Однако это не означает, что на диске существует файл с таким расширением.</span><span class="sxs-lookup"><span data-stu-id="f0da3-138">However, this does not mean that a file with that extension exists on the disk.</span></span>  
  
 <span data-ttu-id="f0da3-139">Список общих задач ввода-вывода см. в разделе [Общие задачи ввода-вывода](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f0da3-139">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>   
  
## Examples  
 <span data-ttu-id="f0da3-140">В следующем примере показаны некоторые основные члены `Path` класса.</span><span class="sxs-lookup"><span data-stu-id="f0da3-140">The following example demonstrates some of the main members of the `Path` class.</span></span>  
  
 [!code-cpp[path class#1](~/samples/snippets/cpp/VS_Snippets_CLR/Path Class/CPP/path class.cpp#1)]
 [!code-csharp[path class#1](~/samples/snippets/csharp/VS_Snippets_CLR/Path Class/CS/path class.cs#1)]
 [!code-vb[path class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Path Class/VB/path class.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f0da3-141">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="f0da3-141">File and Stream I/O</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f0da3-142">Практическое руководство. Считывание текста из файла</span><span class="sxs-lookup"><span data-stu-id="f0da3-142">How to: Read Text from a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f0da3-143">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="f0da3-143">How to: Write Text to a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="f0da3-144">Практическое руководство. Считывание из нового файла данных и запись в этот файл</span><span class="sxs-lookup"><span data-stu-id="f0da3-144">How to: Read and Write to a Newly Created Data File</span></span></related>
    <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="f0da3-145">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="f0da3-145">File path formats on Windows systems</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AltDirectorySeparatorChar">
      <MemberSignature Language="C#" Value="public static readonly char AltDirectorySeparatorChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly char AltDirectorySeparatorChar" />
      <MemberSignature Language="DocId" Value="F:System.IO.Path.AltDirectorySeparatorChar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AltDirectorySeparatorChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly char AltDirectorySeparatorChar;" />
      <MemberSignature Language="F#" Value=" staticval mutable AltDirectorySeparatorChar : char" Usage="System.IO.Path.AltDirectorySeparatorChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0da3-146">Предоставляет дополнительный символ, задаваемый платформой, для разделения уровней каталогов в строке пути, в которой отражена иерархическая организация файловой системы.</span><span class="sxs-lookup"><span data-stu-id="f0da3-146">Provides a platform-specific alternate character used to separate directory levels in a path string that reflects a hierarchical file system organization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
<span data-ttu-id="f0da3-147">Это поле может иметь то же значение, <xref:System.IO.Path.DirectorySeparatorChar>что и.</span><span class="sxs-lookup"><span data-stu-id="f0da3-147">This field can have the same value as <xref:System.IO.Path.DirectorySeparatorChar>.</span></span> <span data-ttu-id="f0da3-148">`AltDirectorySeparatorChar`и <xref:System.IO.Path.DirectorySeparatorChar> являются допустимыми для разделения уровней каталога в строке пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-148">`AltDirectorySeparatorChar` and <xref:System.IO.Path.DirectorySeparatorChar> are both valid for separating directory levels in a path string.</span></span>  
  
<span data-ttu-id="f0da3-149">Значением этого поля является косая черта ("/") в операционных системах Windows и UNIX.</span><span class="sxs-lookup"><span data-stu-id="f0da3-149">The value of this field is a slash ('/') on both Windows and Unix-based operating systems.</span></span>  
  
## Examples  

<span data-ttu-id="f0da3-150">В следующем примере значения <xref:System.IO.Path> полей отображаются в Windows и системах на базе UNIX.</span><span class="sxs-lookup"><span data-stu-id="f0da3-150">The following example displays <xref:System.IO.Path> field values on Windows and on Unix-based systems.</span></span> <span data-ttu-id="f0da3-151">Обратите внимание, что Windows поддерживает либо прямую косую черту ( <xref:System.IO.Path.AltDirectorySeparatorChar> которая возвращается полем), либо обратную косую черту (которая возвращается <xref:System.IO.Path.DirectorySeparatorChar> полем) в качестве символов разделителя пути, тогда как системы на базе UNIX поддерживают только косую черту.</span><span class="sxs-lookup"><span data-stu-id="f0da3-151">Note that Windows supports either the forward slash (which is returned by the <xref:System.IO.Path.AltDirectorySeparatorChar> field) or the backslash (which is returned by the <xref:System.IO.Path.DirectorySeparatorChar> field) as path separator characters, while Unix-based systems support only the forward slash.</span></span>

[!code-csharp[DirectorySeparatorChar](~/samples/snippets/csharp/api/system.io/path/directoryseparatorchar/program.cs)]
[!code-vb[DirectorySeparatorChar](~/samples/snippets/visualbasic/api/system.io/path/directoryseparatorchar/program.vb)]
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f0da3-152">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="f0da3-152">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f0da3-153">Практическое руководство. Считывание текста из файла</span><span class="sxs-lookup"><span data-stu-id="f0da3-153">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f0da3-154">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="f0da3-154">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ChangeExtension">
      <MemberSignature Language="C#" Value="public static string ChangeExtension (string path, string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ChangeExtension(string path, string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.ChangeExtension(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ChangeExtension (path As String, extension As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ChangeExtension(System::String ^ path, System::String ^ extension);" />
      <MemberSignature Language="F#" Value="static member ChangeExtension : string * string -&gt; string" Usage="System.IO.Path.ChangeExtension (path, extension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="f0da3-155">Сведения о пути, которые нужно изменить.</span><span class="sxs-lookup"><span data-stu-id="f0da3-155">The path information to modify.</span></span> <span data-ttu-id="f0da3-156">Путь не может содержать символы, определенные в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-156">The path cannot contain any of the characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></param>
        <param name="extension"><span data-ttu-id="f0da3-157">Новое расширение (начинающееся с точки или без нее).</span><span class="sxs-lookup"><span data-stu-id="f0da3-157">The new extension (with or without a leading period).</span></span> <span data-ttu-id="f0da3-158">Задает <see langword="null" /> для удаления существующего расширения из параметра <paramref name="path" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-158">Specify <see langword="null" /> to remove an existing extension from <paramref name="path" />.</span></span></param>
        <summary><span data-ttu-id="f0da3-159">Изменяет расширение строки пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-159">Changes the extension of a path string.</span></span></summary>
        <returns><span data-ttu-id="f0da3-160">Измененные сведения о пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-160">The modified path information.</span></span>  
  
<span data-ttu-id="f0da3-161">В настольных системах, работающих под управлением Windows, сведения о пути возвращаются без изменений, если значение параметра <paramref name="path" /> равно <see langword="null" /> или пустой строке ("").</span><span class="sxs-lookup"><span data-stu-id="f0da3-161">On Windows-based desktop platforms, if <paramref name="path" /> is <see langword="null" /> or an empty string (""), the path information is returned unmodified.</span></span> <span data-ttu-id="f0da3-162">Если значение параметра <paramref name="extension" /> равно <see langword="null" />, возвращаемая строка содержит указанный путь без расширения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-162">If <paramref name="extension" /> is <see langword="null" />, the returned string contains the specified path with its extension removed.</span></span> <span data-ttu-id="f0da3-163">Если <paramref name="path" /> не имеет расширения и значение параметра <paramref name="extension" /> не равно <see langword="null" />, возвращаемая строка пути содержит <paramref name="extension" />, добавленное в конец <paramref name="path" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-163">If <paramref name="path" /> has no extension, and <paramref name="extension" /> is not <see langword="null" />, the returned path string contains <paramref name="extension" /> appended to the end of <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0da3-164">Если не содержит точку (.), `ChangeExtension` добавляет точку. `extension` `path`</span><span class="sxs-lookup"><span data-stu-id="f0da3-164">If neither `path` nor `extension` contains a period (.), `ChangeExtension` adds the period.</span></span>  
  
 <span data-ttu-id="f0da3-165">`extension` Параметр может содержать несколько точек, а также любые допустимые символы пути и могут иметь любую длину.</span><span class="sxs-lookup"><span data-stu-id="f0da3-165">The `extension` parameter can contain multiple periods and any valid path characters, and can be any length.</span></span> <span data-ttu-id="f0da3-166">Если `extension` имеет `null`значение, возвращаемая `path` строка содержит содержимое с последним периодом и все символы после него удалены.</span><span class="sxs-lookup"><span data-stu-id="f0da3-166">If `extension` is `null`, the returned string contains the contents of `path` with the last period and all characters following it removed.</span></span>  
  
 <span data-ttu-id="f0da3-167">Если `extension` является пустой строкой, возвращаемая строка пути содержит `path` содержимое со всеми символами после последнего удаленного периода.</span><span class="sxs-lookup"><span data-stu-id="f0da3-167">If `extension` is an empty string, the returned path string contains the contents of `path` with any characters following the last period removed.</span></span>  
  
 <span data-ttu-id="f0da3-168">Если `path` не имеет расширения и `extension` не является `null`, возвращаемая строка содержит `path` , за которой следует `extension`.</span><span class="sxs-lookup"><span data-stu-id="f0da3-168">If `path` does not have an extension and `extension` is not `null`, the returned string contains `path` followed by `extension`.</span></span>  
  
 <span data-ttu-id="f0da3-169">`extension` Если`null` параметр не равен и не содержит точку в начале, добавляется точка.</span><span class="sxs-lookup"><span data-stu-id="f0da3-169">If `extension` is not `null` and does not contain a leading period, the period is added.</span></span>  
  
 <span data-ttu-id="f0da3-170">Если `path` содержит несколько расширений, разделенных несколькими точками, возвращаемая строка содержит `path` содержимое с последним периодом, а все `extension`символы, следующие за ними, заменены на.</span><span class="sxs-lookup"><span data-stu-id="f0da3-170">If `path` contains a multiple extension separated by multiple periods, the returned string contains the contents of `path` with the last period and all characters following it replaced by `extension`.</span></span> <span data-ttu-id="f0da3-171">Например, если `path` имеет значение "\Dir1\examples\pathtests.CSX.txt" и `extension` имеет значение "CS", измененный путь — "\Dir1\examples\pathtests.CSX.cs".</span><span class="sxs-lookup"><span data-stu-id="f0da3-171">For example, if `path` is "\Dir1\examples\pathtests.csx.txt" and `extension` is "cs", the modified path is "\Dir1\examples\pathtests.csx.cs".</span></span>  
  
 <span data-ttu-id="f0da3-172">Невозможно проверить, что возвращенные результаты являются допустимыми во всех сценариях.</span><span class="sxs-lookup"><span data-stu-id="f0da3-172">It is not possible to verify that the returned results are valid in all scenarios.</span></span> <span data-ttu-id="f0da3-173">Например, если `path` пусто, `extension` добавляется.</span><span class="sxs-lookup"><span data-stu-id="f0da3-173">For example, if `path` is empty, `extension` is appended.</span></span>  
  
 <span data-ttu-id="f0da3-174">Список общих задач ввода-вывода см. в разделе [Общие задачи ввода-вывода](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f0da3-174">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0da3-175">В следующем примере демонстрируется использование `ChangeExtension` метода.</span><span class="sxs-lookup"><span data-stu-id="f0da3-175">The following example demonstrates a use of the `ChangeExtension` method.</span></span>  
  
 [!code-cpp[System.IO.Path Members#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#1)]
 [!code-csharp[System.IO.Path Members#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#1)]
 [!code-vb[System.IO.Path Members#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f0da3-176">Параметр <paramref name="path" /> содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-176"><paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="f0da3-177">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="f0da3-177">File path formats on Windows systems</span></span></related>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f0da3-178">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="f0da3-178">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f0da3-179">Практическое руководство. Считывание текста из файла</span><span class="sxs-lookup"><span data-stu-id="f0da3-179">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f0da3-180">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="f0da3-180">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Combine">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f0da3-181">Объединяет строки в путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-181">Combines strings into a path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
 
## Remarks  

<span data-ttu-id="f0da3-182">Этот метод предназначен для сцепления отдельных строк в одну строку, представляющую путь к файлу.</span><span class="sxs-lookup"><span data-stu-id="f0da3-182">This method is intended to concatenate individual strings into a single string that represents a file path.</span></span> <span data-ttu-id="f0da3-183">Однако если аргумент, отличный от первого, содержит корневой путь, все компоненты предыдущего пути игнорируются, а возвращаемая строка начинается с этого компонента корневого пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-183">However, if an argument other than the first contains a rooted path, any previous path components are ignored, and the returned string begins with that rooted path component.</span></span> <span data-ttu-id="f0da3-184">В качестве альтернативы `Combine` методу рекомендуется <xref:System.IO.Path.Join%2A> использовать методы или <xref:System.IO.Path.TryJoin%2A> .</span><span class="sxs-lookup"><span data-stu-id="f0da3-184">As an alternative to the `Combine` method, consider using the <xref:System.IO.Path.Join%2A> or <xref:System.IO.Path.TryJoin%2A> methods.</span></span>

> [!IMPORTANT]
> <span data-ttu-id="f0da3-185">В этом методе предполагается, что первый аргумент представляет собой абсолютный путь, а следующий аргумент или аргументы являются относительными путями.</span><span class="sxs-lookup"><span data-stu-id="f0da3-185">This method assumes that the first argument is an absolute path and that the following argument or arguments are relative paths.</span></span> <span data-ttu-id="f0da3-186">Если это не так, и, в частности, если все последующие аргументы являются строками, введенными пользователем, <xref:System.IO.Path.Join%2A> вызовите метод или <xref:System.IO.Path.TryJoin%2A> .</span><span class="sxs-lookup"><span data-stu-id="f0da3-186">If this is not the case, and particularly if any subsequent arguments are strings input by the user, call the <xref:System.IO.Path.Join%2A> or <xref:System.IO.Path.TryJoin%2A> method instead.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static string Combine (params string[] paths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Combine(string[] paths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Combine(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine (ParamArray paths As String()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Combine(... cli::array &lt;System::String ^&gt; ^ paths);" />
      <MemberSignature Language="F#" Value="static member Combine : string[] -&gt; string" Usage="System.IO.Path.Combine paths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paths" Type="System.String[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="paths"><span data-ttu-id="f0da3-187">Массив частей пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-187">An array of parts of the path.</span></span></param>
        <summary><span data-ttu-id="f0da3-188">Объединяет массив строк в путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-188">Combines an array of strings into a path.</span></span></summary>
        <returns><span data-ttu-id="f0da3-189">Объединенные пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-189">The combined paths.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="f0da3-190">`paths`должен быть массивом частей пути для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-190">`paths` should be an array of the parts of the path to combine.</span></span> <span data-ttu-id="f0da3-191">Если один из последующих путей представляет собой абсолютный путь, операция объединения сбрасывается, начиная с этого абсолютного пути, отменяя все предыдущие объединенные пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-191">If the one of the subsequent paths is an absolute path, then the combine operation resets starting with that absolute path, discarding all previous combined paths.</span></span>  

<span data-ttu-id="f0da3-192">Если какой-либо `paths` элемент в, но последний из них не является диском и не заканчивается <xref:System.IO.Path.DirectorySeparatorChar> <xref:System.IO.Path.AltDirectorySeparatorChar> символом `Combine` или, метод добавляет <xref:System.IO.Path.DirectorySeparatorChar> символ между этим элементом и следующим.</span><span class="sxs-lookup"><span data-stu-id="f0da3-192">If any element in `paths` but the last one is not a drive and does not end with either the <xref:System.IO.Path.DirectorySeparatorChar> or the <xref:System.IO.Path.AltDirectorySeparatorChar> character, the `Combine` method adds a <xref:System.IO.Path.DirectorySeparatorChar> character between that element and the next one.</span></span> <span data-ttu-id="f0da3-193">Обратите внимание, что, если элемент заканчивается в символе разделителя пути, который не подходит для целевой платформы, `Combine` метод сохраняет символ разделителя исходного пути и добавляет поддерживаемый.</span><span class="sxs-lookup"><span data-stu-id="f0da3-193">Note that, if the element ends in a path separator character that is not appropriate for the target platform, the `Combine` method preserves the original path separator character and appends a supported one.</span></span> <span data-ttu-id="f0da3-194">В следующем примере сравнивается результат в системах на базе Windows и UNIX, если в качестве символа разделителя пути используется обратная косая черта.</span><span class="sxs-lookup"><span data-stu-id="f0da3-194">The following example compares the result on Windows and Unix-based systems when the backslash is used as a path separator character.</span></span>

[!code-csharp[Combine and path separator characters](~/samples/snippets/csharp/api/system.io/path/combine/program.cs#1)]
[!code-vb[Combine and path separator characters](~/samples/snippets/visualbasic/api/system.io/path/combine/program.vb#1)]  

 <span data-ttu-id="f0da3-195">Строки нулевой длины опускаются из Объединенного пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-195">Zero-length strings are omitted from the combined path.</span></span>  
  
 <span data-ttu-id="f0da3-196">Параметры не анализируются, если они содержат пробелы.</span><span class="sxs-lookup"><span data-stu-id="f0da3-196">The parameters are not parsed if they have white space.</span></span>  
  
 <span data-ttu-id="f0da3-197">Не все недопустимые символы в именах каталогов и файлов считаются неприемлемыми `Combine` для метода, так как эти символы можно использовать для поиска подстановочных знаков.</span><span class="sxs-lookup"><span data-stu-id="f0da3-197">Not all invalid characters for directory and file names are interpreted as unacceptable by the `Combine` method, because you can use these characters for search wildcard characters.</span></span> <span data-ttu-id="f0da3-198">Например, хотя `Path.Combine("c:\\", "*.txt")` может быть недействительным, если бы вы создавали файл из него, он будет действителен как строка поиска.</span><span class="sxs-lookup"><span data-stu-id="f0da3-198">For example, while `Path.Combine("c:\\", "*.txt")` might be invalid if you were to create a file from it, it is valid as a search string.</span></span> <span data-ttu-id="f0da3-199">Поэтому он успешно интерпретируется `Combine` методом.</span><span class="sxs-lookup"><span data-stu-id="f0da3-199">It is therefore successfully interpreted by the `Combine` method.</span></span>  
  
## Examples  
 <span data-ttu-id="f0da3-200">В следующем примере массив строк объединяется в путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-200">The following example combines an array of strings into a path.</span></span>  
  
 [!code-csharp[System.IO.Path.Combine#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.path.combine/cs/program.cs#3)]
 [!code-vb[System.IO.Path.Combine#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.path.combine/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f0da3-201">Одна из строк в массиве содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-201">One of the strings in the array contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f0da3-202">Одна из строк в массиве имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-202">One of the strings in the array is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="f0da3-203">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="f0da3-203">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static string Combine (string path1, string path2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Combine(string path1, string path2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Combine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine (path1 As String, path2 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Combine(System::String ^ path1, System::String ^ path2);" />
      <MemberSignature Language="F#" Value="static member Combine : string * string -&gt; string" Usage="System.IO.Path.Combine (path1, path2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="path2" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="path1"><span data-ttu-id="f0da3-204">Первый путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-204">The first path to combine.</span></span></param>
        <param name="path2"><span data-ttu-id="f0da3-205">Второй путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-205">The second path to combine.</span></span></param>
        <summary><span data-ttu-id="f0da3-206">Объединяет две строки в путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-206">Combines two strings into a path.</span></span></summary>
        <returns><span data-ttu-id="f0da3-207">Объединенные пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-207">The combined paths.</span></span> <span data-ttu-id="f0da3-208">Если один из указанных путей является строкой нулевой длины, этот метод возвращает другой путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-208">If one of the specified paths is a zero-length string, this method returns the other path.</span></span> <span data-ttu-id="f0da3-209">Если в качестве значения параметра <paramref name="path2" /> задан абсолютный путь, этот метод возвращает <paramref name="path2" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-209">If <paramref name="path2" /> contains an absolute path, this method returns <paramref name="path2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0da3-210">Если `path1` не является ссылкой на диск (т. е. "C:" или "D:") и не заканчивается допустимым символом-разделителем, как <xref:System.IO.Path.AltDirectorySeparatorChar>определено <xref:System.IO.Path.VolumeSeparatorChar>в <xref:System.IO.Path.DirectorySeparatorChar> <xref:System.IO.Path.DirectorySeparatorChar>, или, добавляется к `path1` перед сцеплением.</span><span class="sxs-lookup"><span data-stu-id="f0da3-210">If `path1` is not a drive reference (that is, "C:" or "D:") and does not end with a valid separator character as defined in <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, or <xref:System.IO.Path.VolumeSeparatorChar>, <xref:System.IO.Path.DirectorySeparatorChar> is appended to `path1` before concatenation.</span></span> <span data-ttu-id="f0da3-211">Обратите внимание `path1` , что если заканчивается символом разделителя пути, который не подходит для целевой платформы `Combine` , метод сохраняет символ разделителя исходного пути и добавляет поддерживаемый.</span><span class="sxs-lookup"><span data-stu-id="f0da3-211">Note that if `path1` ends in a path separator character that is not appropriate for the target platform, the `Combine` method preserves the original path separator character and appends a supported one.</span></span> <span data-ttu-id="f0da3-212">В следующем примере сравнивается результат в системах на базе Windows и UNIX, если в качестве символа разделителя пути используется обратная косая черта.</span><span class="sxs-lookup"><span data-stu-id="f0da3-212">The following example compares the result on Windows and Unix-based systems when the backslash is used as a path separator character.</span></span>  
  
[!code-csharp[Combine and path separator characters](~/samples/snippets/csharp/api/system.io/path/combine/program.cs#2)]
[!code-vb[Combine and path separator characters](~/samples/snippets/visualbasic/api/system.io/path/combine/program.vb#2)]  

 <span data-ttu-id="f0da3-213">Если `path2` не включает корень (например, если `path2` не начинается с символа разделителя или из спецификации диска), результатом является объединение двух путей с помощью символа промежуточного разделителя.</span><span class="sxs-lookup"><span data-stu-id="f0da3-213">If `path2` does not include a root (for example, if `path2` does not start with a separator character or a drive specification), the result is a concatenation of the two paths, with an intervening separator character.</span></span> <span data-ttu-id="f0da3-214">Если `path2` содержит корень, `path2` возвращается значение.</span><span class="sxs-lookup"><span data-stu-id="f0da3-214">If `path2` includes a root, `path2` is returned.</span></span>  
  
 <span data-ttu-id="f0da3-215">Параметры не анализируются, если они содержат пробелы.</span><span class="sxs-lookup"><span data-stu-id="f0da3-215">The parameters are not parsed if they have white space.</span></span> <span data-ttu-id="f0da3-216">Таким образом, `path2` если включает пробел (например, "\филе.ткст") <xref:System.IO.Path.Combine%2A> , метод добавляется `path2` к, а `path1` не только `path2`к возврату.</span><span class="sxs-lookup"><span data-stu-id="f0da3-216">Therefore, if `path2` includes white space (for example, " \file.txt "), the <xref:System.IO.Path.Combine%2A> method appends `path2` to `path1` instead of returning only `path2`.</span></span>  
  
 <span data-ttu-id="f0da3-217">Не все недопустимые символы в именах каталогов и файлов считаются неприемлемыми `Combine` для метода, так как эти символы можно использовать для поиска подстановочных знаков.</span><span class="sxs-lookup"><span data-stu-id="f0da3-217">Not all invalid characters for directory and file names are interpreted as unacceptable by the `Combine` method, because you can use these characters for search wildcard characters.</span></span> <span data-ttu-id="f0da3-218">Например, хотя `Path.Combine("c:\\", "*.txt")` может быть недействительным, если бы вы создавали файл из него, он будет действителен как строка поиска.</span><span class="sxs-lookup"><span data-stu-id="f0da3-218">For example, while `Path.Combine("c:\\", "*.txt")` might be invalid if you were to create a file from it, it is valid as a search string.</span></span> <span data-ttu-id="f0da3-219">Поэтому он успешно интерпретируется `Combine` методом.</span><span class="sxs-lookup"><span data-stu-id="f0da3-219">It is therefore successfully interpreted by the `Combine` method.</span></span>  
  
 <span data-ttu-id="f0da3-220">Список общих задач ввода-вывода см. в разделе [Общие задачи ввода-вывода](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f0da3-220">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0da3-221">В следующем примере демонстрируется использование `Combine` метода на настольной платформе под управлением Windows.</span><span class="sxs-lookup"><span data-stu-id="f0da3-221">The following example demonstrates using the `Combine` method on a Windows-based desktop platform.</span></span>  
  
 [!code-cpp[pathcombine#1](~/samples/snippets/cpp/VS_Snippets_CLR/pathcombine/CPP/pathcombine.cpp#1)]
 [!code-csharp[pathcombine#1](~/samples/snippets/csharp/VS_Snippets_CLR/pathcombine/CS/pathcombine.cs#1)]
 [!code-vb[pathcombine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/pathcombine/VB/pathcombine.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f0da3-222">Параметр <paramref name="path1" /> или <paramref name="path2" /> содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-222"><paramref name="path1" /> or <paramref name="path2" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f0da3-223">Значение параметра <paramref name="path1" /> или <paramref name="path2" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-223"><paramref name="path1" /> or <paramref name="path2" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="f0da3-224">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="f0da3-224">File path formats on Windows systems</span></span></related>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f0da3-225">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="f0da3-225">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f0da3-226">Практическое руководство. Считывание текста из файла</span><span class="sxs-lookup"><span data-stu-id="f0da3-226">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f0da3-227">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="f0da3-227">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static string Combine (string path1, string path2, string path3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Combine(string path1, string path2, string path3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Combine(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine (path1 As String, path2 As String, path3 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Combine(System::String ^ path1, System::String ^ path2, System::String ^ path3);" />
      <MemberSignature Language="F#" Value="static member Combine : string * string * string -&gt; string" Usage="System.IO.Path.Combine (path1, path2, path3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="path2" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="path3" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="path1"><span data-ttu-id="f0da3-228">Первый путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-228">The first path to combine.</span></span></param>
        <param name="path2"><span data-ttu-id="f0da3-229">Второй путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-229">The second path to combine.</span></span></param>
        <param name="path3"><span data-ttu-id="f0da3-230">Третий путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-230">The third path to combine.</span></span></param>
        <summary><span data-ttu-id="f0da3-231">Объединяет три строки в путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-231">Combines three strings into a path.</span></span></summary>
        <returns><span data-ttu-id="f0da3-232">Объединенные пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-232">The combined paths.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0da3-233">`path1`должен быть абсолютным путем (например, "д:\арчивес" или "\\\арчивес\публик").</span><span class="sxs-lookup"><span data-stu-id="f0da3-233">`path1` should be an absolute path (for example, "d:\archives" or "\\\archives\public").</span></span> <span data-ttu-id="f0da3-234">Если `path2` или`path3` также является абсолютным путем, операция объединения удаляет все ранее объединенные пути и сбрасывает их до этого абсолютного пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-234">If `path2` or `path3` is also an absolute path, the combine operation discards all previously combined paths and resets to that absolute path.</span></span>  
  
 <span data-ttu-id="f0da3-235">Строки нулевой длины опускаются из Объединенного пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-235">Zero-length strings are omitted from the combined path.</span></span>  
  
 <span data-ttu-id="f0da3-236">Если `path1` или <xref:System.IO.Path.AltDirectorySeparatorChar> <xref:System.IO.Path.DirectorySeparatorChar> <xref:System.IO.Path.DirectorySeparatorChar> `path1` <xref:System.IO.Path.VolumeSeparatorChar>не является ссылкой на диск (т. е. "C:" или "D:") и не заканчивается допустимым символом-разделителем, как определено в, или, добавляется к или `path2` `path2` перед объединением.</span><span class="sxs-lookup"><span data-stu-id="f0da3-236">If `path1` or `path2` is not a drive reference (that is, "C:" or "D:") and does not end with a valid separator character as defined in <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, or <xref:System.IO.Path.VolumeSeparatorChar>, <xref:System.IO.Path.DirectorySeparatorChar> is appended to `path1` or `path2` before concatenation.</span></span> <span data-ttu-id="f0da3-237">Обратите внимание `path1` , `path2` что если или заканчивается символом разделителя пути, который не подходит для целевой платформы, `Combine` метод сохраняет символ разделителя исходного пути и добавляет поддерживаемый.</span><span class="sxs-lookup"><span data-stu-id="f0da3-237">Note that if `path1` or `path2` ends in a path separator character that is not appropriate for the target platform, the `Combine` method preserves the original path separator character and appends a supported one.</span></span> <span data-ttu-id="f0da3-238">В следующем примере сравнивается результат в системах на базе Windows и UNIX, если в качестве символа разделителя пути используется обратная косая черта.</span><span class="sxs-lookup"><span data-stu-id="f0da3-238">The following example compares the result on Windows and Unix-based systems when the backslash is used as a path separator character.</span></span> 

[!code-csharp[Combine and path separator characters](~/samples/snippets/csharp/api/system.io/path/combine/program.cs#3)]
[!code-vb[Combine and path separator characters](~/samples/snippets/visualbasic/api/system.io/path/combine/program.vb#3)]  

 <span data-ttu-id="f0da3-239">Если `path2` не включает корень (например, если `path2` не начинается с символа разделителя или из спецификации диска), результатом является объединение двух путей с помощью символа промежуточного разделителя.</span><span class="sxs-lookup"><span data-stu-id="f0da3-239">If `path2` does not include a root (for example, if `path2` does not start with a separator character or a drive specification), the result is a concatenation of the two paths, with an intervening separator character.</span></span> <span data-ttu-id="f0da3-240">Если `path2` содержит корень, `path2` возвращается значение.</span><span class="sxs-lookup"><span data-stu-id="f0da3-240">If `path2` includes a root, `path2` is returned.</span></span>  
  
 <span data-ttu-id="f0da3-241">Параметры не анализируются, если они содержат пробелы.</span><span class="sxs-lookup"><span data-stu-id="f0da3-241">The parameters are not parsed if they have white space.</span></span> <span data-ttu-id="f0da3-242">Таким образом, `path2` если включает пробел (например, "\филе.ткст") <xref:System.IO.Path.Combine%2A> , метод добавляет `path2` к `path1`.</span><span class="sxs-lookup"><span data-stu-id="f0da3-242">Therefore, if `path2` includes white space (for example, " \file.txt "), the <xref:System.IO.Path.Combine%2A> method appends `path2` to `path1`.</span></span>  
  
 <span data-ttu-id="f0da3-243">Не все недопустимые символы в именах каталогов и файлов считаются неприемлемыми `Combine` для метода, так как эти символы можно использовать для поиска подстановочных знаков.</span><span class="sxs-lookup"><span data-stu-id="f0da3-243">Not all invalid characters for directory and file names are interpreted as unacceptable by the `Combine` method, because you can use these characters for search wildcard characters.</span></span> <span data-ttu-id="f0da3-244">Например, хотя `Path.Combine("c:\\", "*.txt")` может быть недействительным, если бы вы создавали файл из него, он будет действителен как строка поиска.</span><span class="sxs-lookup"><span data-stu-id="f0da3-244">For example, while `Path.Combine("c:\\", "*.txt")` might be invalid if you were to create a file from it, it is valid as a search string.</span></span> <span data-ttu-id="f0da3-245">Поэтому он успешно интерпретируется `Combine` методом.</span><span class="sxs-lookup"><span data-stu-id="f0da3-245">It is therefore successfully interpreted by the `Combine` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0da3-246">В следующем примере объединяются три пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-246">The following example combines three paths.</span></span>  
  
 [!code-csharp[System.IO.Path.Combine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.path.combine/cs/program.cs#1)]
 [!code-vb[System.IO.Path.Combine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.path.combine/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f0da3-247"><paramref name="path1" />, <paramref name="path2" /> или <paramref name="path3" /> содержит по крайней мере один из недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-247"><paramref name="path1" />, <paramref name="path2" />, or <paramref name="path3" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f0da3-248">Значение параметра <paramref name="path1" />, <paramref name="path2" /> или <paramref name="path3" /> равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-248"><paramref name="path1" />, <paramref name="path2" />, or <paramref name="path3" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="f0da3-249">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="f0da3-249">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static string Combine (string path1, string path2, string path3, string path4);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Combine(string path1, string path2, string path3, string path4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Combine(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine (path1 As String, path2 As String, path3 As String, path4 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Combine(System::String ^ path1, System::String ^ path2, System::String ^ path3, System::String ^ path4);" />
      <MemberSignature Language="F#" Value="static member Combine : string * string * string * string -&gt; string" Usage="System.IO.Path.Combine (path1, path2, path3, path4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="path2" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="path3" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="path4" Type="System.String" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path1"><span data-ttu-id="f0da3-250">Первый путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-250">The first path to combine.</span></span></param>
        <param name="path2"><span data-ttu-id="f0da3-251">Второй путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-251">The second path to combine.</span></span></param>
        <param name="path3"><span data-ttu-id="f0da3-252">Третий путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-252">The third path to combine.</span></span></param>
        <param name="path4"><span data-ttu-id="f0da3-253">Четвертый путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-253">The fourth path to combine.</span></span></param>
        <summary><span data-ttu-id="f0da3-254">Объединяет четыре строки в путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-254">Combines four strings into a path.</span></span></summary>
        <returns><span data-ttu-id="f0da3-255">Объединенные пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-255">The combined paths.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0da3-256">`path1`должен быть абсолютным путем (например, "д:\арчивес" или "\\\арчивес\публик"). Если один из последующих путей также является абсолютным путем, операция объединения отменяет все ранее объединенные пути и сбрасывает их до этого абсолютного пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-256">`path1` should be an absolute path (for example, "d:\archives" or "\\\archives\public").If one of the subsequent paths is also an absolute path, the combine operation discards all previously combined paths and resets to that absolute path.</span></span>  
  
 <span data-ttu-id="f0da3-257">Строки нулевой длины опускаются из Объединенного пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-257">Zero-length strings are omitted from the combined path.</span></span>  
  
 <span data-ttu-id="f0da3-258">Если `path1`, <xref:System.IO.Path.AltDirectorySeparatorChar> <xref:System.IO.Path.DirectorySeparatorChar> <xref:System.IO.Path.VolumeSeparatorChar> <xref:System.IO.Path.DirectorySeparatorChar> или не является ссылкой на диск (то есть "C:" или "D:") и не заканчивается допустимым символом-разделителем, как определено в, или, добавляется к нему. `path3` `path2` перед объединением.</span><span class="sxs-lookup"><span data-stu-id="f0da3-258">If `path1`, `path2`, or `path3` is not a drive reference (that is, "C:" or "D:") and does not end with a valid separator character as defined in <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, or <xref:System.IO.Path.VolumeSeparatorChar>, <xref:System.IO.Path.DirectorySeparatorChar> is appended to it before concatenation.</span></span> <span data-ttu-id="f0da3-259">Обратите внимание `path1`, `path2`что если `path3` , или заканчивается символом разделителя пути, который `Combine` не подходит для целевой платформы, метод сохраняет символ разделителя исходного пути и добавляет поддерживаемый.</span><span class="sxs-lookup"><span data-stu-id="f0da3-259">Note that if `path1`, `path2`, or `path3` ends in a path separator character that is not appropriate for the target platform, the `Combine` method preserves the original path separator character and appends a supported one.</span></span> <span data-ttu-id="f0da3-260">В следующем примере сравнивается результат в системах на базе Windows и UNIX, если в качестве символа разделителя пути используется обратная косая черта.</span><span class="sxs-lookup"><span data-stu-id="f0da3-260">The following example compares the result on Windows and Unix-based systems when the backslash is used as a path separator character.</span></span> 

[!code-csharp[Combine and path separator characters](~/samples/snippets/csharp/api/system.io/path/combine/program.cs#4)]
[!code-vb[Combine and path separator characters](~/samples/snippets/visualbasic/api/system.io/path/combine/program.vb#4)]   
  
 <span data-ttu-id="f0da3-261">Если `path2` не включает корень (например, если `path2` не начинается с символа разделителя или из спецификации диска), результатом является объединение двух путей с помощью символа промежуточного разделителя.</span><span class="sxs-lookup"><span data-stu-id="f0da3-261">If `path2` does not include a root (for example, if `path2` does not start with a separator character or a drive specification), the result is a concatenation of the two paths, with an intervening separator character.</span></span> <span data-ttu-id="f0da3-262">Если `path2` содержит корень, `path2` возвращается значение.</span><span class="sxs-lookup"><span data-stu-id="f0da3-262">If `path2` includes a root, `path2` is returned.</span></span>  
  
 <span data-ttu-id="f0da3-263">Параметры не анализируются, если они содержат пробелы.</span><span class="sxs-lookup"><span data-stu-id="f0da3-263">The parameters are not parsed if they have white space.</span></span> <span data-ttu-id="f0da3-264">Таким образом, `path2` если включает пробел (например, "\филе.ткст") <xref:System.IO.Path.Combine%2A> , метод добавляет `path2` к `path1`.</span><span class="sxs-lookup"><span data-stu-id="f0da3-264">Therefore, if `path2` includes white space (for example, " \file.txt "), the <xref:System.IO.Path.Combine%2A> method appends `path2` to `path1`.</span></span>  
  
 <span data-ttu-id="f0da3-265">Не все недопустимые символы в именах каталогов и файлов считаются неприемлемыми `Combine` для метода, так как эти символы можно использовать для поиска подстановочных знаков.</span><span class="sxs-lookup"><span data-stu-id="f0da3-265">Not all invalid characters for directory and file names are interpreted as unacceptable by the `Combine` method, because you can use these characters for search wildcard characters.</span></span> <span data-ttu-id="f0da3-266">Например, хотя `Path.Combine("c:\\", "*.txt")` может быть недействительным, если бы вы создавали файл из него, он будет действителен как строка поиска.</span><span class="sxs-lookup"><span data-stu-id="f0da3-266">For example, while `Path.Combine("c:\\", "*.txt")` might be invalid if you were to create a file from it, it is valid as a search string.</span></span> <span data-ttu-id="f0da3-267">Поэтому он успешно интерпретируется `Combine` методом.</span><span class="sxs-lookup"><span data-stu-id="f0da3-267">It is therefore successfully interpreted by the `Combine` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0da3-268">В следующем примере объединяются четыре пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-268">The following example combines four paths.</span></span>  
  
 [!code-csharp[System.IO.Path.Combine#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.path.combine/cs/program.cs#2)]
 [!code-vb[System.IO.Path.Combine#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.path.combine/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f0da3-269"><paramref name="path1" />, <paramref name="path2" />, <paramref name="path3" /> или <paramref name="path4" /> содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-269"><paramref name="path1" />, <paramref name="path2" />, <paramref name="path3" />, or <paramref name="path4" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f0da3-270">Параметр <paramref name="path1" />, <paramref name="path2" />, <paramref name="path3" /> или <paramref name="path4" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-270"><paramref name="path1" />, <paramref name="path2" />, <paramref name="path3" />, or <paramref name="path4" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="f0da3-271">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="f0da3-271">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DirectorySeparatorChar">
      <MemberSignature Language="C#" Value="public static readonly char DirectorySeparatorChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly char DirectorySeparatorChar" />
      <MemberSignature Language="DocId" Value="F:System.IO.Path.DirectorySeparatorChar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DirectorySeparatorChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly char DirectorySeparatorChar;" />
      <MemberSignature Language="F#" Value=" staticval mutable DirectorySeparatorChar : char" Usage="System.IO.Path.DirectorySeparatorChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0da3-272">Предоставляет символ, задаваемый платформой, для разделения уровней папок в строке пути, в которой отражена иерархическая организация файловой системы.</span><span class="sxs-lookup"><span data-stu-id="f0da3-272">Provides a platform-specific character used to separate directory levels in a path string that reflects a hierarchical file system organization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="f0da3-273"><xref:System.IO.Path.AltDirectorySeparatorChar>и `DirectorySeparatorChar` являются допустимыми для разделения уровней каталога в строке пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-273"><xref:System.IO.Path.AltDirectorySeparatorChar> and `DirectorySeparatorChar` are both valid for separating directory levels in a path string.</span></span>  
  
<span data-ttu-id="f0da3-274">При использовании .NET Core для разработки приложений, работающих на нескольких платформах:</span><span class="sxs-lookup"><span data-stu-id="f0da3-274">When you are using .NET Core to develop applications that run on multiple platforms:</span></span>

- <span data-ttu-id="f0da3-275">Если вы предпочитаете жестко кодировать символ разделителя каталогов, следует использовать символ косой черты (`/`).</span><span class="sxs-lookup"><span data-stu-id="f0da3-275">If you prefer to hard-code the directory separator character, you should use the forward slash (`/`) character.</span></span> <span data-ttu-id="f0da3-276">Это единственный распознаваемый символ-разделитель в системах UNIX, так как выходные данные в примере показаны и являются <xref:System.IO.Path.AltDirectorySeparatorChar> в Windows.</span><span class="sxs-lookup"><span data-stu-id="f0da3-276">It is the only recognized directory separator character on Unix systems, as the output from the example shows, and is the <xref:System.IO.Path.AltDirectorySeparatorChar> on Windows.</span></span>

- <span data-ttu-id="f0da3-277">Используйте объединение строк для динамического извлечения символа разделителя пути во время выполнения и его включения в пути файловой системы.</span><span class="sxs-lookup"><span data-stu-id="f0da3-277">Use string concatenation to dynamically retrieve the path separator character at runtime and incorporate it into file system paths.</span></span> <span data-ttu-id="f0da3-278">Например, примененная к объекту директива</span><span class="sxs-lookup"><span data-stu-id="f0da3-278">For example,</span></span> 

   ```csharp
   separator = Path.DirectorySeparatorChar;
   path = $"{separator}users{separator}user1{separator}";
   ```
   ```vb
   separator = Path.DirectorySeparatorChar;
   path = $"{separator}users{separator}user1{separator}";
   ``` 
   <span data-ttu-id="f0da3-279">Можно также получить значение из <xref:System.IO.Path.AltDirectorySeparatorChar> свойства, так как оно одинаково для систем на основе Windows и Ункс.</span><span class="sxs-lookup"><span data-stu-id="f0da3-279">You can also retrieve the value from the <xref:System.IO.Path.AltDirectorySeparatorChar> property, since it is the same on both Windows and Unx-based systems.</span></span>

- <span data-ttu-id="f0da3-280"><xref:System.IO.Path.AltDirectorySeparatorChar> Получение свойства</span><span class="sxs-lookup"><span data-stu-id="f0da3-280">Retrieve the <xref:System.IO.Path.AltDirectorySeparatorChar> property</span></span>

<span data-ttu-id="f0da3-281">Если приложение не является кросс-платформенным, можно использовать разделитель, соответствующий вашей системе.</span><span class="sxs-lookup"><span data-stu-id="f0da3-281">If your application is not cross-platform, you can use the separator appropriate for your system.</span></span>

## Examples  

<span data-ttu-id="f0da3-282">В следующем примере значения <xref:System.IO.Path> полей отображаются в Windows и системах на базе UNIX.</span><span class="sxs-lookup"><span data-stu-id="f0da3-282">The following example displays <xref:System.IO.Path> field values on Windows and on Unix-based systems.</span></span> <span data-ttu-id="f0da3-283">Обратите внимание, что Windows поддерживает либо прямую косую черту ( <xref:System.IO.Path.AltDirectorySeparatorChar> которая возвращается полем), либо обратную косую черту (которая возвращается <xref:System.IO.Path.DirectorySeparatorChar> полем) в качестве символов разделителя пути, тогда как системы на базе UNIX поддерживают только косую черту.</span><span class="sxs-lookup"><span data-stu-id="f0da3-283">Note that Windows supports either the forward slash (which is returned by the <xref:System.IO.Path.AltDirectorySeparatorChar> field) or the backslash (which is returned by the <xref:System.IO.Path.DirectorySeparatorChar> field) as path separator characters, while Unix-based systems support only the forward slash.</span></span>  

[!code-csharp[DirectorySeparatorChar](~/samples/snippets/csharp/api/system.io/path/directoryseparatorchar/program.cs)]
[!code-vb[DirectorySeparatorChar](~/samples/snippets/visualbasic/api/system.io/path/directoryseparatorchar/program.vb)]
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f0da3-284">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="f0da3-284">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="f0da3-285">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="f0da3-285">File path formats on Windows systems</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f0da3-286">Практическое руководство. Считывание текста из файла</span><span class="sxs-lookup"><span data-stu-id="f0da3-286">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f0da3-287">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="f0da3-287">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndsInDirectorySeparator">
      <MemberSignature Language="C#" Value="public static bool EndsInDirectorySeparator (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool EndsInDirectorySeparator(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.EndsInDirectorySeparator(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndsInDirectorySeparator (path As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool EndsInDirectorySeparator(ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="F#" Value="static member EndsInDirectorySeparator : ReadOnlySpan&lt;char&gt; -&gt; bool" Usage="System.IO.Path.EndsInDirectorySeparator path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndsInDirectorySeparator">
      <MemberSignature Language="C#" Value="public static bool EndsInDirectorySeparator (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool EndsInDirectorySeparator(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.EndsInDirectorySeparator(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndsInDirectorySeparator (path As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool EndsInDirectorySeparator(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member EndsInDirectorySeparator : string -&gt; bool" Usage="System.IO.Path.EndsInDirectorySeparator path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectoryName">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;char&gt; GetDirectoryName (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;char&gt; GetDirectoryName(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetDirectoryName(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDirectoryName (path As ReadOnlySpan(Of Char)) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ReadOnlySpan&lt;char&gt; GetDirectoryName(ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="F#" Value="static member GetDirectoryName : ReadOnlySpan&lt;char&gt; -&gt; ReadOnlySpan&lt;char&gt;" Usage="System.IO.Path.GetDirectoryName path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary><span data-ttu-id="f0da3-288">Возвращает сведения о каталоге для указанного пути, представленного диапазоном символов.</span><span class="sxs-lookup"><span data-stu-id="f0da3-288">Returns the directory information for the specified path represented by a character span.</span></span></summary>
        <returns><span data-ttu-id="f0da3-289">Сведения о каталоге для <paramref name="path" /> либо пустой диапазон, если значение <paramref name="path" /> — <see langword="null" />, пустой диапазон или корневая папка, например \, C: или \\server\share.</span><span class="sxs-lookup"><span data-stu-id="f0da3-289">Directory information for <paramref name="path" />, or an empty span if <paramref name="path" /> is <see langword="null" />, an empty span, or a root (such as \, C:, or \\server\share).</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="f0da3-290">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="f0da3-290">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectoryName">
      <MemberSignature Language="C#" Value="public static string GetDirectoryName (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDirectoryName(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetDirectoryName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDirectoryName (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetDirectoryName(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetDirectoryName : string -&gt; string" Usage="System.IO.Path.GetDirectoryName path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="f0da3-291">Путь к файлу или каталогу.</span><span class="sxs-lookup"><span data-stu-id="f0da3-291">The path of a file or directory.</span></span></param>
        <summary><span data-ttu-id="f0da3-292">Возвращает для указанной строки пути сведения о каталоге.</span><span class="sxs-lookup"><span data-stu-id="f0da3-292">Returns the directory information for the specified path string.</span></span></summary>
        <returns><span data-ttu-id="f0da3-293">Сведения о каталоге для <paramref name="path" />, или значение <see langword="null" />, если путь <paramref name="path" /> указывает на корневой каталог или равен NULL.</span><span class="sxs-lookup"><span data-stu-id="f0da3-293">Directory information for <paramref name="path" />, or <see langword="null" /> if <paramref name="path" /> denotes a root directory or is null.</span></span> <span data-ttu-id="f0da3-294">Возвращает <see cref="F:System.String.Empty" />, если параметр <paramref name="path" /> не содержит сведения о каталоге.</span><span class="sxs-lookup"><span data-stu-id="f0da3-294">Returns <see cref="F:System.String.Empty" /> if <paramref name="path" /> does not contain directory information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0da3-295">В большинстве случаев строка, возвращаемая этим методом, состоит из всех символов в пути вплоть до, но не включая последний <xref:System.IO.Path.DirectorySeparatorChar> или <xref:System.IO.Path.AltDirectorySeparatorChar>.</span><span class="sxs-lookup"><span data-stu-id="f0da3-295">In most cases, the string returned by this method consists of all characters in the path up to but not including the last <xref:System.IO.Path.DirectorySeparatorChar> or <xref:System.IO.Path.AltDirectorySeparatorChar>.</span></span> <span data-ttu-id="f0da3-296">Если путь состоит из корневого каталога, например "c:\\", возвращается значение null.</span><span class="sxs-lookup"><span data-stu-id="f0da3-296">If the path consists of a root directory, such as "c:\\", null is returned.</span></span> <span data-ttu-id="f0da3-297">Обратите внимание, что этот метод не поддерживает пути, использующие "file:".</span><span class="sxs-lookup"><span data-stu-id="f0da3-297">Note that this method does not support paths using "file:".</span></span> <span data-ttu-id="f0da3-298">Так как возвращаемый путь не включает <xref:System.IO.Path.DirectorySeparatorChar> или <xref:System.IO.Path.AltDirectorySeparatorChar>, передача <xref:System.IO.Path.GetDirectoryName%2A> возвращенного пути обратно в метод приведет к усечению одного уровня папки для последующего вызова в результирующей строке.</span><span class="sxs-lookup"><span data-stu-id="f0da3-298">Because the returned path does not include the <xref:System.IO.Path.DirectorySeparatorChar> or <xref:System.IO.Path.AltDirectorySeparatorChar>, passing the returned path back into the <xref:System.IO.Path.GetDirectoryName%2A> method will result in the truncation of one folder level per subsequent call on the result string.</span></span> <span data-ttu-id="f0da3-299">Например, при передаче пути "к:\директори\субдиректори\тест.ткст" <xref:System.IO.Path.GetDirectoryName%2A> в метод будет возвращено значение "к:\директори\субдиректори".</span><span class="sxs-lookup"><span data-stu-id="f0da3-299">For example, passing the path "C:\Directory\SubDirectory\test.txt" into the <xref:System.IO.Path.GetDirectoryName%2A> method will return "C:\Directory\SubDirectory".</span></span> <span data-ttu-id="f0da3-300">Передача этой строки "к:\директори\субдиректори" в приведет к <xref:System.IO.Path.GetDirectoryName%2A> появлению "к:\директори".</span><span class="sxs-lookup"><span data-stu-id="f0da3-300">Passing that string, "C:\Directory\SubDirectory", into <xref:System.IO.Path.GetDirectoryName%2A> will result in "C:\Directory".</span></span>  
  
 <span data-ttu-id="f0da3-301">Список общих задач ввода-вывода см. в разделе [Общие задачи ввода-вывода](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f0da3-301">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0da3-302">В следующем примере демонстрируется использование `GetDirectoryName` метода на настольной платформе под управлением Windows.</span><span class="sxs-lookup"><span data-stu-id="f0da3-302">The following example demonstrates using the `GetDirectoryName` method on a Windows-based desktop platform.</span></span>  
  
 [!code-cpp[System.IO.Path Members#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#3)]
 [!code-csharp[System.IO.Path Members#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#3)]
 [!code-vb[System.IO.Path Members#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f0da3-303">Параметр <paramref name="path" /> пустой или содержит недопустимые символы либо только пробелы.</span><span class="sxs-lookup"><span data-stu-id="f0da3-303">The <paramref name="path" /> parameter contains invalid characters, is empty, or contains only white spaces.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="f0da3-304">Вместо этого в <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET для приложений Магазина Windows</see> или в <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">переносимой библиотеке классов</see> перехватите исключение базового класса <see cref="T:System.IO.IOException" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-304">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.IO.IOException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="f0da3-305">Имя параметра <paramref name="path" /> превышает максимально допустимую в системе длину.</span><span class="sxs-lookup"><span data-stu-id="f0da3-305">The <paramref name="path" /> parameter is longer than the system-defined maximum length.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="f0da3-306">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="f0da3-306">File path formats on Windows systems</span></span></related>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f0da3-307">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="f0da3-307">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f0da3-308">Практическое руководство. Считывание текста из файла</span><span class="sxs-lookup"><span data-stu-id="f0da3-308">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f0da3-309">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="f0da3-309">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetExtension">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;char&gt; GetExtension (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;char&gt; GetExtension(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetExtension(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExtension (path As ReadOnlySpan(Of Char)) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ReadOnlySpan&lt;char&gt; GetExtension(ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="F#" Value="static member GetExtension : ReadOnlySpan&lt;char&gt; -&gt; ReadOnlySpan&lt;char&gt;" Usage="System.IO.Path.GetExtension path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="f0da3-310">Путь к файлу, из которого необходимо получить расширение.</span><span class="sxs-lookup"><span data-stu-id="f0da3-310">The file path from which to get the extension.</span></span></param>
        <summary><span data-ttu-id="f0da3-311">Возвращает расширение из пути к файлу, представленного диапазоном символов только для чтения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-311">Returns the extension of a file path that is represented by a read-only character span.</span></span></summary>
        <returns><span data-ttu-id="f0da3-312">Расширение указанного пути (включая точку — ".") или <see cref="P:System.ReadOnlySpan`1.Empty" />, если в <paramref name="path" /> отсутствуют сведения о расширении.</span><span class="sxs-lookup"><span data-stu-id="f0da3-312">The extension of the specified path (including the period, "."), or <see cref="P:System.ReadOnlySpan`1.Empty" /> if <paramref name="path" /> does not have extension information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="f0da3-313">Этот метод получает расширение `path` , выполняя поиск `path` точки ("."), начиная с последнего символа в диапазоне, доступном только для чтения, и заканчивая его первым символом.</span><span class="sxs-lookup"><span data-stu-id="f0da3-313">This method obtains the extension of `path` by searching `path` for a period ("."), starting from the last character in the read-only span and continuing toward its first character.</span></span> <span data-ttu-id="f0da3-314">Если точка находится перед <xref:System.IO.Path.DirectorySeparatorChar> символом или <xref:System.IO.Path.AltDirectorySeparatorChar> , возвращаемый диапазон только для чтения содержит точку и символы <xref:System.ReadOnlySpan%601.Empty?displayProperty=nameWithType> после него; в противном случае возвращается значение.</span><span class="sxs-lookup"><span data-stu-id="f0da3-314">If a period is found before a <xref:System.IO.Path.DirectorySeparatorChar> or <xref:System.IO.Path.AltDirectorySeparatorChar> character, the returned read-only span contains the period and the characters after it; otherwise, <xref:System.ReadOnlySpan%601.Empty?displayProperty=nameWithType> is returned.</span></span>  

         ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="f0da3-315">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="f0da3-315">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetExtension">
      <MemberSignature Language="C#" Value="public static string GetExtension (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetExtension(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExtension (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetExtension(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetExtension : string -&gt; string" Usage="System.IO.Path.GetExtension path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="f0da3-316">Строка пути, из которой нужно получить расширение.</span><span class="sxs-lookup"><span data-stu-id="f0da3-316">The path string from which to get the extension.</span></span></param>
        <summary><span data-ttu-id="f0da3-317">Возвращает расширение указанной строки пути (включая точку ".").</span><span class="sxs-lookup"><span data-stu-id="f0da3-317">Returns the extension (including the period ".") of the specified path string.</span></span></summary>
        <returns><span data-ttu-id="f0da3-318">Расширение указанного пути (включая точку ".") или значение <see langword="null" /> или <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-318">The extension of the specified path (including the period "."), or <see langword="null" />, or <see cref="F:System.String.Empty" />.</span></span> <span data-ttu-id="f0da3-319">Если параметр <paramref name="path" /> имеет значение <see langword="null" />, <see cref="M:System.IO.Path.GetExtension(System.String)" /> возвращает <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-319">If <paramref name="path" /> is <see langword="null" />, <see cref="M:System.IO.Path.GetExtension(System.String)" /> returns <see langword="null" />.</span></span> <span data-ttu-id="f0da3-320">Если параметр <paramref name="path" /> не содержит сведений о расширении, <see cref="M:System.IO.Path.GetExtension(System.String)" /> возвращает <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-320">If <paramref name="path" /> does not have extension information, <see cref="M:System.IO.Path.GetExtension(System.String)" /> returns <see cref="F:System.String.Empty" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="f0da3-321">Этот метод получает расширение `path` путем поиска `path` точки (.), начиная с последнего символа в `path` и заканчивая первым символом.</span><span class="sxs-lookup"><span data-stu-id="f0da3-321">This method obtains the extension of `path` by searching `path` for a period (.), starting with the last character in `path` and continuing toward the first character.</span></span> <span data-ttu-id="f0da3-322">Если точка находится перед <xref:System.IO.Path.DirectorySeparatorChar> символом или <xref:System.IO.Path.AltDirectorySeparatorChar> , возвращаемая строка содержит точку и символы <xref:System.String.Empty?displayProperty=nameWithType> после него; в противном случае возвращается значение.</span><span class="sxs-lookup"><span data-stu-id="f0da3-322">If a period is found before a <xref:System.IO.Path.DirectorySeparatorChar> or <xref:System.IO.Path.AltDirectorySeparatorChar> character, the returned string contains the period and the characters after it; otherwise, <xref:System.String.Empty?displayProperty=nameWithType> is returned.</span></span>  
  
 <span data-ttu-id="f0da3-323">Список общих задач ввода-вывода см. в разделе [Общие задачи ввода-вывода](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f0da3-323">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>
 
## Examples  
 <span data-ttu-id="f0da3-324">В следующем примере демонстрируется использование `GetExtension` метода на настольной платформе под управлением Windows.</span><span class="sxs-lookup"><span data-stu-id="f0da3-324">The following example demonstrates using the `GetExtension` method on a Windows-based desktop platform.</span></span>  
  
 [!code-cpp[System.IO.Path Members#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#4)]
 [!code-csharp[System.IO.Path Members#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#4)]
 [!code-vb[System.IO.Path Members#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f0da3-325">Параметр <paramref name="path" /> содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-325"><paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="f0da3-326">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="f0da3-326">File path formats on Windows systems</span></span></related>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f0da3-327">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="f0da3-327">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f0da3-328">Практическое руководство. Считывание текста из файла</span><span class="sxs-lookup"><span data-stu-id="f0da3-328">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f0da3-329">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="f0da3-329">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileName">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;char&gt; GetFileName (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;char&gt; GetFileName(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetFileName(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileName (path As ReadOnlySpan(Of Char)) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ReadOnlySpan&lt;char&gt; GetFileName(ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="F#" Value="static member GetFileName : ReadOnlySpan&lt;char&gt; -&gt; ReadOnlySpan&lt;char&gt;" Usage="System.IO.Path.GetFileName path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="f0da3-330">Диапазон только для чтения, содержащий путь, из которого нужно получить имя и расширение файла.</span><span class="sxs-lookup"><span data-stu-id="f0da3-330">A read-only span that contains the path from which to obtain the file name and extension.</span></span></param>
        <summary><span data-ttu-id="f0da3-331">Возвращает имя и расширение файла из пути к файлу, представленного диапазоном символов только для чтения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-331">Returns the file name and extension of a file path that is represented by a read-only character span.</span></span></summary>
        <returns><span data-ttu-id="f0da3-332">Символы, следующие за последним символом разделителя каталогов в пути <paramref name="path" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-332">The characters after the last directory separator character in <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="f0da3-333">Возвращаемый диапазон только для чтения содержит символы пути, следующие за последним разделителем в `path`.</span><span class="sxs-lookup"><span data-stu-id="f0da3-333">The returned read-only span contains the characters of the path that follow the last separator in `path`.</span></span> <span data-ttu-id="f0da3-334">Если последним символом в `path` является символ или разделитель каталога, метод возвращает <xref:System.ReadOnlySpan%601.Empty?displayProperty=nameWithType>значение.</span><span class="sxs-lookup"><span data-stu-id="f0da3-334">If the last character in `path` is a volume or directory separator character, the method returns <xref:System.ReadOnlySpan%601.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f0da3-335">Если `path` не содержит символа разделителя, метод возвращает `path`значение.</span><span class="sxs-lookup"><span data-stu-id="f0da3-335">If `path` contains no separator character, the method returns `path`.</span></span>

         ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="f0da3-336">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="f0da3-336">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileName">
      <MemberSignature Language="C#" Value="public static string GetFileName (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFileName(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetFileName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileName (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFileName(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetFileName : string -&gt; string" Usage="System.IO.Path.GetFileName path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="f0da3-337">Строка пути, из которой нужно получить имя файла и расширение.</span><span class="sxs-lookup"><span data-stu-id="f0da3-337">The path string from which to obtain the file name and extension.</span></span></param>
        <summary><span data-ttu-id="f0da3-338">Возвращает имя файла и расширение указанной строки пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-338">Returns the file name and extension of the specified path string.</span></span></summary>
        <returns><span data-ttu-id="f0da3-339">Символы, следующие за последним символом разделителя каталогов в пути <paramref name="path" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-339">The characters after the last directory separator character in <paramref name="path" />.</span></span> <span data-ttu-id="f0da3-340">Если последним символом параметра <paramref name="path" /> является символ разделения тома или каталога, этот метод возвращает <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-340">If the last character of <paramref name="path" /> is a directory or volume separator character, this method returns <see cref="F:System.String.Empty" />.</span></span> <span data-ttu-id="f0da3-341">Если значением параметра <paramref name="path" /> является <see langword="null" />, метод возвращает <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-341">If <paramref name="path" /> is <see langword="null" />, this method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="f0da3-342">Возвращаемое значение — `null` , если путь к файлу `null`—.</span><span class="sxs-lookup"><span data-stu-id="f0da3-342">The returned value is `null` if the file path is `null`.</span></span>  
  
<span data-ttu-id="f0da3-343">Символы разделения, используемые для определения начала имени файла, — это <xref:System.IO.Path.DirectorySeparatorChar> и. <xref:System.IO.Path.AltDirectorySeparatorChar></span><span class="sxs-lookup"><span data-stu-id="f0da3-343">The separator characters used to determine the start of the file name are <xref:System.IO.Path.DirectorySeparatorChar> and <xref:System.IO.Path.AltDirectorySeparatorChar>.</span></span>  

<span data-ttu-id="f0da3-344">Поскольку *\\* является допустимым именем файла в UNIX, `GetFileName` работа с платформами на платформе UNIX не может правильно вернуть имя файла из пути на основе Windows, например *C\\:\\MyDir MyFile. ext*, `GetFileName` но Работа с платформами на основе Windows может корректно возвращать имя файла из пути на основе UNIX, например */ТМП/мифиле.екст*, поэтому поведение `GetFileName` метода не является строго одинаковым на платформах на базе UNIX и Windows.</span><span class="sxs-lookup"><span data-stu-id="f0da3-344">Because *\\* is a legal file name on Unix, `GetFileName` running under Unix-based platforms cannot correctly return the file name from a Windows-based path like *C:\\mydir\\myfile.ext*, but `GetFileName` running under Windows-based platforms can correctly return the file name from a Unix-based path like */tmp/myfile.ext*, so the behavior of the `GetFileName` method is not strictly the same on Unix-based and Windows-based platforms.</span></span>

<span data-ttu-id="f0da3-345">Список общих задач ввода-вывода см. в разделе [Общие задачи ввода-вывода](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f0da3-345">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0da3-346">В следующем примере демонстрируется поведение `GetFileName` метода на настольной платформе под управлением Windows.</span><span class="sxs-lookup"><span data-stu-id="f0da3-346">The following example demonstrates the behavior of the `GetFileName` method on a Windows-based desktop platform.</span></span>  
  
 [!code-cpp[System.IO.Path Members#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#5)]
 [!code-csharp[System.IO.Path Members#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#5)]
 [!code-vb[System.IO.Path Members#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f0da3-347">Параметр <paramref name="path" /> содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-347"><paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="f0da3-348">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="f0da3-348">File path formats on Windows systems</span></span></related>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f0da3-349">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="f0da3-349">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f0da3-350">Практическое руководство. Считывание текста из файла</span><span class="sxs-lookup"><span data-stu-id="f0da3-350">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f0da3-351">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="f0da3-351">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileNameWithoutExtension">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;char&gt; GetFileNameWithoutExtension (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;char&gt; GetFileNameWithoutExtension(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetFileNameWithoutExtension(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileNameWithoutExtension (path As ReadOnlySpan(Of Char)) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ReadOnlySpan&lt;char&gt; GetFileNameWithoutExtension(ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="F#" Value="static member GetFileNameWithoutExtension : ReadOnlySpan&lt;char&gt; -&gt; ReadOnlySpan&lt;char&gt;" Usage="System.IO.Path.GetFileNameWithoutExtension path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="f0da3-352">Диапазон только для чтения, содержащий путь, из которого нужно получить имя файла без расширения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-352">A read-only span that contains the path from which to obtain the file name without the extension.</span></span></param>
        <summary><span data-ttu-id="f0da3-353">Возвращает имя файла без расширения из пути к файлу, представленного диапазоном символов только для чтения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-353">Returns the file name without the extension of a file path that is represented by a read-only character span.</span></span></summary>
        <returns><span data-ttu-id="f0da3-354">Символы в диапазоне только для чтения, возвращенные методом <see cref="M:System.IO.Path.GetFileName(System.ReadOnlySpan{System.Char})" />, кроме последней точки (.) и всех следующих за ней символов.</span><span class="sxs-lookup"><span data-stu-id="f0da3-354">The characters in the read-only span returned by <see cref="M:System.IO.Path.GetFileName(System.ReadOnlySpan{System.Char})" />, minus the last period (.) and all characters following it.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="f0da3-355">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="f0da3-355">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileNameWithoutExtension">
      <MemberSignature Language="C#" Value="public static string GetFileNameWithoutExtension (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFileNameWithoutExtension(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetFileNameWithoutExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileNameWithoutExtension (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFileNameWithoutExtension(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetFileNameWithoutExtension : string -&gt; string" Usage="System.IO.Path.GetFileNameWithoutExtension path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="f0da3-356">Путь к файлу.</span><span class="sxs-lookup"><span data-stu-id="f0da3-356">The path of the file.</span></span></param>
        <summary><span data-ttu-id="f0da3-357">Возвращает имя файла указанной строки пути без расширения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-357">Returns the file name of the specified path string without the extension.</span></span></summary>
        <returns><span data-ttu-id="f0da3-358">Строка, возвращенная методом <see cref="M:System.IO.Path.GetFileName(System.ReadOnlySpan{System.Char})" />, кроме последней точки (.) и всех следующих за ней символов.</span><span class="sxs-lookup"><span data-stu-id="f0da3-358">The string returned by <see cref="M:System.IO.Path.GetFileName(System.ReadOnlySpan{System.Char})" />, minus the last period (.) and all characters following it.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0da3-359">Этот метод не проверяет существование пути или имени файла.</span><span class="sxs-lookup"><span data-stu-id="f0da3-359">This method does not verify that the path or file name exists.</span></span>  
  
 <span data-ttu-id="f0da3-360">Список общих задач ввода-вывода см. в разделе [Общие задачи ввода-вывода](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f0da3-360">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0da3-361">В следующем примере демонстрируется использование `GetFileNameWithoutExtension` метода.</span><span class="sxs-lookup"><span data-stu-id="f0da3-361">The following example demonstrates a use of the `GetFileNameWithoutExtension` method.</span></span>  
  
 [!code-cpp[System.IO.Path Members#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#6)]
 [!code-csharp[System.IO.Path Members#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#6)]
 [!code-vb[System.IO.Path Members#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f0da3-362">Параметр <paramref name="path" /> содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-362"><paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="f0da3-363">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="f0da3-363">File path formats on Windows systems</span></span></related>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f0da3-364">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="f0da3-364">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f0da3-365">Практическое руководство. Считывание текста из файла</span><span class="sxs-lookup"><span data-stu-id="f0da3-365">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f0da3-366">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="f0da3-366">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFullPath">
      <MemberSignature Language="C#" Value="public static string GetFullPath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFullPath(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetFullPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFullPath (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFullPath(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetFullPath : string -&gt; string" Usage="System.IO.Path.GetFullPath path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="f0da3-367">Файл или каталог, для которых нужно получить сведения об абсолютном пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-367">The file or directory for which to obtain absolute path information.</span></span></param>
        <summary><span data-ttu-id="f0da3-368">Возвращает для указанной строки пути абсолютный путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-368">Returns the absolute path for the specified path string.</span></span></summary>
        <returns><span data-ttu-id="f0da3-369">Полное расположение <paramref name="path" />, например "C:\MyFile.txt".</span><span class="sxs-lookup"><span data-stu-id="f0da3-369">The fully qualified location of <paramref name="path" />, such as "C:\MyFile.txt".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
 <span data-ttu-id="f0da3-370">Абсолютный путь включает все сведения, необходимые для поиска файла или каталога в системе.</span><span class="sxs-lookup"><span data-stu-id="f0da3-370">The absolute path includes all information required to locate a file or directory on a system.</span></span>  
  
 <span data-ttu-id="f0da3-371">Файл или каталог, заданный `path` параметром, не обязательно должен существовать.</span><span class="sxs-lookup"><span data-stu-id="f0da3-371">The file or directory specified by `path` is not required to exist.</span></span> <span data-ttu-id="f0da3-372">Например, если *к:\темп\невдир* является текущим каталогом, вызов `GetFullPath` по имени файла, например *Test. txt* , возвращает *к:\темп\невдир\тест.ткст*.</span><span class="sxs-lookup"><span data-stu-id="f0da3-372">For example, if *c:\temp\newdir* is the current directory, calling `GetFullPath` on a file name such as *test.txt* returns *c:\temp\newdir\test.txt*.</span></span> <span data-ttu-id="f0da3-373">Файл не должен существовать.</span><span class="sxs-lookup"><span data-stu-id="f0da3-373">The file need not exist.</span></span>  

> [!IMPORTANT]
> <span data-ttu-id="f0da3-374">Если `path` является относительным путем, эта перегрузка возвращает полный путь, который может быть основан на текущем диске и текущем каталоге.</span><span class="sxs-lookup"><span data-stu-id="f0da3-374">If `path` is a relative path, this overload returns a fully qualified path that can be based on the current drive and current directory.</span></span> <span data-ttu-id="f0da3-375">Текущий диск и текущий каталог могут измениться в любое время при выполнении приложения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-375">The current drive and current directory can change at any time as an application executes.</span></span> <span data-ttu-id="f0da3-376">В результате путь, возвращаемый этой перегрузкой, не может быть определен заранее.</span><span class="sxs-lookup"><span data-stu-id="f0da3-376">As a result, the path returned by this overload cannot be determined in advance.</span></span> <span data-ttu-id="f0da3-377">Чтобы получить детерминированный путь, вызовите <xref:System.IO.Path.GetFullPath(System.String,System.String)> перегрузку.</span><span class="sxs-lookup"><span data-stu-id="f0da3-377">To return a deterministic path, call the <xref:System.IO.Path.GetFullPath(System.String,System.String)> overload.</span></span> <span data-ttu-id="f0da3-378">Можно также вызвать <xref:System.IO.Path.IsPathFullyQualified%2A> метод, чтобы определить, является ли путь полным или относительным, и, следовательно, требуется `GetFullPath` ли вызов.</span><span class="sxs-lookup"><span data-stu-id="f0da3-378">You can also call the <xref:System.IO.Path.IsPathFullyQualified%2A> method to determine whether a path is fully qualified or relative and therefore whether a call to `GetFullPath` is necessary.</span></span>

 <span data-ttu-id="f0da3-379">Однако если `path` существует, вызывающий объект должен иметь разрешение на получение сведений о пути для `path`.</span><span class="sxs-lookup"><span data-stu-id="f0da3-379">However, if `path` does exist, the caller must have permission to obtain path information for `path`.</span></span> <span data-ttu-id="f0da3-380">Обратите внимание, что, в отличие <xref:System.IO.Path> от большинства членов класса, этот метод обращается к файловой системе.</span><span class="sxs-lookup"><span data-stu-id="f0da3-380">Note that unlike most members of the <xref:System.IO.Path> class, this method accesses the file system.</span></span>  
  
 <span data-ttu-id="f0da3-381">Этот метод использует сведения о текущем каталоге и текущем томе для полной квалификации `path`.</span><span class="sxs-lookup"><span data-stu-id="f0da3-381">This method uses the current directory and current volume information to fully qualify `path`.</span></span> <span data-ttu-id="f0da3-382">Если указать имя файла только в `path`, `GetFullPath` возвращает полный путь к текущему каталогу.</span><span class="sxs-lookup"><span data-stu-id="f0da3-382">If you specify a file name only in `path`, `GetFullPath` returns the fully qualified path of the current directory.</span></span>  
  
 <span data-ttu-id="f0da3-383">Если передать короткое имя файла, оно будет расширено до длинного имени файла.</span><span class="sxs-lookup"><span data-stu-id="f0da3-383">If you pass in a short file name, it is expanded to a long file name.</span></span>  
  
 <span data-ttu-id="f0da3-384">Если путь не содержит значащих символов, он является недопустимым, если он не содержит один или несколько символов ".", за которыми следует любое количество пробелов; Затем он будет проанализирован как "." или "..".</span><span class="sxs-lookup"><span data-stu-id="f0da3-384">If a path contains no significant characters, it is invalid unless it contains one or more "." characters followed by any number of spaces; then it will be parsed as either "." or "..".</span></span>  

<span data-ttu-id="f0da3-385">.NET Core 1,1 и более поздние версии и .NET Framework 4.6.2 и более поздних версий также поддерживают пути, включающие имена\\устройств, например\""? \c:.</span><span class="sxs-lookup"><span data-stu-id="f0da3-385">.NET Core 1.1 and later versions and .NET Framework 4.6.2 and later versions also support paths that include device names, such as "\\?\C:\".</span></span>

<span data-ttu-id="f0da3-386">Дополнительные сведения о форматах путей к файлам в Windows см. в разделе [форматы путей к файлам в системах Windows](~/docs/standard/io/file-path-formats.md).</span><span class="sxs-lookup"><span data-stu-id="f0da3-386">For more information on file path formats on Windows, see [File path formats on Windows systems](~/docs/standard/io/file-path-formats.md).</span></span> <span data-ttu-id="f0da3-387">Список общих задач ввода-вывода см. в разделе [Общие задачи ввода-вывода](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f0da3-387">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>
  
## Examples  
 <span data-ttu-id="f0da3-388">В следующем примере демонстрируется `GetFullPath` метод на платформе настольных компьютеров под управлением Windows.</span><span class="sxs-lookup"><span data-stu-id="f0da3-388">The following example demonstrates the `GetFullPath` method on a Windows-based desktop platform.</span></span>  
  
 [!code-cpp[System.IO.Path Members#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#7)]
 [!code-csharp[System.IO.Path Members#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#7)]
 [!code-vb[System.IO.Path Members#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f0da3-389"><paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или один или несколько недопустимых символов, как указано в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-389"><paramref name="path" /> is a zero-length string, contains only white space, or contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span>  
  
<span data-ttu-id="f0da3-390">-или-</span><span class="sxs-lookup"><span data-stu-id="f0da3-390">-or-</span></span> 
<span data-ttu-id="f0da3-391">Система не может извлечь абсолютный путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-391">The system could not retrieve the absolute path.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f0da3-392">У вызывающего объекта отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-392">The caller does not have the required permissions.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f0da3-393"><paramref name="path" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-393"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f0da3-394"><paramref name="path" /> содержит двоеточие (:), которое не является частью идентификатора тома (например, "c:\\").</span><span class="sxs-lookup"><span data-stu-id="f0da3-394"><paramref name="path" /> contains a colon (":") that is not part of a volume identifier (for example, "c:\\").</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="f0da3-395">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</span><span class="sxs-lookup"><span data-stu-id="f0da3-395">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="f0da3-396">для доступа к пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-396">for access to the path.</span></span></permission>
        <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="f0da3-397">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="f0da3-397">File path formats on Windows systems</span></span></related>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f0da3-398">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="f0da3-398">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f0da3-399">Практическое руководство. Считывание текста из файла</span><span class="sxs-lookup"><span data-stu-id="f0da3-399">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f0da3-400">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="f0da3-400">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFullPath">
      <MemberSignature Language="C#" Value="public static string GetFullPath (string path, string basePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFullPath(string path, string basePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetFullPath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFullPath (path As String, basePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFullPath(System::String ^ path, System::String ^ basePath);" />
      <MemberSignature Language="F#" Value="static member GetFullPath : string * string -&gt; string" Usage="System.IO.Path.GetFullPath (path, basePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="basePath" Type="System.String" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="f0da3-401">Относительный путь для сцепления с <paramref name="basePath" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-401">A relative path to concatenate to <paramref name="basePath" />.</span></span></param>
        <param name="basePath"><span data-ttu-id="f0da3-402">Начало полного пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-402">The beginning of a fully qualified path.</span></span></param>
        <summary><span data-ttu-id="f0da3-403">Возвращает абсолютный путь из базового полного пути и относительного пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-403">Returns an absolute path from a fully qualified base path and a relative path.</span></span></summary>
        <returns><span data-ttu-id="f0da3-404">Абсолютный путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-404">The absolute path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="f0da3-405">Если `path` является пустым путем, метод возвращает `basePath`значение.</span><span class="sxs-lookup"><span data-stu-id="f0da3-405">If `path` is an empty path, the method returns `basePath`.</span></span> <span data-ttu-id="f0da3-406">Если `path` является полным путем, метод передает `path` <xref:System.IO.Path.GetFullPath(System.String)> метод и возвращает результат.</span><span class="sxs-lookup"><span data-stu-id="f0da3-406">If `path` is a fully qualified path, the method passes `path` to the <xref:System.IO.Path.GetFullPath(System.String)> method and returns the result.</span></span>

<span data-ttu-id="f0da3-407">Этот метод используется для возврата детерминированного пути на основе указанного тома и корневого каталога при использовании относительных путей.</span><span class="sxs-lookup"><span data-stu-id="f0da3-407">Use this method to return a deterministic path based on a specified volume and rooted directory when you're using relative paths.</span></span> <span data-ttu-id="f0da3-408">Использование предопределенной `basePath` , а не на основе текущего каталога диска предотвращает нежелательные пути к файлам, вызванные непредвиденными изменениями в текущем диске и каталоге.</span><span class="sxs-lookup"><span data-stu-id="f0da3-408">Using a predefined `basePath` rather than one based on the current drive directory guards against unwanted file paths caused by unexpected changes in the current drive and directory.</span></span> 

## <a name="example"></a><span data-ttu-id="f0da3-409">Пример</span><span class="sxs-lookup"><span data-stu-id="f0da3-409">Example</span></span>

<span data-ttu-id="f0da3-410">В следующем примере определяется переменная, `basePath`для представления текущего каталога приложения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-410">The following example defines a variable, `basePath`, to represent an application's current directory.</span></span> <span data-ttu-id="f0da3-411">Затем он передает его `GetFullPath` методу, чтобы получить полный путь к каталогу данных приложения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-411">It then passes it to the `GetFullPath` method to get a fully qualified path to the application's data directory.</span></span>

[!code-csharp[Path.GetFullPath(String,String)](~/samples/snippets/csharp/api/system.io/path/getfullpath/program.cs)] 
[!code-vb[Path.GetFullPath(String,String)](~/samples/snippets/visualbasic/api/system.io/path/getfullpath/program.vb)] 

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f0da3-412">Значение параметра <paramref name="path" /> или <paramref name="basePath" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-412"><paramref name="path" /> or <paramref name="basePath" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f0da3-413"><paramref name="basePath" /> — это не полный путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-413"><paramref name="basePath" /> is not a fully qualified path.</span></span>

<span data-ttu-id="f0da3-414">-или-</span><span class="sxs-lookup"><span data-stu-id="f0da3-414">-or-</span></span>

<span data-ttu-id="f0da3-415"><paramref name="path" /> или <paramref name="basePath" /> содержит недопустимые символы, такие как U+0000.</span><span class="sxs-lookup"><span data-stu-id="f0da3-415"><paramref name="path" /> or <paramref name="basePath" /> contains invalid path characters, such as U+0000.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInvalidFileNameChars">
      <MemberSignature Language="C#" Value="public static char[] GetInvalidFileNameChars ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char[] GetInvalidFileNameChars() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetInvalidFileNameChars" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInvalidFileNameChars () As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;char&gt; ^ GetInvalidFileNameChars();" />
      <MemberSignature Language="F#" Value="static member GetInvalidFileNameChars : unit -&gt; char[]" Usage="System.IO.Path.GetInvalidFileNameChars " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f0da3-416">Возвращает массив, содержащий символы, которые не разрешены в именах файлов.</span><span class="sxs-lookup"><span data-stu-id="f0da3-416">Gets an array containing the characters that are not allowed in file names.</span></span></summary>
        <returns><span data-ttu-id="f0da3-417">Массив, содержащий символы, которые не разрешены в именах файлов.</span><span class="sxs-lookup"><span data-stu-id="f0da3-417">An array containing the characters that are not allowed in file names.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0da3-418">Массив, возвращаемый из этого метода, не обязательно должен содержать полный набор символов, недопустимых в именах файлов и каталогов.</span><span class="sxs-lookup"><span data-stu-id="f0da3-418">The array returned from this method is not guaranteed to contain the complete set of characters that are invalid in file and directory names.</span></span> <span data-ttu-id="f0da3-419">Полный набор недопустимых символов может зависеть от файловой системы.</span><span class="sxs-lookup"><span data-stu-id="f0da3-419">The full set of invalid characters can vary by file system.</span></span> <span data-ttu-id="f0da3-420">Например, на настольных платформах Windows недопустимые символы пути могут содержать символы ASCII/Unicode от 1 до 31, а также кавычки ("), меньше\<(), больше чем (>), pipe&#124;(), Backspace (\b), null (\ 0) и Tab (\t).</span><span class="sxs-lookup"><span data-stu-id="f0da3-420">For example, on Windows-based desktop platforms, invalid path characters might include ASCII/Unicode characters 1 through 31, as well as quote ("), less than (\<), greater than (>), pipe (&#124;), backspace (\b), null (\0) and tab (\t).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0da3-421">В следующем примере демонстрируется <xref:System.IO.Path.GetInvalidFileNameChars%2A> метод <xref:System.IO.Path.GetInvalidPathChars%2A> и метод для получения недопустимых символов.</span><span class="sxs-lookup"><span data-stu-id="f0da3-421">The following example demonstrates the <xref:System.IO.Path.GetInvalidFileNameChars%2A> method and the <xref:System.IO.Path.GetInvalidPathChars%2A> method to retrieve invalid characters.</span></span>  
  
 [!code-cpp[IO.Path.GetInvalidFile-PathChars#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.Path.GetInvalidFile-PathChars/cpp/example.cpp#1)]
 [!code-csharp[IO.Path.GetInvalidFile-PathChars#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Path.GetInvalidFile-PathChars/CS/example.cs#1)]
 [!code-vb[IO.Path.GetInvalidFile-PathChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Path.GetInvalidFile-PathChars/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInvalidPathChars">
      <MemberSignature Language="C#" Value="public static char[] GetInvalidPathChars ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char[] GetInvalidPathChars() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetInvalidPathChars" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInvalidPathChars () As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;char&gt; ^ GetInvalidPathChars();" />
      <MemberSignature Language="F#" Value="static member GetInvalidPathChars : unit -&gt; char[]" Usage="System.IO.Path.GetInvalidPathChars " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f0da3-422">Возвращает массив, содержащий символы, которые не разрешены в именах путей.</span><span class="sxs-lookup"><span data-stu-id="f0da3-422">Gets an array containing the characters that are not allowed in path names.</span></span></summary>
        <returns><span data-ttu-id="f0da3-423">Массив, содержащий символы, которые не разрешены в именах путей.</span><span class="sxs-lookup"><span data-stu-id="f0da3-423">An array containing the characters that are not allowed in path names.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0da3-424">Массив, возвращаемый из этого метода, не обязательно должен содержать полный набор символов, недопустимых в именах файлов и каталогов.</span><span class="sxs-lookup"><span data-stu-id="f0da3-424">The array returned from this method is not guaranteed to contain the complete set of characters that are invalid in file and directory names.</span></span> <span data-ttu-id="f0da3-425">Полный набор недопустимых символов может зависеть от файловой системы.</span><span class="sxs-lookup"><span data-stu-id="f0da3-425">The full set of invalid characters can vary by file system.</span></span> <span data-ttu-id="f0da3-426">Например, на настольных платформах Windows недопустимые символы пути могут содержать символы ASCII/Unicode от 1 до 31, а также кавычки ("), меньше\<(), больше чем (>), pipe&#124;(), Backspace (\b), null (\ 0) и Tab (\t).</span><span class="sxs-lookup"><span data-stu-id="f0da3-426">For example, on Windows-based desktop platforms, invalid path characters might include ASCII/Unicode characters 1 through 31, as well as quote ("), less than (\<), greater than (>), pipe (&#124;), backspace (\b), null (\0) and tab (\t).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0da3-427">В следующем примере демонстрируется <xref:System.IO.Path.GetInvalidFileNameChars%2A> метод <xref:System.IO.Path.GetInvalidPathChars%2A> и метод для получения недопустимых символов.</span><span class="sxs-lookup"><span data-stu-id="f0da3-427">The following example demonstrates the <xref:System.IO.Path.GetInvalidFileNameChars%2A> method and the <xref:System.IO.Path.GetInvalidPathChars%2A> method to retrieve invalid characters.</span></span>  
  
 [!code-cpp[IO.Path.GetInvalidFile-PathChars#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.Path.GetInvalidFile-PathChars/cpp/example.cpp#1)]
 [!code-csharp[IO.Path.GetInvalidFile-PathChars#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Path.GetInvalidFile-PathChars/CS/example.cs#1)]
 [!code-vb[IO.Path.GetInvalidFile-PathChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Path.GetInvalidFile-PathChars/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPathRoot">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;char&gt; GetPathRoot (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;char&gt; GetPathRoot(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetPathRoot(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPathRoot (path As ReadOnlySpan(Of Char)) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ReadOnlySpan&lt;char&gt; GetPathRoot(ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="F#" Value="static member GetPathRoot : ReadOnlySpan&lt;char&gt; -&gt; ReadOnlySpan&lt;char&gt;" Usage="System.IO.Path.GetPathRoot path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="f0da3-428">Путь, из которого нужно получить сведения о корневом каталоге.</span><span class="sxs-lookup"><span data-stu-id="f0da3-428">The path from which to obtain root directory information.</span></span></param>
        <summary><span data-ttu-id="f0da3-429">Получает сведения о корневом каталоге из пути, содержащегося в указанном диапазоне символов.</span><span class="sxs-lookup"><span data-stu-id="f0da3-429">Gets the root directory information from the path contained in the specified character span.</span></span></summary>
        <returns><span data-ttu-id="f0da3-430">Диапазон символов, содержащий корневой каталог пути `path`.</span><span class="sxs-lookup"><span data-stu-id="f0da3-430">A character span containing the root directory of `path`.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="f0da3-431">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="f0da3-431">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetPathRoot">
      <MemberSignature Language="C#" Value="public static string GetPathRoot (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPathRoot(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetPathRoot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPathRoot (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPathRoot(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetPathRoot : string -&gt; string" Usage="System.IO.Path.GetPathRoot path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="f0da3-432">Путь, из которого нужно получить сведения о корневом каталоге.</span><span class="sxs-lookup"><span data-stu-id="f0da3-432">The path from which to obtain root directory information.</span></span></param>
        <summary><span data-ttu-id="f0da3-433">Возвращает сведения о корневом каталоге для указанного пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-433">Gets the root directory information of the specified path.</span></span></summary>
        <returns><span data-ttu-id="f0da3-434">Корневой каталог параметра <paramref name="path" /> или <see langword="null" />, если параметр <paramref name="path" /> имеет значение <see langword="null" />, или пустая строка, если параметр <paramref name="path" /> не содержит сведений о корневом каталоге.</span><span class="sxs-lookup"><span data-stu-id="f0da3-434">The root directory of <paramref name="path" />, or <see langword="null" /> if <paramref name="path" /> is <see langword="null" />, or an empty string if <paramref name="path" /> does not contain root directory information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0da3-435">Этот метод не проверяет существование пути или имени файла.</span><span class="sxs-lookup"><span data-stu-id="f0da3-435">This method does not verify that the path or file name exists.</span></span>  
  
 <span data-ttu-id="f0da3-436">Ниже приведены возможные шаблоны для строки, возвращаемой этим методом.</span><span class="sxs-lookup"><span data-stu-id="f0da3-436">Possible patterns for the string returned by this method are as follows:</span></span>  
  
- <span data-ttu-id="f0da3-437">Пустая строка (`path` указан относительный путь на текущем диске или томе).</span><span class="sxs-lookup"><span data-stu-id="f0da3-437">An empty string (`path` specified a relative path on the current drive or volume).</span></span>  
  
- <span data-ttu-id="f0da3-438">"\" (`path` указан абсолютный путь на текущем диске).</span><span class="sxs-lookup"><span data-stu-id="f0da3-438">"\" (`path` specified an absolute path on the current drive).</span></span>  
  
- <span data-ttu-id="f0da3-439">"X:" (`path` указывает относительный путь на диске, где X представляет букву диска или тома).</span><span class="sxs-lookup"><span data-stu-id="f0da3-439">"X:" (`path` specified a relative path on a drive, where X represents a drive or volume letter).</span></span>  
  
- <span data-ttu-id="f0da3-440">"X:\" (`path` указан абсолютный путь на заданном диске).</span><span class="sxs-lookup"><span data-stu-id="f0da3-440">"X:\" (`path` specified an absolute path on a given drive).</span></span>  
  
- <span data-ttu-id="f0da3-441">"\\\Компутернаме\шаредфолдер" (UNC-путь).</span><span class="sxs-lookup"><span data-stu-id="f0da3-441">"\\\ComputerName\SharedFolder" (a UNC path).</span></span>  
  
- <span data-ttu-id="f0da3-442">"\\\C:"\?(путь к устройству DOS, поддерживаемый в .NET Core 1,1 и более поздних версиях и в .NET Framework 4.6.2 и более поздних версиях)\\</span><span class="sxs-lookup"><span data-stu-id="f0da3-442">"\\\\\?\C:" (a DOS device path, supported in .NET Core 1.1 and later versions and in .NET Framework 4.6.2 and later versions)</span></span>
   
 <span data-ttu-id="f0da3-443">Дополнительные сведения о путях к файлам в Windows см. в разделе [форматы путей к файлам в системах Windows](~/docs/standard/io/file-path-formats.md).</span><span class="sxs-lookup"><span data-stu-id="f0da3-443">For more information on file paths on Windows, see [File path formats on Windows systems](~/docs/standard/io/file-path-formats.md).</span></span> <span data-ttu-id="f0da3-444">Список общих задач ввода-вывода см. в разделе [Общие задачи ввода-вывода](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f0da3-444">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
## Examples  
 <span data-ttu-id="f0da3-445">В следующем примере демонстрируется использование `GetPathRoot` метода.</span><span class="sxs-lookup"><span data-stu-id="f0da3-445">The following example demonstrates a use of the `GetPathRoot` method.</span></span>  
  
 [!code-cpp[System.IO.Path Members#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#8)]
 [!code-csharp[System.IO.Path Members#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#8)]
 [!code-vb[System.IO.Path Members#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f0da3-446">Параметр <paramref name="path" /> содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-446"><paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span>  
  
<span data-ttu-id="f0da3-447">- или -</span><span class="sxs-lookup"><span data-stu-id="f0da3-447">-or-</span></span> 
 <span data-ttu-id="f0da3-448">Компонент <see cref="F:System.String.Empty" /> был передан в <paramref name="path" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-448"><see cref="F:System.String.Empty" /> was passed to <paramref name="path" />.</span></span></exception>
        <related type="article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="f0da3-449">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="f0da3-449">File path formats on Windows systems</span></span></related>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f0da3-450">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="f0da3-450">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f0da3-451">Практическое руководство. Считывание текста из файла</span><span class="sxs-lookup"><span data-stu-id="f0da3-451">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f0da3-452">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="f0da3-452">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetRandomFileName">
      <MemberSignature Language="C#" Value="public static string GetRandomFileName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetRandomFileName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetRandomFileName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRandomFileName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetRandomFileName();" />
      <MemberSignature Language="F#" Value="static member GetRandomFileName : unit -&gt; string" Usage="System.IO.Path.GetRandomFileName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f0da3-453">Возвращает произвольное имя каталога или файла.</span><span class="sxs-lookup"><span data-stu-id="f0da3-453">Returns a random folder name or file name.</span></span></summary>
        <returns><span data-ttu-id="f0da3-454">Произвольное имя каталога или файла.</span><span class="sxs-lookup"><span data-stu-id="f0da3-454">A random folder name or file name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0da3-455"><xref:System.IO.Path.GetRandomFileName%2A> Метод возвращает криптографически надежную, случайную строку, которую можно использовать как имя папки или имя файла.</span><span class="sxs-lookup"><span data-stu-id="f0da3-455">The <xref:System.IO.Path.GetRandomFileName%2A> method returns a cryptographically strong, random string that can be used as either a folder name or a file name.</span></span> <span data-ttu-id="f0da3-456">В отличие <xref:System.IO.Path.GetTempFileName%2A>от <xref:System.IO.Path.GetRandomFileName%2A> , не создает файл.</span><span class="sxs-lookup"><span data-stu-id="f0da3-456">Unlike <xref:System.IO.Path.GetTempFileName%2A>, <xref:System.IO.Path.GetRandomFileName%2A> does not create a file.</span></span> <span data-ttu-id="f0da3-457">Когда безопасность файловой системы имеет первостепенное значение, этот метод следует использовать вместо <xref:System.IO.Path.GetTempFileName%2A>.</span><span class="sxs-lookup"><span data-stu-id="f0da3-457">When the security of your file system is paramount, this method should be used instead of <xref:System.IO.Path.GetTempFileName%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0da3-458">В следующем примере показаны выходные данные <xref:System.IO.Path.GetRandomFileName%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="f0da3-458">The following example show output from the <xref:System.IO.Path.GetRandomFileName%2A> method.</span></span>  
  
 [!code-csharp[System.IO.Path Members#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers20.cs#20)]
 [!code-vb[System.IO.Path Members#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers20.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelativePath">
      <MemberSignature Language="C#" Value="public static string GetRelativePath (string relativeTo, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetRelativePath(string relativeTo, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetRelativePath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRelativePath (relativeTo As String, path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetRelativePath(System::String ^ relativeTo, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetRelativePath : string * string -&gt; string" Usage="System.IO.Path.GetRelativePath (relativeTo, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="path" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="relativeTo"><span data-ttu-id="f0da3-459">Исходный путь, относительно которого должен указываться результат.</span><span class="sxs-lookup"><span data-stu-id="f0da3-459">The source path the result should be relative to.</span></span> <span data-ttu-id="f0da3-460">Этот путь всегда считается каталогом.</span><span class="sxs-lookup"><span data-stu-id="f0da3-460">This path is always considered to be a directory.</span></span></param>
        <param name="path"><span data-ttu-id="f0da3-461">Целевой путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-461">The destination path.</span></span></param>
        <summary><span data-ttu-id="f0da3-462">Возвращает относительный путь от одного пути к другому.</span><span class="sxs-lookup"><span data-stu-id="f0da3-462">Returns a relative path from one path to another.</span></span></summary>
        <returns><span data-ttu-id="f0da3-463">Относительный путь или <paramref name="path" />, если в нескольких путях используются разные корневые папки.</span><span class="sxs-lookup"><span data-stu-id="f0da3-463">The relative path, or <paramref name="path" /> if the paths don't share the same root.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="f0da3-464">Пути разрешаются путем вызова <xref:System.IO.Path.GetFullPath%2A> метода перед вычислением разницы.</span><span class="sxs-lookup"><span data-stu-id="f0da3-464">Paths are resolved by calling the <xref:System.IO.Path.GetFullPath%2A> method before calculating the difference.</span></span> <span data-ttu-id="f0da3-465">Метод использует сравнение по пути к файлам по умолчанию для текущей платформы<xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType> (для Windows и MacOs <xref:System.StringComparison.Ordinal?displayProperty=nameWithType> для Linux).</span><span class="sxs-lookup"><span data-stu-id="f0da3-465">The method uses the default file path comparison for the current platform (<xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType> for Windows and MacOs, <xref:System.StringComparison.Ordinal?displayProperty=nameWithType> for Linux.</span></span> 

         ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f0da3-466">Значение параметра <paramref name="relativeTo" /> или <paramref name="path" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-466"><paramref name="relativeTo" /> or <paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <related type="article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="f0da3-467">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="f0da3-467">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetTempFileName">
      <MemberSignature Language="C#" Value="public static string GetTempFileName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTempFileName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetTempFileName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTempFileName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTempFileName();" />
      <MemberSignature Language="F#" Value="static member GetTempFileName : unit -&gt; string" Usage="System.IO.Path.GetTempFileName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f0da3-468">Создает на диске временный пустой файл с уникальным именем и возвращает полный путь этого файла.</span><span class="sxs-lookup"><span data-stu-id="f0da3-468">Creates a uniquely named, zero-byte temporary file on disk and returns the full path of that file.</span></span></summary>
        <returns><span data-ttu-id="f0da3-469">Полный путь к временному файлу.</span><span class="sxs-lookup"><span data-stu-id="f0da3-469">The full path of the temporary file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0da3-470">Этот метод создает временный файл с. Расширение файла TMP.</span><span class="sxs-lookup"><span data-stu-id="f0da3-470">This method creates a temporary file with a .TMP file extension.</span></span> <span data-ttu-id="f0da3-471">Временный файл создается во временной папке пользователя, которая является путем, возвращаемым <xref:System.IO.Path.GetTempPath%2A> методом.</span><span class="sxs-lookup"><span data-stu-id="f0da3-471">The temporary file is created within the user's temporary folder, which is the path returned by the <xref:System.IO.Path.GetTempPath%2A> method.</span></span>  
  
 <span data-ttu-id="f0da3-472">Метод вызовет исключение, <xref:System.IO.IOException> если он используется для создания более чем 65535 файлов без удаления предыдущих временных файлов. <xref:System.IO.Path.GetTempFileName%2A></span><span class="sxs-lookup"><span data-stu-id="f0da3-472">The <xref:System.IO.Path.GetTempFileName%2A> method will raise an <xref:System.IO.IOException> if it is used to create more than 65535 files without deleting previous temporary files.</span></span>  
  
 <span data-ttu-id="f0da3-473">Метод вызовет исключение, <xref:System.IO.IOException> если уникальное имя временного файла недоступно. <xref:System.IO.Path.GetTempFileName%2A></span><span class="sxs-lookup"><span data-stu-id="f0da3-473">The <xref:System.IO.Path.GetTempFileName%2A> method will raise an <xref:System.IO.IOException> if no unique temporary file name is available.</span></span> <span data-ttu-id="f0da3-474">Чтобы устранить эту ошибку, удалите все ненужные временные файлы.</span><span class="sxs-lookup"><span data-stu-id="f0da3-474">To resolve this error, delete all unneeded temporary files.</span></span>  
  
 <span data-ttu-id="f0da3-475">Список общих задач ввода-вывода см. в разделе [Общие задачи ввода-вывода](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f0da3-475">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="f0da3-476">Возникает ошибка ввода-вывода, например, отсутствует уникальное имя временного файла.</span><span class="sxs-lookup"><span data-stu-id="f0da3-476">An I/O error occurs, such as no unique temporary file name is available.</span></span>  
  
<span data-ttu-id="f0da3-477">-или-</span><span class="sxs-lookup"><span data-stu-id="f0da3-477">-or-</span></span>
  
 <span data-ttu-id="f0da3-478">Этот метод не смог создать временный файл.</span><span class="sxs-lookup"><span data-stu-id="f0da3-478">This method was unable to create a temporary file.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="f0da3-479">для записи во временный каталог.</span><span class="sxs-lookup"><span data-stu-id="f0da3-479">for writing to the temporary directory.</span></span> <span data-ttu-id="f0da3-480">Связанное перечисление:<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="f0da3-480">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f0da3-481">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="f0da3-481">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f0da3-482">Практическое руководство. Считывание текста из файла</span><span class="sxs-lookup"><span data-stu-id="f0da3-482">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f0da3-483">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="f0da3-483">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetTempPath">
      <MemberSignature Language="C#" Value="public static string GetTempPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTempPath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetTempPath" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTempPath () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTempPath();" />
      <MemberSignature Language="F#" Value="static member GetTempPath : unit -&gt; string" Usage="System.IO.Path.GetTempPath " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f0da3-484">Возвращает путь к временной папке текущего пользователя.</span><span class="sxs-lookup"><span data-stu-id="f0da3-484">Returns the path of the current user's temporary folder.</span></span></summary>
        <returns><span data-ttu-id="f0da3-485">Путь к временной папке, заканчивающийся обратной косой чертой.</span><span class="sxs-lookup"><span data-stu-id="f0da3-485">The path to the temporary folder, ending with a backslash.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0da3-486">Этот метод проверяет наличие переменных среды в следующем порядке и использует первый найденный путь:</span><span class="sxs-lookup"><span data-stu-id="f0da3-486">This method checks for the existence of environment variables in the following order and uses the first path found:</span></span>  
  
1.  <span data-ttu-id="f0da3-487">Путь, заданный переменной среды TMP.</span><span class="sxs-lookup"><span data-stu-id="f0da3-487">The path specified by the TMP environment variable.</span></span>  
  
2.  <span data-ttu-id="f0da3-488">Путь, заданный переменной среды TEMP.</span><span class="sxs-lookup"><span data-stu-id="f0da3-488">The path specified by the TEMP environment variable.</span></span>  
  
3.  <span data-ttu-id="f0da3-489">Путь, заданный переменной среды USERPROFILE.</span><span class="sxs-lookup"><span data-stu-id="f0da3-489">The path specified by the USERPROFILE environment variable.</span></span>  
  
4.  <span data-ttu-id="f0da3-490">Каталог Windows.</span><span class="sxs-lookup"><span data-stu-id="f0da3-490">The Windows directory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0da3-491">В следующем примере кода демонстрируется вызов метода <xref:System.IO.Path.GetTempPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="f0da3-491">The following code shows how to call the <xref:System.IO.Path.GetTempPath%2A> method.</span></span>  
  
```vb  
result As String = Path.GetTempPath()  
Console.WriteLine(result)  
```  
  
```csharp  
string result = Path.GetTempPath();  
Console.WriteLine(result);  
```  
  
 <span data-ttu-id="f0da3-492">В этом примере создаются выходные данные, аналогичные приведенным ниже.</span><span class="sxs-lookup"><span data-stu-id="f0da3-492">This example produces output similar to the following.</span></span>  
  
```  
C:\Users\UserName\AppData\Local\Temp\  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f0da3-493">У вызывающего объекта отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-493">The caller does not have the required permissions.</span></span></exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="f0da3-494">для неограниченного доступа к переменным среды.</span><span class="sxs-lookup"><span data-stu-id="f0da3-494">for unrestricted access to environment variables.</span></span> <span data-ttu-id="f0da3-495">Связанное перечисление:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="f0da3-495">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f0da3-496">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="f0da3-496">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f0da3-497">Практическое руководство. Считывание текста из файла</span><span class="sxs-lookup"><span data-stu-id="f0da3-497">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f0da3-498">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="f0da3-498">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HasExtension">
      <MemberSignature Language="C#" Value="public static bool HasExtension (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasExtension(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.HasExtension(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HasExtension (path As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool HasExtension(ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="F#" Value="static member HasExtension : ReadOnlySpan&lt;char&gt; -&gt; bool" Usage="System.IO.Path.HasExtension path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="f0da3-499">Путь для поиска расширения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-499">The path to search for an extension.</span></span></param>
        <summary><span data-ttu-id="f0da3-500">Определяет, включает ли путь, представленный указанным диапазоном символов, расширение имени файла.</span><span class="sxs-lookup"><span data-stu-id="f0da3-500">Determines whether the path represented by the specified character span includes a file name extension.</span></span></summary>
        <returns><span data-ttu-id="f0da3-501">Значение <see langword="true" />, если символы, следующие за последним символом разделителя каталогов или за разделителем томов (:) в пути, включают точку (.), за которой следует один или несколько символов. В противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-501"><see langword="true" /> if the characters that follow the last directory separator character or volume separator in the path include a period (".") followed by one or more characters; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="f0da3-502">Завершающий период в `path` не считается расширением.</span><span class="sxs-lookup"><span data-stu-id="f0da3-502">A trailing period in `path` is not considered an extension.</span></span>

         ]]></format>
        </remarks>
        <related type="article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="f0da3-503">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="f0da3-503">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HasExtension">
      <MemberSignature Language="C#" Value="public static bool HasExtension (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasExtension(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.HasExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HasExtension (path As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool HasExtension(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member HasExtension : string -&gt; bool" Usage="System.IO.Path.HasExtension path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="f0da3-504">Путь для поиска расширения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-504">The path to search for an extension.</span></span></param>
        <summary><span data-ttu-id="f0da3-505">Определяет, включает ли путь расширение имени файла.</span><span class="sxs-lookup"><span data-stu-id="f0da3-505">Determines whether a path includes a file name extension.</span></span></summary>
        <returns><span data-ttu-id="f0da3-506">Значение <see langword="true" />, если знаки, следующие за последним разделителем каталога (\\\ или /) или разделителем тома (:) в пути, включают точку (.), за которой следует один или несколько символов. В противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-506"><see langword="true" /> if the characters that follow the last directory separator (\\\ or /) or volume separator (:) in the path include a period (.) followed by one or more characters; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0da3-507">Начиная с конца `path`, этот метод ищет точку (.), за которой следует хотя бы один символ.</span><span class="sxs-lookup"><span data-stu-id="f0da3-507">Starting from the end of `path`, this method searches for a period (.) followed by at least one character.</span></span> <span data-ttu-id="f0da3-508">Если этот шаблон найден перед <xref:System.IO.Path.DirectorySeparatorChar>обнаруженным символом, <xref:System.IO.Path.VolumeSeparatorChar> <xref:System.IO.Path.AltDirectorySeparatorChar>или, этот метод возвращает значение `true`.</span><span class="sxs-lookup"><span data-stu-id="f0da3-508">If this pattern is found before a <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, or <xref:System.IO.Path.VolumeSeparatorChar> character is encountered, this method returns `true`.</span></span>  
  
 <span data-ttu-id="f0da3-509">Список общих задач ввода-вывода см. в разделе [Общие задачи ввода-вывода](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f0da3-509">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0da3-510">В следующем примере иллюстрируется использование метода `HasExtension`.</span><span class="sxs-lookup"><span data-stu-id="f0da3-510">The following example demonstrates the use of the `HasExtension` method.</span></span>  
  
 [!code-cpp[System.IO.Path Members#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#11)]
 [!code-csharp[System.IO.Path Members#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#11)]
 [!code-vb[System.IO.Path Members#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f0da3-511">Параметр <paramref name="path" /> содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-511"><paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></exception>
        <related type="article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="f0da3-512">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="f0da3-512">File path formats on Windows systems</span></span></related>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f0da3-513">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="f0da3-513">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f0da3-514">Практическое руководство. Считывание текста из файла</span><span class="sxs-lookup"><span data-stu-id="f0da3-514">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f0da3-515">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="f0da3-515">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InvalidPathChars">
      <MemberSignature Language="C#" Value="public static readonly char[] InvalidPathChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly char[] InvalidPathChars" />
      <MemberSignature Language="DocId" Value="F:System.IO.Path.InvalidPathChars" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InvalidPathChars As Char() " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly cli::array &lt;char&gt; ^ InvalidPathChars;" />
      <MemberSignature Language="F#" Value=" staticval mutable InvalidPathChars : char[]" Usage="System.IO.Path.InvalidPathChars" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("see GetInvalidPathChars and GetInvalidFileNameChars methods.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Please use GetInvalidPathChars or GetInvalidFileNameChars instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0da3-516">Предоставляет массив символов, задаваемых платформой, которые не могут быть указаны в аргументах строки пути, передаваемых в элементы класса <see cref="T:System.IO.Path" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-516">Provides a platform-specific array of characters that cannot be specified in path string arguments passed to members of the <see cref="T:System.IO.Path" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0da3-517">Массив, возвращаемый из этого метода, не обязательно должен содержать полный набор символов, недопустимых в именах файлов и каталогов.</span><span class="sxs-lookup"><span data-stu-id="f0da3-517">The array returned from this method is not guaranteed to contain the complete set of characters that are invalid in file and directory names.</span></span> <span data-ttu-id="f0da3-518">Полный набор недопустимых символов может зависеть от файловой системы.</span><span class="sxs-lookup"><span data-stu-id="f0da3-518">The full set of invalid characters can vary by file system.</span></span> <span data-ttu-id="f0da3-519">Например, на настольных платформах Windows недопустимые символы пути могут содержать символы ASCII/Unicode от 1 до 31, а также кавычки ("), меньше\<(), больше чем (>), pipe&#124;(), Backspace (\b), null (\ 0) и Tab (\t).</span><span class="sxs-lookup"><span data-stu-id="f0da3-519">For example, on Windows-based desktop platforms, invalid path characters might include ASCII/Unicode characters 1 through 31, as well as quote ("), less than (\<), greater than (>), pipe (&#124;), backspace (\b), null (\0) and tab (\t).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f0da3-520">Не используйте <xref:System.IO.Path.InvalidPathChars> , если вы считаете, что код может выполняться в том же домене приложения, что и ненадежный код.</span><span class="sxs-lookup"><span data-stu-id="f0da3-520">Do not use <xref:System.IO.Path.InvalidPathChars> if you think your code might execute in the same application domain as untrusted code.</span></span> <span data-ttu-id="f0da3-521"><xref:System.IO.Path.InvalidPathChars>является массивом, поэтому его элементы могут быть перезаписаны.</span><span class="sxs-lookup"><span data-stu-id="f0da3-521"><xref:System.IO.Path.InvalidPathChars> is an array, so its elements can be overwritten.</span></span> <span data-ttu-id="f0da3-522">Если ненадежный код перезаписывает элементы <xref:System.IO.Path.InvalidPathChars>, это может привести к неправильному использованию кода.</span><span class="sxs-lookup"><span data-stu-id="f0da3-522">If untrusted code overwrites elements of <xref:System.IO.Path.InvalidPathChars>, it might cause your code to malfunction in ways that could be exploited.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0da3-523">В следующем примере демонстрируется использование `InvalidPathChars` свойства.</span><span class="sxs-lookup"><span data-stu-id="f0da3-523">The following example demonstrates the use of the `InvalidPathChars` property.</span></span>  
  
 [!code-cpp[System.IO.Path Members#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#13)]
 [!code-csharp[System.IO.Path Members#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#13)]
 [!code-vb[System.IO.Path Members#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#13)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f0da3-524">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="f0da3-524">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f0da3-525">Практическое руководство. Считывание текста из файла</span><span class="sxs-lookup"><span data-stu-id="f0da3-525">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f0da3-526">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="f0da3-526">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsPathFullyQualified">
      <Docs>
        <summary><span data-ttu-id="f0da3-527">Возвращает значение, которое показывает, является ли путь к файлу полным.</span><span class="sxs-lookup"><span data-stu-id="f0da3-527">Returns a value that indicates whether a file path is fully qualified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
 
## Remarks  

<span data-ttu-id="f0da3-528">Перегрузки `IsPathFullyQualified` метода обрабатывали пути, в которых используются <xref:System.IO.Path.DirectorySeparatorChar> <xref:System.IO.Path.AltDirectorySeparatorChar> символы и.</span><span class="sxs-lookup"><span data-stu-id="f0da3-528">The overloads of the `IsPathFullyQualified` method handle paths that use both the <xref:System.IO.Path.DirectorySeparatorChar> and the <xref:System.IO.Path.AltDirectorySeparatorChar> characters.</span></span> <span data-ttu-id="f0da3-529">Проверка пути, переданного в качестве аргумента, не выполняется.</span><span class="sxs-lookup"><span data-stu-id="f0da3-529">It does not perform any validation on the path that is passed to it as an argument.</span></span> <span data-ttu-id="f0da3-530">В результате URI интерпретируется как относительные пути и возвращается `false`.</span><span class="sxs-lookup"><span data-stu-id="f0da3-530">As a result, URIs are interpreted as relative paths and return `false`.</span></span> 

<span data-ttu-id="f0da3-531">Существует разница между полным путем (как указано в `IsPathFullyQualified` методе) и корневым путем (как указано в <xref:System.IO.Path.IsPathRooted%2A> методе).</span><span class="sxs-lookup"><span data-stu-id="f0da3-531">There is a difference between a fully qualified path (as indicated by the `IsPathFullyQualified` method) and a rooted path (as indicated by the <xref:System.IO.Path.IsPathRooted%2A> method).</span></span> <span data-ttu-id="f0da3-532">*Полный* путь или абсолютный *путь* всегда определяет точный путь от конкретного диска или устройства к целевому файлу или каталогу и не зависит от текущего диска или текущего каталога.</span><span class="sxs-lookup"><span data-stu-id="f0da3-532">A *fully qualified path* or *absolute path* always defines an exact path from a particular drive or device to a target file or directory, and does not depend on the current drive or current directory.</span></span> <span data-ttu-id="f0da3-533">Например, в Windows Systems, *C:/Users/User1/Documents/Reports/2019/Январь/основные сведения. PDF* определяет абсолютный путь от корня диска C: к целевому файлу, *подсвечивает. PDF*.</span><span class="sxs-lookup"><span data-stu-id="f0da3-533">For example, on Windows systems, *C:/users/user1/documents/reports/2019/january/highlights.pdf* defines an absolute path from the root of the C: drive to the target file, *highlights.pdf*.</span></span> <span data-ttu-id="f0da3-534">*Корневой путь* указывает либо начальный диск, либо корневой каталог, но зависит либо от текущего каталога (если он находится в корневом каталоге на указанном диске), либо от текущего диска (если он корневым каталогом).</span><span class="sxs-lookup"><span data-stu-id="f0da3-534">A *rooted path* specifies either a starting drive or root directory, but depends on either the current directory (if it is rooted by a specified drive) or the current drive (if it is rooted by the root directory).</span></span> <span data-ttu-id="f0da3-535">В следующем примере показано различие между полными путями и корневыми путями.</span><span class="sxs-lookup"><span data-stu-id="f0da3-535">The following example illustrates the difference between fully qualified paths and rooted paths.</span></span>

[!code-csharp[IsPathRooted](~/samples/snippets/csharp/api/system.IO/Path/IsPathRooted/program.cs)]
[!code-vb[IsPathRooted](~/samples/snippets/visualbasic/api/system.IO/Path/IsPathRooted/program.vb)]

         ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsPathFullyQualified">
      <MemberSignature Language="C#" Value="public static bool IsPathFullyQualified (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPathFullyQualified(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.IsPathFullyQualified(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPathFullyQualified (path As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPathFullyQualified(ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="F#" Value="static member IsPathFullyQualified : ReadOnlySpan&lt;char&gt; -&gt; bool" Usage="System.IO.Path.IsPathFullyQualified path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="f0da3-536">Путь к файлу.</span><span class="sxs-lookup"><span data-stu-id="f0da3-536">A file path.</span></span></param>
        <summary><span data-ttu-id="f0da3-537">Возвращает значение, которое показывает, является ли путь к файлу, представленный указанным диапазоном символов, фиксированным для определенного диска или UNC-пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-537">Returns a value that indicates whether the file path represented by the specified character span is fixed to a specific drive or UNC path.</span></span></summary>
        <returns><span data-ttu-id="f0da3-538">Значение <see langword="true" />, если путь привязан к определенному диску или UNC-пути; <see langword="false" /> — если путь задается относительно текущего диска или рабочей папки.</span><span class="sxs-lookup"><span data-stu-id="f0da3-538"><see langword="true" /> if the path is fixed to a specific drive or UNC path; <see langword="false" /> if the path is relative to the current drive or working directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  


         ]]></format>
        </remarks>
        <related type="article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="f0da3-539">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="f0da3-539">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsPathFullyQualified">
      <MemberSignature Language="C#" Value="public static bool IsPathFullyQualified (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPathFullyQualified(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.IsPathFullyQualified(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPathFullyQualified (path As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPathFullyQualified(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member IsPathFullyQualified : string -&gt; bool" Usage="System.IO.Path.IsPathFullyQualified path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="f0da3-540">Путь к файлу.</span><span class="sxs-lookup"><span data-stu-id="f0da3-540">A file path.</span></span></param>
        <summary><span data-ttu-id="f0da3-541">Возвращает значение, которое показывает, является ли указанный путь к файлу фиксированным для определенного диска или UNC-пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-541">Returns a value that indicates whether the specified file path is fixed to a specific drive or UNC path.</span></span></summary>
        <returns><span data-ttu-id="f0da3-542">Значение <see langword="true" />, если путь привязан к определенному диску или UNC-пути; <see langword="false" /> — если путь задается относительно текущего диска или рабочей папки.</span><span class="sxs-lookup"><span data-stu-id="f0da3-542"><see langword="true" /> if the path is fixed to a specific drive or UNC path; <see langword="false" /> if the path is relative to the current drive or working directory.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f0da3-543"><paramref name="path" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-543"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <related type="article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="f0da3-544">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="f0da3-544">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsPathRooted">
      <Docs>
        <summary><span data-ttu-id="f0da3-545">Возвращает значение, показывающее, содержит ли путь к файлу корневую папку.</span><span class="sxs-lookup"><span data-stu-id="f0da3-545">Returns a value that indicates whether a file path contains a root.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
 
## Remarks  

<span data-ttu-id="f0da3-546">**Путь** к корневому каталогу — это путь к файлу, исправленный на определенный диск или Уник путь; Он отличается от пути, относящегося к текущему диску или рабочему каталогу.</span><span class="sxs-lookup"><span data-stu-id="f0da3-546">A **rooted path** is file path that is fixed to a specific drive or UNIC path; it contrasts with a path that is relative to the current drive or working directory.</span></span> <span data-ttu-id="f0da3-547">Например, в системах Windows корневой путь начинается с обратной косой черты (например, "\Documents") или буквы диска и двоеточия (например, "К:документс").</span><span class="sxs-lookup"><span data-stu-id="f0da3-547">For example, on Windows systems, a rooted path begins with a backslash (for example, "\Documents") or a drive letter and colon (for example, "C:Documents").</span></span> 

<span data-ttu-id="f0da3-548">Обратите внимание, что корневые пути могут быть абсолютными (то есть полными) или относительными.</span><span class="sxs-lookup"><span data-stu-id="f0da3-548">Note that rooted paths can be either absolute (that is, fully qualified) or relative.</span></span> <span data-ttu-id="f0da3-549">Абсолютный корневой путь — это полный путь от корня диска к определенному каталогу.</span><span class="sxs-lookup"><span data-stu-id="f0da3-549">An absolute rooted path is a fully qualified path from the root of a drive to a specific directory.</span></span> <span data-ttu-id="f0da3-550">Относительный корневой путь указывает диск, но его полный путь разрешается в текущий каталог.</span><span class="sxs-lookup"><span data-stu-id="f0da3-550">A relative rooted path specifies a drive, but its fully qualified path is resolved against the current directory.</span></span> <span data-ttu-id="f0da3-551">В следующем примере демонстрируется это различие.</span><span class="sxs-lookup"><span data-stu-id="f0da3-551">The following example illustrates the difference.</span></span>

[!code-csharp[IsPathRooted](~/samples/snippets/csharp/api/system.IO/Path/IsPathRooted/program.cs)]
[!code-vb[IsPathRooted](~/samples/snippets/visualbasic/api/system.IO/Path/IsPathRooted/program.vb)]

         ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsPathRooted">
      <MemberSignature Language="C#" Value="public static bool IsPathRooted (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPathRooted(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.IsPathRooted(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPathRooted (path As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPathRooted(ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="F#" Value="static member IsPathRooted : ReadOnlySpan&lt;char&gt; -&gt; bool" Usage="System.IO.Path.IsPathRooted path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="f0da3-552">Проверяемый путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-552">The path to test.</span></span></param>
        <summary><span data-ttu-id="f0da3-553">Возвращает значение, которое показывает, содержит ли указанный диапазон символов, являющийся путем к файлу, корневую папку.</span><span class="sxs-lookup"><span data-stu-id="f0da3-553">Returns a value that indicates whether the specified character span that represents a file path contains a root.</span></span></summary>
        <returns><span data-ttu-id="f0da3-554">Значение <see langword="true" />, если параметр <paramref name="path" /> содержит корневую папку; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-554"><see langword="true" /> if <paramref name="path" /> contains a root; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="f0da3-555">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="f0da3-555">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsPathRooted">
      <MemberSignature Language="C#" Value="public static bool IsPathRooted (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPathRooted(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.IsPathRooted(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPathRooted (path As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPathRooted(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member IsPathRooted : string -&gt; bool" Usage="System.IO.Path.IsPathRooted path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="f0da3-556">Проверяемый путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-556">The path to test.</span></span></param>
        <summary><span data-ttu-id="f0da3-557">Возвращает значение, показывающее, содержит ли указанная строка пути корневую папку.</span><span class="sxs-lookup"><span data-stu-id="f0da3-557">Returns a value indicating whether the specified path string contains a root.</span></span></summary>
        <returns><span data-ttu-id="f0da3-558">Значение <see langword="true" />, если параметр <paramref name="path" /> содержит корневую папку; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-558"><see langword="true" /> if <paramref name="path" /> contains a root; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0da3-559">Метод возвращает `true` , если первый символ является символом разделителя каталога, например "\\", или если путь начинается с буквы диска и двоеточия (:). <xref:System.IO.Path.IsPathRooted%2A></span><span class="sxs-lookup"><span data-stu-id="f0da3-559">The <xref:System.IO.Path.IsPathRooted%2A> method returns `true` if the first character is a directory separator character such as "\\", or if the path starts with a drive letter and colon (:).</span></span> <span data-ttu-id="f0da3-560">Например, он возвращает `true` для `path` таких строк, как "\\\мидир\\\мифиле.ткст", "C:\\\мидир" или "к:Мидир".</span><span class="sxs-lookup"><span data-stu-id="f0da3-560">For example, it returns `true` for `path` strings such as "\\\MyDir\\\MyFile.txt", "C:\\\MyDir", or "C:MyDir".</span></span> <span data-ttu-id="f0da3-561">Он возвращает `false` для `path` таких строк, как "MyDir".</span><span class="sxs-lookup"><span data-stu-id="f0da3-561">It returns `false` for `path` strings such as "MyDir".</span></span>  
  
 <span data-ttu-id="f0da3-562">Этот метод не проверяет существование пути или имени файла.</span><span class="sxs-lookup"><span data-stu-id="f0da3-562">This method does not verify that the path or file name exists.</span></span>  
  
 <span data-ttu-id="f0da3-563">Список общих задач ввода-вывода см. в разделе [Общие задачи ввода-вывода](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="f0da3-563">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  

## Examples  
 <span data-ttu-id="f0da3-564">В следующем примере показано, `IsPathRooted` как метод можно использовать для проверки трех строк.</span><span class="sxs-lookup"><span data-stu-id="f0da3-564">The following example demonstrates how the `IsPathRooted` method can be used to test three strings.</span></span>  
  
 [!code-cpp[System.IO.Path Members#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#12)]
 [!code-csharp[System.IO.Path Members#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#12)]
 [!code-vb[System.IO.Path Members#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f0da3-565">Параметр <paramref name="path" /> содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-565"><paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></exception>
        <related type="article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="f0da3-566">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="f0da3-566">File path formats on Windows systems</span></span></related>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f0da3-567">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="f0da3-567">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f0da3-568">Практическое руководство. Считывание текста из файла</span><span class="sxs-lookup"><span data-stu-id="f0da3-568">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f0da3-569">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="f0da3-569">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (params string[] paths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(string[] paths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Join(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (ParamArray paths As String()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(... cli::array &lt;System::String ^&gt; ^ paths);" />
      <MemberSignature Language="F#" Value="static member Join : string[] -&gt; string" Usage="System.IO.Path.Join paths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paths" Type="System.String[]" Index="0" FrameworkAlternate="netcore-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="paths"><span data-ttu-id="f0da3-570">Массив путей.</span><span class="sxs-lookup"><span data-stu-id="f0da3-570">An array of paths.</span></span></param>
        <summary><span data-ttu-id="f0da3-571">Сцепляет массив путей в один путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-571">Concatenates an array of paths into a single path.</span></span></summary>
        <returns><span data-ttu-id="f0da3-572">Сцепленный путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-572">The concatenated path.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="f0da3-573">Этот метод просто объединяет все строки в `paths` и добавляет символ разделителя каталогов между любыми компонентами пути, если он еще не существует.</span><span class="sxs-lookup"><span data-stu-id="f0da3-573">This method simply concatenates all the strings in `paths` and adds a directory separator character between any of the path components if one is not already present.</span></span> <span data-ttu-id="f0da3-574">Если значение <xref:System.String.Length> любого из путей в `paths` равно нулю, Метод сцепляет оставшиеся аргументы.</span><span class="sxs-lookup"><span data-stu-id="f0da3-574">If the <xref:System.String.Length> of any of the paths in `paths` is zero, the method concatenates the remaining arguments.</span></span> <span data-ttu-id="f0da3-575">Если результирующая Объединенная строка имеет нулевую длину, метод возвращает <xref:System.String.Empty?displayProperty=nameWithType>значение.</span><span class="sxs-lookup"><span data-stu-id="f0da3-575">If the resulting concatenated string's length is zero, the method returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>

<span data-ttu-id="f0da3-576">Если любой из путей в `paths`, за исключением последнего, заканчивается символом разделителя пути, который не подходит для целевой платформы `Join` , метод сохраняет символ разделителя исходного пути и добавляет поддерживаемый.</span><span class="sxs-lookup"><span data-stu-id="f0da3-576">If any of the paths in `paths`, except for the last one, ends in a path separator character that is not appropriate for the target platform, the `Join` method preserves the original path separator character and appends the supported one.</span></span> <span data-ttu-id="f0da3-577">Эта проблема возникает в жестко запрограммированных путях, использующих символ обратной косой черты Windows ("\"), который не распознается как разделитель пути в системах на базе UNIX.</span><span class="sxs-lookup"><span data-stu-id="f0da3-577">This issue arises in hard-coded paths that use the Windows backslash ("\") character, which is not recognized as a path separator on Unix-based systems.</span></span> <span data-ttu-id="f0da3-578">Чтобы обойти эту ошибку, можно:</span><span class="sxs-lookup"><span data-stu-id="f0da3-578">To work around this issue, you can:</span></span>

- <span data-ttu-id="f0da3-579">Получите значение свойства, <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> а не жестко запрограммированный символ разделителя каталога.</span><span class="sxs-lookup"><span data-stu-id="f0da3-579">Retrieve the value of the <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> property rather than hard-coding a directory separator character.</span></span>

- <span data-ttu-id="f0da3-580">В качестве символа разделителя каталога следует использовать косую черту ("/").</span><span class="sxs-lookup"><span data-stu-id="f0da3-580">Use a forward slash ("/") as the directory separator character.</span></span> <span data-ttu-id="f0da3-581">Этот символ возвращается <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> свойством в системах на базе UNIX и <xref:System.IO.Path.AltDirectorySeparatorChar?displayProperty=nameWithType> свойством в системах Windows.</span><span class="sxs-lookup"><span data-stu-id="f0da3-581">This character is returned by the <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> property on Unix-based systems and by the <xref:System.IO.Path.AltDirectorySeparatorChar?displayProperty=nameWithType> property on Windows systems.</span></span>

<span data-ttu-id="f0da3-582"><xref:System.IO.Path.Combine%2A> В<xref:System.IO.Path.Join%2A> отличие от метода, метод не пытается получить корень возвращаемого пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-582">Unlike the <xref:System.IO.Path.Combine%2A> method, the <xref:System.IO.Path.Join%2A> method does not attempt to root the returned path.</span></span> <span data-ttu-id="f0da3-583">(То есть, если любой из путей в `paths`, за исключением последнего, является абсолютным путем `Join` , метод не удаляет предыдущие пути, как это <xref:System.IO.Path.Combine%2A> делает метод.</span><span class="sxs-lookup"><span data-stu-id="f0da3-583">(That is, if any of the paths in `paths`, except for the last one, is an absolute path, the `Join` method does not discard the previous paths as the <xref:System.IO.Path.Combine%2A> method does.</span></span>

<span data-ttu-id="f0da3-584">Не все недопустимые символы в именах каталогов и файлов считаются неприемлемыми `Join` для метода, так как эти символы можно использовать для поиска подстановочных знаков.</span><span class="sxs-lookup"><span data-stu-id="f0da3-584">Not all invalid characters for directory and file names are interpreted as unacceptable by the `Join` method, because you can use these characters for search wildcard characters.</span></span> <span data-ttu-id="f0da3-585">Например, хотя `Path.Join("c:\\", "temp", "*.txt")` при создании файла может быть недопустимым, он допустим в качестве строки поиска.</span><span class="sxs-lookup"><span data-stu-id="f0da3-585">For example, while `Path.Join("c:\\", "temp", "*.txt")` might be invalid when creating a file, it is valid as a search string.</span></span> <span data-ttu-id="f0da3-586">Таким `Join` образом, метод успешно интерпретирует его.</span><span class="sxs-lookup"><span data-stu-id="f0da3-586">The `Join` method therefore successfully interprets it.</span></span>

             </format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(valuetype System.ReadOnlySpan`1&lt;char&gt; path1, valuetype System.ReadOnlySpan`1&lt;char&gt; path2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Join(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (path1 As ReadOnlySpan(Of Char), path2 As ReadOnlySpan(Of Char)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2);" />
      <MemberSignature Language="F#" Value="static member Join : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; -&gt; string" Usage="System.IO.Path.Join (path1, path2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="path2" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path1"><span data-ttu-id="f0da3-587">Диапазон символов, содержащий первый путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-587">A character span that contains the first path to join.</span></span></param>
        <param name="path2"><span data-ttu-id="f0da3-588">Диапазон символов, содержащий второй путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-588">A character span that contains the second path to join.</span></span></param>
        <summary><span data-ttu-id="f0da3-589">Сцепляет два компонента пути в один путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-589">Concatenates two path components into a single path.</span></span></summary>
        <returns><span data-ttu-id="f0da3-590">Объединенные пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-590">The combined paths.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
<span data-ttu-id="f0da3-591">Этот метод просто `path` объединяет и `path2` добавляет символ разделителя каталогов между двумя компонентами пути, если он еще не `path1` существует в конце или в начале `path2`.</span><span class="sxs-lookup"><span data-stu-id="f0da3-591">This method simply concatenates `path` and `path2` and adds a directory separator character between the two path components if one is not already present at the end of `path1` or the beginning of `path2`.</span></span> <span data-ttu-id="f0da3-592">Если значение <xref:System.ReadOnlySpan%601.Length> `path1` параметра или`path2` равно нулю, метод возвращает другой путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-592">If the <xref:System.ReadOnlySpan%601.Length> of either `path1` or `path2` is zero, the method returns the other path.</span></span> <span data-ttu-id="f0da3-593">Если значение <xref:System.ReadOnlySpan%601.Length> `path1` обоих элементов и `path2` равно нулю, метод возвращает <xref:System.String.Empty?displayProperty=nameWithType>значение.</span><span class="sxs-lookup"><span data-stu-id="f0da3-593">If the <xref:System.ReadOnlySpan%601.Length> of both `path1` and `path2` is zero, the method returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> 

<span data-ttu-id="f0da3-594">Если `path1` заканчивается символом разделителя пути, который не подходит для целевой платформы `Join` , метод сохраняет символ разделителя исходного пути и добавляет поддерживаемый.</span><span class="sxs-lookup"><span data-stu-id="f0da3-594">If `path1` ends in a path separator character that is not appropriate for the target platform, the `Join` method preserves the original path separator character and appends the supported one.</span></span> <span data-ttu-id="f0da3-595">Эта проблема возникает в жестко запрограммированных путях, использующих символ обратной косой черты Windows ("\"), который не распознается как разделитель пути в системах на базе UNIX.</span><span class="sxs-lookup"><span data-stu-id="f0da3-595">This issue arises in hard-coded paths that use the Windows backslash ("\") character, which is not recognized as a path separator on Unix-based systems.</span></span> <span data-ttu-id="f0da3-596">Чтобы обойти эту ошибку, можно:</span><span class="sxs-lookup"><span data-stu-id="f0da3-596">To work around this issue, you can:</span></span>

- <span data-ttu-id="f0da3-597">Получите значение свойства, <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> а не жестко запрограммированный символ разделителя каталога.</span><span class="sxs-lookup"><span data-stu-id="f0da3-597">Retrieve the value of the <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> property rather than hard-coding a directory separator character.</span></span>

- <span data-ttu-id="f0da3-598">В качестве символа разделителя каталога следует использовать косую черту ("/").</span><span class="sxs-lookup"><span data-stu-id="f0da3-598">Use a forward slash ("/") as the directory separator character.</span></span> <span data-ttu-id="f0da3-599">Этот символ возвращается <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> свойством в системах на базе UNIX и <xref:System.IO.Path.AltDirectorySeparatorChar?displayProperty=nameWithType> свойством в системах Windows.</span><span class="sxs-lookup"><span data-stu-id="f0da3-599">This character is returned by the <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> property on Unix-based systems and by the <xref:System.IO.Path.AltDirectorySeparatorChar?displayProperty=nameWithType> property on Windows systems.</span></span> 

<span data-ttu-id="f0da3-600"><xref:System.IO.Path.Combine%2A> В<xref:System.IO.Path.Join%2A> отличие от метода, метод не пытается получить корень возвращаемого пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-600">Unlike the <xref:System.IO.Path.Combine%2A> method, the <xref:System.IO.Path.Join%2A> method does not attempt to root the returned path.</span></span> <span data-ttu-id="f0da3-601">(То есть, если `path2` является абсолютным путем `Join` , метод не удаляет `path1` и не возвращает `path2` , как это <xref:System.IO.Path.Combine%2A> делает метод.) В следующем примере показана разница в путях, возвращаемых двумя методами.</span><span class="sxs-lookup"><span data-stu-id="f0da3-601">(That is, if `path2` is an absolute path, the `Join` method does not discard `path1` and return `path2` as the <xref:System.IO.Path.Combine%2A> method does.) The following example illustrates the difference in the paths returned by the two methods.</span></span> <span data-ttu-id="f0da3-602">Если источником `path2` является вход пользователя <xref:System.IO.Path.Combine%2A> , метод позволяет пользователю получить доступ к ресурсу файловой системы (например, *C:/Users/User1/Documents/Financial/* в случае примера), который приложение не планировало делать. обращать.</span><span class="sxs-lookup"><span data-stu-id="f0da3-602">If the source of `path2` is user input, the <xref:System.IO.Path.Combine%2A> method makes it possible for a user to access a file system resource (such as *C:/Users/User1/Documents/Financial/* in the case of the example) that the application did not intend to make accessible.</span></span>  

<span data-ttu-id="f0da3-603">Не все недопустимые символы в именах каталогов и файлов считаются неприемлемыми `Join` для метода, так как эти символы можно использовать для поиска подстановочных знаков.</span><span class="sxs-lookup"><span data-stu-id="f0da3-603">Not all invalid characters for directory and file names are interpreted as unacceptable by the `Join` method, because you can use these characters for search wildcard characters.</span></span> <span data-ttu-id="f0da3-604">Например, хотя `Path.Join("c:\\", "*.txt")` при создании файла может быть недопустимым, он допустим в качестве строки поиска.</span><span class="sxs-lookup"><span data-stu-id="f0da3-604">For example, while `Path.Join("c:\\", "*.txt")` might be invalid when creating a file, it is valid as a search string.</span></span> <span data-ttu-id="f0da3-605">Таким `Join` образом, метод успешно интерпретирует его.</span><span class="sxs-lookup"><span data-stu-id="f0da3-605">The `Join` method therefore successfully interprets it.</span></span> 

## <a name="example"></a><span data-ttu-id="f0da3-606">Пример</span><span class="sxs-lookup"><span data-stu-id="f0da3-606">Example</span></span>

<span data-ttu-id="f0da3-607">В следующем примере показана разница в путях, возвращаемых <xref:System.IO.Path.Join(System.ReadOnlySpan%7BSystem.Char%7D,System.ReadOnlySpan%7BSystem.Char%7D)?displayProperty=nameWithType> методами и. <xref:System.IO.Path.Combine(System.String,System.String)?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="f0da3-607">The following example illustrates the difference in the paths returned by the <xref:System.IO.Path.Join(System.ReadOnlySpan%7BSystem.Char%7D,System.ReadOnlySpan%7BSystem.Char%7D)?displayProperty=nameWithType> and <xref:System.IO.Path.Combine(System.String,System.String)?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="f0da3-608">Если первая строка представляет собой полный путь, включающий диск и корневой каталог, а второй — относительный путь от первого пути, два метода дают одинаковые результаты.</span><span class="sxs-lookup"><span data-stu-id="f0da3-608">When the first string is an fully qualified path that includes a drive and root directory and the second is a relative path from the first path, the two methods produce identical results.</span></span> <span data-ttu-id="f0da3-609">Во втором и третьем вызове `ShowPathInformation` метода строки, возвращаемые двумя методами, расходятся.</span><span class="sxs-lookup"><span data-stu-id="f0da3-609">In the second and third calls to the `ShowPathInformation` method, the strings returned by the two methods diverge.</span></span> <span data-ttu-id="f0da3-610">Во втором вызове метода первый строковый аргумент является диском, а второй — корневым каталогом.</span><span class="sxs-lookup"><span data-stu-id="f0da3-610">In the second method call, the first string argument is a drive, while the second is a rooted directory.</span></span> <span data-ttu-id="f0da3-611">`Join` Метод объединяет две строки и сохраняет дублирующиеся разделители путей.</span><span class="sxs-lookup"><span data-stu-id="f0da3-611">The `Join` method concatenates the two strings and preserves duplicate path separators.</span></span> <span data-ttu-id="f0da3-612">`Combine` Метод отменяет диск и возвращает корневой каталог на текущем диске.</span><span class="sxs-lookup"><span data-stu-id="f0da3-612">The `Combine` method abandons the drive and returns a rooted directory on the current drive.</span></span> <span data-ttu-id="f0da3-613">Если текущий диск приложения — C:\ и строка используется для доступа к файлу или файлам в каталоге, он будет иметь доступ к C: вместо D:.</span><span class="sxs-lookup"><span data-stu-id="f0da3-613">If the application's current drive is C:\ and the string is used to access a file or files in the directory, it would access C: instead of D:.</span></span> <span data-ttu-id="f0da3-614">Наконец, поскольку оба аргумента в третьем вызове `ShowPathInformation` являются корневыми `Join` , метод просто добавляет их для создания пути к `Combine` файлу бессмысленное, а метод отменяет первую строку и возвращает вторую.</span><span class="sxs-lookup"><span data-stu-id="f0da3-614">Finally, because both arguments in the third call to `ShowPathInformation` are rooted, the `Join` method simply appends them to create a nonsensical file path, while the `Combine` method discards the first string and returns the second.</span></span> <span data-ttu-id="f0da3-615">Использование этой строки для доступа к файлу может предоставить приложению непреднамеренной доступ к конфиденциальным файлам.</span><span class="sxs-lookup"><span data-stu-id="f0da3-615">Using this string for file access could give the application unintended access to sensitive files.</span></span>  

[!code-csharp[Path.Join(String,String)](~/samples/snippets/csharp/api/system.io/path/combine2/program.cs)]
[!code-csharp[Path.Join(String,String)](~/samples/snippets/visualbasic/api/system.io/path/combine2/program.vb)]


       ]]></format>
        </remarks>
        <related type="article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="f0da3-616">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="f0da3-616">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (string path1, string path2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(string path1, string path2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Join(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (path1 As String, path2 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(System::String ^ path1, System::String ^ path2);" />
      <MemberSignature Language="F#" Value="static member Join : string * string -&gt; string" Usage="System.IO.Path.Join (path1, path2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="path2" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="path1"><span data-ttu-id="f0da3-617">Первый путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-617">The first path to join.</span></span></param>
        <param name="path2"><span data-ttu-id="f0da3-618">Второй путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-618">The second path to join.</span></span></param>
        <summary><span data-ttu-id="f0da3-619">Сцепляет два пути в один путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-619">Concatenates two paths into a single path.</span></span></summary>
        <returns><span data-ttu-id="f0da3-620">Сцепленный путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-620">The concatenated path.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="f0da3-621">Этот метод просто объединяет `path` и `path2` добавляет символ разделителя каталогов между любыми компонентами пути, если он еще не существует.</span><span class="sxs-lookup"><span data-stu-id="f0da3-621">This method simply concatenates `path` and `path2` and adds a directory separator character between any of the path components if one is not already present.</span></span> <span data-ttu-id="f0da3-622">Если значение параметра `path1` или `path2` равно нулю, метод объединяет оставшийся аргумент.</span><span class="sxs-lookup"><span data-stu-id="f0da3-622">If the length of either `path1` or `path2` is zero, the method concatenates the remaining argument.</span></span> <span data-ttu-id="f0da3-623">Если длина результирующей объединенной строки равна нулю, метод возвращает <xref:System.String.Empty?displayProperty=nameWithType>значение.</span><span class="sxs-lookup"><span data-stu-id="f0da3-623">If the length of the resulting concatenated string is zero, the method returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>

<span data-ttu-id="f0da3-624">Если `path1` заканчивается символом разделителя пути, который не подходит для целевой платформы `Join` , метод сохраняет символ разделителя исходного пути и добавляет поддерживаемый.</span><span class="sxs-lookup"><span data-stu-id="f0da3-624">If `path1` ends in a path separator character that is not appropriate for the target platform, the `Join` method preserves the original path separator character and appends the supported one.</span></span> <span data-ttu-id="f0da3-625">Эта проблема возникает в жестко запрограммированных путях, использующих символ обратной косой черты Windows ("\"), который не распознается как разделитель пути в системах на базе UNIX.</span><span class="sxs-lookup"><span data-stu-id="f0da3-625">This issue arises in hard-coded paths that use the Windows backslash ("\") character, which is not recognized as a path separator on Unix-based systems.</span></span> <span data-ttu-id="f0da3-626">Чтобы обойти эту ошибку, можно:</span><span class="sxs-lookup"><span data-stu-id="f0da3-626">To work around this issue, you can:</span></span>

- <span data-ttu-id="f0da3-627">Получите значение свойства, <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> а не жестко запрограммированный символ разделителя каталога.</span><span class="sxs-lookup"><span data-stu-id="f0da3-627">Retrieve the value of the <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> property rather than hard-coding a directory separator character.</span></span>

- <span data-ttu-id="f0da3-628">В качестве символа разделителя каталога следует использовать косую черту ("/").</span><span class="sxs-lookup"><span data-stu-id="f0da3-628">Use a forward slash ("/") as the directory separator character.</span></span> <span data-ttu-id="f0da3-629">Этот символ возвращается <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> свойством в системах на базе UNIX и <xref:System.IO.Path.AltDirectorySeparatorChar?displayProperty=nameWithType> свойством в системах Windows.</span><span class="sxs-lookup"><span data-stu-id="f0da3-629">This character is returned by the <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> property on Unix-based systems and by the <xref:System.IO.Path.AltDirectorySeparatorChar?displayProperty=nameWithType> property on Windows systems.</span></span>

<span data-ttu-id="f0da3-630"><xref:System.IO.Path.Combine%2A> В<xref:System.IO.Path.Join%2A> отличие от метода, метод не пытается получить корень возвращаемого пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-630">Unlike the <xref:System.IO.Path.Combine%2A> method, the <xref:System.IO.Path.Join%2A> method does not attempt to root the returned path.</span></span> <span data-ttu-id="f0da3-631">(То есть, если `path2` является абсолютным путем `Join` , метод не удаляет предыдущие пути, как это <xref:System.IO.Path.Combine%2A> делает метод.</span><span class="sxs-lookup"><span data-stu-id="f0da3-631">(That is, if `path2` is an absolute path, the `Join` method does not discard the previous paths as the <xref:System.IO.Path.Combine%2A> method does.</span></span>

<span data-ttu-id="f0da3-632">Не все недопустимые символы в именах каталогов и файлов считаются неприемлемыми `Join` для метода, так как эти символы можно использовать для поиска подстановочных знаков.</span><span class="sxs-lookup"><span data-stu-id="f0da3-632">Not all invalid characters for directory and file names are interpreted as unacceptable by the `Join` method, because you can use these characters for search wildcard characters.</span></span> <span data-ttu-id="f0da3-633">Например, хотя `Path.Join("c:\\", "temp", "*.txt")` при создании файла может быть недопустимым, он допустим в качестве строки поиска.</span><span class="sxs-lookup"><span data-stu-id="f0da3-633">For example, while `Path.Join("c:\\", "temp", "*.txt")` might be invalid when creating a file, it is valid as a search string.</span></span> <span data-ttu-id="f0da3-634">Таким `Join` образом, метод успешно интерпретирует его.</span><span class="sxs-lookup"><span data-stu-id="f0da3-634">The `Join` method therefore successfully interprets it.</span></span>

             </format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, ReadOnlySpan&lt;char&gt; path3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(valuetype System.ReadOnlySpan`1&lt;char&gt; path1, valuetype System.ReadOnlySpan`1&lt;char&gt; path2, valuetype System.ReadOnlySpan`1&lt;char&gt; path3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Join(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (path1 As ReadOnlySpan(Of Char), path2 As ReadOnlySpan(Of Char), path3 As ReadOnlySpan(Of Char)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, ReadOnlySpan&lt;char&gt; path3);" />
      <MemberSignature Language="F#" Value="static member Join : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; -&gt; string" Usage="System.IO.Path.Join (path1, path2, path3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="path2" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="path3" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path1"><span data-ttu-id="f0da3-635">Диапазон символов, содержащий первый путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-635">A character span that contains the first path to join.</span></span></param>
        <param name="path2"><span data-ttu-id="f0da3-636">Диапазон символов, содержащий второй путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-636">A character span that contains the second path to join.</span></span></param>
        <param name="path3"><span data-ttu-id="f0da3-637">Диапазон символов, содержащий третий путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-637">A character span that contains the third path to join.</span></span></param>
        <summary><span data-ttu-id="f0da3-638">Сцепляет три компонента пути в один путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-638">Concatenates three path components into a single path.</span></span></summary>
        <returns><span data-ttu-id="f0da3-639">Сцепленный путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-639">The concatenated path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
<span data-ttu-id="f0da3-640">Этот метод просто объединяет `path`, и `path2` `path3` и добавляет символ разделителя каталога между любыми компонентами пути, если он еще не существует.</span><span class="sxs-lookup"><span data-stu-id="f0da3-640">This method simply concatenates `path`, `path2`, and `path3` and adds a directory separator character between any of the path components if one is not already present.</span></span> <span data-ttu-id="f0da3-641">Если значение <xref:System.ReadOnlySpan%601.Length> любого из `path1`аргументов, `path2`или `path3` равно нулю, метод объединяет остальные аргументы.</span><span class="sxs-lookup"><span data-stu-id="f0da3-641">If the <xref:System.ReadOnlySpan%601.Length> of any of `path1`, `path2`, or `path3` arguments is zero, the method concatenates the remaining arguments.</span></span> <span data-ttu-id="f0da3-642">Если значение <xref:System.ReadOnlySpan%601.Length?displayProperty=nameWithType> всех компонентов равно нулю, метод возвращает <xref:System.String.Empty?displayProperty=nameWithType>значение.</span><span class="sxs-lookup"><span data-stu-id="f0da3-642">If the <xref:System.ReadOnlySpan%601.Length?displayProperty=nameWithType> of all components is zero, the method returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>

<span data-ttu-id="f0da3-643">Если `path1` `Join` или `path2` заканчивается символом разделителя пути, который не подходит для целевой платформы, метод сохраняет символ разделителя исходного пути и добавляет поддерживаемый.</span><span class="sxs-lookup"><span data-stu-id="f0da3-643">If `path1` or `path2` ends in a path separator character that is not appropriate for the target platform, the `Join` method preserves the original path separator character and appends the supported one.</span></span> <span data-ttu-id="f0da3-644">Эта проблема возникает в жестко запрограммированных путях, использующих символ обратной косой черты Windows ("\"), который не распознается как разделитель пути в системах на базе UNIX.</span><span class="sxs-lookup"><span data-stu-id="f0da3-644">This issue arises in hard-coded paths that use the Windows backslash ("\") character, which is not recognized as a path separator on Unix-based systems.</span></span> <span data-ttu-id="f0da3-645">Чтобы обойти эту ошибку, можно:</span><span class="sxs-lookup"><span data-stu-id="f0da3-645">To work around this issue, you can:</span></span>

- <span data-ttu-id="f0da3-646">Получите значение свойства, <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> а не жестко запрограммированный символ разделителя каталога.</span><span class="sxs-lookup"><span data-stu-id="f0da3-646">Retrieve the value of the <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> property rather than hard-coding a directory separator character.</span></span>

- <span data-ttu-id="f0da3-647">В качестве символа разделителя каталога следует использовать косую черту ("/").</span><span class="sxs-lookup"><span data-stu-id="f0da3-647">Use a forward slash ("/") as the directory separator character.</span></span> <span data-ttu-id="f0da3-648">Этот символ возвращается <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> свойством в системах на базе UNIX и <xref:System.IO.Path.AltDirectorySeparatorChar?displayProperty=nameWithType> свойством в системах Windows.</span><span class="sxs-lookup"><span data-stu-id="f0da3-648">This character is returned by the <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> property on Unix-based systems and by the <xref:System.IO.Path.AltDirectorySeparatorChar?displayProperty=nameWithType> property on Windows systems.</span></span>

<span data-ttu-id="f0da3-649"><xref:System.IO.Path.Combine%2A> В<xref:System.IO.Path.Join%2A> отличие от метода, метод не пытается получить корень возвращаемого пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-649">Unlike the <xref:System.IO.Path.Combine%2A> method, the <xref:System.IO.Path.Join%2A> method does not attempt to root the returned path.</span></span> <span data-ttu-id="f0da3-650">(То есть, если `path2` или `path2` является абсолютным путем, `Join` метод не удаляет предыдущие пути, как это <xref:System.IO.Path.Combine%2A> делает метод.</span><span class="sxs-lookup"><span data-stu-id="f0da3-650">(That is, if `path2` or `path2` is an absolute path, the `Join` method does not discard the previous paths as the <xref:System.IO.Path.Combine%2A> method does.</span></span>
  
<span data-ttu-id="f0da3-651">Не все недопустимые символы в именах каталогов и файлов считаются неприемлемыми `Join` для метода, так как эти символы можно использовать для поиска подстановочных знаков.</span><span class="sxs-lookup"><span data-stu-id="f0da3-651">Not all invalid characters for directory and file names are interpreted as unacceptable by the `Join` method, because you can use these characters for search wildcard characters.</span></span> <span data-ttu-id="f0da3-652">Например, хотя `Path.Join("c:\\", "temp", "*.txt")` при создании файла может быть недопустимым, он допустим в качестве строки поиска.</span><span class="sxs-lookup"><span data-stu-id="f0da3-652">For example, while `Path.Join("c:\\", "temp", "*.txt")` might be invalid when creating a file, it is valid as a search string.</span></span> <span data-ttu-id="f0da3-653">Таким `Join` образом, метод успешно интерпретирует его.</span><span class="sxs-lookup"><span data-stu-id="f0da3-653">The `Join` method therefore successfully interprets it.</span></span>

## <a name="example"></a><span data-ttu-id="f0da3-654">Пример</span><span class="sxs-lookup"><span data-stu-id="f0da3-654">Example</span></span>

<span data-ttu-id="f0da3-655">В следующем примере показана разница в путях, возвращаемых <xref:System.IO.Path.Join(System.ReadOnlySpan%7BSystem.Char%7D,System.ReadOnlySpan%7BSystem.Char%7D,System.ReadOnlySpan%7BSystem.Char%7D)?displayProperty=nameWithType> методами и. <xref:System.IO.Path.Combine(System.String,System.String,System.String)?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="f0da3-655">The following example illustrates the difference in the paths returned by the <xref:System.IO.Path.Join(System.ReadOnlySpan%7BSystem.Char%7D,System.ReadOnlySpan%7BSystem.Char%7D,System.ReadOnlySpan%7BSystem.Char%7D)?displayProperty=nameWithType> and <xref:System.IO.Path.Combine(System.String,System.String,System.String)?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="f0da3-656">Если первая строка представляет собой полный путь, включающий диск и корневой каталог, а второй — относительный путь от первого пути, два метода дают одинаковые результаты.</span><span class="sxs-lookup"><span data-stu-id="f0da3-656">When the first string is a fully qualified path that includes a drive and root directory and the second is a relative path from the first path, the two methods produce identical results.</span></span> <span data-ttu-id="f0da3-657">Во втором и третьем вызове `ShowPathInformation` метода строки, возвращаемые двумя методами, расходятся.</span><span class="sxs-lookup"><span data-stu-id="f0da3-657">In the second and third calls to the `ShowPathInformation` method, the strings returned by the two methods diverge.</span></span> <span data-ttu-id="f0da3-658">Во втором вызове метода первый строковый аргумент является диском, а второй — корневым каталогом.</span><span class="sxs-lookup"><span data-stu-id="f0da3-658">In the second method call, the first string argument is a drive, while the second is a rooted directory.</span></span> <span data-ttu-id="f0da3-659">`Join` Метод объединяет две строки и сохраняет дублирующиеся разделители путей.</span><span class="sxs-lookup"><span data-stu-id="f0da3-659">The `Join` method concatenates the two strings and preserves duplicate path separators.</span></span> <span data-ttu-id="f0da3-660">Вызов <xref:System.IO.Path.GetFullPath%2A> метода приведет к исключению дублирования.</span><span class="sxs-lookup"><span data-stu-id="f0da3-660">A call to the <xref:System.IO.Path.GetFullPath%2A> method would eliminate the duplication.</span></span> <span data-ttu-id="f0da3-661">`Combine` Метод отменяет диск и возвращает корневой каталог на текущем диске.</span><span class="sxs-lookup"><span data-stu-id="f0da3-661">The `Combine` method abandons the drive and returns a rooted directory on the current drive.</span></span> <span data-ttu-id="f0da3-662">Если текущий диск приложения — C:\ и строка используется для доступа к файлу или файлам в каталоге, он будет иметь доступ к C: вместо D:.</span><span class="sxs-lookup"><span data-stu-id="f0da3-662">If the application's current drive is C:\ and the string is used to access a file or files in the directory, it would access C: instead of D:.</span></span> <span data-ttu-id="f0da3-663">Наконец, поскольку последний аргумент в третьем вызове `ShowPathInformation` `Join` метода является корневым, метод просто добавляет его к первым двум аргументам для создания пути к `Combine` файлу бессмысленное, а метод отменяет первые две строки и возвращает Третий.</span><span class="sxs-lookup"><span data-stu-id="f0da3-663">Finally, because the final argument in the third call to `ShowPathInformation` are rooted, the `Join` method simply appends it to the first two arguments to create a nonsensical file path, while the `Combine` method discards the first two strings and returns the third.</span></span> <span data-ttu-id="f0da3-664">Использование этой строки для доступа к файлу может предоставить приложению непреднамеренной доступ к конфиденциальным файлам.</span><span class="sxs-lookup"><span data-stu-id="f0da3-664">Using this string for file access could give the application unintended access to sensitive files.</span></span>

[!code-csharp[Path.Join(String,String,String)](~/samples/snippets/csharp/api/system.io/path/combine3/program.cs)]
[!code-csharp[Path.Join(String,String,String)](~/samples/snippets/visualbasic/api/system.io/path/combine3/program.vb)]

       ]]></format>
        </remarks>
        <related type="article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="f0da3-665">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="f0da3-665">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (string path1, string path2, string path3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(string path1, string path2, string path3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Join(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (path1 As String, path2 As String, path3 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(System::String ^ path1, System::String ^ path2, System::String ^ path3);" />
      <MemberSignature Language="F#" Value="static member Join : string * string * string -&gt; string" Usage="System.IO.Path.Join (path1, path2, path3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="path2" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="path3" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="path1"><span data-ttu-id="f0da3-666">Первый путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-666">The first path to join.</span></span></param>
        <param name="path2"><span data-ttu-id="f0da3-667">Второй путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-667">The second path to join.</span></span></param>
        <param name="path3"><span data-ttu-id="f0da3-668">Третий путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-668">The third path to join.</span></span></param>
        <summary><span data-ttu-id="f0da3-669">Сцепляет три пути в один путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-669">Concatenates three paths into a single path.</span></span></summary>
        <returns><span data-ttu-id="f0da3-670">Сцепленный путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-670">The concatenated path.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="f0da3-671">Этот метод просто объединяет `path`, и `path2` `path3` и добавляет символ разделителя каталога между любыми компонентами пути, если он еще не существует.</span><span class="sxs-lookup"><span data-stu-id="f0da3-671">This method simply concatenates `path`, `path2`, and `path3` and adds a directory separator character between any of the path components if one is not already present.</span></span> <span data-ttu-id="f0da3-672">Если длина любого из `path1` `path2` аргументов или `path3` равна нулю, Метод сцепляет оставшиеся аргументы.</span><span class="sxs-lookup"><span data-stu-id="f0da3-672">If the length of any of `path1`, `path2` or `path3` argument is zero, the method concatenates the remaining arguments.</span></span> <span data-ttu-id="f0da3-673">Если длина результирующей объединенной строки равна нулю, метод возвращает <xref:System.String.Empty?displayProperty=nameWithType>значение.</span><span class="sxs-lookup"><span data-stu-id="f0da3-673">If the length of the resulting concatenated string is zero, the method returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>

<span data-ttu-id="f0da3-674">Если `path1` `Join` или `path2` заканчивается символом разделителя пути, который не подходит для целевой платформы, метод сохраняет символ разделителя исходного пути и добавляет поддерживаемый.</span><span class="sxs-lookup"><span data-stu-id="f0da3-674">If `path1` or `path2` ends in a path separator character that is not appropriate for the target platform, the `Join` method preserves the original path separator character and appends the supported one.</span></span> <span data-ttu-id="f0da3-675">Эта проблема возникает в жестко запрограммированных путях, использующих символ обратной косой черты Windows ("\"), который не распознается как разделитель пути в системах на базе UNIX.</span><span class="sxs-lookup"><span data-stu-id="f0da3-675">This issue arises in hard-coded paths that use the Windows backslash ("\") character, which is not recognized as a path separator on Unix-based systems.</span></span> <span data-ttu-id="f0da3-676">Чтобы обойти эту ошибку, можно:</span><span class="sxs-lookup"><span data-stu-id="f0da3-676">To work around this issue, you can:</span></span>

- <span data-ttu-id="f0da3-677">Получите значение свойства, <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> а не жестко запрограммированный символ разделителя каталога.</span><span class="sxs-lookup"><span data-stu-id="f0da3-677">Retrieve the value of the <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> property rather than hard-coding a directory separator character.</span></span>

- <span data-ttu-id="f0da3-678">В качестве символа разделителя каталога следует использовать косую черту ("/").</span><span class="sxs-lookup"><span data-stu-id="f0da3-678">Use a forward slash ("/") as the directory separator character.</span></span> <span data-ttu-id="f0da3-679">Этот символ возвращается <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> свойством в системах на базе UNIX и <xref:System.IO.Path.AltDirectorySeparatorChar?displayProperty=nameWithType> свойством в системах Windows.</span><span class="sxs-lookup"><span data-stu-id="f0da3-679">This character is returned by the <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> property on Unix-based systems and by the <xref:System.IO.Path.AltDirectorySeparatorChar?displayProperty=nameWithType> property on Windows systems.</span></span>

<span data-ttu-id="f0da3-680"><xref:System.IO.Path.Combine%2A> В<xref:System.IO.Path.Join%2A> отличие от метода, метод не пытается получить корень возвращаемого пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-680">Unlike the <xref:System.IO.Path.Combine%2A> method, the <xref:System.IO.Path.Join%2A> method does not attempt to root the returned path.</span></span> <span data-ttu-id="f0da3-681">(То есть, если `path2` или `path2` является абсолютным путем, `Join` метод не удаляет предыдущие пути, как это <xref:System.IO.Path.Combine%2A> делает метод.</span><span class="sxs-lookup"><span data-stu-id="f0da3-681">(That is, if `path2` or `path2` is an absolute path, the `Join` method does not discard the previous paths as the <xref:System.IO.Path.Combine%2A> method does.</span></span>

<span data-ttu-id="f0da3-682">Не все недопустимые символы в именах каталогов и файлов считаются неприемлемыми `Join` для метода, так как эти символы можно использовать для поиска подстановочных знаков.</span><span class="sxs-lookup"><span data-stu-id="f0da3-682">Not all invalid characters for directory and file names are interpreted as unacceptable by the `Join` method, because you can use these characters for search wildcard characters.</span></span> <span data-ttu-id="f0da3-683">Например, хотя `Path.Join("c:\\", "temp", "*.txt")` при создании файла может быть недопустимым, он допустим в качестве строки поиска.</span><span class="sxs-lookup"><span data-stu-id="f0da3-683">For example, while `Path.Join("c:\\", "temp", "*.txt")` might be invalid when creating a file, it is valid as a search string.</span></span> <span data-ttu-id="f0da3-684">Таким `Join` образом, метод успешно интерпретирует его.</span><span class="sxs-lookup"><span data-stu-id="f0da3-684">The `Join` method therefore successfully interprets it.</span></span>

             </format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, ReadOnlySpan&lt;char&gt; path3, ReadOnlySpan&lt;char&gt; path4);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(valuetype System.ReadOnlySpan`1&lt;char&gt; path1, valuetype System.ReadOnlySpan`1&lt;char&gt; path2, valuetype System.ReadOnlySpan`1&lt;char&gt; path3, valuetype System.ReadOnlySpan`1&lt;char&gt; path4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Join(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (path1 As ReadOnlySpan(Of Char), path2 As ReadOnlySpan(Of Char), path3 As ReadOnlySpan(Of Char), path4 As ReadOnlySpan(Of Char)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, ReadOnlySpan&lt;char&gt; path3, ReadOnlySpan&lt;char&gt; path4);" />
      <MemberSignature Language="F#" Value="static member Join : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; -&gt; string" Usage="System.IO.Path.Join (path1, path2, path3, path4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="path2" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="path3" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="path4" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="3" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="path1"><span data-ttu-id="f0da3-685">Диапазон символов, содержащий первый путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-685">A character span that contains the first path to join.</span></span></param>
        <param name="path2"><span data-ttu-id="f0da3-686">Диапазон символов, содержащий второй путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-686">A character span that contains the second path to join.</span></span></param>
        <param name="path3"><span data-ttu-id="f0da3-687">Диапазон символов, содержащий третий путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-687">A character span that contains the third path to join.</span></span></param>
        <param name="path4"><span data-ttu-id="f0da3-688">Диапазон символов, содержащий четвертый путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-688">A character span that contains the fourth path to join.</span></span></param>
        <summary><span data-ttu-id="f0da3-689">Сцепляет четыре компонента пути в один путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-689">Concatenates four path components into a single path.</span></span></summary>
        <returns><span data-ttu-id="f0da3-690">Сцепленный путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-690">The concatenated path.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="f0da3-691">`path`Этот метод просто объединяет `path2` `path3` , и`path4` и добавляет символ разделителя каталога между любыми компонентами пути, если он еще не существует.</span><span class="sxs-lookup"><span data-stu-id="f0da3-691">This method simply concatenates `path`, `path2`, `path3` and `path4` and adds a directory separator character between any of the path components if one is not already present.</span></span> <span data-ttu-id="f0da3-692">Если значение <xref:System.ReadOnlySpan%601.Length> любого из `path1`аргументов, `path2` `path3` или`path4` равно нулю, метод объединяет остальные аргументы.</span><span class="sxs-lookup"><span data-stu-id="f0da3-692">If the <xref:System.ReadOnlySpan%601.Length> of any of `path1`, `path2`, `path3` or `path4` argument is zero, the method concatenates the remaining arguments.</span></span> <span data-ttu-id="f0da3-693">Если значение <xref:System.ReadOnlySpan%601.Length?displayProperty=nameWithType> всех компонентов равно нулю, метод возвращает <xref:System.String.Empty?displayProperty=nameWithType>значение.</span><span class="sxs-lookup"><span data-stu-id="f0da3-693">If the <xref:System.ReadOnlySpan%601.Length?displayProperty=nameWithType> of all components is zero, the method returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>

<span data-ttu-id="f0da3-694">Если `path1` или `path2` или `Join` заканчивается символом разделителя пути, который не подходит для целевой платформы, метод сохраняет символ разделителя исходного пути и добавляет поддерживаемый. `path3`</span><span class="sxs-lookup"><span data-stu-id="f0da3-694">If `path1` or `path2` or `path3` ends in a path separator character that is not appropriate for the target platform, the `Join` method preserves the original path separator character and appends the supported one.</span></span> <span data-ttu-id="f0da3-695">Эта проблема возникает в жестко запрограммированных путях, использующих символ обратной косой черты Windows ("\"), который не распознается как разделитель пути в системах на базе UNIX.</span><span class="sxs-lookup"><span data-stu-id="f0da3-695">This issue arises in hard-coded paths that use the Windows backslash ("\") character, which is not recognized as a path separator on Unix-based systems.</span></span> <span data-ttu-id="f0da3-696">Чтобы обойти эту ошибку, можно:</span><span class="sxs-lookup"><span data-stu-id="f0da3-696">To work around this issue, you can:</span></span>

- <span data-ttu-id="f0da3-697">Получите значение свойства, <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> а не жестко запрограммированный символ разделителя каталога.</span><span class="sxs-lookup"><span data-stu-id="f0da3-697">Retrieve the value of the <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> property rather than hard-coding a directory separator character.</span></span>

- <span data-ttu-id="f0da3-698">В качестве символа разделителя каталога следует использовать косую черту ("/").</span><span class="sxs-lookup"><span data-stu-id="f0da3-698">Use a forward slash ("/") as the directory separator character.</span></span> <span data-ttu-id="f0da3-699">Этот символ возвращается <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> свойством в системах на базе UNIX и <xref:System.IO.Path.AltDirectorySeparatorChar?displayProperty=nameWithType> свойством в системах Windows.</span><span class="sxs-lookup"><span data-stu-id="f0da3-699">This character is returned by the <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> property on Unix-based systems and by the <xref:System.IO.Path.AltDirectorySeparatorChar?displayProperty=nameWithType> property on Windows systems.</span></span>

<span data-ttu-id="f0da3-700"><xref:System.IO.Path.Combine%2A> В<xref:System.IO.Path.Join%2A> отличие от метода, метод не пытается получить корень возвращаемого пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-700">Unlike the <xref:System.IO.Path.Combine%2A> method, the <xref:System.IO.Path.Join%2A> method does not attempt to root the returned path.</span></span> <span data-ttu-id="f0da3-701">(То есть если `path2` или `path2` или `path3` является абсолютным путем, `Join` метод не удаляет предыдущие пути, как это <xref:System.IO.Path.Combine%2A> делает метод.</span><span class="sxs-lookup"><span data-stu-id="f0da3-701">(That is, if `path2` or `path2` or `path3` is an absolute path, the `Join` method does not discard the previous paths as the <xref:System.IO.Path.Combine%2A> method does.</span></span>

<span data-ttu-id="f0da3-702">Не все недопустимые символы в именах каталогов и файлов считаются неприемлемыми `Join` для метода, так как эти символы можно использовать для поиска подстановочных знаков.</span><span class="sxs-lookup"><span data-stu-id="f0da3-702">Not all invalid characters for directory and file names are interpreted as unacceptable by the `Join` method, because you can use these characters for search wildcard characters.</span></span> <span data-ttu-id="f0da3-703">Например, хотя `Path.Join("c:\\", "temp", "*.txt")` при создании файла может быть недопустимым, он допустим в качестве строки поиска.</span><span class="sxs-lookup"><span data-stu-id="f0da3-703">For example, while `Path.Join("c:\\", "temp", "*.txt")` might be invalid when creating a file, it is valid as a search string.</span></span> <span data-ttu-id="f0da3-704">Таким `Join` образом, метод успешно интерпретирует его.</span><span class="sxs-lookup"><span data-stu-id="f0da3-704">The `Join` method therefore successfully interprets it.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (string path1, string path2, string path3, string path4);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(string path1, string path2, string path3, string path4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Join(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (path1 As String, path2 As String, path3 As String, path4 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(System::String ^ path1, System::String ^ path2, System::String ^ path3, System::String ^ path4);" />
      <MemberSignature Language="F#" Value="static member Join : string * string * string * string -&gt; string" Usage="System.IO.Path.Join (path1, path2, path3, path4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="path2" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="path3" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="path4" Type="System.String" Index="3" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="path1"><span data-ttu-id="f0da3-705">Первый путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-705">The first path to join.</span></span></param>
        <param name="path2"><span data-ttu-id="f0da3-706">Второй путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-706">The second path to join.</span></span></param>
        <param name="path3"><span data-ttu-id="f0da3-707">Третий путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-707">The third path to join.</span></span></param>
        <param name="path4"><span data-ttu-id="f0da3-708">Четвертый путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-708">The fourth path to join.</span></span></param>
        <summary><span data-ttu-id="f0da3-709">Сцепляет четыре пути в один путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-709">Concatenates four paths into a single path.</span></span></summary>
        <returns><span data-ttu-id="f0da3-710">Сцепленный путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-710">The concatenated path.</span></span></returns>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="f0da3-711">`path`Этот метод просто объединяет `path2` `path3` , и`path4` и добавляет символ разделителя каталога между любыми компонентами пути, если он еще не существует.</span><span class="sxs-lookup"><span data-stu-id="f0da3-711">This method simply concatenates `path`, `path2`, `path3` and `path4` and adds a directory separator character between any of the path components if one is not already present.</span></span> <span data-ttu-id="f0da3-712">Если длина `path1`любого из аргументов `path3` , `path2`или `path4` равна нулю, Метод сцепляет оставшиеся аргументы.</span><span class="sxs-lookup"><span data-stu-id="f0da3-712">If the length of any of `path1`, `path2`, `path3` or `path4` argument is zero, the method concatenates the remaining arguments.</span></span> <span data-ttu-id="f0da3-713">Если длина результирующей объединенной строки равна нулю, метод возвращает <xref:System.String.Empty?displayProperty=nameWithType>значение.</span><span class="sxs-lookup"><span data-stu-id="f0da3-713">If the length of the resulting concatenated string is zero, the method returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>

<span data-ttu-id="f0da3-714">Если `path1` или `path2` или `Join` заканчивается символом разделителя пути, который не подходит для целевой платформы, метод сохраняет символ разделителя исходного пути и добавляет поддерживаемый. `path3`</span><span class="sxs-lookup"><span data-stu-id="f0da3-714">If `path1` or `path2` or `path3` ends in a path separator character that is not appropriate for the target platform, the `Join` method preserves the original path separator character and appends the supported one.</span></span> <span data-ttu-id="f0da3-715">Эта проблема возникает в жестко запрограммированных путях, использующих символ обратной косой черты Windows ("\"), который не распознается как разделитель пути в системах на базе UNIX.</span><span class="sxs-lookup"><span data-stu-id="f0da3-715">This issue arises in hard-coded paths that use the Windows backslash ("\") character, which is not recognized as a path separator on Unix-based systems.</span></span> <span data-ttu-id="f0da3-716">Чтобы обойти эту ошибку, можно:</span><span class="sxs-lookup"><span data-stu-id="f0da3-716">To work around this issue, you can:</span></span>

- <span data-ttu-id="f0da3-717">Получите значение свойства, <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> а не жестко запрограммированный символ разделителя каталога.</span><span class="sxs-lookup"><span data-stu-id="f0da3-717">Retrieve the value of the <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> property rather than hard-coding a directory separator character.</span></span>

- <span data-ttu-id="f0da3-718">В качестве символа разделителя каталога следует использовать косую черту ("/").</span><span class="sxs-lookup"><span data-stu-id="f0da3-718">Use a forward slash ("/") as the directory separator character.</span></span> <span data-ttu-id="f0da3-719">Этот символ возвращается <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> свойством в системах на базе UNIX и <xref:System.IO.Path.AltDirectorySeparatorChar?displayProperty=nameWithType> свойством в системах Windows.</span><span class="sxs-lookup"><span data-stu-id="f0da3-719">This character is returned by the <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> property on Unix-based systems and by the <xref:System.IO.Path.AltDirectorySeparatorChar?displayProperty=nameWithType> property on Windows systems.</span></span>

<span data-ttu-id="f0da3-720"><xref:System.IO.Path.Combine%2A> В<xref:System.IO.Path.Join%2A> отличие от метода, метод не пытается получить корень возвращаемого пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-720">Unlike the <xref:System.IO.Path.Combine%2A> method, the <xref:System.IO.Path.Join%2A> method does not attempt to root the returned path.</span></span> <span data-ttu-id="f0da3-721">(То есть если `path2` или `path2` или `path3` является абсолютным путем, `Join` метод не удаляет предыдущие пути, как это <xref:System.IO.Path.Combine%2A> делает метод.</span><span class="sxs-lookup"><span data-stu-id="f0da3-721">(That is, if `path2` or `path2` or `path3` is an absolute path, the `Join` method does not discard the previous paths as the <xref:System.IO.Path.Combine%2A> method does.</span></span>

<span data-ttu-id="f0da3-722">Не все недопустимые символы в именах каталогов и файлов считаются неприемлемыми `Join` для метода, так как эти символы можно использовать для поиска подстановочных знаков.</span><span class="sxs-lookup"><span data-stu-id="f0da3-722">Not all invalid characters for directory and file names are interpreted as unacceptable by the `Join` method, because you can use these characters for search wildcard characters.</span></span> <span data-ttu-id="f0da3-723">Например, хотя `Path.Join("c:\\", "temp", "*.txt")` при создании файла может быть недопустимым, он допустим в качестве строки поиска.</span><span class="sxs-lookup"><span data-stu-id="f0da3-723">For example, while `Path.Join("c:\\", "temp", "*.txt")` might be invalid when creating a file, it is valid as a search string.</span></span> <span data-ttu-id="f0da3-724">Таким `Join` образом, метод успешно интерпретирует его.</span><span class="sxs-lookup"><span data-stu-id="f0da3-724">The `Join` method therefore successfully interprets it.</span></span>

             </format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public static readonly char PathSeparator;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly char PathSeparator" />
      <MemberSignature Language="DocId" Value="F:System.IO.Path.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PathSeparator As Char " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly char PathSeparator;" />
      <MemberSignature Language="F#" Value=" staticval mutable PathSeparator : char" Usage="System.IO.Path.PathSeparator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0da3-725">Разделитель, задаваемый платформой, который используется в переменных среды для разделения строк пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-725">A platform-specific separator character used to separate path strings in environment variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0da3-726">На настольных платформах под управлением Windows значением этого поля является точка с запятой (;) по умолчанию, но может различаться на других платформах.</span><span class="sxs-lookup"><span data-stu-id="f0da3-726">On Windows-based desktop platforms, the value of this field is the semicolon (;) by default, but might vary on other platforms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0da3-727">В следующем примере демонстрируется использование `PathSeparator` поля.</span><span class="sxs-lookup"><span data-stu-id="f0da3-727">The following example demonstrates the use of the `PathSeparator` field.</span></span>  
  
 [!code-cpp[System.IO.Path Members#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#13)]
 [!code-csharp[System.IO.Path Members#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#13)]
 [!code-vb[System.IO.Path Members#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#13)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f0da3-728">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="f0da3-728">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f0da3-729">Практическое руководство. Считывание текста из файла</span><span class="sxs-lookup"><span data-stu-id="f0da3-729">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f0da3-730">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="f0da3-730">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TrimEndingDirectorySeparator">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;char&gt; TrimEndingDirectorySeparator (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;char&gt; TrimEndingDirectorySeparator(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.TrimEndingDirectorySeparator(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TrimEndingDirectorySeparator (path As ReadOnlySpan(Of Char)) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ReadOnlySpan&lt;char&gt; TrimEndingDirectorySeparator(ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="F#" Value="static member TrimEndingDirectorySeparator : ReadOnlySpan&lt;char&gt; -&gt; ReadOnlySpan&lt;char&gt;" Usage="System.IO.Path.TrimEndingDirectorySeparator path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimEndingDirectorySeparator">
      <MemberSignature Language="C#" Value="public static string TrimEndingDirectorySeparator (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string TrimEndingDirectorySeparator(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.TrimEndingDirectorySeparator(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TrimEndingDirectorySeparator (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ TrimEndingDirectorySeparator(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member TrimEndingDirectorySeparator : string -&gt; string" Usage="System.IO.Path.TrimEndingDirectorySeparator path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryJoin">
      <Docs>
        <summary><span data-ttu-id="f0da3-731">Пытается сцепить отдельные компоненты пути в предварительно выделенный диапазон символов и возвращает значение, показывающее, успешно ли выполнена эта операция.</span><span class="sxs-lookup"><span data-stu-id="f0da3-731">Attempts to concatenate individual path components to a preallocated character span, and returns a value that indicates whether the operation succeeded.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
 
## Remarks  

<span data-ttu-id="f0da3-732">Диапазон символов назначения должен быть достаточно большим, чтобы вместить Объединенный путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-732">The destination character span must be large enough to hold the concatenated path.</span></span> <span data-ttu-id="f0da3-733">Затем можно получить Объединенный путь, вызвав <xref:System.Span%601.Slice%2A?displayProperty=nameWithType> метод, как показано в следующем примере.</span><span class="sxs-lookup"><span data-stu-id="f0da3-733">You can then retrieve the concatenated path by calling the <xref:System.Span%601.Slice%2A?displayProperty=nameWithType> method, as the following example illustrates.</span></span>

[!code-csharp[IsPathRooted](~/samples/snippets/csharp/api/system.IO/Path/TryJoin/program.cs)]

         ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryJoin">
      <MemberSignature Language="C#" Value="public static bool TryJoin (ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, Span&lt;char&gt; destination, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryJoin(valuetype System.ReadOnlySpan`1&lt;char&gt; path1, valuetype System.ReadOnlySpan`1&lt;char&gt; path2, valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.TryJoin(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Span{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryJoin (path1 As ReadOnlySpan(Of Char), path2 As ReadOnlySpan(Of Char), destination As Span(Of Char), ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryJoin(ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, Span&lt;char&gt; destination, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberSignature Language="F#" Value="static member TryJoin : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * Span&lt;char&gt; *  -&gt; bool" Usage="System.IO.Path.TryJoin (path1, path2, destination, charsWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="path2" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path1"><span data-ttu-id="f0da3-734">Диапазон символов, содержащий первый путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-734">A character span that contains the first path to join.</span></span></param>
        <param name="path2"><span data-ttu-id="f0da3-735">Диапазон символов, содержащий второй путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-735">A character span that contains the second path to join.</span></span></param>
        <param name="destination"><span data-ttu-id="f0da3-736">Диапазон символов для указания объединенного пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-736">A character span to hold the concatenated path.</span></span></param>
        <param name="charsWritten"><span data-ttu-id="f0da3-737">При возврате метода это значение показывает количество символов, записанных в <paramref name="destination" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-737">When the method returns, a value that indicates the number of characters written to the <paramref name="destination" />.</span></span></param>
        <summary><span data-ttu-id="f0da3-738">Пытается сцепить два компонента пути в один предварительно выделенный диапазон символов и возвращает значение, показывающее, успешно ли выполнена эта операция.</span><span class="sxs-lookup"><span data-stu-id="f0da3-738">Attempts to concatenate two path components to a single preallocated character span, and returns a value that indicates whether the operation succeeded.</span></span></summary>
        <returns><span data-ttu-id="f0da3-739">Значение <see langword="true" />, если операция объединения выполнена успешно; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-739"><see langword="true" /> if the concatenation operation is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="f0da3-740">`destination`значение должно быть достаточно большим, чтобы вместить Объединенный путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-740">`destination` must be large enough to hold the concatenated path.</span></span> <span data-ttu-id="f0da3-741">Затем можно получить Объединенный путь, вызвав <xref:System.Span%601.Slice%2A?displayProperty=nameWithType> метод, как показано в примере.</span><span class="sxs-lookup"><span data-stu-id="f0da3-741">You can then retrieve the concatenated path by calling the <xref:System.Span%601.Slice%2A?displayProperty=nameWithType> method, as the example illustrates.</span></span>

         ]]></format>
        </remarks>
        <related type="article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="f0da3-742">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="f0da3-742">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryJoin">
      <MemberSignature Language="C#" Value="public static bool TryJoin (ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, ReadOnlySpan&lt;char&gt; path3, Span&lt;char&gt; destination, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryJoin(valuetype System.ReadOnlySpan`1&lt;char&gt; path1, valuetype System.ReadOnlySpan`1&lt;char&gt; path2, valuetype System.ReadOnlySpan`1&lt;char&gt; path3, valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.TryJoin(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Span{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryJoin (path1 As ReadOnlySpan(Of Char), path2 As ReadOnlySpan(Of Char), path3 As ReadOnlySpan(Of Char), destination As Span(Of Char), ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryJoin(ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, ReadOnlySpan&lt;char&gt; path3, Span&lt;char&gt; destination, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberSignature Language="F#" Value="static member TryJoin : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * Span&lt;char&gt; *  -&gt; bool" Usage="System.IO.Path.TryJoin (path1, path2, path3, destination, charsWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="path2" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="path3" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="4" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path1"><span data-ttu-id="f0da3-743">Диапазон символов, содержащий первый путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-743">A character span that contains the first path to join.</span></span></param>
        <param name="path2"><span data-ttu-id="f0da3-744">Диапазон символов, содержащий второй путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-744">A character span that contains the second path to join.</span></span></param>
        <param name="path3"><span data-ttu-id="f0da3-745">Диапазон символов, содержащий третий путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="f0da3-745">A character span that contains the third path to join.</span></span></param>
        <param name="destination"><span data-ttu-id="f0da3-746">Диапазон символов для указания объединенного пути.</span><span class="sxs-lookup"><span data-stu-id="f0da3-746">A character span to hold the concatenated path.</span></span></param>
        <param name="charsWritten"><span data-ttu-id="f0da3-747">При возврате метода это значение показывает количество символов, записанных в <paramref name="destination" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-747">When the method returns, a value that indicates the number of characters written to the <paramref name="destination" />.</span></span></param>
        <summary><span data-ttu-id="f0da3-748">Пытается сцепить два компонента пути в один предварительно выделенный диапазон символов и возвращает значение, показывающее, успешно ли выполнена эта операция.</span><span class="sxs-lookup"><span data-stu-id="f0da3-748">Attempts to concatenate two path components to a single preallocated character span, and returns a value that indicates whether the operation succeeded.</span></span></summary>
        <returns><span data-ttu-id="f0da3-749">Значение <see langword="true" />, если операция объединения выполнена успешно; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f0da3-749"><see langword="true" /> if the concatenation operation is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="f0da3-750">`destination`значение должно быть достаточно большим, чтобы вместить Объединенный путь.</span><span class="sxs-lookup"><span data-stu-id="f0da3-750">`destination` must be large enough to hold the concatenated path.</span></span> <span data-ttu-id="f0da3-751">Затем можно получить Объединенный путь, вызвав <xref:System.Span%601.Slice%2A?displayProperty=nameWithType> метод, как показано в примере.</span><span class="sxs-lookup"><span data-stu-id="f0da3-751">You can then retrieve the concatenated path by calling the <xref:System.Span%601.Slice%2A?displayProperty=nameWithType> method, as the example illustrates.</span></span>

         ]]></format>
        </remarks>
        <related type="article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="f0da3-752">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="f0da3-752">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="VolumeSeparatorChar">
      <MemberSignature Language="C#" Value="public static readonly char VolumeSeparatorChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly char VolumeSeparatorChar" />
      <MemberSignature Language="DocId" Value="F:System.IO.Path.VolumeSeparatorChar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VolumeSeparatorChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly char VolumeSeparatorChar;" />
      <MemberSignature Language="F#" Value=" staticval mutable VolumeSeparatorChar : char" Usage="System.IO.Path.VolumeSeparatorChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0da3-753">Предоставляет разделитель томов, задаваемый платформой.</span><span class="sxs-lookup"><span data-stu-id="f0da3-753">Provides a platform-specific volume separator character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0da3-754">Значение этого поля является двоеточием (:) в ОС Windows и Macintosh и косая черта (/) в операционных системах UNIX.</span><span class="sxs-lookup"><span data-stu-id="f0da3-754">The value of this field is a colon (:) on Windows and Macintosh, and a slash (/) on UNIX operating systems.</span></span> <span data-ttu-id="f0da3-755">Это наиболее полезно для таких путей синтаксического анализа, как c:\Windows или Макволуме: системная папка.</span><span class="sxs-lookup"><span data-stu-id="f0da3-755">This is most useful for parsing paths such as "c:\windows" or "MacVolume:System Folder".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f0da3-756">В следующем примере демонстрируется использование `VolumeSeparatorChar` поля.</span><span class="sxs-lookup"><span data-stu-id="f0da3-756">The following example demonstrates the use of the `VolumeSeparatorChar` field.</span></span>  
  
 [!code-cpp[System.IO.Path Members#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#13)]
 [!code-csharp[System.IO.Path Members#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#13)]
 [!code-vb[System.IO.Path Members#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#13)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="f0da3-757">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="f0da3-757">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f0da3-758">Практическое руководство. Считывание текста из файла</span><span class="sxs-lookup"><span data-stu-id="f0da3-758">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="f0da3-759">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="f0da3-759">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
