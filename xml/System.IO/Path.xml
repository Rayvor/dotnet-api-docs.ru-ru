<Type Name="Path" FullName="System.IO.Path">
  <Metadata><Meta Name="ms.openlocfilehash" Value="87efe827b4d4d649387abf9f4fc5627fccf54480" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65013934" /></Metadata><TypeSignature Language="C#" Value="public static class Path" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed Path extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Path" />
  <TypeSignature Language="VB.NET" Value="Public Class Path" />
  <TypeSignature Language="C++ CLI" Value="public ref class Path abstract sealed" />
  <TypeSignature Language="F#" Value="type Path = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ab677-101">Выполняет операции для экземпляров класса <see cref="T:System.String" />, содержащих сведения о пути к файлу или каталогу.</span><span class="sxs-lookup"><span data-stu-id="ab677-101">Performs operations on <see cref="T:System.String" /> instances that contain file or directory path information.</span></span> <span data-ttu-id="ab677-102">Эти операции выполняются межплатформенным способом.</span><span class="sxs-lookup"><span data-stu-id="ab677-102">These operations are performed in a cross-platform manner.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
 <span data-ttu-id="ab677-103">Контур — это строка, представляющая расположение файла или каталога.</span><span class="sxs-lookup"><span data-stu-id="ab677-103">A path is a string that provides the location of a file or directory.</span></span> <span data-ttu-id="ab677-104">Путь не обязательно указывает на место на диске. например путь может отображаться в расположение в памяти или на устройстве.</span><span class="sxs-lookup"><span data-stu-id="ab677-104">A path does not necessarily point to a location on disk; for example, a path might map to a location in memory or on a device.</span></span> <span data-ttu-id="ab677-105">Точный формат пути определяется текущей платформе.</span><span class="sxs-lookup"><span data-stu-id="ab677-105">The exact format of a path is determined by the current platform.</span></span> <span data-ttu-id="ab677-106">Например в некоторых системах путь можно начать с буквы диска или тома, хотя этот элемент отсутствует в других системах.</span><span class="sxs-lookup"><span data-stu-id="ab677-106">For example, on some systems, a path can start with a drive or volume letter, while this element is not present in other systems.</span></span> <span data-ttu-id="ab677-107">В некоторых системах пути к файлам может содержать расширения, которые указывают тип сведений, хранящихся в файле.</span><span class="sxs-lookup"><span data-stu-id="ab677-107">On some systems, file paths can contain extensions, which indicate the type of information stored in the file.</span></span> <span data-ttu-id="ab677-108">Формат расширение имени файла зависит от платформы; Например некоторые системы ограничивают расширения до трех символов, а другие нет.</span><span class="sxs-lookup"><span data-stu-id="ab677-108">The format of a file name extension is platform-dependent; for example, some systems limit extensions to three characters, and others do not.</span></span> <span data-ttu-id="ab677-109">Текущая платформа также определяет набор символов, используемый для разделения элементов пути и набор символов, которые нельзя использовать при указании пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-109">The current platform also determines the set of characters used to separate the elements of a path, and the set of characters that cannot be used when specifying paths.</span></span> <span data-ttu-id="ab677-110">Из-за этих различий, поля `Path` класса, а также точное поведение некоторых членов `Path` класс, зависят от платформы.</span><span class="sxs-lookup"><span data-stu-id="ab677-110">Because of these differences, the fields of the `Path` class as well as the exact behavior of some members of the `Path` class are platform-dependent.</span></span>  
  
 <span data-ttu-id="ab677-111">Путь может содержать сведения о расположении абсолютным или относительным.</span><span class="sxs-lookup"><span data-stu-id="ab677-111">A path can contain absolute or relative location information.</span></span> <span data-ttu-id="ab677-112">Абсолютные пути полностью указать расположение: файл или каталог можно однозначно идентифицировать независимо от текущего расположения.</span><span class="sxs-lookup"><span data-stu-id="ab677-112">Absolute paths fully specify a location: the file or directory can be uniquely identified regardless of the current location.</span></span> <span data-ttu-id="ab677-113">Относительные пути укажите расположение частичного: текущее расположение используется в качестве отправной точки при поиске файла, заданного параметром относительный путь.</span><span class="sxs-lookup"><span data-stu-id="ab677-113">Relative paths specify a partial location: the current location is used as the starting point when locating a file specified with a relative path.</span></span> <span data-ttu-id="ab677-114">Чтобы определить текущий каталог, вызовите <xref:System.IO.Directory.GetCurrentDirectory%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ab677-114">To determine the current directory, call <xref:System.IO.Directory.GetCurrentDirectory%2A?displayProperty=nameWithType>.</span></span>  

 <span data-ttu-id="ab677-115">.NET core 1.1 и более поздних версий и .NET Framework 4.6.2 и более поздние версии также поддерживают доступ для объектов файловой системы, имена устройств, таких как "\\? \C:\".</span><span class="sxs-lookup"><span data-stu-id="ab677-115">.NET Core 1.1 and later versions and .NET Framework 4.6.2 and later versions also support access to file system objects that are device names, such as "\\?\C:\".</span></span>

<span data-ttu-id="ab677-116">Дополнительные сведения о форматах файлов, путь на Windows, см. в разделе [путь форматы файлов в системах Windows](~/docs/standard/io/file-path-formats.md).</span><span class="sxs-lookup"><span data-stu-id="ab677-116">For more information on file path formats on Windows, see [File path formats on Windows systems](~/docs/standard/io/file-path-formats.md).</span></span>

 <span data-ttu-id="ab677-117">Большинство членов `Path` класса не взаимодействуют с файловой системой и не проверяет существование файла, указанного с помощью строки пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-117">Most members of the `Path` class do not interact with the file system and do not verify the existence of the file specified by a path string.</span></span> <span data-ttu-id="ab677-118">`Path` члены класса, измените строку пути, такие как <xref:System.IO.Path.ChangeExtension%2A>, не оказывают влияния на имена файлов в файловой системе.</span><span class="sxs-lookup"><span data-stu-id="ab677-118">`Path` class members that modify a path string, such as <xref:System.IO.Path.ChangeExtension%2A>, have no effect on names of files in the file system.</span></span> <span data-ttu-id="ab677-119">`Path` члены, тем не менее, проверять содержимое указанной строки пути и инициировать <xref:System.ArgumentException> исключение, если строка содержит символы, недопустимые в строки пути, как определено в символах, возвращаемые <xref:System.IO.Path.GetInvalidPathChars%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ab677-119">`Path` members do, however, validate the contents of a specified path string, and throw an <xref:System.ArgumentException> exception if the string contains characters that are not valid in path strings, as defined in the characters returned from the <xref:System.IO.Path.GetInvalidPathChars%2A> method.</span></span> <span data-ttu-id="ab677-120">Например, в настольных системах, работающих под управлением Windows, недопустимых символов пути может включать кавычек («), меньше (\<), больше (>), канал (&#124;), символ backspace (\b), значение null (\0) и символы Юникода 16 до 18 и от 20 до 25.</span><span class="sxs-lookup"><span data-stu-id="ab677-120">For example, on Windows-based desktop platforms, invalid path characters might include quote ("), less than (\<), greater than (>), pipe (&#124;), backspace (\b), null (\0), and Unicode characters 16 through 18 and 20 through 25.</span></span>  
  
 <span data-ttu-id="ab677-121">Члены `Path` позволяют легко и быстро выполнять основные операции, такие как определить, является ли расширение имени файла, пути и объединение двух строк в один путь.</span><span class="sxs-lookup"><span data-stu-id="ab677-121">The members of the `Path` class enable you to quickly and easily perform common operations such as determining whether a file name extension is part of a path, and combining two strings into one path name.</span></span>  
  
 <span data-ttu-id="ab677-122">Все члены `Path` класса являются статичными и могут быть вызваны без наличия экземпляра пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-122">All members of the `Path` class are static and can therefore be called without having an instance of a path.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab677-123">В членах, которые принимают путь в качестве входной строки этот путь должен иметь правильный формат, или возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="ab677-123">In members that accept a path as an input string, that path must be well-formed or an exception is raised.</span></span> <span data-ttu-id="ab677-124">Например если путь является полным, но начинается с пробела, путь не усекается в методах класса.</span><span class="sxs-lookup"><span data-stu-id="ab677-124">For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</span></span> <span data-ttu-id="ab677-125">Таким образом путь имеет неправильный формат, и возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="ab677-125">Therefore, the path is malformed and an exception is raised.</span></span> <span data-ttu-id="ab677-126">Аналогичным образом не может дважды ввести полный путь или сочетание путей.</span><span class="sxs-lookup"><span data-stu-id="ab677-126">Similarly, a path or a combination of paths cannot be fully qualified twice.</span></span> <span data-ttu-id="ab677-127">Например «c:\temp c:\windows» также приводит к появлению исключения в большинстве случаев.</span><span class="sxs-lookup"><span data-stu-id="ab677-127">For example, "c:\temp c:\windows" also raises an exception in most cases.</span></span> <span data-ttu-id="ab677-128">При использовании методов, которые принимают строку пути, убедитесь в том, что путь правильного формата.</span><span class="sxs-lookup"><span data-stu-id="ab677-128">Ensure that your paths are well-formed when using methods that accept a path string.</span></span>  
  
 <span data-ttu-id="ab677-129">В членах, которые принимают путь путь может ссылаться на файл или каталог.</span><span class="sxs-lookup"><span data-stu-id="ab677-129">In members that accept a path, the path can refer to a file or just a directory.</span></span> <span data-ttu-id="ab677-130">Указанный путь может относиться и относительный путь или путь универсальными именами (UNC) для имени сервера и общей папки.</span><span class="sxs-lookup"><span data-stu-id="ab677-130">The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</span></span> <span data-ttu-id="ab677-131">Например все ниже приведены допустимые пути:</span><span class="sxs-lookup"><span data-stu-id="ab677-131">For example, all the following are acceptable paths:</span></span>  
  
-   <span data-ttu-id="ab677-132">«c:\\\MyDir\\\MyFile.txt» в C#, или «c:\MyDir\MyFile.txt» в Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="ab677-132">"c:\\\MyDir\\\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="ab677-133">«c:\\\MyDir» в C#, или «c:\MyDir» в Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="ab677-133">"c:\\\MyDir" in C#, or "c:\MyDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="ab677-134">«MyDir\\\MySubdir» в C#, или «MyDir\MySubDir» в Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="ab677-134">"MyDir\\\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</span></span>  
  
-   <span data-ttu-id="ab677-135">"\\\\\\\MyServer\\\MyShare» в C#, или"\\\MyServer\MyShare» в Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="ab677-135">"\\\\\\\MyServer\\\MyShare" in C#, or "\\\MyServer\MyShare" in Visual Basic.</span></span>  
  
 <span data-ttu-id="ab677-136">Так как все эти операции выполняются для строк, вы не сможете проверить, что результаты являются допустимыми во всех сценариях.</span><span class="sxs-lookup"><span data-stu-id="ab677-136">Because all these operations are performed on strings, it is impossible to verify that the results are valid in all scenarios.</span></span> <span data-ttu-id="ab677-137">Например <xref:System.IO.Path.GetExtension%2A> метод выполняет синтаксический анализ строки, который можно передать и возвращает модуль из этой строки.</span><span class="sxs-lookup"><span data-stu-id="ab677-137">For example, the <xref:System.IO.Path.GetExtension%2A> method parses a string that you pass to it and returns the extension from that string.</span></span> <span data-ttu-id="ab677-138">Тем не менее это не означает, что файл с таким расширением существует на диске.</span><span class="sxs-lookup"><span data-stu-id="ab677-138">However, this does not mean that a file with that extension exists on the disk.</span></span>  
  
 <span data-ttu-id="ab677-139">Список задач ввода-вывода, см. в разделе [распространенные задачи ввода-вывода](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="ab677-139">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>   
  
## Examples  
 <span data-ttu-id="ab677-140">В следующем примере показано, некоторые из основных членов `Path` класса.</span><span class="sxs-lookup"><span data-stu-id="ab677-140">The following example demonstrates some of the main members of the `Path` class.</span></span>  
  
 [!code-cpp[path class#1](~/samples/snippets/cpp/VS_Snippets_CLR/Path Class/CPP/path class.cpp#1)]
 [!code-csharp[path class#1](~/samples/snippets/csharp/VS_Snippets_CLR/Path Class/CS/path class.cs#1)]
 [!code-vb[path class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Path Class/VB/path class.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ab677-141">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="ab677-141">File and Stream I/O</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ab677-142">Практическое руководство. Чтение текста из файла</span><span class="sxs-lookup"><span data-stu-id="ab677-142">How to: Read Text from a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ab677-143">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="ab677-143">How to: Write Text to a File</span></span></related>
    <related type="Article" href="~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md"><span data-ttu-id="ab677-144">Практическое руководство. Считывание данных из нового файла и запись в этот файл</span><span class="sxs-lookup"><span data-stu-id="ab677-144">How to: Read and Write to a Newly Created Data File</span></span></related>
    <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="ab677-145">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="ab677-145">File path formats on Windows systems</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AltDirectorySeparatorChar">
      <MemberSignature Language="C#" Value="public static readonly char AltDirectorySeparatorChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly char AltDirectorySeparatorChar" />
      <MemberSignature Language="DocId" Value="F:System.IO.Path.AltDirectorySeparatorChar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AltDirectorySeparatorChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly char AltDirectorySeparatorChar;" />
      <MemberSignature Language="F#" Value=" staticval mutable AltDirectorySeparatorChar : char" Usage="System.IO.Path.AltDirectorySeparatorChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab677-146">Предоставляет дополнительный символ, задаваемый платформой, для разделения уровней каталогов в строке пути, в которой отражена иерархическая организация файловой системы.</span><span class="sxs-lookup"><span data-stu-id="ab677-146">Provides a platform-specific alternate character used to separate directory levels in a path string that reflects a hierarchical file system organization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
<span data-ttu-id="ab677-147">Это поле может иметь то же значение, что <xref:System.IO.Path.DirectorySeparatorChar>.</span><span class="sxs-lookup"><span data-stu-id="ab677-147">This field can have the same value as <xref:System.IO.Path.DirectorySeparatorChar>.</span></span> <span data-ttu-id="ab677-148">`AltDirectorySeparatorChar` и <xref:System.IO.Path.DirectorySeparatorChar> оба являются допустимыми для разделения уровней каталогов в строке пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-148">`AltDirectorySeparatorChar` and <xref:System.IO.Path.DirectorySeparatorChar> are both valid for separating directory levels in a path string.</span></span>  
  
<span data-ttu-id="ab677-149">Значение этого поля является косая черта (/) в Windows и операционных систем на базе Unix.</span><span class="sxs-lookup"><span data-stu-id="ab677-149">The value of this field is a slash ('/') on both Windows and Unix-based operating systems.</span></span>  
  
## Examples  

<span data-ttu-id="ab677-150">В следующем примере отображается <xref:System.IO.Path> поле значения в Windows и в системах на основе Unix.</span><span class="sxs-lookup"><span data-stu-id="ab677-150">The following example displays <xref:System.IO.Path> field values on Windows and on Unix-based systems.</span></span> <span data-ttu-id="ab677-151">Обратите внимание, что Windows поддерживает косую черту (возвращаемая <xref:System.IO.Path.AltDirectorySeparatorChar> поля) или обратную косую черту (возвращаемая <xref:System.IO.Path.DirectorySeparatorChar> поля) в пути символы-разделители, хотя в системах UNIX поддерживает только косую черту.</span><span class="sxs-lookup"><span data-stu-id="ab677-151">Note that Windows supports either the forward slash (which is returned by the <xref:System.IO.Path.AltDirectorySeparatorChar> field) or the backslash (which is returned by the <xref:System.IO.Path.DirectorySeparatorChar> field) as path separator characters, while Unix-based systems support only the forward slash.</span></span>

[!code-csharp[DirectorySeparatorChar](~/samples/snippets/csharp/api/system.io/path/directoryseparatorchar/program.cs)]
[!code-vb[DirectorySeparatorChar](~/samples/snippets/visualbasic/api/system.io/path/directoryseparatorchar/program.vb)]
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ab677-152">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="ab677-152">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ab677-153">Практическое руководство. Чтение текста из файла</span><span class="sxs-lookup"><span data-stu-id="ab677-153">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ab677-154">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="ab677-154">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ChangeExtension">
      <MemberSignature Language="C#" Value="public static string ChangeExtension (string path, string extension);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ChangeExtension(string path, string extension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.ChangeExtension(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ChangeExtension (path As String, extension As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ChangeExtension(System::String ^ path, System::String ^ extension);" />
      <MemberSignature Language="F#" Value="static member ChangeExtension : string * string -&gt; string" Usage="System.IO.Path.ChangeExtension (path, extension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="extension" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="ab677-155">Сведения о пути, которые нужно изменить.</span><span class="sxs-lookup"><span data-stu-id="ab677-155">The path information to modify.</span></span> <span data-ttu-id="ab677-156">Путь не может содержать символы, определенные в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-156">The path cannot contain any of the characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></param>
        <param name="extension"><span data-ttu-id="ab677-157">Новое расширение (начинающееся с точки или без нее).</span><span class="sxs-lookup"><span data-stu-id="ab677-157">The new extension (with or without a leading period).</span></span> <span data-ttu-id="ab677-158">Задает <see langword="null" /> для удаления существующего расширения из параметра <paramref name="path" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-158">Specify <see langword="null" /> to remove an existing extension from <paramref name="path" />.</span></span></param>
        <summary><span data-ttu-id="ab677-159">Изменяет расширение строки пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-159">Changes the extension of a path string.</span></span></summary>
        <returns><span data-ttu-id="ab677-160">Измененные сведения о пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-160">The modified path information.</span></span>  
  
<span data-ttu-id="ab677-161">В настольных системах, работающих под управлением Windows, сведения о пути возвращаются без изменений, если значение параметра <paramref name="path" /> равно <see langword="null" /> или пустой строке ("").</span><span class="sxs-lookup"><span data-stu-id="ab677-161">On Windows-based desktop platforms, if <paramref name="path" /> is <see langword="null" /> or an empty string (""), the path information is returned unmodified.</span></span> <span data-ttu-id="ab677-162">Если значение параметра <paramref name="extension" /> равно <see langword="null" />, возвращаемая строка содержит указанный путь без расширения.</span><span class="sxs-lookup"><span data-stu-id="ab677-162">If <paramref name="extension" /> is <see langword="null" />, the returned string contains the specified path with its extension removed.</span></span> <span data-ttu-id="ab677-163">Если <paramref name="path" /> не имеет расширения и значение параметра <paramref name="extension" /> не равно <see langword="null" />, возвращаемая строка пути содержит <paramref name="extension" />, добавленное в конец <paramref name="path" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-163">If <paramref name="path" /> has no extension, and <paramref name="extension" /> is not <see langword="null" />, the returned path string contains <paramref name="extension" /> appended to the end of <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab677-164">Если ни один из `path` , ни `extension` содержит точку (.), `ChangeExtension` добавляет период.</span><span class="sxs-lookup"><span data-stu-id="ab677-164">If neither `path` nor `extension` contains a period (.), `ChangeExtension` adds the period.</span></span>  
  
 <span data-ttu-id="ab677-165">`extension` Параметр может содержать несколько точек, любые допустимые символы пути и может быть любой длины.</span><span class="sxs-lookup"><span data-stu-id="ab677-165">The `extension` parameter can contain multiple periods and any valid path characters, and can be any length.</span></span> <span data-ttu-id="ab677-166">Если `extension` — `null`, возвращаемая строка содержит содержимое `path` с последнего периода и все символы удалены.</span><span class="sxs-lookup"><span data-stu-id="ab677-166">If `extension` is `null`, the returned string contains the contents of `path` with the last period and all characters following it removed.</span></span>  
  
 <span data-ttu-id="ab677-167">Если `extension` является пустая строка, возвращаемая строка пути содержит содержимое `path` символы, следующие за последний период удалены.</span><span class="sxs-lookup"><span data-stu-id="ab677-167">If `extension` is an empty string, the returned path string contains the contents of `path` with any characters following the last period removed.</span></span>  
  
 <span data-ttu-id="ab677-168">Если `path` не имеет расширения и `extension` не `null`, возвращаемая строка содержит `path` следуют `extension`.</span><span class="sxs-lookup"><span data-stu-id="ab677-168">If `path` does not have an extension and `extension` is not `null`, the returned string contains `path` followed by `extension`.</span></span>  
  
 <span data-ttu-id="ab677-169">Если `extension` не `null` и не содержит точки в начале периода добавляется.</span><span class="sxs-lookup"><span data-stu-id="ab677-169">If `extension` is not `null` and does not contain a leading period, the period is added.</span></span>  
  
 <span data-ttu-id="ab677-170">Если `path` содержит несколько расширений, разделенных несколькими точками, возвращаемая строка содержит содержимое `path` с последнего периода и все символы заменяются `extension`.</span><span class="sxs-lookup"><span data-stu-id="ab677-170">If `path` contains a multiple extension separated by multiple periods, the returned string contains the contents of `path` with the last period and all characters following it replaced by `extension`.</span></span> <span data-ttu-id="ab677-171">Например если `path` является «\Dir1\examples\pathtests.csx.txt» и `extension` «cs», измененный путь: «\Dir1\examples\pathtests.csx.cs».</span><span class="sxs-lookup"><span data-stu-id="ab677-171">For example, if `path` is "\Dir1\examples\pathtests.csx.txt" and `extension` is "cs", the modified path is "\Dir1\examples\pathtests.csx.cs".</span></span>  
  
 <span data-ttu-id="ab677-172">Убедитесь, что возвращаемые результаты являются допустимыми во всех сценариях невозможна.</span><span class="sxs-lookup"><span data-stu-id="ab677-172">It is not possible to verify that the returned results are valid in all scenarios.</span></span> <span data-ttu-id="ab677-173">Например если `path` пустой `extension` добавляется.</span><span class="sxs-lookup"><span data-stu-id="ab677-173">For example, if `path` is empty, `extension` is appended.</span></span>  
  
 <span data-ttu-id="ab677-174">Список задач ввода-вывода, см. в разделе [распространенные задачи ввода-вывода](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="ab677-174">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab677-175">В следующем примере показано использование `ChangeExtension` метод.</span><span class="sxs-lookup"><span data-stu-id="ab677-175">The following example demonstrates a use of the `ChangeExtension` method.</span></span>  
  
 [!code-cpp[System.IO.Path Members#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#1)]
 [!code-csharp[System.IO.Path Members#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#1)]
 [!code-vb[System.IO.Path Members#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ab677-176"><paramref name="path" /> содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-176"><paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="ab677-177">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="ab677-177">File path formats on Windows systems</span></span></related>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ab677-178">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="ab677-178">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ab677-179">Практическое руководство. Чтение текста из файла</span><span class="sxs-lookup"><span data-stu-id="ab677-179">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ab677-180">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="ab677-180">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Combine">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ab677-181">Объединяет строки в путь.</span><span class="sxs-lookup"><span data-stu-id="ab677-181">Combines strings into a path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
 
## Remarks  

<span data-ttu-id="ab677-182">Этот метод предназначен для объединения отдельных строк в одну строку, которая представляет путь к файлу.</span><span class="sxs-lookup"><span data-stu-id="ab677-182">This method is intended to concatenate individual strings into a single string that represents a file path.</span></span> <span data-ttu-id="ab677-183">Тем не менее если первый аргумент содержит корневой путь, любой предыдущими компонентами пути учитываются, а Возвращенная строка начинается с этим компонентом корневой путь.</span><span class="sxs-lookup"><span data-stu-id="ab677-183">However, if an argument other than the first contains a rooted path, any previous path components are ignored, and the returned string begins with that rooted path component.</span></span> <span data-ttu-id="ab677-184">Как альтернативу `Combine` метод, рассмотрите возможность использования <xref:System.IO.Path.Join%2A> или <xref:System.IO.Path.TryJoin%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="ab677-184">As an alternative to the `Combine` method, consider using the <xref:System.IO.Path.Join%2A> or <xref:System.IO.Path.TryJoin%2A> methods.</span></span>

> [!IMPORTANT]
> <span data-ttu-id="ab677-185">Этот способ предполагает, что первый аргумент является абсолютным, и что следующий аргумент или аргументы являются относительными.</span><span class="sxs-lookup"><span data-stu-id="ab677-185">This method assumes that the first argument is an absolute path and that the following argument or arguments are relative paths.</span></span> <span data-ttu-id="ab677-186">Если это не так, и особенно в том случае, если все последующие аргументы имеют строк, вводимых пользователем, вызовите <xref:System.IO.Path.Join%2A> или <xref:System.IO.Path.TryJoin%2A> метод вместо этого.</span><span class="sxs-lookup"><span data-stu-id="ab677-186">If this is not the case, and particularly if any subsequent arguments are strings input by the user, call the <xref:System.IO.Path.Join%2A> or <xref:System.IO.Path.TryJoin%2A> method instead.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static string Combine (params string[] paths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Combine(string[] paths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Combine(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine (ParamArray paths As String()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Combine(... cli::array &lt;System::String ^&gt; ^ paths);" />
      <MemberSignature Language="F#" Value="static member Combine : string[] -&gt; string" Usage="System.IO.Path.Combine paths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paths" Type="System.String[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="paths"><span data-ttu-id="ab677-187">Массив частей пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-187">An array of parts of the path.</span></span></param>
        <summary><span data-ttu-id="ab677-188">Объединяет массив строк в путь.</span><span class="sxs-lookup"><span data-stu-id="ab677-188">Combines an array of strings into a path.</span></span></summary>
        <returns><span data-ttu-id="ab677-189">Объединенные пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-189">The combined paths.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="ab677-190">`paths` должны быть массивом из частей пути для объединения.</span><span class="sxs-lookup"><span data-stu-id="ab677-190">`paths` should be an array of the parts of the path to combine.</span></span> <span data-ttu-id="ab677-191">Если одно из последующих путей является абсолютным, операция объединения сбрасывает, начиная с этого абсолютного пути, отменяя все предыдущие объединенные пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-191">If the one of the subsequent paths is an absolute path, then the combine operation resets starting with that absolute path, discarding all previous combined paths.</span></span>  

<span data-ttu-id="ab677-192">Если любой элемент в `paths` , но не является последней и не заканчивается либо <xref:System.IO.Path.DirectorySeparatorChar> или <xref:System.IO.Path.AltDirectorySeparatorChar> символ, `Combine` добавляет метод <xref:System.IO.Path.DirectorySeparatorChar> между этого элемента и еще один символ.</span><span class="sxs-lookup"><span data-stu-id="ab677-192">If any element in `paths` but the last one is not a drive and does not end with either the <xref:System.IO.Path.DirectorySeparatorChar> or the <xref:System.IO.Path.AltDirectorySeparatorChar> character, the `Combine` method adds a <xref:System.IO.Path.DirectorySeparatorChar> character between that element and the next one.</span></span> <span data-ttu-id="ab677-193">Обратите внимание, что, если элемент заканчивается символа разделителя пути, который не подходит для целевой платформы, `Combine` метод сохраняет исходного символа разделителя пути и добавляет поддерживаемый.</span><span class="sxs-lookup"><span data-stu-id="ab677-193">Note that, if the element ends in a path separator character that is not appropriate for the target platform, the `Combine` method preserves the original path separator character and appends a supported one.</span></span> <span data-ttu-id="ab677-194">В следующем примере сравниваются результаты на системами Unix и Windows, если обратная косая черта используется в качестве символа разделителя пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-194">The following example compares the result on Windows and Unix-based systems when the backslash is used as a path separator character.</span></span>

[!code-csharp[Combine and path separator characters](~/samples/snippets/csharp/api/system.io/path/combine/program.cs#1)]
[!code-vb[Combine and path separator characters](~/samples/snippets/visualbasic/api/system.io/path/combine/program.vb#1)]  

 <span data-ttu-id="ab677-195">Пустые строки исключаются из объединенный путь.</span><span class="sxs-lookup"><span data-stu-id="ab677-195">Zero-length strings are omitted from the combined path.</span></span>  
  
 <span data-ttu-id="ab677-196">Параметры не анализируются, если у них есть пробелы.</span><span class="sxs-lookup"><span data-stu-id="ab677-196">The parameters are not parsed if they have white space.</span></span>  
  
 <span data-ttu-id="ab677-197">Не все символы, недопустимые для имен каталогов и файлов, которые интерпретируются как недопустимые `Combine` метод, поскольку эти символы можно использовать для поиска подстановочные знаки.</span><span class="sxs-lookup"><span data-stu-id="ab677-197">Not all invalid characters for directory and file names are interpreted as unacceptable by the `Combine` method, because you can use these characters for search wildcard characters.</span></span> <span data-ttu-id="ab677-198">Например, хотя `Path.Combine("c:\\", "*.txt")` могут быть недопустимыми Если было необходимо создать файл из него, он подходит как строку поиска.</span><span class="sxs-lookup"><span data-stu-id="ab677-198">For example, while `Path.Combine("c:\\", "*.txt")` might be invalid if you were to create a file from it, it is valid as a search string.</span></span> <span data-ttu-id="ab677-199">Поэтому он успешно интерпретируется по `Combine` метод.</span><span class="sxs-lookup"><span data-stu-id="ab677-199">It is therefore successfully interpreted by the `Combine` method.</span></span>  
  
## Examples  
 <span data-ttu-id="ab677-200">Следующий пример объединяет массив строк в путь.</span><span class="sxs-lookup"><span data-stu-id="ab677-200">The following example combines an array of strings into a path.</span></span>  
  
 [!code-csharp[System.IO.Path.Combine#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.path.combine/cs/program.cs#3)]
 [!code-vb[System.IO.Path.Combine#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.path.combine/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ab677-201">Одна из строк в массиве содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-201">One of the strings in the array contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab677-202">Одна из строк в массиве является <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-202">One of the strings in the array is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="ab677-203">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="ab677-203">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static string Combine (string path1, string path2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Combine(string path1, string path2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Combine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine (path1 As String, path2 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Combine(System::String ^ path1, System::String ^ path2);" />
      <MemberSignature Language="F#" Value="static member Combine : string * string -&gt; string" Usage="System.IO.Path.Combine (path1, path2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="path2" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="path1"><span data-ttu-id="ab677-204">Первый путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="ab677-204">The first path to combine.</span></span></param>
        <param name="path2"><span data-ttu-id="ab677-205">Второй путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="ab677-205">The second path to combine.</span></span></param>
        <summary><span data-ttu-id="ab677-206">Объединяет две строки в путь.</span><span class="sxs-lookup"><span data-stu-id="ab677-206">Combines two strings into a path.</span></span></summary>
        <returns><span data-ttu-id="ab677-207">Объединенные пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-207">The combined paths.</span></span> <span data-ttu-id="ab677-208">Если один из указанных путей является строкой нулевой длины, этот метод возвращает другой путь.</span><span class="sxs-lookup"><span data-stu-id="ab677-208">If one of the specified paths is a zero-length string, this method returns the other path.</span></span> <span data-ttu-id="ab677-209">Если в качестве значения параметра <paramref name="path2" /> задан абсолютный путь, этот метод возвращает <paramref name="path2" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-209">If <paramref name="path2" /> contains an absolute path, this method returns <paramref name="path2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab677-210">Если `path1` не является ссылкой на диск (то есть «C:» или «D:») и не заканчивается символом разделителя допустимым, как определено в <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, или <xref:System.IO.Path.VolumeSeparatorChar>, <xref:System.IO.Path.DirectorySeparatorChar> добавляется к `path1` перед объединением.</span><span class="sxs-lookup"><span data-stu-id="ab677-210">If `path1` is not a drive reference (that is, "C:" or "D:") and does not end with a valid separator character as defined in <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, or <xref:System.IO.Path.VolumeSeparatorChar>, <xref:System.IO.Path.DirectorySeparatorChar> is appended to `path1` before concatenation.</span></span> <span data-ttu-id="ab677-211">Обратите внимание, что если `path1` заканчивается на символа разделителя пути, который не подходит для целевой платформы, `Combine` метод сохраняет исходного символа разделителя пути и добавляет поддерживаемый.</span><span class="sxs-lookup"><span data-stu-id="ab677-211">Note that if `path1` ends in a path separator character that is not appropriate for the target platform, the `Combine` method preserves the original path separator character and appends a supported one.</span></span> <span data-ttu-id="ab677-212">В следующем примере сравниваются результаты на системами Unix и Windows, если обратная косая черта используется в качестве символа разделителя пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-212">The following example compares the result on Windows and Unix-based systems when the backslash is used as a path separator character.</span></span>  
  
[!code-csharp[Combine and path separator characters](~/samples/snippets/csharp/api/system.io/path/combine/program.cs#2)]
[!code-vb[Combine and path separator characters](~/samples/snippets/visualbasic/api/system.io/path/combine/program.vb#2)]  

 <span data-ttu-id="ab677-213">Если `path2` содержит корень (например, в том случае, если `path2` не начинается с разделителя или имени диска), результат представляет собой объединение двух путей с промежуточным разделителем.</span><span class="sxs-lookup"><span data-stu-id="ab677-213">If `path2` does not include a root (for example, if `path2` does not start with a separator character or a drive specification), the result is a concatenation of the two paths, with an intervening separator character.</span></span> <span data-ttu-id="ab677-214">Если `path2` содержит корень, `path2` возвращается.</span><span class="sxs-lookup"><span data-stu-id="ab677-214">If `path2` includes a root, `path2` is returned.</span></span>  
  
 <span data-ttu-id="ab677-215">Параметры не анализируются, если у них есть пробелы.</span><span class="sxs-lookup"><span data-stu-id="ab677-215">The parameters are not parsed if they have white space.</span></span> <span data-ttu-id="ab677-216">Таким образом Если `path2` включает пробел (например, «\file.txt»), <xref:System.IO.Path.Combine%2A> метод добавляет `path2` для `path1` вместо возвращения только `path2`.</span><span class="sxs-lookup"><span data-stu-id="ab677-216">Therefore, if `path2` includes white space (for example, " \file.txt "), the <xref:System.IO.Path.Combine%2A> method appends `path2` to `path1` instead of returning only `path2`.</span></span>  
  
 <span data-ttu-id="ab677-217">Не все символы, недопустимые для имен каталогов и файлов, которые интерпретируются как недопустимые `Combine` метод, поскольку эти символы можно использовать для поиска подстановочные знаки.</span><span class="sxs-lookup"><span data-stu-id="ab677-217">Not all invalid characters for directory and file names are interpreted as unacceptable by the `Combine` method, because you can use these characters for search wildcard characters.</span></span> <span data-ttu-id="ab677-218">Например, хотя `Path.Combine("c:\\", "*.txt")` могут быть недопустимыми Если было необходимо создать файл из него, он подходит как строку поиска.</span><span class="sxs-lookup"><span data-stu-id="ab677-218">For example, while `Path.Combine("c:\\", "*.txt")` might be invalid if you were to create a file from it, it is valid as a search string.</span></span> <span data-ttu-id="ab677-219">Поэтому он успешно интерпретируется по `Combine` метод.</span><span class="sxs-lookup"><span data-stu-id="ab677-219">It is therefore successfully interpreted by the `Combine` method.</span></span>  
  
 <span data-ttu-id="ab677-220">Список задач ввода-вывода, см. в разделе [распространенные задачи ввода-вывода](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="ab677-220">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab677-221">В следующем примере показано использование `Combine` метод для настольных систем на базе Windows.</span><span class="sxs-lookup"><span data-stu-id="ab677-221">The following example demonstrates using the `Combine` method on a Windows-based desktop platform.</span></span>  
  
 [!code-cpp[pathcombine#1](~/samples/snippets/cpp/VS_Snippets_CLR/pathcombine/CPP/pathcombine.cpp#1)]
 [!code-csharp[pathcombine#1](~/samples/snippets/csharp/VS_Snippets_CLR/pathcombine/CS/pathcombine.cs#1)]
 [!code-vb[pathcombine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/pathcombine/VB/pathcombine.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ab677-222"><paramref name="path1" /> или <paramref name="path2" /> содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-222"><paramref name="path1" /> or <paramref name="path2" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab677-223">Параметр <paramref name="path1" /> или <paramref name="path2" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-223"><paramref name="path1" /> or <paramref name="path2" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="ab677-224">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="ab677-224">File path formats on Windows systems</span></span></related>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ab677-225">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="ab677-225">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ab677-226">Практическое руководство. Чтение текста из файла</span><span class="sxs-lookup"><span data-stu-id="ab677-226">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ab677-227">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="ab677-227">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static string Combine (string path1, string path2, string path3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Combine(string path1, string path2, string path3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Combine(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine (path1 As String, path2 As String, path3 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Combine(System::String ^ path1, System::String ^ path2, System::String ^ path3);" />
      <MemberSignature Language="F#" Value="static member Combine : string * string * string -&gt; string" Usage="System.IO.Path.Combine (path1, path2, path3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="path2" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="path3" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="path1"><span data-ttu-id="ab677-228">Первый путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="ab677-228">The first path to combine.</span></span></param>
        <param name="path2"><span data-ttu-id="ab677-229">Второй путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="ab677-229">The second path to combine.</span></span></param>
        <param name="path3"><span data-ttu-id="ab677-230">Третий путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="ab677-230">The third path to combine.</span></span></param>
        <summary><span data-ttu-id="ab677-231">Объединяет три строки в путь.</span><span class="sxs-lookup"><span data-stu-id="ab677-231">Combines three strings into a path.</span></span></summary>
        <returns><span data-ttu-id="ab677-232">Объединенные пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-232">The combined paths.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab677-233">`path1` должен быть абсолютным путем (например, «d:\archives» или "\\\archives\public»).</span><span class="sxs-lookup"><span data-stu-id="ab677-233">`path1` should be an absolute path (for example, "d:\archives" or "\\\archives\public").</span></span> <span data-ttu-id="ab677-234">Если `path2` или `path3` также является абсолютным путем, объединение операция удаляет все ранее в сочетании путей и перезапускается, чтобы этот абсолютный путь.</span><span class="sxs-lookup"><span data-stu-id="ab677-234">If `path2` or `path3` is also an absolute path, the combine operation discards all previously combined paths and resets to that absolute path.</span></span>  
  
 <span data-ttu-id="ab677-235">Пустые строки исключаются из объединенный путь.</span><span class="sxs-lookup"><span data-stu-id="ab677-235">Zero-length strings are omitted from the combined path.</span></span>  
  
 <span data-ttu-id="ab677-236">Если `path1` или `path2` не является ссылкой на диск (то есть «C:» или «D:») и не заканчивается символом разделителя допустимым, как определено в <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, или <xref:System.IO.Path.VolumeSeparatorChar>, <xref:System.IO.Path.DirectorySeparatorChar> добавляется к `path1` или `path2` перед объединением.</span><span class="sxs-lookup"><span data-stu-id="ab677-236">If `path1` or `path2` is not a drive reference (that is, "C:" or "D:") and does not end with a valid separator character as defined in <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, or <xref:System.IO.Path.VolumeSeparatorChar>, <xref:System.IO.Path.DirectorySeparatorChar> is appended to `path1` or `path2` before concatenation.</span></span> <span data-ttu-id="ab677-237">Обратите внимание, что если `path1` или `path2` заканчивается на символа разделителя пути, который не подходит для целевой платформы, `Combine` метод сохраняет исходного символа разделителя пути и добавляет поддерживаемый.</span><span class="sxs-lookup"><span data-stu-id="ab677-237">Note that if `path1` or `path2` ends in a path separator character that is not appropriate for the target platform, the `Combine` method preserves the original path separator character and appends a supported one.</span></span> <span data-ttu-id="ab677-238">В следующем примере сравниваются результаты на системами Unix и Windows, если обратная косая черта используется в качестве символа разделителя пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-238">The following example compares the result on Windows and Unix-based systems when the backslash is used as a path separator character.</span></span> 

[!code-csharp[Combine and path separator characters](~/samples/snippets/csharp/api/system.io/path/combine/program.cs#3)]
[!code-vb[Combine and path separator characters](~/samples/snippets/visualbasic/api/system.io/path/combine/program.vb#3)]  

 <span data-ttu-id="ab677-239">Если `path2` содержит корень (например, в том случае, если `path2` не начинается с разделителя или имени диска), результат представляет собой объединение двух путей с промежуточным разделителем.</span><span class="sxs-lookup"><span data-stu-id="ab677-239">If `path2` does not include a root (for example, if `path2` does not start with a separator character or a drive specification), the result is a concatenation of the two paths, with an intervening separator character.</span></span> <span data-ttu-id="ab677-240">Если `path2` содержит корень, `path2` возвращается.</span><span class="sxs-lookup"><span data-stu-id="ab677-240">If `path2` includes a root, `path2` is returned.</span></span>  
  
 <span data-ttu-id="ab677-241">Параметры не анализируются, если у них есть пробелы.</span><span class="sxs-lookup"><span data-stu-id="ab677-241">The parameters are not parsed if they have white space.</span></span> <span data-ttu-id="ab677-242">Таким образом Если `path2` включает пробел (например, «\file.txt»), <xref:System.IO.Path.Combine%2A> метод добавляет `path2` для `path1`.</span><span class="sxs-lookup"><span data-stu-id="ab677-242">Therefore, if `path2` includes white space (for example, " \file.txt "), the <xref:System.IO.Path.Combine%2A> method appends `path2` to `path1`.</span></span>  
  
 <span data-ttu-id="ab677-243">Не все символы, недопустимые для имен каталогов и файлов, которые интерпретируются как недопустимые `Combine` метод, поскольку эти символы можно использовать для поиска подстановочные знаки.</span><span class="sxs-lookup"><span data-stu-id="ab677-243">Not all invalid characters for directory and file names are interpreted as unacceptable by the `Combine` method, because you can use these characters for search wildcard characters.</span></span> <span data-ttu-id="ab677-244">Например, хотя `Path.Combine("c:\\", "*.txt")` могут быть недопустимыми Если было необходимо создать файл из него, он подходит как строку поиска.</span><span class="sxs-lookup"><span data-stu-id="ab677-244">For example, while `Path.Combine("c:\\", "*.txt")` might be invalid if you were to create a file from it, it is valid as a search string.</span></span> <span data-ttu-id="ab677-245">Поэтому он успешно интерпретируется по `Combine` метод.</span><span class="sxs-lookup"><span data-stu-id="ab677-245">It is therefore successfully interpreted by the `Combine` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab677-246">В следующем примере объединяются три пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-246">The following example combines three paths.</span></span>  
  
 [!code-csharp[System.IO.Path.Combine#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.path.combine/cs/program.cs#1)]
 [!code-vb[System.IO.Path.Combine#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.path.combine/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ab677-247"><paramref name="path1" />, <paramref name="path2" /> или <paramref name="path3" /> содержит по крайней мере один из недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-247"><paramref name="path1" />, <paramref name="path2" />, or <paramref name="path3" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab677-248">Значение параметра <paramref name="path1" />, <paramref name="path2" /> или <paramref name="path3" /> равно <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-248"><paramref name="path1" />, <paramref name="path2" />, or <paramref name="path3" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="ab677-249">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="ab677-249">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static string Combine (string path1, string path2, string path3, string path4);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Combine(string path1, string path2, string path3, string path4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Combine(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine (path1 As String, path2 As String, path3 As String, path4 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Combine(System::String ^ path1, System::String ^ path2, System::String ^ path3, System::String ^ path4);" />
      <MemberSignature Language="F#" Value="static member Combine : string * string * string * string -&gt; string" Usage="System.IO.Path.Combine (path1, path2, path3, path4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="path2" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="path3" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="path4" Type="System.String" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path1"><span data-ttu-id="ab677-250">Первый путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="ab677-250">The first path to combine.</span></span></param>
        <param name="path2"><span data-ttu-id="ab677-251">Второй путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="ab677-251">The second path to combine.</span></span></param>
        <param name="path3"><span data-ttu-id="ab677-252">Третий путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="ab677-252">The third path to combine.</span></span></param>
        <param name="path4"><span data-ttu-id="ab677-253">Четвертый путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="ab677-253">The fourth path to combine.</span></span></param>
        <summary><span data-ttu-id="ab677-254">Объединяет четыре строки в путь.</span><span class="sxs-lookup"><span data-stu-id="ab677-254">Combines four strings into a path.</span></span></summary>
        <returns><span data-ttu-id="ab677-255">Объединенные пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-255">The combined paths.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab677-256">`path1` должен быть абсолютным путем (например, «d:\archives» или "\\\archives\public»). Если один из последующих путей также является абсолютным, операция объединения отбрасывает все ранее объединенные пути и сбрасывает до этого абсолютного пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-256">`path1` should be an absolute path (for example, "d:\archives" or "\\\archives\public").If one of the subsequent paths is also an absolute path, the combine operation discards all previously combined paths and resets to that absolute path.</span></span>  
  
 <span data-ttu-id="ab677-257">Пустые строки исключаются из объединенный путь.</span><span class="sxs-lookup"><span data-stu-id="ab677-257">Zero-length strings are omitted from the combined path.</span></span>  
  
 <span data-ttu-id="ab677-258">Если `path1`, `path2`, или `path3` не является ссылкой на диск (то есть «C:» или «D:») и не заканчивается символом разделителя допустимым, как определено в <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, или <xref:System.IO.Path.VolumeSeparatorChar>, <xref:System.IO.Path.DirectorySeparatorChar> добавленным к нему перед объединением.</span><span class="sxs-lookup"><span data-stu-id="ab677-258">If `path1`, `path2`, or `path3` is not a drive reference (that is, "C:" or "D:") and does not end with a valid separator character as defined in <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, or <xref:System.IO.Path.VolumeSeparatorChar>, <xref:System.IO.Path.DirectorySeparatorChar> is appended to it before concatenation.</span></span> <span data-ttu-id="ab677-259">Обратите внимание, что если `path1`, `path2`, или `path3` заканчивается на символа разделителя пути, который не подходит для целевой платформы, `Combine` метод сохраняет исходного символа разделителя пути и добавляет поддерживаемый.</span><span class="sxs-lookup"><span data-stu-id="ab677-259">Note that if `path1`, `path2`, or `path3` ends in a path separator character that is not appropriate for the target platform, the `Combine` method preserves the original path separator character and appends a supported one.</span></span> <span data-ttu-id="ab677-260">В следующем примере сравниваются результаты на системами Unix и Windows, если обратная косая черта используется в качестве символа разделителя пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-260">The following example compares the result on Windows and Unix-based systems when the backslash is used as a path separator character.</span></span> 

[!code-csharp[Combine and path separator characters](~/samples/snippets/csharp/api/system.io/path/combine/program.cs#4)]
[!code-vb[Combine and path separator characters](~/samples/snippets/visualbasic/api/system.io/path/combine/program.vb#4)]   
  
 <span data-ttu-id="ab677-261">Если `path2` содержит корень (например, в том случае, если `path2` не начинается с разделителя или имени диска), результат представляет собой объединение двух путей с промежуточным разделителем.</span><span class="sxs-lookup"><span data-stu-id="ab677-261">If `path2` does not include a root (for example, if `path2` does not start with a separator character or a drive specification), the result is a concatenation of the two paths, with an intervening separator character.</span></span> <span data-ttu-id="ab677-262">Если `path2` содержит корень, `path2` возвращается.</span><span class="sxs-lookup"><span data-stu-id="ab677-262">If `path2` includes a root, `path2` is returned.</span></span>  
  
 <span data-ttu-id="ab677-263">Параметры не анализируются, если у них есть пробелы.</span><span class="sxs-lookup"><span data-stu-id="ab677-263">The parameters are not parsed if they have white space.</span></span> <span data-ttu-id="ab677-264">Таким образом Если `path2` включает пробел (например, «\file.txt»), <xref:System.IO.Path.Combine%2A> метод добавляет `path2` для `path1`.</span><span class="sxs-lookup"><span data-stu-id="ab677-264">Therefore, if `path2` includes white space (for example, " \file.txt "), the <xref:System.IO.Path.Combine%2A> method appends `path2` to `path1`.</span></span>  
  
 <span data-ttu-id="ab677-265">Не все символы, недопустимые для имен каталогов и файлов, которые интерпретируются как недопустимые `Combine` метод, поскольку эти символы можно использовать для поиска подстановочные знаки.</span><span class="sxs-lookup"><span data-stu-id="ab677-265">Not all invalid characters for directory and file names are interpreted as unacceptable by the `Combine` method, because you can use these characters for search wildcard characters.</span></span> <span data-ttu-id="ab677-266">Например, хотя `Path.Combine("c:\\", "*.txt")` могут быть недопустимыми Если было необходимо создать файл из него, он подходит как строку поиска.</span><span class="sxs-lookup"><span data-stu-id="ab677-266">For example, while `Path.Combine("c:\\", "*.txt")` might be invalid if you were to create a file from it, it is valid as a search string.</span></span> <span data-ttu-id="ab677-267">Поэтому он успешно интерпретируется по `Combine` метод.</span><span class="sxs-lookup"><span data-stu-id="ab677-267">It is therefore successfully interpreted by the `Combine` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab677-268">В следующем примере объединяются четыре пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-268">The following example combines four paths.</span></span>  
  
 [!code-csharp[System.IO.Path.Combine#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.path.combine/cs/program.cs#2)]
 [!code-vb[System.IO.Path.Combine#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.path.combine/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ab677-269"><paramref name="path1" />, <paramref name="path2" />, <paramref name="path3" /> или <paramref name="path4" /> содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-269"><paramref name="path1" />, <paramref name="path2" />, <paramref name="path3" />, or <paramref name="path4" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab677-270">Параметр <paramref name="path1" />, <paramref name="path2" />, <paramref name="path3" /> или <paramref name="path4" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-270"><paramref name="path1" />, <paramref name="path2" />, <paramref name="path3" />, or <paramref name="path4" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="ab677-271">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="ab677-271">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DirectorySeparatorChar">
      <MemberSignature Language="C#" Value="public static readonly char DirectorySeparatorChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly char DirectorySeparatorChar" />
      <MemberSignature Language="DocId" Value="F:System.IO.Path.DirectorySeparatorChar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DirectorySeparatorChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly char DirectorySeparatorChar;" />
      <MemberSignature Language="F#" Value=" staticval mutable DirectorySeparatorChar : char" Usage="System.IO.Path.DirectorySeparatorChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab677-272">Предоставляет символ, задаваемый платформой, для разделения уровней папок в строке пути, в которой отражена иерархическая организация файловой системы.</span><span class="sxs-lookup"><span data-stu-id="ab677-272">Provides a platform-specific character used to separate directory levels in a path string that reflects a hierarchical file system organization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="ab677-273"><xref:System.IO.Path.AltDirectorySeparatorChar> и `DirectorySeparatorChar` оба являются допустимыми для разделения уровней каталогов в строке пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-273"><xref:System.IO.Path.AltDirectorySeparatorChar> and `DirectorySeparatorChar` are both valid for separating directory levels in a path string.</span></span>  
  
<span data-ttu-id="ab677-274">При использовании .NET Core для разработки приложений, работающих на нескольких платформах:</span><span class="sxs-lookup"><span data-stu-id="ab677-274">When you are using .NET Core to develop applications that run on multiple platforms:</span></span>

- <span data-ttu-id="ab677-275">Если вы предпочитаете жестко символом разделителя каталогов, следует использовать косую черту (`/`) символов.</span><span class="sxs-lookup"><span data-stu-id="ab677-275">If you prefer to hard-code the directory separator character, you should use the forward slash (`/`) character.</span></span> <span data-ttu-id="ab677-276">Это символом разделителя каталогов только распознанных в системах Unix, как видно в результатах показано в примере, который <xref:System.IO.Path.AltDirectorySeparatorChar> на Windows.</span><span class="sxs-lookup"><span data-stu-id="ab677-276">It is the only recognized directory separator character on Unix systems, as the output from the example shows, and is the <xref:System.IO.Path.AltDirectorySeparatorChar> on Windows.</span></span>

- <span data-ttu-id="ab677-277">Используйте объединение строк для динамического получения символа разделителя пути во время выполнения и включить ее в пути файловой системы.</span><span class="sxs-lookup"><span data-stu-id="ab677-277">Use string concatenation to dynamically retrieve the path separator character at runtime and incorporate it into file system paths.</span></span> <span data-ttu-id="ab677-278">Например, примененная к объекту директива</span><span class="sxs-lookup"><span data-stu-id="ab677-278">For example,</span></span> 

   ```csharp
   separator = Path.DirectorySeparatorChar;
   path = $"{separator}users{separator}user1{separator}";
   ```
   ```vb
   separator = Path.DirectorySeparatorChar;
   path = $"{separator}users{separator}user1{separator}";
   ``` 
   <span data-ttu-id="ab677-279">Также можно получить значение из <xref:System.IO.Path.AltDirectorySeparatorChar> свойство, так как это так же, как Windows, так и Unx-системы.</span><span class="sxs-lookup"><span data-stu-id="ab677-279">You can also retrieve the value from the <xref:System.IO.Path.AltDirectorySeparatorChar> property, since it is the same on both Windows and Unx-based systems.</span></span>

- <span data-ttu-id="ab677-280">Получить <xref:System.IO.Path.AltDirectorySeparatorChar> свойство</span><span class="sxs-lookup"><span data-stu-id="ab677-280">Retrieve the <xref:System.IO.Path.AltDirectorySeparatorChar> property</span></span>

<span data-ttu-id="ab677-281">Если приложение не работает на разных платформах, можно использовать разделитель, соответствующий вашей системе.</span><span class="sxs-lookup"><span data-stu-id="ab677-281">If your application is not cross-platform, you can use the separator appropriate for your system.</span></span>

## Examples  

<span data-ttu-id="ab677-282">В следующем примере отображается <xref:System.IO.Path> поле значения в Windows и в системах на основе Unix.</span><span class="sxs-lookup"><span data-stu-id="ab677-282">The following example displays <xref:System.IO.Path> field values on Windows and on Unix-based systems.</span></span> <span data-ttu-id="ab677-283">Обратите внимание, что Windows поддерживает косую черту (возвращаемая <xref:System.IO.Path.AltDirectorySeparatorChar> поля) или обратную косую черту (возвращаемая <xref:System.IO.Path.DirectorySeparatorChar> поля) в пути символы-разделители, хотя в системах UNIX поддерживает только косую черту.</span><span class="sxs-lookup"><span data-stu-id="ab677-283">Note that Windows supports either the forward slash (which is returned by the <xref:System.IO.Path.AltDirectorySeparatorChar> field) or the backslash (which is returned by the <xref:System.IO.Path.DirectorySeparatorChar> field) as path separator characters, while Unix-based systems support only the forward slash.</span></span>  

[!code-csharp[DirectorySeparatorChar](~/samples/snippets/csharp/api/system.io/path/directoryseparatorchar/program.cs)]
[!code-vb[DirectorySeparatorChar](~/samples/snippets/visualbasic/api/system.io/path/directoryseparatorchar/program.vb)]
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ab677-284">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="ab677-284">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="ab677-285">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="ab677-285">File path formats on Windows systems</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ab677-286">Практическое руководство. Чтение текста из файла</span><span class="sxs-lookup"><span data-stu-id="ab677-286">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ab677-287">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="ab677-287">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectoryName">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;char&gt; GetDirectoryName (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;char&gt; GetDirectoryName(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetDirectoryName(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDirectoryName (path As ReadOnlySpan(Of Char)) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ReadOnlySpan&lt;char&gt; GetDirectoryName(ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="F#" Value="static member GetDirectoryName : ReadOnlySpan&lt;char&gt; -&gt; ReadOnlySpan&lt;char&gt;" Usage="System.IO.Path.GetDirectoryName path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary><span data-ttu-id="ab677-288">Возвращает сведения о каталоге для указанного пути, представленного диапазоном символов.</span><span class="sxs-lookup"><span data-stu-id="ab677-288">Returns the directory information for the specified path represented by a character span.</span></span></summary>
        <returns><span data-ttu-id="ab677-289">Сведения о каталоге для <paramref name="path" /> либо пустой диапазон, если значение <paramref name="path" /> — <see langword="null" />, пустой диапазон или корневая папка, например \, C: или \\server\share.</span><span class="sxs-lookup"><span data-stu-id="ab677-289">Directory information for <paramref name="path" />, or an empty span if <paramref name="path" /> is <see langword="null" />, an empty span, or a root (such as \, C:, or \\server\share).</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="ab677-290">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="ab677-290">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDirectoryName">
      <MemberSignature Language="C#" Value="public static string GetDirectoryName (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDirectoryName(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetDirectoryName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDirectoryName (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetDirectoryName(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetDirectoryName : string -&gt; string" Usage="System.IO.Path.GetDirectoryName path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="ab677-291">Путь к файлу или каталогу.</span><span class="sxs-lookup"><span data-stu-id="ab677-291">The path of a file or directory.</span></span></param>
        <summary><span data-ttu-id="ab677-292">Возвращает для указанной строки пути сведения о каталоге.</span><span class="sxs-lookup"><span data-stu-id="ab677-292">Returns the directory information for the specified path string.</span></span></summary>
        <returns><span data-ttu-id="ab677-293">Сведения о каталоге для <paramref name="path" />, или значение <see langword="null" />, если путь <paramref name="path" /> указывает на корневой каталог или равен NULL.</span><span class="sxs-lookup"><span data-stu-id="ab677-293">Directory information for <paramref name="path" />, or <see langword="null" /> if <paramref name="path" /> denotes a root directory or is null.</span></span> <span data-ttu-id="ab677-294">Возвращает <see cref="F:System.String.Empty" />, если параметр <paramref name="path" /> не содержит сведения о каталоге.</span><span class="sxs-lookup"><span data-stu-id="ab677-294">Returns <see cref="F:System.String.Empty" /> if <paramref name="path" /> does not contain directory information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab677-295">В большинстве случаев строка, возвращаемая этим методом состоит из всех символов в пути до, но не включая последнюю <xref:System.IO.Path.DirectorySeparatorChar> или <xref:System.IO.Path.AltDirectorySeparatorChar>.</span><span class="sxs-lookup"><span data-stu-id="ab677-295">In most cases, the string returned by this method consists of all characters in the path up to but not including the last <xref:System.IO.Path.DirectorySeparatorChar> or <xref:System.IO.Path.AltDirectorySeparatorChar>.</span></span> <span data-ttu-id="ab677-296">Если путь состоит из корневого каталога, например «c:\\», возвращается значение null.</span><span class="sxs-lookup"><span data-stu-id="ab677-296">If the path consists of a root directory, such as "c:\\", null is returned.</span></span> <span data-ttu-id="ab677-297">Обратите внимание, что этот метод не поддерживает пути с помощью команды «файл:».</span><span class="sxs-lookup"><span data-stu-id="ab677-297">Note that this method does not support paths using "file:".</span></span> <span data-ttu-id="ab677-298">Поскольку возвращенный путь не включает <xref:System.IO.Path.DirectorySeparatorChar> или <xref:System.IO.Path.AltDirectorySeparatorChar>, возвращенный путь передачи обратно в <xref:System.IO.Path.GetDirectoryName%2A> метод приведет к усечению один уровень в последующем вызове на результирующую строку.</span><span class="sxs-lookup"><span data-stu-id="ab677-298">Because the returned path does not include the <xref:System.IO.Path.DirectorySeparatorChar> or <xref:System.IO.Path.AltDirectorySeparatorChar>, passing the returned path back into the <xref:System.IO.Path.GetDirectoryName%2A> method will result in the truncation of one folder level per subsequent call on the result string.</span></span> <span data-ttu-id="ab677-299">Например, передав путь «C:\Directory\SubDirectory\test.txt» в <xref:System.IO.Path.GetDirectoryName%2A> метод возвратит «C:\Directory\SubDirectory».</span><span class="sxs-lookup"><span data-stu-id="ab677-299">For example, passing the path "C:\Directory\SubDirectory\test.txt" into the <xref:System.IO.Path.GetDirectoryName%2A> method will return "C:\Directory\SubDirectory".</span></span> <span data-ttu-id="ab677-300">Передача эту строку, «C:\Directory\SubDirectory», в <xref:System.IO.Path.GetDirectoryName%2A> приведет к «C:\Directory».</span><span class="sxs-lookup"><span data-stu-id="ab677-300">Passing that string, "C:\Directory\SubDirectory", into <xref:System.IO.Path.GetDirectoryName%2A> will result in "C:\Directory".</span></span>  
  
 <span data-ttu-id="ab677-301">Список задач ввода-вывода, см. в разделе [распространенные задачи ввода-вывода](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="ab677-301">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab677-302">В следующем примере показано использование `GetDirectoryName` метод для настольных систем на базе Windows.</span><span class="sxs-lookup"><span data-stu-id="ab677-302">The following example demonstrates using the `GetDirectoryName` method on a Windows-based desktop platform.</span></span>  
  
 [!code-cpp[System.IO.Path Members#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#3)]
 [!code-csharp[System.IO.Path Members#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#3)]
 [!code-vb[System.IO.Path Members#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ab677-303">Параметр <paramref name="path" /> пустой или содержит недопустимые символы либо только пробелы.</span><span class="sxs-lookup"><span data-stu-id="ab677-303">The <paramref name="path" /> parameter contains invalid characters, is empty, or contains only white spaces.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="ab677-304">Вместо этого в <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET для приложений Магазина Windows</see> или в <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">переносимой библиотеке классов</see> перехватите исключение базового класса <see cref="T:System.IO.IOException" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-304">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.IO.IOException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="ab677-305">Имя параметра <paramref name="path" /> превышает максимально допустимую в системе длину.</span><span class="sxs-lookup"><span data-stu-id="ab677-305">The <paramref name="path" /> parameter is longer than the system-defined maximum length.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="ab677-306">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="ab677-306">File path formats on Windows systems</span></span></related>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ab677-307">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="ab677-307">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ab677-308">Практическое руководство. Чтение текста из файла</span><span class="sxs-lookup"><span data-stu-id="ab677-308">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ab677-309">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="ab677-309">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetExtension">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;char&gt; GetExtension (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;char&gt; GetExtension(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetExtension(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExtension (path As ReadOnlySpan(Of Char)) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ReadOnlySpan&lt;char&gt; GetExtension(ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="F#" Value="static member GetExtension : ReadOnlySpan&lt;char&gt; -&gt; ReadOnlySpan&lt;char&gt;" Usage="System.IO.Path.GetExtension path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="ab677-310">Путь к файлу, из которого необходимо получить расширение.</span><span class="sxs-lookup"><span data-stu-id="ab677-310">The file path from which to get the extension.</span></span></param>
        <summary><span data-ttu-id="ab677-311">Возвращает расширение из пути к файлу, представленного диапазоном символов только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ab677-311">Returns the extension of a file path that is represented by a read-only character span.</span></span></summary>
        <returns><span data-ttu-id="ab677-312">Расширение указанного пути (включая точку — ".") или <see cref="P:System.ReadOnlySpan`1.Empty" />, если в <paramref name="path" /> отсутствуют сведения о расширении.</span><span class="sxs-lookup"><span data-stu-id="ab677-312">The extension of the specified path (including the period, "."), or <see cref="P:System.ReadOnlySpan`1.Empty" /> if <paramref name="path" /> does not have extension information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="ab677-313">Этот метод получает расширение `path` , выполняя поиск `path` в течение («.»), начиная с последнего символа в диапазоне только для чтения и двигаясь по направлению к его первого символа.</span><span class="sxs-lookup"><span data-stu-id="ab677-313">This method obtains the extension of `path` by searching `path` for a period ("."), starting from the last character in the read-only span and continuing toward its first character.</span></span> <span data-ttu-id="ab677-314">Если точка найдена перед <xref:System.IO.Path.DirectorySeparatorChar> или <xref:System.IO.Path.AltDirectorySeparatorChar> символ, возвращаемый диапазон только для чтения содержит период и символы после него; в противном случае <xref:System.ReadOnlySpan%601.Empty?displayProperty=nameWithType> возвращается.</span><span class="sxs-lookup"><span data-stu-id="ab677-314">If a period is found before a <xref:System.IO.Path.DirectorySeparatorChar> or <xref:System.IO.Path.AltDirectorySeparatorChar> character, the returned read-only span contains the period and the characters after it; otherwise, <xref:System.ReadOnlySpan%601.Empty?displayProperty=nameWithType> is returned.</span></span>  

         ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="ab677-315">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="ab677-315">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetExtension">
      <MemberSignature Language="C#" Value="public static string GetExtension (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetExtension(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExtension (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetExtension(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetExtension : string -&gt; string" Usage="System.IO.Path.GetExtension path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="ab677-316">Строка пути, из которой нужно получить расширение.</span><span class="sxs-lookup"><span data-stu-id="ab677-316">The path string from which to get the extension.</span></span></param>
        <summary><span data-ttu-id="ab677-317">Возвращает расширение (включая точку «.») из указанной строки пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-317">Returns the extension (including the period ".") of the specified path string.</span></span></summary>
        <returns><span data-ttu-id="ab677-318">Расширение указанного пути (включая точку ".") или значение <see langword="null" /> или <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-318">The extension of the specified path (including the period "."), or <see langword="null" />, or <see cref="F:System.String.Empty" />.</span></span> <span data-ttu-id="ab677-319">Если параметр <paramref name="path" /> имеет значение <see langword="null" />, <see cref="M:System.IO.Path.GetExtension(System.String)" /> возвращает <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-319">If <paramref name="path" /> is <see langword="null" />, <see cref="M:System.IO.Path.GetExtension(System.String)" /> returns <see langword="null" />.</span></span> <span data-ttu-id="ab677-320">Если параметр <paramref name="path" /> не содержит сведений о расширении, <see cref="M:System.IO.Path.GetExtension(System.String)" /> возвращает <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-320">If <paramref name="path" /> does not have extension information, <see cref="M:System.IO.Path.GetExtension(System.String)" /> returns <see cref="F:System.String.Empty" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="ab677-321">Этот метод получает расширение `path` , выполняя поиск `path` в течение (.), начиная с последнего символа в `path` и продолжая в сторону первого символа.</span><span class="sxs-lookup"><span data-stu-id="ab677-321">This method obtains the extension of `path` by searching `path` for a period (.), starting with the last character in `path` and continuing toward the first character.</span></span> <span data-ttu-id="ab677-322">Если точка найдена перед <xref:System.IO.Path.DirectorySeparatorChar> или <xref:System.IO.Path.AltDirectorySeparatorChar> символ, возвращаемая строка содержит точку и знаки после него; в противном случае <xref:System.String.Empty?displayProperty=nameWithType> возвращается.</span><span class="sxs-lookup"><span data-stu-id="ab677-322">If a period is found before a <xref:System.IO.Path.DirectorySeparatorChar> or <xref:System.IO.Path.AltDirectorySeparatorChar> character, the returned string contains the period and the characters after it; otherwise, <xref:System.String.Empty?displayProperty=nameWithType> is returned.</span></span>  
  
 <span data-ttu-id="ab677-323">Список задач ввода-вывода, см. в разделе [распространенные задачи ввода-вывода](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="ab677-323">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>
 
## Examples  
 <span data-ttu-id="ab677-324">В следующем примере показано использование `GetExtension` метод для настольных систем на базе Windows.</span><span class="sxs-lookup"><span data-stu-id="ab677-324">The following example demonstrates using the `GetExtension` method on a Windows-based desktop platform.</span></span>  
  
 [!code-cpp[System.IO.Path Members#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#4)]
 [!code-csharp[System.IO.Path Members#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#4)]
 [!code-vb[System.IO.Path Members#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ab677-325"><paramref name="path" /> содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-325"><paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="ab677-326">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="ab677-326">File path formats on Windows systems</span></span></related>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ab677-327">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="ab677-327">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ab677-328">Практическое руководство. Чтение текста из файла</span><span class="sxs-lookup"><span data-stu-id="ab677-328">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ab677-329">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="ab677-329">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileName">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;char&gt; GetFileName (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;char&gt; GetFileName(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetFileName(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileName (path As ReadOnlySpan(Of Char)) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ReadOnlySpan&lt;char&gt; GetFileName(ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="F#" Value="static member GetFileName : ReadOnlySpan&lt;char&gt; -&gt; ReadOnlySpan&lt;char&gt;" Usage="System.IO.Path.GetFileName path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="ab677-330">Диапазон только для чтения, содержащий путь, из которого нужно получить имя и расширение файла.</span><span class="sxs-lookup"><span data-stu-id="ab677-330">A read-only span that contains the path from which to obtain the file name and extension.</span></span></param>
        <summary><span data-ttu-id="ab677-331">Возвращает имя и расширение файла из пути к файлу, представленного диапазоном символов только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ab677-331">Returns the file name and extension of a file path that is represented by a read-only character span.</span></span></summary>
        <returns><span data-ttu-id="ab677-332">Символы, следующие за последним символом разделителя каталогов в пути <paramref name="path" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-332">The characters after the last directory separator character in <paramref name="path" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="ab677-333">Возвращаемый диапазон только для чтения содержит символы, следующие за последним разделителем в пути `path`.</span><span class="sxs-lookup"><span data-stu-id="ab677-333">The returned read-only span contains the characters of the path that follow the last separator in `path`.</span></span> <span data-ttu-id="ab677-334">Если последним символом в `path` является символ разделения тома или каталога, метод возвращает <xref:System.ReadOnlySpan%601.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ab677-334">If the last character in `path` is a volume or directory separator character, the method returns <xref:System.ReadOnlySpan%601.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ab677-335">Если `path` содержит знак отсутствует разделитель, метод возвращает `path`.</span><span class="sxs-lookup"><span data-stu-id="ab677-335">If `path` contains no separator character, the method returns `path`.</span></span>

         ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="ab677-336">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="ab677-336">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileName">
      <MemberSignature Language="C#" Value="public static string GetFileName (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFileName(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetFileName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileName (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFileName(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetFileName : string -&gt; string" Usage="System.IO.Path.GetFileName path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="ab677-337">Строка пути, из которой нужно получить имя файла и расширение.</span><span class="sxs-lookup"><span data-stu-id="ab677-337">The path string from which to obtain the file name and extension.</span></span></param>
        <summary><span data-ttu-id="ab677-338">Возвращает имя файла и расширение указанной строки пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-338">Returns the file name and extension of the specified path string.</span></span></summary>
        <returns><span data-ttu-id="ab677-339">Символы, следующие за последним символом разделителя каталогов в пути <paramref name="path" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-339">The characters after the last directory separator character in <paramref name="path" />.</span></span> <span data-ttu-id="ab677-340">Если последним символом параметра <paramref name="path" /> является символ разделения тома или каталога, этот метод возвращает <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-340">If the last character of <paramref name="path" /> is a directory or volume separator character, this method returns <see cref="F:System.String.Empty" />.</span></span> <span data-ttu-id="ab677-341">Если значением параметра <paramref name="path" /> является <see langword="null" />, метод возвращает <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-341">If <paramref name="path" /> is <see langword="null" />, this method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="ab677-342">Возвращаемое значение — `null` Если пути к файлу `null`.</span><span class="sxs-lookup"><span data-stu-id="ab677-342">The returned value is `null` if the file path is `null`.</span></span>  
  
<span data-ttu-id="ab677-343">Разделитель для определения начала имени файла являются <xref:System.IO.Path.DirectorySeparatorChar> и <xref:System.IO.Path.AltDirectorySeparatorChar>.</span><span class="sxs-lookup"><span data-stu-id="ab677-343">The separator characters used to determine the start of the file name are <xref:System.IO.Path.DirectorySeparatorChar> and <xref:System.IO.Path.AltDirectorySeparatorChar>.</span></span>  

<span data-ttu-id="ab677-344">Так как *\\* имеет допустимое имя файла в Unix, `GetFileName` под управлением платформ на базе Unix не правильно возвращает имя файла из пути на основе Windows как *C:\\mydir\\myfile.ext*, но `GetFileName` под управлением платформ на базе Windows можно правильно возвращает имя файла из пути на основе Unix как */tmp/myfile.ext*, поэтому поведение `GetFileName` метод не является одинаковой на платформах на базе Unix и на основе Windows.</span><span class="sxs-lookup"><span data-stu-id="ab677-344">Because *\\* is a legal file name on Unix, `GetFileName` running under Unix-based platforms cannot correctly return the file name from a Windows-based path like *C:\\mydir\\myfile.ext*, but `GetFileName` running under Windows-based platforms can correctly return the file name from a Unix-based path like */tmp/myfile.ext*, so the behavior of the `GetFileName` method is not strictly the same on Unix-based and Windows-based platforms.</span></span>

<span data-ttu-id="ab677-345">Список задач ввода-вывода, см. в разделе [распространенные задачи ввода-вывода](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="ab677-345">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab677-346">В следующем примере показано поведение `GetFileName` метод для настольных систем на базе Windows.</span><span class="sxs-lookup"><span data-stu-id="ab677-346">The following example demonstrates the behavior of the `GetFileName` method on a Windows-based desktop platform.</span></span>  
  
 [!code-cpp[System.IO.Path Members#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#5)]
 [!code-csharp[System.IO.Path Members#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#5)]
 [!code-vb[System.IO.Path Members#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ab677-347"><paramref name="path" /> содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-347"><paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="ab677-348">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="ab677-348">File path formats on Windows systems</span></span></related>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ab677-349">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="ab677-349">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ab677-350">Практическое руководство. Чтение текста из файла</span><span class="sxs-lookup"><span data-stu-id="ab677-350">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ab677-351">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="ab677-351">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileNameWithoutExtension">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;char&gt; GetFileNameWithoutExtension (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;char&gt; GetFileNameWithoutExtension(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetFileNameWithoutExtension(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileNameWithoutExtension (path As ReadOnlySpan(Of Char)) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ReadOnlySpan&lt;char&gt; GetFileNameWithoutExtension(ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="F#" Value="static member GetFileNameWithoutExtension : ReadOnlySpan&lt;char&gt; -&gt; ReadOnlySpan&lt;char&gt;" Usage="System.IO.Path.GetFileNameWithoutExtension path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="ab677-352">Диапазон только для чтения, содержащий путь, из которого нужно получить имя файла без расширения.</span><span class="sxs-lookup"><span data-stu-id="ab677-352">A read-only span that contains the path from which to obtain the file name without the extension.</span></span></param>
        <summary><span data-ttu-id="ab677-353">Возвращает имя файла без расширения из пути к файлу, представленного диапазоном символов только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ab677-353">Returns the file name without the extension of a file path that is represented by a read-only character span.</span></span></summary>
        <returns><span data-ttu-id="ab677-354">Символы в диапазоне только для чтения, возвращенные методом <see cref="M:System.IO.Path.GetFileName(System.ReadOnlySpan{System.Char})" />, кроме последней точки (.) и всех следующих за ней символов.</span><span class="sxs-lookup"><span data-stu-id="ab677-354">The characters in the read-only span returned by <see cref="M:System.IO.Path.GetFileName(System.ReadOnlySpan{System.Char})" />, minus the last period (.) and all characters following it.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="ab677-355">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="ab677-355">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFileNameWithoutExtension">
      <MemberSignature Language="C#" Value="public static string GetFileNameWithoutExtension (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFileNameWithoutExtension(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetFileNameWithoutExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileNameWithoutExtension (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFileNameWithoutExtension(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetFileNameWithoutExtension : string -&gt; string" Usage="System.IO.Path.GetFileNameWithoutExtension path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="ab677-356">Путь к файлу.</span><span class="sxs-lookup"><span data-stu-id="ab677-356">The path of the file.</span></span></param>
        <summary><span data-ttu-id="ab677-357">Возвращает имя файла указанной строки пути без расширения.</span><span class="sxs-lookup"><span data-stu-id="ab677-357">Returns the file name of the specified path string without the extension.</span></span></summary>
        <returns><span data-ttu-id="ab677-358">Строка, возвращенная методом <see cref="M:System.IO.Path.GetFileName(System.ReadOnlySpan{System.Char})" />, кроме последней точки (.) и всех следующих за ней символов.</span><span class="sxs-lookup"><span data-stu-id="ab677-358">The string returned by <see cref="M:System.IO.Path.GetFileName(System.ReadOnlySpan{System.Char})" />, minus the last period (.) and all characters following it.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab677-359">Этот метод проверяет существование путь или имя файла.</span><span class="sxs-lookup"><span data-stu-id="ab677-359">This method does not verify that the path or file name exists.</span></span>  
  
 <span data-ttu-id="ab677-360">Список задач ввода-вывода, см. в разделе [распространенные задачи ввода-вывода](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="ab677-360">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab677-361">В следующем примере показано использование `GetFileNameWithoutExtension` метод.</span><span class="sxs-lookup"><span data-stu-id="ab677-361">The following example demonstrates a use of the `GetFileNameWithoutExtension` method.</span></span>  
  
 [!code-cpp[System.IO.Path Members#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#6)]
 [!code-csharp[System.IO.Path Members#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#6)]
 [!code-vb[System.IO.Path Members#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ab677-362"><paramref name="path" /> содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-362"><paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="ab677-363">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="ab677-363">File path formats on Windows systems</span></span></related>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ab677-364">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="ab677-364">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ab677-365">Практическое руководство. Чтение текста из файла</span><span class="sxs-lookup"><span data-stu-id="ab677-365">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ab677-366">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="ab677-366">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFullPath">
      <MemberSignature Language="C#" Value="public static string GetFullPath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFullPath(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetFullPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFullPath (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFullPath(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetFullPath : string -&gt; string" Usage="System.IO.Path.GetFullPath path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="ab677-367">Файл или каталог, для которых нужно получить сведения об абсолютном пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-367">The file or directory for which to obtain absolute path information.</span></span></param>
        <summary><span data-ttu-id="ab677-368">Возвращает для указанной строки пути абсолютный путь.</span><span class="sxs-lookup"><span data-stu-id="ab677-368">Returns the absolute path for the specified path string.</span></span></summary>
        <returns><span data-ttu-id="ab677-369">Полное расположение <paramref name="path" />, например "C:\MyFile.txt".</span><span class="sxs-lookup"><span data-stu-id="ab677-369">The fully qualified location of <paramref name="path" />, such as "C:\MyFile.txt".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
 <span data-ttu-id="ab677-370">Абсолютный путь включает все сведения, необходимые для поиска файла или каталога в системе.</span><span class="sxs-lookup"><span data-stu-id="ab677-370">The absolute path includes all information required to locate a file or directory on a system.</span></span>  
  
 <span data-ttu-id="ab677-371">Файл или каталог, заданный параметром `path` не обязательно должны существовать.</span><span class="sxs-lookup"><span data-stu-id="ab677-371">The file or directory specified by `path` is not required to exist.</span></span> <span data-ttu-id="ab677-372">Например если *c:\temp\newdir* является текущий каталог, вызвав `GetFullPath` на имя файла, такие как *test.txt* возвращает *c:\temp\newdir\test.txt*.</span><span class="sxs-lookup"><span data-stu-id="ab677-372">For example, if *c:\temp\newdir* is the current directory, calling `GetFullPath` on a file name such as *test.txt* returns *c:\temp\newdir\test.txt*.</span></span> <span data-ttu-id="ab677-373">Файл не должны существовать.</span><span class="sxs-lookup"><span data-stu-id="ab677-373">The file need not exist.</span></span>  

> [!IMPORTANT]
> <span data-ttu-id="ab677-374">Если `path` является относительным путем, эта перегрузка возвращает полный URL-адрес, могут быть основаны на текущий диск и текущий каталог.</span><span class="sxs-lookup"><span data-stu-id="ab677-374">If `path` is a relative path, this overload returns a fully qualified path that can be based on the current drive and current directory.</span></span> <span data-ttu-id="ab677-375">Текущий диск и текущий каталог можно изменить в любое время при выполнении приложения.</span><span class="sxs-lookup"><span data-stu-id="ab677-375">The current drive and current directory can change at any time as an application executes.</span></span> <span data-ttu-id="ab677-376">Таким образом путь, возвращаемый этой перегрузки не может определить заранее.</span><span class="sxs-lookup"><span data-stu-id="ab677-376">As a result, the path returned by this overload cannot be determined in advance.</span></span> <span data-ttu-id="ab677-377">Чтобы вернуть детерминированным пути, вызовите <xref:System.IO.Path.GetFullPath(System.String,System.String)> перегрузки.</span><span class="sxs-lookup"><span data-stu-id="ab677-377">To return a deterministic path, call the <xref:System.IO.Path.GetFullPath(System.String,System.String)> overload.</span></span> <span data-ttu-id="ab677-378">Можно также вызвать <xref:System.IO.Path.IsPathFullyQualified%2A> метод, чтобы определить, является ли полное имя пути или путь относительно и, следовательно, вызов `GetFullPath` необходим.</span><span class="sxs-lookup"><span data-stu-id="ab677-378">You can also call the <xref:System.IO.Path.IsPathFullyQualified%2A> method to determine whether a path is fully qualified or relative and therefore whether a call to `GetFullPath` is necessary.</span></span>

 <span data-ttu-id="ab677-379">Тем не менее если `path` существует, вызывающий должен иметь разрешение на получение сведения о пути к `path`.</span><span class="sxs-lookup"><span data-stu-id="ab677-379">However, if `path` does exist, the caller must have permission to obtain path information for `path`.</span></span> <span data-ttu-id="ab677-380">Обратите внимание, что в отличие от большинства членов <xref:System.IO.Path> класс, этот метод осуществляет доступ к файловой системе.</span><span class="sxs-lookup"><span data-stu-id="ab677-380">Note that unlike most members of the <xref:System.IO.Path> class, this method accesses the file system.</span></span>  
  
 <span data-ttu-id="ab677-381">Этот метод использует текущий каталог и текущие сведения о том, для полного определения `path`.</span><span class="sxs-lookup"><span data-stu-id="ab677-381">This method uses the current directory and current volume information to fully qualify `path`.</span></span> <span data-ttu-id="ab677-382">Если указать файл только в имя `path`, `GetFullPath` возвращает полный путь текущего каталога.</span><span class="sxs-lookup"><span data-stu-id="ab677-382">If you specify a file name only in `path`, `GetFullPath` returns the fully qualified path of the current directory.</span></span>  
  
 <span data-ttu-id="ab677-383">Если передать короткое имя файла, оно расширяется на длинное имя файла.</span><span class="sxs-lookup"><span data-stu-id="ab677-383">If you pass in a short file name, it is expanded to a long file name.</span></span>  
  
 <span data-ttu-id="ab677-384">Если путь не содержит значащие символы, он является недопустимым, если оно содержит один или несколько «.» символов, за которыми следует любое количество пробелов; Затем он будет проанализирован либо как «. «или»..».</span><span class="sxs-lookup"><span data-stu-id="ab677-384">If a path contains no significant characters, it is invalid unless it contains one or more "." characters followed by any number of spaces; then it will be parsed as either "." or "..".</span></span>  

<span data-ttu-id="ab677-385">.NET core 1.1 и более поздних версий и .NET Framework 4.6.2 и более поздние версии также поддерживают путей, содержащих имена устройств, таких как "\\? \C:\".</span><span class="sxs-lookup"><span data-stu-id="ab677-385">.NET Core 1.1 and later versions and .NET Framework 4.6.2 and later versions also support paths that include device names, such as "\\?\C:\".</span></span>

<span data-ttu-id="ab677-386">Дополнительные сведения о форматах файлов, путь на Windows, см. в разделе [путь форматы файлов в системах Windows](~/docs/standard/io/file-path-formats.md).</span><span class="sxs-lookup"><span data-stu-id="ab677-386">For more information on file path formats on Windows, see [File path formats on Windows systems](~/docs/standard/io/file-path-formats.md).</span></span> <span data-ttu-id="ab677-387">Список задач ввода-вывода, см. в разделе [распространенные задачи ввода-вывода](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="ab677-387">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>
  
## Examples  
 <span data-ttu-id="ab677-388">В следующем примере демонстрируется `GetFullPath` метод для настольных систем на базе Windows.</span><span class="sxs-lookup"><span data-stu-id="ab677-388">The following example demonstrates the `GetFullPath` method on a Windows-based desktop platform.</span></span>  
  
 [!code-cpp[System.IO.Path Members#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#7)]
 [!code-csharp[System.IO.Path Members#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#7)]
 [!code-vb[System.IO.Path Members#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ab677-389"><paramref name="path" /> представляет собой строку нулевой длины, содержащую только пробелы или содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-389"><paramref name="path" /> is a zero-length string, contains only white space, or contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span>  
  
<span data-ttu-id="ab677-390">-или-</span><span class="sxs-lookup"><span data-stu-id="ab677-390">-or-</span></span> 
<span data-ttu-id="ab677-391">Системе не удалось получить абсолютный путь.</span><span class="sxs-lookup"><span data-stu-id="ab677-391">The system could not retrieve the absolute path.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ab677-392">У вызывающего объекта отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="ab677-392">The caller does not have the required permissions.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab677-393">Свойство <paramref name="path" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-393"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ab677-394"><paramref name="path" /> содержит двоеточие (:), которое не является частью идентификатора тома (например, "c:\\").</span><span class="sxs-lookup"><span data-stu-id="ab677-394"><paramref name="path" /> contains a colon (":") that is not part of a volume identifier (for example, "c:\\").</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ab677-395">Указанный путь, имя файла или оба значения превышают максимальную длину, заданную в системе.</span><span class="sxs-lookup"><span data-stu-id="ab677-395">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="ab677-396">для доступа к пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-396">for access to the path.</span></span></permission>
        <related type="Article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="ab677-397">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="ab677-397">File path formats on Windows systems</span></span></related>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ab677-398">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="ab677-398">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ab677-399">Практическое руководство. Чтение текста из файла</span><span class="sxs-lookup"><span data-stu-id="ab677-399">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ab677-400">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="ab677-400">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFullPath">
      <MemberSignature Language="C#" Value="public static string GetFullPath (string path, string basePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFullPath(string path, string basePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetFullPath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFullPath (path As String, basePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFullPath(System::String ^ path, System::String ^ basePath);" />
      <MemberSignature Language="F#" Value="static member GetFullPath : string * string -&gt; string" Usage="System.IO.Path.GetFullPath (path, basePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="basePath" Type="System.String" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="ab677-401">Относительный путь для сцепления с <paramref name="basePath" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-401">A relative path to concatenate to <paramref name="basePath" />.</span></span></param>
        <param name="basePath"><span data-ttu-id="ab677-402">Начало полного пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-402">The beginning of a fully qualified path.</span></span></param>
        <summary><span data-ttu-id="ab677-403">Возвращает абсолютный путь из базового полного пути и относительного пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-403">Returns an absolute path from a fully qualified base path and a relative path.</span></span></summary>
        <returns><span data-ttu-id="ab677-404">Абсолютный путь.</span><span class="sxs-lookup"><span data-stu-id="ab677-404">The absolute path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="ab677-405">Если `path` равен пустой путь, метод возвращает `basePath`.</span><span class="sxs-lookup"><span data-stu-id="ab677-405">If `path` is an empty path, the method returns `basePath`.</span></span> <span data-ttu-id="ab677-406">Если `path` — это полный путь к передает метод `path` для <xref:System.IO.Path.GetFullPath(System.String)> метод и возвращает результат.</span><span class="sxs-lookup"><span data-stu-id="ab677-406">If `path` is a fully qualified path, the method passes `path` to the <xref:System.IO.Path.GetFullPath(System.String)> method and returns the result.</span></span>

<span data-ttu-id="ab677-407">Используйте этот метод для возврата детерминированным путь на основании указанного тома и к корневому каталогу directory при использовании относительных путей.</span><span class="sxs-lookup"><span data-stu-id="ab677-407">Use this method to return a deterministic path based on a specified volume and rooted directory when you're using relative paths.</span></span> <span data-ttu-id="ab677-408">С помощью предопределенного `basePath` вместо его в соответствии с текущей условия directory диска от нежелательных путей, из-за непредвиденных изменений в текущий диск и каталог.</span><span class="sxs-lookup"><span data-stu-id="ab677-408">Using a predefined `basePath` rather than one based on the current drive directory guards against unwanted file paths caused by unexpected changes in the current drive and directory.</span></span> 

## <a name="example"></a><span data-ttu-id="ab677-409">Пример</span><span class="sxs-lookup"><span data-stu-id="ab677-409">Example</span></span>

<span data-ttu-id="ab677-410">В следующем примере определяется переменная, `basePath`, чтобы представить текущего каталога приложения.</span><span class="sxs-lookup"><span data-stu-id="ab677-410">The following example defines a variable, `basePath`, to represent an application's current directory.</span></span> <span data-ttu-id="ab677-411">Затем передает его `GetFullPath` метод, чтобы получить полный путь к каталогу данных приложения.</span><span class="sxs-lookup"><span data-stu-id="ab677-411">It then passes it to the `GetFullPath` method to get a fully qualified path to the application's data directory.</span></span>

[!code-csharp[Path.GetFullPath(String,String)](~/samples/snippets/csharp/api/system.io/path/getfullpath/program.cs)] 
[!code-vb[Path.GetFullPath(String,String)](~/samples/snippets/visualbasic/api/system.io/path/getfullpath/program.vb)] 

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab677-412">Параметр <paramref name="path" /> или <paramref name="basePath" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-412"><paramref name="path" /> or <paramref name="basePath" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ab677-413"><paramref name="basePath" /> — это не полный путь.</span><span class="sxs-lookup"><span data-stu-id="ab677-413"><paramref name="basePath" /> is not a fully qualified path.</span></span>

<span data-ttu-id="ab677-414">-или-</span><span class="sxs-lookup"><span data-stu-id="ab677-414">-or-</span></span>

<span data-ttu-id="ab677-415"><paramref name="path" /> или <paramref name="basePath" /> содержит недопустимые символы, такие как U+0000.</span><span class="sxs-lookup"><span data-stu-id="ab677-415"><paramref name="path" /> or <paramref name="basePath" /> contains invalid path characters, such as U+0000.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetInvalidFileNameChars">
      <MemberSignature Language="C#" Value="public static char[] GetInvalidFileNameChars ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char[] GetInvalidFileNameChars() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetInvalidFileNameChars" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInvalidFileNameChars () As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;char&gt; ^ GetInvalidFileNameChars();" />
      <MemberSignature Language="F#" Value="static member GetInvalidFileNameChars : unit -&gt; char[]" Usage="System.IO.Path.GetInvalidFileNameChars " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ab677-416">Возвращает массив, содержащий символы, которые не разрешены в именах файлов.</span><span class="sxs-lookup"><span data-stu-id="ab677-416">Gets an array containing the characters that are not allowed in file names.</span></span></summary>
        <returns><span data-ttu-id="ab677-417">Массив, содержащий символы, которые не разрешены в именах файлов.</span><span class="sxs-lookup"><span data-stu-id="ab677-417">An array containing the characters that are not allowed in file names.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab677-418">Массив, возвращаемый этим методом, не обязательно содержит полный набор символов, недопустимых в именах файлов и каталогов.</span><span class="sxs-lookup"><span data-stu-id="ab677-418">The array returned from this method is not guaranteed to contain the complete set of characters that are invalid in file and directory names.</span></span> <span data-ttu-id="ab677-419">Полный набор недопустимых символов может изменяться файловой системой.</span><span class="sxs-lookup"><span data-stu-id="ab677-419">The full set of invalid characters can vary by file system.</span></span> <span data-ttu-id="ab677-420">Например, на настольных системах, работающих в Windows, недопустимых символов пути может содержать символы ASCII/Юникода 1 до 31, а также заключения в кавычки ("«), меньше (\<), больше (>), канал (&#124;), символ backspace (\b), значение null (\0) и табуляции (\t).</span><span class="sxs-lookup"><span data-stu-id="ab677-420">For example, on Windows-based desktop platforms, invalid path characters might include ASCII/Unicode characters 1 through 31, as well as quote ("), less than (\<), greater than (>), pipe (&#124;), backspace (\b), null (\0) and tab (\t).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab677-421">В следующем примере демонстрируется <xref:System.IO.Path.GetInvalidFileNameChars%2A> метод и <xref:System.IO.Path.GetInvalidPathChars%2A> метод для извлечения недопустимые символы.</span><span class="sxs-lookup"><span data-stu-id="ab677-421">The following example demonstrates the <xref:System.IO.Path.GetInvalidFileNameChars%2A> method and the <xref:System.IO.Path.GetInvalidPathChars%2A> method to retrieve invalid characters.</span></span>  
  
 [!code-cpp[IO.Path.GetInvalidFile-PathChars#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.Path.GetInvalidFile-PathChars/cpp/example.cpp#1)]
 [!code-csharp[IO.Path.GetInvalidFile-PathChars#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Path.GetInvalidFile-PathChars/CS/example.cs#1)]
 [!code-vb[IO.Path.GetInvalidFile-PathChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Path.GetInvalidFile-PathChars/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInvalidPathChars">
      <MemberSignature Language="C#" Value="public static char[] GetInvalidPathChars ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char[] GetInvalidPathChars() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetInvalidPathChars" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInvalidPathChars () As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;char&gt; ^ GetInvalidPathChars();" />
      <MemberSignature Language="F#" Value="static member GetInvalidPathChars : unit -&gt; char[]" Usage="System.IO.Path.GetInvalidPathChars " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ab677-422">Возвращает массив, содержащий символы, которые не разрешены в именах путей.</span><span class="sxs-lookup"><span data-stu-id="ab677-422">Gets an array containing the characters that are not allowed in path names.</span></span></summary>
        <returns><span data-ttu-id="ab677-423">Массив, содержащий символы, которые не разрешены в именах путей.</span><span class="sxs-lookup"><span data-stu-id="ab677-423">An array containing the characters that are not allowed in path names.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab677-424">Массив, возвращаемый этим методом, не обязательно содержит полный набор символов, недопустимых в именах файлов и каталогов.</span><span class="sxs-lookup"><span data-stu-id="ab677-424">The array returned from this method is not guaranteed to contain the complete set of characters that are invalid in file and directory names.</span></span> <span data-ttu-id="ab677-425">Полный набор недопустимых символов может изменяться файловой системой.</span><span class="sxs-lookup"><span data-stu-id="ab677-425">The full set of invalid characters can vary by file system.</span></span> <span data-ttu-id="ab677-426">Например, на настольных системах, работающих в Windows, недопустимых символов пути может содержать символы ASCII/Юникода 1 до 31, а также заключения в кавычки ("«), меньше (\<), больше (>), канал (&#124;), символ backspace (\b), значение null (\0) и табуляции (\t).</span><span class="sxs-lookup"><span data-stu-id="ab677-426">For example, on Windows-based desktop platforms, invalid path characters might include ASCII/Unicode characters 1 through 31, as well as quote ("), less than (\<), greater than (>), pipe (&#124;), backspace (\b), null (\0) and tab (\t).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab677-427">В следующем примере демонстрируется <xref:System.IO.Path.GetInvalidFileNameChars%2A> метод и <xref:System.IO.Path.GetInvalidPathChars%2A> метод для извлечения недопустимые символы.</span><span class="sxs-lookup"><span data-stu-id="ab677-427">The following example demonstrates the <xref:System.IO.Path.GetInvalidFileNameChars%2A> method and the <xref:System.IO.Path.GetInvalidPathChars%2A> method to retrieve invalid characters.</span></span>  
  
 [!code-cpp[IO.Path.GetInvalidFile-PathChars#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.Path.GetInvalidFile-PathChars/cpp/example.cpp#1)]
 [!code-csharp[IO.Path.GetInvalidFile-PathChars#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Path.GetInvalidFile-PathChars/CS/example.cs#1)]
 [!code-vb[IO.Path.GetInvalidFile-PathChars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Path.GetInvalidFile-PathChars/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPathRoot">
      <MemberSignature Language="C#" Value="public static ReadOnlySpan&lt;char&gt; GetPathRoot (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ReadOnlySpan`1&lt;char&gt; GetPathRoot(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetPathRoot(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPathRoot (path As ReadOnlySpan(Of Char)) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ReadOnlySpan&lt;char&gt; GetPathRoot(ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="F#" Value="static member GetPathRoot : ReadOnlySpan&lt;char&gt; -&gt; ReadOnlySpan&lt;char&gt;" Usage="System.IO.Path.GetPathRoot path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="ab677-428">Путь, из которого нужно получить сведения о корневом каталоге.</span><span class="sxs-lookup"><span data-stu-id="ab677-428">The path from which to obtain root directory information.</span></span></param>
        <summary><span data-ttu-id="ab677-429">Получает сведения о корневом каталоге из пути, содержащегося в указанном диапазоне символов.</span><span class="sxs-lookup"><span data-stu-id="ab677-429">Gets the root directory information from the path contained in the specified character span.</span></span></summary>
        <returns><span data-ttu-id="ab677-430">Диапазон символов, содержащий корневой каталог пути `path`.</span><span class="sxs-lookup"><span data-stu-id="ab677-430">A character span containing the root directory of `path`.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="ab677-431">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="ab677-431">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetPathRoot">
      <MemberSignature Language="C#" Value="public static string GetPathRoot (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPathRoot(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetPathRoot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPathRoot (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPathRoot(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetPathRoot : string -&gt; string" Usage="System.IO.Path.GetPathRoot path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="ab677-432">Путь, из которого нужно получить сведения о корневом каталоге.</span><span class="sxs-lookup"><span data-stu-id="ab677-432">The path from which to obtain root directory information.</span></span></param>
        <summary><span data-ttu-id="ab677-433">Возвращает сведения о корневом каталоге для указанного пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-433">Gets the root directory information of the specified path.</span></span></summary>
        <returns><span data-ttu-id="ab677-434">Корневой каталог параметра <paramref name="path" /> или <see langword="null" />, если параметр <paramref name="path" /> имеет значение <see langword="null" />, или пустая строка, если параметр <paramref name="path" /> не содержит сведений о корневом каталоге.</span><span class="sxs-lookup"><span data-stu-id="ab677-434">The root directory of <paramref name="path" />, or <see langword="null" /> if <paramref name="path" /> is <see langword="null" />, or an empty string if <paramref name="path" /> does not contain root directory information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab677-435">Этот метод проверяет существование путь или имя файла.</span><span class="sxs-lookup"><span data-stu-id="ab677-435">This method does not verify that the path or file name exists.</span></span>  
  
 <span data-ttu-id="ab677-436">Ниже приведены возможные шаблоны строка, возвращаемая этим методом.</span><span class="sxs-lookup"><span data-stu-id="ab677-436">Possible patterns for the string returned by this method are as follows:</span></span>  
  
- <span data-ttu-id="ab677-437">Пустая строка (`path` указан относительный путь для текущего диска или тома).</span><span class="sxs-lookup"><span data-stu-id="ab677-437">An empty string (`path` specified a relative path on the current drive or volume).</span></span>  
  
- <span data-ttu-id="ab677-438">"\" (`path` указан абсолютный путь на текущем диске).</span><span class="sxs-lookup"><span data-stu-id="ab677-438">"\" (`path` specified an absolute path on the current drive).</span></span>  
  
- <span data-ttu-id="ab677-439">«X:» (`path` указан относительный путь на диске, где X представляет букву диска или тома).</span><span class="sxs-lookup"><span data-stu-id="ab677-439">"X:" (`path` specified a relative path on a drive, where X represents a drive or volume letter).</span></span>  
  
- <span data-ttu-id="ab677-440">«X:\" (`path` указан абсолютный путь на данном диске).</span><span class="sxs-lookup"><span data-stu-id="ab677-440">"X:\" (`path` specified an absolute path on a given drive).</span></span>  
  
- <span data-ttu-id="ab677-441">"\\\ComputerName\SharedFolder» (в формате UNC).</span><span class="sxs-lookup"><span data-stu-id="ab677-441">"\\\ComputerName\SharedFolder" (a UNC path).</span></span>  
  
- <span data-ttu-id="ab677-442">"\\? \C:» (DOS путь к устройству, поддерживаемые .NET Core 1.1 и более поздних версий и в .NET Framework 4.6.2 и более поздних версий)</span><span class="sxs-lookup"><span data-stu-id="ab677-442">"\\?\C:" (a DOS device path, supported in .NET Core 1.1 and later versions and in .NET Framework 4.6.2 and later versions)</span></span>
   
 <span data-ttu-id="ab677-443">Дополнительные сведения о пути к файлам в Windows, см. в разделе [путь форматы файлов в системах Windows](~/docs/standard/io/file-path-formats.md).</span><span class="sxs-lookup"><span data-stu-id="ab677-443">For more information on file paths on Windows, see [File path formats on Windows systems](~/docs/standard/io/file-path-formats.md).</span></span> <span data-ttu-id="ab677-444">Список задач ввода-вывода, см. в разделе [распространенные задачи ввода-вывода](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="ab677-444">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
## Examples  
 <span data-ttu-id="ab677-445">В следующем примере показано использование `GetPathRoot` метод.</span><span class="sxs-lookup"><span data-stu-id="ab677-445">The following example demonstrates a use of the `GetPathRoot` method.</span></span>  
  
 [!code-cpp[System.IO.Path Members#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#8)]
 [!code-csharp[System.IO.Path Members#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#8)]
 [!code-vb[System.IO.Path Members#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ab677-446"><paramref name="path" /> содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-446"><paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span>  
  
<span data-ttu-id="ab677-447">-или-</span><span class="sxs-lookup"><span data-stu-id="ab677-447">-or-</span></span> 
 <span data-ttu-id="ab677-448"><see cref="F:System.String.Empty" /> передан <paramref name="path" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-448"><see cref="F:System.String.Empty" /> was passed to <paramref name="path" />.</span></span></exception>
        <related type="article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="ab677-449">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="ab677-449">File path formats on Windows systems</span></span></related>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ab677-450">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="ab677-450">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ab677-451">Практическое руководство. Чтение текста из файла</span><span class="sxs-lookup"><span data-stu-id="ab677-451">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ab677-452">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="ab677-452">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetRandomFileName">
      <MemberSignature Language="C#" Value="public static string GetRandomFileName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetRandomFileName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetRandomFileName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRandomFileName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetRandomFileName();" />
      <MemberSignature Language="F#" Value="static member GetRandomFileName : unit -&gt; string" Usage="System.IO.Path.GetRandomFileName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ab677-453">Возвращает произвольное имя каталога или файла.</span><span class="sxs-lookup"><span data-stu-id="ab677-453">Returns a random folder name or file name.</span></span></summary>
        <returns><span data-ttu-id="ab677-454">Произвольное имя каталога или файла.</span><span class="sxs-lookup"><span data-stu-id="ab677-454">A random folder name or file name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab677-455"><xref:System.IO.Path.GetRandomFileName%2A> Метод возвращает криптостойкой случайных строку, которую можно использовать в качестве имени папки или имени файла.</span><span class="sxs-lookup"><span data-stu-id="ab677-455">The <xref:System.IO.Path.GetRandomFileName%2A> method returns a cryptographically strong, random string that can be used as either a folder name or a file name.</span></span> <span data-ttu-id="ab677-456">В отличие от <xref:System.IO.Path.GetTempFileName%2A>, <xref:System.IO.Path.GetRandomFileName%2A> не создает файл.</span><span class="sxs-lookup"><span data-stu-id="ab677-456">Unlike <xref:System.IO.Path.GetTempFileName%2A>, <xref:System.IO.Path.GetRandomFileName%2A> does not create a file.</span></span> <span data-ttu-id="ab677-457">Когда безопасность файловой системы имеет первостепенное значение, этот метод следует использовать вместо <xref:System.IO.Path.GetTempFileName%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab677-457">When the security of your file system is paramount, this method should be used instead of <xref:System.IO.Path.GetTempFileName%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab677-458">В следующем примере показано выходные данные <xref:System.IO.Path.GetRandomFileName%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ab677-458">The following example show output from the <xref:System.IO.Path.GetRandomFileName%2A> method.</span></span>  
  
 [!code-csharp[System.IO.Path Members#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers20.cs#20)]
 [!code-vb[System.IO.Path Members#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers20.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelativePath">
      <MemberSignature Language="C#" Value="public static string GetRelativePath (string relativeTo, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetRelativePath(string relativeTo, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetRelativePath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRelativePath (relativeTo As String, path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetRelativePath(System::String ^ relativeTo, System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetRelativePath : string * string -&gt; string" Usage="System.IO.Path.GetRelativePath (relativeTo, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="path" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="relativeTo"><span data-ttu-id="ab677-459">Исходный путь, относительно которого должен указываться результат.</span><span class="sxs-lookup"><span data-stu-id="ab677-459">The source path the result should be relative to.</span></span> <span data-ttu-id="ab677-460">Этот путь всегда считается каталогом.</span><span class="sxs-lookup"><span data-stu-id="ab677-460">This path is always considered to be a directory.</span></span></param>
        <param name="path"><span data-ttu-id="ab677-461">Целевой путь.</span><span class="sxs-lookup"><span data-stu-id="ab677-461">The destination path.</span></span></param>
        <summary><span data-ttu-id="ab677-462">Возвращает относительный путь от одного пути к другому.</span><span class="sxs-lookup"><span data-stu-id="ab677-462">Returns a relative path from one path to another.</span></span></summary>
        <returns><span data-ttu-id="ab677-463">Относительный путь или <paramref name="path" />, если в нескольких путях используются разные корневые папки.</span><span class="sxs-lookup"><span data-stu-id="ab677-463">The relative path, or <paramref name="path" /> if the paths don't share the same root.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="ab677-464">Разрешение путей реализуется путем вызова <xref:System.IO.Path.GetFullPath%2A> метод до Вычисление разности.</span><span class="sxs-lookup"><span data-stu-id="ab677-464">Paths are resolved by calling the <xref:System.IO.Path.GetFullPath%2A> method before calculating the difference.</span></span> <span data-ttu-id="ab677-465">Данный метод использует сравнение путь файла по умолчанию для текущей платформы (<xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType> для Windows и MacOs, <xref:System.StringComparison.Ordinal?displayProperty=nameWithType> для Linux.</span><span class="sxs-lookup"><span data-stu-id="ab677-465">The method uses the default file path comparison for the current platform (<xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType> for Windows and MacOs, <xref:System.StringComparison.Ordinal?displayProperty=nameWithType> for Linux.</span></span> 

         ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab677-466">Параметр <paramref name="relativeTo" /> или <paramref name="path" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-466"><paramref name="relativeTo" /> or <paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <related type="article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="ab677-467">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="ab677-467">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetTempFileName">
      <MemberSignature Language="C#" Value="public static string GetTempFileName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTempFileName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetTempFileName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTempFileName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTempFileName();" />
      <MemberSignature Language="F#" Value="static member GetTempFileName : unit -&gt; string" Usage="System.IO.Path.GetTempFileName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ab677-468">Создает на диске временный пустой файл с уникальным именем и возвращает полный путь этого файла.</span><span class="sxs-lookup"><span data-stu-id="ab677-468">Creates a uniquely named, zero-byte temporary file on disk and returns the full path of that file.</span></span></summary>
        <returns><span data-ttu-id="ab677-469">Полный путь к временному файлу.</span><span class="sxs-lookup"><span data-stu-id="ab677-469">The full path of the temporary file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab677-470">Этот метод создает временный файл с. Расширение файла TMP.</span><span class="sxs-lookup"><span data-stu-id="ab677-470">This method creates a temporary file with a .TMP file extension.</span></span> <span data-ttu-id="ab677-471">Временный файл создается в временную папку пользователя, который является путь возвращаемые <xref:System.IO.Path.GetTempPath%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ab677-471">The temporary file is created within the user's temporary folder, which is the path returned by the <xref:System.IO.Path.GetTempPath%2A> method.</span></span>  
  
 <span data-ttu-id="ab677-472"><xref:System.IO.Path.GetTempFileName%2A> Метод вызывает <xref:System.IO.IOException> если он используется для создания более 65 535 файлов без удаления предыдущей временные файлы.</span><span class="sxs-lookup"><span data-stu-id="ab677-472">The <xref:System.IO.Path.GetTempFileName%2A> method will raise an <xref:System.IO.IOException> if it is used to create more than 65535 files without deleting previous temporary files.</span></span>  
  
 <span data-ttu-id="ab677-473"><xref:System.IO.Path.GetTempFileName%2A> Метод вызывает <xref:System.IO.IOException> при наличии не уникальное имя временного файла.</span><span class="sxs-lookup"><span data-stu-id="ab677-473">The <xref:System.IO.Path.GetTempFileName%2A> method will raise an <xref:System.IO.IOException> if no unique temporary file name is available.</span></span> <span data-ttu-id="ab677-474">Чтобы устранить эту ошибку, удалите все ненужные временные файлы.</span><span class="sxs-lookup"><span data-stu-id="ab677-474">To resolve this error, delete all unneeded temporary files.</span></span>  
  
 <span data-ttu-id="ab677-475">Список задач ввода-вывода, см. в разделе [распространенные задачи ввода-вывода](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="ab677-475">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ab677-476">Ошибка ввода-вывода, например, нет уникальное имя временного файла.</span><span class="sxs-lookup"><span data-stu-id="ab677-476">An I/O error occurs, such as no unique temporary file name is available.</span></span>  
  
<span data-ttu-id="ab677-477">-или-</span><span class="sxs-lookup"><span data-stu-id="ab677-477">-or-</span></span> 
<span data-ttu-id="ab677-478">Этот метод не удалось создать временный файл.</span><span class="sxs-lookup"><span data-stu-id="ab677-478">This method was unable to create a temporary file.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="ab677-479">для записи во временный каталог.</span><span class="sxs-lookup"><span data-stu-id="ab677-479">for writing to the temporary directory.</span></span> <span data-ttu-id="ab677-480">Связанное перечисление: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span><span class="sxs-lookup"><span data-stu-id="ab677-480">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ab677-481">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="ab677-481">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ab677-482">Практическое руководство. Чтение текста из файла</span><span class="sxs-lookup"><span data-stu-id="ab677-482">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ab677-483">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="ab677-483">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetTempPath">
      <MemberSignature Language="C#" Value="public static string GetTempPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTempPath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.GetTempPath" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTempPath () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTempPath();" />
      <MemberSignature Language="F#" Value="static member GetTempPath : unit -&gt; string" Usage="System.IO.Path.GetTempPath " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ab677-484">Возвращает путь к временной папке текущего пользователя.</span><span class="sxs-lookup"><span data-stu-id="ab677-484">Returns the path of the current user's temporary folder.</span></span></summary>
        <returns><span data-ttu-id="ab677-485">Путь к временной папке, заканчивающийся обратной косой чертой.</span><span class="sxs-lookup"><span data-stu-id="ab677-485">The path to the temporary folder, ending with a backslash.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab677-486">Этот метод проверяет существование переменных среды в следующем порядке и использует первый найденный путь:</span><span class="sxs-lookup"><span data-stu-id="ab677-486">This method checks for the existence of environment variables in the following order and uses the first path found:</span></span>  
  
1.  <span data-ttu-id="ab677-487">Путь, указанный в переменной среды TMP.</span><span class="sxs-lookup"><span data-stu-id="ab677-487">The path specified by the TMP environment variable.</span></span>  
  
2.  <span data-ttu-id="ab677-488">Путь, указанный в переменной среды TEMP.</span><span class="sxs-lookup"><span data-stu-id="ab677-488">The path specified by the TEMP environment variable.</span></span>  
  
3.  <span data-ttu-id="ab677-489">Путь, указанный в переменной среды USERPROFILE.</span><span class="sxs-lookup"><span data-stu-id="ab677-489">The path specified by the USERPROFILE environment variable.</span></span>  
  
4.  <span data-ttu-id="ab677-490">Каталог Windows.</span><span class="sxs-lookup"><span data-stu-id="ab677-490">The Windows directory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab677-491">В следующем примере кода демонстрируется вызов метода <xref:System.IO.Path.GetTempPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab677-491">The following code shows how to call the <xref:System.IO.Path.GetTempPath%2A> method.</span></span>  
  
```vb  
result As String = Path.GetTempPath()  
Console.WriteLine(result)  
```  
  
```csharp  
string result = Path.GetTempPath();  
Console.WriteLine(result);  
```  
  
 <span data-ttu-id="ab677-492">Этот пример выводит результат, аналогичный приведенному ниже.</span><span class="sxs-lookup"><span data-stu-id="ab677-492">This example produces output similar to the following.</span></span>  
  
```  
C:\Users\UserName\AppData\Local\Temp\  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ab677-493">У вызывающего объекта отсутствуют необходимые разрешения.</span><span class="sxs-lookup"><span data-stu-id="ab677-493">The caller does not have the required permissions.</span></span></exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="ab677-494">для неограниченного доступа к переменным среды.</span><span class="sxs-lookup"><span data-stu-id="ab677-494">for unrestricted access to environment variables.</span></span> <span data-ttu-id="ab677-495">Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="ab677-495">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ab677-496">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="ab677-496">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ab677-497">Практическое руководство. Чтение текста из файла</span><span class="sxs-lookup"><span data-stu-id="ab677-497">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ab677-498">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="ab677-498">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HasExtension">
      <MemberSignature Language="C#" Value="public static bool HasExtension (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasExtension(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.HasExtension(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HasExtension (path As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool HasExtension(ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="F#" Value="static member HasExtension : ReadOnlySpan&lt;char&gt; -&gt; bool" Usage="System.IO.Path.HasExtension path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="ab677-499">Путь для поиска расширения.</span><span class="sxs-lookup"><span data-stu-id="ab677-499">The path to search for an extension.</span></span></param>
        <summary><span data-ttu-id="ab677-500">Определяет, включает ли путь, представленный указанным диапазоном символов, расширение имени файла.</span><span class="sxs-lookup"><span data-stu-id="ab677-500">Determines whether the path represented by the specified character span includes a file name extension.</span></span></summary>
        <returns><span data-ttu-id="ab677-501">Значение <see langword="true" />, если символы, следующие за последним символом разделителя каталогов или за разделителем томов (:) в пути, включают точку (.), за которой следует один или несколько символов. В противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-501"><see langword="true" /> if the characters that follow the last directory separator character or volume separator in the path include a period (".") followed by one or more characters; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="ab677-502">Точку в `path` не следует рассматривать как дополнение.</span><span class="sxs-lookup"><span data-stu-id="ab677-502">A trailing period in `path` is not considered an extension.</span></span>

         ]]></format>
        </remarks>
        <related type="article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="ab677-503">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="ab677-503">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HasExtension">
      <MemberSignature Language="C#" Value="public static bool HasExtension (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasExtension(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.HasExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HasExtension (path As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool HasExtension(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member HasExtension : string -&gt; bool" Usage="System.IO.Path.HasExtension path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="ab677-504">Путь для поиска расширения.</span><span class="sxs-lookup"><span data-stu-id="ab677-504">The path to search for an extension.</span></span></param>
        <summary><span data-ttu-id="ab677-505">Определяет, включает ли путь расширение имени файла.</span><span class="sxs-lookup"><span data-stu-id="ab677-505">Determines whether a path includes a file name extension.</span></span></summary>
        <returns><span data-ttu-id="ab677-506">Значение <see langword="true" />, если знаки, следующие за последним разделителем каталога (\\\ или /) или разделителем тома (:) в пути, включают точку (.), за которой следует один или несколько символов. В противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-506"><see langword="true" /> if the characters that follow the last directory separator (\\\ or /) or volume separator (:) in the path include a period (.) followed by one or more characters; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab677-507">Начиная с конца `path`, этот метод осуществляет поиск точка (.), за которым следует по крайней мере один символ.</span><span class="sxs-lookup"><span data-stu-id="ab677-507">Starting from the end of `path`, this method searches for a period (.) followed by at least one character.</span></span> <span data-ttu-id="ab677-508">Если этот шаблон можно найти перед <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, или <xref:System.IO.Path.VolumeSeparatorChar> встречается символ, этот метод возвращает `true`.</span><span class="sxs-lookup"><span data-stu-id="ab677-508">If this pattern is found before a <xref:System.IO.Path.DirectorySeparatorChar>, <xref:System.IO.Path.AltDirectorySeparatorChar>, or <xref:System.IO.Path.VolumeSeparatorChar> character is encountered, this method returns `true`.</span></span>  
  
 <span data-ttu-id="ab677-509">Список задач ввода-вывода, см. в разделе [распространенные задачи ввода-вывода](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="ab677-509">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab677-510">В следующем примере иллюстрируется использование метода `HasExtension`.</span><span class="sxs-lookup"><span data-stu-id="ab677-510">The following example demonstrates the use of the `HasExtension` method.</span></span>  
  
 [!code-cpp[System.IO.Path Members#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#11)]
 [!code-csharp[System.IO.Path Members#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#11)]
 [!code-vb[System.IO.Path Members#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ab677-511"><paramref name="path" /> содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-511"><paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></exception>
        <related type="article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="ab677-512">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="ab677-512">File path formats on Windows systems</span></span></related>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ab677-513">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="ab677-513">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ab677-514">Практическое руководство. Чтение текста из файла</span><span class="sxs-lookup"><span data-stu-id="ab677-514">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ab677-515">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="ab677-515">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InvalidPathChars">
      <MemberSignature Language="C#" Value="public static readonly char[] InvalidPathChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly char[] InvalidPathChars" />
      <MemberSignature Language="DocId" Value="F:System.IO.Path.InvalidPathChars" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InvalidPathChars As Char() " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly cli::array &lt;char&gt; ^ InvalidPathChars;" />
      <MemberSignature Language="F#" Value=" staticval mutable InvalidPathChars : char[]" Usage="System.IO.Path.InvalidPathChars" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("see GetInvalidPathChars and GetInvalidFileNameChars methods.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Please use GetInvalidPathChars or GetInvalidFileNameChars instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab677-516">Предоставляет массив символов, задаваемых платформой, которые не могут быть указаны в аргументах строки пути, передаваемых в элементы класса <see cref="T:System.IO.Path" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-516">Provides a platform-specific array of characters that cannot be specified in path string arguments passed to members of the <see cref="T:System.IO.Path" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab677-517">Массив, возвращаемый этим методом, не обязательно содержит полный набор символов, недопустимых в именах файлов и каталогов.</span><span class="sxs-lookup"><span data-stu-id="ab677-517">The array returned from this method is not guaranteed to contain the complete set of characters that are invalid in file and directory names.</span></span> <span data-ttu-id="ab677-518">Полный набор недопустимых символов может изменяться файловой системой.</span><span class="sxs-lookup"><span data-stu-id="ab677-518">The full set of invalid characters can vary by file system.</span></span> <span data-ttu-id="ab677-519">Например, на настольных системах, работающих в Windows, недопустимых символов пути может содержать символы ASCII/Юникода 1 до 31, а также заключения в кавычки ("«), меньше (\<), больше (>), канал (&#124;), символ backspace (\b), значение null (\0) и табуляции (\t).</span><span class="sxs-lookup"><span data-stu-id="ab677-519">For example, on Windows-based desktop platforms, invalid path characters might include ASCII/Unicode characters 1 through 31, as well as quote ("), less than (\<), greater than (>), pipe (&#124;), backspace (\b), null (\0) and tab (\t).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ab677-520">Не используйте <xref:System.IO.Path.InvalidPathChars> Если вы считаете, что ваш код может выполняться в одном домене приложения с ненадежным кодом.</span><span class="sxs-lookup"><span data-stu-id="ab677-520">Do not use <xref:System.IO.Path.InvalidPathChars> if you think your code might execute in the same application domain as untrusted code.</span></span> <span data-ttu-id="ab677-521"><xref:System.IO.Path.InvalidPathChars> представляет собой массив, поэтому его элементов могут быть перезаписаны.</span><span class="sxs-lookup"><span data-stu-id="ab677-521"><xref:System.IO.Path.InvalidPathChars> is an array, so its elements can be overwritten.</span></span> <span data-ttu-id="ab677-522">Если код без доверия перезаписывает элементы <xref:System.IO.Path.InvalidPathChars>, это может привести к кода к неправильной работе одним из способов, которыми могут воспользоваться злоумышленники.</span><span class="sxs-lookup"><span data-stu-id="ab677-522">If untrusted code overwrites elements of <xref:System.IO.Path.InvalidPathChars>, it might cause your code to malfunction in ways that could be exploited.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab677-523">В следующем примере показано использование `InvalidPathChars` свойство.</span><span class="sxs-lookup"><span data-stu-id="ab677-523">The following example demonstrates the use of the `InvalidPathChars` property.</span></span>  
  
 [!code-cpp[System.IO.Path Members#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#13)]
 [!code-csharp[System.IO.Path Members#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#13)]
 [!code-vb[System.IO.Path Members#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#13)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ab677-524">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="ab677-524">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ab677-525">Практическое руководство. Чтение текста из файла</span><span class="sxs-lookup"><span data-stu-id="ab677-525">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ab677-526">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="ab677-526">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsPathFullyQualified">
      <Docs>
        <summary><span data-ttu-id="ab677-527">Возвращает значение, которое показывает, является ли путь к файлу полным.</span><span class="sxs-lookup"><span data-stu-id="ab677-527">Returns a value that indicates whether a file path is fully qualified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
 
## Remarks  

<span data-ttu-id="ab677-528">Перегрузки `IsPathFullyQualified` пути дескриптор метода, которые используются оба <xref:System.IO.Path.DirectorySeparatorChar> и <xref:System.IO.Path.AltDirectorySeparatorChar> символов.</span><span class="sxs-lookup"><span data-stu-id="ab677-528">The overloads of the `IsPathFullyQualified` method handle paths that use both the <xref:System.IO.Path.DirectorySeparatorChar> and the <xref:System.IO.Path.AltDirectorySeparatorChar> characters.</span></span> <span data-ttu-id="ab677-529">Он не выполняет никакой проверки по пути, который передается в него в качестве аргумента.</span><span class="sxs-lookup"><span data-stu-id="ab677-529">It does not perform any validation on the path that is passed to it as an argument.</span></span> <span data-ttu-id="ab677-530">Таким образом, интерпретируются как относительные пути URI и возвращать `false`.</span><span class="sxs-lookup"><span data-stu-id="ab677-530">As a result, URIs are interpreted as relative paths and return `false`.</span></span> 

<span data-ttu-id="ab677-531">Есть разница между полный URL-адрес (как указано в `IsPathFullyQualified` метод) и корневой путь (как указано в <xref:System.IO.Path.IsPathRooted%2A> метод).</span><span class="sxs-lookup"><span data-stu-id="ab677-531">There is a difference between a fully qualified path (as indicated by the `IsPathFullyQualified` method) and a rooted path (as indicated by the <xref:System.IO.Path.IsPathRooted%2A> method).</span></span> <span data-ttu-id="ab677-532">Объект *полный путь* или *абсолютный путь* всегда определяет точный путь из определенного диска или устройства, для целевого файла или каталога, а не зависит от текущего диска или текущего каталога.</span><span class="sxs-lookup"><span data-stu-id="ab677-532">A *fully qualified path* or *absolute path* always defines an exact path from a particular drive or device to a target file or directory, and does not depend on the current drive or current directory.</span></span> <span data-ttu-id="ab677-533">Например, в системах Windows *C:/users/user1/documents/reports/2019/january/highlights.pdf* определяет абсолютный путь из корневого каталога диска C: в целевой файл *highlights.pdf*.</span><span class="sxs-lookup"><span data-stu-id="ab677-533">For example, on Windows systems, *C:/users/user1/documents/reports/2019/january/highlights.pdf* defines an absolute path from the root of the C: drive to the target file, *highlights.pdf*.</span></span> <span data-ttu-id="ab677-534">Объект *корневой путь* указывает начальный диск или корневой каталог, но зависит текущий каталог (если он является корнем которого является указанный диск) или текущего диска (если он является корнем которого является корневой каталог).</span><span class="sxs-lookup"><span data-stu-id="ab677-534">A *rooted path* specifies either a starting drive or root directory, but depends on either the current directory (if it is rooted by a specified drive) or the current drive (if it is rooted by the root directory).</span></span> <span data-ttu-id="ab677-535">В следующем примере показано различие между полные пути и пути с административным доступом.</span><span class="sxs-lookup"><span data-stu-id="ab677-535">The following example illustrates the difference between fully qualified paths and rooted paths.</span></span>

[!code-csharp[IsPathRooted](~/samples/snippets/csharp/api/system.IO/Path/IsPathRooted/program.cs)]
[!code-vb[IsPathRooted](~/samples/snippets/visualbasic/api/system.IO/Path/IsPathRooted/program.vb)]

         ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsPathFullyQualified">
      <MemberSignature Language="C#" Value="public static bool IsPathFullyQualified (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPathFullyQualified(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.IsPathFullyQualified(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPathFullyQualified (path As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPathFullyQualified(ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="F#" Value="static member IsPathFullyQualified : ReadOnlySpan&lt;char&gt; -&gt; bool" Usage="System.IO.Path.IsPathFullyQualified path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="ab677-536">Путь к файлу.</span><span class="sxs-lookup"><span data-stu-id="ab677-536">A file path.</span></span></param>
        <summary><span data-ttu-id="ab677-537">Возвращает значение, которое показывает, является ли путь к файлу, представленный указанным диапазоном символов, фиксированным для определенного диска или UNC-пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-537">Returns a value that indicates whether the file path represented by the specified character span is fixed to a specific drive or UNC path.</span></span></summary>
        <returns><span data-ttu-id="ab677-538">Значение <see langword="true" />, если путь привязан к определенному диску или UNC-пути; <see langword="false" /> — если путь задается относительно текущего диска или рабочей папки.</span><span class="sxs-lookup"><span data-stu-id="ab677-538"><see langword="true" /> if the path is fixed to a specific drive or UNC path; <see langword="false" /> if the path is relative to the current drive or working directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  


         ]]></format>
        </remarks>
        <related type="article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="ab677-539">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="ab677-539">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsPathFullyQualified">
      <MemberSignature Language="C#" Value="public static bool IsPathFullyQualified (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPathFullyQualified(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.IsPathFullyQualified(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPathFullyQualified (path As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPathFullyQualified(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member IsPathFullyQualified : string -&gt; bool" Usage="System.IO.Path.IsPathFullyQualified path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="ab677-540">Путь к файлу.</span><span class="sxs-lookup"><span data-stu-id="ab677-540">A file path.</span></span></param>
        <summary><span data-ttu-id="ab677-541">Возвращает значение, которое показывает, является ли указанный путь к файлу фиксированным для определенного диска или UNC-пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-541">Returns a value that indicates whether the specified file path is fixed to a specific drive or UNC path.</span></span></summary>
        <returns><span data-ttu-id="ab677-542">Значение <see langword="true" />, если путь привязан к определенному диску или UNC-пути; <see langword="false" /> — если путь задается относительно текущего диска или рабочей папки.</span><span class="sxs-lookup"><span data-stu-id="ab677-542"><see langword="true" /> if the path is fixed to a specific drive or UNC path; <see langword="false" /> if the path is relative to the current drive or working directory.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ab677-543">Свойство <paramref name="path" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-543"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <related type="article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="ab677-544">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="ab677-544">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsPathRooted">
      <Docs>
        <summary><span data-ttu-id="ab677-545">Возвращает значение, показывающее, содержит ли путь к файлу корневую папку.</span><span class="sxs-lookup"><span data-stu-id="ab677-545">Returns a value that indicates whether a file path contains a root.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
 
## Remarks  

<span data-ttu-id="ab677-546">Объект **корневой путь** — путь к файлу, является фиксированным для конкретного диска или пути UNIC; они отличаются от пути относительно текущего диска или рабочий каталог.</span><span class="sxs-lookup"><span data-stu-id="ab677-546">A **rooted path** is file path that is fixed to a specific drive or UNIC path; it contrasts with a path that is relative to the current drive or working directory.</span></span> <span data-ttu-id="ab677-547">Например в системах Windows, корневой путь начинается с обратной косой чертой (например, «\Documents») или букву диска и двоеточия (например, «C:Documents»).</span><span class="sxs-lookup"><span data-stu-id="ab677-547">For example, on Windows systems, a rooted path begins with a backslash (for example, "\Documents") or a drive letter and colon (for example, "C:Documents").</span></span> 

<span data-ttu-id="ab677-548">Обратите внимание, что с административным доступом пути может быть абсолютное (который полное имя) или относительный.</span><span class="sxs-lookup"><span data-stu-id="ab677-548">Note that rooted paths can be either absolute (that is, fully qualified) or relative.</span></span> <span data-ttu-id="ab677-549">Абсолютный путь относительно корня представляет полный путь от корня диска в определенный каталог.</span><span class="sxs-lookup"><span data-stu-id="ab677-549">An absolute rooted path is a fully qualified path from the root of a drive to a specific directory.</span></span> <span data-ttu-id="ab677-550">Относительный путь с административным доступом определяет диск, но его полный путь разрешается относительно текущего каталога.</span><span class="sxs-lookup"><span data-stu-id="ab677-550">A relative rooted path specifies a drive, but its fully qualified path is resolved against the current directory.</span></span> <span data-ttu-id="ab677-551">В следующем примере демонстрируется это различие.</span><span class="sxs-lookup"><span data-stu-id="ab677-551">The following example illustrates the difference.</span></span>

[!code-csharp[IsPathRooted](~/samples/snippets/csharp/api/system.IO/Path/IsPathRooted/program.cs)]
[!code-vb[IsPathRooted](~/samples/snippets/visualbasic/api/system.IO/Path/IsPathRooted/program.vb)]

         ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsPathRooted">
      <MemberSignature Language="C#" Value="public static bool IsPathRooted (ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPathRooted(valuetype System.ReadOnlySpan`1&lt;char&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.IsPathRooted(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPathRooted (path As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPathRooted(ReadOnlySpan&lt;char&gt; path);" />
      <MemberSignature Language="F#" Value="static member IsPathRooted : ReadOnlySpan&lt;char&gt; -&gt; bool" Usage="System.IO.Path.IsPathRooted path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="ab677-552">Проверяемый путь.</span><span class="sxs-lookup"><span data-stu-id="ab677-552">The path to test.</span></span></param>
        <summary><span data-ttu-id="ab677-553">Возвращает значение, которое показывает, содержит ли указанный диапазон символов, являющийся путем к файлу, корневую папку.</span><span class="sxs-lookup"><span data-stu-id="ab677-553">Returns a value that indicates whether the specified character span that represents a file path contains a root.</span></span></summary>
        <returns><span data-ttu-id="ab677-554">Значение <see langword="true" />, если параметр <paramref name="path" /> содержит корневую папку; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-554"><see langword="true" /> if <paramref name="path" /> contains a root; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="ab677-555">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="ab677-555">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsPathRooted">
      <MemberSignature Language="C#" Value="public static bool IsPathRooted (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPathRooted(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.IsPathRooted(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPathRooted (path As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPathRooted(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member IsPathRooted : string -&gt; bool" Usage="System.IO.Path.IsPathRooted path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="ab677-556">Проверяемый путь.</span><span class="sxs-lookup"><span data-stu-id="ab677-556">The path to test.</span></span></param>
        <summary><span data-ttu-id="ab677-557">Возвращает значение, показывающее, содержит ли указанная строка пути корневую папку.</span><span class="sxs-lookup"><span data-stu-id="ab677-557">Returns a value indicating whether the specified path string contains a root.</span></span></summary>
        <returns><span data-ttu-id="ab677-558">Значение <see langword="true" />, если параметр <paramref name="path" /> содержит корневую папку; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-558"><see langword="true" /> if <paramref name="path" /> contains a root; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab677-559"><xref:System.IO.Path.IsPathRooted%2A> Возвращает `true` Если первый символ является символом разделителя каталогов такие как "\\«, или если путь начинается с буквы диска и двоеточия (:).</span><span class="sxs-lookup"><span data-stu-id="ab677-559">The <xref:System.IO.Path.IsPathRooted%2A> method returns `true` if the first character is a directory separator character such as "\\", or if the path starts with a drive letter and colon (:).</span></span> <span data-ttu-id="ab677-560">Например, он возвращает `true` для `path` строки, такие как "\\\MyDir\\\MyFile.txt», «C:\\\MyDir», или «C:MyDir».</span><span class="sxs-lookup"><span data-stu-id="ab677-560">For example, it returns `true` for `path` strings such as "\\\MyDir\\\MyFile.txt", "C:\\\MyDir", or "C:MyDir".</span></span> <span data-ttu-id="ab677-561">Он возвращает `false` для `path` строк, таких как «MyDir».</span><span class="sxs-lookup"><span data-stu-id="ab677-561">It returns `false` for `path` strings such as "MyDir".</span></span>  
  
 <span data-ttu-id="ab677-562">Этот метод проверяет существование путь или имя файла.</span><span class="sxs-lookup"><span data-stu-id="ab677-562">This method does not verify that the path or file name exists.</span></span>  
  
 <span data-ttu-id="ab677-563">Список задач ввода-вывода, см. в разделе [распространенные задачи ввода-вывода](~/docs/standard/io/common-i-o-tasks.md).</span><span class="sxs-lookup"><span data-stu-id="ab677-563">For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).</span></span>  

## Examples  
 <span data-ttu-id="ab677-564">В следующем примере показано, как `IsPathRooted` метод может использоваться для тестирования три строки.</span><span class="sxs-lookup"><span data-stu-id="ab677-564">The following example demonstrates how the `IsPathRooted` method can be used to test three strings.</span></span>  
  
 [!code-cpp[System.IO.Path Members#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#12)]
 [!code-csharp[System.IO.Path Members#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#12)]
 [!code-vb[System.IO.Path Members#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ab677-565"><paramref name="path" /> содержит один или несколько недопустимых символов, определенных в <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-565"><paramref name="path" /> contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars" />.</span></span></exception>
        <related type="article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="ab677-566">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="ab677-566">File path formats on Windows systems</span></span></related>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ab677-567">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="ab677-567">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ab677-568">Практическое руководство. Чтение текста из файла</span><span class="sxs-lookup"><span data-stu-id="ab677-568">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ab677-569">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="ab677-569">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(valuetype System.ReadOnlySpan`1&lt;char&gt; path1, valuetype System.ReadOnlySpan`1&lt;char&gt; path2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Join(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (path1 As ReadOnlySpan(Of Char), path2 As ReadOnlySpan(Of Char)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2);" />
      <MemberSignature Language="F#" Value="static member Join : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; -&gt; string" Usage="System.IO.Path.Join (path1, path2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="path2" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path1"><span data-ttu-id="ab677-570">Диапазон символов, содержащий первый путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="ab677-570">A character span that contains the first path to join.</span></span></param>
        <param name="path2"><span data-ttu-id="ab677-571">Диапазон символов, содержащий второй путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="ab677-571">A character span that contains the second path to join.</span></span></param>
        <summary><span data-ttu-id="ab677-572">Сцепляет два компонента пути в один путь.</span><span class="sxs-lookup"><span data-stu-id="ab677-572">Concatenates two path components into a single path.</span></span></summary>
        <returns><span data-ttu-id="ab677-573">Объединенные пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-573">The combined paths.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
<span data-ttu-id="ab677-574">Этот метод просто объединяет `path` и `path2` и добавляет символом разделителя каталогов между компонентами два пути, если он еще не присутствует в конце `path1` или в начале `path2`.</span><span class="sxs-lookup"><span data-stu-id="ab677-574">This method simply concatenates `path` and `path2` and adds a directory separator character between the two path components if one is not already present at the end of `path1` or the beginning of `path2`.</span></span> <span data-ttu-id="ab677-575">Если <xref:System.ReadOnlySpan%601.Length> либо `path1` или `path2` равно нулю, метод возвращает другой путь.</span><span class="sxs-lookup"><span data-stu-id="ab677-575">If the <xref:System.ReadOnlySpan%601.Length> of either `path1` or `path2` is zero, the method returns the other path.</span></span> <span data-ttu-id="ab677-576">Если <xref:System.ReadOnlySpan%601.Length> обоих `path1` и `path2` равен нулю, метод возвращает <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ab677-576">If the <xref:System.ReadOnlySpan%601.Length> of both `path1` and `path2` is zero, the method returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> 

<span data-ttu-id="ab677-577">Если `path1` заканчивается на символа разделителя пути, который не подходит для целевой платформы, `Join` метод сохраняет исходного символа разделителя пути и добавляет поддерживается.</span><span class="sxs-lookup"><span data-stu-id="ab677-577">If `path1` ends in a path separator character that is not appropriate for the target platform, the `Join` method preserves the original path separator character and appends the supported one.</span></span> <span data-ttu-id="ab677-578">Эта проблема возникает в жестко закодированные пути, использующие Windows обратную косую черту (»\") символ, который не распознается в качестве разделителя пути в системах на основе Unix.</span><span class="sxs-lookup"><span data-stu-id="ab677-578">This issue arises in hard-coded paths that use the Windows backslash ("\") character, which is not recognized as a path separator on Unix-based systems.</span></span> <span data-ttu-id="ab677-579">Чтобы обойти эту проблему, вы можете:</span><span class="sxs-lookup"><span data-stu-id="ab677-579">To work around this issue, you can:</span></span>

- <span data-ttu-id="ab677-580">Извлечение значений <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> свойства, а не жестко заданный символом разделителя каталогов.</span><span class="sxs-lookup"><span data-stu-id="ab677-580">Retrieve the value of the <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> property rather than hard-coding a directory separator character.</span></span>

- <span data-ttu-id="ab677-581">Используйте косой черты («/») в качестве символом разделителя каталогов.</span><span class="sxs-lookup"><span data-stu-id="ab677-581">Use a forward slash ("/") as the directory separator character.</span></span> <span data-ttu-id="ab677-582">Этот символ возвращается <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> свойство на системе UNIX и <xref:System.IO.Path.AltDirectorySeparatorChar?displayProperty=nameWithType> свойство в системах Windows.</span><span class="sxs-lookup"><span data-stu-id="ab677-582">This character is returned by the <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> property on Unix-based systems and by the <xref:System.IO.Path.AltDirectorySeparatorChar?displayProperty=nameWithType> property on Windows systems.</span></span> 

<span data-ttu-id="ab677-583">В отличие от <xref:System.IO.Path.Combine%2A> метод, <xref:System.IO.Path.Join%2A> метод не пытается корневой возвращенный путь.</span><span class="sxs-lookup"><span data-stu-id="ab677-583">Unlike the <xref:System.IO.Path.Combine%2A> method, the <xref:System.IO.Path.Join%2A> method does not attempt to root the returned path.</span></span> <span data-ttu-id="ab677-584">(То есть, в том случае, если `path2` является абсолютным, `Join` метод не удаляет `path1` и вернуть `path2` как <xref:System.IO.Path.Combine%2A> делает метод.) В следующем примере показано различие в путях, возвращаемые методами два.</span><span class="sxs-lookup"><span data-stu-id="ab677-584">(That is, if `path2` is an absolute path, the `Join` method does not discard `path1` and return `path2` as the <xref:System.IO.Path.Combine%2A> method does.) The following example illustrates the difference in the paths returned by the two methods.</span></span> <span data-ttu-id="ab677-585">Если источник `path2` являются входными данными пользователя, <xref:System.IO.Path.Combine%2A> метод позволяет пользователю получить доступ к ресурса файловой системы (такие как *C: ипользователей/User1/документы/финансовыми/* в случае примера), были приложения не требуется сделать доступным.</span><span class="sxs-lookup"><span data-stu-id="ab677-585">If the source of `path2` is user input, the <xref:System.IO.Path.Combine%2A> method makes it possible for a user to access a file system resource (such as *C:/Users/User1/Documents/Financial/* in the case of the example) that the application did not intend to make accessible.</span></span>  

<span data-ttu-id="ab677-586">Не все символы, недопустимые для имен каталогов и файлов, которые интерпретируются как недопустимые `Join` метод, поскольку эти символы можно использовать для поиска подстановочные знаки.</span><span class="sxs-lookup"><span data-stu-id="ab677-586">Not all invalid characters for directory and file names are interpreted as unacceptable by the `Join` method, because you can use these characters for search wildcard characters.</span></span> <span data-ttu-id="ab677-587">Например, хотя `Path.Join("c:\\", "*.txt")` может быть недопустимым when создается файл, он может использоваться как строку поиска.</span><span class="sxs-lookup"><span data-stu-id="ab677-587">For example, while `Path.Join("c:\\", "*.txt")` might be invalid when creating a file, it is valid as a search string.</span></span> <span data-ttu-id="ab677-588">`Join` Метод таким образом успешно интерпретирует его.</span><span class="sxs-lookup"><span data-stu-id="ab677-588">The `Join` method therefore successfully interprets it.</span></span> 

## <a name="example"></a><span data-ttu-id="ab677-589">Пример</span><span class="sxs-lookup"><span data-stu-id="ab677-589">Example</span></span>

<span data-ttu-id="ab677-590">В следующем примере показано различие в путях, возвращенный <xref:System.IO.Path.Join(System.ReadOnlySpan%7BSystem.Char%7D,System.ReadOnlySpan%7BSystem.Char%7D)?displayProperty=nameWithType> и <xref:System.IO.Path.Combine(System.String,System.String)?displayProperty=nameWithType> методы.</span><span class="sxs-lookup"><span data-stu-id="ab677-590">The following example illustrates the difference in the paths returned by the <xref:System.IO.Path.Join(System.ReadOnlySpan%7BSystem.Char%7D,System.ReadOnlySpan%7BSystem.Char%7D)?displayProperty=nameWithType> and <xref:System.IO.Path.Combine(System.String,System.String)?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="ab677-591">Если первая строка — полный путь, который включает диск и корневой каталог, а второй — относительный путь из первого пути, два метода давать одинаковые результаты.</span><span class="sxs-lookup"><span data-stu-id="ab677-591">When the first string is an fully qualified path that includes a drive and root directory and the second is a relative path from the first path, the two methods produce identical results.</span></span> <span data-ttu-id="ab677-592">Во второй и третий вызовах `ShowPathInformation` метод, расходятся строк, возвращаемых два метода.</span><span class="sxs-lookup"><span data-stu-id="ab677-592">In the second and third calls to the `ShowPathInformation` method, the strings returned by the two methods diverge.</span></span> <span data-ttu-id="ab677-593">Во втором вызове метода, первая строка аргумента — это диск, второй — корневой каталог.</span><span class="sxs-lookup"><span data-stu-id="ab677-593">In the second method call, the first string argument is a drive, while the second is a rooted directory.</span></span> <span data-ttu-id="ab677-594">`Join` Метод объединяет две строки и сохраняет повторяющиеся разделители путей.</span><span class="sxs-lookup"><span data-stu-id="ab677-594">The `Join` method concatenates the two strings and preserves duplicate path separators.</span></span> <span data-ttu-id="ab677-595">`Combine` Метод отказывается от диска и возвращает корневой каталог на текущем диске.</span><span class="sxs-lookup"><span data-stu-id="ab677-595">The `Combine` method abandons the drive and returns a rooted directory on the current drive.</span></span> <span data-ttu-id="ab677-596">Если текущее приложение диск — C:\ и строка используется для доступа к файла или файлов в каталоге, он может получить доступ к C: вместо D:.</span><span class="sxs-lookup"><span data-stu-id="ab677-596">If the application's current drive is C:\ and the string is used to access a file or files in the directory, it would access C: instead of D:.</span></span> <span data-ttu-id="ab677-597">Наконец так как оба аргумента в третьем вызове для `ShowPathInformation` являются корневыми, `Join` метод просто добавляет их для создания пути к файлу бессмысленные, тогда как `Combine` метод отклоняет первой строки и возвращает второй.</span><span class="sxs-lookup"><span data-stu-id="ab677-597">Finally, because both arguments in the third call to `ShowPathInformation` are rooted, the `Join` method simply appends them to create a nonsensical file path, while the `Combine` method discards the first string and returns the second.</span></span> <span data-ttu-id="ab677-598">С помощью этой строки, для доступа к файлам может предоставить приложение непредусмотренного доступа к конфиденциальным файлам.</span><span class="sxs-lookup"><span data-stu-id="ab677-598">Using this string for file access could give the application unintended access to sensitive files.</span></span>  

[!code-csharp[Path.Join(String,String)](~/samples/snippets/csharp/api/system.io/path/combine2/program.cs)]
[!code-csharp[Path.Join(String,String)](~/samples/snippets/visualbasic/api/system.io/path/combine2/program.vb)]


       ]]></format>
        </remarks>
        <related type="article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="ab677-599">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="ab677-599">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (string path1, string path2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(string path1, string path2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Join(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (path1 As String, path2 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(System::String ^ path1, System::String ^ path2);" />
      <MemberSignature Language="F#" Value="static member Join : string * string -&gt; string" Usage="System.IO.Path.Join (path1, path2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="path2" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="path1">To be added.</param>
        <param name="path2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, ReadOnlySpan&lt;char&gt; path3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(valuetype System.ReadOnlySpan`1&lt;char&gt; path1, valuetype System.ReadOnlySpan`1&lt;char&gt; path2, valuetype System.ReadOnlySpan`1&lt;char&gt; path3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Join(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (path1 As ReadOnlySpan(Of Char), path2 As ReadOnlySpan(Of Char), path3 As ReadOnlySpan(Of Char)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, ReadOnlySpan&lt;char&gt; path3);" />
      <MemberSignature Language="F#" Value="static member Join : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; -&gt; string" Usage="System.IO.Path.Join (path1, path2, path3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="path2" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="path3" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path1"><span data-ttu-id="ab677-600">Диапазон символов, содержащий первый путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="ab677-600">A character span that contains the first path to join.</span></span></param>
        <param name="path2"><span data-ttu-id="ab677-601">Диапазон символов, содержащий второй путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="ab677-601">A character span that contains the second path to join.</span></span></param>
        <param name="path3"><span data-ttu-id="ab677-602">Диапазон символов, содержащий третий путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="ab677-602">A character span that contains the third path to join.</span></span></param>
        <summary><span data-ttu-id="ab677-603">Сцепляет три компонента пути в один путь.</span><span class="sxs-lookup"><span data-stu-id="ab677-603">Concatenates three path components into a single path.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
<span data-ttu-id="ab677-604">Этот метод просто объединяет `path`, `path2`, и `path3` и добавляет символом разделителя каталогов между всеми компоненты пути, если он еще не существует.</span><span class="sxs-lookup"><span data-stu-id="ab677-604">This method simply concatenates `path`, `path2`, and `path3` and adds a directory separator character between any of the path components if one is not already present.</span></span> <span data-ttu-id="ab677-605">Если <xref:System.ReadOnlySpan%601.Length> любого из `path1`, `path2`, или `path3` равно нулю, этот метод объединяет оставшиеся аргументы.</span><span class="sxs-lookup"><span data-stu-id="ab677-605">If the <xref:System.ReadOnlySpan%601.Length> of any of `path1`, `path2`, or `path3` argument is zero, the method concatenates the remaining arguments.</span></span> <span data-ttu-id="ab677-606">Если <xref:System.ReadOnlySpan%601.Length?displayProperty=nameWithType> всех компонентов равно нулю, метод возвращает <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ab677-606">If the <xref:System.ReadOnlySpan%601.Length?displayProperty=nameWithType> of all components is zero, the method returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>    

<span data-ttu-id="ab677-607">Если `path1` или `path2` заканчивается на символа разделителя пути, который не подходит для целевой платформы, `Join` метод сохраняет исходного символа разделителя пути и добавляет поддерживается.</span><span class="sxs-lookup"><span data-stu-id="ab677-607">If `path1` or `path2` ends in a path separator character that is not appropriate for the target platform, the `Join` method preserves the original path separator character and appends the supported one.</span></span> <span data-ttu-id="ab677-608">Эта проблема возникает в жестко закодированные пути, использующие Windows обратную косую черту (»\") символ, который не распознается в качестве разделителя пути в системах на основе Unix.</span><span class="sxs-lookup"><span data-stu-id="ab677-608">This issue arises in hard-coded paths that use the Windows backslash ("\") character, which is not recognized as a path separator on Unix-based systems.</span></span> <span data-ttu-id="ab677-609">Чтобы обойти эту проблему, вы можете:</span><span class="sxs-lookup"><span data-stu-id="ab677-609">To work around this issue, you can:</span></span>

- <span data-ttu-id="ab677-610">Извлечение значений <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> свойства, а не жестко заданный символом разделителя каталогов.</span><span class="sxs-lookup"><span data-stu-id="ab677-610">Retrieve the value of the <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> property rather than hard-coding a directory separator character.</span></span>

- <span data-ttu-id="ab677-611">Используйте косой черты («/») в качестве символом разделителя каталогов.</span><span class="sxs-lookup"><span data-stu-id="ab677-611">Use a forward slash ("/") as the directory separator character.</span></span> <span data-ttu-id="ab677-612">Этот символ возвращается <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> свойство на системе UNIX и <xref:System.IO.Path.AltDirectorySeparatorChar?displayProperty=nameWithType> свойство в системах Windows.</span><span class="sxs-lookup"><span data-stu-id="ab677-612">This character is returned by the <xref:System.IO.Path.DirectorySeparatorChar?displayProperty=nameWithType> property on Unix-based systems and by the <xref:System.IO.Path.AltDirectorySeparatorChar?displayProperty=nameWithType> property on Windows systems.</span></span> 

<span data-ttu-id="ab677-613">В отличие от <xref:System.IO.Path.Combine%2A> метод, <xref:System.IO.Path.Join%2A> метод не пытается корневой возвращенный путь.</span><span class="sxs-lookup"><span data-stu-id="ab677-613">Unlike the <xref:System.IO.Path.Combine%2A> method, the <xref:System.IO.Path.Join%2A> method does not attempt to root the returned path.</span></span> <span data-ttu-id="ab677-614">(То есть, в том случае, если `path2` или `path2` является абсолютным, `Join` метод не приводит к потере предыдущего пути как <xref:System.IO.Path.Combine%2A> делает метод.</span><span class="sxs-lookup"><span data-stu-id="ab677-614">(That is, if `path2` or `path2` is an absolute path, the `Join` method does not discard the previous paths as the <xref:System.IO.Path.Combine%2A> method does.</span></span>  
  
<span data-ttu-id="ab677-615">Не все символы, недопустимые для имен каталогов и файлов, которые интерпретируются как недопустимые `Join` метод, поскольку эти символы можно использовать для поиска подстановочные знаки.</span><span class="sxs-lookup"><span data-stu-id="ab677-615">Not all invalid characters for directory and file names are interpreted as unacceptable by the `Join` method, because you can use these characters for search wildcard characters.</span></span> <span data-ttu-id="ab677-616">Например, хотя `Path.Join("c:\\", "temp", "*.txt")` может быть недопустимым when создается файл, он может использоваться как строку поиска.</span><span class="sxs-lookup"><span data-stu-id="ab677-616">For example, while `Path.Join("c:\\", "temp", "*.txt")` might be invalid when creating a file, it is valid as a search string.</span></span> <span data-ttu-id="ab677-617">`Join` Метод таким образом успешно интерпретирует его.</span><span class="sxs-lookup"><span data-stu-id="ab677-617">The `Join` method therefore successfully interprets it.</span></span> 

## <a name="example"></a><span data-ttu-id="ab677-618">Пример</span><span class="sxs-lookup"><span data-stu-id="ab677-618">Example</span></span>

<span data-ttu-id="ab677-619">В следующем примере показано различие в путях, возвращенный <xref:System.IO.Path.Join(System.ReadOnlySpan%7BSystem.Char%7D,System.ReadOnlySpan%7BSystem.Char%7D,System.ReadOnlySpan%7BSystem.Char%7D)?displayProperty=nameWithType> и <xref:System.IO.Path.Combine(System.String,System.String,System.String)?displayProperty=nameWithType> методы.</span><span class="sxs-lookup"><span data-stu-id="ab677-619">The following example illustrates the difference in the paths returned by the <xref:System.IO.Path.Join(System.ReadOnlySpan%7BSystem.Char%7D,System.ReadOnlySpan%7BSystem.Char%7D,System.ReadOnlySpan%7BSystem.Char%7D)?displayProperty=nameWithType> and <xref:System.IO.Path.Combine(System.String,System.String,System.String)?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="ab677-620">Если первая строка — полный путь, который включает диск и корневой каталог, а второй — относительный путь из первого пути, два метода давать одинаковые результаты.</span><span class="sxs-lookup"><span data-stu-id="ab677-620">When the first string is an fully qualified path that includes a drive and root directory and the second is a relative path from the first path, the two methods produce identical results.</span></span> <span data-ttu-id="ab677-621">Во второй и третий вызовах `ShowPathInformation` метод, расходятся строк, возвращаемых два метода.</span><span class="sxs-lookup"><span data-stu-id="ab677-621">In the second and third calls to the `ShowPathInformation` method, the strings returned by the two methods diverge.</span></span> <span data-ttu-id="ab677-622">Во втором вызове метода, первая строка аргумента — это диск, второй — корневой каталог.</span><span class="sxs-lookup"><span data-stu-id="ab677-622">In the second method call, the first string argument is a drive, while the second is a rooted directory.</span></span> <span data-ttu-id="ab677-623">`Join` Метод объединяет две строки и сохраняет повторяющиеся разделители путей.</span><span class="sxs-lookup"><span data-stu-id="ab677-623">The `Join` method concatenates the two strings and preserves duplicate path separators.</span></span> <span data-ttu-id="ab677-624">Вызов <xref:System.IO.Path.GetFullPath%2A> метод бы исключения дублирования.</span><span class="sxs-lookup"><span data-stu-id="ab677-624">A call to the <xref:System.IO.Path.GetFullPath%2A> method would eliminate the duplication.</span></span> <span data-ttu-id="ab677-625">`Combine` Метод отказывается от диска и возвращает корневой каталог на текущем диске.</span><span class="sxs-lookup"><span data-stu-id="ab677-625">The `Combine` method abandons the drive and returns a rooted directory on the current drive.</span></span> <span data-ttu-id="ab677-626">Если текущее приложение диск — C:\ и строка используется для доступа к файла или файлов в каталоге, он может получить доступ к C: вместо D:.</span><span class="sxs-lookup"><span data-stu-id="ab677-626">If the application's current drive is C:\ and the string is used to access a file or files in the directory, it would access C: instead of D:.</span></span> <span data-ttu-id="ab677-627">Наконец так как последний аргумент в третьем вызове для `ShowPathInformation` являются корневыми, `Join` метод просто добавляет его к первые два аргумента для создания пути к файлу бессмысленные, хотя `Combine` метод отбрасывающий первые две строки и возвращает Третий.</span><span class="sxs-lookup"><span data-stu-id="ab677-627">Finally, because the final argument in the third call to `ShowPathInformation` are rooted, the `Join` method simply appends it to the first two arguments to create a nonsensical file path, while the `Combine` method discards the first two strings and returns the third.</span></span> <span data-ttu-id="ab677-628">С помощью этой строки, для доступа к файлам может предоставить приложение непредусмотренного доступа к конфиденциальным файлам.</span><span class="sxs-lookup"><span data-stu-id="ab677-628">Using this string for file access could give the application unintended access to sensitive files.</span></span>  

[!code-csharp[Path.Join(String,String,String)](~/samples/snippets/csharp/api/system.io/path/combine3/program.cs)] 
[!code-csharp[Path.Join(String,String,String)](~/samples/snippets/visualbasic/api/system.io/path/combine3/program.vb)] 

       ]]></format>
        </remarks>
        <related type="article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="ab677-629">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="ab677-629">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (string path1, string path2, string path3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(string path1, string path2, string path3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.Join(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (path1 As String, path2 As String, path3 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(System::String ^ path1, System::String ^ path2, System::String ^ path3);" />
      <MemberSignature Language="F#" Value="static member Join : string * string * string -&gt; string" Usage="System.IO.Path.Join (path1, path2, path3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="path2" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="path3" Type="System.String" Index="2" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="path1">To be added.</param>
        <param name="path2">To be added.</param>
        <param name="path3">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public static readonly char PathSeparator;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly char PathSeparator" />
      <MemberSignature Language="DocId" Value="F:System.IO.Path.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PathSeparator As Char " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly char PathSeparator;" />
      <MemberSignature Language="F#" Value=" staticval mutable PathSeparator : char" Usage="System.IO.Path.PathSeparator" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab677-630">Разделитель, задаваемый платформой, который используется в переменных среды для разделения строк пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-630">A platform-specific separator character used to separate path strings in environment variables.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab677-631">На настольных системах, работающих в Windows, значение этого поля равно точку с запятой (;) по умолчанию, но может отличаться на других платформах.</span><span class="sxs-lookup"><span data-stu-id="ab677-631">On Windows-based desktop platforms, the value of this field is the semicolon (;) by default, but might vary on other platforms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab677-632">В следующем примере показано использование `PathSeparator` поля.</span><span class="sxs-lookup"><span data-stu-id="ab677-632">The following example demonstrates the use of the `PathSeparator` field.</span></span>  
  
 [!code-cpp[System.IO.Path Members#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#13)]
 [!code-csharp[System.IO.Path Members#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#13)]
 [!code-vb[System.IO.Path Members#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#13)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ab677-633">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="ab677-633">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ab677-634">Практическое руководство. Чтение текста из файла</span><span class="sxs-lookup"><span data-stu-id="ab677-634">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ab677-635">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="ab677-635">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryJoin">
      <Docs>
        <summary><span data-ttu-id="ab677-636">Пытается сцепить отдельные компоненты пути в предварительно выделенный диапазон символов и возвращает значение, показывающее, успешно ли выполнена эта операция.</span><span class="sxs-lookup"><span data-stu-id="ab677-636">Attempts to concatenate individual path components to a preallocated character span, and returns a value that indicates whether the operation succeeded.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
 
## Remarks  

<span data-ttu-id="ab677-637">Целевой диапазон символов должно быть достаточно большим для хранения объединенных пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-637">The destination character span must be large enough to hold the concatenated path.</span></span> <span data-ttu-id="ab677-638">Объединенный путь можно получить, вызвав <xref:System.Span%601.Slice%2A?displayProperty=nameWithType> метод, как показано следующем примере.</span><span class="sxs-lookup"><span data-stu-id="ab677-638">You can then retrieve the concatenated path by calling the <xref:System.Span%601.Slice%2A?displayProperty=nameWithType> method, as the following example illustrates.</span></span>

[!code-csharp[IsPathRooted](~/samples/snippets/csharp/api/system.IO/Path/TryJoin/program.cs)]

         ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryJoin">
      <MemberSignature Language="C#" Value="public static bool TryJoin (ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, Span&lt;char&gt; destination, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryJoin(valuetype System.ReadOnlySpan`1&lt;char&gt; path1, valuetype System.ReadOnlySpan`1&lt;char&gt; path2, valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.TryJoin(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Span{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryJoin (path1 As ReadOnlySpan(Of Char), path2 As ReadOnlySpan(Of Char), destination As Span(Of Char), ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryJoin(ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, Span&lt;char&gt; destination, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberSignature Language="F#" Value="static member TryJoin : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * Span&lt;char&gt; *  -&gt; bool" Usage="System.IO.Path.TryJoin (path1, path2, destination, charsWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="path2" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path1"><span data-ttu-id="ab677-639">Диапазон символов, содержащий первый путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="ab677-639">A character span that contains the first path to join.</span></span></param>
        <param name="path2"><span data-ttu-id="ab677-640">Диапазон символов, содержащий второй путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="ab677-640">A character span that contains the second path to join.</span></span></param>
        <param name="destination"><span data-ttu-id="ab677-641">Диапазон символов для указания объединенного пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-641">A character span to hold the concatenated path.</span></span></param>
        <param name="charsWritten"><span data-ttu-id="ab677-642">При возврате метода это значение показывает количество символов, записанных в <paramref name="destination" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-642">When the method returns, a value that indicates the number of characters written to the <paramref name="destination" />.</span></span></param>
        <summary><span data-ttu-id="ab677-643">Пытается сцепить два компонента пути в один предварительно выделенный диапазон символов и возвращает значение, показывающее, успешно ли выполнена эта операция.</span><span class="sxs-lookup"><span data-stu-id="ab677-643">Attempts to concatenate two path components to a single preallocated character span, and returns a value that indicates whether the operation succeeded.</span></span></summary>
        <returns><span data-ttu-id="ab677-644">Значение <see langword="true" />, если операция объединения выполнена успешно; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-644"><see langword="true" /> if the concatenation operation is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="ab677-645">`destination` должен быть достаточным для хранения сцепленные пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-645">`destination` must be large enough to hold the concatenated path.</span></span> <span data-ttu-id="ab677-646">Объединенный путь можно получить, вызвав <xref:System.Span%601.Slice%2A?displayProperty=nameWithType> метод, как показано в примере.</span><span class="sxs-lookup"><span data-stu-id="ab677-646">You can then retrieve the concatenated path by calling the <xref:System.Span%601.Slice%2A?displayProperty=nameWithType> method, as the example illustrates.</span></span>

         ]]></format>
        </remarks>
        <related type="article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="ab677-647">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="ab677-647">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryJoin">
      <MemberSignature Language="C#" Value="public static bool TryJoin (ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, ReadOnlySpan&lt;char&gt; path3, Span&lt;char&gt; destination, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryJoin(valuetype System.ReadOnlySpan`1&lt;char&gt; path1, valuetype System.ReadOnlySpan`1&lt;char&gt; path2, valuetype System.ReadOnlySpan`1&lt;char&gt; path3, valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Path.TryJoin(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.Span{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryJoin (path1 As ReadOnlySpan(Of Char), path2 As ReadOnlySpan(Of Char), path3 As ReadOnlySpan(Of Char), destination As Span(Of Char), ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryJoin(ReadOnlySpan&lt;char&gt; path1, ReadOnlySpan&lt;char&gt; path2, ReadOnlySpan&lt;char&gt; path3, Span&lt;char&gt; destination, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberSignature Language="F#" Value="static member TryJoin : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * Span&lt;char&gt; *  -&gt; bool" Usage="System.IO.Path.TryJoin (path1, path2, path3, destination, charsWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path1" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="path2" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="path3" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="4" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path1"><span data-ttu-id="ab677-648">Диапазон символов, содержащий первый путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="ab677-648">A character span that contains the first path to join.</span></span></param>
        <param name="path2"><span data-ttu-id="ab677-649">Диапазон символов, содержащий второй путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="ab677-649">A character span that contains the second path to join.</span></span></param>
        <param name="path3"><span data-ttu-id="ab677-650">Диапазон символов, содержащий третий путь для объединения.</span><span class="sxs-lookup"><span data-stu-id="ab677-650">A character span that contains the third path to join.</span></span></param>
        <param name="destination"><span data-ttu-id="ab677-651">Диапазон символов для указания объединенного пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-651">A character span to hold the concatenated path.</span></span></param>
        <param name="charsWritten"><span data-ttu-id="ab677-652">При возврате метода это значение показывает количество символов, записанных в <paramref name="destination" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-652">When the method returns, a value that indicates the number of characters written to the <paramref name="destination" />.</span></span></param>
        <summary><span data-ttu-id="ab677-653">Пытается сцепить два компонента пути в один предварительно выделенный диапазон символов и возвращает значение, показывающее, успешно ли выполнена эта операция.</span><span class="sxs-lookup"><span data-stu-id="ab677-653">Attempts to concatenate two path components to a single preallocated character span, and returns a value that indicates whether the operation succeeded.</span></span></summary>
        <returns><span data-ttu-id="ab677-654">Значение <see langword="true" />, если операция объединения выполнена успешно; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ab677-654"><see langword="true" /> if the concatenation operation is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="ab677-655">`destination` должен быть достаточным для хранения сцепленные пути.</span><span class="sxs-lookup"><span data-stu-id="ab677-655">`destination` must be large enough to hold the concatenated path.</span></span> <span data-ttu-id="ab677-656">Объединенный путь можно получить, вызвав <xref:System.Span%601.Slice%2A?displayProperty=nameWithType> метод, как показано в примере.</span><span class="sxs-lookup"><span data-stu-id="ab677-656">You can then retrieve the concatenated path by calling the <xref:System.Span%601.Slice%2A?displayProperty=nameWithType> method, as the example illustrates.</span></span>

         ]]></format>
        </remarks>
        <related type="article" href="~/docs/standard/io/file-path-formats.md"><span data-ttu-id="ab677-657">Форматы путей к файлам в системах Windows</span><span class="sxs-lookup"><span data-stu-id="ab677-657">File path formats on Windows systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="VolumeSeparatorChar">
      <MemberSignature Language="C#" Value="public static readonly char VolumeSeparatorChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly char VolumeSeparatorChar" />
      <MemberSignature Language="DocId" Value="F:System.IO.Path.VolumeSeparatorChar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VolumeSeparatorChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly char VolumeSeparatorChar;" />
      <MemberSignature Language="F#" Value=" staticval mutable VolumeSeparatorChar : char" Usage="System.IO.Path.VolumeSeparatorChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab677-658">Предоставляет разделитель томов, задаваемый платформой.</span><span class="sxs-lookup"><span data-stu-id="ab677-658">Provides a platform-specific volume separator character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab677-659">Значение этого поля содержит двоеточие (:) на Windows и Macintosh и косая черта (/), в операционных системах UNIX.</span><span class="sxs-lookup"><span data-stu-id="ab677-659">The value of this field is a colon (:) on Windows and Macintosh, and a slash (/) on UNIX operating systems.</span></span> <span data-ttu-id="ab677-660">Это может пригодиться для синтаксического анализа пути, такие как «c:\windows» или «MacVolume:System папку».</span><span class="sxs-lookup"><span data-stu-id="ab677-660">This is most useful for parsing paths such as "c:\windows" or "MacVolume:System Folder".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab677-661">В следующем примере показано использование `VolumeSeparatorChar` поля.</span><span class="sxs-lookup"><span data-stu-id="ab677-661">The following example demonstrates the use of the `VolumeSeparatorChar` field.</span></span>  
  
 [!code-cpp[System.IO.Path Members#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Path Members/CPP/pathmembers.cpp#13)]
 [!code-csharp[System.IO.Path Members#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Path Members/CS/pathmembers.cs#13)]
 [!code-vb[System.IO.Path Members#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Path Members/VB/pathmembers.vb#13)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/io/index.md"><span data-ttu-id="ab677-662">Файловый и потоковый ввод-вывод</span><span class="sxs-lookup"><span data-stu-id="ab677-662">File and Stream I/O</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="ab677-663">Практическое руководство. Чтение текста из файла</span><span class="sxs-lookup"><span data-stu-id="ab677-663">How to: Read Text from a File</span></span></related>
        <related type="Article" href="~/docs/standard/io/how-to-write-text-to-a-file.md"><span data-ttu-id="ab677-664">Практическое руководство. Запись текста в файл</span><span class="sxs-lookup"><span data-stu-id="ab677-664">How to: Write Text to a File</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>