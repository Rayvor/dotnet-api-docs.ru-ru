<Type Name="ThenBy" FullName="System.Web.UI.WebControls.Expressions.ThenBy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="aafc85cd12fd1f1a8392acbd853097da477a203f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69402113" /></Metadata><TypeSignature Language="C#" Value="public class ThenBy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ThenBy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.ThenBy" />
  <TypeSignature Language="VB.NET" Value="Public Class ThenBy" />
  <TypeSignature Language="C++ CLI" Value="public ref class ThenBy" />
  <TypeSignature Language="F#" Value="type ThenBy = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет способ применения выражения сортировки к объекту источника данных <see cref="T:System.Linq.IQueryable" /> после применения выражения <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 После выполнения операции сортировки с помощью <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> выражения <xref:System.Web.UI.WebControls.QueryExtender> в элементе управления последующие операции сортировки можно выполнить с помощью <xref:System.Web.UI.WebControls.Expressions.ThenBy> класса в другом поле данных.  
  
   
  
## Examples  
 В следующем примере показано, как сортировать данные по полю ListPrice в убывающем порядке, а затем по полю ProductID в возрастающем порядке с использованием <xref:System.Web.UI.WebControls.Expressions.ThenBy> типа. Этот пример кода является частью более крупного примера, приведенного в [пошаговом руководстве. Фильтрация данных на веб-странице с помощью декларативного синтаксиса](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/b93e32b9-af41-4539-a009-6cbbe809c702">Общие сведения об элементе управления веб-сервера элемента</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThenBy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.ThenBy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThenBy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.ThenBy.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.Expressions.ThenBy.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает свойство объекта <see cref="T:System.Linq.IQueryable" />, к которому применяется выражение <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" />.</summary>
        <value>Свойство объекта <see cref="T:System.Linq.IQueryable" />, к которому применяется выражение <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> сортирует данные по указанному полю данных. Последующие операции сортировки могут выполняться с другим полем данных с помощью <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> коллекции. Это свойство задает поле данных, к которому применяется `ThenBy` операция сортировки.  
  
   
  
## Examples  
 В следующем примере показано, как сортировать данные по полю ListPrice в убывающем порядке, а затем по полю Product ID в возрастающем порядке. Этот пример кода является частью более крупного примера, приведенного в [пошаговом руководстве. Фильтрация данных на веб-странице с помощью декларативного синтаксиса](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SortDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SortDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.ThenBy.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As SortDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SortDirection Direction { System::Web::UI::WebControls::SortDirection get(); void set(System::Web::UI::WebControls::SortDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Web.UI.WebControls.SortDirection with get, set" Usage="System.Web.UI.WebControls.Expressions.ThenBy.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает направление сортировки объекта источника данных <see cref="T:System.Linq.IQueryable" />.</summary>
        <value>Направление сортировки объекта источника данных <see cref="T:System.Linq.IQueryable" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> Используется<xref:System.Web.UI.WebControls.QueryExtender> в элементе управления для сортировки данных в порядке возрастания или убывания. Направление операции сортировки задается с помощью <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A> свойства.  
  
   
  
## Examples  
 В следующем примере показано, как сортировать данные по полю ListPrice в убывающем порядке и по полю ProductID в возрастающем порядке с помощью <xref:System.Web.UI.WebControls.Expressions.ThenBy.Direction%2A> свойства. Этот пример кода является частью более крупного примера, приведенного в [пошаговом руководстве. Фильтрация данных на веб-странице с помощью декларативного синтаксиса](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
