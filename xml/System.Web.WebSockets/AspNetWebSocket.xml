<Type Name="AspNetWebSocket" FullName="System.Web.WebSockets.AspNetWebSocket">
  <Metadata><Meta Name="ms.openlocfilehash" Value="63b7a8dc88b3ee90e71c48e6e7f2faae15631b40" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69386315" /></Metadata><TypeSignature Language="C#" Value="public sealed class AspNetWebSocket : System.Net.WebSockets.WebSocket" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AspNetWebSocket extends System.Net.WebSockets.WebSocket" />
  <TypeSignature Language="DocId" Value="T:System.Web.WebSockets.AspNetWebSocket" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AspNetWebSocket&#xA;Inherits WebSocket" />
  <TypeSignature Language="C++ CLI" Value="public ref class AspNetWebSocket sealed : System::Net::WebSockets::WebSocket" />
  <TypeSignature Language="F#" Value="type AspNetWebSocket = class&#xA;    inherit WebSocket" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.WebSockets.WebSocket</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ef815-101">Представляет полнодуплексное соединение между веб-сервером и клиентом в приложении ASP.NET в режиме реального времени.</span><span class="sxs-lookup"><span data-stu-id="ef815-101">Represents a real-time full-duplex connection between a web server and a client in an ASP.NET application.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public override void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Abort();" />
      <MemberSignature Language="F#" Value="override this.Abort : unit -&gt; unit" Usage="aspNetWebSocket.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef815-102">Отменяет все ожидающие операции ввода-вывода объекта <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> и устанавливает для состояние объекта так, что его нельзя использовать для запуска дополнительных операций ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="ef815-102">Cancels any pending I/O operations on the <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object and sets the state of the object so that it cannot be used to start additional I/O operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef815-103">После вызова <xref:System.Web.WebSockets.AspNetWebSocket.Abort%2A> метода вы все равно можете получить доступ к свойствам и методам, не содержащим операции ввода-вывода.</span><span class="sxs-lookup"><span data-stu-id="ef815-103">After the <xref:System.Web.WebSockets.AspNetWebSocket.Abort%2A> method has been called, you can still access properties and methods that do not involve I/O operations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ef815-104">Объект ранее был удален.</span><span class="sxs-lookup"><span data-stu-id="ef815-104">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloseAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CloseAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CloseAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CloseAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.CloseAsync : System.Net.WebSockets.WebSocketCloseStatus * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="aspNetWebSocket.CloseAsync (closeStatus, statusDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus"><span data-ttu-id="ef815-105">Код состояния операции закрытия.</span><span class="sxs-lookup"><span data-stu-id="ef815-105">The status code of the close operation.</span></span></param>
        <param name="statusDescription"><span data-ttu-id="ef815-106">Сообщение о состоянии операции закрытия.</span><span class="sxs-lookup"><span data-stu-id="ef815-106">The status message of the close operation.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="ef815-107">Объект, отменяющий ожидающую операцию.</span><span class="sxs-lookup"><span data-stu-id="ef815-107">The object that cancels a pending operation.</span></span></param>
        <summary><span data-ttu-id="ef815-108">Отправляет асинхронное сообщение клиенту, чтобы закрыть соединение.</span><span class="sxs-lookup"><span data-stu-id="ef815-108">Sends an asynchronous message to a client to close the connection.</span></span> <span data-ttu-id="ef815-109">Если сервер инициирует запрос на закрытие соединения, метод ожидает от клиента подтверждения запроса, прежде чем возвратить управление.</span><span class="sxs-lookup"><span data-stu-id="ef815-109">If the server initiates the request to close the connection, the method waits for the client to acknowledge the request before it returns.</span></span></summary>
        <returns><span data-ttu-id="ef815-110">Ссылка на операцию.</span><span class="sxs-lookup"><span data-stu-id="ef815-110">A reference to the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef815-111">Для закрытия <xref:System.Web.WebSockets.AspNetWebSocket> подключения можно <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> использовать <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> методы и для инициированных клиентом и инициированных сервером запросов.</span><span class="sxs-lookup"><span data-stu-id="ef815-111">You can use the <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> and <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> methods for both client-initiated and server-initiated requests to close an <xref:System.Web.WebSockets.AspNetWebSocket> connection.</span></span> <span data-ttu-id="ef815-112">Два метода обрабатывали инициированные клиентом запросы таким же образом: После того как клиент отправит сообщение на сервер, чтобы закрыть соединение, сервер вызывает один из этих методов и отправляет клиенту подтверждение, а затем метод возвращает.</span><span class="sxs-lookup"><span data-stu-id="ef815-112">The two methods handle client-initiated requests in the same way: After the client sends a message to the server to close the connection, the server calls one of these methods and sends an acknowledgment to the client, and then the method returns.</span></span>  
  
 <span data-ttu-id="ef815-113">Для запросов, инициированных сервером, эти два метода работают по-разному.</span><span class="sxs-lookup"><span data-stu-id="ef815-113">For server-initiated requests, the two methods work differently.</span></span> <span data-ttu-id="ef815-114"><xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> Метод отправляет клиенту сообщение, чтобы закрыть соединение, ждет ответа, а затем возвращает.</span><span class="sxs-lookup"><span data-stu-id="ef815-114">The <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> method sends a message to the client to close the connection, waits for a response, and then returns.</span></span> <span data-ttu-id="ef815-115">Сервер не ждет дополнительных данных, отправленных клиентом.</span><span class="sxs-lookup"><span data-stu-id="ef815-115">The server does not wait for any additional data sent by the client.</span></span> <span data-ttu-id="ef815-116">Напротив, <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> метод отправляет клиенту сообщение, чтобы закрыть соединение и возвращалось без ожидания ответа.</span><span class="sxs-lookup"><span data-stu-id="ef815-116">In contrast, the <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> method sends a message to the client to close the connection and returns without waiting for a response.</span></span> <span data-ttu-id="ef815-117">После возврата метода можно вызвать <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> метод и выполнить обработку дополнительных данных или подтверждения, которое отправляет клиент.</span><span class="sxs-lookup"><span data-stu-id="ef815-117">After the method returns, you can call the <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> method and handle either additional data or the acknowledgment that the client sends.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ef815-118">Объект <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> ранее был удален.</span><span class="sxs-lookup"><span data-stu-id="ef815-118">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was previously disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef815-119">Объект <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> находится в состоянии завершения.</span><span class="sxs-lookup"><span data-stu-id="ef815-119">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span></span>  
  
<span data-ttu-id="ef815-120">- или -</span><span class="sxs-lookup"><span data-stu-id="ef815-120">-or-</span></span> 
<span data-ttu-id="ef815-121">Операции отправки недоступны.</span><span class="sxs-lookup"><span data-stu-id="ef815-121">Sending operations are unavailable.</span></span>  
  
<span data-ttu-id="ef815-122">- или -</span><span class="sxs-lookup"><span data-stu-id="ef815-122">-or-</span></span> 
<span data-ttu-id="ef815-123">Операции получения недоступны.</span><span class="sxs-lookup"><span data-stu-id="ef815-123">Receiving operations are unavailable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CloseOutputAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CloseOutputAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CloseOutputAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.CloseOutputAsync : System.Net.WebSockets.WebSocketCloseStatus * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="aspNetWebSocket.CloseOutputAsync (closeStatus, statusDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus"><span data-ttu-id="ef815-124">Код состояния операции закрытия.</span><span class="sxs-lookup"><span data-stu-id="ef815-124">The status code of the close operation.</span></span></param>
        <param name="statusDescription"><span data-ttu-id="ef815-125">Сообщение о состоянии операции закрытия.</span><span class="sxs-lookup"><span data-stu-id="ef815-125">The status message of the close operation.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="ef815-126">Объект, отменяющий ожидающую операцию.</span><span class="sxs-lookup"><span data-stu-id="ef815-126">The object that cancels a pending operation.</span></span></param>
        <summary><span data-ttu-id="ef815-127">Отправляет асинхронное сообщение клиенту, чтобы закрыть соединение.</span><span class="sxs-lookup"><span data-stu-id="ef815-127">Sends an asynchronous message to a client to close the connection.</span></span> <span data-ttu-id="ef815-128">Если сервер инициирует запрос на закрытие соединения, метод возвращает управление, не дожидаясь отклика.</span><span class="sxs-lookup"><span data-stu-id="ef815-128">If the server initiates the request to close the connection, the method returns without waiting for a response.</span></span></summary>
        <returns><span data-ttu-id="ef815-129">Ссылка на операцию.</span><span class="sxs-lookup"><span data-stu-id="ef815-129">A reference to the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef815-130">Для закрытия <xref:System.Web.WebSockets.AspNetWebSocket> подключения можно <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> использовать <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> методы и для инициированных клиентом и инициированных сервером запросов.</span><span class="sxs-lookup"><span data-stu-id="ef815-130">You can use the <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> and <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> methods for both client-initiated and server-initiated requests to close an <xref:System.Web.WebSockets.AspNetWebSocket> connection.</span></span> <span data-ttu-id="ef815-131">Два метода обрабатывали инициированные клиентом запросы таким же образом: После того как клиент отправит сообщение на сервер, чтобы закрыть соединение, сервер вызывает один из этих методов и отправляет клиенту подтверждение, а затем метод возвращает.</span><span class="sxs-lookup"><span data-stu-id="ef815-131">The two methods handle client-initiated requests in the same way: After the client sends a message to the server to close the connection, the server calls one of these methods and sends an acknowledgment to the client, and then the method returns.</span></span>  
  
 <span data-ttu-id="ef815-132">Для запросов, инициированных сервером, эти два метода работают по-разному.</span><span class="sxs-lookup"><span data-stu-id="ef815-132">For server-initiated requests, the two methods work differently.</span></span> <span data-ttu-id="ef815-133"><xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> Метод отправляет клиенту сообщение, чтобы закрыть соединение, ждет ответа, а затем возвращает.</span><span class="sxs-lookup"><span data-stu-id="ef815-133">The <xref:System.Web.WebSockets.AspNetWebSocket.CloseAsync%2A> method sends a message to the client to close the connection, waits for a response, and then returns.</span></span> <span data-ttu-id="ef815-134">Сервер не ждет дополнительных данных, отправленных клиентом.</span><span class="sxs-lookup"><span data-stu-id="ef815-134">The server does not wait for any additional data sent by the client.</span></span> <span data-ttu-id="ef815-135">Напротив, <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> метод отправляет клиенту сообщение, чтобы закрыть соединение и возвращалось без ожидания ответа.</span><span class="sxs-lookup"><span data-stu-id="ef815-135">In contrast, the <xref:System.Web.WebSockets.AspNetWebSocket.CloseOutputAsync%2A> method sends a message to the client to close the connection and returns without waiting for a response.</span></span> <span data-ttu-id="ef815-136">После возврата метода можно вызвать <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> метод и выполнить обработку дополнительных данных или подтверждения, которое отправляет клиент.</span><span class="sxs-lookup"><span data-stu-id="ef815-136">After the method returns, you can call the <xref:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync%2A> method and handle either additional data or the acknowledgment that the client sends.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ef815-137">Объект ранее был удален.</span><span class="sxs-lookup"><span data-stu-id="ef815-137">The object was previously disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef815-138">Объект <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> находится в состоянии завершения.</span><span class="sxs-lookup"><span data-stu-id="ef815-138">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span></span>  
  
<span data-ttu-id="ef815-139">-или-</span><span class="sxs-lookup"><span data-stu-id="ef815-139">-or-</span></span> 
<span data-ttu-id="ef815-140">Операции отправки недоступны.</span><span class="sxs-lookup"><span data-stu-id="ef815-140">Sending operations are unavailable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloseStatus">
      <MemberSignature Language="C#" Value="public override Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.CloseStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CloseStatus As Nullable(Of WebSocketCloseStatus)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; CloseStatus { Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseStatus : Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;" Usage="System.Web.WebSockets.AspNetWebSocket.CloseStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef815-141">Получает код состояния, указывающий, почему объект <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="ef815-141">Gets a status code that indicates why an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was closed.</span></span></summary>
        <value><span data-ttu-id="ef815-142">Код состояния.</span><span class="sxs-lookup"><span data-stu-id="ef815-142">The status code.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ef815-143">Объект ранее был удален.</span><span class="sxs-lookup"><span data-stu-id="ef815-143">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloseStatusDescription">
      <MemberSignature Language="C#" Value="public override string CloseStatusDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CloseStatusDescription" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CloseStatusDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CloseStatusDescription { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseStatusDescription : string" Usage="System.Web.WebSockets.AspNetWebSocket.CloseStatusDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef815-144">Получает сообщение о состоянии, объясняющее, почему объект <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> был закрыт.</span><span class="sxs-lookup"><span data-stu-id="ef815-144">Gets a status message that explains why an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was closed.</span></span></summary>
        <value><span data-ttu-id="ef815-145">Сообщение состояния.</span><span class="sxs-lookup"><span data-stu-id="ef815-145">The status message.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ef815-146">Объект ранее был удален.</span><span class="sxs-lookup"><span data-stu-id="ef815-146">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="override this.Dispose : unit -&gt; unit" Usage="aspNetWebSocket.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ef815-147">Освобождает все ресурсы, используемые объектом <see cref="T:System.Web.WebSockets.AspNetWebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="ef815-147">Releases all resources used by an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef815-148">ASP.NET автоматически вызывает <xref:System.Web.WebSockets.AspNetWebSocket.Dispose%2A> метод <xref:System.Web.WebSockets.AspNetWebSocket> для объекта, чтобы освободить все ресурсы, остающиеся после завершения выполнения кода.</span><span class="sxs-lookup"><span data-stu-id="ef815-148">ASP.NET automatically calls the <xref:System.Web.WebSockets.AspNetWebSocket.Dispose%2A> method on a <xref:System.Web.WebSockets.AspNetWebSocket> object to release any resources that remain after your code has finished executing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync (ArraySegment&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Net::WebSockets::WebSocketReceiveResult ^&gt; ^ ReceiveAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReceiveAsync : ArraySegment&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;" Usage="aspNetWebSocket.ReceiveAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ef815-149">Массив, содержащий данные сообщения.</span><span class="sxs-lookup"><span data-stu-id="ef815-149">The array that contains the message data.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="ef815-150">Объект, отменяющий ожидающую операцию.</span><span class="sxs-lookup"><span data-stu-id="ef815-150">The object that cancels a pending operation.</span></span></param>
        <summary><span data-ttu-id="ef815-151">Получает отдельный фрагмент сообщения от удаленного клиента.</span><span class="sxs-lookup"><span data-stu-id="ef815-151">Receives a single message fragment from a remote client.</span></span></summary>
        <returns><span data-ttu-id="ef815-152">Ссылка на задачу получения сообщения.</span><span class="sxs-lookup"><span data-stu-id="ef815-152">A reference to the task of receiving a message.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ef815-153">Объект <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> ранее был удален.</span><span class="sxs-lookup"><span data-stu-id="ef815-153">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object was previously disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef815-154">Объект <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> находится в состоянии завершения.</span><span class="sxs-lookup"><span data-stu-id="ef815-154">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span></span>  
  
<span data-ttu-id="ef815-155">- или -</span><span class="sxs-lookup"><span data-stu-id="ef815-155">-or-</span></span> 
<span data-ttu-id="ef815-156">Операции получения недоступны.</span><span class="sxs-lookup"><span data-stu-id="ef815-156">Receiving operations are unavailable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task SendAsync (ArraySegment&lt;byte&gt; buffer, System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task SendAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.WebSockets.AspNetWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ SendAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Net::WebSockets::WebSocketMessageType messageType, bool endOfMessage, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.SendAsync : ArraySegment&lt;byte&gt; * System.Net.WebSockets.WebSocketMessageType * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="aspNetWebSocket.SendAsync (buffer, messageType, endOfMessage, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="messageType" Type="System.Net.WebSockets.WebSocketMessageType" />
        <Parameter Name="endOfMessage" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ef815-157">Массив, содержащий данные сообщения.</span><span class="sxs-lookup"><span data-stu-id="ef815-157">The array that contains the message data.</span></span></param>
        <param name="messageType"><span data-ttu-id="ef815-158">Тип сообщения.</span><span class="sxs-lookup"><span data-stu-id="ef815-158">The message type.</span></span></param>
        <param name="endOfMessage"><span data-ttu-id="ef815-159">Значение <see langword="true" /> для указания, что фрагмент является последней частью полного сообщения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ef815-159"><see langword="true" /> to indicate that a fragment is the end of a complete message; otherwise, <see langword="false" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="ef815-160">Объект, отменяющий ожидающую операцию.</span><span class="sxs-lookup"><span data-stu-id="ef815-160">The object that cancels a pending operation.</span></span></param>
        <summary><span data-ttu-id="ef815-161">Отправляет отдельный фрагмент сообщения удаленному клиенту.</span><span class="sxs-lookup"><span data-stu-id="ef815-161">Sends a single message fragment to a remote client.</span></span></summary>
        <returns><span data-ttu-id="ef815-162">Ссылка на задачу отправки сообщения.</span><span class="sxs-lookup"><span data-stu-id="ef815-162">A reference to the task of sending a message.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ef815-163">Объект <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> удален.</span><span class="sxs-lookup"><span data-stu-id="ef815-163">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ef815-164">Объект <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> находится в состоянии завершения.</span><span class="sxs-lookup"><span data-stu-id="ef815-164">The <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object is in an aborted state.</span></span>  
  
<span data-ttu-id="ef815-165">- или -</span><span class="sxs-lookup"><span data-stu-id="ef815-165">-or-</span></span> 
<span data-ttu-id="ef815-166">Операции отправки недоступны.</span><span class="sxs-lookup"><span data-stu-id="ef815-166">Sending operations are unavailable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Net.WebSockets.WebSocketState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.WebSockets.WebSocketState State" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As WebSocketState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebSockets::WebSocketState State { System::Net::WebSockets::WebSocketState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Net.WebSockets.WebSocketState" Usage="System.Web.WebSockets.AspNetWebSocket.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebSockets.WebSocketState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef815-167">Получает значение, указывающее открытое и закрытое состояние объекта <see cref="T:System.Web.WebSockets.AspNetWebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="ef815-167">Gets a value that indicates the open or closed state of an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> object.</span></span></summary>
        <value><span data-ttu-id="ef815-168">Текущее состояние.</span><span class="sxs-lookup"><span data-stu-id="ef815-168">The current state.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ef815-169">Объект ранее был удален.</span><span class="sxs-lookup"><span data-stu-id="ef815-169">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SubProtocol">
      <MemberSignature Language="C#" Value="public override string SubProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Web.WebSockets.AspNetWebSocket.SubProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SubProtocol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SubProtocol { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubProtocol : string" Usage="System.Web.WebSockets.AspNetWebSocket.SubProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ef815-170">Получает имя соответствующего приложению протокола, который удаленный клиент и сервер могут использовать для обмена данными через соединение <see cref="T:System.Web.WebSockets.AspNetWebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="ef815-170">Gets the name of an application-specific protocol that a remote client and a server can use to exchange data over an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection.</span></span></summary>
        <value><span data-ttu-id="ef815-171">Имя протокола.</span><span class="sxs-lookup"><span data-stu-id="ef815-171">The name of the protocol.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ef815-172">Объект ранее был удален.</span><span class="sxs-lookup"><span data-stu-id="ef815-172">The object was previously disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
