<Type Name="CustomReflectionContext" FullName="System.Reflection.Context.CustomReflectionContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="67523d89b710e9dcff82dcc815b99bd51a7e74c9" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64055629" /></Metadata><TypeSignature Language="C#" Value="public abstract class CustomReflectionContext : System.Reflection.ReflectionContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CustomReflectionContext extends System.Reflection.ReflectionContext" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Context.CustomReflectionContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CustomReflectionContext&#xA;Inherits ReflectionContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomReflectionContext abstract : System::Reflection::ReflectionContext" />
  <TypeSignature Language="F#" Value="type CustomReflectionContext = class&#xA;    inherit ReflectionContext" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Context</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.ReflectionContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2302c-101">Представляет настраиваемый контекст отражения.</span><span class="sxs-lookup"><span data-stu-id="2302c-101">Represents a customizable reflection context.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2302c-102"><xref:System.Reflection.Context.CustomReflectionContext> предоставляет способ для можно добавлять или удалять пользовательские атрибуты из объекты отражения или добавить фиктивные свойства этих объектов без повторной реализации модели полный отражения.</span><span class="sxs-lookup"><span data-stu-id="2302c-102"><xref:System.Reflection.Context.CustomReflectionContext> provides a way for you to add or remove custom attributes from reflection objects, or add dummy properties to those objects, without re-implementing the complete reflection model.</span></span> <span data-ttu-id="2302c-103">Значение по умолчанию <xref:System.Reflection.Context.CustomReflectionContext> просто переносит отражения объектов без внесения изменений, но использование подклассов и переопределение соответствующие методы, можно добавить, удалить, или изменить атрибуты, которые применяются к любому отраженного параметра или члену или добавлять новые свойства отраженный тип.</span><span class="sxs-lookup"><span data-stu-id="2302c-103">The default <xref:System.Reflection.Context.CustomReflectionContext> simply wraps reflection objects without making any changes, but by subclassing and overriding the relevant methods, you can add, remove, or change the attributes that apply to any reflected parameter or member, or add new properties to a reflected type.</span></span>  
  
 <span data-ttu-id="2302c-104">Например предположим, что код соответствует соглашению применения атрибута к методам фабрики, но теперь требуется для работы с кодом независимых производителей, который не имеет атрибутов.</span><span class="sxs-lookup"><span data-stu-id="2302c-104">For example, suppose that your code follows the convention of applying a particular attribute to factory methods, but you are now required to work with third-party code that lacks attributes.</span></span> <span data-ttu-id="2302c-105">Можно использовать <xref:System.Reflection.Context.CustomReflectionContext> для указания правил для идентификации объектов, которые должны иметь атрибуты и передать объекты с такими значениями атрибутов, при просмотре в коде.</span><span class="sxs-lookup"><span data-stu-id="2302c-105">You can use <xref:System.Reflection.Context.CustomReflectionContext> to specify a rule for identifying the objects that should have attributes and to supply the objects with those attributes when they are viewed from your code.</span></span>  
  
 <span data-ttu-id="2302c-106">Чтобы использовать <xref:System.Reflection.Context.CustomReflectionContext> эффективно, код, который используют отраженный объект должен поддерживать понятие указав контекст отражения, а не при условии, что все они отражали объектов связаны с контекстом отражения среды выполнения.</span><span class="sxs-lookup"><span data-stu-id="2302c-106">To use <xref:System.Reflection.Context.CustomReflectionContext> effectively, the code that uses the reflected objects must support the notion of specifying a reflection context, instead of assuming that all reflected objects are associated with the runtime reflection context.</span></span> <span data-ttu-id="2302c-107">Многие методы отражения в .NET Framework предоставляют <xref:System.Reflection.ReflectionContext> параметр для этой цели.</span><span class="sxs-lookup"><span data-stu-id="2302c-107">Many reflection methods in the .NET Framework provide a <xref:System.Reflection.ReflectionContext> parameter for this purpose.</span></span>  
  
 <span data-ttu-id="2302c-108">Чтобы изменить атрибуты, которые применяются к отраженного параметра или члена, переопределите <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> или <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> метод.</span><span class="sxs-lookup"><span data-stu-id="2302c-108">To modify the attributes that are applied to a reflected parameter or member, override the <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> or <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> method.</span></span> <span data-ttu-id="2302c-109">Эти методы принимают отраженный объект и список атрибутов в текущем контексте отражения и возвращают список атрибутов, которые она должна иметь в разделе пользовательского контекста отражения.</span><span class="sxs-lookup"><span data-stu-id="2302c-109">These methods take the reflected object and the list of attributes under its current reflection context, and return the list of attributes it should have under the custom reflection context.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="2302c-110"><xref:System.Reflection.Context.CustomReflectionContext> методы не должны работать напрямую путем вызова список атрибутов, отраженный объект или метод <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> метод в предоставленном <xref:System.Reflection.MemberInfo> или <xref:System.Reflection.ParameterInfo> экземпляра, но вместо этого следует использовать `declaredAttributes` список, который передается в качестве параметра Чтобы <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A> перегрузок метода.</span><span class="sxs-lookup"><span data-stu-id="2302c-110"><xref:System.Reflection.Context.CustomReflectionContext> methods should not access the list of attributes of a reflected object or method directly by calling the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method on the provided <xref:System.Reflection.MemberInfo> or <xref:System.Reflection.ParameterInfo> instance, but should instead use the `declaredAttributes` list, which is passed as a parameter to the <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A> method overloads.</span></span>  
  
 <span data-ttu-id="2302c-111">Чтобы добавить свойства отраженный тип, переопределите <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2302c-111">To add properties to a reflected type, override the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.</span></span> <span data-ttu-id="2302c-112">Этот метод принимает параметр, который указывает отраженный тип и возвращает список дополнительных свойств.</span><span class="sxs-lookup"><span data-stu-id="2302c-112">The method accepts a parameter that specifies the reflected type, and returns a list of additional properties.</span></span> <span data-ttu-id="2302c-113">Следует использовать <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> для создания объектов свойства для возврата.</span><span class="sxs-lookup"><span data-stu-id="2302c-113">You should use the <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> method to create property objects to return.</span></span> <span data-ttu-id="2302c-114">Делегаты можно указать при создания свойства, которое будет использоваться как метод доступа к свойству, и можно опустить одного из методов доступа, чтобы создать свойство только для чтения или только для записи.</span><span class="sxs-lookup"><span data-stu-id="2302c-114">You can specify delegates when creating the property that will serve as the property accessor, and you can omit one of the accessors to create a read-only or write-only property.</span></span> <span data-ttu-id="2302c-115">Обратите внимание на то, что таких свойств не имеют метаданных или резервном общих промежуточного языка (CIL).</span><span class="sxs-lookup"><span data-stu-id="2302c-115">Note that such dummy properties have no metadata or Common Intermediate Language (CIL) backing.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="2302c-116">Будьте осторожны равенство между объектами, отраженный при работе с контексты отражения, так как объекты могут представлять один и тот же отраженный объект и в нескольких контекстах.</span><span class="sxs-lookup"><span data-stu-id="2302c-116">Be cautious about equality among reflected objects when you work with reflection contexts, because objects may represent the same reflected object in multiple contexts.</span></span> <span data-ttu-id="2302c-117">Можно использовать <xref:System.Reflection.Context.CustomReflectionContext.MapType%2A> метод, чтобы получить контекст отражения для определенной версии отраженный объект.</span><span class="sxs-lookup"><span data-stu-id="2302c-117">You can use the <xref:System.Reflection.Context.CustomReflectionContext.MapType%2A> method to obtain a particular reflection context's version of a reflected object.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="2302c-118">Объект <xref:System.Reflection.Context.CustomReflectionContext> объекта изменяет атрибуты, возвращаемые объектом определенного отражения, например, полученными при <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2302c-118">A <xref:System.Reflection.Context.CustomReflectionContext> object alters the attributes returned by a particular reflection object, such as those obtained by the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method.</span></span> <span data-ttu-id="2302c-119">Он не изменяет данные настраиваемого атрибута, возвращаемые <xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A> метод и эти два списка не будет соответствовать при использовании пользовательского контекста отражения.</span><span class="sxs-lookup"><span data-stu-id="2302c-119">It does not alter the custom attribute data returned by the <xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A> method, and these two lists will not match when you use a custom reflection context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2302c-120">В следующем примере показано, как создать подкласс <xref:System.Reflection.Context.CustomReflectionContext> для добавления настраиваемого атрибута ко всем элементам заданного типа, имена которых начинаются с «To».</span><span class="sxs-lookup"><span data-stu-id="2302c-120">The following example demonstrates how to subclass  <xref:System.Reflection.Context.CustomReflectionContext> to add a custom attribute to all the members of a given type whose names begin with "To".</span></span> <span data-ttu-id="2302c-121">Для выполнения этого кода вставьте его в пустой консоли проект и убедитесь, что ссылку на System.Reflection.Context.dll.</span><span class="sxs-lookup"><span data-stu-id="2302c-121">To run this code, paste it into an empty console project, and make sure to include a reference to System.Reflection.Context.dll.</span></span>  
  
 [!code-csharp[System.Reflection.Context.CustomReflectionContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.context.customreflectioncontext/cs/program.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2302c-122">Инициализирует новый экземпляр класса <see cref="T:System.Reflection.Context.CustomReflectionContext" />.</span><span class="sxs-lookup"><span data-stu-id="2302c-122">Initializes a new instance of the <see cref="T:System.Reflection.Context.CustomReflectionContext" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomReflectionContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomReflectionContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2302c-123">Инициализирует новый экземпляр класса <see cref="T:System.Reflection.Context.CustomReflectionContext" />.</span><span class="sxs-lookup"><span data-stu-id="2302c-123">Initializes a new instance of the <see cref="T:System.Reflection.Context.CustomReflectionContext" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomReflectionContext (System.Reflection.ReflectionContext source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Reflection.ReflectionContext source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (source As ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomReflectionContext(System::Reflection::ReflectionContext ^ source);" />
      <MemberSignature Language="F#" Value="new System.Reflection.Context.CustomReflectionContext : System.Reflection.ReflectionContext -&gt; System.Reflection.Context.CustomReflectionContext" Usage="new System.Reflection.Context.CustomReflectionContext source" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.Reflection.ReflectionContext" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="2302c-124">Контекст отражения для использования в качестве базового.</span><span class="sxs-lookup"><span data-stu-id="2302c-124">The reflection context to use as a base.</span></span></param>
        <summary><span data-ttu-id="2302c-125">Инициализирует новый экземпляр класса <see cref="T:System.Reflection.Context.CustomReflectionContext" /> с указанным контекстом отражения в качестве базы.</span><span class="sxs-lookup"><span data-stu-id="2302c-125">Initializes a new instance of the <see cref="T:System.Reflection.Context.CustomReflectionContext" /> class with the specified reflection context as a base.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProperties">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt; AddProperties (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.PropertyInfo&gt; AddProperties(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Reflection::PropertyInfo ^&gt; ^ AddProperties(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member AddProperties : Type -&gt; seq&lt;System.Reflection.PropertyInfo&gt;&#xA;override this.AddProperties : Type -&gt; seq&lt;System.Reflection.PropertyInfo&gt;" Usage="customReflectionContext.AddProperties type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Reflection.Context.CustomReflectionContext/&lt;AddProperties&gt;d__1))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Reflection.Context.CustomReflectionContext/&lt;AddProperties&gt;d__8))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="2302c-126">Тип, в который добавляются свойства.</span><span class="sxs-lookup"><span data-stu-id="2302c-126">The type to add properties to.</span></span></param>
        <summary><span data-ttu-id="2302c-127">При переопределении в производном классе предоставляет коллекцию дополнительных свойств для заданного типа, представленного в данном контексте отражения.</span><span class="sxs-lookup"><span data-stu-id="2302c-127">When overridden in a derived class, provides a collection of additional properties for the specified type, as represented in this reflection context.</span></span></summary>
        <returns><span data-ttu-id="2302c-128">Коллекция дополнительных свойств для заданного типа.</span><span class="sxs-lookup"><span data-stu-id="2302c-128">A collection of additional properties for the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2302c-129">Переопределите этот метод, чтобы указать, какие свойства должны добавляться в заданный тип.</span><span class="sxs-lookup"><span data-stu-id="2302c-129">Override this method to specify which properties should be added to a given type.</span></span> <span data-ttu-id="2302c-130">Чтобы создать свойства, используйте <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2302c-130">To create the properties, use the <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProperty">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2302c-131">Создает объект, представляющий свойство, добавляемое к типу, как задано методом <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" />.</span><span class="sxs-lookup"><span data-stu-id="2302c-131">Creates an object that represents a property to be added to a type, as specified by the <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="protected System.Reflection.PropertyInfo CreateProperty (Type propertyType, string name, Func&lt;object,object&gt; getter, Action&lt;object,object&gt; setter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Reflection.PropertyInfo CreateProperty(class System.Type propertyType, string name, class System.Func`2&lt;object, object&gt; getter, class System.Action`2&lt;object, object&gt; setter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateProperty (propertyType As Type, name As String, getter As Func(Of Object, Object), setter As Action(Of Object, Object)) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Reflection::PropertyInfo ^ CreateProperty(Type ^ propertyType, System::String ^ name, Func&lt;System::Object ^, System::Object ^&gt; ^ getter, Action&lt;System::Object ^, System::Object ^&gt; ^ setter);" />
      <MemberSignature Language="F#" Value="member this.CreateProperty : Type * string * Func&lt;obj, obj&gt; * Action&lt;obj, obj&gt; -&gt; System.Reflection.PropertyInfo" Usage="customReflectionContext.CreateProperty (propertyType, name, getter, setter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="getter" Type="System.Func&lt;System.Object,System.Object&gt;" />
        <Parameter Name="setter" Type="System.Action&lt;System.Object,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyType"><span data-ttu-id="2302c-132">Тип создаваемого свойства.</span><span class="sxs-lookup"><span data-stu-id="2302c-132">The type of the property to create.</span></span></param>
        <param name="name"><span data-ttu-id="2302c-133">Имя создаваемого свойства.</span><span class="sxs-lookup"><span data-stu-id="2302c-133">The name of the property to create.</span></span></param>
        <param name="getter"><span data-ttu-id="2302c-134">Объект, представляющий метод доступа <see langword="get" /> свойства.</span><span class="sxs-lookup"><span data-stu-id="2302c-134">An object that represents the property's <see langword="get" /> accessor.</span></span></param>
        <param name="setter"><span data-ttu-id="2302c-135">Объект, представляющий метод доступа <see langword="set" /> свойства.</span><span class="sxs-lookup"><span data-stu-id="2302c-135">An object that represents the property's <see langword="set" /> accessor.</span></span></param>
        <summary><span data-ttu-id="2302c-136">Создает объект, представляющий свойство, добавляемое к типу, для использования методом <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" />.</span><span class="sxs-lookup"><span data-stu-id="2302c-136">Creates an object that represents a property to be added to a type, to be used with the <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> method.</span></span></summary>
        <returns><span data-ttu-id="2302c-137">Объект, представляющий свойство.</span><span class="sxs-lookup"><span data-stu-id="2302c-137">An object that represents the property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2302c-138">Объекты, возвращаемые этим методом, не являются полными <xref:System.Reflection.PropertyInfo> объектов и должен использоваться только в контексте <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2302c-138">Objects that are returned by this method are not complete <xref:System.Reflection.PropertyInfo> objects, and should be used only in the context of the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="protected System.Reflection.PropertyInfo CreateProperty (Type propertyType, string name, Func&lt;object,object&gt; getter, Action&lt;object,object&gt; setter, System.Collections.Generic.IEnumerable&lt;Attribute&gt; propertyCustomAttributes, System.Collections.Generic.IEnumerable&lt;Attribute&gt; getterCustomAttributes, System.Collections.Generic.IEnumerable&lt;Attribute&gt; setterCustomAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Reflection.PropertyInfo CreateProperty(class System.Type propertyType, string name, class System.Func`2&lt;object, object&gt; getter, class System.Action`2&lt;object, object&gt; setter, class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; propertyCustomAttributes, class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; getterCustomAttributes, class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; setterCustomAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateProperty (propertyType As Type, name As String, getter As Func(Of Object, Object), setter As Action(Of Object, Object), propertyCustomAttributes As IEnumerable(Of Attribute), getterCustomAttributes As IEnumerable(Of Attribute), setterCustomAttributes As IEnumerable(Of Attribute)) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Reflection::PropertyInfo ^ CreateProperty(Type ^ propertyType, System::String ^ name, Func&lt;System::Object ^, System::Object ^&gt; ^ getter, Action&lt;System::Object ^, System::Object ^&gt; ^ setter, System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ propertyCustomAttributes, System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ getterCustomAttributes, System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ setterCustomAttributes);" />
      <MemberSignature Language="F#" Value="member this.CreateProperty : Type * string * Func&lt;obj, obj&gt; * Action&lt;obj, obj&gt; * seq&lt;Attribute&gt; * seq&lt;Attribute&gt; * seq&lt;Attribute&gt; -&gt; System.Reflection.PropertyInfo" Usage="customReflectionContext.CreateProperty (propertyType, name, getter, setter, propertyCustomAttributes, getterCustomAttributes, setterCustomAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="getter" Type="System.Func&lt;System.Object,System.Object&gt;" />
        <Parameter Name="setter" Type="System.Action&lt;System.Object,System.Object&gt;" />
        <Parameter Name="propertyCustomAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;" />
        <Parameter Name="getterCustomAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;" />
        <Parameter Name="setterCustomAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyType"><span data-ttu-id="2302c-139">Тип создаваемого свойства.</span><span class="sxs-lookup"><span data-stu-id="2302c-139">The type of the property to create.</span></span></param>
        <param name="name"><span data-ttu-id="2302c-140">Имя создаваемого свойства.</span><span class="sxs-lookup"><span data-stu-id="2302c-140">The name of the property to create.</span></span></param>
        <param name="getter"><span data-ttu-id="2302c-141">Объект, представляющий метод доступа <see langword="get" /> свойства.</span><span class="sxs-lookup"><span data-stu-id="2302c-141">An object that represents the property's <see langword="get" /> accessor.</span></span></param>
        <param name="setter"><span data-ttu-id="2302c-142">Объект, представляющий метод доступа <see langword="set" /> свойства.</span><span class="sxs-lookup"><span data-stu-id="2302c-142">An object that represents the property's <see langword="set" /> accessor.</span></span></param>
        <param name="propertyCustomAttributes"><span data-ttu-id="2302c-143">Коллекция настраиваемых атрибутов для применения к свойству.</span><span class="sxs-lookup"><span data-stu-id="2302c-143">A collection of custom attributes to apply to the property.</span></span></param>
        <param name="getterCustomAttributes"><span data-ttu-id="2302c-144">Коллекция настраиваемых атрибутов для применения к методу доступа <see langword="get" /> свойства.</span><span class="sxs-lookup"><span data-stu-id="2302c-144">A collection of custom attributes to apply to the property's <see langword="get" /> accessor.</span></span></param>
        <param name="setterCustomAttributes"><span data-ttu-id="2302c-145">Коллекция настраиваемых атрибутов для применения к методу доступа <see langword="set" /> свойства.</span><span class="sxs-lookup"><span data-stu-id="2302c-145">A collection of custom attributes to apply to the property's <see langword="set" /> accessor.</span></span></param>
        <summary><span data-ttu-id="2302c-146">Создает объект, представляющий свойство, добавляемое к типу, для использования методом <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> и с использованием указанных настраиваемых атрибутов.</span><span class="sxs-lookup"><span data-stu-id="2302c-146">Creates an object that represents a property to be added to a type, to be used with the <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> method and using the specified custom attributes.</span></span></summary>
        <returns><span data-ttu-id="2302c-147">Объект, представляющий свойство.</span><span class="sxs-lookup"><span data-stu-id="2302c-147">An object that represents the property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2302c-148">Объекты, возвращаемые этим методом, не являются полными <xref:System.Reflection.PropertyInfo> объектов и должен использоваться только в контексте <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="2302c-148">Objects that are returned by this method are not complete <xref:System.Reflection.PropertyInfo> objects, and should be used only in the context of the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2302c-149">При переопределении в производном классе предоставляет измененную коллекцию настраиваемых атрибутов для заданного объекта, представленного в данном контексте отражения.</span><span class="sxs-lookup"><span data-stu-id="2302c-149">When overridden in a derived class, provides a modified collection of custom attributes for the specified object, as represented in this reflection context.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;object&gt; GetCustomAttributes (System.Reflection.MemberInfo member, System.Collections.Generic.IEnumerable&lt;object&gt; declaredAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetCustomAttributes(class System.Reflection.MemberInfo member, class System.Collections.Generic.IEnumerable`1&lt;object&gt; declaredAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCustomAttributes (member As MemberInfo, declaredAttributes As IEnumerable(Of Object)) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ member, System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ declaredAttributes);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : System.Reflection.MemberInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;&#xA;override this.GetCustomAttributes : System.Reflection.MemberInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;" Usage="customReflectionContext.GetCustomAttributes (member, declaredAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="declaredAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="2302c-150">Член, настраиваемые атрибуты которого будут возвращены.</span><span class="sxs-lookup"><span data-stu-id="2302c-150">The member whose custom attributes will be returned.</span></span></param>
        <param name="declaredAttributes"><span data-ttu-id="2302c-151">Коллекция атрибутов члена в текущем контексте.</span><span class="sxs-lookup"><span data-stu-id="2302c-151">A collection of the member's attributes in its current context.</span></span></param>
        <summary><span data-ttu-id="2302c-152">При переопределении в производном классе предоставляет список настраиваемых атрибутов для заданного члена, представленного в данном контексте отражения.</span><span class="sxs-lookup"><span data-stu-id="2302c-152">When overridden in a derived class, provides a list of custom attributes for the specified member, as represented in this reflection context.</span></span></summary>
        <returns><span data-ttu-id="2302c-153">Коллекция, представляющая настраиваемые атрибуты заданного члена в данном контексте отражения.</span><span class="sxs-lookup"><span data-stu-id="2302c-153">A collection that represents the custom attributes of the specified member in this reflection context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;object&gt; GetCustomAttributes (System.Reflection.ParameterInfo parameter, System.Collections.Generic.IEnumerable&lt;object&gt; declaredAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetCustomAttributes(class System.Reflection.ParameterInfo parameter, class System.Collections.Generic.IEnumerable`1&lt;object&gt; declaredAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCustomAttributes (parameter As ParameterInfo, declaredAttributes As IEnumerable(Of Object)) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ parameter, System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ declaredAttributes);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : System.Reflection.ParameterInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;&#xA;override this.GetCustomAttributes : System.Reflection.ParameterInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;" Usage="customReflectionContext.GetCustomAttributes (parameter, declaredAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="declaredAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="2302c-154">Параметр, настраиваемые атрибуты которого будут возвращены.</span><span class="sxs-lookup"><span data-stu-id="2302c-154">The parameter whose custom attributes will be returned.</span></span></param>
        <param name="declaredAttributes"><span data-ttu-id="2302c-155">Коллекция атрибутов параметра в текущем контексте.</span><span class="sxs-lookup"><span data-stu-id="2302c-155">A collection of the parameter's attributes in its current context.</span></span></param>
        <summary><span data-ttu-id="2302c-156">При переопределении в производном классе предоставляет список настраиваемых атрибутов для заданного параметра, представленного в данном контексте отражения.</span><span class="sxs-lookup"><span data-stu-id="2302c-156">When overridden in a derived class, provides a list of custom attributes for the specified parameter, as represented in this reflection context.</span></span></summary>
        <returns><span data-ttu-id="2302c-157">Коллекция, представляющая настраиваемые атрибуты заданного параметра в данном контексте отражения.</span><span class="sxs-lookup"><span data-stu-id="2302c-157">A collection that represents the custom attributes of the specified parameter in this reflection context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapAssembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly MapAssembly (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Assembly MapAssembly(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::Assembly ^ MapAssembly(System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="override this.MapAssembly : System.Reflection.Assembly -&gt; System.Reflection.Assembly" Usage="customReflectionContext.MapAssembly assembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="2302c-158">Внешнее представление сборки, которую следует представить в этом контексте.</span><span class="sxs-lookup"><span data-stu-id="2302c-158">The external representation of the assembly to represent in this context.</span></span></param>
        <summary><span data-ttu-id="2302c-159">Возвращает представление сборки в данном контексте отражения в виде объекта из другого контекста отражения.</span><span class="sxs-lookup"><span data-stu-id="2302c-159">Gets the representation, in this reflection context, of an assembly that is represented by an object from another reflection context.</span></span></summary>
        <returns><span data-ttu-id="2302c-160">Представление сборки в этом контексте отражения.</span><span class="sxs-lookup"><span data-stu-id="2302c-160">The representation of the assembly in this reflection context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapType">
      <MemberSignature Language="C#" Value="public override System.Reflection.TypeInfo MapType (System.Reflection.TypeInfo type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.TypeInfo MapType(class System.Reflection.TypeInfo type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MapType (type As TypeInfo) As TypeInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::TypeInfo ^ MapType(System::Reflection::TypeInfo ^ type);" />
      <MemberSignature Language="F#" Value="override this.MapType : System.Reflection.TypeInfo -&gt; System.Reflection.TypeInfo" Usage="customReflectionContext.MapType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.TypeInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Reflection.TypeInfo" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="2302c-161">Внешнее представление типа, который следует представить в этом контексте.</span><span class="sxs-lookup"><span data-stu-id="2302c-161">The external representation of the type to represent in this context.</span></span></param>
        <summary><span data-ttu-id="2302c-162">Возвращает представление типа в этом контексте отражения, представленного объектом из другого контекста отражения.</span><span class="sxs-lookup"><span data-stu-id="2302c-162">Gets the representation, in this reflection context, of a type represented by an object from another reflection context.</span></span></summary>
        <returns><span data-ttu-id="2302c-163">Представление типа в этом контексте отражения.</span><span class="sxs-lookup"><span data-stu-id="2302c-163">The representation of the type in this reflection context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>