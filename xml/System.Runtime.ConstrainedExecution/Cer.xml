<Type Name="Cer" FullName="System.Runtime.ConstrainedExecution.Cer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1eb1ed20f5e5985c10eeb6e49f20c175f5b80e35" /><Meta Name="ms.sourcegitcommit" Value="feb111e137a41d186aef01d83f04819d820520eb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/21/2019" /><Meta Name="ms.locfileid" Value="67307770" /></Metadata><TypeSignature Language="C#" Value="public enum Cer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed Cer extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ConstrainedExecution.Cer" />
  <TypeSignature Language="VB.NET" Value="Public Enum Cer" />
  <TypeSignature Language="C++ CLI" Value="public enum class Cer" />
  <TypeSignature Language="F#" Value="type Cer = " />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2fae6-101">Задает поведение метода при его вызове из области с ограничением исполнения.</span><span class="sxs-lookup"><span data-stu-id="2fae6-101">Specifies a method's behavior when called within a constrained execution region.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks
 
<span data-ttu-id="2fae6-102"><xref:System.Runtime.ConstrainedExecution.Cer> Перечисление определяет поведение метода, тип или сборка в область с ограничением исполнения (CER).</span><span class="sxs-lookup"><span data-stu-id="2fae6-102">The <xref:System.Runtime.ConstrainedExecution.Cer> enumeration specifies the behavior of a method, type, or assembly within a constrained execution region (CER).</span></span> <span data-ttu-id="2fae6-103">Используйте один из трех доступных значений для указания, что сущность будет успешным, не имеет сведений о CER-области, или (детерминированно) может сообщить об успехе или неудаче.</span><span class="sxs-lookup"><span data-stu-id="2fae6-103">Use one of the three available values to indicate that the entity will succeed, has no knowledge of a CER, or might (deterministically) be able to report success or failure.</span></span>  
  
<span data-ttu-id="2fae6-104">CER-области предоставляет гарантии, которые будут выполняться в области кода непрерывное выполнение даже при возникновении асинхронного исключения, например исключение out of memory прерванный поток или переполнение стека.</span><span class="sxs-lookup"><span data-stu-id="2fae6-104">A CER provides guarantees that the region of code will execute uninterrupted even if an asynchronous exception such as an aborted thread out-of-memory exception, or stack overflow is raised.</span></span>  
  
<span data-ttu-id="2fae6-105">Тем не менее `Cer.None` значение перечисления указывает, что метод, тип или сборка не поддерживает понятие CER-области.</span><span class="sxs-lookup"><span data-stu-id="2fae6-105">However, the `Cer.None` enumeration value indicates that the method, type, or assembly has no concept of a CER.</span></span> <span data-ttu-id="2fae6-106">Этот метод не использует преимущества гарантий для области ограниченного выполнения.</span><span class="sxs-lookup"><span data-stu-id="2fae6-106">It does not take advantage of CER guarantees.</span></span> <span data-ttu-id="2fae6-107">В этом случае подразумевается следующее:</span><span class="sxs-lookup"><span data-stu-id="2fae6-107">This implies the following:</span></span>

- <span data-ttu-id="2fae6-108">При возникновении исключительных условий метод может завершиться.</span><span class="sxs-lookup"><span data-stu-id="2fae6-108">In the face of exceptional conditions the method might fail.</span></span>  
  
- <span data-ttu-id="2fae6-109">Метод может или не отчет, который он не может (он является недетерминированным).</span><span class="sxs-lookup"><span data-stu-id="2fae6-109">The method might or might not report that it failed (it is non-deterministic).</span></span>  
  
- <span data-ttu-id="2fae6-110">Метод написан с CER-областях помните (это наиболее вероятный сценарий).</span><span class="sxs-lookup"><span data-stu-id="2fae6-110">The method is not written with CERs in mind (which is the most likely scenario).</span></span>  
  
<span data-ttu-id="2fae6-111">Если метод, тип или сборка не помечен явно для успешного выполнения, оно неявно отмечено как `Cer.None`.</span><span class="sxs-lookup"><span data-stu-id="2fae6-111">If a method, type, or assembly is not explicitly marked to succeed, it is implicitly marked as `Cer.None`.</span></span>  

## Examples

<span data-ttu-id="2fae6-112">В следующем примере кода демонстрируется использование <xref:System.Runtime.ConstrainedExecution.Cer> перечисления при указании области ограниченного выполнения для метода.</span><span class="sxs-lookup"><span data-stu-id="2fae6-112">The following code example demonstrates the use of the <xref:System.Runtime.ConstrainedExecution.Cer> enumeration when specifying a constrained execution region for a method.</span></span> <span data-ttu-id="2fae6-113">Данный пример кода является частью большего примера для <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A> конструктор.</span><span class="sxs-lookup"><span data-stu-id="2fae6-113">This code example is part of a larger example provided for the <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A> constructor.</span></span>  
  
[!code-csharp[System.Runtime.ConstrainedExecution#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.ConstrainedExecution/cs/program.cs#3)]
[!code-vb[System.Runtime.ConstrainedExecution#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.ConstrainedExecution/vb/program.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions" />
    <altmember cref="M:System.Runtime.CompilerServices.RuntimeHelpers.PrepareMethod(System.RuntimeMethodHandle)" />
    <related type="Article" href="https://msdn.microsoft.com/library/99354547-39c1-4b0b-8553-938e8f8d1808"><span data-ttu-id="2fae6-114">области с ограничением выполнения</span><span class="sxs-lookup"><span data-stu-id="2fae6-114">Constrained Execution Regions</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/cf624c1f-c160-46a1-bb2b-213587688da7"><span data-ttu-id="2fae6-115">Рекомендации по обеспечению надежности</span><span class="sxs-lookup"><span data-stu-id="2fae6-115">Reliability Best Practices</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="MayFail">
      <MemberSignature Language="C#" Value="MayFail" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Cer MayFail = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Cer.MayFail" />
      <MemberSignature Language="VB.NET" Value="MayFail" />
      <MemberSignature Language="C++ CLI" Value="MayFail" />
      <MemberSignature Language="F#" Value="MayFail = 1" Usage="System.Runtime.ConstrainedExecution.Cer.MayFail" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Cer</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2fae6-116">При возникновении исключительных условий метод может завершиться неудачно.</span><span class="sxs-lookup"><span data-stu-id="2fae6-116">In the face of exceptional conditions, the method might fail.</span></span> <span data-ttu-id="2fae6-117">В этом случае метод сообщит о удачном или неудачном завершении вызвавшему его методу.</span><span class="sxs-lookup"><span data-stu-id="2fae6-117">In this case, the method will report back to the calling method whether it succeeded or failed.</span></span> <span data-ttu-id="2fae6-118">Тело метода должно быть заключено в конструкцию CER, чтобы метод мог гарантированно передать возвращаемое значение.</span><span class="sxs-lookup"><span data-stu-id="2fae6-118">The method must have a CER around the method body to ensure that it can report the return value.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Cer None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Cer.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Runtime.ConstrainedExecution.Cer.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Cer</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2fae6-119">Метод, тип или сборка не поддерживает понятие CER.</span><span class="sxs-lookup"><span data-stu-id="2fae6-119">The method, type, or assembly has no concept of a CER.</span></span> <span data-ttu-id="2fae6-120">Этот метод не использует преимущества гарантий для области ограниченного выполнения.</span><span class="sxs-lookup"><span data-stu-id="2fae6-120">It does not take advantage of CER guarantees.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Success">
      <MemberSignature Language="C#" Value="Success" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Cer Success = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Cer.Success" />
      <MemberSignature Language="VB.NET" Value="Success" />
      <MemberSignature Language="C++ CLI" Value="Success" />
      <MemberSignature Language="F#" Value="Success = 2" Usage="System.Runtime.ConstrainedExecution.Cer.Success" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Cer</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2fae6-121">При возникновении исключительных условий, метод гарантированно завершится успешно.</span><span class="sxs-lookup"><span data-stu-id="2fae6-121">In the face of exceptional conditions, the method is guaranteed to succeed.</span></span> <span data-ttu-id="2fae6-122">Всегда следует заключать вызываемый метод в конструкцию CER, даже если он вызывается из области, где CER не используется.</span><span class="sxs-lookup"><span data-stu-id="2fae6-122">You should always construct a CER around the method that is called, even when it is called from within a non-CER region.</span></span> <span data-ttu-id="2fae6-123">Метод завершается успешно, если он выполняет то, для чего предназначен.</span><span class="sxs-lookup"><span data-stu-id="2fae6-123">A method is successful if it accomplishes what is intended.</span></span> <span data-ttu-id="2fae6-124">Например, если пометить свойство <see cref="P:System.Collections.ArrayList.Count" /> атрибутом <c>ReliabilityContractAttribute(Cer.Success)</c>, это подразумевает, что когда свойство выполняется в области CER, оно всегда возвращает число элементов в <see cref="T:System.Collections.ArrayList" /> и никогда не оставляет внутренние поля неопределенными.</span><span class="sxs-lookup"><span data-stu-id="2fae6-124">For example, marking <see cref="P:System.Collections.ArrayList.Count" /> with <c>ReliabilityContractAttribute(Cer.Success)</c> implies that when it is run under a CER, it always returns a count of the number of elements in the <see cref="T:System.Collections.ArrayList" /> and it can never leave the internal fields in an undetermined state.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>