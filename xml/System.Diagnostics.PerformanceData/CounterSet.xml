<Type Name="CounterSet" FullName="System.Diagnostics.PerformanceData.CounterSet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1a889d1e2fe1c5c4ae6847b290f2a5d1079b1be3" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70431890" /></Metadata><TypeSignature Language="C#" Value="public class CounterSet : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CounterSet extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.PerformanceData.CounterSet" />
  <TypeSignature Language="VB.NET" Value="Public Class CounterSet&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CounterSet : IDisposable" />
  <TypeSignature Language="F#" Value="type CounterSet = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Идентифицирует набор логических счетчиков.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите <xref:System.Diagnostics.PerformanceData.CounterSet.Dispose%2A> метод по завершении удаления регистрации поставщика и освобождения всех управляемых и неуправляемых ресурсов.  
  
   
  
## Examples  
 Пример см. в разделе <xref:System.Diagnostics.PerformanceData>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CounterSet (Guid providerGuid, Guid counterSetGuid, System.Diagnostics.PerformanceData.CounterSetInstanceType instanceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid providerGuid, valuetype System.Guid counterSetGuid, valuetype System.Diagnostics.PerformanceData.CounterSetInstanceType instanceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceData.CounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerGuid As Guid, counterSetGuid As Guid, instanceType As CounterSetInstanceType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CounterSet(Guid providerGuid, Guid counterSetGuid, System::Diagnostics::PerformanceData::CounterSetInstanceType instanceType);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceData.CounterSet : Guid * Guid * System.Diagnostics.PerformanceData.CounterSetInstanceType -&gt; System.Diagnostics.PerformanceData.CounterSet" Usage="new System.Diagnostics.PerformanceData.CounterSet (providerGuid, counterSetGuid, instanceType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="providerGuid" Type="System.Guid" />
        <Parameter Name="counterSetGuid" Type="System.Guid" />
        <Parameter Name="instanceType" Type="System.Diagnostics.PerformanceData.CounterSetInstanceType" />
      </Parameters>
      <Docs>
        <param name="providerGuid">Идентификатор GUID, который уникально идентифицирует поставщика данных счетчика. Используйте идентификатор GUID, указанный в манифесте.</param>
        <param name="counterSetGuid">Идентификатор GUID, который уникально идентифицирует набор счетчиков поставщика. Используйте идентификатор GUID, указанный в манифесте.</param>
        <param name="instanceType">Идентифицирует тип набора счетчиков, например, является ли набор счетчиков набором для одного или нескольких экземпляров.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.PerformanceData.CounterSet" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Регистрирует поставщик. При вызове <xref:System.Diagnostics.PerformanceData.CounterSet.Dispose%2A> метода регистрация удаляется.  
  
   
  
## Examples  
 Пример см. в разделе <xref:System.Diagnostics.PerformanceData>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InsufficientMemoryException">Недостаточно памяти для выполнения операции.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Не поддерживается в версиях, предшествующих Windows Vista.</exception>
        <exception cref="T:System.ArgumentException">Один из параметров имеет значение NULL или недопустимое значение.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Сбой вызова базовой функции Win32.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddCounter">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет счетчик в набор счетчиков.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddCounter">
      <MemberSignature Language="C#" Value="public void AddCounter (int counterId, System.Diagnostics.PerformanceData.CounterType counterType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCounter(int32 counterId, valuetype System.Diagnostics.PerformanceData.CounterType counterType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCounter(int counterId, System::Diagnostics::PerformanceData::CounterType counterType);" />
      <MemberSignature Language="F#" Value="member this.AddCounter : int * System.Diagnostics.PerformanceData.CounterType -&gt; unit" Usage="counterSet.AddCounter (counterId, counterType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterId" Type="System.Int32" />
        <Parameter Name="counterType" Type="System.Diagnostics.PerformanceData.CounterType" />
      </Parameters>
      <Docs>
        <param name="counterId">Идентифицирует счетчик. Для идентификации счетчика используйте значение, указанное в манифесте.</param>
        <param name="counterType">Идентифицирует тип счетчика. Тип счетчика определяет способ вычисления, усреднения и отображения данных счетчиков.</param>
        <summary>Добавляет в набор счетчиков счетчик с указанным идентификатором и типом.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Добавлять счетчики в набор счетчиков следует перед созданием экземпляра набора счетчиков.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Идентификатор счетчика уже существует в наборе или имеет отрицательное значение, или тип счетчика имеет значение NULL или недопустимое значение.</exception>
        <exception cref="T:System.InvalidOperationException">После создания экземпляра набора счетчиков невозможно добавить счетчик в набор счетчиков.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddCounter">
      <MemberSignature Language="C#" Value="public void AddCounter (int counterId, System.Diagnostics.PerformanceData.CounterType counterType, string counterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCounter(int32 counterId, valuetype System.Diagnostics.PerformanceData.CounterType counterType, string counterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCounter(int counterId, System::Diagnostics::PerformanceData::CounterType counterType, System::String ^ counterName);" />
      <MemberSignature Language="F#" Value="member this.AddCounter : int * System.Diagnostics.PerformanceData.CounterType * string -&gt; unit" Usage="counterSet.AddCounter (counterId, counterType, counterName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterId" Type="System.Int32" />
        <Parameter Name="counterType" Type="System.Diagnostics.PerformanceData.CounterType" />
        <Parameter Name="counterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterId">Идентифицирует счетчик. Для идентификации счетчика используйте значение, указанное в манифесте.</param>
        <param name="counterType">Идентифицирует тип счетчика. Тип счетчика определяет способ вычисления, усреднения и отображения данных счетчиков.</param>
        <param name="counterName">Имя счетчика. Это имя можно использовать для индексации счетчика в экземпляре набора счетчиков. (См. раздел <see cref="P:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item(System.String)" />).</param>
        <summary>Добавляет в набор счетчиков счетчик с указанным идентификатором, типом и отображаемым именем.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Добавлять счетчики в набор счетчиков следует перед созданием экземпляра набора счетчиков.  
  
   
  
## Examples  
 Пример см. в разделе <xref:System.Diagnostics.PerformanceData>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Идентификатор счетчика уже существует в наборе или имеет отрицательное значение, или тип счетчика имеет значение NULL или недопустимое значение.</exception>
        <exception cref="T:System.InvalidOperationException">После создания экземпляра набора счетчиков невозможно добавить счетчик в набор счетчиков.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCounterSetInstance">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceData.CounterSetInstance CreateCounterSetInstance (string instanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.PerformanceData.CounterSetInstance CreateCounterSetInstance(string instanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCounterSetInstance (instanceName As String) As CounterSetInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::PerformanceData::CounterSetInstance ^ CreateCounterSetInstance(System::String ^ instanceName);" />
      <MemberSignature Language="F#" Value="member this.CreateCounterSetInstance : string -&gt; System.Diagnostics.PerformanceData.CounterSetInstance" Usage="counterSet.CreateCounterSetInstance instanceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceData.CounterSetInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">Имя экземпляра. Это имя должно быть уникальным.</param>
        <summary>Создает экземпляр набора счетчиков.</summary>
        <returns>Экземпляр набора счетчиков, в котором будут содержаться данные счетчиков.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызывайте этот метод один раз для наборов счетчиков с одним экземпляром и один или несколько раз для наборов счетчиков с несколькими экземплярами.  
  
 Поставщик определяет время создания экземпляра. Если данные счетчика являются более статическими, поставщик может создать экземпляр во время инициализации. Например, число процессоров на компьютере будет считаться статическим, поэтому поставщик, предоставляющий данные счетчиков для процессоров, может создать экземпляр для каждого процессора на компьютере во время инициализации. Для более динамических счетчиков, таких как счетчики диска или процесса, поставщики создают новые экземпляры в ответ на добавление нового USB-устройства или создание нового процесса.  
  
 Поставщик должен постоянно оставаться в состоянии данных счетчика.  
  
   
  
## Examples  
 Пример см. в разделе <xref:System.Diagnostics.PerformanceData>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Имя экземпляра имеет значение NULL.</exception>
        <exception cref="T:System.InvalidOperationException">Добавлять счетчики в набор счетчиков следует перед созданием экземпляра набора счетчиков.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Освобождает ресурсы, используемые этим объектом.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceData.CounterSet.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="counterSet.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Освобождает все неуправляемые ресурсы, используемые этим объектом.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="counterSet.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Значение <see langword="True" />, если вызов был совершен из метода Dispose; значение <see langword="False" />, если вызов был совершен из метода завершения.</param>
        <summary>Освобождает все неуправляемые ресурсы, используемые этим объектом, а при необходимости освобождает и управляемые ресурсы.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CounterSet ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceData.CounterSet.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!CounterSet ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="counterSet.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Освобождает ресурсы, перед тем как объект будет уничтожен во время сборки мусора.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается автоматически средой выполнения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
