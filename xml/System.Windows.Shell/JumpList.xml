<Type Name="JumpList" FullName="System.Windows.Shell.JumpList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8f5f53b1cb8404a4c66b015c4865e37547cd9142" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65004098" /></Metadata><TypeSignature Language="C#" Value="public sealed class JumpList : System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed JumpList extends System.Object implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Shell.JumpList" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class JumpList&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class JumpList sealed : System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type JumpList = class&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("JumpItems")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет список элементов и задач, отображаемых на кнопке панели задач Windows 7 в виде меню.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[win7](~/includes/win7-md.md)] Задач предоставляет расширенные функциональные возможности для запуска программ непосредственно из кнопки панели задач с помощью списка переходов. Списки переходов также используются в [!INCLUDE[win7](~/includes/win7-md.md)] меню "Пуск". В списке переходов доступ, щелкните правой кнопкой мыши кнопку на панели задач или щелкните стрелку рядом с программой, в меню "Пуск". Дополнительные сведения о списки переходов, см. в разделе [задач](https://go.microsoft.com/fwlink/?LinkId=178478) части инструкции взаимодействия пользователя Windows.  
  
 <xref:System.Windows.Shell.JumpList> Класс предоставляет управляемую оболочку для функциональных возможностей списка переходов в [!INCLUDE[win7](~/includes/win7-md.md)] панели задач и управляет ими данные, передаваемые [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] оболочки. Функциональные возможности, предоставляемые <xref:System.Windows.Shell.JumpList> класс не доступны в версиях [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] более ранней, чем [!INCLUDE[win7](~/includes/win7-md.md)]. Приложения, использующие <xref:System.Windows.Shell.JumpList> класса будет выполняться в других версиях [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)], но не будут доступны в список переходов. Дополнительные сведения об оболочке Windows и собственные API списка переходов, см. в разделе [расширения панели задач](https://go.microsoft.com/fwlink/?LinkId=178479).  
  
 На следующем рисунке показан переходов списка для Windows мультимедийного проигрывателя, с элементами в **задачи** и **частые** категории.  
  
 ![Список переходов проигрывателя Windows Media](~/add/media/wpfshell-jumplist.png "список переходов проигрывателя Windows Media")  
Список переходов проигрывателя Windows Media  
  
## <a name="configuring-a-jump-list"></a>Настройка списка переходов  
 Списки переходов может содержать два типа элементов, <xref:System.Windows.Shell.JumpTask> и <xref:System.Windows.Shell.JumpPath>. Объект <xref:System.Windows.Shell.JumpTask> ссылку на программы и <xref:System.Windows.Shell.JumpPath> ссылку на файл. Можно визуально отделить элементы в список переходов, создав <xref:System.Windows.Shell.JumpTask> , не имеющим <xref:System.Windows.Shell.JumpTask.Title%2A> и <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> указанного. Этот пустой <xref:System.Windows.Shell.JumpTask> будет отображаться как горизонтальную линию в списке переходов.  
  
> [!NOTE]
>  Если тип файла, указанный в <xref:System.Windows.Shell.JumpPath> не зарегистрировано приложение, файл не будет отображаться в списке переходов. Например, если вы добавите <xref:System.Windows.Shell.JumpPath> , указывающего на txt-файл, приложение должно быть зарегистрировано для обработки TXT-файлов. Дополнительные сведения см. в разделе [введение сопоставления файлов](https://go.microsoft.com/fwlink/?LinkId=178480).  
  
 Элементы помещаются в категории в <xref:System.Windows.Shell.JumpList>. По умолчанию <xref:System.Windows.Shell.JumpItem> отображается в **задачи** категории. Кроме того, можно указать <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> для <xref:System.Windows.Shell.JumpItem>.  
  
 Можно указать ли стандартный **последние** и **частые** категории отображаются в <xref:System.Windows.Shell.JumpList> , задав <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> и <xref:System.Windows.Shell.JumpList.ShowFrequentCategory%2A> свойства. Содержимое этих категорий управляются [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] оболочки. Так как эти категории могут содержать большую часть тех же данных, вы обычно отображают одно из них в вашей <xref:System.Windows.Shell.JumpList>, но не оба. [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] автоматически управляет недавно использовавшихся элементов, если они открываются посредством общего файлового диалогового или используемую для открытия приложения с помощью сопоставления типов файлов. Когда элемент осуществляется с помощью списка переходов, можно уведомить [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] shell, чтобы добавить элемент в **последние** категории, вызвав <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A> метод.  
  
## <a name="applying-a-jump-list-to-the-windows-shell"></a>Применение списка переходов к оболочке Windows  
 Не удается прямой доступ к списку переходов в оболочке или прочесть его содержимое в <xref:System.Windows.Shell.JumpList> класса. Вместо этого <xref:System.Windows.Shell.JumpList> класс предоставляет представление в списке переходов, который может работать с, а затем применить к [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] оболочки. Как правило, создается <xref:System.Windows.Shell.JumpList> и задайте для него один раз, при первом запуске приложения. Тем не менее, можно изменить или заменить <xref:System.Windows.Shell.JumpList> во время выполнения.  
  
 Если вы задали <xref:System.Windows.Shell.JumpList> свойства, необходимо применить <xref:System.Windows.Shell.JumpList> в оболочку Windows, прежде чем ее содержимое отображаются в списке переходов панели задач. Это выполняется автоматически при <xref:System.Windows.Shell.JumpList> впервые присоединяется к приложению, в XAML или в вызове <xref:System.Windows.Shell.JumpList.SetJumpList%2A> метод. Если вы измените содержимое <xref:System.Windows.Shell.JumpList> во время выполнения, необходимо вызвать <xref:System.Windows.Shell.JumpList.Apply%2A> метод, применяемый к оболочке Windows текущего содержимого.  
  
## <a name="setting-a-jump-list-in-xaml"></a>Установка списка переходов в XAML  
 Объект <xref:System.Windows.Shell.JumpList> автоматически не присоединен к <xref:System.Windows.Application> объекта. Присоединении <xref:System.Windows.Shell.JumpList> для <xref:System.Windows.Application> объекта в XAML с помощью синтаксиса присоединенного свойства. <xref:System.Windows.Shell.JumpList> Класс реализует <xref:System.ComponentModel.ISupportInitialize> интерфейса поддерживают объявление XAML <xref:System.Windows.Shell.JumpList>. Если <xref:System.Windows.Shell.JumpList> объявляется в XAML и прикрепленные к текущему <xref:System.Windows.Application>, он автоматически применяется к [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] оболочки, когда <xref:System.Windows.Shell.JumpList> инициализируется.  
  
## <a name="setting-and-modifying-a-jump-list-in-code"></a>Установка и изменение списка переходов в коде  
 Присоединении <xref:System.Windows.Shell.JumpList> для <xref:System.Windows.Application> объект в коде путем вызова статического <xref:System.Windows.Shell.JumpList.SetJumpList%2A> метод. Это также относится <xref:System.Windows.Shell.JumpList> для [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] оболочки.  
  
 Чтобы изменить <xref:System.Windows.Shell.JumpList> во время выполнения вызова <xref:System.Windows.Shell.JumpList.GetJumpList%2A> метод для получения <xref:System.Windows.Shell.JumpList> , сейчас подключен к <xref:System.Windows.Application>. После изменения свойства <xref:System.Windows.Shell.JumpList>, необходимо вызвать <xref:System.Windows.Shell.JumpList.Apply%2A> метод, чтобы применить изменения к оболочке Windows.  
  
> [!NOTE]
>  Обычно создают один <xref:System.Windows.Shell.JumpList> , присоединенный к <xref:System.Windows.Application> и применяются к [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] оболочки. Тем не менее, вы можете создать несколько <xref:System.Windows.Shell.JumpList> объектов. Только один <xref:System.Windows.Shell.JumpList> одновременно могут применяться к [!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)] оболочки и только один <xref:System.Windows.Shell.JumpList> одновременно может быть связано с <xref:System.Windows.Application>. .NET Framework не требуют эти же <xref:System.Windows.Shell.JumpList>.  
  
> [!NOTE]
>  Этот класс содержит запрос компоновки, на уровне класса, который применяется ко всем элементам. Объект <xref:System.Security.SecurityException> возникает, если непосредственный вызывающий не имеет разрешения полного доверия. Дополнительные сведения о требованиях безопасности см. в разделе [требования связывания](~/docs/framework/misc/link-demands.md) и [требования наследования](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100)).  
  
   
  
## Examples  
 Пример приложения с помощью списка переходов. Приложение имеет три кнопки, позволяющие добавить задачу в текущий список переходов, очистить содержимое списка переходов и применяются к приложению новый список переходов.  
  
 В следующем примере показан способ объявления <xref:System.Windows.Shell.JumpList> в разметке. <xref:System.Windows.Shell.JumpList> Содержит два <xref:System.Windows.Shell.JumpTask> ссылки и один <xref:System.Windows.Shell.JumpPath>. Применение <xref:System.Windows.Shell.JumpPath> в оболочку завершится ошибкой, если приложение не зарегистрировано для обработки расширения имени файла .txt.  
  
 [!code-xaml[Shell_JumpListSample#000](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#000)]  
  
 В следующем примере показано со страницы с выделенным кодом для `App.xaml`. Этот код обрабатывает <xref:System.Windows.Shell.JumpList.JumpItemsRejected> и <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> события.  
  
 [!code-csharp[Shell_JumpListSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml.cs#100)]  
  
 В следующем примере разметку, используемую для создания пользовательского интерфейса приложения.  
  
 [!code-xaml[Shell_JumpListSample#300](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml#300)]  
  
 В следующем примере показано со страницы с выделенным кодом для `MainWindow.xaml`. Этот код демонстрирует изменить, удалить и создать <xref:System.Windows.Shell.JumpList> в процедурном коде. Для нового списка переходов, статический <xref:System.Windows.Shell.JumpList.SetJumpList%2A> вызывается метод, чтобы связать <xref:System.Windows.Shell.JumpList> с текущим приложением и применить <xref:System.Windows.Shell.JumpList> в оболочку Windows.  
  
 [!code-csharp[Shell_JumpListSample#200](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#200)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">для полного доступа для изменения оболочки Windows. Действие по обеспечению безопасности: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Shell.JumpList" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JumpList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JumpList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Shell.JumpList" />.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">Требует полного доверия для непосредственного вызывающего объекта. Этот член не может использоваться частично доверенным или прозрачным кодом.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JumpList (System.Collections.Generic.IEnumerable&lt;System.Windows.Shell.JumpItem&gt; items, bool showFrequent, bool showRecent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Shell.JumpItem&gt; items, bool showFrequent, bool showRecent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As IEnumerable(Of JumpItem), showFrequent As Boolean, showRecent As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JumpList(System::Collections::Generic::IEnumerable&lt;System::Windows::Shell::JumpItem ^&gt; ^ items, bool showFrequent, bool showRecent);" />
      <MemberSignature Language="F#" Value="new System.Windows.Shell.JumpList : seq&lt;System.Windows.Shell.JumpItem&gt; * bool * bool -&gt; System.Windows.Shell.JumpList" Usage="new System.Windows.Shell.JumpList (items, showFrequent, showRecent)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Shell.JumpItem&gt;" />
        <Parameter Name="showFrequent" Type="System.Boolean" />
        <Parameter Name="showRecent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="items">Коллекция <see cref="T:System.Windows.Shell.JumpItem" /> объектов, отображаемых в списке переходов.</param>
        <param name="showFrequent">Значение, указывающее, отображаются ли часто используемые элементы в списке переходов.</param>
        <param name="showRecent">Значение, указывающее, отображаются ли недавно использовавшиеся элементы в списке переходов.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Shell.JumpList" /> с заданными параметрами.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **Последние** и **частые** категории часто содержат множество же элементы перехода. В результате приложения обычно отображают либо **последние** или **частые** категории в списке переходов, но не оба.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">Требует полного доверия для непосредственного вызывающего объекта. Этот член не может использоваться частично доверенным или прозрачным кодом.</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.JumpItems" />
        <altmember cref="P:System.Windows.Shell.JumpList.ShowFrequentCategory" />
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddToRecentCategory">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет указанный элемент в категорию **Последние** списка переходов.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddToRecentCategory">
      <MemberSignature Language="C#" Value="public static void AddToRecentCategory (string itemPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddToRecentCategory(string itemPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddToRecentCategory (itemPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddToRecentCategory(System::String ^ itemPath);" />
      <MemberSignature Language="F#" Value="static member AddToRecentCategory : string -&gt; unit" Usage="System.Windows.Shell.JumpList.AddToRecentCategory itemPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemPath">Путь для добавления в список переходов.</param>
        <summary>Добавляет указанный путь к элементу в категорию **Последние** списка переходов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Содержание **последние** категория управляет оболочка Windows. Чтобы отобразить недавно использовавшиеся элементы в списке переходов, задайте <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> свойства `true`.  
  
 Можно вызвать <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.String%29> метод для запроса, что оболочка Windows добавить путь к элементу для **последние** список элементов. Если приложение не зарегистрировано для обработки типа файла элемента, она не будет отображаться в **последние** списка и вызовы <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.String%29> завершится ошибкой без сообщений.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">Требует полного доверия для непосредственного вызывающего объекта. Этот член не может использоваться частично доверенным или прозрачным кодом.</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <Member MemberName="AddToRecentCategory">
      <MemberSignature Language="C#" Value="public static void AddToRecentCategory (System.Windows.Shell.JumpPath jumpPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddToRecentCategory(class System.Windows.Shell.JumpPath jumpPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddToRecentCategory(System::Windows::Shell::JumpPath ^ jumpPath);" />
      <MemberSignature Language="F#" Value="static member AddToRecentCategory : System.Windows.Shell.JumpPath -&gt; unit" Usage="System.Windows.Shell.JumpList.AddToRecentCategory jumpPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jumpPath" Type="System.Windows.Shell.JumpPath" />
      </Parameters>
      <Docs>
        <param name="jumpPath"><see cref="T:System.Windows.Shell.JumpPath" /> Для добавления в список переходов.</param>
        <summary>Добавляет указанный путь перехода в категорию **Последние** списка переходов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Содержание **последние** категория управляет оболочка Windows. Чтобы отобразить недавно использовавшиеся элементы в списке переходов, задайте <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> свойства `true`.  
  
 Можно вызвать <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpPath%29> метод для запроса, что оболочка Windows добавить указанный путь перехода к **последние** список элементов. Если приложение не зарегистрировано для обработки типа файла элемента, она не будет отображаться в **последние** списка и вызовы <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpPath%29> завершится ошибкой без сообщений.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">Требует полного доверия для непосредственного вызывающего объекта. Этот член не может использоваться частично доверенным или прозрачным кодом.</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <Member MemberName="AddToRecentCategory">
      <MemberSignature Language="C#" Value="public static void AddToRecentCategory (System.Windows.Shell.JumpTask jumpTask);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddToRecentCategory(class System.Windows.Shell.JumpTask jumpTask) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddToRecentCategory(System::Windows::Shell::JumpTask ^ jumpTask);" />
      <MemberSignature Language="F#" Value="static member AddToRecentCategory : System.Windows.Shell.JumpTask -&gt; unit" Usage="System.Windows.Shell.JumpList.AddToRecentCategory jumpTask" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jumpTask" Type="System.Windows.Shell.JumpTask" />
      </Parameters>
      <Docs>
        <param name="jumpTask"><see cref="T:System.Windows.Shell.JumpTask" /> Для добавления в список переходов.</param>
        <summary>Добавляет указанную задачу перехода в категорию **Последние** списка переходов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Содержание **последние** категория управляет оболочка Windows. Чтобы отобразить недавно использовавшиеся элементы в списке переходов, задайте <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> свойства `true`.  
  
 Можно вызвать <xref:System.Windows.Shell.JumpList.AddToRecentCategory%28System.Windows.Shell.JumpTask%29> метод для запроса, что оболочка Windows добавить указанную задачу перехода к **последние** список элементов.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">Требует полного доверия для непосредственного вызывающего объекта. Этот член не может использоваться частично доверенным или прозрачным кодом.</permission>
        <altmember cref="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public void Apply ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Apply() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.Apply" />
      <MemberSignature Language="VB.NET" Value="Public Sub Apply ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Apply();" />
      <MemberSignature Language="F#" Value="member this.Apply : unit -&gt; unit" Usage="jumpList.Apply " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Отправляет <see cref="T:System.Windows.Shell.JumpList" /> в оболочку Windows в ее текущем состоянии.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Shell.JumpList.Apply%2A> Метод отправляет содержимое <xref:System.Windows.Shell.JumpList> в оболочку Windows в ее текущем состоянии. После завершения этого вызова <xref:System.Windows.Shell.JumpList.JumpItems%2A> свойство изменяется должен содержать только элементы, которые оболочке Windows успешно добавлен в его список переходов панели задач. Список удаленных элементов можно обращаться обработчики событий для <xref:System.Windows.Shell.JumpList.JumpItemsRejected> и <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> события.  
  
   
  
## Examples  
 В следующем примере показано, как для получения текущего <xref:System.Windows.Shell.JumpList> и очистить <xref:System.Windows.Shell.JumpList.JumpItems%2A> коллекции. <xref:System.Windows.Shell.JumpList.Apply%2A> Затем вызывается метод для применения <xref:System.Windows.Shell.JumpList> изменения в оболочке Windows. Этот пример является частью большего примера, доступных в <xref:System.Windows.Shell.JumpList> Общие сведения о классе.  
  
 [!code-csharp[Shell_JumpListSample#230](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#230)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.Shell.JumpList" /> Не инициализирован полностью.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">Требует полного доверия для непосредственного вызывающего объекта. Этот член не может использоваться частично доверенным или прозрачным кодом.</permission>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="jumpList.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сигнализирует о начале <see cref="T:System.Windows.Shell.JumpList" /> инициализации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Shell.JumpList> Класс реализует <xref:System.ComponentModel.ISupportInitialize> интерфейса поддерживают объявление XAML <xref:System.Windows.Shell.JumpList>. <xref:System.Windows.Shell.JumpList.BeginInit%2A> Метод вызывается только при <xref:System.Windows.Shell.JumpList> объявляется в XAML и подключенный к <xref:System.Windows.Application> с помощью синтаксиса присоединенного свойства. Этот метод не вызывается из кода.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Этот вызов <see cref="M:System.Windows.Shell.JumpList.BeginInit" /> вложен в предыдущий вызов <see cref="M:System.Windows.Shell.JumpList.BeginInit" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="jumpList.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сообщает о конце <see cref="T:System.Windows.Shell.JumpList" /> инициализации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Shell.JumpList> Класс реализует <xref:System.ComponentModel.ISupportInitialize> интерфейса поддерживают объявление XAML <xref:System.Windows.Shell.JumpList>. <xref:System.Windows.Shell.JumpList.EndInit%2A> Метод вызывается только при <xref:System.Windows.Shell.JumpList> объявляется в XAML и подключенный к <xref:System.Windows.Application> с помощью синтаксиса присоединенного свойства. Этот метод не вызывается из кода.  
  
 <xref:System.Windows.Shell.JumpList.EndInit%2A> Метод имеет тот же эффект, что <xref:System.Windows.Shell.JumpList.Apply%2A> метод. <xref:System.Windows.Shell.JumpList.EndInit%2A> отправляет содержимое <xref:System.Windows.Shell.JumpList> в оболочку Windows в ее текущем состоянии. После завершения этого вызова <xref:System.Windows.Shell.JumpList.JumpItems%2A> свойство изменяется должен содержать только элементы, которые оболочке Windows успешно добавлен в список переходов. Список удаленных элементов можно обращаться обработчики событий для <xref:System.Windows.Shell.JumpList.JumpItemsRejected> и <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> события.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Этот вызов <see cref="M:System.Windows.Shell.JumpList.EndInit" /> не объединен с вызовом <see cref="M:System.Windows.Shell.JumpList.BeginInit" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetJumpList">
      <MemberSignature Language="C#" Value="public static System.Windows.Shell.JumpList GetJumpList (System.Windows.Application application);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Shell.JumpList GetJumpList(class System.Windows.Application application) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Shell::JumpList ^ GetJumpList(System::Windows::Application ^ application);" />
      <MemberSignature Language="F#" Value="static member GetJumpList : System.Windows.Application -&gt; System.Windows.Shell.JumpList" Usage="System.Windows.Shell.JumpList.GetJumpList application" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Shell.JumpList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.Windows.Application" />
      </Parameters>
      <Docs>
        <param name="application">Приложение, связанное с <see cref="T:System.Windows.Shell.JumpList" />.</param>
        <summary>Возвращает <see cref="T:System.Windows.Shell.JumpList" /> объект, связанный с приложением.</summary>
        <returns><see cref="T:System.Windows.Shell.JumpList" /> Объект, связанный с указанным приложением.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно вызвать <xref:System.Windows.Shell.JumpList.GetJumpList%2A> метод для получения <xref:System.Windows.Shell.JumpList> сопоставленные <xref:System.Windows.Application>. .NET Framework не требует данную <xref:System.Windows.Shell.JumpList> , применяемое в настоящий момент в оболочку Windows.  
  
   
  
## Examples  
 В следующем примере показано, как получить <xref:System.Windows.Shell.JumpList> связанный с текущим приложением. Объект <xref:System.Windows.Shell.JumpTask> добавляется <xref:System.Windows.Shell.JumpList.JumpItems%2A> коллекции и добавляемый **последние** категории. <xref:System.Windows.Shell.JumpList.Apply%2A> Вызывается метод, чтобы применить обновленные <xref:System.Windows.Shell.JumpList> в оболочку Windows. Этот пример является частью большего примера, доступных в <xref:System.Windows.Shell.JumpList> Общие сведения о классе.  
  
 [!code-csharp[Shell_JumpListSample#240](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#240)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JumpItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Windows.Shell.JumpItem&gt; JumpItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class System.Windows.Shell.JumpItem&gt; JumpItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpList.JumpItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JumpItems As List(Of JumpItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::Windows::Shell::JumpItem ^&gt; ^ JumpItems { System::Collections::Generic::List&lt;System::Windows::Shell::JumpItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.JumpItems : System.Collections.Generic.List&lt;System.Windows.Shell.JumpItem&gt;" Usage="System.Windows.Shell.JumpList.JumpItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Windows.Shell.JumpItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию <see cref="T:System.Windows.Shell.JumpItem" /> объектов, отображаемых в списке переходов.</summary>
        <value>Коллекция <see cref="T:System.Windows.Shell.JumpItem" /> объектов, отображаемых в списке переходов. По умолчанию является пустой коллекцией.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Списки переходов может содержать два типа элементов, <xref:System.Windows.Shell.JumpTask> и <xref:System.Windows.Shell.JumpPath>. Объект <xref:System.Windows.Shell.JumpTask> ссылку на программы и <xref:System.Windows.Shell.JumpPath> ссылку на файл.  
  
 Когда <xref:System.Windows.Shell.JumpList> создания <xref:System.Windows.Shell.JumpList.JumpItems%2A> , возвращается пустая коллекция. Можно добавить любой <xref:System.Windows.Shell.JumpTask> или <xref:System.Windows.Shell.JumpPath> объектов в коллекцию. Коллекция будет содержать только элементы, которые были добавлены в программе. После <xref:System.Windows.Shell.JumpList> передан в оболочку Windows успешного вызова либо <xref:System.Windows.Shell.JumpList.EndInit%2A> или <xref:System.Windows.Shell.JumpList.Apply%2A> методы, <xref:System.Windows.Shell.JumpList.JumpItems%2A> коллекция будет содержать только элементы, которые были добавлены в список переходов панели задач. Элементы, которые не были успешно добавлены удаляются из <xref:System.Windows.Shell.JumpList.JumpItems%2A> коллекции. Список удаленных элементов можно обращаться обработчики событий для <xref:System.Windows.Shell.JumpList.JumpItemsRejected> и <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> события.  
  
   
  
## Examples  
 В следующем примере показано, как для получения текущего <xref:System.Windows.Shell.JumpList> и очистить <xref:System.Windows.Shell.JumpList.JumpItems%2A> коллекции. <xref:System.Windows.Shell.JumpList.Apply%2A> Затем вызывается метод для применения <xref:System.Windows.Shell.JumpList> изменения в оболочке Windows. Этот пример является частью большего примера, доступных в <xref:System.Windows.Shell.JumpList> Общие сведения о классе.  
  
 [!code-csharp[Shell_JumpListSample#230](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#230)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JumpItemsRejected">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt; JumpItemsRejected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Shell.JumpItemsRejectedEventArgs&gt; JumpItemsRejected" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Shell.JumpList.JumpItemsRejected" />
      <MemberSignature Language="VB.NET" Value="Public Event JumpItemsRejected As EventHandler(Of JumpItemsRejectedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Shell::JumpItemsRejectedEventArgs ^&gt; ^ JumpItemsRejected;" />
      <MemberSignature Language="F#" Value="member this.JumpItemsRejected : EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt; " Usage="member this.JumpItemsRejected : System.EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Shell.JumpItemsRejectedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, когда элементы не удалось добавить в список переходов оболочкой Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 После содержимого параметра <xref:System.Windows.Shell.JumpList> применяются к оболочке Windows <xref:System.Windows.Shell.JumpList.JumpItems%2A> свойство изменяется должен содержать только элементы, которые оболочке Windows успешно добавлен в список переходов. Список удаленных элементов можно обращаться обработчики событий для <xref:System.Windows.Shell.JumpList.JumpItemsRejected> и <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> события.  
  
   
  
## Examples  
 В следующем примере показано, как обрабатывать <xref:System.Windows.Shell.JumpList.JumpItemsRejected> событий для отображения отклоненных элементов в окне сообщения. Этот пример является частью большего примера, доступных в <xref:System.Windows.Shell.JumpList> Общие сведения о классе.  
  
 [!code-csharp[Shell_JumpListSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml.cs#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JumpItemsRemovedByUser">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt; JumpItemsRemovedByUser;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Shell.JumpItemsRemovedEventArgs&gt; JumpItemsRemovedByUser" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Shell.JumpList.JumpItemsRemovedByUser" />
      <MemberSignature Language="VB.NET" Value="Public Event JumpItemsRemovedByUser As EventHandler(Of JumpItemsRemovedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Shell::JumpItemsRemovedEventArgs ^&gt; ^ JumpItemsRemovedByUser;" />
      <MemberSignature Language="F#" Value="member this.JumpItemsRemovedByUser : EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt; " Usage="member this.JumpItemsRemovedByUser : System.EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Shell.JumpItemsRemovedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, когда ранее добавленных элементов списка переходов, удаляются из списка пользователем.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 После содержимого параметра <xref:System.Windows.Shell.JumpList> применяются к оболочке Windows <xref:System.Windows.Shell.JumpList.JumpItems%2A> свойство изменяется должен содержать только элементы, которые оболочке Windows успешно добавлен в список переходов. Список удаленных элементов можно обращаться обработчики событий для <xref:System.Windows.Shell.JumpList.JumpItemsRejected> и <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> события.  
  
   
  
## Examples  
 В следующем примере показано, как обрабатывать <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> событий для отображения отклоненных элементов в окне сообщения. Этот пример является частью большего примера, доступных в <xref:System.Windows.Shell.JumpList> Общие сведения о классе.  
  
 [!code-csharp[Shell_JumpListSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml.cs#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetJumpList">
      <MemberSignature Language="C#" Value="public static void SetJumpList (System.Windows.Application application, System.Windows.Shell.JumpList value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetJumpList(class System.Windows.Application application, class System.Windows.Shell.JumpList value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetJumpList(System::Windows::Application ^ application, System::Windows::Shell::JumpList ^ value);" />
      <MemberSignature Language="F#" Value="static member SetJumpList : System.Windows.Application * System.Windows.Shell.JumpList -&gt; unit" Usage="System.Windows.Shell.JumpList.SetJumpList (application, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.Windows.Application" />
        <Parameter Name="value" Type="System.Windows.Shell.JumpList" />
      </Parameters>
      <Docs>
        <param name="application">Приложение, связанное с <see cref="T:System.Windows.Shell.JumpList" />.</param>
        <param name="value"><see cref="T:System.Windows.Shell.JumpList" /> Для связи с приложением.</param>
        <summary>Наборы <see cref="T:System.Windows.Shell.JumpList" /> объект, связанный с приложением.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вы можете создать несколько <xref:System.Windows.Shell.JumpList> объектов. Однако только один <xref:System.Windows.Shell.JumpList> одновременно может быть связано с <xref:System.Windows.Application>. Вызовите <xref:System.Windows.Shell.JumpList.SetJumpList%2A> метод, чтобы задать <xref:System.Windows.Shell.JumpList> сопоставленные <xref:System.Windows.Application>.  
  
   
  
## Examples  
 В следующем примере показано, как создать <xref:System.Windows.Shell.JumpList> в коде. Статический <xref:System.Windows.Shell.JumpList.SetJumpList%2A> вызывается метод, чтобы связать <xref:System.Windows.Shell.JumpList> в текущем приложении. <xref:System.Windows.Shell.JumpList> Применяется к оболочке Windows автоматически, если он установлен. Этот пример является частью большего примера, доступных в <xref:System.Windows.Shell.JumpList> Общие сведения о классе.  
  
 [!code-csharp[Shell_JumpListSample#210](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#210)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowFrequentCategory">
      <MemberSignature Language="C#" Value="public bool ShowFrequentCategory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFrequentCategory" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpList.ShowFrequentCategory" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowFrequentCategory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowFrequentCategory { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowFrequentCategory : bool with get, set" Usage="System.Windows.Shell.JumpList.ShowFrequentCategory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, отображаются ли часто используемые элементы в списке переходов.</summary>
        <value><see langword="true" /> Если часто используемые элементы отображаются в списке переходов; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Содержание **частые** категория управляет оболочка Windows. Чтобы отобразить часто используемые элементы в списке переходов, задайте <xref:System.Windows.Shell.JumpList.ShowFrequentCategory%2A> свойства `true`.  
  
 **Последние** и **частые** категории часто содержат множество же элементы перехода. В результате приложения обычно отображают либо **последние** или **частые** категории в списке переходов, но не оба.  
  
   
  
## Examples  
 В следующем примере показан <xref:System.Windows.Shell.JumpList> будут отображаться **частые** категории. Этот пример является частью большего примера, доступных в <xref:System.Windows.Shell.JumpList> Общие сведения о классе.  
  
 [!code-xaml[Shell_JumpListSample#001](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#001)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowRecentCategory">
      <MemberSignature Language="C#" Value="public bool ShowRecentCategory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowRecentCategory" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpList.ShowRecentCategory" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowRecentCategory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowRecentCategory { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowRecentCategory : bool with get, set" Usage="System.Windows.Shell.JumpList.ShowRecentCategory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, отображаются ли недавно использовавшиеся элементы в списке переходов.</summary>
        <value><see langword="true" /> Если недавно использовавшиеся элементы отображаются в списке переходов; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Содержание **последние** категория управляет оболочка Windows. Чтобы отобразить часто используемые элементы в списке переходов, задайте <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> свойства `true`.  
  
 **Последние** и **частые** категории часто содержат множество же элементы перехода. В результате приложения обычно отображают либо **последние** или **частые** категории в списке переходов, но не оба.  
  
 Можно вызвать <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A> метод для запроса, что оболочка Windows добавить элементы в **последние** список элементов. Если приложение не зарегистрировано для обработки типа имя файла элемента, она не будет отображаться в **последние** списка и вызовы <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A> завершится ошибкой без сообщений.  
  
   
  
## Examples  
 В следующем примере показан <xref:System.Windows.Shell.JumpList> будут отображаться **последние** категории. Этот пример является частью большего примера, доступных в <xref:System.Windows.Shell.JumpList> Общие сведения о классе.  
  
 [!code-xaml[Shell_JumpListSample#001](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#001)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>