<Type Name="ComplexObject" FullName="System.Data.Objects.DataClasses.ComplexObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a2fd3ba0eeff75278859dc1b47b688752a07d2a7" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69373255" /></Metadata><TypeSignature Language="C#" Value="public abstract class ComplexObject : System.Data.Objects.DataClasses.StructuralObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit ComplexObject extends System.Data.Objects.DataClasses.StructuralObject" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.ComplexObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ComplexObject&#xA;Inherits StructuralObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComplexObject abstract : System::Data::Objects::DataClasses::StructuralObject" />
  <TypeSignature Language="F#" Value="type ComplexObject = class&#xA;    inherit StructuralObject" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Objects.DataClasses.StructuralObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract(IsReference=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Базовый класс для сложных типов.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.DataClasses.ComplexObject>реализует базовую функциональность для сложных типов. Дополнительные сведения см. в разделе [объекты сложного типа](https://msdn.microsoft.com/library/34d5c570-a891-42b8-80ae-20e96eedc3af).  
  
 При реализации пользовательских классов данных с концептуальной моделью рекомендуется, чтобы классы данных, представляющие сложные типы, наследовали от <xref:System.Data.Objects.DataClasses.ComplexObject>. Дополнительные сведения см. в разделе [Настройка объектов](https://msdn.microsoft.com/library/af6f07ce-2261-4c65-87cf-d018ad082921).  
  
 Сложный тип может быть свойством типа сущности или другого сложного типа.  
  
 Возврат сложных типов осуществляется с помощью нескалярных свойств типов сущностей. Это позволяет организовывать скалярные свойства в сущностях. Подобно сущностям, сложные типы состоят из скалярных свойств или свойств других сложных типов. Сложный тип нельзя использовать без связанного типа сущности. Поскольку сложные типы не имеют ключей, объекты сложного типа нельзя управлять без связанного типа сущности. Дополнительные сведения см. в разделе [объекты сложного типа](https://msdn.microsoft.com/library/34d5c570-a891-42b8-80ae-20e96eedc3af).  
  
   
  
## Examples  
 В следующем примере пользовательский класс данных наследует от `OrderInfo` <xref:System.Data.Objects.DataClasses.ComplexObject> класса `OrderInfo` и сопоставлен со сложным типом, определенным в концептуальной модели.  
  
 [!code-csharp[DP EntityObject Concepts#EntityObject](~/samples/snippets/csharp/VS_Snippets_Data/DP EntityObject Concepts/CS/SalesObjects.cs#entityobject)]
 [!code-vb[DP EntityObject Concepts#EntityObject](~/samples/snippets/visualbasic/VS_Snippets_Data/DP EntityObject Concepts/VB/SalesObjects.vb#entityobject)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-complex-types.md">Практическое руководство. Выполнение запроса, возвращающего сложные типы (EntityClient)</related>
    <related type="Article" href="https://msdn.microsoft.com/library/b13b24d5-05d1-4746-b0d2-5472796240c6(v=vs.90)">Практическое руководство. определить модель со сложными типами (платформа Entity Framework)</related>
    <related type="Article" href="https://msdn.microsoft.com/library/525ffa1c-524e-40bd-bb80-2929aec8c8d8(v=vs.90)">Практическое руководство. Добавление и изменение объектов со сложными типами (Entity Framework)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ComplexObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.ComplexObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ComplexObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Создает экземпляр класса <see cref="T:System.Data.Objects.DataClasses.ComplexObject" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportPropertyChanged">
      <MemberSignature Language="C#" Value="protected override sealed void ReportPropertyChanged (string property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ReportPropertyChanged(string property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub ReportPropertyChanged (property As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ReportPropertyChanged(System::String ^ property);" />
      <MemberSignature Language="F#" Value="override this.ReportPropertyChanged : string -&gt; unit" Usage="complexObject.ReportPropertyChanged property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">Имя измененного свойства.</param>
        <summary>Уведомляет объект отслеживания изменений об изменении свойства сложного объекта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При создании сложного типа с помощью средств <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged%2A> EDM метод вызывается после изменения свойства для фиксации кэшированного значения <xref:System.Data.Objects.DataClasses.IEntityChangeTracker> в качестве исходного значения свойства.  
  
 Этот метод вызывает метод <xref:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanged%2A> в объекте отслеживания изменений.  
  
 Во время отслеживания изменений, вносимых в свойство пользовательского сложного объекта, необходимо вызывать метод <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged%2A>. Выполняйте это, если сложный объект наследуется от объекта <xref:System.Data.Objects.DataClasses.ComplexObject>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="property" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReportPropertyChanging">
      <MemberSignature Language="C#" Value="protected override sealed void ReportPropertyChanging (string property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ReportPropertyChanging(string property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub ReportPropertyChanging (property As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ReportPropertyChanging(System::String ^ property);" />
      <MemberSignature Language="F#" Value="override this.ReportPropertyChanging : string -&gt; unit" Usage="complexObject.ReportPropertyChanging property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">Имя изменяемого свойства.</param>
        <summary>Уведомляет объект отслеживания изменений об ожидающем изменении свойства сложного объекта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При создании сложного типа с помощью средств <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging%2A> EDM метод вызывается перед изменением свойства для кэширования текущего значения свойства в, <xref:System.Data.Objects.DataClasses.IEntityChangeTracker> чтобы это значение можно было использовать как исходное значение для свойства.  
  
 Этот метод вызывает метод <xref:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanging%2A> в объекте отслеживания изменений.  
  
 Во время отслеживания изменений, вносимых в свойство пользовательского сложного объекта, необходимо вызывать метод <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging%2A>. Выполняйте это, если сложный объект наследуется от объекта <xref:System.Data.Objects.DataClasses.ComplexObject>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="property" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
