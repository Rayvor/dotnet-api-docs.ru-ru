<Type Name="EntityReference&lt;TEntity&gt;" FullName="System.Data.Objects.DataClasses.EntityReference&lt;TEntity&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ea82f28d3451c5c0376232bc1c89c25f0de8ba60" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70328352" /></Metadata><TypeSignature Language="C#" Value="public sealed class EntityReference&lt;TEntity&gt; : System.Data.Objects.DataClasses.EntityReference where TEntity : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EntityReference`1&lt;class TEntity&gt; extends System.Data.Objects.DataClasses.EntityReference" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.EntityReference`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityReference(Of TEntity)&#xA;Inherits EntityReference" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEntity&gt;&#xA; where TEntity : classpublic ref class EntityReference sealed : System::Data::Objects::DataClasses::EntityReference" />
  <TypeSignature Language="F#" Value="type EntityReference&lt;'Entity (requires 'Entity : null)&gt; = class&#xA;    inherit EntityReference" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEntity">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Data.Objects.DataClasses.EntityReference</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TEntity">Тип сущности ссылки.</typeparam>
    <summary>Представляет связанное окончание ассоциации с кратностью 0 или 1.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Data.Objects.DataClasses.EntityReference%601> возвращается свойством навигации, если связанный элемент имеет кратность 0 или 1. Дополнительные сведения см. в разделе [Элемент NavigationProperty (CSDL)](https://msdn.microsoft.com/library/5829a238-a50e-4c81-901d-7b54fc00f27e).  
  
 Объекту <xref:System.Data.Objects.DataClasses.EntityReference%601> в качестве второго элемента связи может соответствовать объект <xref:System.Data.Objects.DataClasses.EntityCollection%601> (связь «один ко многим») или объект <xref:System.Data.Objects.DataClasses.EntityReference%601> (связь «один к одному»). Если объекты <xref:System.Data.Objects.DataClasses.EntityReference%601> и <xref:System.Data.Objects.DataClasses.EntityCollection%601> являются противоположными элементами одной и той же связи, то целостность связи поддерживается на уровне объектов.  
  
 Этот класс не наследуется.  
  
   
  
## Examples  
 В данном примере показывается, как можно использовать объект <xref:System.Data.Objects.DataClasses.EntityReference%601> для изменения связи между объектом `SalesOrderHeader` и связанным объектом `Address`, представляющим адрес доставки для заказа.  
  
 [!code-csharp[DP ObjectServices Concepts#ChangeObjectRelationship](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#changeobjectrelationship)]
 [!code-vb[DP ObjectServices Concepts#ChangeObjectRelationship](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#changeobjectrelationship)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Создает новый экземпляр <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Attach(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.Attach(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (entity As TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Attach(TEntity entity);" />
      <MemberSignature Language="F#" Value="override this.Attach : 'Entity -&gt; unit" Usage="entityReference.Attach entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity">Присоединяемый объект.</param>
        <summary>Создает связь "многие к одному" или "один к одному" между двумя объектами в контексте объекта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Data.Objects.DataClasses.EntityReference%601.Attach%2A> предназначен для определения связи между объектом и связанным объектом, если оба объекта уже присоединены к контексту объекта. Задайте в качестве связанного объекта свойство <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A>, если связанный объект еще не подключен к контексту объекта. Если оба объекта отсоединены, связь также можно определить, задав связанный объект в свойстве <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> и затем присоединив корневой объект в графе объектов. Дополнительные сведения см. в разделе [Присоединение и отсоединение объектов](https://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23).  
  
 Объект, связанный с этой ссылкой <xref:System.Data.Objects.DataClasses.EntityReference%601>, и все присоединенные к нему объекты должны находиться в состоянии <xref:System.Data.EntityState.Unchanged> или <xref:System.Data.EntityState.Modified>.  
  
 Объект в состоянии <xref:System.Data.EntityState.Deleted> можно присоединять только в случае, если диспетчер <xref:System.Data.Objects.ObjectStateManager> уже отслеживает экземпляр связи.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Когда <paramref name="entity" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Если объект <paramref name="entity" /> не может быть связан с текущим связанным элементом. Это может происходить, если ассоциация в концептуальной схеме не поддерживает наличие связи между двумя типами.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSourceQuery">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;TEntity&gt; CreateSourceQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!TEntity&gt; CreateSourceQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.CreateSourceQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSourceQuery () As ObjectQuery(Of TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;TEntity&gt; ^ CreateSourceQuery();" />
      <MemberSignature Language="F#" Value="override this.CreateSourceQuery : unit -&gt; System.Data.Objects.ObjectQuery&lt;'Entity (requires 'Entity : null and 'Entity :&gt; System.Data.Objects.DataClasses.IEntityWithRelationships)&gt;" Usage="entityReference.CreateSourceQuery " FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="F#" Value="override this.CreateSourceQuery : unit -&gt; System.Data.Objects.ObjectQuery&lt;'Entity (requires 'Entity : null)&gt;" Usage="entityReference.CreateSourceQuery " FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает эквивалентный запрос объектов, возвращающий связанный объект.</summary>
        <returns>Объект <see cref="T:System.Data.Objects.ObjectQuery`1" />, возвращающий связанный объект.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод используется для получения нового экземпляра запроса <xref:System.Data.Objects.ObjectQuery%601>, который при выполнении возвращает связанный объект. Такая организация работы может служить отправной точкой для выполнения более сложных запросов соединения, объединения или фильтрации, а также для возврата ссылаемого объекта в отсоединенном состоянии с помощью параметра <xref:System.Data.Objects.MergeOption.NoTracking>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Если объект находится в состоянии <see cref="F:System.Data.EntityState.Added" />.  
  
- или - 
Если объект находится в состоянии <see cref="F:System.Data.EntityState.Detached" /> с параметром <see cref="P:System.Data.Objects.ObjectQuery.MergeOption" />, отличным от <see cref="F:System.Data.Objects.MergeOption.NoTracking" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.Load(System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load(System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="override this.Load : System.Data.Objects.MergeOption -&gt; unit" Usage="entityReference.Load mergeOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption">Определяет, как должен происходит возврат объекта, если он уже существует в контексте <see cref="T:System.Data.Objects.ObjectContext" />.</param>
        <summary>Загружает связанный объект для этого объекта <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> с указанным параметром слияния.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод используется для загрузки связанного объекта.  
  
 При загрузке доступ к связанному объекту осуществляется через свойство <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A>.  
  
 Чтобы явно загрузить связанные объекты, необходимо вызвать `Load` метод для связанного элемента, возвращенного свойством навигации. Для связи типа «один ко многим» вызовите метод <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> для объекта <xref:System.Data.Objects.DataClasses.EntityCollection%601>, а для взаимно-однозначной связи — метод <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> для объекта <xref:System.Data.Objects.DataClasses.EntityReference%601>. В результате данные связанного объекта будут загружены в контекст объекта. Когда запрос возвращает результаты, можно перечислить `foreach` коллекцию объектов с помощью цикла (`For Each...Next` в Visual Basic) `Load` и условно вызвать метод в <xref:System.Data.Objects.DataClasses.EntityReference%601> свойствах и <xref:System.Data.Objects.DataClasses.EntityCollection%601> для каждой сущности в результаты.  
  
 Метод загружает связанные объекты из источника данных независимо от того, <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> является ли он `true`. <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A>  
  
> [!NOTE]
>  Если метод <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> вызывается во время перечисления `foreach` (C#) или `For Each` (Visual Basic), службы объектов пытаются открыть новый модуль чтения данных. Эта операция завершится ошибкой, если не был включен режим MARS путем задания `multipleactiveresultsets=true` в строке соединения. Кроме того, можно загрузить результат запроса в коллекцию <xref:System.Collections.Generic.List%601>. В результате модуль чтения данных будет закрыт, и появится возможность выполнять перечисление по коллекции для загрузки объектов, на которые существуют ссылки.  
 
Этот метод вызывает внутренний `RelatedEnd.ValidateLoad` метод перед загрузкой связанного объекта, который проверяет, что <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> вызов имеет правильные условия. `RelatedEnd.ValidateLoad` Метод проверяет следующее:

* Существует допустимое <xref:System.Data.Objects.ObjectContext> значение.
* Сущность не находится в <xref:System.Data.EntityState.Deleted> состоянии.
* <xref:System.Data.Objects.MergeOption>параметр <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> for должен <xref:System.Data.Objects.MergeOption.NoTracking> иметь значение, только если исходная сущность — <xref:System.Data.Objects.MergeOption.NoTracking>. Если исходная сущность была получена с другой <xref:System.Data.Objects.MergeOption>, то <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> <xref:System.Data.Objects.MergeOption> может быть любым, <xref:System.Data.Objects.MergeOption.NoTracking> но ( <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> например, сущность могла быть загружена с <xref:System.Data.Objects.MergeOption.OverwriteChanges> помощью и параметр может быть <xref:System.Data.Objects.MergeOption.AppendOnly>).
* Если `mergeOption` имеет <xref:System.Data.Objects.MergeOption.NoTracking>значение ,<xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> то метод не вызывается для уже <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> загруженного объекта и не <xref:System.Data.Objects.DataClasses.RelatedEnd>вызывается для непустого, неотслеживающего.

 Если связанный <xref:System.Data.Objects.ObjectContext>объект уже загружен в <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> , метод применяет <xref:System.Data.Objects.MergeOption> указанный `mergeOption` параметром. Дополнительные сведения см. в разделе [разрешение удостоверений, управление состоянием и отслеживание изменений](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Источник <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> имеет значение <see langword="null" />.  
  
- или - 
Запрос вернул несколько связанных окончаний.  
  
- или - 
Запрос возвращает нулевое количество связанных элементов, хотя ожидался возврат одного связанного элемента.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md">Запросы к данным как к объектам (платформа Entity Framework)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRefDeserialized">
      <MemberSignature Language="C#" Value="public void OnRefDeserialized (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnRefDeserialized(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.OnRefDeserialized(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnRefDeserialized (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnRefDeserialized(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="member this.OnRefDeserialized : System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="entityReference.OnRefDeserialized context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.Serialization.OnDeserialized</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="context">Сериализованный поток.</param>
        <summary>Данный метод используется внутренне для сериализации связанных объектов сущности.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSerializing">
      <MemberSignature Language="C#" Value="public void OnSerializing (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnSerializing(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.OnSerializing(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnSerializing (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnSerializing(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="member this.OnSerializing : System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="entityReference.OnSerializing context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.Serialization.OnSerializing</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="context">Сериализованный поток.</param>
        <summary>Данный метод используется внутренне для сериализации связанных объектов сущности.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public TEntity Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TEntity Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.EntityReference`1.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As TEntity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TEntity Value { TEntity get(); void set(TEntity value); };" />
      <MemberSignature Language="F#" Value="member this.Value : 'Entity with get, set" Usage="System.Data.Objects.DataClasses.EntityReference&lt;'Entity (requires 'Entity : null and 'Entity :&gt; System.Data.Objects.DataClasses.IEntityWithRelationships)&gt;.Value" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.Value : 'Entity with get, set" Usage="System.Data.Objects.DataClasses.EntityReference&lt;'Entity (requires 'Entity : null)&gt;.Value" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TEntity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает связанный объект, возвращаемый этим объектом <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />.</summary>
        <value>Объект, возвращаемый этим объектом <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если задаваемое значение совпадает с текущим значением, присвоение значения не выполняется.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
