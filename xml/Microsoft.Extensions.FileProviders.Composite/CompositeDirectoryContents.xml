<Type Name="CompositeDirectoryContents" FullName="Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents">
  <Metadata><Meta Name="ms.openlocfilehash" Value="57ba1e87267ab84b8c5320f639e9c5cece3f67e4" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75122368" /></Metadata><TypeSignature Language="C#" Value="public class CompositeDirectoryContents : Microsoft.Extensions.FileProviders.IDirectoryContents, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.FileProviders.IFileInfo&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompositeDirectoryContents extends System.Object implements class Microsoft.Extensions.FileProviders.IDirectoryContents, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.FileProviders.IFileInfo&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents" />
  <TypeSignature Language="VB.NET" Value="Public Class CompositeDirectoryContents&#xA;Implements IDirectoryContents, IEnumerable(Of IFileInfo)" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositeDirectoryContents : Microsoft::Extensions::FileProviders::IDirectoryContents, System::Collections::Generic::IEnumerable&lt;Microsoft::Extensions::FileProviders::IFileInfo ^&gt;" />
  <TypeSignature Language="F#" Value="type CompositeDirectoryContents = class&#xA;    interface IDirectoryContents&#xA;    interface seq&lt;IFileInfo&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.FileProviders.Composite</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.FileProviders.IDirectoryContents</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.FileProviders.IFileInfo&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="6b3e8-101">Представляет результат компоновки вызова <see cref="M:Microsoft.Extensions.FileProviders.IFileProvider.GetDirectoryContents(System.String)" /> для списка <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" /> и пути.</span><span class="sxs-lookup"><span data-stu-id="6b3e8-101">Represents the result of a call composition of <see cref="M:Microsoft.Extensions.FileProviders.IFileProvider.GetDirectoryContents(System.String)" /> for a list of <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" /> and a path.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositeDirectoryContents (System.Collections.Generic.IList&lt;Microsoft.Extensions.FileProviders.IFileProvider&gt; fileProviders, string subpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;class Microsoft.Extensions.FileProviders.IFileProvider&gt; fileProviders, string subpath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents.#ctor(System.Collections.Generic.IList{Microsoft.Extensions.FileProviders.IFileProvider},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileProviders As IList(Of IFileProvider), subpath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositeDirectoryContents(System::Collections::Generic::IList&lt;Microsoft::Extensions::FileProviders::IFileProvider ^&gt; ^ fileProviders, System::String ^ subpath);" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents : System.Collections.Generic.IList&lt;Microsoft.Extensions.FileProviders.IFileProvider&gt; * string -&gt; Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents" Usage="new Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents (fileProviders, subpath)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Composite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileProviders" Type="System.Collections.Generic.IList&lt;Microsoft.Extensions.FileProviders.IFileProvider&gt;" />
        <Parameter Name="subpath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileProviders"><span data-ttu-id="6b3e8-102">Список <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" />, для которых необходимо скомпоновать результаты.</span><span class="sxs-lookup"><span data-stu-id="6b3e8-102">The list of <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" /> for which the results have to be composed.</span></span></param>
        <param name="subpath"><span data-ttu-id="6b3e8-103">Путь.</span><span class="sxs-lookup"><span data-stu-id="6b3e8-103">The path.</span></span></param>
        <summary><span data-ttu-id="6b3e8-104">Создает экземпляр <see cref="T:Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents" />, представляющий результат компоновки вызова <see cref="M:Microsoft.Extensions.FileProviders.IFileProvider.GetDirectoryContents(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="6b3e8-104">Creates a new instance of <see cref="T:Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents" /> to represents the result of a call composition of <see cref="M:Microsoft.Extensions.FileProviders.IFileProvider.GetDirectoryContents(System.String)" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public bool Exists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exists" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents.Exists" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Exists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Exists : bool" Usage="Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents.Exists" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Extensions.FileProviders.IDirectoryContents.Exists</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Composite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6b3e8-105">Значение true, если существуют какие-либо указанные поставщики.</span><span class="sxs-lookup"><span data-stu-id="6b3e8-105">True if any given providers exists.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;Microsoft.Extensions.FileProviders.IFileInfo&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class Microsoft.Extensions.FileProviders.IFileInfo&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of IFileInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;Microsoft::Extensions::FileProviders::IFileInfo ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;Microsoft.Extensions.FileProviders.IFileInfo&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;Microsoft.Extensions.FileProviders.IFileInfo&gt;" Usage="compositeDirectoryContents.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Composite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;Microsoft.Extensions.FileProviders.IFileInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6b3e8-106">Создает перечислитель для всех файлов во всех указанных поставщиках.</span><span class="sxs-lookup"><span data-stu-id="6b3e8-106">Creates an enumerator for all files in all providers given.</span></span>
<span data-ttu-id="6b3e8-107">Гарантирует, что каждый элемент в коллекции является отдельным.</span><span class="sxs-lookup"><span data-stu-id="6b3e8-107">Ensures each item in the collection is distinct.</span></span></summary>
        <returns><span data-ttu-id="6b3e8-108">Перечислитель по всем файлам во всех указанных поставщиках</span><span class="sxs-lookup"><span data-stu-id="6b3e8-108">An enumerator over all files in all given providers</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.FileProviders.Composite.CompositeDirectoryContents.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.FileProviders.Composite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
