<Type Name="WorkflowMarkupSerializer" FullName="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e681882d7a852ea6fff8ac82da2888b01aec4919" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70675406" /></Metadata><TypeSignature Language="C#" Value="public class WorkflowMarkupSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowMarkupSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowMarkupSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowMarkupSerializer" />
  <TypeSignature Language="F#" Value="type WorkflowMarkupSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DefaultSerializationProvider(typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationProvider))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет службы сериализации языка XAML для рабочих процессов во время разработки.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>предоставляет методы сериализации рабочего процесса и <xref:System.Workflow.ComponentModel.Activity> классов в формат XAML и десериализации содержимого XAML в рабочий процесс и объекты класса действий. Эти службы в основном используются конструкторами рабочих процессов для сохранения классов в рабочей области рабочего процесса.  
  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> является базовым классом для всех сериализатором разметки, включенных в пространство имен <xref:System.Workflow.ComponentModel.Serialization>.  
  
 Дополнительные сведения см. в разделе [Сериализация](https://msdn.microsoft.com/library/4d1111c0-9447-4231-a997-96a2b74b3453).  
  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> не поддерживает сериализацию вложенных типов.  
  
 Функциональные возможности <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> зависят от функциональных возможностей других типов вне Windows Workflow Foundation. На основе ограничений других типов не все типы данных могут быть сериализованы посредством <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>. Далее приводится список примеров некоторых не поддерживаемых типов.  
  
> [!NOTE]
>  Данный список не является исчерпывающим и полным списком не поддерживаемых типов.  
  
 Массивы (поддерживаются, только если свойство не помечено значением атрибута `DesignerSerializationVisibility.Content`)  
  
 Типы, в которых отсутствуют конструкторы без параметров  
  
 Многомерные массивы  
  
 Универсальные типы (универсальные типы `List` и `Dictionary` поддерживаются, только если свойство помечено значением атрибута `DesignerSerializationVisibility.Content`)  
  
 `Hashtable`  
  
 `Queue`  
  
 `Stack`  
  
 `XmlDocument`  
  
 `MailMessage`  
  
 `Bitmap`  
  
 Массивы перечисления  
  
 Перечисления, помеченные атрибутом FlagsAttribute  
  
 В дополнение к этому списку любое свойство, помеченное атрибутами `ContentPropertyAttribute` и `DesignerSerializationVisibilityAttribute`, не может быть сериализовано с помощью `WorkflowMarkupSerializer`.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowMarkupSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowMarkupSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано создание нового экземпляра класса <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>.  Данный пример кода является частью образца OutlookWorkflowWizard SDK из файла Loader.cs. Дополнительные сведения см. в разделе [Мастер рабочего процесса Outlook](https://msdn.microsoft.com/library/7b2ba92b-8456-43f3-87fc-184ffdec4408).  
  
 [!code-csharp[WF_Samples#97](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#97)]
 [!code-vb[WF_Samples#97](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#97)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="protected internal virtual void AddChild (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object parentObject, object childObj);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void AddChild(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object parentObject, object childObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.AddChild(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub AddChild (serializationManager As WorkflowMarkupSerializationManager, parentObject As Object, childObj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void AddChild(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ parentObject, System::Object ^ childObj);" />
      <MemberSignature Language="F#" Value="abstract member AddChild : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj * obj -&gt; unit&#xA;override this.AddChild : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj * obj -&gt; unit" Usage="workflowMarkupSerializer.AddChild (serializationManager, parentObject, childObj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="parentObject" Type="System.Object" />
        <Parameter Name="childObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager">Объект <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> для использования в данной операции.</param>
        <param name="parentObject">Объект <see cref="T:System.Object" />, к которому необходимо добавить дочерний объект.</param>
        <param name="childObj">Добавляемый объект <see cref="T:System.Object" />.</param>
        <summary>Добавляет дочерний объект к заданному объекту.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Помимо поведения исключения, <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.AddChild%2A> не предоставляет поведение по умолчанию. Необходимо переопределить <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>, чтобы предоставить логику для этого метода в производном сериализаторе.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="parentObject" /> или <paramref name="childObj" /> содержит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="CanSerializeToString">
      <MemberSignature Language="C#" Value="protected internal virtual bool CanSerializeToString (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool CanSerializeToString(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CanSerializeToString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CanSerializeToString (serializationManager As WorkflowMarkupSerializationManager, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool CanSerializeToString(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CanSerializeToString : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; bool&#xA;override this.CanSerializeToString : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; bool" Usage="workflowMarkupSerializer.CanSerializeToString (serializationManager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager"><see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> используется для сериализации этого объекта.</param>
        <param name="value">Указанный <see cref="T:System.Object" />.</param>
        <summary>Преобразовывает логическое значение, указывающее возможность сериализации заданного объекта в строку.</summary>
        <returns><see langword="true" />, если заданный объект может быть сериализован в строку; в противном случае — <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="serializationManager" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).

-или-

Параметр <paramref name="value" /> является неопределенной ссылкой (<see langword="Nothing" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="ClearChildren">
      <MemberSignature Language="C#" Value="protected internal virtual void ClearChildren (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void ClearChildren(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClearChildren(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub ClearChildren (serializationManager As WorkflowMarkupSerializationManager, obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void ClearChildren(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member ClearChildren : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; unit&#xA;override this.ClearChildren : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; unit" Usage="workflowMarkupSerializer.ClearChildren (serializationManager, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager">Объект <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />, поддерживающий данную операцию.</param>
        <param name="obj">Объект <see cref="T:System.Object" />, из которого необходимо удалить все дочерние объекты.</param>
        <summary>Удаляет все дочерние объекты из заданного объекта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Помимо поведения исключения, <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClearChildren%2A> не предоставляет поведение по умолчанию. Необходимо переопределить <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>, чтобы предоставить логику для этого метода в производном сериализаторе.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="serializationManager" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).

-или-

Параметр <paramref name="obj" /> является неопределенной ссылкой (<see langword="Nothing" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="ClrNamespacesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty ClrNamespacesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty ClrNamespacesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClrNamespacesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClrNamespacesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ ClrNamespacesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClrNamespacesProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClrNamespacesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет прикрепленное свойство <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, используемое для определения того, на какие сборки должна указывать ссылка для пользовательских действий.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения об этом свойстве зависимостей см. [в разделе Использование разметки рабочего процесса](https://msdn.microsoft.com/library/e2693a12-640b-4ccb-8fb0-db3075e94aa4).  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected virtual object CreateInstance (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object CreateInstance(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CreateInstance(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ CreateInstance(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * Type -&gt; obj&#xA;override this.CreateInstance : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * Type -&gt; obj" Usage="workflowMarkupSerializer.CreateInstance (serializationManager, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serializationManager">Объект <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />, поддерживающий данную операцию.</param>
        <param name="type">Указанный <see cref="T:System.Type" />.</param>
        <summary>Создает экземпляр заданного типа <see cref="T:System.Type" /> с помощью указанного класса <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />.</summary>
        <returns>Экземпляр заданного типа <see cref="T:System.Type" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CreateInstance%2A>использует конструктор типа, который наилучшим образом соответствует заданному параметру.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="serializationManager" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).

- или -

Параметр <paramref name="type" /> является неопределенной ссылкой (<see langword="Nothing" />).</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Deserialize">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Выполняет десериализацию сериализованного языка XAML, содержащегося в заданном классе <see cref="T:System.IO.TextReader" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (reader As XmlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.Xml.XmlReader -&gt; obj" Usage="workflowMarkupSerializer.Deserialize reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, содержащий определение рабочего процесса.</param>
        <summary>Выполняет десериализацию разметки рабочего процесса в объект <see cref="T:System.Object" />.</summary>
        <returns>Объект <see cref="T:System.Object" />, в котором содержится определение рабочего процесса, определенного в файле или потоке разметки рабочего процесса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения о разметке рабочего процесса см. [в разделе Использование разметки рабочего процесса](https://msdn.microsoft.com/library/e2693a12-640b-4ccb-8fb0-db3075e94aa4).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager, System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager, class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (serializationManager As IDesignerSerializationManager, reader As XmlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ serializationManager, System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.Xml.XmlReader -&gt; obj" Usage="workflowMarkupSerializer.Deserialize (serializationManager, reader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="serializationManager">Объект, реализующий интерфейс <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, например, <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />.</param>
        <param name="reader">Объект <see cref="T:System.Xml.XmlReader" />, содержащий определение рабочего процесса.</param>
        <summary>Выполняет десериализацию разметки рабочего процесса в <see cref="T:System.Object" /> с помощью заданного диспетчера сериализации.</summary>
        <returns>Объект <see cref="T:System.Object" />, в котором содержится определение рабочего процесса, определенного в файле или потоке разметки рабочего процесса.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения о разметке рабочего процесса см. в разделе [использование разметки рабочего процесса](https://msdn.microsoft.com/library/e2693a12-640b-4ccb-8fb0-db3075e94aa4).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="serializationManager" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).

- или -

Параметр <paramref name="reader" /> является неопределенной ссылкой (<see langword="Nothing" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="DeserializeFromString">
      <MemberSignature Language="C#" Value="protected internal virtual object DeserializeFromString (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, Type propertyType, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object DeserializeFromString(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, class System.Type propertyType, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.DeserializeFromString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function DeserializeFromString (serializationManager As WorkflowMarkupSerializationManager, propertyType As Type, value As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ DeserializeFromString(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, Type ^ propertyType, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member DeserializeFromString : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * Type * string -&gt; obj&#xA;override this.DeserializeFromString : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * Type * string -&gt; obj" Usage="workflowMarkupSerializer.DeserializeFromString (serializationManager, propertyType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serializationManager">Объект <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />, управляющий процессом десериализации.</param>
        <param name="propertyType">Тип <see cref="T:System.Type" />, связанный со свойством для десериализации.</param>
        <param name="value">Строка, содержащая язык XAML для десериализации.</param>
        <summary>Выполняет десериализацию содержимого языка XAML из заданной строки в соответствии с данным типом свойства для десериализации.</summary>
        <returns>Десериализованный объект <see cref="T:System.Object" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение `value` должно отвечать одному из следующих критериев:  
  
-   оно является типом-примитивом, строкой, перечислением или <xref:System.TimeSpan>.  
  
-   его можно назначить из интерфейса <xref:System.IConvertible> или из классов <xref:System.Delegate> или <xref:System.Type>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serializationManager" />, <paramref name="propertyType" /> или <paramref name="value" /> содержит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="EventsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty EventsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty EventsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.EventsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EventsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ EventsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable EventsProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.EventsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет прикрепленное свойство <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, определяющее имена для свойств обработчика событий.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данное свойство используется только во время разработки при программной отправке экземпляра рабочего процесса с помощью объектной модели. Оно представляет язык XAML, указывающий ссылкой на обработчик событий, который еще не был скомпилирован. Это свойство содержит `Hashtable` с именем события и парами имя-значение обработчика событий. После компиляции свойство события связывается непосредственно с обработчиком.  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
   
  
## Examples  
 В следующем примере кода показано, как задать значение свойства зависимостей <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.EventsProperty>.  
  
```csharp  
CodeActivity code1 = new CodeActivity();  
Hashtable eventsHashtable = new Hashtable();  
eventsHashtable.Add("ExecuteCode", "methodName1");  
code1.SetValue(WorkflowMarkupSerializer.EventsProperty, eventsHashtable);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="protected internal virtual System.Collections.IList GetChildren (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Collections.IList GetChildren(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetChildren(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetChildren (serializationManager As WorkflowMarkupSerializationManager, obj As Object) As IList" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Collections::IList ^ GetChildren(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member GetChildren : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; System.Collections.IList&#xA;override this.GetChildren : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; System.Collections.IList" Usage="workflowMarkupSerializer.GetChildren (serializationManager, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager">Объект <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />, поддерживающий данную операцию.</param>
        <param name="obj">Объект <see cref="T:System.Object" />, из которого извлекаются дочерние объекты.</param>
        <summary>Получает список дочерних объектов для заданного объекта.</summary>
        <returns>Интерфейс <see cref="T:System.Collections.IList" />, содержащий дочерние объекты <paramref name="obj" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если не переопределено в классе, производном от класса <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetChildren%2A>, `null` всегда возвращает значение `Nothing`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="obj" /> или <paramref name="serializationManager" /> содержит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="protected internal virtual System.Reflection.EventInfo[] GetEvents (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Reflection.EventInfo[] GetEvents(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetEvents(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetEvents (serializationManager As WorkflowMarkupSerializationManager, obj As Object) As EventInfo()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::Reflection::EventInfo ^&gt; ^ GetEvents(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member GetEvents : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; System.Reflection.EventInfo[]&#xA;override this.GetEvents : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; System.Reflection.EventInfo[]" Usage="workflowMarkupSerializer.GetEvents (serializationManager, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager">Объект <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />, управляющий процессом десериализации.</param>
        <param name="obj">Объект <see cref="T:System.Object" />, в котором необходимо выполнить поиск объектов событий.</param>
        <summary>Получает сведения обо всех событиях, связанных с заданным классом <see cref="T:System.Object" />.</summary>
        <returns>Массив объектов <see cref="T:System.Reflection.EventInfo" />, содержащий сведения о событиях, связанных с параметром <paramref name="obj" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serializationManager" /> или <paramref name="obj" /> содержит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="protected internal virtual System.Reflection.PropertyInfo[] GetProperties (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Reflection.PropertyInfo[] GetProperties(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetProperties(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetProperties (serializationManager As WorkflowMarkupSerializationManager, obj As Object) As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; System.Reflection.PropertyInfo[]&#xA;override this.GetProperties : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; System.Reflection.PropertyInfo[]" Usage="workflowMarkupSerializer.GetProperties (serializationManager, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager">Объект <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />, управляющий процессом сериализации.</param>
        <param name="obj">Объект <see cref="T:System.Object" /> для поиска свойств.</param>
        <summary>Извлекает сведения обо всех свойствах, связанных с указанным объектом.</summary>
        <returns>Массив <see cref="T:System.Reflection.PropertyInfo" />, содержащий сведения о свойствах, связанных с <paramref name="obj" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serializationManager" /> или <paramref name="obj" /> содержит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnAfterDeserialize">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterDeserialize (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterDeserialize(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterDeserialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterDeserialize (serializationManager As WorkflowMarkupSerializationManager, obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterDeserialize(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterDeserialize : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; unit&#xA;override this.OnAfterDeserialize : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; unit" Usage="workflowMarkupSerializer.OnAfterDeserialize (serializationManager, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager">Объект <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />, управляющий процессом сериализации.</param>
        <param name="obj">Объект <see cref="T:System.Object" />, который был десериализован.</param>
        <summary>Переопределенный. Уведомляет модуль <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" /> о только что десериализованном объекте.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterDeserialize%2A>вызывается сразу после <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize%2A> выполнения метода. Можно переопределить <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterDeserialize%2A> в классе, производном от <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>, чтобы выполнить необходимую обработку в `obj` после сериализации в язык XAML.  
  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize%2A> не предоставляет поведения по умолчанию. Его необходимо переопределить в производный класс для добавления логики обработки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterSerialize">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterSerialize (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterSerialize(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterSerialize (serializationManager As WorkflowMarkupSerializationManager, obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterSerialize(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterSerialize : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; unit&#xA;override this.OnAfterSerialize : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; unit" Usage="workflowMarkupSerializer.OnAfterSerialize (serializationManager, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager">Объект <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />, управляющий процессом сериализации.</param>
        <param name="obj">Объект <see cref="T:System.Object" />, который был сериализован.</param>
        <summary>Уведомляет <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" /> о только что сериализованном объекте.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize%2A>вызывается сразу после <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize%2A> выполнения метода. Можно переопределить <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize%2A> в классе, производном от <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>, чтобы выполнить необходимую обработку в `obj` после сериализации в язык XAML.  
  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize%2A> не предоставляет поведения по умолчанию. Его необходимо переопределить в производный класс для добавления логики обработки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeforeDeserialize">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeDeserialize (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeDeserialize(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeDeserialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeDeserialize (serializationManager As WorkflowMarkupSerializationManager, obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeDeserialize(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeDeserialize : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; unit&#xA;override this.OnBeforeDeserialize : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; unit" Usage="workflowMarkupSerializer.OnBeforeDeserialize (serializationManager, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager">Объект <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />, управлявший процессом десериализации.</param>
        <param name="obj">Объект <see cref="T:System.Object" />, который был десериализован.</param>
        <summary>Переопределенный. Уведомляет <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" /> о готовности объекта к десериализации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeDeserialize%2A> вызывается непосредственно перед запуском метода <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize%2A>. Можно переопределить <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize%2A> в классе, производном от <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>, чтобы выполнить необходимую обработку в `obj` перед сериализацией в язык XAML.  
  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeDeserialize%2A> не предоставляет поведения по умолчанию. Его необходимо переопределить в производный класс для добавления логики обработки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeforeSerialize">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeSerialize (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeSerialize(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeSerialize (serializationManager As WorkflowMarkupSerializationManager, obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeSerialize(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeSerialize : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; unit&#xA;override this.OnBeforeSerialize : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; unit" Usage="workflowMarkupSerializer.OnBeforeSerialize (serializationManager, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager">Объект <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />, управляющий процессом сериализации.</param>
        <param name="obj"><see cref="T:System.Object" /> для сериализации.</param>
        <summary>Уведомляет <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" /> о готовности <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(System.Xml.XmlWriter,System.Object)" /> к выполнению.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize%2A> вызывается непосредственно перед запуском метода <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize%2A>. Можно переопределить <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize%2A> в классе, производном от <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>, чтобы выполнить необходимую обработку в `obj` перед началом процесса сериализации <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize%2A>.  
  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize%2A> не предоставляет поведения по умолчанию. Его необходимо переопределить в производный класс для добавления логики обработки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Выполняет сериализацию <see cref="T:System.Object" /> в формат языка XAML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Функциональные возможности <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> зависят от функциональных возможностей других типов вне Windows Workflow Foundation. На основе ограничений других типов не все типы данных могут быть сериализованы посредством <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>. Далее приводится список некоторых не поддерживаемых типов.  
  
> [!NOTE]
>  Данный список не является исчерпывающим и полным списком не поддерживаемых типов.  
  
 Массивы (поддерживаются, только если свойство помечено значением атрибута `DesignerSerializationVisibility.Content`)  
  
 Конструкторы без параметров  
  
 Многомерные массивы  
  
 Универсальные типы (универсальные типы `List` и `Dictionary` поддерживаются, только если свойство помечено значением атрибута `DesignerSerializationVisibility.Content`)  
  
 `Hashtable`  
  
 `Queue`  
  
 `Stack`  
  
 `XmlDocument`  
  
 `MailMessage`  
  
 `Bitmap`  
  
 Массивы перечисления  
  
 В дополнение к этому списку любое свойство, помеченное атрибутами `ContentPropertyAttribute` и `DesignerSerializationVisibilityAttribute`, не может быть сериализовано с помощью `WorkflowMarkupSerializer`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.Xml.XmlWriter writer, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.Xml.XmlWriter writer, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (writer As XmlWriter, obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Xml::XmlWriter ^ writer, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.Xml.XmlWriter * obj -&gt; unit" Usage="workflowMarkupSerializer.Serialize (writer, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, в котором содержится поток или файл, используемый в сериализации.</param>
        <param name="obj">Сериализуемый объект.</param>
        <summary>Выполняет сериализацию заданного класса <see cref="T:System.Object" /> в файл или поток разметки рабочего процесса.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Необходимо выполнить сериализацию нового экземпляра типа рабочего процесса или корневого действия в программно созданном рабочем процессе, чтобы создать разметку рабочего процесса, которую можно будет использовать в <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> для создания <xref:System.Workflow.Runtime.WorkflowInstance>.  
  
 Дополнительные сведения о разметке рабочего процесса см. [в разделе Использование разметки рабочего процесса](https://msdn.microsoft.com/library/e2693a12-640b-4ccb-8fb0-db3075e94aa4).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="writer" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).

- или -

Параметр <paramref name="obj" /> является неопределенной ссылкой (<see langword="Nothing" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager, System.Xml.XmlWriter writer, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager, class System.Xml.XmlWriter writer, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (serializationManager As IDesignerSerializationManager, writer As XmlWriter, obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ serializationManager, System::Xml::XmlWriter ^ writer, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.Xml.XmlWriter * obj -&gt; unit" Usage="workflowMarkupSerializer.Serialize (serializationManager, writer, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager">Объект, реализующий интерфейс <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, например, <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />.</param>
        <param name="writer">Объект <see cref="T:System.Xml.XmlWriter" />, в котором содержится поток или файл, используемый в сериализации.</param>
        <param name="obj">Сериализуемый объект.</param>
        <summary>Выполняет сериализацию заданного класса <see cref="T:System.Object" /> в файл или поток разметки рабочего процесса с помощью заданного диспетчера сериализации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Необходимо выполнить сериализацию нового экземпляра типа рабочего процесса или корневого действия в программно созданном рабочем процессе, чтобы создать разметку рабочего процесса, которую можно будет использовать в <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> для создания <xref:System.Workflow.Runtime.WorkflowInstance>.  
  
 Дополнительные сведения о разметке рабочего процесса см. в разделе [использование разметки рабочего процесса](https://msdn.microsoft.com/library/e2693a12-640b-4ccb-8fb0-db3075e94aa4).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="serializationManager" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).
-или-

Параметр <paramref name="writer" /> является неопределенной ссылкой (<see langword="Nothing" /> в Visual Basic).

-или-

Параметр <paramref name="obj" /> является неопределенной ссылкой (<see langword="Nothing" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="SerializeToString">
      <MemberSignature Language="C#" Value="protected internal virtual string SerializeToString (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string SerializeToString(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.SerializeToString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function SerializeToString (serializationManager As WorkflowMarkupSerializationManager, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ SerializeToString(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SerializeToString : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; string&#xA;override this.SerializeToString : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; string" Usage="workflowMarkupSerializer.SerializeToString (serializationManager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager">Объект <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />, управляющий процессом сериализации.</param>
        <param name="value">Экземпляр <see cref="T:System.Object" /> для сериализации в строку.</param>
        <summary>Выполняет сериализацию заданного класса <see cref="T:System.Object" /> в строку.</summary>
        <returns>Строка, содержащая сериализованный объект <see cref="T:System.Object" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если экземпляр <xref:System.Delegate> назначается из `value`, <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.SerializeToString%2A> записывает имя метода, связанное с `value`, в строку. Если экземпляр <xref:System.Type> назначается из `value`, <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.SerializeToString%2A> записывает полное имя типа, связанного с `value`, в строку. При отсутствии данных условий <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.SerializeToString%2A> преобразовывает `value` в строку и записывает результат.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serializationManager" /> или <paramref name="value" /> содержит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShouldSerializeValue (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ShouldSerializeValue(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ShouldSerializeValue(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ShouldSerializeValue (serializationManager As WorkflowMarkupSerializationManager, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ShouldSerializeValue(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeValue : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; bool&#xA;override this.ShouldSerializeValue : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; bool" Usage="workflowMarkupSerializer.ShouldSerializeValue (serializationManager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager">Объект <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />, управляющий процессом сериализации.</param>
        <param name="value">Проверяемый элемент <see cref="T:System.Object" />.</param>
        <summary>Возвращает значение, указывающее, должен ли объект <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" /> выполнить сериализацию заданного класса <see cref="T:System.Object" />.</summary>
        <returns>Значение <see langword="true" />, указывающее на необходимость сериализации <paramref name="value" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ShouldSerializeValue%2A>метод вызывается <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> перед сериализацией указанного объекта. Метод возвращает `false`, если `value` содержит пустую ссылку (`Nothing`), или если `value` и <xref:System.ComponentModel.DefaultValueAttribute> текущего контекста сериализации равны.  
  
 Можно переопределить <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ShouldSerializeValue%2A> в классе, производном от <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>, чтобы настроить способ определения необходимости реализации заданного объекта.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="serializationManager" /> содержит пустую ссылку (<see langword="Nothing" /> в Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="XClassProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty XClassProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty XClassProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XClassProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly XClassProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ XClassProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable XClassProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XClassProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет прикрепленное свойство <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />, определяющее имя типа, который будет создан во время компиляции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это значение соответствует атрибуту `x:Class` в языке XAML. Дополнительные сведения см. [в разделе Использование разметки рабочего процесса](https://msdn.microsoft.com/library/e2693a12-640b-4ccb-8fb0-db3075e94aa4).  
  
 Данное свойство используется только во время разработки. После компиляции оно становится именем скомпилированного типа.  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XCodeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty XCodeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty XCodeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XCodeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly XCodeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ XCodeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable XCodeProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XCodeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет пример кода, встроенный в элемент XAML <see langword="x:Code" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данное свойство используется только во время разработки при программной отправке рабочего процесса с помощью объектной модели. Свойство содержит коллекцию `CodeTypeMemberCollection`, наполненную элементами `CodeSnippetTypeMember`. После компиляции код компилируется как часть созданного типа.  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
   
  
## Examples  
 В следующем примере представлен код XAML, в котором содержится пример кода, компиляция которого будет выполнена во время компиляции рабочего процесса.  
  
```  
<CodeActivity x:Name="codeActivity1" ExecuteCode="methodName1">  
  <x:Code><![CDATA[  
      void methodName1(object sender, EventArgs e)   
      {  
      }  
  ]]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
