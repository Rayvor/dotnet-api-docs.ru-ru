<Type Name="WindowInteropHelper" FullName="System.Windows.Interop.WindowInteropHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ee316ef3ec27328f2bc24551645b838749d2540a" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70428740" /></Metadata><TypeSignature Language="C#" Value="public sealed class WindowInteropHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WindowInteropHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.WindowInteropHelper" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WindowInteropHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowInteropHelper sealed" />
  <TypeSignature Language="F#" Value="type WindowInteropHelper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8a1fa-101">Используется для взаимодействия между кодом Windows Presentation Foundation (WPF) и Win32.</span><span class="sxs-lookup"><span data-stu-id="8a1fa-101">Assists interoperation between Windows Presentation Foundation (WPF) and Win32 code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a1fa-102">Члены этого класса позволяют вызывающему объекту иметь внутренний доступ к [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] HWND и родительскому дескриптору HWND [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Window>объекта.</span><span class="sxs-lookup"><span data-stu-id="8a1fa-102">Members of this class allows the caller to have internal access to the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] HWND and the parent HWND of a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Window>.</span></span>  <span data-ttu-id="8a1fa-103">Эти члены выполняют соответствующие проверки безопасности.</span><span class="sxs-lookup"><span data-stu-id="8a1fa-103">The proper security checks are performed by those members.</span></span>  
  
 <span data-ttu-id="8a1fa-104">Этот класс следует использовать каждый раз, когда требуется более конкретный объект на основе HWND.</span><span class="sxs-lookup"><span data-stu-id="8a1fa-104">Use this class whenever you need a more specific object based on its HWND.</span></span>  
  
 <span data-ttu-id="8a1fa-105">Примером сценария является необходимость размещения [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] диалогового окна [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] в приложении.</span><span class="sxs-lookup"><span data-stu-id="8a1fa-105">An example scenario is if you need to host a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] dialog box in a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] application.</span></span> <span data-ttu-id="8a1fa-106">Инициализируйте <xref:System.Windows.Interop.WindowInteropHelper> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] с помощью объекта окна для диалогового окна.</span><span class="sxs-lookup"><span data-stu-id="8a1fa-106">Initialize the <xref:System.Windows.Interop.WindowInteropHelper> with a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] window object for the dialog box.</span></span> <span data-ttu-id="8a1fa-107">Затем можно получить [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] дескриптор окна (HWND) <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> из свойства и [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] указать владельца окна со <xref:System.Windows.Interop.WindowInteropHelper.Owner%2A> свойством.</span><span class="sxs-lookup"><span data-stu-id="8a1fa-107">You can then get the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] window's handle (HWND) from the <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> property and specify the owner for the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] window with the <xref:System.Windows.Interop.WindowInteropHelper.Owner%2A> property.</span></span> <span data-ttu-id="8a1fa-108">В следующем примере кода показано, как использовать <xref:System.Windows.Interop.WindowInteropHelper> при [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] размещении диалогового окна в [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] приложении.</span><span class="sxs-lookup"><span data-stu-id="8a1fa-108">The following code example shows how to use <xref:System.Windows.Interop.WindowInteropHelper> when hosting a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] dialog box in a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] application.</span></span>  
  
 [!code-csharp[CorePseudocode#WindowInteropHelper](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#windowinterophelper)]
 [!code-vb[CorePseudocode#WindowInteropHelper](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#windowinterophelper)]  
  
 <span data-ttu-id="8a1fa-109">Другой сценарий, поддерживаемый этим классом, — <xref:System.Windows.Interop.HwndSource> получение объекта [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Window> из объекта.</span><span class="sxs-lookup"><span data-stu-id="8a1fa-109">Another scenario supported by this class is to obtain a <xref:System.Windows.Interop.HwndSource> object from a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Window> object.</span></span> <span data-ttu-id="8a1fa-110">Разрешает прямую обработку сообщений с помощью  <xref:System.Windows.Interop.HwndSource.AddHook%2A> метода. [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] <xref:System.Windows.Interop.HwndSource></span><span class="sxs-lookup"><span data-stu-id="8a1fa-110">The <xref:System.Windows.Interop.HwndSource> enables direct processing of [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] messages through the <xref:System.Windows.Interop.HwndSource.AddHook%2A> method.</span></span> <span data-ttu-id="8a1fa-111">Используя <xref:System.Windows.Interop.HwndSource> и <xref:System.Windows.Interop.HwndSource.AddHook%2A> вместо [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], вы все равно можете обрабатывать сообщения, которые не имеют эквивалента или обработки в. <xref:System.Windows.Window></span><span class="sxs-lookup"><span data-stu-id="8a1fa-111">By using <xref:System.Windows.Interop.HwndSource> and <xref:System.Windows.Interop.HwndSource.AddHook%2A> in place of a <xref:System.Windows.Window> you can still handle messages that have no equivalent or handling in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span></span> <span data-ttu-id="8a1fa-112"><xref:System.Windows.Interop.WindowInteropHelper> Создайте <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> <xref:System.Windows.Interop.HwndSource>с источником, а затем вызовите метод для получения из HWND в. <xref:System.Windows.Interop.WindowInteropHelper>  <xref:System.Windows.Window></span><span class="sxs-lookup"><span data-stu-id="8a1fa-112">Create a <xref:System.Windows.Interop.WindowInteropHelper> with the <xref:System.Windows.Window> source, then call <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> on the <xref:System.Windows.Interop.WindowInteropHelper> to get from HWND to <xref:System.Windows.Interop.HwndSource>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Window" />
    <altmember cref="T:System.Windows.Interop.HwndSource" />
    <altmember cref="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowInteropHelper (System.Windows.Window window);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Window window) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.WindowInteropHelper.#ctor(System.Windows.Window)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowInteropHelper(System::Windows::Window ^ window);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.WindowInteropHelper : System.Windows.Window -&gt; System.Windows.Interop.WindowInteropHelper" Usage="new System.Windows.Interop.WindowInteropHelper window" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="window" Type="System.Windows.Window" />
      </Parameters>
      <Docs>
        <param name="window"><span data-ttu-id="8a1fa-113">Объект окна [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span><span class="sxs-lookup"><span data-stu-id="8a1fa-113">A [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] window object.</span></span></param>
        <summary><span data-ttu-id="8a1fa-114">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Interop.WindowInteropHelper" /> для заданного окна [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span><span class="sxs-lookup"><span data-stu-id="8a1fa-114">Initializes a new instance of the <see cref="T:System.Windows.Interop.WindowInteropHelper" /> class for a specified [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a1fa-115">Окно может быть диалоговым окном или окном, которое в противном случае не подходит для размещения внутри границ [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] приложения.</span><span class="sxs-lookup"><span data-stu-id="8a1fa-115">The window can be a dialog box, or a window that is otherwise not suitable for being hosted within the bounds of a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureHandle">
      <MemberSignature Language="C#" Value="public IntPtr EnsureHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int EnsureHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.WindowInteropHelper.EnsureHandle" />
      <MemberSignature Language="VB.NET" Value="Public Function EnsureHandle () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr EnsureHandle();" />
      <MemberSignature Language="F#" Value="member this.EnsureHandle : unit -&gt; nativeint" Usage="windowInteropHelper.EnsureHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a1fa-116">Создает дескриптор окна (HWND), если он еще не был создан.</span><span class="sxs-lookup"><span data-stu-id="8a1fa-116">Creates the HWND of the window if the HWND has not been created yet.</span></span></summary>
        <returns><span data-ttu-id="8a1fa-117">Объект <see cref="T:System.IntPtr" />, представляющий дескриптор окна (HWND).</span><span class="sxs-lookup"><span data-stu-id="8a1fa-117">An <see cref="T:System.IntPtr" /> that represents the HWND.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a1fa-118">Используйте метод <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> , если требуется разделить создание дескриптора окна (HWND) на основе фактического отображения управляемого <xref:System.Windows.Window>объекта.</span><span class="sxs-lookup"><span data-stu-id="8a1fa-118">Use the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method when you want to separate window handle (HWND) creation from the actual showing of the managed <xref:System.Windows.Window>.</span></span> <span data-ttu-id="8a1fa-119">Это полезно, если у вас есть клиент автоматизации, который может выполнять свои задачи без необходимости отображения окна.</span><span class="sxs-lookup"><span data-stu-id="8a1fa-119">This is useful when you have an automation client that can accomplish its tasks without the need for showing a window.</span></span>  
  
 <span data-ttu-id="8a1fa-120">Если собственное окно еще не создано, этот метод создает собственное окно, устанавливает <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> свойство и возвращает HWND.</span><span class="sxs-lookup"><span data-stu-id="8a1fa-120">If the native window has not yet been created, this method creates the native window, sets the <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> property, and returns the HWND.</span></span> <span data-ttu-id="8a1fa-121">Если собственное окно уже создано, возвращается маркер существующего собственного окна.</span><span class="sxs-lookup"><span data-stu-id="8a1fa-121">If the native window has been created already, the handle of the existing native window is returned.</span></span>  
  
 <span data-ttu-id="8a1fa-122">Если в результате вызова этого метода создается собственное окно, <xref:System.Windows.Window.SourceInitialized> возникает событие.</span><span class="sxs-lookup"><span data-stu-id="8a1fa-122">If the native window is created as a result of calling this method, the <xref:System.Windows.Window.SourceInitialized> event is raised.</span></span>  
  
 <span data-ttu-id="8a1fa-123"><xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> Запрос свойства <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> после вызова метода возвращает существующий маркер окна.</span><span class="sxs-lookup"><span data-stu-id="8a1fa-123">Querying the <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> property after the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method is called returns the existing window handle.</span></span> <span data-ttu-id="8a1fa-124">Визуальное дерево не присоединяется к окну до тех пор <xref:System.Windows.Window.Show%2A> , пока не будет вызван метод.</span><span class="sxs-lookup"><span data-stu-id="8a1fa-124">The visual tree is not attached to the window until after the <xref:System.Windows.Window.Show%2A> method is called.</span></span>  
  
 <span data-ttu-id="8a1fa-125"><xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> Вызов метода более одного раза не создает новых дескрипторов окон.</span><span class="sxs-lookup"><span data-stu-id="8a1fa-125">Calling the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method more than one time does not create new window handles.</span></span> <span data-ttu-id="8a1fa-126">Вызов метода <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> , когда маркер уже был создан при вызове <xref:System.Windows.Window.Show%2A> метода, не создает новый обработчик окна.</span><span class="sxs-lookup"><span data-stu-id="8a1fa-126">Calling the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method when the handle has already been created by a call to the <xref:System.Windows.Window.Show%2A> method does not create a new window handle.</span></span> <span data-ttu-id="8a1fa-127">Собственное окно создается только в <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> том случае, если при вызове метода не существует маркеров.</span><span class="sxs-lookup"><span data-stu-id="8a1fa-127">A native window is only created when no handle exists when the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method is called.</span></span>  
  
 <span data-ttu-id="8a1fa-128">Свойства окна, заданные с помощью интерфейсов API собственного окна через p/Invoke, могут не отображаться в управляемых окнах API.</span><span class="sxs-lookup"><span data-stu-id="8a1fa-128">Window properties that are set by using native window APIs via p/invoke may not appear in the managed window APIs.</span></span> <span data-ttu-id="8a1fa-129">Например, если задать для окна самое верхнее с помощью встроенного флага MS_EX_TOPMOST после <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> вызова метода <xref:System.Windows.Window.Topmost%2A> , свойство не будет содержать значение, отражающее собственный параметр.</span><span class="sxs-lookup"><span data-stu-id="8a1fa-129">For example, if you set the window to be topmost by using the native MS_EX_TOPMOST flag after the <xref:System.Windows.Interop.WindowInteropHelper.EnsureHandle%2A> method is called, the <xref:System.Windows.Window.Topmost%2A> property is not guaranteed to reflect the native setting.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="8a1fa-130">для создания и доступа к обработчику окна.</span><span class="sxs-lookup"><span data-stu-id="8a1fa-130">to create and access a window handle.</span></span> <span data-ttu-id="8a1fa-131">Связанное перечисление:<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="8a1fa-131">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.WindowInteropHelper.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Interop.WindowInteropHelper.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a1fa-132">Получает дескриптор окна [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], используемый для создания данного объекта <see cref="T:System.Windows.Interop.WindowInteropHelper" />.</span><span class="sxs-lookup"><span data-stu-id="8a1fa-132">Gets the window handle for a [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] window that is used to create this <see cref="T:System.Windows.Interop.WindowInteropHelper" />.</span></span></summary>
        <value><span data-ttu-id="8a1fa-133">Дескриптор (HWND) окна [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span><span class="sxs-lookup"><span data-stu-id="8a1fa-133">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] window handle (HWND).</span></span></value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="8a1fa-134">для получения маркера окна.</span><span class="sxs-lookup"><span data-stu-id="8a1fa-134">to obtain a window handle.</span></span> <span data-ttu-id="8a1fa-135">Связанное перечисление:<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="8a1fa-135">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="T:System.Windows.Window" />
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public IntPtr Owner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.WindowInteropHelper.Owner" />
      <MemberSignature Language="VB.NET" Value="Public Property Owner As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Owner { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.Owner : nativeint with get, set" Usage="System.Windows.Interop.WindowInteropHelper.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a1fa-136">Возвращает или задает дескриптор окна владельца [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span><span class="sxs-lookup"><span data-stu-id="8a1fa-136">Gets or sets the handle of the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] owner window.</span></span></summary>
        <value><span data-ttu-id="8a1fa-137">Дескриптор (HWND) окна владельца.</span><span class="sxs-lookup"><span data-stu-id="8a1fa-137">The owner window handle (HWND).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a1fa-138">Вы можете переподчиненные окна, задав это свойство.</span><span class="sxs-lookup"><span data-stu-id="8a1fa-138">You can reparent windows by setting this property.</span></span> <span data-ttu-id="8a1fa-139">Как и для общего [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] программирования, не следует переделать уже используемые окна.</span><span class="sxs-lookup"><span data-stu-id="8a1fa-139">As is true for general [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] programming, do not reparent windows that are already in use.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="8a1fa-140">значение для получения или задания значения этого свойства.</span><span class="sxs-lookup"><span data-stu-id="8a1fa-140">to get or set this property value.</span></span> <span data-ttu-id="8a1fa-141">Связанное перечисление:<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="8a1fa-141">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="T:System.Windows.Window" />
      </Docs>
    </Member>
  </Members>
</Type>
