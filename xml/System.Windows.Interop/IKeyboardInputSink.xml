<Type Name="IKeyboardInputSink" FullName="System.Windows.Interop.IKeyboardInputSink">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bbebaa1ead845294617136125cc87c2b38c32199" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69168235" /></Metadata><TypeSignature Language="C#" Value="public interface IKeyboardInputSink" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IKeyboardInputSink" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.IKeyboardInputSink" />
  <TypeSignature Language="VB.NET" Value="Public Interface IKeyboardInputSink" />
  <TypeSignature Language="C++ CLI" Value="public interface class IKeyboardInputSink" />
  <TypeSignature Language="F#" Value="type IKeyboardInputSink = interface" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Предоставляет приемник сообщений от клавиатуры для компонентов, управляющих переходами по табуляции и действиями, выполняемыми с использованием сочетаний клавиш и мнемоник между границами взаимодействия и между HWND. Этот интерфейс реализует управление сообщениями от клавиатуры в сценариях взаимодействия WPF и Win32.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Приемник клавиатуры обрабатывает входные данные из определенных подмножеств общей модели ввода с клавиатуры для [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] и [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], а также позволяет обрабатывать некоторые вводы с клавиатуры для дескрипторов HWND, отличных от текущего фокуса клавиатуры.  
  
 Если компонент содержит другие компоненты и поддерживает последовательность табуляции, компонент должен также реализовывать <xref:System.Windows.Interop.IKeyboardInputSite> и контролировать, какой компонент имеет фокус.  
  
 Описание архитектуры ввода, специально реализованной для [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] взаимодействия, см. в разделе [Windows Forms и архитектура ввода взаимодействия WPF](~/docs/framework/wpf/advanced/windows-forms-and-wpf-interoperability-input-architecture.md).  
  
 <xref:System.Windows.Interop.HwndSource>и <xref:System.Windows.Interop.HwndHost> каждый из <xref:System.Windows.Interop.IKeyboardInputSink> них реализует интерфейс с помощью явных определений интерфейса. Явные определения задают поведение по умолчанию, и при необходимости доступ к ним можно <xref:System.Windows.Interop.IKeyboardInputSink> получить при помощи <xref:System.Windows.Interop.HwndSource> приведения интерфейса или <xref:System.Windows.Interop.HwndHost>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
    <altmember cref="T:System.Windows.Interop.HwndSource" />
    <altmember cref="T:System.Windows.Interop.HwndHost" />
  </Docs>
  <Members>
    <Member MemberName="HasFocusWithin">
      <MemberSignature Language="C#" Value="public bool HasFocusWithin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasFocusWithin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public Function HasFocusWithin () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasFocusWithin();" />
      <MemberSignature Language="F#" Value="abstract member HasFocusWithin : unit -&gt; bool" Usage="iKeyboardInputSink.HasFocusWithin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает значение, указывающее, имеет ли приемник или один из содержащихся в нем компонентов фокус ввода.</summary>
        <returns><see langword="true" />, если приемник или один из его дочерних компонентов в данный момент имеет фокус ввода; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод необходим для переадресации <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> вызовов к дочерним компонентам с фокусом в <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> пределах реализации. Вызывайте рекурсивный вызов <xref:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin%2A> до достижения уровня конкретного фокуса и пересылки <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> .  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputSite">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.IKeyboardInputSite KeyboardInputSite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.IKeyboardInputSite KeyboardInputSite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyboardInputSite As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Interop::IKeyboardInputSite ^ KeyboardInputSite { System::Windows::Interop::IKeyboardInputSite ^ get(); void set(System::Windows::Interop::IKeyboardInputSite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardInputSite : System.Windows.Interop.IKeyboardInputSite with get, set" Usage="System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает указатель на интерфейс <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> контейнера компонента.</summary>
        <value>Указатель на интерфейс <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> контейнера.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Изначально этому свойству должно быть присвоено значение `null`. Любой контейнер, который добавляет приемник в список компонентов, задается <xref:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite%2A> перед вызовом других методов и может быть задан несколько раз после этого. Перед реализацией необходимо задать свойство `null` равным.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="OnMnemonic">
      <MemberSignature Language="C#" Value="public bool OnMnemonic (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMnemonic(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function OnMnemonic (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool OnMnemonic(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member OnMnemonic :  * System.Windows.Input.ModifierKeys -&gt; bool" Usage="iKeyboardInputSink.OnMnemonic (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">Сообщение для мнемоники и связанных данных. Не изменяйте структуру этого сообщения. Она передается по ссылке исключительно по соображениям производительности.</param>
        <param name="modifiers">Клавиши CTRL, SHIFT и ALT.</param>
        <summary>Вызывается, когда нажата одна из мнемоник (клавиш доступа) данного приемника.</summary>
        <returns><see langword="true" />, если сообщение обработано. В противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Сообщение [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] должно иметь значение WM_CHAR, WM_SYSCHAR, WM_DEADCHAR или WM_SYSDEADCHAR.  
  
 Если компонент содержит компоненты, сообщение должно быть передано в реализацию путем вызова <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> метода каждого содержащегося компонента.  
  
 Интерфейс, который возвращает `true` FROM <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> , не вызывает <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>. Реализации могут выбрать выполнение всех конкретных сочетаний клавиш в <xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A>. и обойти. <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <altmember cref="T:System.Windows.Input.AccessKeyManager" />
      </Docs>
    </Member>
    <Member MemberName="RegisterKeyboardInputSink">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSink (System.Windows.Interop.IKeyboardInputSink sink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSink(class System.Windows.Interop.IKeyboardInputSink sink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterKeyboardInputSink (sink As IKeyboardInputSink) As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Interop::IKeyboardInputSite ^ RegisterKeyboardInputSink(System::Windows::Interop::IKeyboardInputSink ^ sink);" />
      <MemberSignature Language="F#" Value="abstract member RegisterKeyboardInputSink : System.Windows.Interop.IKeyboardInputSink -&gt; System.Windows.Interop.IKeyboardInputSite" Usage="iKeyboardInputSink.RegisterKeyboardInputSink sink" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Windows.Interop.IKeyboardInputSink" />
      </Parameters>
      <Docs>
        <param name="sink">Приемник <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> размещенного компонента.</param>
        <summary>Регистрирует интерфейс <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> размещенного компонента.</summary>
        <returns>узел <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> размещенного компонента.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Компоненты с дочерними компонентами должны поддерживать внутренние коллекции сайтов и использовать этот метод для добавления нового приемника и возврата нового сайта. Необходимо поддерживать только семейство веб-сайтов, так как приемник можно получить с сайта.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabInto">
      <MemberSignature Language="C#" Value="public bool TabInto (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TabInto(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function TabInto (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TabInto(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member TabInto : System.Windows.Input.TraversalRequest -&gt; bool" Usage="iKeyboardInputSink.TabInto request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request">Указывает, на какой позиции табуляции должен быть установлен фокус: на первой или последней.</param>
        <summary>Устанавливает фокус на первую или последнюю позицию табуляции приемника.</summary>
        <returns><see langword="true" />, если фокус установлен, как запрашивалось; <see langword="false" />, если позиции табуляции отсутствуют.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.FocusNavigationDirection.First>и <xref:System.Windows.Input.FocusNavigationDirection.Last> являются единственными соответствующими значениями, которые должны передаваться этому методу <xref:System.Windows.Input.TraversalRequest>в.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateAccelerator">
      <MemberSignature Language="C#" Value="public bool TranslateAccelerator (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TranslateAccelerator(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateAccelerator (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TranslateAccelerator(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member TranslateAccelerator :  * System.Windows.Input.ModifierKeys -&gt; bool" Usage="iKeyboardInputSink.TranslateAccelerator (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">Сообщение и связанные с ним данные. Не изменяйте эту структуру. Она передается по ссылке исключительно по соображениям производительности.</param>
        <param name="modifiers">Клавиши CTRL, SHIFT и ALT.</param>
        <summary>Обрабатывает ввод от клавиатуры на уровне сообщений KEYDOWN.</summary>
        <returns><see langword="true" />, если сообщение обработано данной реализацией метода; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Сообщение должно быть либо WM_KEYDOWN, либо WM_SYSKEYDOWN.  
  
 Если компонент не может выполнить обработку входных переводов и имеет дочерние компоненты, которые могут содержать переводы, <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> то обычно вызывает метод для дочернего компонента, который владеет текущим фокусом, прежде чем возвращать результат.  
  
 Если сообщение не может быть немедленно обработано, можно повторно отправить его из <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> реализации, если это необходимо, а затем вернуть. `false`  
  
 Основным сценарием для перевода сочетаний клавиш является обработка сообщения VK_TAB KeyDown и определение необходимости установки фокуса в компоненте, вызова <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> дочернего компонента или вызова <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A> на родительском сайте, так как последовательность табуляции достиг границ начальной или конечной границы. Некоторые компоненты могут не обрабатывали клавишу TAB таким образом.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="TranslateChar">
      <MemberSignature Language="C#" Value="public bool TranslateChar (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TranslateChar(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateChar (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TranslateChar(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member TranslateChar :  * System.Windows.Input.ModifierKeys -&gt; bool" Usage="iKeyboardInputSink.TranslateChar (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">Сообщение и связанные с ним данные. Не изменяйте эту структуру. Она передается по ссылке исключительно по соображениям производительности.</param>
        <param name="modifiers">Клавиши CTRL, SHIFT и ALT.</param>
        <summary>Обрабатывает входные сообщения WM_CHAR, WM_SYSCHAR, WM_DEADCHAR и WM_SYSDEADCHAR перед вызовом <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</summary>
        <returns><see langword="true" />, если сообщение обработано и метод <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> вызывать не следует; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При реализации этого метода для возврата `true`архитектура ввода не будет вызывать <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> это сообщение ключа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
