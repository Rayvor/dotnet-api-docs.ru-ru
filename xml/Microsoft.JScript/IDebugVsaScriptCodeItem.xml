<Type Name="IDebugVsaScriptCodeItem" FullName="Microsoft.JScript.IDebugVsaScriptCodeItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e6e89a188e79298ff58734cb4db2b15816513f0a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69293717" /></Metadata><TypeSignature Language="C#" Value="public interface IDebugVsaScriptCodeItem" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDebugVsaScriptCodeItem" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.IDebugVsaScriptCodeItem" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDebugVsaScriptCodeItem" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDebugVsaScriptCodeItem" />
  <TypeSignature Language="F#" Value="type IDebugVsaScriptCodeItem = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("6DFE759A-CB8B-4ca0-A973-1D04E0BF0B53")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e5f3a-101">Определяет методы, используемые для вычисления выражений и анализа строк.</span><span class="sxs-lookup"><span data-stu-id="e5f3a-101">Defines methods that evaluate expressions and parse strings.</span></span> <span data-ttu-id="e5f3a-102">Этот интерфейс обычно реализуется объектом, представляющим блок кода, и, как правило, вызывается отладчиком.</span><span class="sxs-lookup"><span data-stu-id="e5f3a-102">This interface is typically implemented by an object that represents a code block, and it is typically called by a debugger.</span></span> <span data-ttu-id="e5f3a-103">Этот интерфейс предоставляет дополнительные функциональные возможности, необходимые для узла IActiveScript.</span><span class="sxs-lookup"><span data-stu-id="e5f3a-103">This interface provides extra functionality that is needed by an IActiveScript host.</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Evaluate();" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : unit -&gt; obj" Usage="iDebugVsaScriptCodeItem.Evaluate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5f3a-104">При реализации в классе, анализирует представленный элементом кода блок, выражение или оператор, и возвращает соответствующее значение.</span><span class="sxs-lookup"><span data-stu-id="e5f3a-104">When implemented in a class, evaluates the block, expression, or statement represented by the code item and returns the value.</span></span> <span data-ttu-id="e5f3a-105">Обычно вызывается отладчиком, которому необходимо вычислить выражение (например, в окне контрольных значений).</span><span class="sxs-lookup"><span data-stu-id="e5f3a-105">It is typically called by a debugger that needs to evaluate an expression (in a Watch window, for example).</span></span> <span data-ttu-id="e5f3a-106">Результатом анализа выражения является значение.</span><span class="sxs-lookup"><span data-stu-id="e5f3a-106">For expressions, the value is the result of the expression.</span></span> <span data-ttu-id="e5f3a-107">Для блоков и операторов результирующим будет последнее выражение, вычисленное блоком или оператором.</span><span class="sxs-lookup"><span data-stu-id="e5f3a-107">For blocks and statements, the resulting expression is the last expression calculated by the block or statement.</span></span></summary>
        <returns><span data-ttu-id="e5f3a-108">Значение, представляющее результат анализа оператора, выражения или блока.</span><span class="sxs-lookup"><span data-stu-id="e5f3a-108">A value that represents the evaluation of the statement, expression, or block.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5f3a-109">Обратите внимание <xref:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate%2A> , что метод функционально идентичен <xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A> методу.</span><span class="sxs-lookup"><span data-stu-id="e5f3a-109">Note that the <xref:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate%2A> method is functionally identical to the <xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A> method.</span></span> <span data-ttu-id="e5f3a-110">Различаются только атрибуты маршалирования.</span><span class="sxs-lookup"><span data-stu-id="e5f3a-110">Only the marshaling attributes differ.</span></span> <span data-ttu-id="e5f3a-111">Эта версия интерфейса позволяет неуправляемому отладчику получить возвращаемое значение как `IUnknown` указатель, а не `VARIANT`как.</span><span class="sxs-lookup"><span data-stu-id="e5f3a-111">This version of the interface allows an unmanaged debugger to obtain the return value as an `IUnknown` pointer rather than a `VARIANT`.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ParseNamedBreakPoint">
      <MemberSignature Language="C#" Value="public bool ParseNamedBreakPoint (string input, out string functionName, out int nargs, out string arguments, out string returnType, out ulong offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ParseNamedBreakPoint(string input, [out] string&amp; functionName, [out] int32&amp; nargs, [out] string&amp; arguments, [out] string&amp; returnType, [out] unsigned int64&amp; offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ParseNamedBreakPoint (input As String, ByRef functionName As String, ByRef nargs As Integer, ByRef arguments As String, ByRef returnType As String, ByRef offset As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ParseNamedBreakPoint(System::String ^ input, [Runtime::InteropServices::Out] System::String ^ % functionName, [Runtime::InteropServices::Out] int % nargs, [Runtime::InteropServices::Out] System::String ^ % arguments, [Runtime::InteropServices::Out] System::String ^ % returnType, [Runtime::InteropServices::Out] System::UInt64 % offset);" />
      <MemberSignature Language="F#" Value="abstract member ParseNamedBreakPoint : string *  *  *  *  *  -&gt; bool" Usage="iDebugVsaScriptCodeItem.ParseNamedBreakPoint (input, functionName, nargs, arguments, returnType, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="functionName" Type="System.String" RefType="out" />
        <Parameter Name="nargs" Type="System.Int32" RefType="out" />
        <Parameter Name="arguments" Type="System.String" RefType="out" />
        <Parameter Name="returnType" Type="System.String" RefType="out" />
        <Parameter Name="offset" Type="System.UInt64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="e5f3a-112">Строка именованной точки останова с правильным форматом, в которой указана функция, список необязательных аргументов и необязательное смещение уровня целостности.</span><span class="sxs-lookup"><span data-stu-id="e5f3a-112">A well-formed named breakpoint string giving a function, optional argument list, and optional IL offset.</span></span></param>
        <param name="functionName"><span data-ttu-id="e5f3a-113">Параметр Out, возвращающий имя функции, полученной в результате анализа входной строки, или пустую строку в случае неправильного формата входной строки.</span><span class="sxs-lookup"><span data-stu-id="e5f3a-113">Out parameter returning the name of the function parsed out of the input string, or the empty string if the input string is not well formed.</span></span></param>
        <param name="nargs"><span data-ttu-id="e5f3a-114">Параметр Out, возвращающий количество аргументов в списке необязательных аргументов.</span><span class="sxs-lookup"><span data-stu-id="e5f3a-114">Out parameter returning the number of arguments in the optional argument list.</span></span> <span data-ttu-id="e5f3a-115">Возвращает ноль, если аргументы в списке отсутствуют или если формат строки неправильный.</span><span class="sxs-lookup"><span data-stu-id="e5f3a-115">Returns zero if there is no arguments list or if the string is not well formed.</span></span></param>
        <param name="arguments"><span data-ttu-id="e5f3a-116">Параметр Out, возвращающий список имен типов всех аргументов в списке аргументов, разделенных пробелами, либо пустую строку, если список аргументов отсутствует или формат входной строки неправильный.</span><span class="sxs-lookup"><span data-stu-id="e5f3a-116">Out parameter returning a space-separated list of the names of the types of all the arguments in the arguments list, or an empty string if the arguments list was missing or the input string was not well formed.</span></span></param>
        <param name="returnType"><span data-ttu-id="e5f3a-117">Параметр Out, возвращающий строку, содержащую возвращаемый тип функции, названный во входных данных, или пустую строку, если возвращаемый тип отсутствует, либо формат входной строки неправильный.</span><span class="sxs-lookup"><span data-stu-id="e5f3a-117">Out parameter returning a string containing the return type of the function named in the input, or the empty string if the return type was missing or the input string was not well formed.</span></span></param>
        <param name="offset"><span data-ttu-id="e5f3a-118">Значение типа long integer без знака, соответствующее смещению уровня целостности входной строки, или ноль, если смещение уровня целостности отсутствует или формат строки неправильный.</span><span class="sxs-lookup"><span data-stu-id="e5f3a-118">Unsigned long integer giving the IL offset from the input string, or zero if there was no IL offset or the string was not well formed.</span></span></param>
        <summary><span data-ttu-id="e5f3a-119">При реализации в классе, анализирует строки и возвращает полученную в результате анализа информацию.</span><span class="sxs-lookup"><span data-stu-id="e5f3a-119">When implemented in a class, parses strings and returns the parsed-out information.</span></span> <span data-ttu-id="e5f3a-120">Этот метод обычно вызывается отладчиком, который должен анализировать информацию о точке останова, представленную в формате <see langword="string" />.</span><span class="sxs-lookup"><span data-stu-id="e5f3a-120">This method is typically called by a debugger that needs to parse information about a breakpoint that is represented as a <see langword="string" />.</span></span> <span data-ttu-id="e5f3a-121">В отладчике может быть точка останова, введенная пользователем в форме *имя_функции-аргументы-смещениеIL*.</span><span class="sxs-lookup"><span data-stu-id="e5f3a-121">The debugger might have a breakpoint typed in by the user in the form *functionname-arguments-ILoffset*.</span></span> <span data-ttu-id="e5f3a-122">Строка именованной точки останова может иметь сложный формат, например <c>F.B(C.D[], int, arg : double ) : C.Abc + 123.</c></span><span class="sxs-lookup"><span data-stu-id="e5f3a-122">A named breakpoint string can have a complex format, for example, <c>F.B(C.D[], int, arg : double ) : C.Abc + 123.</c></span></span> <span data-ttu-id="e5f3a-123">Список параметров является необязательным, так же как и смещение IL.</span><span class="sxs-lookup"><span data-stu-id="e5f3a-123">The parameter list is optional, as is the IL offset.</span></span></summary>
        <returns><span data-ttu-id="e5f3a-124">Значение <see langword="true" />, если именованная точка останова проанализирована успешно; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e5f3a-124"><see langword="true" /> if the named breakpoint is successfully parsed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
