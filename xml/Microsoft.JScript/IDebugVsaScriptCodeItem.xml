<Type Name="IDebugVsaScriptCodeItem" FullName="Microsoft.JScript.IDebugVsaScriptCodeItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e6e89a188e79298ff58734cb4db2b15816513f0a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69293717" /></Metadata><TypeSignature Language="C#" Value="public interface IDebugVsaScriptCodeItem" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDebugVsaScriptCodeItem" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.IDebugVsaScriptCodeItem" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDebugVsaScriptCodeItem" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDebugVsaScriptCodeItem" />
  <TypeSignature Language="F#" Value="type IDebugVsaScriptCodeItem = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("6DFE759A-CB8B-4ca0-A973-1D04E0BF0B53")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Определяет методы, используемые для вычисления выражений и анализа строк. Этот интерфейс обычно реализуется объектом, представляющим блок кода, и, как правило, вызывается отладчиком. Этот интерфейс предоставляет дополнительные функциональные возможности, необходимые для узла IActiveScript.</summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Evaluate();" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : unit -&gt; obj" Usage="iDebugVsaScriptCodeItem.Evaluate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>При реализации в классе, анализирует представленный элементом кода блок, выражение или оператор, и возвращает соответствующее значение. Обычно вызывается отладчиком, которому необходимо вычислить выражение (например, в окне контрольных значений). Результатом анализа выражения является значение. Для блоков и операторов результирующим будет последнее выражение, вычисленное блоком или оператором.</summary>
        <returns>Значение, представляющее результат анализа оператора, выражения или блока.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обратите внимание <xref:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate%2A> , что метод функционально идентичен <xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A> методу. Различаются только атрибуты маршалирования. Эта версия интерфейса позволяет неуправляемому отладчику получить возвращаемое значение как `IUnknown` указатель, а не `VARIANT`как.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ParseNamedBreakPoint">
      <MemberSignature Language="C#" Value="public bool ParseNamedBreakPoint (string input, out string functionName, out int nargs, out string arguments, out string returnType, out ulong offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ParseNamedBreakPoint(string input, [out] string&amp; functionName, [out] int32&amp; nargs, [out] string&amp; arguments, [out] string&amp; returnType, [out] unsigned int64&amp; offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ParseNamedBreakPoint (input As String, ByRef functionName As String, ByRef nargs As Integer, ByRef arguments As String, ByRef returnType As String, ByRef offset As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ParseNamedBreakPoint(System::String ^ input, [Runtime::InteropServices::Out] System::String ^ % functionName, [Runtime::InteropServices::Out] int % nargs, [Runtime::InteropServices::Out] System::String ^ % arguments, [Runtime::InteropServices::Out] System::String ^ % returnType, [Runtime::InteropServices::Out] System::UInt64 % offset);" />
      <MemberSignature Language="F#" Value="abstract member ParseNamedBreakPoint : string *  *  *  *  *  -&gt; bool" Usage="iDebugVsaScriptCodeItem.ParseNamedBreakPoint (input, functionName, nargs, arguments, returnType, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="functionName" Type="System.String" RefType="out" />
        <Parameter Name="nargs" Type="System.Int32" RefType="out" />
        <Parameter Name="arguments" Type="System.String" RefType="out" />
        <Parameter Name="returnType" Type="System.String" RefType="out" />
        <Parameter Name="offset" Type="System.UInt64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">Строка именованной точки останова с правильным форматом, в которой указана функция, список необязательных аргументов и необязательное смещение уровня целостности.</param>
        <param name="functionName">Параметр Out, возвращающий имя функции, полученной в результате анализа входной строки, или пустую строку в случае неправильного формата входной строки.</param>
        <param name="nargs">Параметр Out, возвращающий количество аргументов в списке необязательных аргументов. Возвращает ноль, если аргументы в списке отсутствуют или если формат строки неправильный.</param>
        <param name="arguments">Параметр Out, возвращающий список имен типов всех аргументов в списке аргументов, разделенных пробелами, либо пустую строку, если список аргументов отсутствует или формат входной строки неправильный.</param>
        <param name="returnType">Параметр Out, возвращающий строку, содержащую возвращаемый тип функции, названный во входных данных, или пустую строку, если возвращаемый тип отсутствует, либо формат входной строки неправильный.</param>
        <param name="offset">Значение типа long integer без знака, соответствующее смещению уровня целостности входной строки, или ноль, если смещение уровня целостности отсутствует или формат строки неправильный.</param>
        <summary>При реализации в классе, анализирует строки и возвращает полученную в результате анализа информацию. Этот метод обычно вызывается отладчиком, который должен анализировать информацию о точке останова, представленную в формате <see langword="string" />. В отладчике может быть точка останова, введенная пользователем в форме *имя_функции-аргументы-смещениеIL*. Строка именованной точки останова может иметь сложный формат, например <c>F.B(C.D[], int, arg : double ) : C.Abc + 123.</c> Список параметров является необязательным, так же как и смещение IL.</summary>
        <returns>Значение <see langword="true" />, если именованная точка останова проанализирована успешно; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
