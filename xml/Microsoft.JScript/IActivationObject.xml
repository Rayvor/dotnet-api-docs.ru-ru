<Type Name="IActivationObject" FullName="Microsoft.JScript.IActivationObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="73d1dbfaa2cdc6eb8168643f35b1b6f19b186426" /><Meta Name="ms.sourcegitcommit" Value="0528148687f8b0e0a3d0f550431a777fbe5346bc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/25/2019" /><Meta Name="ms.locfileid" Value="64434404" /></Metadata><TypeSignature Language="C#" Value="public interface IActivationObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IActivationObject" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.IActivationObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface IActivationObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IActivationObject" />
  <TypeSignature Language="F#" Value="type IActivationObject = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="da7e6-101">Определяет методы для разрешения области.</span><span class="sxs-lookup"><span data-stu-id="da7e6-101">Defines methods for resolving scope.</span></span> <span data-ttu-id="da7e6-102">Этот интерфейс реализуется всеми объектами, которые входят в состав иерархии областей.</span><span class="sxs-lookup"><span data-stu-id="da7e6-102">This interface is implemented by all objects that take part in a scope hierarchy.</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.JScript.ActivationObject" />
    <altmember cref="T:Microsoft.JScript.ScriptObject" />
    <altmember cref="T:Microsoft.JScript.GlobalScope" />
    <altmember cref="T:System.Reflection.FieldInfo" />
  </Docs>
  <Members>
    <Member MemberName="GetDefaultThisObject">
      <MemberSignature Language="C#" Value="public object GetDefaultThisObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetDefaultThisObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetDefaultThisObject" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDefaultThisObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetDefaultThisObject();" />
      <MemberSignature Language="F#" Value="abstract member GetDefaultThisObject : unit -&gt; obj" Usage="iActivationObject.GetDefaultThisObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da7e6-103">При реализации в классе получает текущую область по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="da7e6-103">When implemented in a class, gets the current default scope.</span></span> <span data-ttu-id="da7e6-104">Объект, в котором содержится область оператора <see langword="with" />, или глобальная область.</span><span class="sxs-lookup"><span data-stu-id="da7e6-104">Either the contained object of a <see langword="with" /> statement scope, or the global scope.</span></span></summary>
        <returns><span data-ttu-id="da7e6-105">Текущая область по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="da7e6-105">The current default scope.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetField (string name, int lexLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name, int32 lexLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetField(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetField (name As String, lexLevel As Integer) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetField(System::String ^ name, int lexLevel);" />
      <MemberSignature Language="F#" Value="abstract member GetField : string * int -&gt; System.Reflection.FieldInfo" Usage="iActivationObject.GetField (name, lexLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="lexLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="da7e6-106">Имя искомого поля.</span><span class="sxs-lookup"><span data-stu-id="da7e6-106">The name of the field to search for.</span></span></param>
        <param name="lexLevel"><span data-ttu-id="da7e6-107">Лексический уровень поиска.</span><span class="sxs-lookup"><span data-stu-id="da7e6-107">The lexical level to search.</span></span></param>
        <summary><span data-ttu-id="da7e6-108">При реализации в классе возвращает поле с заданным именем путем поиска в иерархии областей.</span><span class="sxs-lookup"><span data-stu-id="da7e6-108">When implemented in a class, returns a field that has the specified name by searching the scope hierarchy.</span></span> <span data-ttu-id="da7e6-109">Этот метод выполняет поиск только в области, заданной на лексическом уровне.</span><span class="sxs-lookup"><span data-stu-id="da7e6-109">This method searches only the scope that is specified by the lexical level.</span></span></summary>
        <returns><span data-ttu-id="da7e6-110">Объект <see cref="T:System.Reflection.FieldInfo" /> с заданным именем.</span><span class="sxs-lookup"><span data-stu-id="da7e6-110">A <see cref="T:System.Reflection.FieldInfo" /> object that has the specified name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da7e6-111">Этот метод применим к полям, которые нельзя разрешить во время компиляции.</span><span class="sxs-lookup"><span data-stu-id="da7e6-111">This method applies to fields that cannot be resolved at compile time.</span></span> <span data-ttu-id="da7e6-112">Это происходит, когда `eval` выражение ссылается на поле во внешней области.</span><span class="sxs-lookup"><span data-stu-id="da7e6-112">This happens when an `eval` expression refers to a field in the outer scope.</span></span> <span data-ttu-id="da7e6-113">Так как `eval` выражение может объявить локальное поле с тем же именем, поле не может быть раннее связывание с поле внешней области.</span><span class="sxs-lookup"><span data-stu-id="da7e6-113">Because the `eval` expression can declare a local field with the same name, the field cannot be early bound to the outer scope field.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
      </Docs>
    </Member>
    <Member MemberName="GetGlobalScope">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.GlobalScope GetGlobalScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.JScript.GlobalScope GetGlobalScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetGlobalScope" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGlobalScope () As GlobalScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::GlobalScope ^ GetGlobalScope();" />
      <MemberSignature Language="F#" Value="abstract member GetGlobalScope : unit -&gt; Microsoft.JScript.GlobalScope" Usage="iActivationObject.GetGlobalScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.GlobalScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="da7e6-114">При реализации в классе получает глобальную область, выполняя поиск по иерархии областей до тех пор, пока не будет найдена область, содержащая статические переменные, например область модулей.</span><span class="sxs-lookup"><span data-stu-id="da7e6-114">When implemented in a class, gets the global scope by searching the scope hierarchy until it finds a scope that includes static variables, for example, a module scope.</span></span></summary>
        <returns><span data-ttu-id="da7e6-115">Глобальная область.</span><span class="sxs-lookup"><span data-stu-id="da7e6-115">The global scope.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetLocalField (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetLocalField(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetLocalField(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLocalField (name As String) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetLocalField(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetLocalField : string -&gt; System.Reflection.FieldInfo" Usage="iActivationObject.GetLocalField name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="da7e6-116">Имя поля.</span><span class="sxs-lookup"><span data-stu-id="da7e6-116">The name of the field.</span></span></param>
        <summary><span data-ttu-id="da7e6-117">При реализации в классе получает локальное объявление полей с заданными именами.</span><span class="sxs-lookup"><span data-stu-id="da7e6-117">When implemented in a class, gets the local declaration of a field that has the specified name.</span></span> <span data-ttu-id="da7e6-118">Используется во время компиляции для проверки на наличие ошибок.</span><span class="sxs-lookup"><span data-stu-id="da7e6-118">This is used at compile time for error checking.</span></span></summary>
        <returns><span data-ttu-id="da7e6-119">Локальное объявление поля.</span><span class="sxs-lookup"><span data-stu-id="da7e6-119">The local declaration of the field.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
      </Docs>
    </Member>
    <Member MemberName="GetMemberValue">
      <MemberSignature Language="C#" Value="public object GetMemberValue (string name, int lexlevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetMemberValue(string name, int32 lexlevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetMemberValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMemberValue (name As String, lexlevel As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetMemberValue(System::String ^ name, int lexlevel);" />
      <MemberSignature Language="F#" Value="abstract member GetMemberValue : string * int -&gt; obj" Usage="iActivationObject.GetMemberValue (name, lexlevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="lexlevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="da7e6-120">Имя искомого члена.</span><span class="sxs-lookup"><span data-stu-id="da7e6-120">The name of the member to search for.</span></span></param>
        <param name="lexlevel"><span data-ttu-id="da7e6-121">Лексический уровень поиска.</span><span class="sxs-lookup"><span data-stu-id="da7e6-121">The lexical level to search.</span></span></param>
        <summary><span data-ttu-id="da7e6-122">При реализации в классе получает значение заданного члена, выполняя поиск по иерархии областей.</span><span class="sxs-lookup"><span data-stu-id="da7e6-122">When implemented in a class, gets the value of the specified member by searching the scope hierarchy.</span></span> <span data-ttu-id="da7e6-123">Этот метод выполняет поиск только в области, заданной на лексическом уровне.</span><span class="sxs-lookup"><span data-stu-id="da7e6-123">This method searches only the scope that is specified by the lexical level.</span></span></summary>
        <returns><span data-ttu-id="da7e6-124">Значение члена <paramref name="name" />.</span><span class="sxs-lookup"><span data-stu-id="da7e6-124">The value of the member <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da7e6-125">Этот метод применяется к элементам, которые не может быть разрешена во время компиляции.</span><span class="sxs-lookup"><span data-stu-id="da7e6-125">This method applies to members that cannot be resolved at compile time.</span></span> <span data-ttu-id="da7e6-126">Это происходит, когда `eval` выражение ссылается на член во внешней области.</span><span class="sxs-lookup"><span data-stu-id="da7e6-126">This occurs when an `eval` expression refers to a member in the outer scope.</span></span> <span data-ttu-id="da7e6-127">Так как `eval` выражение может объявить локальный член с тем же именем, элемент не может быть раннее связывание с членом во внешней области.</span><span class="sxs-lookup"><span data-stu-id="da7e6-127">Because the `eval` expression can declare a local member with the same name, the member cannot be early bound to the outer scope member.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
  </Members>
</Type>