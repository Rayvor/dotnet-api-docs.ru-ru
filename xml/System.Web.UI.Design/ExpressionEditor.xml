<Type Name="ExpressionEditor" FullName="System.Web.UI.Design.ExpressionEditor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="48fedb086caeaf341300f29853c3c3cb0649a9e8" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69044341" /></Metadata><TypeSignature Language="C#" Value="public abstract class ExpressionEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionEditor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionEditor abstract" />
  <TypeSignature Language="F#" Value="type ExpressionEditor = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Определяет набор свойств и методов, чтобы оценить выражение, связанное со свойством элемента управления во время разработки и чтобы предоставить таблицу редактора выражений узлу визуального конструктора для использования в диалоговом окне редактора выражений. Это абстрактный класс.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Узел визуального конструктора, например [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], <xref:System.Web.UI.Design.ExpressionEditor> использует класс для представления пользовательских таблиц редактора выражений для пользователя, а затем вычисляет выбранное выражение для отрисовки во время разработки.  
  
 При просмотре <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> свойства элемента управления в сетке свойств времени разработки визуальный конструктор отображает диалоговое окно для задания выражений для свойства элемента управления. Тип выражения можно выбрать на основе списка префиксов выражений. При выборе префикса выражения из списка визуальный конструктор использует связанные <xref:System.Web.UI.Design.ExpressionEditor> объекты и <xref:System.Web.UI.Design.ExpressionEditorSheet> для задания, вычисления и преобразования строки выражения на основе синтаксиса этого типа выражения. Визуальный конструктор задает выражение для связанного свойства элемента управления, а затем использует вычисленный результат выражения для назначения значений свойств элемента управления, отображаемых в области конструктора.  
  
 Статические <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> методы получают редактор выражений, связанный с определенным префиксом выражения или построителем выражений. <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> Свойство<xref:System.Web.UI.Design.ExpressionEditor> объекта возвращает заданный префикс выражения. <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> Метод вычисляет строку входного выражения. <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> Метод<xref:System.Web.UI.Design.ExpressionEditorSheet> возвращает реализацию, которая используется для запроса свойств пользовательского выражения в диалоговом окне выражения.  
  
 Как правило, для поддержки нового типа выражения во время разработки вы определяете префикс уникального выражения и предоставляете <xref:System.Web.Compilation.ExpressionBuilder> пользовательские <xref:System.Web.UI.Design.ExpressionEditor> и реализации. При необходимости можно предоставить пользовательскую <xref:System.Web.UI.Design.ExpressionEditorSheet> реализацию, определяющую свойства, которые используются для формирования выражения в диалоговом окне выражения.  
  
 Префикс выражения определяет тип пользовательского выражения и связывает выражение с построителем выражений и редактором выражений. При анализе пользовательских выражений на странице префикс выражения используется для создания экземпляров связанных <xref:System.Web.Compilation.ExpressionBuilder> классов и. <xref:System.Web.UI.Design.ExpressionEditor> Чтобы связать префикс выражения с построителем выражений и редактором выражений, <xref:System.Web.Compilation.ExpressionEditorAttribute> примените <xref:System.Web.Compilation.ExpressionPrefixAttribute> атрибуты и к пользовательскому <xref:System.Web.Compilation.ExpressionBuilder> классу и настройте префикс `expressionBuilders` выражения для построителя выражений в элемент в файле веб-конфигурации. Префикс не требуется, но настоятельно рекомендуется.  
  
   
  
## Examples  
 В следующем примере кода показано, как выполнить наследование от <xref:System.Web.UI.Design.ExpressionEditor> класса для определения пользовательского редактора выражений.  
  
 [!code-csharp[CustomExpressionEditor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/customexpressioneditor/cs/CustomAppSettingsExpression.cs#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Следующие шаги необходимы для получения пользовательского <see cref="T:System.Web.UI.Design.ExpressionEditor" /> класса: 
— Переопределите <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> метод для вычисления типа пользовательского выражения во время разработки.  
  
— При необходимости переопределите метод <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> , чтобы он возвращал пользовательский класс, определяющий свойства, которые объединяются для формирования пользовательского выражения.  
  
— Примените <see cref="T:System.Web.Compilation.ExpressionEditorAttribute" /> атрибут <see cref="T:System.Web.Compilation.ExpressionBuilder" /> в объявлении класса, чтобы связать пользовательский построитель выражений с классом редактора производного выражения.  
  
Например, <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" /> класс является производным <see cref="T:System.Web.UI.Design.ExpressionEditor" /> от класса и предоставляет реализацию для оценки и связывания ссылки на строку ресурса со свойством элемента управления во время разработки. Класс связан с префиксом <see langword="Resources" /> выражения и <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" /> реализацией. <see cref="T:System.Web.Compilation.ResourceExpressionBuilder" /> Метод возвращает объект <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />, который определяет отдельные свойства, которые формируют выражение ссылки на ресурс. <see cref="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /></para></block>
    <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
    <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
    <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
    <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
    <altmember cref="T:System.Web.Configuration.ExpressionBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.Design.ExpressionEditor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поскольку класс является абстрактным, экземпляр <xref:System.Web.UI.Design.ExpressionEditor> класса нельзя создать напрямую с помощью <xref:System.Web.UI.Design.ExpressionEditor.%23ctor%2A> конструктора. <xref:System.Web.UI.Design.ExpressionEditor>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При наследовании от <see cref="T:System.Web.UI.Design.ExpressionEditor" /> класса <see cref="M:System.Web.UI.Design.ExpressionEditor.#ctor" /> Переопределите конструктор, чтобы реализовать пользовательские действия инициализации для реализации редактора выражений.</para></block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public abstract object EvaluateExpression (string expression, object parseTimeData, Type propertyType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EvaluateExpression(string expression, object parseTimeData, class System.Type propertyType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EvaluateExpression (expression As String, parseTimeData As Object, propertyType As Type, serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ EvaluateExpression(System::String ^ expression, System::Object ^ parseTimeData, Type ^ propertyType, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member EvaluateExpression : string * obj * Type * IServiceProvider -&gt; obj" Usage="expressionEditor.EvaluateExpression (expression, parseTimeData, propertyType, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="parseTimeData" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">Оцениваемая строка выражения. Это выражение не содержит префикса выражения.</param>
        <param name="parseTimeData">Объект, содержащий дополнительные сведения анализа для оценки параметра <paramref name="expression" />. Они обычно предоставляются построителем выражений.</param>
        <param name="propertyType">Тип свойства элемента управления, к которому привязан параметр <paramref name="expression" />.</param>
        <param name="serviceProvider">Реализация поставщика службы, предоставленная узелом конструктора, используемым для получения дополнительных служб времени разработки.</param>
        <summary>Оценивает строку выражения и предоставляет значение времени выполнения для свойства элемента управления.</summary>
        <returns>Объект, на который ссылается оцененная строка выражения, если оценка выражения прошла успешно; в противном случае — значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Узел визуального конструктора использует <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> метод для вычисления выражения и предоставления значения времени разработки для связанного свойства элемента управления.  
  
 Визуальный конструктор использует <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression%2A?displayProperty=nameWithType> метод для синтаксического анализа строки выражения во время разработки, а затем <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A> вызывает метод с проанализированными данными выражения. Визуальный конструктор использует вычисленный результат выражения для назначения значений свойств элемента управления, отображаемых в области конструктора.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Классы, производные от <see cref="T:System.Web.UI.Design.ExpressionEditor" /> класса, должны <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> переопределять метод для вычисления типа пользовательского выражения во время разработки.  
  
Как минимум, <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /> реализация должна использовать следующие шаги: 
1.  Оцените строку выражения и определите объект, на который ссылается выражение.  
  
2.  Если <see langword="null" />строка выражения не может быть вычислена, возвращается значение.  
  
3.  <see cref="M:System.Type.IsAssignableFrom(System.Type)" /> Используйте методдля,чтобыопределить,можнолиназначитьобъект,накоторыйуказываетссылка,непосредственнотипусвойстваэлементауправления,азатем,взависимостиотрезультата,выполнитьодно<paramref name="propertyType" /> из следующих действий. 
— Если объект, на который указывает ссылка, может быть непосредственно назначен свойству Control, возвращается объект, на который указывает ссылка, для выражения.  
  
— Если объект, на который указывает ссылка, является простым типом, например строкой, то возвращается объект, на который указывает ссылка.  
  
В противном случае определите, может ли объект, на который указывает ссылка, быть назначен или преобразован в тип свойства.  
  
4.  <see cref="Overload:System.ComponentModel.TypeConverter.CanConvertFrom" /> Используйте метод<see cref="T:System.ComponentModel.TypeConverter" /> для объекта<paramref name="propertyType" /> , чтобы определить, можно ли преобразовать объект, на который указывает ссылка, в тип свойства элемента управления, а затем, в зависимости от результата, выполнить одно из следующих действий. 
— Если объект может быть преобразован в тип свойства элемента управления, то возвращается преобразованный объект с помощью <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> метода.  
  
— Если объект, на который указывает ссылка, не может <paramref name="propertyType" />быть назначен или преобразован в, возвращается объект, на который указывает ссылка.  
  
При необходимости <paramref name="parseTimeData" /> <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> реализация может использовать объект, предоставляемый реализацией, чтобы оптимизировать или помочь в вычислении строки входного выражения. <see cref="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" /></para></block>
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
      </Docs>
    </Member>
    <Member MemberName="ExpressionPrefix">
      <MemberSignature Language="C#" Value="public string ExpressionPrefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpressionPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpressionPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpressionPrefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpressionPrefix : string" Usage="System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает префикс выражений, идентифицирующий строки выражений, поддерживаемые реализацией редактора выражений.</summary>
        <value>Строка, представляющая префикс для выражений, поддерживаемых классом, производным от класса <see cref="T:System.Web.UI.Design.ExpressionEditor" />; в противном случае — пустая строка (""), если с редактором выражений не связан никакой префикс выражения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Префикс выражения определяет тип пользовательского выражения и связывает выражение с построителем выражений и редактором выражений. При анализе пользовательских выражений на странице префикс выражения используется для создания экземпляров связанных <xref:System.Web.Compilation.ExpressionBuilder> классов и. <xref:System.Web.UI.Design.ExpressionEditor> Чтобы связать префикс выражения с построителем выражений и редактором выражений, <xref:System.Web.Compilation.ExpressionEditorAttribute> примените <xref:System.Web.Compilation.ExpressionPrefixAttribute> атрибуты и к пользовательскому <xref:System.Web.Compilation.ExpressionBuilder> классу и настройте префикс `expressionBuilders` выражения для построителя выражений в элемент в файле веб-конфигурации.  
  
 Как правило, производные классы не переопределяют <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> свойство. Базовый <xref:System.Web.UI.Design.ExpressionEditor> класс <xref:System.Web.Compilation.ExpressionPrefixAttribute> задает значение на основе атрибута для связанного <xref:System.Web.Compilation.ExpressionBuilder> объекта. <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExpressionEditor">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает реализацию <see cref="T:System.Web.UI.Design.ExpressionEditor" />, связанную с префиксом выражения или построителем выражений.</summary>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExpressionEditor">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ExpressionEditor GetExpressionEditor (string expressionPrefix, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.ExpressionEditor GetExpressionEditor(string expressionPrefix, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExpressionEditor (expressionPrefix As String, serviceProvider As IServiceProvider) As ExpressionEditor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::ExpressionEditor ^ GetExpressionEditor(System::String ^ expressionPrefix, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="static member GetExpressionEditor : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditor" Usage="System.Web.UI.Design.ExpressionEditor.GetExpressionEditor (expressionPrefix, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionPrefix" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expressionPrefix">Префикс выражения, используемый для поиска связанного редактора выражения.</param>
        <param name="serviceProvider">Реализация поставщика службы, предоставленная узелом конструктора, используемым для получения дополнительных служб времени разработки.</param>
        <summary>Возвращает реализацию <see cref="T:System.Web.UI.Design.ExpressionEditor" />, связанную с заданным префиксом выражения.</summary>
        <returns>Реализация <see cref="T:System.Web.UI.Design.ExpressionEditor" />, связанная с параметром <paramref name="expressionPrefix" />; в противном случае — значение <see langword="null" />, если параметр <paramref name="expressionPrefix" /> не определен или не связан с объектом <see cref="T:System.Web.UI.Design.ExpressionEditor" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте перегрузки статического <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> метода, чтобы <xref:System.Web.UI.Design.ExpressionEditor> найти объект, связанный с определенным префиксом выражения или типом построителя выражений.  
  
 Для каждого типа пользовательского выражения префикс выражения определяет соответствующий построитель выражений и редактор выражений. При анализе пользовательских выражений на странице префикс выражения используется для создания экземпляров связанных <xref:System.Web.Compilation.ExpressionBuilder> классов и. <xref:System.Web.UI.Design.ExpressionEditor>  
  
 Чтобы связать префикс выражения с построителем выражений и редактором выражений, <xref:System.Web.Compilation.ExpressionEditorAttribute> примените <xref:System.Web.Compilation.ExpressionPrefixAttribute> атрибуты и к пользовательскому <xref:System.Web.Compilation.ExpressionBuilder> классу и настройте префикс `expressionBuilders` выражения для построителя выражений в элемент в файле веб-конфигурации.  
  
 Чтобы найти соответствующий редактор выражений для префикса выражения, <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> метод перечисляет доступные <xref:System.Web.Compilation.ExpressionBuilder> реализации для соответствующего префикса. Реализации можно настроить `expressionBuilders` в разделе файла веб-конфигурации. <xref:System.Web.Compilation.ExpressionBuilder> Если доступная <xref:System.Web.Compilation.ExpressionBuilder> реализация определяет префикс выражения <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> , метод возвращает тип <xref:System.Web.Compilation.ExpressionEditorAttribute> , указанный <xref:System.Web.Compilation.ExpressionBuilder> в атрибуте метаданных.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="serviceProvider" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditor">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ExpressionEditor GetExpressionEditor (Type expressionBuilderType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.ExpressionEditor GetExpressionEditor(class System.Type expressionBuilderType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.Type,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExpressionEditor (expressionBuilderType As Type, serviceProvider As IServiceProvider) As ExpressionEditor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::ExpressionEditor ^ GetExpressionEditor(Type ^ expressionBuilderType, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="static member GetExpressionEditor : Type * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditor" Usage="System.Web.UI.Design.ExpressionEditor.GetExpressionEditor (expressionBuilderType, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionBuilderType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expressionBuilderType">Тип производного класса построителя выражений, используемый для обнаружения связанного редактора выражений.</param>
        <param name="serviceProvider">Реализация поставщика службы, предоставленная узелом конструктора, используемым для получения дополнительных служб времени разработки.</param>
        <summary>Возвращает реализацию <see cref="T:System.Web.UI.Design.ExpressionEditor" />, связанную с заданным типом построителя выражений.</summary>
        <returns>Реализация <see cref="T:System.Web.UI.Design.ExpressionEditor" />, связанная с параметром <paramref name="expressionBuilderType" />; в противном случае — значение <see langword="null" />, если параметр <paramref name="expressionBuilderType" /> не может быть обнаружен или для него не существует связанного редактора <see cref="T:System.Web.UI.Design.ExpressionEditor" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте статические <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> перегрузки, чтобы <xref:System.Web.UI.Design.ExpressionEditor> найти объект, связанный с определенным префиксом выражения или типом построителя выражений.  
  
 Для каждого типа пользовательского выражения префикс выражения определяет соответствующий построитель выражений и редактор выражений. При анализе пользовательских выражений на странице префикс выражения используется для создания экземпляров связанных <xref:System.Web.Compilation.ExpressionBuilder> классов и. <xref:System.Web.UI.Design.ExpressionEditor>  
  
 Чтобы связать префикс выражения с построителем выражений и редактором выражений, <xref:System.Web.Compilation.ExpressionEditorAttribute> примените <xref:System.Web.Compilation.ExpressionPrefixAttribute> атрибуты и к пользовательскому <xref:System.Web.Compilation.ExpressionBuilder> классу и настройте префикс `expressionBuilders` выражения для построителя выражений в элемент в файле веб-конфигурации.  
  
 Метод перечисляет доступные <xref:System.Web.Compilation.ExpressionBuilder> реализации для размещения `expressionBuilderType`. <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> Реализации можно настроить `expressionBuilders` в разделе файла веб-конфигурации. <xref:System.Web.Compilation.ExpressionBuilder> Если `expressionBuilderType` найден в наборе доступных <xref:System.Web.Compilation.ExpressionBuilder> реализаций, <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A> метод <xref:System.Web.Compilation.ExpressionEditorAttribute> Возвращает тип <xref:System.Web.Compilation.ExpressionBuilder> , указанный в атрибуте метаданных.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="expressionBuilderType" /> имеет значение <see langword="null" />.  
  
- или - 
 <paramref name="serviceProvider" /> — <see langword="null" />.</exception>
        <altmember cref="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditorSheet">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet (string expression, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet(string expression, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExpressionEditorSheet (expression As String, serviceProvider As IServiceProvider) As ExpressionEditorSheet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::Design::ExpressionEditorSheet ^ GetExpressionEditorSheet(System::String ^ expression, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member GetExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet&#xA;override this.GetExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="expressionEditor.GetExpressionEditorSheet (expression, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditorSheet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">Набор строк выражений для свойства элемента управления, используемый для инициализации таблицы редактора выражений.</param>
        <param name="serviceProvider">Реализация поставщика службы, предоставленная узелом конструктора, используемым для получения дополнительных служб времени разработки.</param>
        <summary>Возвращает таблицу редактора выражений, связанную с текущим редактором выражений.</summary>
        <returns>Объект <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" />, определяющий настраиваемые свойства выражения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> Метод<xref:System.Web.UI.Design.ExpressionEditorSheet> возвращает реализацию, которая определяет строки, объединяемые для формирования пользовательского выражения. Визуальный конструктор использует таблицу редактора выражений для запроса одной или нескольких строк, объединяемых в пользовательское выражение. Метод базового класса возвращает таблицу редактора выражений по умолчанию, которая использует одну входную строку для формирования выражения. Лист редактора выражений определяет сетку свойств для выражения. Таким образом, свойства, предоставляемые редактором выражений, становятся свойствами, которые могут быть определены для выражения в диалоговом окне.  
  
 Классы, производные от <xref:System.Web.UI.Design.ExpressionEditor> класса, при необходимости могут <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> переопределять метод, чтобы предоставить настраиваемую таблицу редактора выражений. Настраиваемая таблица редактора выражений может разрешать входные данные во время разработки для нескольких свойств, объединяемых вместе для формирования строки выражения.  
  
 Например, <xref:System.Web.UI.Design.ResourceExpressionEditor> класс является производным <xref:System.Web.UI.Design.ExpressionEditor> от класса и предоставляет реализацию для оценки и связывания ссылки на строку ресурса со свойством элемента управления во время разработки. Класс связан с префиксом `Resources` выражения и <xref:System.Web.UI.Design.ResourceExpressionEditor> реализацией. <xref:System.Web.Compilation.ResourceExpressionBuilder> Метод возвращает объект <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, который определяет отдельные свойства, которые формируют выражение ссылки на ресурс. <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Как правило, для предоставления нового типа выражения во время разработки вы определяете префикс уникального выражения и предоставляете <see cref="T:System.Web.Compilation.ExpressionBuilder" /> пользовательские <see cref="T:System.Web.UI.Design.ExpressionEditor" /> и реализации. При необходимости можно предоставить пользовательскую <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> реализацию, определяющую свойства, используемые для формирования выражения. Несмотря на то, что файл конфигурации определяет префикс, необходимо также применить <see cref="T:System.Web.Compilation.ExpressionPrefixAttribute" /> объект <see cref="T:System.Web.Compilation.ExpressionEditorAttribute" /> и объект.  
  
Переопределите <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> метод, чтобы он возвращал таблицу редактора выражений, которая определяет входные данные во время разработки для нескольких свойств в пользовательском выражении. При выборе свойства элемента управления и типа редактора выражений визуальный конструктор вызывает <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> метод, а затем предоставляет строку текущего выражения, заданную для свойства элемента управления. Используется <paramref name="expression" /> для задания начальных значений свойств выражения. Используется <paramref name="serviceProvider" /> для инициализации конструктора настраиваемой таблицы выражений и для доступа к службам, предоставляемым узлом конструктора. Например, вызовите <see cref="M:System.IServiceProvider.GetService(System.Type)" /> метод <see cref="T:System.Web.UI.Design.IWebApplication" /> с типом для доступа к элементам проекта, документам или сведениям о файле конфигурации, которые предоставляются в визуальном конструкторе.</para></block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>
