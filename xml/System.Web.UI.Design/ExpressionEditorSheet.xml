<Type Name="ExpressionEditorSheet" FullName="System.Web.UI.Design.ExpressionEditorSheet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="997f9e8e7cd826820dd4eee3904701d0e7714eaf" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70690556" /></Metadata><TypeSignature Language="C#" Value="public abstract class ExpressionEditorSheet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionEditorSheet extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionEditorSheet" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionEditorSheet" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionEditorSheet abstract" />
  <TypeSignature Language="F#" Value="type ExpressionEditorSheet = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет таблицу редактора времени разработки для настраиваемого выражения. Этот класс должен наследоваться.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Настраиваемая таблица редактора выражений позволяет разработчику задавать свойства в пользовательском выражении во время разработки. Значения свойств элемента управления можно задать с помощью строк выражений. строки выражений вычисляются во время выполнения построителем выражений и во время разработки с помощью редактора выражений.  
  
 При просмотре <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> свойства элемента управления в сетке свойств времени разработки визуальный конструктор отображает диалоговое окно для задания выражений, предоставляющих значение для свойства элемента управления. Тип выражения можно выбрать на основе списка префиксов выражений. При выборе префикса выражения из списка визуальный конструктор использует связанные <xref:System.Web.UI.Design.ExpressionEditor> объекты и <xref:System.Web.UI.Design.ExpressionEditorSheet> для вычисления и преобразования строки выражения на основе синтаксиса для этого типа выражения. Визуальный конструктор использует свойства таблицы редактора выражений для запроса одной или нескольких строк, объединяемых в строку настраиваемого выражения.  
  
 Как правило, для предоставления нового типа выражения во время разработки вы определяете префикс уникального выражения и предоставляете <xref:System.Web.Compilation.ExpressionBuilder> пользовательские <xref:System.Web.UI.Design.ExpressionEditor> и реализации. При необходимости можно предоставить пользовательскую <xref:System.Web.UI.Design.ExpressionEditorSheet> реализацию, определяющую свойства, используемые для формирования выражения. Чтобы связать префикс выражения с построителем выражений и редактором выражений, примените <xref:System.Web.Compilation.ExpressionEditorAttribute> атрибут <xref:System.Web.Compilation.ExpressionPrefixAttribute> и атрибут к пользовательскому <xref:System.Web.Configuration.ExpressionBuilder> классу, а затем настройте префикс выражения для построителя выражений в `expressionBuilders` элемент в файле веб-конфигурации.  
  
 Реализация <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> метода по умолчанию возвращает базовый лист редактора, который использует одну входную строку для формирования выражения. Пользовательские редакторы выражений, производные от <xref:System.Web.UI.Design.ExpressionEditor> , могут <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> переопределять метод для возврата реализации пользовательского таблицы редактора. Как правило, Настраиваемая таблица редактора содержит несколько свойств, которые используются для построения строки выражения. <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> Метод возвращает результирующую строку выражения на основе текущих свойств выражения.  
  
 Например, <xref:System.Web.UI.Design.ResourceExpressionEditor> класс является производным <xref:System.Web.UI.Design.ExpressionEditor> от класса и предоставляет реализацию для оценки и связывания ссылки на строку ресурса со свойством элемента управления во время разработки. Класс связан с префиксом `Resources` выражения и <xref:System.Web.UI.Design.ResourceExpressionEditor> реализацией. <xref:System.Web.Compilation.ResourceExpressionBuilder> Метод возвращает объект <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, который определяет отдельные свойства, которые формируют выражение ссылки на ресурс. <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A>  
  
 При наследовании от <xref:System.Web.UI.Design.ExpressionEditorSheet> класса необходимо переопределить следующие члены:  
  
-   <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> Метод, возвращающий реализацию настраиваемой таблицы редактора.  
  
-   <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> Конструктор для реализации настраиваемых действий инициализации для реализации таблицы редактора выражений.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Создайте настраиваемую таблицу редактора выражений из <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> класса, если вы определяете новый тип выражения для значений свойств элемента управления и хотите построить строку выражения на основе нескольких значений свойств выражения. Реализация производного класса должна содержать следующее: 
— Общее свойство для каждого уникального значения в строке выражения, которое может быть задано во время разработки.  
  
— Реализация <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> метода, который формирует строку настраиваемого выражения из значений свойств таблицы редактора.  
  
— При необходимости реализация конструктора, которая задает начальные значения свойств таблицы редактора.  
  
Связанный настраиваемый класс редактора выражений создает экземпляр производной таблицы редактора в <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> методе, инициализирует этот экземпляр текущим набором строк выражений для свойства элемента управления и возвращает экземпляр в визуальный конструктор. Визуальный конструктор позволяет задать свойства листа выражений, а затем вызывает <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> метод для формирования строки выражения из значений свойств листа входных выражений.</para></block>
    <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
    <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionEditorSheet (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionEditorSheet(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Design.ExpressionEditorSheet : IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="new System.Web.UI.Design.ExpressionEditorSheet serviceProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Реализация поставщика службы, предоставленная узелом конструктора, используемым для получения дополнительных служб времени разработки.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поскольку класс является абстрактным, экземпляр <xref:System.Web.UI.Design.ExpressionEditorSheet> нельзя создать напрямую с помощью <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> конструктора. <xref:System.Web.UI.Design.ExpressionEditorSheet>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При наследовании от <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> класса <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> Переопределите конструктор, чтобы реализовать пользовательские действия инициализации для реализации таблицы редактора выражений.  
  
Например, класс пользовательской таблицы редактора выражений, реализующий дополнительные свойства выражений, может определять значения по умолчанию для свойств выражения в <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> конструкторе. Класс пользовательской таблицы редактора выражений может определять дополнительные перегрузки открытых конструкторов, которые используют значения входных параметров для установки начальных значений свойств выражения.</para></block>
        <altmember cref="Overload:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="public abstract string GetExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetExpression() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetExpression () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetExpression();" />
      <MemberSignature Language="F#" Value="abstract member GetExpression : unit -&gt; string" Usage="expressionEditorSheet.GetExpression " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>При переопределении в производном классе возвращает строку выражения, сформированную значениями свойств таблицы редактора выражений.</summary>
        <returns>Строка настраиваемого выражения для текущих значений свойств.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Настраиваемая таблица редактора выражений содержит параметры времени разработки для нескольких свойств выражений, которые объединяются для формирования строки выражения. Значения свойств элемента управления можно задать с помощью строк выражений. строки выражений вычисляются во время выполнения построителем выражений.  
  
 <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> Метод возвращает строку выражения, построенную на основе свойств текущего выражения. Визуальный конструктор позволяет задать свойства листа выражений, а затем вызывает <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> метод для получения строки выражения и задания значения свойства элемента управления.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Создайте настраиваемую таблицу редактора выражений из <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> класса, если вы определяете новый тип выражения для значений свойств элемента управления и хотите построить строку выражения на основе нескольких значений свойств выражения. Реализация производного класса должна содержать следующее: 
— Общее свойство для каждого уникального значения в строке выражения, которое может быть задано во время разработки.  
  
— Реализация <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> метода, который формирует строку настраиваемого выражения из значений свойств таблицы редактора.  
  
— При необходимости реализация конструктора, которая задает начальные значения свойств таблицы редактора.  
  
Связанный пользовательский класс редактора выражений создает экземпляр производной таблицы редактора в <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> методе, инициализирует этот экземпляр с текущим набором строк выражений для свойства элемента управления, а затем возвращает экземпляр в визуальный элемент дизайнеров. Визуальный конструктор позволяет задать свойства листа выражений, а затем вызывает <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> метод для формирования строки выражения из значений свойств листа входных выражений.</para></block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="System.Web.UI.Design.ExpressionEditorSheet.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, допустима ли строка выражения.</summary>
        <value>Значение <see langword="true" />, если строка выражения допустима; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Базовая реализация всегда возвращает значение `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="ServiceProvider">
      <MemberSignature Language="C#" Value="public IServiceProvider ServiceProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider ServiceProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceProvider As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IServiceProvider ^ ServiceProvider { IServiceProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceProvider : IServiceProvider" Usage="System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает реализацию поставщика служб, используемую таблицей редактора выражений.</summary>
        <value>Интерфейс <see cref="T:System.IServiceProvider" />, обычно предоставляемый узелом разработки, который может использоваться для получения дополнительных служб времени разработки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте конструктор, чтобы задать реализацию для настраиваемой таблицы редактора выражений. <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A>  
  
 <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> Свойство можно использовать для доступа к службам, предоставляемым узлом конструктора. Например, вызовите <xref:System.IServiceProvider.GetService%2A> метод <xref:System.Web.UI.Design.IWebApplication> с интерфейсом для доступа к элементам проекта, документам или сведениям о файле конфигурации, которые предоставляются в визуальном конструкторе.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      </Docs>
    </Member>
  </Members>
</Type>
