<Type Name="ExpressionEditorSheet" FullName="System.Web.UI.Design.ExpressionEditorSheet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="997f9e8e7cd826820dd4eee3904701d0e7714eaf" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69044548" /></Metadata><TypeSignature Language="C#" Value="public abstract class ExpressionEditorSheet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionEditorSheet extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionEditorSheet" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionEditorSheet" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionEditorSheet abstract" />
  <TypeSignature Language="F#" Value="type ExpressionEditorSheet = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5a454-101">Представляет таблицу редактора времени разработки для настраиваемого выражения.</span><span class="sxs-lookup"><span data-stu-id="5a454-101">Represents a design-time editor sheet for a custom expression.</span></span> <span data-ttu-id="5a454-102">Этот класс должен наследоваться.</span><span class="sxs-lookup"><span data-stu-id="5a454-102">This class must be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a454-103">Настраиваемая таблица редактора выражений позволяет разработчику задавать свойства в пользовательском выражении во время разработки.</span><span class="sxs-lookup"><span data-stu-id="5a454-103">A custom expression editor sheet lets a developer set properties on a custom expression at design-time.</span></span> <span data-ttu-id="5a454-104">Значения свойств элемента управления можно задать с помощью строк выражений. строки выражений вычисляются во время выполнения построителем выражений и во время разработки с помощью редактора выражений.</span><span class="sxs-lookup"><span data-stu-id="5a454-104">Control property values can be set using expression strings; the expression strings are evaluated at run time by an expression builder and at design time by an expression editor.</span></span>  
  
 <span data-ttu-id="5a454-105">При просмотре <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> свойства элемента управления в сетке свойств времени разработки визуальный конструктор отображает диалоговое окно для задания выражений, предоставляющих значение для свойства элемента управления.</span><span class="sxs-lookup"><span data-stu-id="5a454-105">When you browse the <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> property for a control in the design-time properties grid, the visual designer displays a dialog box to set expressions that provide the value for a control property.</span></span> <span data-ttu-id="5a454-106">Тип выражения можно выбрать на основе списка префиксов выражений.</span><span class="sxs-lookup"><span data-stu-id="5a454-106">You can select the expression type based on a list of expression prefixes.</span></span> <span data-ttu-id="5a454-107">При выборе префикса выражения из списка визуальный конструктор использует связанные <xref:System.Web.UI.Design.ExpressionEditor> объекты и <xref:System.Web.UI.Design.ExpressionEditorSheet> для вычисления и преобразования строки выражения на основе синтаксиса для этого типа выражения.</span><span class="sxs-lookup"><span data-stu-id="5a454-107">When you select an expression prefix from the list, the visual designer uses the associated <xref:System.Web.UI.Design.ExpressionEditor> and <xref:System.Web.UI.Design.ExpressionEditorSheet> objects to evaluate and convert the expression string based on the syntax for that type of expression.</span></span> <span data-ttu-id="5a454-108">Визуальный конструктор использует свойства таблицы редактора выражений для запроса одной или нескольких строк, объединяемых в строку настраиваемого выражения.</span><span class="sxs-lookup"><span data-stu-id="5a454-108">The visual designer uses expression editor sheet properties to prompt for one or more strings that combine into the custom expression string.</span></span>  
  
 <span data-ttu-id="5a454-109">Как правило, для предоставления нового типа выражения во время разработки вы определяете префикс уникального выражения и предоставляете <xref:System.Web.Compilation.ExpressionBuilder> пользовательские <xref:System.Web.UI.Design.ExpressionEditor> и реализации.</span><span class="sxs-lookup"><span data-stu-id="5a454-109">Typically, to supply a new expression type at design time, you define a unique expression prefix and provide custom <xref:System.Web.Compilation.ExpressionBuilder> and <xref:System.Web.UI.Design.ExpressionEditor> implementations.</span></span> <span data-ttu-id="5a454-110">При необходимости можно предоставить пользовательскую <xref:System.Web.UI.Design.ExpressionEditorSheet> реализацию, определяющую свойства, используемые для формирования выражения.</span><span class="sxs-lookup"><span data-stu-id="5a454-110">Optionally, you can provide a custom <xref:System.Web.UI.Design.ExpressionEditorSheet> implementation that defines properties that are used to form the expression.</span></span> <span data-ttu-id="5a454-111">Чтобы связать префикс выражения с построителем выражений и редактором выражений, примените <xref:System.Web.Compilation.ExpressionEditorAttribute> атрибут <xref:System.Web.Compilation.ExpressionPrefixAttribute> и атрибут к пользовательскому <xref:System.Web.Configuration.ExpressionBuilder> классу, а затем настройте префикс выражения для построителя выражений в `expressionBuilders` элемент в файле веб-конфигурации.</span><span class="sxs-lookup"><span data-stu-id="5a454-111">To associate an expression prefix with an expression builder and an expression editor, apply the <xref:System.Web.Compilation.ExpressionEditorAttribute> attribute and an <xref:System.Web.Compilation.ExpressionPrefixAttribute> attribute to the custom <xref:System.Web.Configuration.ExpressionBuilder> class, and then configure the expression prefix for an expression builder in the `expressionBuilders` element in the Web configuration file.</span></span>  
  
 <span data-ttu-id="5a454-112">Реализация <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> метода по умолчанию возвращает базовый лист редактора, который использует одну входную строку для формирования выражения.</span><span class="sxs-lookup"><span data-stu-id="5a454-112">The default implementation of the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method returns a basic editor sheet, which uses a single input string to form the expression.</span></span> <span data-ttu-id="5a454-113">Пользовательские редакторы выражений, производные от <xref:System.Web.UI.Design.ExpressionEditor> , могут <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> переопределять метод для возврата реализации пользовательского таблицы редактора.</span><span class="sxs-lookup"><span data-stu-id="5a454-113">Custom expression editors that are derived from the <xref:System.Web.UI.Design.ExpressionEditor> can override the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method to return a custom editor sheet implementation.</span></span> <span data-ttu-id="5a454-114">Как правило, Настраиваемая таблица редактора содержит несколько свойств, которые используются для построения строки выражения.</span><span class="sxs-lookup"><span data-stu-id="5a454-114">Typically, a custom editor sheet contains multiple properties that are used to build the expression string.</span></span> <span data-ttu-id="5a454-115"><xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> Метод возвращает результирующую строку выражения на основе текущих свойств выражения.</span><span class="sxs-lookup"><span data-stu-id="5a454-115">The <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> method returns the resulting expression string based on the current expression properties.</span></span>  
  
 <span data-ttu-id="5a454-116">Например, <xref:System.Web.UI.Design.ResourceExpressionEditor> класс является производным <xref:System.Web.UI.Design.ExpressionEditor> от класса и предоставляет реализацию для оценки и связывания ссылки на строку ресурса со свойством элемента управления во время разработки.</span><span class="sxs-lookup"><span data-stu-id="5a454-116">For example, the <xref:System.Web.UI.Design.ResourceExpressionEditor> class derives from the <xref:System.Web.UI.Design.ExpressionEditor> class and provides an implementation for evaluating and associating a resource string reference with a control property at design time.</span></span> <span data-ttu-id="5a454-117">Класс связан с префиксом `Resources` выражения и <xref:System.Web.UI.Design.ResourceExpressionEditor> реализацией. <xref:System.Web.Compilation.ResourceExpressionBuilder></span><span class="sxs-lookup"><span data-stu-id="5a454-117">The <xref:System.Web.Compilation.ResourceExpressionBuilder> class is associated with the expression prefix `Resources` and the <xref:System.Web.UI.Design.ResourceExpressionEditor> implementation.</span></span> <span data-ttu-id="5a454-118">Метод возвращает объект <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, который определяет отдельные свойства, которые формируют выражение ссылки на ресурс. <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A></span><span class="sxs-lookup"><span data-stu-id="5a454-118">The <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A> method returns a <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, which defines the individual properties that form a resource reference expression.</span></span>  
  
 <span data-ttu-id="5a454-119">При наследовании от <xref:System.Web.UI.Design.ExpressionEditorSheet> класса необходимо переопределить следующие члены:</span><span class="sxs-lookup"><span data-stu-id="5a454-119">When you inherit from the <xref:System.Web.UI.Design.ExpressionEditorSheet> class, you must override the following members:</span></span>  
  
-   <span data-ttu-id="5a454-120"><xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> Метод, возвращающий реализацию настраиваемой таблицы редактора.</span><span class="sxs-lookup"><span data-stu-id="5a454-120">The <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method to return a custom editor sheet implementation.</span></span>  
  
-   <span data-ttu-id="5a454-121"><xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> Конструктор для реализации настраиваемых действий инициализации для реализации таблицы редактора выражений.</span><span class="sxs-lookup"><span data-stu-id="5a454-121">The <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> constructor to implement custom initialization actions for your expression editor sheet implementation.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="5a454-122">Создайте настраиваемую таблицу редактора выражений из <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> класса, если вы определяете новый тип выражения для значений свойств элемента управления и хотите построить строку выражения на основе нескольких значений свойств выражения.</span><span class="sxs-lookup"><span data-stu-id="5a454-122">Derive a custom expression editor sheet from the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class, if you are defining a new expression type for control property values and you want to build the expression string based on multiple expression property values.</span></span> <span data-ttu-id="5a454-123">Реализация производного класса должна содержать следующее:</span><span class="sxs-lookup"><span data-stu-id="5a454-123">A derived class implementation should contain the following:</span></span> 
<span data-ttu-id="5a454-124">— Общее свойство для каждого уникального значения в строке выражения, которое может быть задано во время разработки.</span><span class="sxs-lookup"><span data-stu-id="5a454-124">-   A public property for each distinct value in the expression string that can be set at design time.</span></span>  
  
<span data-ttu-id="5a454-125">— Реализация <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> метода, который формирует строку настраиваемого выражения из значений свойств таблицы редактора.</span><span class="sxs-lookup"><span data-stu-id="5a454-125">-   An implementation of the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> method that forms the custom expression string from the editor sheet property values.</span></span>  
  
<span data-ttu-id="5a454-126">— При необходимости реализация конструктора, которая задает начальные значения свойств таблицы редактора.</span><span class="sxs-lookup"><span data-stu-id="5a454-126">-   Optionally, a constructor implementation that sets the initial values of the editor sheet properties.</span></span>  
  
<span data-ttu-id="5a454-127">Связанный настраиваемый класс редактора выражений создает экземпляр производной таблицы редактора в <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> методе, инициализирует этот экземпляр текущим набором строк выражений для свойства элемента управления и возвращает экземпляр в визуальный конструктор.</span><span class="sxs-lookup"><span data-stu-id="5a454-127">The associated custom expression editor class creates an instance of the derived editor sheet in the <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> method, initializes that instance with the current expression string set for the control property, and returns the instance to the visual designer.</span></span> <span data-ttu-id="5a454-128">Визуальный конструктор позволяет задать свойства листа выражений, а затем вызывает <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> метод для формирования строки выражения из значений свойств листа входных выражений.</span><span class="sxs-lookup"><span data-stu-id="5a454-128">The visual designer allows you to set the expression sheet properties, and then calls the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> method to form the expression string from the input expression sheet property values.</span></span></para></block>
    <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
    <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionEditorSheet (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionEditorSheet(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Design.ExpressionEditorSheet : IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="new System.Web.UI.Design.ExpressionEditorSheet serviceProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="5a454-129">Реализация поставщика службы, предоставленная узелом конструктора, используемым для получения дополнительных служб времени разработки.</span><span class="sxs-lookup"><span data-stu-id="5a454-129">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</span></span></param>
        <summary><span data-ttu-id="5a454-130">Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" />.</span><span class="sxs-lookup"><span data-stu-id="5a454-130">Initializes a new instance of the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a454-131">Поскольку класс является абстрактным, экземпляр <xref:System.Web.UI.Design.ExpressionEditorSheet> нельзя создать напрямую с помощью <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> конструктора. <xref:System.Web.UI.Design.ExpressionEditorSheet></span><span class="sxs-lookup"><span data-stu-id="5a454-131">Because the <xref:System.Web.UI.Design.ExpressionEditorSheet> class is abstract, you cannot create an instance of an <xref:System.Web.UI.Design.ExpressionEditorSheet> directly using the <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5a454-132">При наследовании от <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> класса <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> Переопределите конструктор, чтобы реализовать пользовательские действия инициализации для реализации таблицы редактора выражений.</span><span class="sxs-lookup"><span data-stu-id="5a454-132">When deriving from the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class, override the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> constructor to implement custom initialization actions for your expression editor sheet implementation.</span></span>  
  
<span data-ttu-id="5a454-133">Например, класс пользовательской таблицы редактора выражений, реализующий дополнительные свойства выражений, может определять значения по умолчанию для свойств выражения в <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> конструкторе.</span><span class="sxs-lookup"><span data-stu-id="5a454-133">For example, a custom expression editor sheet class that implements additional expression properties can define the default values for the expression properties in the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> constructor.</span></span> <span data-ttu-id="5a454-134">Класс пользовательской таблицы редактора выражений может определять дополнительные перегрузки открытых конструкторов, которые используют значения входных параметров для установки начальных значений свойств выражения.</span><span class="sxs-lookup"><span data-stu-id="5a454-134">A custom expression editor sheet class can define additional public constructor overloads that use input parameter values to set the initial values for the expression properties.</span></span></para></block>
        <altmember cref="Overload:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="public abstract string GetExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetExpression() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetExpression () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetExpression();" />
      <MemberSignature Language="F#" Value="abstract member GetExpression : unit -&gt; string" Usage="expressionEditorSheet.GetExpression " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5a454-135">При переопределении в производном классе возвращает строку выражения, сформированную значениями свойств таблицы редактора выражений.</span><span class="sxs-lookup"><span data-stu-id="5a454-135">When overridden in a derived class, returns the expression string that is formed by the expression editor sheet property values.</span></span></summary>
        <returns><span data-ttu-id="5a454-136">Строка настраиваемого выражения для текущих значений свойств.</span><span class="sxs-lookup"><span data-stu-id="5a454-136">The custom expression string for the current property values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a454-137">Настраиваемая таблица редактора выражений содержит параметры времени разработки для нескольких свойств выражений, которые объединяются для формирования строки выражения.</span><span class="sxs-lookup"><span data-stu-id="5a454-137">A custom expression editor sheet contains design-time settings for multiple expression properties, which are combined to form an expression string.</span></span> <span data-ttu-id="5a454-138">Значения свойств элемента управления можно задать с помощью строк выражений. строки выражений вычисляются во время выполнения построителем выражений.</span><span class="sxs-lookup"><span data-stu-id="5a454-138">Control property values can be set using expression strings; the expression strings are evaluated at run time by an expression builder.</span></span>  
  
 <span data-ttu-id="5a454-139"><xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> Метод возвращает строку выражения, построенную на основе свойств текущего выражения.</span><span class="sxs-lookup"><span data-stu-id="5a454-139">The <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> method returns an expression string that is built from the current expression properties.</span></span> <span data-ttu-id="5a454-140">Визуальный конструктор позволяет задать свойства листа выражений, а затем вызывает <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> метод для получения строки выражения и задания значения свойства элемента управления.</span><span class="sxs-lookup"><span data-stu-id="5a454-140">The visual designer allows you to set the expression sheet properties, and then calls the <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> method to get the expression string and set the control property value.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5a454-141">Создайте настраиваемую таблицу редактора выражений из <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> класса, если вы определяете новый тип выражения для значений свойств элемента управления и хотите построить строку выражения на основе нескольких значений свойств выражения.</span><span class="sxs-lookup"><span data-stu-id="5a454-141">Derive a custom expression editor sheet from the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class, if you are defining a new expression type for control property values and you want to build the expression string based on multiple expression property values.</span></span> <span data-ttu-id="5a454-142">Реализация производного класса должна содержать следующее:</span><span class="sxs-lookup"><span data-stu-id="5a454-142">A derived class implementation should contain the following:</span></span> 
<span data-ttu-id="5a454-143">— Общее свойство для каждого уникального значения в строке выражения, которое может быть задано во время разработки.</span><span class="sxs-lookup"><span data-stu-id="5a454-143">-   A public property for each distinct value in the expression string that can be set at design time.</span></span>  
  
<span data-ttu-id="5a454-144">— Реализация <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> метода, который формирует строку настраиваемого выражения из значений свойств таблицы редактора.</span><span class="sxs-lookup"><span data-stu-id="5a454-144">-   An implementation of the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> method that forms the custom expression string from the editor sheet property values.</span></span>  
  
<span data-ttu-id="5a454-145">— При необходимости реализация конструктора, которая задает начальные значения свойств таблицы редактора.</span><span class="sxs-lookup"><span data-stu-id="5a454-145">-   Optionally, a constructor implementation that sets the initial values of the editor sheet properties.</span></span>  
  
<span data-ttu-id="5a454-146">Связанный пользовательский класс редактора выражений создает экземпляр производной таблицы редактора в <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> методе, инициализирует этот экземпляр с текущим набором строк выражений для свойства элемента управления, а затем возвращает экземпляр в визуальный элемент дизайнеров.</span><span class="sxs-lookup"><span data-stu-id="5a454-146">The associated custom expression editor class creates an instance of the derived editor sheet in the <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> method, initializes that instance with the current expression string set for the control property, and then returns the instance to the visual designer.</span></span> <span data-ttu-id="5a454-147">Визуальный конструктор позволяет задать свойства листа выражений, а затем вызывает <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> метод для формирования строки выражения из значений свойств листа входных выражений.</span><span class="sxs-lookup"><span data-stu-id="5a454-147">The visual designer allows you to set the expression sheet properties, and then calls the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> method to form the expression string from the input expression sheet property values.</span></span></para></block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="System.Web.UI.Design.ExpressionEditorSheet.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a454-148">Возвращает значение, указывающее, допустима ли строка выражения.</span><span class="sxs-lookup"><span data-stu-id="5a454-148">Gets a value that indicates whether the expression string is valid.</span></span></summary>
        <value><span data-ttu-id="5a454-149">Значение <see langword="true" />, если строка выражения допустима; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5a454-149"><see langword="true" />, if the expression string is valid; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a454-150">Базовая реализация всегда возвращает значение `true`.</span><span class="sxs-lookup"><span data-stu-id="5a454-150">This base implementation always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="ServiceProvider">
      <MemberSignature Language="C#" Value="public IServiceProvider ServiceProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider ServiceProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceProvider As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IServiceProvider ^ ServiceProvider { IServiceProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceProvider : IServiceProvider" Usage="System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5a454-151">Получает реализацию поставщика служб, используемую таблицей редактора выражений.</span><span class="sxs-lookup"><span data-stu-id="5a454-151">Gets the service provider implementation that is used by the expression editor sheet.</span></span></summary>
        <value><span data-ttu-id="5a454-152">Интерфейс <see cref="T:System.IServiceProvider" />, обычно предоставляемый узелом разработки, который может использоваться для получения дополнительных служб времени разработки.</span><span class="sxs-lookup"><span data-stu-id="5a454-152">An <see cref="T:System.IServiceProvider" />, typically provided by the design host, that can be used to obtain additional design-time services.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a454-153">Используйте конструктор, чтобы задать реализацию для настраиваемой таблицы редактора выражений. <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A></span><span class="sxs-lookup"><span data-stu-id="5a454-153">Use the <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> constructor to set the <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> implementation for a custom expression editor sheet.</span></span>  
  
 <span data-ttu-id="5a454-154"><xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> Свойство можно использовать для доступа к службам, предоставляемым узлом конструктора.</span><span class="sxs-lookup"><span data-stu-id="5a454-154">The <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> property can be used to access services that are provided by the designer host.</span></span> <span data-ttu-id="5a454-155">Например, вызовите <xref:System.IServiceProvider.GetService%2A> метод <xref:System.Web.UI.Design.IWebApplication> с интерфейсом для доступа к элементам проекта, документам или сведениям о файле конфигурации, которые предоставляются в визуальном конструкторе.</span><span class="sxs-lookup"><span data-stu-id="5a454-155">For example, call the <xref:System.IServiceProvider.GetService%2A> method with the <xref:System.Web.UI.Design.IWebApplication> interface to access project items, documents, or configuration file details that are provided through the visual designer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      </Docs>
    </Member>
  </Members>
</Type>
