<Type Name="DataBindingHandler" FullName="System.Web.UI.Design.DataBindingHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="187726972f2c2fe03838a6b3c74420e62a7b38b9" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64088126" /></Metadata><TypeSignature Language="C#" Value="public abstract class DataBindingHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataBindingHandler extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.DataBindingHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataBindingHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataBindingHandler abstract" />
  <TypeSignature Language="F#" Value="type DataBindingHandler = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="878b6-101">Предоставляет базовый класс для обработчика привязки данных.</span><span class="sxs-lookup"><span data-stu-id="878b6-101">Provides a base class for a data-binding handler.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="878b6-102"><xref:System.Web.UI.Design.DataBindingHandler> Предоставляет базовый класс для обработчиков привязки данных.</span><span class="sxs-lookup"><span data-stu-id="878b6-102"><xref:System.Web.UI.Design.DataBindingHandler> provides a base class for data-binding handlers.</span></span> <span data-ttu-id="878b6-103">Обработчик привязки данных можно в конструкторе для выполнения привязки данных к информативного отображения элемента управления в рабочей области конструирования.</span><span class="sxs-lookup"><span data-stu-id="878b6-103">A data-binding handler can be used within a designer to perform data-binding to enable a meaningful display of the control on the design surface.</span></span> <span data-ttu-id="878b6-104">Обычно конструктор элемента управления отвечает за эту функцию.</span><span class="sxs-lookup"><span data-stu-id="878b6-104">Typically a control's designer is responsible for this functionality.</span></span> <span data-ttu-id="878b6-105">Тем не менее, когда элемент управления не отображается в области конструктора такие, как в шаблоне другого элемента управления, у него нет конструктора, и эта функциональность обеспечивается обработчиком привязки данных, если оно было указано с <xref:System.Web.UI.DataBindingHandlerAttribute> в коде для элемента управления .</span><span class="sxs-lookup"><span data-stu-id="878b6-105">However, when a control is not live on the design surface, such as within the template of another control, it does not have a designer, and this functionality is provided by a data-binding handler if one has been specified with a <xref:System.Web.UI.DataBindingHandlerAttribute> in the code for the control.</span></span>  
  
 <span data-ttu-id="878b6-106">Чтобы использовать обработчик привязки данных, необходимо иметь управления с привязкой к данным свойства или свойств <xref:System.Web.UI.DataBindingHandlerAttribute> указанный в коде, указывающее тип обработчика привязки данных для использования.</span><span class="sxs-lookup"><span data-stu-id="878b6-106">To use a data-binding handler, the control which has the data-bound property or properties must have a <xref:System.Web.UI.DataBindingHandlerAttribute> specified within its code that indicates the type of data-binding handler to use.</span></span>  
  
 <span data-ttu-id="878b6-107">Например <xref:System.Web.UI.WebControls.Label> с которым связан элемент управления <xref:System.Web.UI.Design.TextDataBindingHandler> помощью <xref:System.Web.UI.DataBindingHandlerAttribute> в коде для <xref:System.Web.UI.WebControls.Label> класса.</span><span class="sxs-lookup"><span data-stu-id="878b6-107">For example, the <xref:System.Web.UI.WebControls.Label> control is associated with the <xref:System.Web.UI.Design.TextDataBindingHandler> class through a <xref:System.Web.UI.DataBindingHandlerAttribute> in the code for the <xref:System.Web.UI.WebControls.Label> class.</span></span> <span data-ttu-id="878b6-108">В шаблоне для <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.Label> , свойство которого текст был привязан к данным элемент управления отображается слово «С привязкой к данным» на метке.</span><span class="sxs-lookup"><span data-stu-id="878b6-108">Within a template for a <xref:System.Web.UI.WebControls.DataList>, a <xref:System.Web.UI.WebControls.Label> control whose text property has been data bound displays the word "DataBound" on the label.</span></span> <span data-ttu-id="878b6-109">Без обработчика привязки данных метка будет невидима во время разработки, так как он не имеет конструктора, его свойства с привязкой к данным в шаблонного элемента управления во время разработки.</span><span class="sxs-lookup"><span data-stu-id="878b6-109">Without the data-binding handler, the label would be invisible at design-time, as it does not have a designer to bind its data-bound properties while in a templated control at design-time.</span></span>  
  
 <span data-ttu-id="878b6-110">Чтобы реализовать обработчик привязки данных, определите новый класс, производный от этого класса и реализуйте <xref:System.Web.UI.Design.DataBindingHandler.DataBindControl%2A> метод, чтобы задать соответствующие свойства.</span><span class="sxs-lookup"><span data-stu-id="878b6-110">To implement a data-binding handler, define a new class that derives from this class and implement the <xref:System.Web.UI.Design.DataBindingHandler.DataBindControl%2A> method to set the appropriate properties.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.DataBindingHandlerAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataBindingHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataBindingHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataBindingHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="878b6-111">Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.Design.DataBindingHandler" />.</span><span class="sxs-lookup"><span data-stu-id="878b6-111">Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataBindingHandler" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindControl">
      <MemberSignature Language="C#" Value="public abstract void DataBindControl (System.ComponentModel.Design.IDesignerHost designerHost, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DataBindControl(class System.ComponentModel.Design.IDesignerHost designerHost, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void DataBindControl(System::ComponentModel::Design::IDesignerHost ^ designerHost, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member DataBindControl : System.ComponentModel.Design.IDesignerHost * System.Web.UI.Control -&gt; unit" Usage="dataBindingHandler.DataBindControl (designerHost, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designerHost" Type="System.ComponentModel.Design.IDesignerHost" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="designerHost"><span data-ttu-id="878b6-112">узел <see cref="T:System.ComponentModel.Design.IDesignerHost" /> для документа.</span><span class="sxs-lookup"><span data-stu-id="878b6-112">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the document.</span></span></param>
        <param name="control"><span data-ttu-id="878b6-113">Привязываемый элемент управления <see cref="T:System.Web.UI.Control" />.</span><span class="sxs-lookup"><span data-stu-id="878b6-113">The <see cref="T:System.Web.UI.Control" /> to bind.</span></span></param>
        <summary><span data-ttu-id="878b6-114">Привязывает указанный элемент управления.</span><span class="sxs-lookup"><span data-stu-id="878b6-114">Binds the specified control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="878b6-115">Этот метод должен быть реализован в производном классе для предоставления функциональности для пользовательского обработчика привязки данных.</span><span class="sxs-lookup"><span data-stu-id="878b6-115">This method should be implemented in a derived class to provide functionality to a custom data-binding handler.</span></span> <span data-ttu-id="878b6-116">Логика для привязки данных в этот метод должен быть реализован и может различаться для разных типов, для которых обработчик привязки данных для привязки свойства или свойств.</span><span class="sxs-lookup"><span data-stu-id="878b6-116">The logic for the data binding should be implemented within this method, and can be specific to the type or types that the data-binding handler is to bind a property or properties on.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="878b6-117">Большинство обработчиков событий привязки данных требуется исследование коллекции привязки данных в элементе управления, с помощью <see cref="T:System.Web.UI.IDataBindingsAccessor" /> интерфейс, чтобы определить, если все определенные свойства, он может обрабатывать привязкой к данным.</span><span class="sxs-lookup"><span data-stu-id="878b6-117">Most data binding handlers will need to examine the data bindings collection on the control, using the <see cref="T:System.Web.UI.IDataBindingsAccessor" /> interface, to determine if any specific properties it can handle are data-bound.</span></span></para></block>
        <altmember cref="T:System.Web.UI.IDataBindingsAccessor" />
      </Docs>
    </Member>
  </Members>
</Type>