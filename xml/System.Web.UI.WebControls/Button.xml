<Type Name="Button" FullName="System.Web.UI.WebControls.Button">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e7b88765a552528ba6b9f5073acfe70a09d3aa84" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73396846" /></Metadata><TypeSignature Language="C#" Value="public class Button : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IButtonControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Button extends System.Web.UI.WebControls.WebControl implements class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.IButtonControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Button" />
  <TypeSignature Language="VB.NET" Value="Public Class Button&#xA;Inherits WebControl&#xA;Implements IButtonControl, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class Button : System::Web::UI::WebControls::WebControl, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::IButtonControl" />
  <TypeSignature Language="F#" Value="type Button = class&#xA;    inherit WebControl&#xA;    interface IButtonControl&#xA;    interface IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IButtonControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Button runat="server" Text="Button"&gt;&lt;/{0}:Button&gt;")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Button runat=server Text="Button"&gt;&lt;/{0}:Button&gt;")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Отображает элемент управления "Кнопка" на веб-странице.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В этом разделе.  
  
-   [Введение](#Introduction)  
  
-   [Поведение при обратной передаче кнопки и события сервера](#ButtonPostbackBehaviorandServerEvents)  
  
-   [Обработка событий кнопки в клиентском скрипте](#HandlingButtonEventsinClientScript)  
  
-   [Элементы управления "Кнопка" и "Проверка"](#ButtonControlsAndValidation)  
  
-   [Кнопки в элементах управления данными](#ButtonsInDataControls)  
  
-   [Привязка данных к элементам управления](#BindingDataToTheControls)  
  
-   [Использование кнопок с элементами управления UpdatePanel](#UsingButtonsWithUpdatePanelControls)  
  
-   [Декларативный синтаксис](#DeclarativeSyntax)  
  
<a name="Introduction"></a>   
## <a name="introduction"></a>Вступление  
 Используйте элемент управления <xref:System.Web.UI.WebControls.Button>, чтобы создать на веб-странице кнопку отправки, которая позволяет пользователям публиковать страницу на сервере. Элемент управления активирует событие в серверном коде, который можно обработать для реагирования на обратную передачу. Он также может вызвать событие в клиентском скрипте, которое может быть обработано до отправки страницы или выполнения, а затем отменить отправку страницы.  
  
> [!NOTE]
>  ASP.NET включает несколько типов элементов управления "Кнопка", каждый из которых на веб-страницах выглядит иначе. Это элемент управления <xref:System.Web.UI.WebControls.Button>, который отображается как кнопка отправки; элемент управления <xref:System.Web.UI.WebControls.LinkButton>, который готовится к просмотру как ссылка; и элемент управления <xref:System.Web.UI.WebControls.ImageButton>, который готовится к просмотру как изображение; и элемент управления <xref:System.Web.UI.WebControls.ImageMap>, который позволяет создать график с активными областями, которые пользователи могут щелкнуть. По умолчанию все элементы управления "Кнопка" отправляют страницу при нажатии. Можно также использовать элементы управления <xref:System.Web.UI.HtmlControls.HtmlButton> и <xref:System.Web.UI.HtmlControls.HtmlInputButton> для создания на странице кнопок, которые могут быть программируемыми в серверном коде. Дополнительные сведения о различиях между элементами управления HTML и веб-сервером см. в разделе [ASP.NET Web Server Controls Overview](https://msdn.microsoft.com/library/0d4854a3-6e79-4b7b-a27f-ac57cd9c2a84).  
  
 По умолчанию элемент управления <xref:System.Web.UI.WebControls.Button> является кнопкой Submit. Кнопка "Отправить" не имеет имени команды (заданной свойством <xref:System.Web.UI.WebControls.Button.CommandName%2A>), связанной с кнопкой, и просто отправляет веб-страницу обратно на сервер. Можно предоставить обработчик событий <xref:System.Web.UI.WebControls.Button.Click> для программного управления действиями, выполняемыми при нажатии кнопки "Отправить".  
  
 Кнопка команды имеет имя команды, связанное с кнопкой, например `Sort`, путем установки свойства <xref:System.Web.UI.WebControls.Button.CommandName%2A>. Это позволяет создать несколько элементов управления <xref:System.Web.UI.WebControls.Button> на веб-странице и программно определить, какой элемент управления <xref:System.Web.UI.WebControls.Button> щелкнул. Можно также использовать свойство <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> с кнопкой команды, чтобы предоставить дополнительные сведения о выполняемой команде, например `Ascending`. Можно предоставить обработчик событий <xref:System.Web.UI.WebControls.Button.Command> для события, чтобы программно управлять действиями, выполняемыми при нажатии кнопки command.  
  
<a name="ButtonPostbackBehaviorandServerEvents"></a>   
## <a name="button-postback-behavior-and-server-events"></a>Поведение при обратной передаче кнопки и события сервера  
 При нажатии пользователем любой кнопки серверного веб-элемента управления страница отправляется на сервер. Это приводит к тому, что веб-страница будет обрабатываться и все ожидающие события будут вызываться в коде на сервере. После завершения обработки всех страниц и элементов управления страница снова подготавливается к просмотру в браузере.  
  
 Кнопки могут вызывать собственные события <xref:System.Web.UI.WebControls.Button.Click> или события <xref:System.Web.UI.WebControls.Button.Command>, которые можно использовать с помощью серверного кода. Это отличается от событий в традиционных HTML-страницах или в веб-приложениях на основе клиента, где событие `onclick` кнопки обрабатывается с помощью JavaScript, который выполняется в клиенте. Дополнительные сведения см. в разделе [ASP.NET серверный элемент управления Web Forms Event Model](https://msdn.microsoft.com/library/6304bff7-1b0e-4641-8acb-6d3b0badc4a3).  
  
 Когда пользователь нащелкнул элемент управления «кнопка», страница отправляется обратно на сервер. По умолчанию страница отправляется обратно в саму себя,  
  
 Можно настроить кнопки для публикации текущей страницы на другой странице. Это может быть полезно при создании многостраничных форм. Дополнительные сведения см. [в разделе межстраничная передача данных в веб-формах ASP.NET](https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b).  
  
<a name="HandlingButtonEventsinClientScript"></a>   
## <a name="handling-button-events-in-client-script"></a>Обработка событий кнопки в клиентском скрипте  
 Элементы управления "Кнопка" могут вызывать события сервера и клиентские события. События сервера происходят после обратной передачи и обрабатываются в коде на стороне сервера, написанном для страницы. Клиентские события обрабатываются в клиентском скрипте, обычно ECMAScript (JavaScript) и вызываются до отправки страницы. Добавляя события на стороне клиента в элементы управления "Кнопка" ASP.NET, можно выполнять такие задачи, как отображение диалоговых окон подтверждения перед отправкой страницы, и, возможно, отменить отправку. Дополнительные сведения см. [в статьях клиентский скрипт в веб-страницы ASP.NET](https://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa) и [инструкции: реагирование на события веб-серверных элементов управления "Кнопка" в клиентском скрипте](https://msdn.microsoft.com/library/1ab97f0b-1c38-4897-85b0-ac915f6a182b).  
  
 Также может потребоваться, чтобы элемент управления <xref:System.Web.UI.WebControls.Button> также использовал клиентский скрипт для выполнения обратной передачи (вместо простого выполнения операции HTTP POST). Это может быть полезно, если требуется программно управлять обратной передачей, например присоединение ее к другим элементам на странице. Для свойства <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> элемента управления <xref:System.Web.UI.WebControls.Button> можно задать значение `true`, чтобы элемент управления <xref:System.Web.UI.WebControls.Button> использовал обратный вызов на основе скрипта клиента.  
  
<a name="ButtonControlsAndValidation"></a>   
## <a name="button-controls-and-validation"></a>Элементы управления "Кнопка" и "Проверка"  
 Если страница содержит элементы управления проверки ASP.NET, по умолчанию при щелчке элемента управления "Кнопка" проверяющий элемент управления выполняет проверку. Если проверка на стороне клиента включена для проверяющего элемента управления, эта страница не отправляется в случае сбоя проверки.  
  
 В следующей таблице описаны свойства, поддерживаемые элементами управления "Кнопка", которые позволяют более точно управлять процессом проверки.  
  
|Свойство.|Описание|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>|Указывает, выполняется ли проверка при нажатии кнопки. Присвойте этому свойству значение `false`, чтобы предотвратить проверку.|  
|<xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>|Позволяет указать, какие проверяющие элементы управления на странице вызываются при нажатии кнопки. Если группы проверки не установлены, нажатие кнопки вызывает все проверяющие элементы управления, которые находятся на странице.|  
  
 Дополнительные сведения см. в разделе [Проверка пользовательского ввода на веб-страницах ASP.NET](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
<a name="ButtonsInDataControls"></a>   
## <a name="buttons-in-data-controls"></a>Кнопки в элементах управления данными  
 Серверные веб-элементы управления "Кнопка" часто используются в элементах управления данными, таких как <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.GridView>и элементы управления списка <xref:System.Web.UI.WebControls.Repeater>. В таких случаях вы обычно не отвечаете на событие нажатия кнопки. Вместо этого кнопка в элементе управления данными вызывает событие, относящееся к элементу управления данными. Например, в элементе управления <xref:System.Web.UI.WebControls.DataList> кнопка может вызвать событие <xref:System.Web.UI.WebControls.DataList.ItemCommand> элемента управления <xref:System.Web.UI.WebControls.DataList> вместо того, чтобы вызывать событие <xref:System.Web.UI.WebControls.Button.Click> элемента управления <xref:System.Web.UI.WebControls.Button>.  
  
 Поскольку элементы управления "список" с привязкой к данным могут содержать много кнопок, можно задать свойство <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> кнопки, чтобы указать значение для передачи в составе события. Затем можно проверить этот аргумент, чтобы увидеть, какая кнопка была нажата.  
  
<a name="BindingDataToTheControls"></a>   
## <a name="binding-data-to-the-controls"></a>Привязка данных к элементам управления  
 Серверные веб-элементы управления "Кнопка" можно привязать к источнику данных, чтобы динамически управлять параметрами свойств. Например, можно задать свойство <xref:System.Web.UI.WebControls.Button.Text%2A> кнопки с помощью привязки данных.  
  
<a name="UsingButtonsWithUpdatePanelControls"></a>   
## <a name="using-buttons-with-updatepanel-controls"></a>Использование кнопок с элементами управления UpdatePanel  
 Частичная визуализация страницы позволяет обновлять части страницы без обратной передачи. <xref:System.Web.UI.UpdatePanel> элементы управления позволяют помечать части страницы, участвующие в частичной отрисовке страницы. По умолчанию поведением элементов управления внутри элемента управления <xref:System.Web.UI.UpdatePanel>, включая <xref:System.Web.UI.WebControls.Button> элементов управления, является выполнение асинхронной обратной передачи вместо обратной передачи. Это обновляет только содержимое элемента управления <xref:System.Web.UI.UpdatePanel>, из которого исходит обратная передача.  
  
 В дополнение к сценарию <xref:System.Web.UI.WebControls.Button> элемента управления, находящегося внутри элемента управления <xref:System.Web.UI.UpdatePanel>, можно использовать элементы управления <xref:System.Web.UI.WebControls.Button> с <xref:System.Web.UI.UpdatePanel> элементами управления в следующих сценариях.  
  
-   Определение элемента управления <xref:System.Web.UI.WebControls.Button>, находящегося вне элемента управления <xref:System.Web.UI.UpdatePanel> как элемента управления <xref:System.Web.UI.AsyncPostBackTrigger> для этой панели. При нажатии кнопки она выполняет асинхронную обратную передачу и обновляет содержимое панели.  
  
-   Определение элемента управления <xref:System.Web.UI.WebControls.Button>, находящегося внутри элемента управления <xref:System.Web.UI.UpdatePanel>, в качестве <xref:System.Web.UI.PostBackTrigger> для панели. При нажатии кнопки выполняется обратная передача, несмотря на то, что она находится внутри элемента управления <xref:System.Web.UI.UpdatePanel>.  
  
 Дополнительные сведения о частичной отрисовке страниц и использовании элементов управления <xref:System.Web.UI.UpdatePanel> см. в разделе Общие сведения об [элементе управления UpdatePanel](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) и [Общие сведения о частичной отрисовке страниц](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a>Декларативный синтаксис  
  
```  
<asp:Button  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CausesValidation="True|False"  
    CommandArgument="string"  
    CommandName="string"  
    CssClass="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    OnClick="Click event handler"  
    OnClientClick="string"  
    OnCommand="Command event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    PostBackUrl="uri"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    Text="string"  
    ToolTip="string"  
    UseSubmitBehavior="True|False"  
    ValidationGroup="string"  
    Visible="True|False"  
    Width="size"  
/>  
```  
  
   
  
## Examples  
 В следующем примере кода показано, как создать элемент управления отправки <xref:System.Web.UI.WebControls.Button>, который отправляет содержимое веб-страницы обратно на сервер.  
  
 [!code-aspx-csharp[Classic Button Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Button Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Button Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Button Example/VB/sourcevb.aspx#1)]  
  
 В следующем примере кода показано, как создать командный элемент управления <xref:System.Web.UI.WebControls.Button>, который сортирует список.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
    <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
    <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Серверные веб-элементы управления "Кнопка"</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Button ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Button();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.Button" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот конструктор для создания и инициализации нового экземпляра класса <xref:System.Web.UI.WebControls.Button>.  
  
   
  
## Examples  
 В следующем примере кода показано, как создать и инициализировать новый экземпляр класса <xref:System.Web.UI.WebControls.Button>.  
  
 [!code-aspx-csharp[ButtonCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCtor/CS/buttonctorcs.aspx#1)]
 [!code-aspx-vb[ButtonCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCtor/VB/buttonctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Серверные веб-элементы управления "Кнопка"</related>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="button.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, содержащий выходной поток, который необходимо вывести на стороне клиента.</param>
        <summary>Добавляет атрибуты элемента управления <see cref="T:System.Web.UI.WebControls.Button" /> в выходной поток для отрисовки на стороне клиента.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как переопределить метод <xref:System.Web.UI.WebControls.Button.AddAttributesToRender%2A> в настраиваемом серверном элементе управления, чтобы текст <xref:System.Web.UI.WebControls.Button> всегда отображался красным цветом.  
  
 [!code-aspx-csharp[CustomButtonAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/CS/custombuttonaddattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomButtonAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/VB/custombuttonaddattributestorendervb.aspx#1)]  
[!code-csharp[CustomButtonAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/CS/custombuttonaddattributestorender.cs#2)]
[!code-vb[CustomButtonAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/VB/custombuttonaddattributestorender.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Серверные веб-элементы управления "Кнопка"</related>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public bool CausesValidation { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property CausesValidation As Boolean" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CausesValidation { bool get(); void set(bool value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Web.UI.WebControls.Button.CausesValidation" />
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CausesValidation</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, показывающее, выполняется ли проверка при щелчке элемента управления <see cref="T:System.Web.UI.WebControls.Button" />.</summary>
        <value>Значение <see langword="true" />, если при выборе элемента управления <see cref="T:System.Web.UI.WebControls.Button" /> проверка выполняется; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию проверка страниц выполняется при щелчке элемента управления <xref:System.Web.UI.WebControls.Button>. Проверка страницы определяет, проходят ли правила проверки, заданные элементом управления проверки, на странице все элементы управления вводом, связанные с элементом управления проверки.  
  
 Можно указать или определить, выполняется ли проверка как на клиенте, так и на сервере при щелчке элемента управления <xref:System.Web.UI.WebControls.Button> с помощью свойства <xref:System.Web.UI.WebControls.Button.CausesValidation%2A>. Чтобы предотвратить выполнение проверки, задайте для свойства <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> значение `false`.  
  
> [!NOTE]
>  Следует установить свойство <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> в значение `false` при использовании свойства <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> для обратной передачи на другую страницу. Следует явно проверять проверку при обратной передаче на другую страницу. Пример см. в разделе "Примечания" свойства <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>.  
  
 Обычно это свойство имеет значение `false` для кнопки `reset` или `clear`, чтобы предотвратить выполнение проверки при нажатии кнопки.  
  
 Если для свойства <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> задано значение `true`, можно также использовать свойство <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>, чтобы указать имя группы проверки, для которой элемент управления <xref:System.Web.UI.WebControls.Button> вызывает проверку.  
  
 Значение для данного свойства нельзя задать с помощью тем или тем таблиц стилей. Дополнительные сведения см. в разделе <xref:System.Web.UI.ThemeableAttribute> и [темы ASP.NET и обложки](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> для предотвращения проверки страницы. Обратите внимание, что метод <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> активирует каждый элемент управления проверки независимо друг от друга.  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[ButtonControlCausesValidation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonControlCausesValidation/CS/buttoncausesvalidationcs.aspx#1)]
 [!code-aspx-vb[ButtonControlCausesValidation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonControlCausesValidation/VB/buttoncausesvalidationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.Button.ValidationGroup" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Серверные веб-элементы управления "Кнопка"</related>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Button.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Click;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IButtonControl.Click</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает при щелчке элемента управления <see cref="T:System.Web.UI.WebControls.Button" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Событие <xref:System.Web.UI.WebControls.Button.Click> возникает при щелчке элемента управления <xref:System.Web.UI.WebControls.Button>. Это событие обычно используется, если имя команды не связано с элементом управления <xref:System.Web.UI.WebControls.Button> (например, с кнопкой отправки).  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано, как задать и закодировать обработчик событий для события <xref:System.Web.UI.WebControls.Button.Click>, чтобы отобразить сообщение на веб-странице при щелчке элемента управления <xref:System.Web.UI.WebControls.Button>.  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Серверные веб-элементы управления "Кнопка"</related>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.CommandEventHandler Command;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.CommandEventHandler Command" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Button.Command" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Command As CommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::CommandEventHandler ^ Command;" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.Command : System.Web.UI.WebControls.CommandEventHandler " Usage="member this.Command : System.Web.UI.WebControls.CommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Web::UI::WebControls::CommandEventHandler ^ Command;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IButtonControl.Command</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.CommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает при щелчке элемента управления <see cref="T:System.Web.UI.WebControls.Button" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Событие <xref:System.Web.UI.WebControls.Button.Command> возникает при щелчке элемента управления <xref:System.Web.UI.WebControls.Button>. Это событие часто используется, когда имя команды, например `Sort`, связано с элементом управления <xref:System.Web.UI.WebControls.Button>. Это позволяет создать несколько элементов управления <xref:System.Web.UI.WebControls.Button> на веб-странице и программно определить, какой элемент управления <xref:System.Web.UI.WebControls.Button> щелкнул.  
  
> [!NOTE]
>  Событие <xref:System.Web.UI.WebControls.Button.Command> возникает через иерархию элементов управления в форме `BubbleEvent`.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано, как задать и закодировать обработчик событий для события <xref:System.Web.UI.WebControls.Button.Command>, чтобы отсортировать список при щелчке элемента управления <xref:System.Web.UI.WebControls.Button>. В этом примере обработчик событий задается декларативно с помощью свойства <xref:System.Web.UI.WebControls.Button.OnClick%2A> элемента управления <xref:System.Web.UI.WebControls.Button>.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 В следующем примере кода показано, как задать обработчик событий и программным образом добавить его в событие в методе `Page_Load`.  
  
 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Серверные веб-элементы управления "Кнопка"</related>
      </Docs>
    </Member>
    <Member MemberName="CommandArgument">
      <MemberSignature Language="C#" Value="public string CommandArgument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandArgument" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CommandArgument" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandArgument As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandArgument { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandArgument : string with get, set" Usage="System.Web.UI.WebControls.Button.CommandArgument" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CommandArgument</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает дополнительный параметр, передаваемый событию <see cref="E:System.Web.UI.WebControls.Button.Command" /> вместе с соответствующим свойством <see cref="P:System.Web.UI.WebControls.Button.CommandName" />.</summary>
        <value>Дополнительный параметр, передаваемый событию <see cref="E:System.Web.UI.WebControls.Button.Command" /> вместе с соответствующим свойством <see cref="P:System.Web.UI.WebControls.Button.CommandName" />. Значение по умолчанию — <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>, чтобы указать параметр, который дополняет свойство <xref:System.Web.UI.WebControls.Button.CommandName%2A>.  
  
> [!NOTE]
>  Хотя свойство <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> можно задать отдельно, оно обычно используется, только если также задано свойство <xref:System.Web.UI.WebControls.Button.CommandName%2A>.  
  
 Свойство <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> дополняет свойство <xref:System.Web.UI.WebControls.Button.CommandName%2A>, позволяя предоставлять дополнительные сведения о выполняемой команде. Например, если свойству <xref:System.Web.UI.WebControls.Button.CommandName%2A> присвоить значение `Sort` а свойству <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> — значение `Ascending`, то необходимо указать команду для сортировки в возрастающем порядке.  
  
 Значение для данного свойства нельзя задать с помощью тем или тем таблиц стилей. Дополнительные сведения см. в разделе <xref:System.Web.UI.ThemeableAttribute> и [темы ASP.NET и обложки](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> для создания элемента управления <xref:System.Web.UI.WebControls.Button>, который сортирует список в возрастающем порядке.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Серверные веб-элементы управления "Кнопка"</related>
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandName : string with get, set" Usage="System.Web.UI.WebControls.Button.CommandName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CommandName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя команды, связанное с элементом управления <see cref="T:System.Web.UI.WebControls.Button" />, которое передается событию <see cref="E:System.Web.UI.WebControls.Button.Command" />.</summary>
        <value>Имя команды элемента управления <see cref="T:System.Web.UI.WebControls.Button" />. Значение по умолчанию — <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если на веб-странице имеется несколько элементов управления <xref:System.Web.UI.WebControls.Button>, используйте свойство <xref:System.Web.UI.WebControls.Button.CommandName%2A>, чтобы указать или определить имя команды, связанной с каждым элементом управления <xref:System.Web.UI.WebControls.Button>. Можно задать свойство <xref:System.Web.UI.WebControls.Button.CommandName%2A> с любой строкой, определяющей выполняемую команду. Затем можно программным образом определить имя команды элемента управления <xref:System.Web.UI.WebControls.Button> и выполнить соответствующие действия.  
  
 Дополнительные сведения о команде, например `Ascending`, можно указать с помощью свойства <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>.  
  
 Значение для данного свойства нельзя задать с помощью тем или тем таблиц стилей. Дополнительные сведения см. в разделе <xref:System.Web.UI.ThemeableAttribute> и [темы ASP.NET и обложки](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 В следующем примере кода показано использование свойства <xref:System.Web.UI.WebControls.Button.CommandName%2A> для создания элемента управления <xref:System.Web.UI.WebControls.Button>, который сортирует список.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Серверные веб-элементы управления "Кнопка"</related>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackOptions">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.PostBackOptions GetPostBackOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.PostBackOptions GetPostBackOptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.GetPostBackOptions" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPostBackOptions () As PostBackOptions" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::PostBackOptions ^ GetPostBackOptions();" />
      <MemberSignature Language="F#" Value="abstract member GetPostBackOptions : unit -&gt; System.Web.UI.PostBackOptions&#xA;override this.GetPostBackOptions : unit -&gt; System.Web.UI.PostBackOptions" Usage="button.GetPostBackOptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает объект <see cref="T:System.Web.UI.PostBackOptions" />, который представляет поведение элемента управления <see cref="T:System.Web.UI.WebControls.Button" /> при обратной передаче.</summary>
        <returns>Объект <see cref="T:System.Web.UI.PostBackOptions" />, представляющий поведение элемента управления <see cref="T:System.Web.UI.WebControls.Button" /> при обратной передаче.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.Button.GetPostBackOptions%2A> создает объект <xref:System.Web.UI.PostBackOptions>, представляющий поведение обратной передачи элемента управления <xref:System.Web.UI.WebControls.Button>. Затем объект <xref:System.Web.UI.PostBackOptions> обычно передается методу <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=nameWithType>, который используется для получения ссылки на клиентскую функцию скрипта, которая при вызове сервера вызывает обратную передачу данных на страницу.  
  
 Этот метод используется преимущественно разработчиками элементов управления при расширении класса <xref:System.Web.UI.WebControls.Button>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Можно переопределить метод <see cref="M:System.Web.UI.WebControls.Button.GetPostBackOptions" /> в производном классе, чтобы изменить параметры обратной передачи для элемента управления Button или вызвать клиентский сценарий при нажатии кнопки. Не забудьте вызвать метод <see cref="M:System.Web.UI.WebControls.Button.GetPostBackOptions" /> базового класса, чтобы были заданы стандартные параметры обратной передачи.</para></block>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Серверные веб-элементы управления "Кнопка"</related>
        <related type="Article" href="https://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa">Клиентский скрипт в веб-страницы ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClick : EventArgs -&gt; unit&#xA;override this.OnClick : EventArgs -&gt; unit" Usage="button.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.Button.Click" /> элемента управления <see cref="T:System.Web.UI.WebControls.Button" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Событие <xref:System.Web.UI.WebControls.Button.Click> возникает при щелчке элемента управления <xref:System.Web.UI.WebControls.Button>. Это событие обычно используется, если имя команды не связано с элементом управления <xref:System.Web.UI.WebControls.Button> (например, с кнопкой отправки).  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [Обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Web.UI.WebControls.Button.OnClick%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать и закодировать обработчик событий для события <xref:System.Web.UI.WebControls.Button.Click>, чтобы отобразить простое сообщение на веб-странице.  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="T:System.EventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Серверные веб-элементы управления "Кнопка"</related>
      </Docs>
    </Member>
    <Member MemberName="OnClientClick">
      <MemberSignature Language="C#" Value="public virtual string OnClientClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnClientClick" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.OnClientClick" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property OnClientClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OnClientClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnClientClick : string with get, set" Usage="System.Web.UI.WebControls.Button.OnClientClick" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает клиентский скрипт, выполняемый при происхождении события <see cref="T:System.Web.UI.WebControls.Button" /> в элементе управления <see cref="E:System.Web.UI.WebControls.Button.Click" />.</summary>
        <value>Скрипт на стороне клиента, выполняемый при происхождении события <see cref="T:System.Web.UI.WebControls.Button" /> в элементе управления <see cref="E:System.Web.UI.WebControls.Button.Click" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство <xref:System.Web.UI.WebControls.Button.OnClientClick%2A>, чтобы указать дополнительный скрипт на стороне клиента, который выполняется при возникновении события <xref:System.Web.UI.WebControls.Button.Click> элемента управления <xref:System.Web.UI.WebControls.Button>. Скрипт, заданный для этого свойства, подготавливается к просмотру в атрибуте `OnClick` элемента управления <xref:System.Web.UI.WebControls.Button> в дополнение к предопределенному клиентскому сценарию элемента управления.  
  
 Значение для данного свойства нельзя задать с помощью тем или тем таблиц стилей. Дополнительные сведения см. в разделе <xref:System.Web.UI.ThemeableAttribute> и [темы ASP.NET и обложки](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Проект веб-сайта Visual Studio с исходным кодом можно найти в этой статье: [download](https://go.microsoft.com/fwlink/?LinkId=192871).  
  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> для указания дополнительного клиентского скрипта, выполняемого при щелчке элемента управления <xref:System.Web.UI.WebControls.Button>.  
  
 [!code-aspx-csharp[Button.OnClientClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.OnClientClick/cs/button.onclientclickcs.aspx#1)]
 [!code-aspx-vb[Button.OnClientClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.OnClientClick/vb/button.onclientclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Серверные веб-элементы управления "Кнопка"</related>
      </Docs>
    </Member>
    <Member MemberName="OnCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCommand (System.Web.UI.WebControls.CommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCommand(class System.Web.UI.WebControls.CommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCommand (e As CommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCommand(System::Web::UI::WebControls::CommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCommand : System.Web.UI.WebControls.CommandEventArgs -&gt; unit&#xA;override this.OnCommand : System.Web.UI.WebControls.CommandEventArgs -&gt; unit" Usage="button.OnCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.Button.Command" /> элемента управления <see cref="T:System.Web.UI.WebControls.Button" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Событие <xref:System.Web.UI.WebControls.Button.Command> возникает при щелчке элемента управления <xref:System.Web.UI.WebControls.Button>. Это событие часто используется, когда имя команды, например `Sort`, связано с элементом управления <xref:System.Web.UI.WebControls.Button>. Это позволяет создать несколько элементов управления <xref:System.Web.UI.WebControls.Button> на веб-странице и программно определить, какой элемент управления <xref:System.Web.UI.WebControls.Button> щелкнул.  
  
> [!NOTE]
>  Событие <xref:System.Web.UI.WebControls.Button.Command> возникает через иерархию элементов управления в форме `BubbleEvent`.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [Обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Web.UI.WebControls.Button.OnCommand%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать и закодировать обработчик событий для события <xref:System.Web.UI.WebControls.Button.Command>, чтобы отсортировать список при щелчке элемента управления <xref:System.Web.UI.WebControls.Button>. В этом примере обработчик событий задается декларативно с помощью свойства <xref:System.Web.UI.WebControls.Button.OnClick%2A> элемента управления <xref:System.Web.UI.WebControls.Button>.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 В следующем примере кода показано, как задать обработчик событий и программным образом добавить его в событие в методе `Page_Load`.  
  
 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Серверные веб-элементы управления "Кнопка"</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="button.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Данные события.</param>
        <summary>Определяет, была ли нажата кнопка перед отрисовкой на стороне клиента.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.Button.OnPreRender%2A> используется главным образом разработчиками элементов управления при создании пользовательского класса из элемента управления <xref:System.Web.UI.WebControls.Button>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Серверные веб-элементы управления "Кнопка"</related>
      </Docs>
    </Member>
    <Member MemberName="PostBackUrl">
      <MemberSignature Language="C#" Value="public virtual string PostBackUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PostBackUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.PostBackUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PostBackUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PostBackUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PostBackUrl : string with get, set" Usage="System.Web.UI.WebControls.Button.PostBackUrl" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.PostBackUrl</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.UrlProperty("*.aspx")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает URL-адрес страницы, на которую осуществляется передача с текущей страницы при нажатии элемента управления <see cref="T:System.Web.UI.WebControls.Button" />.</summary>
        <value>URL-адрес веб-страницы, на которую осуществляется передача с текущей страницы при нажатии элемента управления <see cref="T:System.Web.UI.WebControls.Button" />. Значение по умолчанию — пустая строка (""), которая приводит к обратной передаче страницы самой себе.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> позволяет выполнять межстраничную запись с помощью элемента управления <xref:System.Web.UI.WebControls.Button>.  
  
> [!NOTE]
>  Только правильно указанные пути работают с этим свойством. Например, относительные пути (`Test/default.aspx`), абсолютные пути (`https://localhost/WebApp/default.aspx`) и Virtual (`~\Test\default.aspx`) работают правильно. Неправильно сформированные пути, например "/тест/дефаулт.аспкс" или "\Тест\дефаулт.аспкс", не работают. Сведения о создании правильных путей см. в статье [пути к веб-проектам ASP.NET](https://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd) .  
  
 Присвойте свойству <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> URL-адрес страницы, на которую будет отправлено сообщение при щелчке элемента управления <xref:System.Web.UI.WebControls.Button>. Например, если указать `Page2.aspx` то страница, содержащая элемент управления <xref:System.Web.UI.WebControls.Button>, будет `Page2.aspx`. Если не указать значение для свойства <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>, страница выполняет обратную передачу.  
  
> [!IMPORTANT]
>  При выполнении межстраничной обратной передачи с элементами управления с проверкой на стороне сервера необходимо убедиться, что свойство <xref:System.Web.UI.Page.IsValid%2A> страницы `true` перед обработкой обратной передачи. В случае межстраничной передачи данных проверяемая страница является <xref:System.Web.UI.Page.PreviousPage%2A>. В следующем коде на VB показано, как это делается:  
  
```  
Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load  
        If Page.PreviousPage.IsValid Then  
            ' Handle the post back  
        Else  
            Response.Write("Invalid")  
        End If  
End Sub  
```  
  
 Дополнительные сведения о методах межстраничной передачи данных см. в разделе межстраничная [Передача данных в веб-формах ASP.NET](https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b).  
  
 Значение для данного свойства нельзя задать с помощью тем или тем таблиц стилей. Дополнительные сведения см. в разделе <xref:System.Web.UI.ThemeableAttribute> и [темы ASP.NET и обложки](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> для выполнения межстраничной передачи. Когда пользователь щелкает элемент управления <xref:System.Web.UI.WebControls.Button>, страница отправляет значение, введенное в текстовое поле, на целевую страницу, указанную свойством <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>. Для выполнения этого примера необходимо также создать файл для целевой страницы в том же каталоге, что и этот пример кода. Код целевой страницы приведен в следующем примере.  
  
 [!code-aspx-csharp[Button.PostBackUrlProperty#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.PostBackUrlProperty/CS/button.postbackurlpropertycs.aspx#1)]
 [!code-aspx-vb[Button.PostBackUrlProperty#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.PostBackUrlProperty/VB/button.postbackurlpropertyvb.aspx#1)]  
  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.UI.Page.PreviousPage%2A?displayProperty=nameWithType> для доступа к значению, отправленному с другой страницы с помощью свойства <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>. Эта страница возвращает строку, которая была отправлена с предыдущей страницы, и отображает ее пользователю. Если вы попытаетесь выполнить этот пример кода напрямую, возникнет ошибка, так как значение поля `text` будет `null`. Вместо этого используйте этот код, чтобы создать целевую страницу и поместить файл в тот же каталог, что и код предыдущего примера. Имя файла должно соответствовать значению, указанному для свойства <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> в предыдущем примере. При выполнении кода для предыдущего примера Эта страница будет выполняться автоматически при возникновении межстраничной передачи.  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Button.PostBackUrlPage2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.PostBackUrlPage2/CS/button.postbackurlpage2cs.aspx#1)]
 [!code-aspx-vb[Button.PostBackUrlPage2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.PostBackUrlPage2/VB/button.postbackurlpage2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.PreviousPage" />
        <related type="Article" href="https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b">Межстраничная передача на веб-странице ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Серверные веб-элементы управления "Кнопка"</related>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="button.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Аргумент события.</param>
        <summary>Вызывает событие для элемента управления <see cref="T:System.Web.UI.WebControls.Button" />, когда он выполняет обратную передачу на сервер.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие используется внутри элемента управления <xref:System.Web.UI.WebControls.Button>, при его нажатии, для вызова события <xref:System.Web.UI.WebControls.Button.Click> и при определении события <xref:System.Web.UI.WebControls.Button.Command>.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Серверные веб-элементы управления "Кнопка"</related>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderContents (writer As HtmlTextWriter)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="button.RenderContents writer" />
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, представляющий выходной поток, который выводит HTML-содержимое на стороне клиента.</param>
        <summary>Выводит содержимое элемента управления в заданный модуль записи.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как переопределить метод <xref:System.Web.UI.WebControls.Button.RenderContents%2A> в пользовательском элементе управления сервера таким образом, чтобы он всегда отображал текст после пользовательского серверного элемента управления <xref:System.Web.UI.WebControls.Button>.  
  
 [!code-aspx-csharp[CustomButtonRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRenderContents/CS/custombuttonrendercontentscs.aspx#1)]
 [!code-aspx-vb[CustomButtonRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRenderContents/VB/custombuttonrendercontentsvb.aspx#1)]  
[!code-csharp[CustomButtonRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRenderContents/CS/custombuttonrendercontents.cs#2)]
[!code-vb[CustomButtonRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRenderContents/VB/custombuttonrendercontents.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Серверные веб-элементы управления "Кнопка"</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Аргумент события.</param>
        <summary>Вызывает событие для элемента управления <see cref="T:System.Web.UI.WebControls.Button" />, когда он выполняет обратную передачу на сервер.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие используется внутри элемента управления <xref:System.Web.UI.WebControls.Button>, при его нажатии, для вызова события <xref:System.Web.UI.WebControls.Button.Click> и при определении события <xref:System.Web.UI.WebControls.Button.Command>.  
  
   
  
## Examples  
 В следующем примере кода показано, как переопределить метод <xref:System.Web.UI.WebControls.Button.System%23Web%23UI%23IPostBackEventHandler%23RaisePostBackEvent%2A>, чтобы он всегда вызывал событие <xref:System.Web.UI.WebControls.Button.OnClick%2A> в пользовательском элементе управления <xref:System.Web.UI.WebControls.Button>.  
  
 [!code-csharp[CustomButtonRaisePostBackEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRaisePostBackEvent/CS/custombuttonraisepostbackevent.cs#2)]
 [!code-vb[CustomButtonRaisePostBackEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRaisePostBackEvent/VB/custombuttonraisepostbackevent.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Серверные веб-элементы управления "Кнопка"</related>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.Button.Text" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.Text</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает текст подписи, отображаемый в элементе управления <see cref="T:System.Web.UI.WebControls.Button" />.</summary>
        <value>Текст подписи, отображаемый в элементе управления <see cref="T:System.Web.UI.WebControls.Button" />. Значение по умолчанию — <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство <xref:System.Web.UI.WebControls.Button.Text%2A>, чтобы указать или определить заголовок, отображаемый в элементе управления <xref:System.Web.UI.WebControls.Button>.  
  
 Значение этого свойства, если оно задано, можно автоматически сохранить в файл ресурсов с помощью средства конструктора. Дополнительные сведения см. в разделе <xref:System.ComponentModel.LocalizableAttribute> и [Глобализация и локализация](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.UI.WebControls.Button.Text%2A> для указания заголовка, отображаемого в элементе управления <xref:System.Web.UI.WebControls.Button>.  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Серверные веб-элементы управления "Кнопка"</related>
      </Docs>
    </Member>
    <Member MemberName="UseSubmitBehavior">
      <MemberSignature Language="C#" Value="public virtual bool UseSubmitBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSubmitBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.UseSubmitBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UseSubmitBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseSubmitBehavior { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseSubmitBehavior : bool with get, set" Usage="System.Web.UI.WebControls.Button.UseSubmitBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, использует ли элемент управления <see cref="T:System.Web.UI.WebControls.Button" /> механизм отправки из клиентского браузера или механизм обратной передачи ASP.NET.</summary>
        <value><see langword="true" />, если элемент управления использует механизм отправки из клиентского браузера; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>, чтобы указать, использует ли элемент управления <xref:System.Web.UI.WebControls.Button> механизм отправки клиентского браузера или механизм обратной передачи ASP.NET. По умолчанию значение этого свойства равно `true`, что приводит к тому, что <xref:System.Web.UI.WebControls.Button> элемент управления использует механизм отправки в браузере. Если указать `false`, платформа страницы ASP.NET добавляет клиентский скрипт на страницу для публикации формы на сервере.  
  
 Если свойство <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> `false`, разработчики элементов управления могут использовать метод <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>, чтобы вернуть клиентское событие обратной передачи для <xref:System.Web.UI.WebControls.Button>. Строка, возвращаемая методом <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>, содержит текст вызова функции на стороне клиента и может быть вставлен в обработчик событий на стороне клиента.  
  
 Значение для данного свойства нельзя задать с помощью тем или тем таблиц стилей. Дополнительные сведения см. в разделе <xref:System.Web.UI.ThemeableAttribute> и [темы ASP.NET и обложки](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>, чтобы указать механизм отправки, который элемент управления <xref:System.Web.UI.WebControls.Button> использует при обратной передаче на сервер. Свойству <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> присвоено значение `false`, в результате чего кнопка будет использовать механизм обратной передачи ASP.NET. Если вы просматриваете исходный код для подготовленной страницы с помощью команды просмотра исходного кода браузера, вы увидите, что клиентский сценарий добавлен платформой ASP.NET Page Framework для публикации формы на сервере.  
  
 [!code-aspx-csharp[Button.UseSubmitBehavior#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.UseSubmitBehavior/CS/button.usesubmitbehaviorcs.aspx#1)]
 [!code-aspx-vb[Button.UseSubmitBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.UseSubmitBehavior/VB/button.usesubmitbehaviorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Серверные веб-элементы управления "Кнопка"</related>
        <related type="Article" href="https://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa">Клиентский скрипт в веб-страницы ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.UI.WebControls.Button.ValidationGroup" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.ValidationGroup</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает группу элементов управления, для которых элемент управления <see cref="T:System.Web.UI.WebControls.Button" /> инициирует проверку при обратной передаче на сервер.</summary>
        <value>Группа элементов управления, для которых элемент управления <see cref="T:System.Web.UI.WebControls.Button" /> инициирует проверку при обратной передаче на сервер. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Группы проверки позволяют назначать элементам управления проверки на странице определенную категорию. Каждая группа проверки может быть проверена независимо от других групп проверки на странице. Используйте свойство <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>, чтобы указать имя группы проверки, для которой элемент управления <xref:System.Web.UI.WebControls.Button> вызывает проверку при обратной передаче на сервер.  
  
 Это свойство действует, только если значение свойства <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> равно `true`. При указании значения для свойства <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> проверяются только элементы управления проверки, являющиеся частью указанной группы, когда элемент управления <xref:System.Web.UI.WebControls.Button> отправляет обратно на сервер. Если не указать значение для этого свойства и свойство <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> имеет значение `true`, то все элементы управления проверки на странице, не назначенные группе проверки, проверяются, когда элемент управления выполняет обратную передачу на сервер.  
  
 Значение для данного свойства нельзя задать с помощью тем или тем таблиц стилей. Дополнительные сведения см. в разделе <xref:System.Web.UI.ThemeableAttribute> и [темы ASP.NET и обложки](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>, чтобы указать элементы управления, которые должны проверяться при отправку элементом управления <xref:System.Web.UI.WebControls.Button> обратно на сервер. Страница содержит три текстовых поля для записи данных от пользователя и три элемента управления <xref:System.Web.UI.WebControls.RequiredFieldValidator>, чтобы гарантировать, что пользователь не оставляет текстовое поле пустым. Элементы управления <xref:System.Web.UI.WebControls.RequiredFieldValidator> для первых двух текстовых полей находятся в группе проверки `PersonalInfoGroup`, а элемент управления <xref:System.Web.UI.WebControls.RequiredFieldValidator> для третьего текстового поля находится в группе проверки `LocationInfoGroup`. При нажатии `Button1` проверяются только элементы управления в группе проверки `PersonalInfoGroup`. При нажатии `Button2` проверяется только элемент управления в группе проверки `LocationInfoGroup`.  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Button.ValidationGroup#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.ValidationGroup/CS/button.validationgroupcs.aspx#1)]
 [!code-aspx-vb[Button.ValidationGroup#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.ValidationGroup/VB/button.validationgroupvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Button.CausesValidation" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Серверные веб-элементы управления "Кнопка"</related>
      </Docs>
    </Member>
  </Members>
</Type>
