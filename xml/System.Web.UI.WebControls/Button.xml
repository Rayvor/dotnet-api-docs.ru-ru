<Type Name="Button" FullName="System.Web.UI.WebControls.Button">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1625f5f864f631667efa56bdb6d51182408715fc" /><Meta Name="ms.sourcegitcommit" Value="10aa513a7461eb2abbf8d1e35d2a045d4e5a9be7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="07/09/2019" /><Meta Name="ms.locfileid" Value="67664441" /></Metadata><TypeSignature Language="C#" Value="public class Button : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IButtonControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Button extends System.Web.UI.WebControls.WebControl implements class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.IButtonControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Button" />
  <TypeSignature Language="VB.NET" Value="Public Class Button&#xA;Inherits WebControl&#xA;Implements IButtonControl, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class Button : System::Web::UI::WebControls::WebControl, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::IButtonControl" />
  <TypeSignature Language="F#" Value="type Button = class&#xA;    inherit WebControl&#xA;    interface IButtonControl&#xA;    interface IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IButtonControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Button runat="server" Text="Button"&gt;&lt;/{0}:Button&gt;")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Button runat=server Text="Button"&gt;&lt;/{0}:Button&gt;")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Отображает элемент управления "Кнопка" на веб-странице.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В этом разделе.  
  
-   [Введение](#Introduction)  
  
-   [Поведение обратной передачи и событий сервера, нажмите кнопку](#ButtonPostbackBehaviorandServerEvents)  
  
-   [Обработка событий кнопки из клиентского скрипта](#HandlingButtonEventsinClientScript)  
  
-   [Элементы управления кнопки и проверки](#ButtonControlsAndValidation)  
  
-   [Кнопки в элементах управления данными](#ButtonsInDataControls)  
  
-   [Привязка данных к элементам управления](#BindingDataToTheControls)  
  
-   [Использование кнопок с элементами управления UpdatePanel](#UsingButtonsWithUpdatePanelControls)  
  
-   [Декларативный синтаксис](#DeclarativeSyntax)  
  
<a name="Introduction"></a>   
## <a name="introduction"></a>Вступление  
 Используйте <xref:System.Web.UI.WebControls.Button> управления для создания кнопки на веб-странице, который позволяет пользователям выполнить страницы на сервер. Элемент управления инициирует событие в серверном коде, который может обрабатывать для реагирования на обратную передачу. Он также может вызвать событие из клиентского скрипта, который может обработать до отправки страницы или, можно выполнить и отменить отправку страницы.  
  
> [!NOTE]
>  ASP.NET содержит несколько видов кнопок, каждый из которых по-разному отображается на веб-страницах. Они являются <xref:System.Web.UI.WebControls.Button> элемента управления, который отображается в виде кнопки; <xref:System.Web.UI.WebControls.LinkButton> элемент управления, который отображается как ссылка; и <xref:System.Web.UI.WebControls.ImageButton> элемента управления, который отображается в виде изображения; и <xref:System.Web.UI.WebControls.ImageMap> элемент управления, который позволяет создавать графические элементы, точки беспроводного доступа что пользователи могут щелкнуть. По умолчанию все элементы управления кнопки отправки страницы при щелчке. Можно также использовать <xref:System.Web.UI.HtmlControls.HtmlButton> и <xref:System.Web.UI.HtmlControls.HtmlInputButton> элементы управления для создания кнопок на странице, которые являются программируемыми в серверном коде. Дополнительные сведения о различиях между HTML и веб-серверных элементов управления, см. в разделе [Обзор элементов управления веб-сервера ASP.NET](https://msdn.microsoft.com/library/0d4854a3-6e79-4b7b-a27f-ac57cd9c2a84).  
  
 По умолчанию <xref:System.Web.UI.WebControls.Button> элемент управления является кнопка отправки. Кнопка отправки не имеет имя команды (определяется <xref:System.Web.UI.WebControls.Button.CommandName%2A> свойство) связанные с кнопки и просто сообщения, веб-страницы обратно на сервер. Можно указать обработчик событий для <xref:System.Web.UI.WebControls.Button.Click> для программного управления действиями, выполняемыми при нажатии кнопки отправки.  
  
 Кнопка Command имеет имя команды, связанное с кнопкой, такие как `Sort`, установив <xref:System.Web.UI.WebControls.Button.CommandName%2A> свойство. Это позволяет создать несколько <xref:System.Web.UI.WebControls.Button> элементов управления на веб-странице и программным способом определить, какие <xref:System.Web.UI.WebControls.Button> нажатии элемента управления. Можно также использовать <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> свойство кнопки команды для предоставления дополнительных сведений о команде для выполнения, таких как `Ascending`. Можно указать обработчик событий для <xref:System.Web.UI.WebControls.Button.Command> для программного управления действиями, выполняемыми при нажатии кнопки.  
  
<a name="ButtonPostbackBehaviorandServerEvents"></a>   
## <a name="button-postback-behavior-and-server-events"></a>Поведение обратной передачи и событий сервера, нажмите кнопку  
 При нажатии любой кнопки элемент управления Web server, страница отправляется на сервер. В результате веб-страницы для обработки и все отложенные события, вызываемого в серверном коде. После завершения всех страниц и управлять обработкой, страница передается в браузер еще раз.  
  
 Кнопки может создавать свои собственные <xref:System.Web.UI.WebControls.Button.Click> события или <xref:System.Web.UI.WebControls.Button.Command> событие, которое можно обработать с помощью серверного кода. Это отличается от события в традиционных HTML-страницы или в клиентских веб-приложениях, где кнопки `onclick` событие обрабатывается с помощью JavaScript, который запускается в клиенте. Дополнительные сведения см. в разделе [модель событий серверного элемента управления ASP.NET Web Forms](https://msdn.microsoft.com/library/6304bff7-1b0e-4641-8acb-6d3b0badc4a3).  
  
 Когда пользователь щелкает элемент управления button, страница передается обратно к серверу. По умолчанию страница передается обратно на себя,  
  
 Вы можете настроить кнопки для отправки текущей страницы на другую страницу. Это может быть полезно для создания многостраничных форм. Дополнительные сведения см. в разделе [межстраничной записью в веб-форм ASP.NET](https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b).  
  
<a name="HandlingButtonEventsinClientScript"></a>   
## <a name="handling-button-events-in-client-script"></a>Обработка событий кнопки из клиентского скрипта  
 Кнопка может вызывать события сервера и клиентских событий. События сервера происходят после обратной передачи, и они обрабатываются в серверный код, написанный для страницы. Клиентские события обрабатываются в клиентском сценарии, обычно ECMAScript (JavaScript) и вызываются перед отправкой страницы. Добавив событий на стороне клиента кнопок ASP.NET, можно выполнять задачи, такие как отображение диалоговые окна подтверждения перед отправкой страницы и потенциально отменить отправку. Дополнительные сведения см. в разделе [клиентского скрипта ASP.NET Web Pages](https://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa) и [как: Ответ на события элемента управления кнопки веб-сервера из клиентского скрипта](https://msdn.microsoft.com/library/1ab97f0b-1c38-4897-85b0-ac915f6a182b).  
  
 Можно также <xref:System.Web.UI.WebControls.Button> элемент управления также клиентский скрипт для выполнения обратной передачи (а не просто выполняет операцию HTTP POST). Это может быть полезно в том случае, если требуется программно управлять обратной передачи, таких как подключение его к другим элементам на странице. Можно задать <xref:System.Web.UI.WebControls.Button> элемента управления <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> свойства `true` заставить <xref:System.Web.UI.WebControls.Button> управления для использования клиентских скриптов на основе обратной передачи.  
  
<a name="ButtonControlsAndValidation"></a>   
## <a name="button-controls-and-validation"></a>Элементы управления кнопки и проверки  
 Если страница содержит проверяющие элементы управления ASP.NET, по умолчанию, нажатие кнопки приводит к проверяющий элемент управления выполнить проверку. Если включена проверка на стороне клиента для проверяющего элемента управления, страницы не выполняется, если проверка завершается неудачно.  
  
 Следующая таблица описывает свойства, поддерживаемые элементами управления кнопки, которые позволяют более точно управлять процессом проверки.  
  
|Свойство.|Описание|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>|Указывает ли кнопки также выполняет операции проверки. Присвойте этому свойству значение `false` во избежание проверки.|  
|<xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>|Позволяет указать, какие проверяющие элементы управления на странице вызываются при нажатии кнопки. Если группы проверки не установлены, нажатие кнопки вызывает все проверяющие элементы управления, которые находятся на странице.|  
  
 Дополнительные сведения см. в разделе [Проверка пользовательского ввода на веб-страницах ASP.NET](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
<a name="ButtonsInDataControls"></a>   
## <a name="buttons-in-data-controls"></a>Кнопки в элементах управления данными  
 Кнопка управления часто используются в элементах управления данными, такие как в <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.GridView>, и <xref:System.Web.UI.WebControls.Repeater> управляющие элементы списков. В таком случае вы обычно не отвечать непосредственно к кнопке события щелчка. Вместо этого кнопку в элементе управления данными событие, относящееся к элементу управления данных. Например, в <xref:System.Web.UI.WebControls.DataList> элемента управления, может вызвать кнопки <xref:System.Web.UI.WebControls.DataList> элемента управления <xref:System.Web.UI.WebControls.DataList.ItemCommand> событий не поднимая <xref:System.Web.UI.WebControls.Button> элемента управления <xref:System.Web.UI.WebControls.Button.Click> событий.  
  
 Так как элементы управления списком с привязкой данных может содержать множество кнопок, можно задать кнопки <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> свойство, чтобы указать значение, передаваемое как часть события. Затем можно проверить для этого аргумента увидеть, какая кнопка была нажата.  
  
<a name="BindingDataToTheControls"></a>   
## <a name="binding-data-to-the-controls"></a>Привязка данных к элементам управления  
 Кнопка веб-сервера управления можно привязать к источнику данных позволяет управлять параметрами свойств динамически. Например, можно задать кнопки <xref:System.Web.UI.WebControls.Button.Text%2A> свойства с помощью привязки данных.  
  
<a name="UsingButtonsWithUpdatePanelControls"></a>   
## <a name="using-buttons-with-updatepanel-controls"></a>Использование кнопок с элементами управления UpdatePanel  
 Частичная отрисовка страницы позволяет обновлять часть страницы без обратной передачи. <xref:System.Web.UI.UpdatePanel> элементы управления позволяют пометить части страницы, которые участвуют в частичной отрисовке страницы. По умолчанию поведения элементов управления внутри <xref:System.Web.UI.UpdatePanel> управления, включая <xref:System.Web.UI.WebControls.Button> элементами управления, для выполнения асинхронной обратной передачи, а не обратной передачи. Это обновляет только содержимое <xref:System.Web.UI.UpdatePanel> управления, из которого исходит обратной передачи.  
  
 В дополнение к ситуацию, в которой <xref:System.Web.UI.WebControls.Button> управления, находящимся внутри <xref:System.Web.UI.UpdatePanel> элемента управления, можно использовать <xref:System.Web.UI.WebControls.Button> элементы управления <xref:System.Web.UI.UpdatePanel> элементов управления в следующих сценариях:  
  
-   Определение <xref:System.Web.UI.WebControls.Button> элемент управления, который находится за пределами <xref:System.Web.UI.UpdatePanel> управление в качестве <xref:System.Web.UI.AsyncPostBackTrigger> управления для этой панели. При нажатии кнопки, он выполняет асинхронную обратную передачу и обновление содержимого панели.  
  
-   Определение <xref:System.Web.UI.WebControls.Button> управления, находящимся внутри <xref:System.Web.UI.UpdatePanel> управление в качестве <xref:System.Web.UI.PostBackTrigger> для панели. При нажатии кнопки, он выполняет обратную передачу, несмотря на то, что она находится внутри <xref:System.Web.UI.UpdatePanel> элемента управления.  
  
 Дополнительные сведения о частичной визуализации и с помощью <xref:System.Web.UI.UpdatePanel> элементов управления, см. в разделе [Обзор элемента управления UpdatePanel](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) и [Общие сведения об отрисовке частичных страниц](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a>Декларативный синтаксис  
  
```  
<asp:Button  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CausesValidation="True|False"  
    CommandArgument="string"  
    CommandName="string"  
    CssClass="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    OnClick="Click event handler"  
    OnClientClick="string"  
    OnCommand="Command event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    PostBackUrl="uri"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    Text="string"  
    ToolTip="string"  
    UseSubmitBehavior="True|False"  
    ValidationGroup="string"  
    Visible="True|False"  
    Width="size"  
/>  
```  
  
   
  
## Examples  
 В следующем примере кода демонстрируется создание отправки <xref:System.Web.UI.WebControls.Button> управления веб-страницы содержимого на сервер.  
  
 [!code-aspx-csharp[Classic Button Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Button Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Button Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Button Example/VB/sourcevb.aspx#1)]  
  
 В следующем примере кода демонстрируется создание команды <xref:System.Web.UI.WebControls.Button> элемент управления, который сортирует список.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
    <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
    <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Кнопка веб-сервера управления</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Button ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Button();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.Button" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется для создания и инициализации нового экземпляра <xref:System.Web.UI.WebControls.Button> класса.  
  
   
  
## Examples  
 В следующем примере кода показано, как создать и инициализировать новый экземпляр класса <xref:System.Web.UI.WebControls.Button> класса.  
  
 [!code-aspx-csharp[ButtonCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCtor/CS/buttonctorcs.aspx#1)]
 [!code-aspx-vb[ButtonCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCtor/VB/buttonctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Кнопка веб-сервера управления</related>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="button.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, содержащий выходной поток, который необходимо вывести на стороне клиента.</param>
        <summary>Добавляет атрибуты элемента управления <see cref="T:System.Web.UI.WebControls.Button" /> в выходной поток для отрисовки на стороне клиента.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как переопределить <xref:System.Web.UI.WebControls.Button.AddAttributesToRender%2A> метод в серверного элемента управления, таким образом, чтобы <xref:System.Web.UI.WebControls.Button> текст всегда отображается красным цветом.  
  
 [!code-aspx-csharp[CustomButtonAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/CS/custombuttonaddattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomButtonAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/VB/custombuttonaddattributestorendervb.aspx#1)]  
[!code-csharp[CustomButtonAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/CS/custombuttonaddattributestorender.cs#2)]
[!code-vb[CustomButtonAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/VB/custombuttonaddattributestorender.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Кнопка веб-сервера управления</related>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Web.UI.WebControls.Button.CausesValidation" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CausesValidation</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, показывающее, выполняется ли проверка при щелчке элемента управления <see cref="T:System.Web.UI.WebControls.Button" />.</summary>
        <value>Значение <see langword="true" />, если при выборе элемента управления <see cref="T:System.Web.UI.WebControls.Button" /> проверка выполняется; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию выполняется проверка страницы при <xref:System.Web.UI.WebControls.Button> нажатии элемента управления. Проверка страниц, определяет ли элементы управления для ввода, связанный с проверяющим элементом управления на странице, все правила проверки, заданные элементом управления проверки.  
  
 Можно указать или определить, выполняется ли проверка на клиенте и сервере при <xref:System.Web.UI.WebControls.Button> нажатии элемента управления с помощью <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> свойство. Чтобы предотвратить выполнение проверки, задайте <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> свойства `false`.  
  
> [!NOTE]
>  Необходимо задать <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> свойства `false` при использовании <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> свойство для обратной передачи на другую страницу. Следует явно выполнить проверку при передаче на другую страницу. Например, см. в разделе "Примечания" <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> свойство.  
  
 Обычно значение этого свойства устанавливается равным `false` для `reset` или `clear` кнопку, чтобы предотвратить выполнение при нажатии кнопки проверки.  
  
 Когда значение <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> свойство имеет значение `true`, можно также использовать <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> свойство, чтобы указать имя группы проверки, для которого <xref:System.Web.UI.WebControls.Button> элемент управления вызывает проверку.  
  
 Значение для данного свойства нельзя задать с помощью тем или тем таблиц стилей. Дополнительные сведения см. в разделе <xref:System.Web.UI.ThemeableAttribute> и [тем и оформлений ASP.NET](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> свойство, чтобы предотвратить проверки страниц. Обратите внимание, что <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> метод активирует все проверяющие элементы управления, независимо друг от друга.  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[ButtonControlCausesValidation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonControlCausesValidation/CS/buttoncausesvalidationcs.aspx#1)]
 [!code-aspx-vb[ButtonControlCausesValidation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonControlCausesValidation/VB/buttoncausesvalidationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.Button.ValidationGroup" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Кнопка веб-сервера управления</related>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Button.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IButtonControl.Click</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает при щелчке элемента управления <see cref="T:System.Web.UI.WebControls.Button" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.Click> События при <xref:System.Web.UI.WebControls.Button> нажатии элемента управления. Это событие обычно используется, когда имя команды не связано с <xref:System.Web.UI.WebControls.Button> управления (например, с помощью кнопки отправки).  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано, как указать и написать обработчик событий для <xref:System.Web.UI.WebControls.Button.Click> событий, чтобы отобразить сообщение на веб-страницы при <xref:System.Web.UI.WebControls.Button> нажатии элемента управления.  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Кнопка веб-сервера управления</related>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.CommandEventHandler Command;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.CommandEventHandler Command" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Button.Command" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Command As CommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Web::UI::WebControls::CommandEventHandler ^ Command;" />
      <MemberSignature Language="F#" Value="member this.Command : System.Web.UI.WebControls.CommandEventHandler " Usage="member this.Command : System.Web.UI.WebControls.CommandEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IButtonControl.Command</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.CommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает при щелчке элемента управления <see cref="T:System.Web.UI.WebControls.Button" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.Command> События при <xref:System.Web.UI.WebControls.Button> нажатии элемента управления. Это событие обычно используется, когда имя команды, такие как `Sort`, связанный с <xref:System.Web.UI.WebControls.Button> элемента управления. Это позволяет создать несколько <xref:System.Web.UI.WebControls.Button> элементов управления на веб-странице и программным способом определить, какие <xref:System.Web.UI.WebControls.Button> нажатии элемента управления.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Button.Command> Событие через иерархию элементов управления в форме `BubbleEvent`.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано, как указать и написать обработчик событий для <xref:System.Web.UI.WebControls.Button.Command> событий для сортировки списка при <xref:System.Web.UI.WebControls.Button> нажатии элемента управления. В этом примере указывает обработчик событий декларативно, используя <xref:System.Web.UI.WebControls.Button.OnClick%2A> свойство <xref:System.Web.UI.WebControls.Button> элемента управления.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 В следующем примере кода показано, как определить обработчик событий и программным способом добавить его к событию в `Page_Load` метод.  
  
 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Кнопка веб-сервера управления</related>
      </Docs>
    </Member>
    <Member MemberName="CommandArgument">
      <MemberSignature Language="C#" Value="public string CommandArgument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandArgument" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CommandArgument" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandArgument As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandArgument { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandArgument : string with get, set" Usage="System.Web.UI.WebControls.Button.CommandArgument" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CommandArgument</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает дополнительный параметр, передаваемый событию <see cref="E:System.Web.UI.WebControls.Button.Command" /> вместе с соответствующим свойством <see cref="P:System.Web.UI.WebControls.Button.CommandName" />.</summary>
        <value>Дополнительный параметр, передаваемый событию <see cref="E:System.Web.UI.WebControls.Button.Command" /> вместе с соответствующим свойством <see cref="P:System.Web.UI.WebControls.Button.CommandName" />. Значение по умолчанию — <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> свойство, чтобы указать параметр, который дополняет <xref:System.Web.UI.WebControls.Button.CommandName%2A> свойство.  
  
> [!NOTE]
>  Несмотря на то, что можно задать <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> свойство сама по себе это обычно используется, только если <xref:System.Web.UI.WebControls.Button.CommandName%2A> задано свойство.  
  
 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> Дополняет свойство <xref:System.Web.UI.WebControls.Button.CommandName%2A> свойство, позволяя для предоставления дополнительных сведений о команде для выполнения. Например, если задать <xref:System.Web.UI.WebControls.Button.CommandName%2A> свойства `Sort` и <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> свойства `Ascending`, необходимо указать команду, чтобы отсортировать в возрастающем порядке.  
  
 Значение для данного свойства нельзя задать с помощью тем или тем таблиц стилей. Дополнительные сведения см. в разделе <xref:System.Web.UI.ThemeableAttribute> и [тем и оформлений ASP.NET](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> свойства для создания <xref:System.Web.UI.WebControls.Button> элемент управления, который сортирует список в порядке возрастания.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Кнопка веб-сервера управления</related>
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandName : string with get, set" Usage="System.Web.UI.WebControls.Button.CommandName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CommandName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя команды, связанное с элементом управления <see cref="T:System.Web.UI.WebControls.Button" />, которое передается событию <see cref="E:System.Web.UI.WebControls.Button.Command" />.</summary>
        <value>Имя команды элемента управления <see cref="T:System.Web.UI.WebControls.Button" />. Значение по умолчанию — <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При наличии нескольких <xref:System.Web.UI.WebControls.Button> элементы управления на веб-странице, используют <xref:System.Web.UI.WebControls.Button.CommandName%2A> свойство определяет имя команды, связанные с каждым <xref:System.Web.UI.WebControls.Button> элемента управления. Можно задать <xref:System.Web.UI.WebControls.Button.CommandName%2A> свойство с любой строкой, которая определяет команду для выполнения. Затем можно программно определить имя команды <xref:System.Web.UI.WebControls.Button> контролировать и выполнять соответствующие действия.  
  
 Дополнительные сведения о команде, такие как `Ascending`, может быть указан с помощью <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> свойство.  
  
 Значение для данного свойства нельзя задать с помощью тем или тем таблиц стилей. Дополнительные сведения см. в разделе <xref:System.Web.UI.ThemeableAttribute> и [тем и оформлений ASP.NET](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.Button.CommandName%2A> свойства для создания <xref:System.Web.UI.WebControls.Button> элемент управления, который сортирует список.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Кнопка веб-сервера управления</related>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackOptions">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.PostBackOptions GetPostBackOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.PostBackOptions GetPostBackOptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.GetPostBackOptions" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPostBackOptions () As PostBackOptions" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::PostBackOptions ^ GetPostBackOptions();" />
      <MemberSignature Language="F#" Value="abstract member GetPostBackOptions : unit -&gt; System.Web.UI.PostBackOptions&#xA;override this.GetPostBackOptions : unit -&gt; System.Web.UI.PostBackOptions" Usage="button.GetPostBackOptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает объект <see cref="T:System.Web.UI.PostBackOptions" />, который представляет поведение элемента управления <see cref="T:System.Web.UI.WebControls.Button" /> при обратной передаче.</summary>
        <returns>Объект <see cref="T:System.Web.UI.PostBackOptions" />, представляющий поведение элемента управления <see cref="T:System.Web.UI.WebControls.Button" /> при обратной передаче.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.GetPostBackOptions%2A> Метод создает <xref:System.Web.UI.PostBackOptions> , представляющий <xref:System.Web.UI.WebControls.Button> поведение обратной передачи элемента управления. <xref:System.Web.UI.PostBackOptions> Объект обычно передается <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=nameWithType> метод, который используется для получения ссылки на функцию клиентского скрипта, при вызове, заставляет сервер для обратной передачи страницы.  
  
 Этот метод используется преимущественно разработчиками элементов управления при расширении <xref:System.Web.UI.WebControls.Button> класса.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Можно переопределить <see cref="M:System.Web.UI.WebControls.Button.GetPostBackOptions" /> метод в производном классе для изменения параметров обратной передачи элемента управления button, либо для вызова клиентский сценарий, при нажатии кнопки. Не забудьте вызвать базовый класс <see cref="M:System.Web.UI.WebControls.Button.GetPostBackOptions" /> метод таким образом, задаются стандартные параметры обратной передачи.</para></block>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Кнопка веб-сервера управления</related>
        <related type="Article" href="https://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa">Клиентский скрипт на веб-страницах ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClick : EventArgs -&gt; unit&#xA;override this.OnClick : EventArgs -&gt; unit" Usage="button.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.Button.Click" /> элемента управления <see cref="T:System.Web.UI.WebControls.Button" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.Click> События при <xref:System.Web.UI.WebControls.Button> нажатии элемента управления. Это событие обычно используется, когда имя команды не связано с <xref:System.Web.UI.WebControls.Button> управления (например, с помощью кнопки отправки).  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Web.UI.WebControls.Button.OnClick%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода показано, как указать и написать обработчик событий для <xref:System.Web.UI.WebControls.Button.Click> для отображения простого сообщения на веб-страницы.  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="T:System.EventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Кнопка веб-сервера управления</related>
      </Docs>
    </Member>
    <Member MemberName="OnClientClick">
      <MemberSignature Language="C#" Value="public virtual string OnClientClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnClientClick" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.OnClientClick" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property OnClientClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OnClientClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnClientClick : string with get, set" Usage="System.Web.UI.WebControls.Button.OnClientClick" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает клиентский скрипт, выполняемый при происхождении события <see cref="T:System.Web.UI.WebControls.Button" /> в элементе управления <see cref="E:System.Web.UI.WebControls.Button.Click" />.</summary>
        <value>Скрипт на стороне клиента, выполняемый при происхождении события <see cref="T:System.Web.UI.WebControls.Button" /> в элементе управления <see cref="E:System.Web.UI.WebControls.Button.Click" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> свойство, чтобы указать дополнительные клиентский скрипт, выполняемый при <xref:System.Web.UI.WebControls.Button> элемента управления <xref:System.Web.UI.WebControls.Button.Click> события. Скрипт, указываемое для этого свойства отображается в <xref:System.Web.UI.WebControls.Button> элемента управления `OnClick` атрибута Помимо элемента управления предопределенные клиентского скрипта.  
  
 Значение для данного свойства нельзя задать с помощью тем или тем таблиц стилей. Дополнительные сведения см. в разделе <xref:System.Web.UI.ThemeableAttribute> и [тем и оформлений ASP.NET](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Проект Visual Studio Web сайта с исходным кодом доступен на следующей странице в этом разделе: [Скачайте](https://go.microsoft.com/fwlink/?LinkId=192871).  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> свойство, чтобы указать дополнительные клиентский скрипт, выполняемый при <xref:System.Web.UI.WebControls.Button> нажатии элемента управления.  
  
 [!code-aspx-csharp[Button.OnClientClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.OnClientClick/cs/button.onclientclickcs.aspx#1)]
 [!code-aspx-vb[Button.OnClientClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.OnClientClick/vb/button.onclientclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Кнопка веб-сервера управления</related>
      </Docs>
    </Member>
    <Member MemberName="OnCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCommand (System.Web.UI.WebControls.CommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCommand(class System.Web.UI.WebControls.CommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCommand (e As CommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCommand(System::Web::UI::WebControls::CommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCommand : System.Web.UI.WebControls.CommandEventArgs -&gt; unit&#xA;override this.OnCommand : System.Web.UI.WebControls.CommandEventArgs -&gt; unit" Usage="button.OnCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.Button.Command" /> элемента управления <see cref="T:System.Web.UI.WebControls.Button" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.Command> События при <xref:System.Web.UI.WebControls.Button> нажатии элемента управления. Это событие обычно используется, когда имя команды, такие как `Sort`, связанный с <xref:System.Web.UI.WebControls.Button> элемента управления. Это позволяет создать несколько <xref:System.Web.UI.WebControls.Button> элементов управления на веб-странице и программным способом определить, какие <xref:System.Web.UI.WebControls.Button> нажатии элемента управления.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Button.Command> Событие через иерархию элементов управления в форме `BubbleEvent`.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Web.UI.WebControls.Button.OnCommand%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода показано, как указать и написать обработчик событий для <xref:System.Web.UI.WebControls.Button.Command> событий для сортировки списка при <xref:System.Web.UI.WebControls.Button> нажатии элемента управления. В этом примере указывает обработчик событий декларативно, используя <xref:System.Web.UI.WebControls.Button.OnClick%2A> свойство <xref:System.Web.UI.WebControls.Button> элемента управления.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 В следующем примере кода показано, как определить обработчик событий и программным способом добавить его к событию в `Page_Load` метод.  
  
 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Кнопка веб-сервера управления</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="button.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Данные события.</param>
        <summary>Определяет, была ли нажата кнопка перед отрисовкой на стороне клиента.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.OnPreRender%2A> Метод используется преимущественно разработчиками элементов управления при наследовании от пользовательского класса <xref:System.Web.UI.WebControls.Button> элемента управления.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Кнопка веб-сервера управления</related>
      </Docs>
    </Member>
    <Member MemberName="PostBackUrl">
      <MemberSignature Language="C#" Value="public virtual string PostBackUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PostBackUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.PostBackUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PostBackUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PostBackUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PostBackUrl : string with get, set" Usage="System.Web.UI.WebControls.Button.PostBackUrl" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.PostBackUrl</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.UrlProperty("*.aspx")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает URL-адрес страницы, на которую осуществляется передача с текущей страницы при нажатии элемента управления <see cref="T:System.Web.UI.WebControls.Button" />.</summary>
        <value>URL-адрес веб-страницы, на которую осуществляется передача с текущей страницы при нажатии элемента управления <see cref="T:System.Web.UI.WebControls.Button" />. Значение по умолчанию — пустая строка (""), которая приводит к обратной передаче страницы самой себе.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> Свойство дает возможность выполнять межстраничной post с помощью <xref:System.Web.UI.WebControls.Button> элемента управления.  
  
> [!NOTE]
>  Только правильно заданные пути работы с этим свойством. Например, относительные пути (`Test/default.aspx`), абсолютные пути (`https://localhost/WebApp/default.aspx`) и виртуальными (`~\Test\default.aspx`) работать правильно. Неправильно сформирован пути, такие как «/ Test/default.aspx» или «\Test\default.aspx» не работают. См. в разделе [пути проекта ASP.NET Web](https://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd) сведения о создании правильные пути.  
  
 Задайте <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> URL-адрес веб-страницы для публикации при <xref:System.Web.UI.WebControls.Button> нажатии элемента управления. Например, при указании `Page2.aspx` приводит к странице, содержащей <xref:System.Web.UI.WebControls.Button> управления для публикации `Page2.aspx`. Если не указать значение для <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> свойство, передаче страницы обратно на себя.  
  
> [!IMPORTANT]
>  При выполнении межстраничной обратной передачи с помощью элементов управления с помощью проверки на стороне сервера, необходимо проверить, что страницы <xref:System.Web.UI.Page.IsValid%2A> свойство `true` перед обработкой обратной передачи. В случае межстраничной обратной передачи страницы выполняется <xref:System.Web.UI.Page.PreviousPage%2A>. В следующем коде VB показано, как это делается:  
  
```  
Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load  
        If Page.PreviousPage.IsValid Then  
            ' Handle the post back  
        Else  
            Response.Write("Invalid")  
        End If  
End Sub  
```  
  
 Дополнительные сведения о методиках межстраничной см. в разделе [межстраничной записью в веб-форм ASP.NET](https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b).  
  
 Значение для данного свойства нельзя задать с помощью тем или тем таблиц стилей. Дополнительные сведения см. в разделе <xref:System.Web.UI.ThemeableAttribute> и [тем и оформлений ASP.NET](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> для выполнения межстраничной отправки. Когда пользователь щелкает <xref:System.Web.UI.WebControls.Button> передаче страницы элемента управления, значение, введенное в текстовое поле на целевую страницу, определяемое <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> свойство. Чтобы запустить этот пример, необходимо также создать файл для целевой страницы в том же каталоге, что этот пример кода. Код целевой страницы приведен в следующем примере.  
  
 [!code-aspx-csharp[Button.PostBackUrlProperty#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.PostBackUrlProperty/CS/button.postbackurlpropertycs.aspx#1)]
 [!code-aspx-vb[Button.PostBackUrlProperty#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.PostBackUrlProperty/VB/button.postbackurlpropertyvb.aspx#1)]  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.Page.PreviousPage%2A?displayProperty=nameWithType> свойство доступ к значениям, которая была отправлена из другой страницы с помощью <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> свойство. Эта страница получает строку, которая была отправлена на предыдущей странице и отображает его пользователю. При попытке запустить данный пример кода напрямую, вы получите ошибку, так как значение `text` поле будет `null`. Используйте этот код для создания целевой страницы и поместите файл в том же каталоге, что и код для предыдущего примера. Имя файла должно соответствовать значению, заданному для <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> свойство в предыдущем примере. При выполнении кода в предыдущем примере, эта страница будет выполнена автоматически, когда межстраничной отправки.  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Button.PostBackUrlPage2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.PostBackUrlPage2/CS/button.postbackurlpage2cs.aspx#1)]
 [!code-aspx-vb[Button.PostBackUrlPage2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.PostBackUrlPage2/VB/button.postbackurlpage2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.PreviousPage" />
        <related type="Article" href="https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b">Межстраничная передача в веб-страницу ASP.NET</related>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Кнопка веб-сервера управления</related>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="button.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Аргумент события.</param>
        <summary>Вызывает событие для элемента управления <see cref="T:System.Web.UI.WebControls.Button" />, когда он выполняет обратную передачу на сервер.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие используется внутренне <xref:System.Web.UI.WebControls.Button> при ее нажатии, чтобы вызвать элемент управления <xref:System.Web.UI.WebControls.Button.Click> событий и если определен, <xref:System.Web.UI.WebControls.Button.Command> событий.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Кнопка веб-сервера управления</related>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="button.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, представляющий выходной поток, который выводит HTML-содержимое на стороне клиента.</param>
        <summary>Выводит содержимое элемента управления в заданный модуль записи.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как переопределить <xref:System.Web.UI.WebControls.Button.RenderContents%2A> метод в пользовательский сервер управления, чтобы он всегда отображает текст, следующий пользовательский <xref:System.Web.UI.WebControls.Button> серверного элемента управления.  
  
 [!code-aspx-csharp[CustomButtonRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRenderContents/CS/custombuttonrendercontentscs.aspx#1)]
 [!code-aspx-vb[CustomButtonRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRenderContents/VB/custombuttonrendercontentsvb.aspx#1)]  
[!code-csharp[CustomButtonRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRenderContents/CS/custombuttonrendercontents.cs#2)]
[!code-vb[CustomButtonRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRenderContents/VB/custombuttonrendercontents.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Кнопка веб-сервера управления</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Аргумент события.</param>
        <summary>Вызывает событие для элемента управления <see cref="T:System.Web.UI.WebControls.Button" />, когда он выполняет обратную передачу на сервер.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие используется внутренне <xref:System.Web.UI.WebControls.Button> при ее нажатии, чтобы вызвать элемент управления <xref:System.Web.UI.WebControls.Button.Click> событий и если определен, <xref:System.Web.UI.WebControls.Button.Command> событий.  
  
   
  
## Examples  
 В следующем примере кода показано, как переопределить <xref:System.Web.UI.WebControls.Button.System%23Web%23UI%23IPostBackEventHandler%23RaisePostBackEvent%2A> метод, чтобы он всегда создает исключение <xref:System.Web.UI.WebControls.Button.OnClick%2A> событий в пользовательской <xref:System.Web.UI.WebControls.Button> элемента управления.  
  
 [!code-csharp[CustomButtonRaisePostBackEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRaisePostBackEvent/CS/custombuttonraisepostbackevent.cs#2)]
 [!code-vb[CustomButtonRaisePostBackEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRaisePostBackEvent/VB/custombuttonraisepostbackevent.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Кнопка веб-сервера управления</related>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.Button.Text" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.Text</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает текст подписи, отображаемый в элементе управления <see cref="T:System.Web.UI.WebControls.Button" />.</summary>
        <value>Текст подписи, отображаемый в элементе управления <see cref="T:System.Web.UI.WebControls.Button" />. Значение по умолчанию — <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.Button.Text%2A> свойство определяет заголовок, отображаемый в <xref:System.Web.UI.WebControls.Button> элемента управления.  
  
 Значение этого свойства, если задано значение, можно автоматически сохраняются в файл ресурсов с помощью средств конструктора. Дополнительные сведения см. в разделе <xref:System.ComponentModel.LocalizableAttribute> и [глобализации и локализации](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.Button.Text%2A> свойство, чтобы указать заголовок, отображаемый в <xref:System.Web.UI.WebControls.Button> элемента управления.  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Кнопка веб-сервера управления</related>
      </Docs>
    </Member>
    <Member MemberName="UseSubmitBehavior">
      <MemberSignature Language="C#" Value="public virtual bool UseSubmitBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSubmitBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.UseSubmitBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UseSubmitBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseSubmitBehavior { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseSubmitBehavior : bool with get, set" Usage="System.Web.UI.WebControls.Button.UseSubmitBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, использует ли элемент управления <see cref="T:System.Web.UI.WebControls.Button" /> механизм отправки из клиентского браузера или механизм обратной передачи ASP.NET.</summary>
        <value><see langword="true" />, если элемент управления использует механизм отправки из клиентского браузера; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> свойство, чтобы указать ли <xref:System.Web.UI.WebControls.Button> элемент управления использует клиент браузера Отправка механизм или механизм обратной передачи ASP.NET. По умолчанию значение этого свойства равно `true`, вызывающие <xref:System.Web.UI.WebControls.Button> механизм отправки элемента управления для использования в браузере. Если указать `false`, платформа ASP.NET добавляет клиентского скрипта к странице для отправки формы на сервер.  
  
 Когда <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> свойство `false`, разработчики элементов управления можно использовать <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> метод, чтобы снова получить возможность управления обратной передачи событий для <xref:System.Web.UI.WebControls.Button>. Строка, возвращаемая <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> метод содержит текст вызова функции на стороне клиента и могут быть вставлены в обработчик событий на стороне клиента.  
  
 Значение для данного свойства нельзя задать с помощью тем или тем таблиц стилей. Дополнительные сведения см. в разделе <xref:System.Web.UI.ThemeableAttribute> и [тем и оформлений ASP.NET](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> свойство, чтобы указать механизм отправки, <xref:System.Web.UI.WebControls.Button> элемент управления использует при обратной передаче. <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> Свойству `false`, кнопку, используемую ASP.NET вызывает обратную передачу механизм. Если просмотреть исходный код для отображаемой страницы, с помощью команды Просмотр исходного кода в браузере, вы увидите, что скрипт на стороне клиента добавлен платформой страницы ASP.NET для отправки формы на сервер.  
  
 [!code-aspx-csharp[Button.UseSubmitBehavior#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.UseSubmitBehavior/CS/button.usesubmitbehaviorcs.aspx#1)]
 [!code-aspx-vb[Button.UseSubmitBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.UseSubmitBehavior/VB/button.usesubmitbehaviorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Кнопка веб-сервера управления</related>
        <related type="Article" href="https://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa">Клиентский скрипт на веб-страницах ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.UI.WebControls.Button.ValidationGroup" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.ValidationGroup</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает группу элементов управления, для которых элемент управления <see cref="T:System.Web.UI.WebControls.Button" /> инициирует проверку при обратной передаче на сервер.</summary>
        <value>Группа элементов управления, для которых элемент управления <see cref="T:System.Web.UI.WebControls.Button" /> инициирует проверку при обратной передаче на сервер. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Группы проверки позволяют назначать элементы управления проверки на странице к определенной категории. Каждая группа проверки может проверяться независимо от других групп проверки на странице. Используйте <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> свойство, чтобы указать имя группы проверки, для которого <xref:System.Web.UI.WebControls.Button> элемент управления вызывает проверку при обратной передаче.  
  
 Это свойство действует только тогда, когда значение <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> свойству `true`. Если указать значение для <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> являются только элементов управления проверки, которые входят в указанную группу свойств, проверяются, когда <xref:System.Web.UI.WebControls.Button> элемент выполняет обратную передачу на сервер. Если не указать значение для этого свойства и <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> свойству `true`, все элементы управления проверки на странице, которые не назначены группы проверки проверяются при передаче элемента управления на сервер.  
  
 Значение для данного свойства нельзя задать с помощью тем или тем таблиц стилей. Дополнительные сведения см. в разделе <xref:System.Web.UI.ThemeableAttribute> и [тем и оформлений ASP.NET](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> свойство, чтобы указать элементы управления для проверки, когда <xref:System.Web.UI.WebControls.Button> элемент выполняет обратную передачу на сервер. Страница содержит три текстовых поля для сбора данных от пользователя и три <xref:System.Web.UI.WebControls.RequiredFieldValidator> элементов управления, чтобы убедиться, что пользователь не оставьте поле пустым. <xref:System.Web.UI.WebControls.RequiredFieldValidator> Управляет для первых двух текстовых полях в `PersonalInfoGroup` группу проверки и <xref:System.Web.UI.WebControls.RequiredFieldValidator> управления третье текстовое поле находится в `LocationInfoGroup` группы проверки. Когда `Button1` нажатии только элементы управления в группе проверки `PersonalInfoGroup` проверяются. Когда `Button2` нажатии только элемент управления в группе проверки `LocationInfoGroup` проверяется.  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Button.ValidationGroup#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.ValidationGroup/CS/button.validationgroupcs.aspx#1)]
 [!code-aspx-vb[Button.ValidationGroup#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.ValidationGroup/VB/button.validationgroupvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Button.CausesValidation" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Кнопка веб-сервера управления</related>
      </Docs>
    </Member>
  </Members>
</Type>