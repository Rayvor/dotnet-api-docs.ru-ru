<Type Name="LinqDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1eaa7efb46dc1e004579fef514fcd8db71c9ed26" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70447390" /></Metadata><TypeSignature Language="C#" Value="public class LinqDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type LinqDataSourceStatusEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет данные для событий <see cref="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Deleted" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserted" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Selected" /> и <see cref="E:System.Web.UI.WebControls.LinqDataSource.Updated" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс позволяет проверять результаты операций с данными, выполненных <xref:System.Web.UI.WebControls.LinqDataSource> элементом управления. <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> <xref:System.Web.UI.WebControls.LinqDataSource.Selected> <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated> <xref:System.Web.UI.WebControls.LinqDataSource.Updated> Объект передается <xref:System.Web.UI.WebControls.LinqDataSource>  обработчикам событий для событий, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>,, и элемента управления. <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>  
  
 Если операция с данными завершилась успешно, результирующий объект данных сохраняется в <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> свойстве, <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> а свойство — `null`. Если операция с данными завершилась неудачно, исключение, произошедшее во время операции с <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> данными, сохраняется <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> в свойстве, а свойство имеет `null`значение. Если вы обработали исключение, представленное <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> свойством, <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> задайте для `true` свойства значение, чтобы исключение не выдавалось.  
  
 Вы получаете общее количество записей данных, возвращенных запросом через <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> свойство.  
  
   
  
## Examples  
 В следующем примере показан обработчик событий для <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> события. В обработчике событий, если <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> свойство имеет `null`значение, идентификатор продукта извлекается <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> из объекта в свойстве. Идентификатор продукта является первичным ключом для таблицы и задается базой данных, поэтому значение неизвестно до тех пор, пока операция вставки не будет завершена. Сообщение об исключении заносится <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> в журнал, если свойство `null`не равно. Затем свойство устанавливается в  `true` значение.  <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : Exception -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs exception" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">Ошибка, произошедшая в ходе операции с данными.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />, используя исключение, произошедшее в результате операции с данными.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется при возникновении исключения во время операции с данными. Свойству автоматически присваивается `null`значение. <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (object result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (result As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(System::Object ^ result);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : obj -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs result" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="result" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="result">Объект, содержащий результирующие данные из операции с данными.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />, используя объект, содержащий данные из операции с данными.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется, когда операция с данными завершилась без ошибки. `result` Параметр содержит объект, представляющий результат операции с данными. Свойству автоматически присваивается `null`значение. <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (object result, int totalRowCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object result, int32 totalRowCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (result As Object, totalRowCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(System::Object ^ result, int totalRowCount);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : obj * int -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs (result, totalRowCount)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="result" Type="System.Object" />
        <Parameter Name="totalRowCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="result">Объект, содержащий результирующие данные из операции с данными.</param>
        <param name="totalRowCount">Максимальное число строк, возвращенных операцией по извлечению данных.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />, используя объект, содержащий данные из операции с данными, и количество возвращенных строк.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает исключение, инициированное во время операции с данными.</summary>
        <value>Объект <see cref="T:System.Exception" />, представляющий исключение в случае ошибки; в противном случае — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если во время операции с данными возникает исключение, исключение сохраняется в <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> свойстве. Вы можете создавать обработчики событий для <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated> <xref:System.Web.UI.WebControls.LinqDataSource.Updated> событий <xref:System.Web.UI.WebControls.LinqDataSource.Deleted> <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>,, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, и, а также получать исключения, если они есть, с <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> помощью свойства.  
  
   
  
## Examples  
 В следующем примере показан обработчик событий для <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> события. В обработчике событий, если <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> свойство имеет `null`значение, идентификатор продукта извлекается <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> из объекта в свойстве. Идентификатор продукта является первичным ключом для таблицы и задается базой данных, поэтому значение неизвестно до тех пор, пока операция вставки не будет завершена. Сообщение об исключении заносится <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> в журнал, если свойство `null`не равно. Затем свойство устанавливается в  `true` значение.  <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, позволяющее определить, было ли обработано исключение и должно ли оно выбрасываться снова.</summary>
        <value><see langword="true" />, если исключение обработано; в противном случае —<see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно создать <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>обработчики событий для событий <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>,, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>и <xref:System.Web.UI.WebControls.LinqDataSource.Updated> , чтобы проверить все исключения, произошедшие во время этих операций. Если вы обрабатываете исключение и не хотите повторно вызывать его, присвойте <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> `true`свойству значение. Если не задать <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> для `true`свойства значение, исключение будет распространяться на следующий обработчик событий в стеке вызовов.  
  
   
  
## Examples  
 В следующем примере показан обработчик событий для <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> события. В обработчике событий, если <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> свойство имеет `null`значение, идентификатор продукта извлекается <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> из объекта в свойстве. Идентификатор продукта является первичным ключом для таблицы и задается базой данных, поэтому значение неизвестно до тех пор, пока операция вставки не будет завершена. Сообщение об исключении заносится <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> в журнал, если свойство `null`не равно. Затем свойство устанавливается в  `true` значение.  <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public object Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Result { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : obj" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект, который предоставляет результат операции с данными.</summary>
        <value>Объект, содержащий данные из операции с данными.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> Свойство используется для проверки значений, возвращаемых операцией с данными. Можно получить выходные параметры из операции с данными или изменить значения, возвращаемые запросом.  
  
 Данные, хранящиеся в <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> свойстве, зависят от типа выполняемой операции с данными. При удалении данных <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> свойство содержит объект типа, указанного <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> в свойстве, с исходными значениями, которые были удалены из источника данных. При вставке или обновлении данных <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> свойство содержит объект типа, указанного <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> в свойстве, с новыми значениями, которые были сохранены в источнике данных. При выборе данных <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> свойство содержит результаты запроса.  
  
 Если запрос SELECT включает группирование данных или выбор подмножества свойств из типа <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> , указанного в свойстве, свойство содержит объект динамически созданного типа. В противном случае <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> свойство содержит объект типа, указанного <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>  в свойстве.  
  
   
  
## Examples  
 В следующем примере показан обработчик событий для <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> события. В обработчике событий, если <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> свойство имеет `null`значение, идентификатор продукта извлекается <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> из объекта в свойстве. Идентификатор продукта является первичным ключом для таблицы и задается базой данных, поэтому значение неизвестно до тех пор, пока операция вставки не будет завершена. Сообщение об исключении заносится <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> в журнал, если свойство `null`не равно. Затем свойство устанавливается в  `true` значение.  <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalRowCount">
      <MemberSignature Language="C#" Value="public int TotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalRowCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TotalRowCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalRowCount : int" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает общее число строк в наборе данных, полученном в результате операции по извлечению данных.</summary>
        <value>Общее число строк в наборе данных, полученном в результате операции по извлечению данных; -1, если объект <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> создан во время операции изменения данных; -1, если вы включили настраиваемое разбиение на страницы, присвоив свойству <see cref="P:System.Web.UI.WebControls.LinqDataSource.AutoPage" /> значение <see langword="true" />, а свойству <see cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" /> — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> Свойство используется для получения числа записей в наборе данных во время операции получения данных. Обычно это свойство извлекается при отображении страниц данных и требуется отобразить общее число записей.  
  
 Когда данные догружаются по страницам, значение <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> свойства может отличаться от фактического числа строк, возвращаемых запросом. Это обусловлено тем, что запрос возвращает только количество строк, необходимых для этой страницы данных.  
  
 Свойство содержит количество записей из запроса, только если доступ к нему осуществляется в обработчике событий <xref:System.Web.UI.WebControls.LinqDataSource.Selected> для события. <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> Если доступ к свойству осуществляется из обработчика событий для <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>события <xref:System.Web.UI.WebControls.LinqDataSource.Deleted> <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>,, или <xref:System.Web.UI.WebControls.LinqDataSource.Updated> , <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> свойство содержит-1.  
  
 Значение <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> свойства зависит от <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> свойства <xref:System.Web.UI.WebControls.LinqDataSource> элемента управления и `AllowPaging` от свойства элемента управления с привязкой к данным. В следующей таблице приведены возможные значения для <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> свойства.  
  
|Свойство автостранича элемента управления LinqDataSource|Свойство AllowPaging элемента управления с привязкой к данным|Тоталровкаунт, свойство|Результат|  
|-------------------------------------------------|-------------------------------------------------|----------------------------|-------------|  
|`true`|`true`|Число записей для запроса.|Данные автоматически выявляются страничными.|  
|`false`|`false`|Число записей для запроса.|Данные не выявляются страничными.|  
|`true`|`false`|-1|Данные не выявляются страничными.|  
|`false`|`true`|Значение, назначенное <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A> свойству в обработчике событий <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> для события.|Данные постранично выдаются в соответствии со значениями, указанными при настройке разбиения на страницы.|  
  
   
  
## Examples  
 В следующем примере показана веб-страница с <xref:System.Web.UI.WebControls.LinqDataSource> элементом управления <xref:System.Web.UI.WebControls.GridView> , элементом управления и <xref:System.Web.UI.WebControls.Literal> элементом управления. Элемент управления определяет обработчик событий <xref:System.Web.UI.WebControls.LinqDataSource.Selected> для события. <xref:System.Web.UI.WebControls.LinqDataSource>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/vb/Default.aspx#1)]  
  
 В следующем примере показан код для обработчика событий для <xref:System.Web.UI.WebControls.LinqDataSource.Selected> события. Значение <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> свойства присваивается <xref:System.Web.UI.WebControls.Literal> элементу управления.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/cs/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/vb/Default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
