<Type Name="LinqDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="66831e1edf18f86bb09016053bb76136737365e9" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64068393" /></Metadata><TypeSignature Language="C#" Value="public class LinqDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type LinqDataSourceStatusEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет данные для событий <see cref="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Deleted" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserted" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Selected" /> и <see cref="E:System.Web.UI.WebControls.LinqDataSource.Updated" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> Класса можно просматривать результаты операций с данными, которые были проведены с <xref:System.Web.UI.WebControls.LinqDataSource> элемента управления. Объект <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> объект передается в обработчик событий для <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, и <xref:System.Web.UI.WebControls.LinqDataSource.Updated> события <xref:System.Web.UI.WebControls.LinqDataSource> элемента управления.  
  
 Если для полученный объект данных данных операция успешно завершена, хранится в <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> свойство и <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> свойство `null`. Если сбой операции с данными, исключение, произошедшее во время операции с данными хранятся в <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> свойство и <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> свойство `null`. Если обработка исключения, представляемого <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> задайте <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> свойства `true` таким образом, чтобы не возникнет исключение.  
  
 Получить общее число записей данных, возвращаемых из запроса с помощью <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> свойство.  
  
   
  
## Examples  
 В примере показан обработчик событий для <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> событий. В обработчике событий Если <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> свойство `null`, продукта, код извлекается из объекта в <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> свойство. Продукт, идентификатор является первичным ключом для таблицы и задать в базе данных, поэтому значение неизвестно до завершения операции вставки. Сообщение об исключении записывается в том случае, если <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> свойства не равно `null`. <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> Затем свойству `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : Exception -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs exception" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">Ошибка, произошедшая в ходе операции с данными.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />, используя исключение, произошедшее в результате операции с данными.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется, когда возникает исключение во время операции с данными. <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> Свойству автоматически присваивается `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (object result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (result As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(System::Object ^ result);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : obj -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs result" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="result" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="result">Объект, содержащий результирующие данные из операции с данными.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />, используя объект, содержащий данные из операции с данными.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется, после завершения операции с данными без ошибок. `result` Параметр содержит объект, который представляет результат операции с данными. <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> Свойству автоматически присваивается `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (object result, int totalRowCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object result, int32 totalRowCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (result As Object, totalRowCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(System::Object ^ result, int totalRowCount);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : obj * int -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs (result, totalRowCount)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="result" Type="System.Object" />
        <Parameter Name="totalRowCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="result">Объект, содержащий результирующие данные из операции с данными.</param>
        <param name="totalRowCount">Максимальное число строк, возвращенных операцией по извлечению данных.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />, используя объект, содержащий данные из операции с данными, и количество возвращенных строк.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает исключение, инициированное во время операции с данными.</summary>
        <value>Объект <see cref="T:System.Exception" />, представляющий исключение в случае ошибки; в противном случае — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если во время операции с данными, возникает исключение, исключение хранится в <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> свойство. Можно создавать обработчики событий для <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, и <xref:System.Web.UI.WebControls.LinqDataSource.Updated> события и извлечь исключение, если таковое имеется, через <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> свойство.  
  
   
  
## Examples  
 В примере показан обработчик событий для <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> событий. В обработчике событий Если <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> свойство `null`, продукта, код извлекается из объекта в <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> свойство. Идентификатор продукта является первичным ключом для таблицы и задано значение в базе данных, поэтому значение неизвестно до завершения операции вставки. Сообщение об исключении записывается в том случае, если <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> свойства не равно `null`. <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> Затем свойству `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, позволяющее определить, было ли обработано исключение и должно ли оно выбрасываться снова.</summary>
        <value><see langword="true" />, если исключение обработано; в противном случае —<see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно создавать обработчики событий для <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, и <xref:System.Web.UI.WebControls.LinqDataSource.Updated> события, чтобы изучить все исключения, возникшие во время этих операций. Если обработать исключение и запретить его еще раз исключение, установите <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> свойства `true`. Если вы не установите <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> свойства `true`, исключение распространяется в следующий обработчик событий, в стеке вызовов.  
  
   
  
## Examples  
 В примере показан обработчик событий для <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> событий. В обработчике событий Если <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> свойство `null`, продукта, код извлекается из объекта в <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> свойство. Продукт, идентификатор является первичным ключом для таблицы и задать в базе данных, поэтому значение неизвестно до завершения операции вставки. Сообщение об исключении записывается в том случае, если <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> свойства не равно `null`. <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> Затем свойству `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public object Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Result { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : obj" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект, который предоставляет результат операции с данными.</summary>
        <value>Объект, содержащий данные из операции с данными.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Использовании <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> свойство для проверки значений, возвращаемых из операции с данными. Можно извлечь выходные параметры из операции с данными или изменить значения, возвращаемые из запроса.  
  
 Данные, хранящиеся в <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> свойство зависит от типа операции с данными, которая была выполнена. При удалении данных, <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> свойство содержит объект типа, указанного в <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> свойство с исходными значениями, которые были удалены из источника данных. При вставке или обновлении данных, <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> свойство содержит объект типа, указанного в <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> свойство, с новыми значениями, которые были сохранены в источнике данных. При выборе данных, <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> свойство содержит результаты запроса.  
  
 Если запрос select включает в себя группирования данных или выбрать подмножество свойств из типа, указанного в <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> свойства <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> свойство содержит динамически созданный тип объекта. В противном случае <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> свойство содержит объект типа, указанного в <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> свойство.  
  
   
  
## Examples  
 В примере показан обработчик событий для <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> событий. В обработчике событий Если <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> свойство `null`, продукта, код извлекается из объекта в <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> свойство. Продукт, идентификатор является первичным ключом для таблицы и задать в базе данных, поэтому значение неизвестно до завершения операции вставки. Сообщение об исключении записывается в том случае, если <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> свойства не равно `null`. <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> Затем свойству `true`.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalRowCount">
      <MemberSignature Language="C#" Value="public int TotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalRowCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TotalRowCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalRowCount : int" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает общее число строк в наборе данных, полученном в результате операции по извлечению данных.</summary>
        <value>Общее число строк в наборе данных, полученном в результате операции по извлечению данных; -1, если объект <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> создан во время операции изменения данных; -1, если вы включили настраиваемое разбиение на страницы, присвоив свойству <see cref="P:System.Web.UI.WebControls.LinqDataSource.AutoPage" /> значение <see langword="true" />, а свойству <see cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" /> — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Использовании <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> свойство, чтобы получить число записей в наборе данных во время операции по извлечению данных. Как правило это свойство извлекается при отображении страниц данных Показать общее число записей.  
  
 Когда на страницы данных, значения <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> свойство может отличаться от фактическое число строк, возвращаемых запросом. Это потому, что запрос возвращает только количество строк, которые необходимы для страницы данных.  
  
 <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> Свойство содержит количество записей из запроса только в том случае, если он вызывается обработчик событий для <xref:System.Web.UI.WebControls.LinqDataSource.Selected> событий. При обращении к свойству из обработчика событий для <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, или <xref:System.Web.UI.WebControls.LinqDataSource.Updated> событий, <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> свойство содержит значение -1.  
  
 Значение <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> свойство зависит от <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> свойство <xref:System.Web.UI.WebControls.LinqDataSource> элемента управления, а затем на `AllowPaging` свойство элемента управления с привязкой к данным. В следующей таблице перечислены возможные значения для <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> свойство.  
  
|Свойство AutoPage элемента управления LinqDataSource|Свойство AllowPaging элемента управления с привязкой данных|Свойство TotalRowCount|Результат|  
|-------------------------------------------------|-------------------------------------------------|----------------------------|-------------|  
|`true`|`true`|Число записей для запроса.|Автоматически разбивается на страницы данных.|  
|`false`|`false`|Число записей для запроса.|Данные не выгружаются.|  
|`true`|`false`|-1|Данные не выгружаются.|  
|`false`|`true`|Значение, которое было назначено <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A> свойство в обработчике событий для <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> событий.|Страницам в соответствии со значениями, указанными при настройке разбиения на страницы.|  
  
   
  
## Examples  
 Пример веб-страницы с <xref:System.Web.UI.WebControls.LinqDataSource> управления <xref:System.Web.UI.WebControls.GridView> элемента управления и <xref:System.Web.UI.WebControls.Literal> элемента управления. <xref:System.Web.UI.WebControls.LinqDataSource> Управления определяет обработчик событий для <xref:System.Web.UI.WebControls.LinqDataSource.Selected> событий.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/vb/Default.aspx#1)]  
  
 В примере показан код для обработчика событий для <xref:System.Web.UI.WebControls.LinqDataSource.Selected> событий. Значение <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> свойства <xref:System.Web.UI.WebControls.Literal> элемента управления.  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/cs/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/vb/Default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>