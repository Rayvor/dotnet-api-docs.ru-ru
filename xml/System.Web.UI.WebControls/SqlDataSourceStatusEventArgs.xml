<Type Name="SqlDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c2661ef590ea0efafcde73efb79d46fc1ac7a916" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69411426" /></Metadata><TypeSignature Language="C#" Value="public class SqlDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type SqlDataSourceStatusEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет данные для события, которое вызывается элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> после выполнения операции с данными.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> Класс <xref:System.Web.UI.WebControls.SqlDataSource.Updated>используется <xref:System.Web.UI.WebControls.SqlDataSource.Selected>в событиях, ,<xref:System.Web.UI.WebControls.SqlDataSource.Inserted> и<xref:System.Web.UI.WebControls.SqlDataSource.Deleted> для передачи сведений о операции базы данных после ее выполнения элементом управления источниками данных. Эти сведения включают число строк, затронутых операцией, <xref:System.Data.Common.DbCommand> объект, который используется источником данных для выполнения операции, и любые возникшие сведения об исключении. <xref:System.Web.UI.WebControls.SqlDataSource.Selected>Добавив делегат обработчика событий для обработки событий <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> , <xref:System.Web.UI.WebControls.SqlDataSource.Updated>или <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> , можно просмотреть эти данные и выполнить дополнительные действия после обработки.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> Элемент управления предоставляет множество событий, которые можно выполнять для работы с базовыми объектами данных в ходе операции с данными. В следующей таблице перечислены события и связанные <xref:System.EventArgs> классы обработчиков событий, а также описаны различные события, которые соответствуют жизненному циклу операции <xref:System.Web.UI.WebControls.SqlDataSource> с данными с помощью элемента управления.  
  
|событие|EventArgs|EventHandler|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selecting>происходит перед извлечением данных.|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, <xref:System.Web.UI.WebControls.SqlDataSource.Updating> ,<xref:System.Web.UI.WebControls.SqlDataSource.Deleting> происходит перед выполнением операции вставки, обновления или удаления.|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated> ,<xref:System.Web.UI.WebControls.SqlDataSource.Deleted> выполняются после завершения операций извлечения, вставки, обновления или удаления данных.|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>|  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> класс для проверки возвращаемого значения и значений выходных параметров, возвращаемых при <xref:System.Web.UI.WebControls.SqlDataSource> использовании элемента управления с хранимой <xref:System.Web.UI.WebControls.GridView> процедурой для заполнения элемента управления. Хранимая процедура выбирает данные, отображаемые в <xref:System.Web.UI.WebControls.GridView>, а также передает другие сведения обратно вызывающему объекту, например целочисленный выходной параметр и возвращаемое значение. Параметры, <xref:System.Web.UI.WebControls.SqlDataSource> используемые хранимой процедурой, содержатся <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> в коллекции и состоят из параметров, которые передают сведения из веб-формы в хранимую процедуру, а также параметры, которые передают сведения обратно в соответствует. Свойству этих параметров присваивается <xref:System.Data.ParameterDirection.Output> значение и <xref:System.Data.ParameterDirection.ReturnValue>. <xref:System.Web.UI.WebControls.Parameter.Direction%2A>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSourceStatusEventArgs (System.Data.Common.DbCommand command, int affectedRows, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbCommand command, int32 affectedRows, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.#ctor(System.Data.Common.DbCommand,System.Int32,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSourceStatusEventArgs(System::Data::Common::DbCommand ^ command, int affectedRows, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSourceStatusEventArgs : System.Data.Common.DbCommand * int * Exception -&gt; System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.SqlDataSourceStatusEventArgs (command, affectedRows, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="command">Объект <see cref="T:System.Data.Common.DbCommand" />, который представляет запрос базы данных, команду или хранимую процедуру, которая отправляется в базу данных элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</param>
        <param name="affectedRows">Количество строк, затронутых операцией с базой данных, если применимо.</param>
        <param name="exception">Исключение <see cref="T:System.Exception" />, которое вызывается операцией с базой данных, если применимо.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> с помощью указанных параметров вывода, возвращаемого значения и количества строк, затронутых операцией с базой данных.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает количество строк, на которые повлияла операция с базой данных.</summary>
        <value>Количество строк, на которые повлияла операция с базой данных. Значение по умолчанию — -1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Все операции возвращают количество строк, затронутых операцией. Свойство имеет то же значение, что и возвращаемое значение <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>методов, <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>и <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>. <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows%2A>  
  
 При вызове <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>методаи установке источника данных в режим возвращается значение 0 во всех случаях. <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ Command { System::Data::Common::DbCommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Data.Common.DbCommand" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает команду базы данных, отправленную в базу данных.</summary>
        <value>Объект <see cref="T:System.Data.Common.DbCommand" />, представляющий команду базы данных, отправленную в базу данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно <xref:System.Web.UI.WebControls.SqlDataSource.Selected>обработать <xref:System.Web.UI.WebControls.SqlDataSource> событие, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> <xref:System.Data.Common.DbCommand> или <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> , чтобы проанализировать и изменить свойства объекта после его отправки элементом управления в базу данных. Свойство позволяет получить доступ к возвращаемым значениям и значениям в любых выходных параметрах после выполнения операции базы данных <xref:System.Data.Common.DbCommand.Parameters%2A> с помощью ее свойства <xref:System.Data.Common.DbCommand.CommandText%2A> , а также свойства, представляющего SQL-запрос, команду или <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command%2A> имя хранимой процедуры, которое было отправлено в базу данных.  
  
 Все выходные <xref:System.Data.ParameterDirection.InputOutput> параметры относятся к параметрам, имеющим значение или <xref:System.Data.ParameterDirection.Output> <xref:System.Web.UI.WebControls.Parameter> для <xref:System.Web.UI.WebControls.Parameter.Direction%2A> свойства объекта. Возвращаемое значение из параметра, имеющего <xref:System.Data.ParameterDirection.ReturnValue> значение.  
  
   
  
## Examples  
 В следующем примере кода показано, как проверить значения выходных параметров при использовании <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления с хранимой процедурой. Коллекция содержит параметры <xref:System.Web.UI.WebControls.SqlDataSource> , используемые для хранимой процедуры, и состоит из параметров, которые передают сведения из веб-формы в хранимую процедуру, а также параметры, которые передают информацию обратно в форму. <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> Этот пример кода является частью большого примера, <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> приведенного для класса.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает программу-оболочку для любых исключений, которые вызываются базой данных во время операции с данными.</summary>
        <value>Объект <see cref="T:System.Exception" />, который создает программу-оболочку для любых исключений, вызываемых базой данной в своем свойстве <see cref="P:System.Exception.InnerException" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Exception> Свойство не представляет фактическое исключение, созданное операцией базы данных. Получить доступ к созданному исключению можно <xref:System.Exception.InnerException%2A> с помощью свойства.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, показывающее, было ли обработано исключение, вызванное базой данных.</summary>
        <value>Значение <see langword="true" />, если исключение, вызванное базой данных, было обработано и не должно вызываться элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" />; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если база данных создает исключение, <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled%2A> свойство устанавливается в `false` значение, а <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception%2A> исключение упаковывается свойством. Если вы используете <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>, можно <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> проверить свойство и обработать исключение. Если вы обрабатываете исключение, задайте <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled%2A> для `true` свойства значение или, <xref:System.Web.UI.WebControls.SqlDataSource> если элемент управления создаст исключение.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>
