<Type Name="FileUpload" FullName="System.Web.UI.WebControls.FileUpload">
  <Metadata><Meta Name="ms.openlocfilehash" Value="29976c50aa2e70e1adcd3ba21e2c26c7b684fa9e" /><Meta Name="ms.sourcegitcommit" Value="634678f7ccd2928c6b2cf792a301b079b63639af" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="07/26/2019" /><Meta Name="ms.locfileid" Value="68542515" /></Metadata><TypeSignature Language="C#" Value="public class FileUpload : System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileUpload extends System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FileUpload" />
  <TypeSignature Language="VB.NET" Value="Public Class FileUpload&#xA;Inherits WebControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileUpload : System::Web::UI::WebControls::WebControl" />
  <TypeSignature Language="F#" Value="type FileUpload = class&#xA;    inherit WebControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("FileBytes")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ValidationProperty("FileName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Отображает элемент управления типа текстового поля и кнопку обзора, позволяя пользователю выбрать файл для загрузки на сервер.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В этом разделе.  
  
-   [Введение](#introduction)  
  
-   [Сохранение отправленных файлов](#saving_uploaded_files)  
  
-   [Вопросы безопасности](#security_considerations)  
  
-   [Ограничения памяти](#memory_limitations)  
  
-   [Использование элемента управления FileUpload с элементом управления UpdatePanel](#using_the_FileUpload_Control_with_the_UpdatePanel_control)  
  
-   [Декларативный синтаксис](#DeclarativeSyntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Вступление  
 <xref:System.Web.UI.WebControls.FileUpload> Класс отображает элемент управления "текстовое поле" и кнопку "Обзор", которая позволяет пользователям выбрать файл на клиенте и передать его на веб-сервер. Пользователь указывает файл для передачи, вводя полный путь к файлу на локальном компьютере (например, **к:\мифилес\тестфиле.ткст**) в текстовом поле элемента управления. Кроме того, пользователь может выбрать файл, нажав кнопку « **Обзор** », а затем находясь в диалоговом окне « **Выбор файла** ».  
  
 Используйте свойство, чтобы получить имя файла на клиенте для передачи с <xref:System.Web.UI.WebControls.FileUpload> помощью элемента управления. <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> Имя файла, возвращаемого этим свойством, не включает путь к файлу на клиенте.  
  
 <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> Свойство<xref:System.IO.Stream> получает объект, указывающий на файл для передачи. Это свойство используется для доступа к содержимому файла в виде байтов. Например, можно использовать <xref:System.IO.Stream> объект, возвращаемый <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> свойством, для чтения содержимого файла в виде байтов и сохранения их в массиве байтов. Кроме того, можно использовать <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> свойство для извлечения всех байтов в файле.  
  
 Свойство получает базовый <xref:System.Web.HttpPostedFile> объект для отправляемого файла. <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> Это свойство можно использовать для доступа к дополнительным свойствам файла. <xref:System.Web.HttpPostedFile.ContentLength%2A> Свойство получает длину файла. <xref:System.Web.HttpPostedFile.ContentType%2A> Свойство возвращает тип MIME содержимого файла. Кроме того <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> , можно использовать свойство для <xref:System.Web.HttpPostedFile.FileName%2A> доступа к свойству, <xref:System.Web.HttpPostedFile.InputStream%2A> свойству и <xref:System.Web.HttpPostedFile.SaveAs%2A> методу. Тем не менее те же функциональные возможности обеспечиваются <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> свойством <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> , свойством и <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> методом.  
  
<a name="saving_uploaded_files"></a>   
## <a name="saving-uploaded-files"></a>Сохранение отправленных файлов  
 <xref:System.Web.UI.WebControls.FileUpload> Элемент управления не сохраняет файл на сервере автоматически после того, как пользователь выберет файл для отправки. Необходимо явно предоставить элемент управления или механизм, чтобы разрешить пользователю отправлять указанный файл. Например, можно указать кнопку, которую пользователь нажимает для отправки файла. Код, который вы пишете для сохранения указанного файла, должен вызывать <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> метод, который сохраняет содержимое файла по указанному пути на сервере. Как правило, <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> метод вызывается в методе обработки событий для события, которое вызывает обратную передачу на сервер. Например, если вы представите кнопку для отправки файла, можно включить код для сохранения файла в методе обработки событий для события щелчка.  
  
 Перед вызовом <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> метода для сохранения файла на сервере <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> используйте <xref:System.Web.UI.WebControls.FileUpload> свойство, чтобы убедиться, что элемент управления содержит файл. <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> Если возвращает `true`, вызовите <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> метод. Если она возвращает `false`, отобразите пользователю сообщение, указывающее, что элемент управления не содержит файл. Не проверяйте <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> свойство, чтобы определить, существует ли файл для отправки, так как по умолчанию это свойство содержит 0 байт. В результате, даже если <xref:System.Web.UI.WebControls.FileUpload> элемент управления пуст <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> , свойство возвращает значение, отличное от NULL.  
  
<a name="security_considerations"></a>   
## <a name="security-considerations"></a>Вопросы безопасности  
 При вызове <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> метода необходимо указать полный путь к каталогу, в котором будет сохранен переданный файл. Если путь не указан явным образом в коде приложения, то при попытке пользователя отправить файл возникает исключение. Такое поведение помогает защитить файлы на сервере, предотвращая возможность записи пользователей в произвольные расположения в структуре каталогов приложения, а также запрета доступа к конфиденциальным корневым каталогам.  
  
 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> Метод записывает отправленный файл в указанный каталог. Таким образом, приложение ASP.NET должно иметь доступ на запись к каталогу на сервере. Существует два способа, которым приложение может получить доступ для записи. Можно явно предоставить доступ на запись для учетной записи, под которой выполняется приложение, в каталоге, в который будут сохранены отправленные файлы. Кроме того, можно увеличить уровень доверия, предоставляемый приложению ASP.NET. Чтобы получить доступ на запись к каталогу, в котором будет выполняться приложение, приложению необходимо предоставить <xref:System.Web.AspNetHostingPermission> объект с уровнем доверия, равным <xref:System.Web.AspNetHostingPermissionLevel.Medium?displayProperty=nameWithType> значению. Увеличение уровня доверия увеличивает доступ приложения к ресурсам на сервере. Обратите внимание, что этот подход не является безопасным, так как злоумышленник, получивший контроль над приложением, также сможет работать с этим уровнем доверия. Рекомендуется запускать приложение ASP.NET в контексте пользователя с минимальными привилегиями, необходимыми для запуска приложения. Дополнительные сведения о безопасности в ASP.NET приложениях см. в разделе [основные рекомендации по безопасности для веб-приложений](https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad) и [ASP.NET уровни доверия и файлы политик](https://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1).  
  
<a name="memory_limitations"></a>   
## <a name="memory-limitations"></a>Ограничения памяти  
 Одним из способов защиты от атак типа «отказ в обслуживании» является ограничение размера файлов, которые могут быть переданы с помощью <xref:System.Web.UI.WebControls.FileUpload> элемента управления. Необходимо задать предельный размер, подходящий для типов файлов, которые предполагается передать. По умолчанию предельный размер составляет 4096 килобайт (КБ) или 4 мегабайта (МБ). Можно разрешить передачу файлов большего размера, задав `maxRequestLength` атрибут элемента [httpRuntime](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) . Чтобы увеличить максимально допустимый размер файла для всего приложения, установите `maxRequestLength` атрибут в файле Web. config. Чтобы увеличить максимально допустимый размер файла для указанной страницы, установите `maxRequestLength` атрибут `location` внутри элемента в файле Web. config. Пример см. в разделе [элемент Location (схема параметров ASP.NET)](https://msdn.microsoft.com/library/922ef7d5-da38-4661-b1c6-5b9e5ceda1d5).  
  
 При отправке больших файлов пользователь может также получить следующее сообщение об ошибке:  
  
 `aspnet_wp.exe (PID: 1520) was recycled because memory consumption exceeded 460 MB (60 percent of available RAM).`  
  
 Если пользователи столкнулись с этим сообщением об ошибке, увеличьте `memoryLimit` значение атрибута в элементе [processModel](https://msdn.microsoft.com/library/4b8fe20e-74c8-4566-b72c-ce5f83c8e32d) элемента файл Web. config для приложения. `memoryLimit` Атрибут задает максимальный объем памяти, который может использовать рабочий процесс. Если рабочий процесс превышает `memoryLimit` сумму, создается новый процесс для его замены, а все текущие запросы перенаправляются новому процессу.  
  
 Чтобы управлять тем, будет ли файл для отправки временно храниться в памяти или на сервере во время обработки запроса, установите `requestLengthDiskThreshold` атрибут элемента [httpRuntime](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) . Этот атрибут позволяет управлять размером буфера входного потока. Значение по умолчанию — 256 байт. Указанное значение не должно превышать значение, указанное для `maxRequestLength` атрибута.  
  
<a name="using_the_FileUpload_Control_with_the_UpdatePanel_control"></a>   
## <a name="using-the-fileupload-control-with-the-updatepanel-control"></a>Использование элемента управления FileUpload с элементом управления UpdatePanel  
 Этот <xref:System.Web.UI.WebControls.FileUpload> элемент управления предназначен для использования только в сценариях обратной передачи, а не в сценариях асинхронной обратной передачи при частичной отрисовке страницы. При использовании <xref:System.Web.UI.WebControls.FileUpload> элемента управления <xref:System.Web.UI.UpdatePanel> внутри элемента управления файл должен быть передан с помощью элемента управления, который является <xref:System.Web.UI.PostBackTrigger> объектом для панели. <xref:System.Web.UI.UpdatePanel>элементы управления используются для обновления выбранных областей страницы вместо обновления всей страницы с помощью обратной передачи. Дополнительные сведения см. в разделе [Общие сведения об элементе управления UpdatePanel](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) и [Общие сведения о частичной отрисовке страниц](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a>Декларативный синтаксис  
  
```  
<asp:FileUpload  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CssClass="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
/>  
```  
  
   
  
## Examples  
 Для этого раздела доступен проект веб-сайта Visual Studio с исходным кодом: [Скачайте](https://go.microsoft.com/fwlink/?LinkId=191897).  
  
 Этот раздел содержит следующие четыре примера.  
  
-   В первом примере показано, как создать <xref:System.Web.UI.WebControls.FileUpload> элемент управления, сохраняющий файлы по пути, указанному в коде.  
  
-   Во втором примере показано, как создать <xref:System.Web.UI.WebControls.FileUpload> элемент управления, сохраняющий файлы в указанном каталоге в файловой системе для приложения.  
  
-   В третьем примере показано, как создать <xref:System.Web.UI.WebControls.FileUpload> элемент управления, сохраняющий файлы по указанному пути и ограничивающий размер файла, который может быть передан.  
  
-   В четвертом примере показано, как создать <xref:System.Web.UI.WebControls.FileUpload> элемент управления, сохраняющий файлы по указанному пути и допускающий передачу только файлов с расширениями doc или xls.  
  
> [!CAUTION]
>  В этих примерах демонстрируется базовый синтаксис <xref:System.Web.UI.WebControls.FileUpload> для элемента управления, но они не демонстрируют всю необходимую проверку на наличие ошибок, которая должна быть завершена перед сохранением файла. Более полный пример содержится в разделе <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>.  
  
 В следующем примере показано, как создать <xref:System.Web.UI.WebControls.FileUpload> элемент управления, сохраняющий файлы по пути, указанному в коде. <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> Метод вызывается для сохранения файла по указанному пути на сервере.  
  
 [!code-aspx-csharp[FileUploadClass1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass1/cs/fileuploadclass1cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass1/VB/fileuploadclass1vb.aspx#1)]  
  
 В следующем примере показано, как создать <xref:System.Web.UI.WebControls.FileUpload> элемент управления, сохраняющий файлы в указанном каталоге в файловой системе для приложения. <xref:System.Web.HttpRequest.PhysicalApplicationPath%2A?displayProperty=nameWithType> Свойство используется для получения физического пути файловой системы корневого каталога для выполняющегося серверного приложения. <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> Метод вызывается для сохранения файла по указанному пути на сервере.  
  
 [!code-aspx-csharp[FileUploadClass2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass2/cs/fileuploadclass2cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass2/VB/fileuploadclass2vb.aspx#1)]  
  
 В следующем примере показано, как создать <xref:System.Web.UI.WebControls.FileUpload> элемент управления, сохраняющий файлы по пути, указанному в коде. Элемент управления ограничивает размер файла, который можно передать в 2 МБ. Свойство используется для доступа к базовому <xref:System.Web.HttpPostedFile.ContentLength%2A> свойству и возврата размера файла. <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> Если размер загружаемого файла меньше 2 МБ, <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> вызывается метод для сохранения файла по указанному пути на сервере. Помимо проверки максимального размера файла в коде приложения, можно задать `maxRequestLength` для атрибута элемента [httpRuntime](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) максимально допустимый размер в файле конфигурации для приложения.  
  
 [!code-aspx-csharp[FileUploadClass3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass3/cs/fileuploadclass3cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass3/VB/fileuploadclass3vb.aspx#1)]  
  
 В следующем примере показано, как создать <xref:System.Web.UI.WebControls.FileUpload> элемент управления, сохраняющий файлы по пути, указанному в коде. В этом примере можно передать только файлы с расширениями doc или xls. <xref:System.IO.Path.GetExtension%2A?displayProperty=nameWithType> Метод вызывается для возврата расширения файла для передачи. Если файл имеет расширение DOC или xls, <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> вызывается метод для сохранения файла по указанному пути на сервере.  
  
 [!code-aspx-csharp[FileUploadClass4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass4/cs/fileuploadclass4cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass4/VB/fileuploadclass4vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileUpload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileUpload();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.FileUpload" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте конструктор для инициализации нового экземпляра <xref:System.Web.UI.WebControls.FileUpload> класса. <xref:System.Web.UI.WebControls.FileUpload.%23ctor%2A> <xref:System.Web.UI.WebControls.FileUpload> Элемент управления не сохраняет файл на сервере автоматически после того, как пользователь выберет файл для отправки. Необходимо явно предоставить элемент управления или механизм, чтобы разрешить пользователю отправлять указанный файл. Например, можно указать кнопку, которую пользователь нажимает для отправки файла.  
  
   
  
## Examples  
 В следующем примере показано, как инициализировать новый экземпляр <xref:System.Web.UI.WebControls.FileUpload> класса. Обратите внимание, что этот пример демонстрирует синтаксис конструктора, но не добавляет функциональные возможности в элемент управления после его создания.  
  
 Этот пример является частью большого примера, <xref:System.Web.UI.WebControls.FileUpload> приведенного для класса.  
  
 [!code-aspx-vb[FileUploadCstr#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadCstr/VB/fileuploadcstrvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="fileUpload.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, представляющий выходной поток для отрисовки HTML-содержимого на стороне клиента.</param>
        <summary>Добавляет атрибуты и стили HTML элемента управления <see cref="T:System.Web.UI.WebControls.FileUpload" />, которые должны быть отображены в указанном объекте <see cref="T:System.Web.UI.HtmlTextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод в основном используется разработчиками элементов управления для вставки соответствующих атрибутов и стилей <xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType> в выходной поток для <xref:System.Web.UI.WebControls.FileUpload> элемента управления. <xref:System.Web.UI.WebControls.FileUpload.AddAttributesToRender%2A> <xref:System.Web.UI.WebControls.FileUpload.AddAttributesToRender%2A> Метод переопределяет метод. <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AllowMultiple">
      <MemberSignature Language="C#" Value="public virtual bool AllowMultiple { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMultiple" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.AllowMultiple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowMultiple { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowMultiple : bool with get, set" Usage="System.Web.UI.WebControls.FileUpload.AllowMultiple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, может ли для отправки быть выбрано несколько файлов.</summary>
        <value>Значение <see langword="true" />, если можно выбрать несколько файлов; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileBytes">
      <MemberSignature Language="C#" Value="public byte[] FileBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] FileBytes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.FileBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileBytes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ FileBytes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileBytes : byte[]" Usage="System.Web.UI.WebControls.FileUpload.FileBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает массив байт всего указанного файла, используя элемент управления <see cref="T:System.Web.UI.WebControls.FileUpload" />.</summary>
        <value>Массив <see cref="T:System.Byte" />, который все содержимое указанного файла.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload> Элемент управления не считывает файл автоматически из клиента. Необходимо явно предоставить элемент управления или механизм, чтобы разрешить пользователю отправлять указанный файл. Например, можно указать кнопку, которую пользователь может щелкнуть для отправки файла. Код, который вы пишете для сохранения указанного файла, может вызвать <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> свойство, которое возвращает содержимое файла.  
  
 Перед вызовом <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> свойства следует <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> использовать <xref:System.Web.UI.WebControls.FileUpload> свойство, чтобы убедиться, что элемент управления содержит файл для передачи. <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> Если возвращает `true`, вызовите <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> свойство. Если она возвращает `false`, отобразите пользователю сообщение, указывающее, что элемент управления не содержит файл. Если не предоставить код обработки ошибок для проверки существования файла, попытка сохранить несуществующий файл вызовет <xref:System.Web.HttpException> исключение.  
  
   
  
## Examples  
 В следующем примере показано, как создать <xref:System.Web.UI.WebControls.FileUpload> элемент управления. Когда пользователь нажимает кнопку **отправить файл** , содержимое файла отображается как байты в текстовом поле на странице. В этом примере используется <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> свойство для передачи всего файла.  
  
 [!code-aspx-csharp[FileUploadFileBytes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadFileBytes/CS/FileUploadFileBytesCS.aspx#1)]
 [!code-aspx-vb[FileUploadFileBytes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadFileBytes/VB/FileUploadFileBytesVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Весь файл не был прочитан.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FileUpload.HasFile" />
      </Docs>
    </Member>
    <Member MemberName="FileContent">
      <MemberSignature Language="C#" Value="public System.IO.Stream FileContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream FileContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.FileContent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileContent As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ FileContent { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileContent : System.IO.Stream" Usage="System.Web.UI.WebControls.FileUpload.FileContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.IO.Stream" />, указывающий на файл для загрузки, используя элемент управления <see cref="T:System.Web.UI.WebControls.FileUpload" />.</summary>
        <value><see cref="T:System.IO.Stream" />, указывающий на файл для загрузки, используя <see cref="T:System.Web.UI.WebControls.FileUpload" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство получает объект, указывающий на файл <xref:System.Web.UI.WebControls.FileUpload> для передачи с помощью элемента управления. <xref:System.IO.Stream> <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> Используйте свойство для доступа к содержимому файла. Например, можно использовать <xref:System.IO.Stream> объект, возвращаемый этим свойством, для считывания содержимого файла в виде байтов и сохранения их в массиве байтов.  
  
   
  
## Examples  
 В следующем примере показано, как создать <xref:System.Web.UI.WebControls.FileUpload> элемент управления. <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> Свойство используется для считывания содержимого файла в массив байтов. Когда пользователь нажимает кнопку **отправить файл** , содержимое файла отображается как байты в текстовом поле на странице.  
  
 [!code-aspx-csharp[FileUpload.FileContent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.FileContent/cs/fileupload.filecontentcs.aspx#1)]
 [!code-aspx-vb[FileUpload.FileContent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.FileContent/VB/fileupload.filecontentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileName : string" Usage="System.Web.UI.WebControls.FileUpload.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает имя файла на компьютере клиента, используя элемент управления <see cref="T:System.Web.UI.WebControls.FileUpload" />.</summary>
        <value>Строка, содержащая имя файла на компьютере клиента для отправки с помощью <see cref="T:System.Web.UI.WebControls.FileUpload" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращает имя файла на компьютере клиента, используя элемент управления <xref:System.Web.UI.WebControls.FileUpload>. Имя файла, возвращаемого <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> свойством, не включает путь к файлу на клиенте.  
  
   
  
## Examples  
 В следующем примере показано, как создать <xref:System.Web.UI.WebControls.FileUpload> элемент управления, сохраняющий файлы по пути, указанному в коде. <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> Свойство используется для получения имени файла для отправки. <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> Метод вызывается для сохранения файла по указанному пути на сервере, используя то же имя, что и файл на клиенте. Обратите внимание, что этот пример демонстрирует базовый синтаксис для этого элемента управления, но не показывает все необходимые проверки ошибок, которые следует выполнить перед сохранением файла. Более полный пример содержится в разделе <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>.  
  
 [!code-aspx-csharp[FileUploadClass1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass1/cs/fileuploadclass1cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass1/VB/fileuploadclass1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasFile">
      <MemberSignature Language="C#" Value="public bool HasFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.HasFile" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasFile As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasFile { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasFile : bool" Usage="System.Web.UI.WebControls.FileUpload.HasFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, определяющее наличие файла у элемента управления <see cref="T:System.Web.UI.WebControls.FileUpload" />.</summary>
        <value>Значение <see langword="true" />, если <see cref="T:System.Web.UI.WebControls.FileUpload" /> содержит файл; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство получает значение, указывающее, содержит <xref:System.Web.UI.WebControls.FileUpload> ли элемент управления файл для передачи. <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> Используйте это свойство, чтобы убедиться, что файл для отправки существует перед выполнением операций с файлом. Например, перед вызовом <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> метода для сохранения файла на диск <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> используйте свойство, чтобы убедиться, что файл существует. Если <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> возвращает `true`, вызовите метод. Если она возвращает `false`, отобразите пользователю сообщение, указывающее, что элемент управления не содержит файл.  
  
   
  
## Examples  
 В следующем примере показано, как создать <xref:System.Web.UI.WebControls.FileUpload> элемент управления, выполняющий проверку ошибок. Перед сохранением файла <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> вызывается метод для проверки того, что элемент управления содержит файл для передачи. Кроме того, <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> метод вызывается для проверки того, существует ли в пути файл с таким же именем. Если это так, перед <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> вызовом метода имя файла для передачи начинается с символа подчеркивания. Это предотвращает перезапись существующего файла.  
  
 [!code-aspx-csharp[FileUpload.SaveAs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.SaveAs/cs/fileupload.saveascs.aspx#1)]
 [!code-aspx-vb[FileUpload.SaveAs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.SaveAs/VB/fileupload.saveasvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasFiles">
      <MemberSignature Language="C#" Value="public bool HasFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFiles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.HasFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasFiles { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasFiles : bool" Usage="System.Web.UI.WebControls.FileUpload.HasFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, которое указывает, были ли загружены файлы.</summary>
        <value>Значение <see langword="true" />, если были отправлены какие-либо файлы; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод также возвращает `false` значение, если загружается пустой файл (0 байт).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="fileUpload.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.EventArgs" />, содержащий данные о событии.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.Control.PreRender" /> элемента управления <see cref="T:System.Web.UI.WebControls.FileUpload" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод уведомляет <xref:System.Web.UI.WebControls.FileUpload> элемент управления о выполнении необходимых действий предварительной подготовки перед сохранением состояния представления и отрисовки содержимого. <xref:System.Web.UI.WebControls.FileUpload.OnPreRender%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostedFile">
      <MemberSignature Language="C#" Value="public System.Web.HttpPostedFile PostedFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpPostedFile PostedFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.PostedFile" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PostedFile As HttpPostedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpPostedFile ^ PostedFile { System::Web::HttpPostedFile ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PostedFile : System.Web.HttpPostedFile" Usage="System.Web.UI.WebControls.FileUpload.PostedFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpPostedFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает основной объект <see cref="T:System.Web.HttpPostedFile" /> для загружаемого файла для загрузки, используя элемент управления <see cref="T:System.Web.UI.WebControls.FileUpload" />.</summary>
        <value><see cref="T:System.Web.HttpPostedFile" /> для загружаемого файла, используя <see cref="T:System.Web.UI.WebControls.FileUpload" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство получает базовый <xref:System.Web.HttpPostedFile> объект для файла, который отправляется с помощью <xref:System.Web.UI.WebControls.FileUpload> элемента управления. <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> Это свойство используется для доступа к дополнительным свойствам отправленного файла.  
  
 Чтобы получить длину файла <xref:System.Web.HttpPostedFile.ContentLength%2A> , можно использовать свойство. Для получения типа содержимого <xref:System.Web.HttpPostedFile.ContentType%2A> MIME файла можно использовать свойство. Кроме того <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> , можно использовать свойство для <xref:System.Web.HttpPostedFile.FileName%2A> доступа к свойству, <xref:System.Web.HttpPostedFile.InputStream%2A> свойству и <xref:System.Web.HttpPostedFile.SaveAs%2A> методу. Тем не менее те же функциональные возможности обеспечиваются <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> свойством <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> , свойством и <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> методом.  
  
   
  
## Examples  
 В следующем примере показано, как создать <xref:System.Web.UI.WebControls.FileUpload> элемент управления. Когда пользователь нажимает кнопку **отправить файл** , содержимое файла отображается как байты в текстовом поле на странице. В этом примере для <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> <xref:System.Web.HttpPostedFile.ContentLength%2A?displayProperty=nameWithType> доступа к свойству используется свойство. <xref:System.Web.HttpPostedFile.ContentLength%2A> Свойство используется для определения длины файла перед копированием содержимого файла в массив байтов.  
  
 [!code-aspx-csharp[FileUpload.FileContent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.FileContent/cs/fileupload.filecontentcs.aspx#1)]
 [!code-aspx-vb[FileUpload.FileContent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.FileContent/VB/fileupload.filecontentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpPostedFile" />
      </Docs>
    </Member>
    <Member MemberName="PostedFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Web.HttpPostedFile&gt; PostedFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Web.HttpPostedFile&gt; PostedFiles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.PostedFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PostedFiles As IList(Of HttpPostedFile)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Web::HttpPostedFile ^&gt; ^ PostedFiles { System::Collections::Generic::IList&lt;System::Web::HttpPostedFile ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PostedFiles : System.Collections.Generic.IList&lt;System.Web.HttpPostedFile&gt;" Usage="System.Web.UI.WebControls.FileUpload.PostedFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Web.HttpPostedFile&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию отправленных файлов.</summary>
        <value>Коллекция отправленных файлов.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="fileUpload.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, получающий содержимое элемента управления <see cref="T:System.Web.UI.WebControls.FileUpload" />.</param>
        <summary>Отправляет содержимое элемента управления <see cref="T:System.Web.UI.WebControls.FileUpload" /> указанному объекту <see cref="T:System.Web.UI.HtmlTextWriter" />, который записывает содержимое для отрисовки в клиенте.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод отправляет содержимое элементауправления<xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType> в указанный объект, который записывает содержимое для отрисовки на клиенте. <xref:System.Web.UI.WebControls.FileUpload> <xref:System.Web.UI.WebControls.FileUpload.Render%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAs(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="member this.SaveAs : string -&gt; unit" Usage="fileUpload.SaveAs filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Строка, указывающая полный путь к каталогу на сервере, в котором следует сохранить загружаемый файл.</param>
        <summary>Сохраняет содержимое загруженного файла по указанному пути на веб-сервере.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> Метод сохраняет содержимое отправленного файла по указанному пути на веб-сервере.  
  
 <xref:System.Web.UI.WebControls.FileUpload> Элемент управления не сохраняет файл на сервере автоматически после того, как пользователь выберет файл для отправки. Необходимо явно предоставить элемент управления или механизм, чтобы разрешить пользователю отправлять указанный файл. Например, можно указать кнопку, которую пользователь нажимает для отправки файла. Код, который вы пишете для сохранения указанного файла, должен вызывать <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> метод, который сохраняет содержимое файла по указанному пути на сервере. Как правило, <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> метод вызывается в методе обработки событий для события, которое вызывает обратную передачу на сервер. Например, если вы представите кнопку для отправки файла, код для сохранения файла на сервере может быть добавлен в метод обработки событий для события щелчка.  
  
 При вызове <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> метода необходимо указать полный путь к каталогу на сервере, в котором будет сохранен отправленный файл. Если путь не указан явным образом в коде приложения, <xref:System.Web.HttpException> то при попытке пользователя отправить файл возникает исключение. Такое поведение помогает обеспечить безопасность файлов на сервере, не позволяя пользователям указывать путь, в котором будут сохраняться отправляемые им файлы.  
  
 Перед вызовом <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> метода следует <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> использовать <xref:System.Web.UI.WebControls.FileUpload> свойство, чтобы убедиться, что элемент управления содержит файл для передачи. <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> Если возвращает `true`, вызовите <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> метод. Если она возвращает `false`, отобразите пользователю сообщение, указывающее, что элемент управления не содержит файл. Если не предоставить код обработки ошибок для проверки существования файла, попытка сохранить несуществующий файл вызовет <xref:System.Web.HttpException> исключение.  
  
 Чтобы вызвать <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> метод для работы, приложение ASP.NET должно иметь доступ на запись к каталогу на сервере. Существует два способа, которым приложение может получить доступ для записи. Можно явно предоставить доступ на запись для учетной записи, под которой выполняется приложение, в каталоге, в который будут сохранены отправленные файлы. Кроме того, можно увеличить уровень доверия, предоставляемый приложению ASP.NET. Чтобы получить доступ на запись к каталогу, в котором будет выполняться приложение, приложению необходимо предоставить <xref:System.Web.AspNetHostingPermission> объект с уровнем доверия, равным <xref:System.Web.AspNetHostingPermissionLevel.Medium?displayProperty=nameWithType> значению. Увеличение уровня доверия увеличивает доступ приложения к ресурсам на сервере. Обратите внимание, что этот подход не является безопасным, так как злоумышленник, получивший контроль над приложением, также сможет работать с этим уровнем доверия. Рекомендуется запускать приложение ASP.NET в контексте пользователя, имеющего минимальные права доступа, необходимые для запуска приложения. Дополнительные сведения о безопасности в ASP.NET приложениях см. в разделе [основные рекомендации по безопасности для веб-приложений](https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad) и [ASP.NET уровни доверия и файлы политик](https://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1).  
  
   
  
## Examples  
 В следующем примере показано, как создать <xref:System.Web.UI.WebControls.FileUpload> элемент управления, выполняющий проверку ошибок. Перед сохранением <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> файла вызывается метод, чтобы убедиться, что файл для отправки существует. Кроме того, <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> метод вызывается для проверки того, существует ли в пути файл с таким же именем. Если это так, имя файла для передачи имеет префикс перед <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> вызовом метода. Это предотвращает перезапись существующего файла.  
  
 [!code-aspx-csharp[FileUpload.SaveAs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.SaveAs/cs/fileupload.saveascs.aspx#1)]
 [!code-aspx-vb[FileUpload.SaveAs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.SaveAs/VB/fileupload.saveasvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><paramref name="filename" /> не является полным путем.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FileUpload.HasFile" />
        <related type="Article" href="https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad">Основные методы обеспечения безопасности для веб-приложений</related>
      </Docs>
    </Member>
  </Members>
</Type>