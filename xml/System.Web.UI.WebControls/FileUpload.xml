<Type Name="FileUpload" FullName="System.Web.UI.WebControls.FileUpload">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b34526078954ce8a27eb4f014ca28ff482e69f99" /><Meta Name="ms.sourcegitcommit" Value="9a6da88bd5455e8274257ca7ad259b42f1de114f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/22/2019" /><Meta Name="ms.locfileid" Value="66005949" /></Metadata><TypeSignature Language="C#" Value="public class FileUpload : System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileUpload extends System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FileUpload" />
  <TypeSignature Language="VB.NET" Value="Public Class FileUpload&#xA;Inherits WebControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileUpload : System::Web::UI::WebControls::WebControl" />
  <TypeSignature Language="F#" Value="type FileUpload = class&#xA;    inherit WebControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("FileBytes")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ValidationProperty("FileName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Отображает элемент управления типа текстового поля и кнопку обзора, позволяя пользователю выбрать файл для загрузки на сервер.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Содержание раздела  
  
-   [Введение](#introduction)  
  
-   [Сохранение переданных файлов](#saving_uploaded_files)  
  
-   [Вопросы безопасности](#security_considerations)  
  
-   [Ограничения оперативной памяти](#memory_limitations)  
  
-   [С помощью элемента управления FileUpload с элементом управления UpdatePanel](#using_the_FileUpload_Control_with_the_UpdatePanel_control)  
  
-   [Декларативный синтаксис](#DeclarativeSyntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Вступление  
 <xref:System.Web.UI.WebControls.FileUpload> Класс отображает элемент управления текстовым полем и кнопку обзора, позволяя пользователю выбрать файл на стороне клиента и отправьте его на веб-сервер. Пользователь указывает файл для загрузки, введя полный путь к файлу на локальном компьютере (например, **C:\MyFiles\TestFile.txt**) в текстовом поле элемента управления. Кроме того, пользователь может выбрать файл, нажав кнопку **Обзор** кнопку, а затем найдите его в **выбрать файл** диалоговое окно.  
  
 Используйте <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> свойство, чтобы получить имя файла на компьютере клиента для отправки с помощью <xref:System.Web.UI.WebControls.FileUpload> элемента управления. Это свойство возвращает имя файла не включает путь к файлу на клиентском компьютере.  
  
 <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> Свойство получает <xref:System.IO.Stream> объект, который указывает файл для отправки. Это свойство используется для доступа к содержимому файла в байтах. Например, можно использовать <xref:System.IO.Stream> объект, возвращаемый <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> свойство для чтения содержимое файла в виде байт и хранить их в массив байтов. Кроме того, можно использовать <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> свойство для извлечения всех байтов в файле.  
  
 <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> Получает базовое <xref:System.Web.HttpPostedFile> объект для отправляемого файла. Это свойство можно использовать для доступа к дополнительным свойствам файла. <xref:System.Web.HttpPostedFile.ContentLength%2A> Свойство получает длину файла. <xref:System.Web.HttpPostedFile.ContentType%2A> Свойство возвращает тип содержимого MIME файла. Кроме того, можно использовать <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> свойство для доступа к <xref:System.Web.HttpPostedFile.FileName%2A> свойство, <xref:System.Web.HttpPostedFile.InputStream%2A> свойство и <xref:System.Web.HttpPostedFile.SaveAs%2A> метод. Тем не менее, те же функциональные возможности обеспечивается <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> свойство, <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> свойство и <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> метод.  
  
<a name="saving_uploaded_files"></a>   
## <a name="saving-uploaded-files"></a>Сохранение переданных файлов  
 <xref:System.Web.UI.WebControls.FileUpload> Элемент управления не сохраняет автоматически файл на сервер после того как пользователь выберет файл для передачи. Необходимо явно предоставить элемент управления или механизм, позволяющий пользователю отправить указанный файл. Например дает кнопка, пользователь нажимает кнопку для отправки файла. Код, который пишется для сохранить указанный файл должен вызывать <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> метод, который сохраняет содержимое файла по указанному пути на сервере. Как правило <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> вызывается метод в метод обработки событий для события, которое вызывает отправку на сервер. Например если предоставлена кнопка для передачи файла, можно включить код для сохранения файла внутри метода обработки событий для события щелчка.  
  
 Перед вызовом <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> метод, чтобы сохранить файл на сервер, используйте <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> свойство, чтобы убедиться, что <xref:System.Web.UI.WebControls.FileUpload> элемент управления содержит файл. Если <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> возвращает `true`, вызовите <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> метод. Если он возвращает `false`, выводит сообщение для пользователя, указывая, что элемент управления не содержит файл. Не устанавливайте флажок <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> существует свойство, чтобы определить, является ли файл для передачи, так как по умолчанию это свойство содержит 0 байт. Таким образом, даже если <xref:System.Web.UI.WebControls.FileUpload> элемент управления является пустым, <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> свойство возвращает ненулевое значение.  
  
<a name="security_considerations"></a>   
## <a name="security-considerations"></a>Вопросы безопасности  
 При вызове <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> метода, необходимо указать полный путь к каталогу, в котором следует сохранить отправленный файл. Если путь не указан явно в коде приложения, исключение при попытке загрузить файл. Это помогает защитить файлы на сервере, запретив пользователям возможность записи к произвольным областям в структуре каталогов приложения, а также для предотвращения доступа к конфиденциальным корневые каталоги.  
  
 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> Метод записывает загруженный файл в указанный каталог. Таким образом в приложении ASP.NET, необходим доступ на запись к каталогу на сервере. Существует два способа, что приложение может получить доступ на запись. Можно явно предоставить доступ на запись в учетную запись, под которой выполняется приложение, в каталоге, в котором будет сохранен переданные файлы. Кроме того можно увеличить уровень доверия, предоставляемый приложению ASP.NET. Чтобы получить доступ на запись в каталог выполнения для приложения, приложения должны быть предоставлены <xref:System.Web.AspNetHostingPermission> объекта с уровнем доверия, равным <xref:System.Web.AspNetHostingPermissionLevel.Medium?displayProperty=nameWithType> значение. При увеличении уровня доверия приложения доступ к ресурсам на сервере. Обратите внимание, что это не безопасный подход, поскольку пользователь-злоумышленник, получивший контроль над приложением, также смогут запускаться повышенный уровень доверия. Это лучший способ запуска приложения ASP.NET в контексте пользователя с минимальными правами доступа, которые требуются для запуска приложения. Дополнительные сведения о безопасности в приложениях ASP.NET, см. в разделе [основные рекомендации по обеспечению безопасности для веб-приложений](https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad) и [уровни доверия в ASP.NET и файлы политики](https://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1).  
  
<a name="memory_limitations"></a>   
## <a name="memory-limitations"></a>Ограничения оперативной памяти  
 Один из способов защиты к отказу в обслуживании атак — ограничить размер файлов, которые могут быть загружены с помощью <xref:System.Web.UI.WebControls.FileUpload> элемента управления. Необходимо задать ограничение размера, которое подходит для типов файлов, которые вы планируете отправить. Максимальный размер по умолчанию — 4096 килобайт (КБ) или 4 мегабайта (МБ). Вы можете разрешить большего размера файлов для отправки, задав `maxRequestLength` атрибут [httpRuntime](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) элемент. Чтобы увеличить максимальный допустимый размер файла для всего приложения, задайте `maxRequestLength` атрибута в файле Web.config. Чтобы увеличить максимальный допустимый размер файла для указанной страницы, задайте `maxRequestLength` атрибут внутри `location` элемент в файле Web.config. Например, см. в разделе [расположение элемента (схема параметров ASP.NET)](https://msdn.microsoft.com/library/922ef7d5-da38-4661-b1c6-5b9e5ceda1d5).  
  
 При передаче больших файлов, пользователь может также получить следующее сообщение об ошибке:  
  
 `aspnet_wp.exe (PID: 1520) was recycled because memory consumption exceeded 460 MB (60 percent of available RAM).`  
  
 Если ваши пользователи сталкиваются это сообщение об ошибке, увеличьте значение параметра `memoryLimit` атрибут в [processModel](https://msdn.microsoft.com/library/4b8fe20e-74c8-4566-b72c-ce5f83c8e32d) элемента файла Web.config, файл для приложения. `memoryLimit` Атрибут задает максимальный объем памяти, который можно использовать рабочий процесс. Если рабочий процесс превышает `memoryLimit` сумма, вместо него создается новый процесс и все текущие запросы переназначаются в новый процесс.  
  
 Для управления хранятся в памяти или на сервере при обработке запроса, задать файл для загрузки, является ли временно `requestLengthDiskThreshold` атрибут [httpRuntime](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) элемент. Этот атрибут позволяет управлять размером буфера входного потока. Значение по умолчанию — 256 байт. Значение не должно превышать значение, указываемое для `maxRequestLength` атрибута.  
  
<a name="using_the_FileUpload_Control_with_the_UpdatePanel_control"></a>   
## <a name="using-the-fileupload-control-with-the-updatepanel-control"></a>С помощью элемента управления FileUpload с элементом управления UpdatePanel  
 <xref:System.Web.UI.WebControls.FileUpload> Элемент управления предназначен для использования только в скриптах обратной передачи, а не в скриптах асинхронной обратной передачи во время частичной отрисовки страницы. При использовании <xref:System.Web.UI.WebControls.FileUpload> управления внутри <xref:System.Web.UI.UpdatePanel> элемента управления, с помощью элемента управления, необходимо отправить файл <xref:System.Web.UI.PostBackTrigger> для панели. <xref:System.Web.UI.UpdatePanel> элементы управления используются для обновления выбранных областей страницы вместо обновления всей страницы с помощью обратной передачи. Дополнительные сведения см. в разделе [Обзор элемента управления UpdatePanel](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) и [Общие сведения об отрисовке частичных страниц](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a>Декларативный синтаксис  
  
```  
<asp:FileUpload  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CssClass="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
/>  
```  
  
   
  
## Examples  
 Проект Visual Studio Web сайта с исходным кодом доступен на следующей странице в этом разделе: [Скачайте](https://go.microsoft.com/fwlink/?LinkId=191897).  
  
 Этот раздел содержит следующие четыре примера:  
  
-   Первый пример демонстрирует создание <xref:System.Web.UI.WebControls.FileUpload> элемент управления, который сохраняет файлы в расположении, указанном в коде.  
  
-   Во втором примере показано, как создать <xref:System.Web.UI.WebControls.FileUpload> элемент управления, который сохраняет файлы в указанном каталоге в файловой системе для приложения.  
  
-   Третий пример демонстрирует создание <xref:System.Web.UI.WebControls.FileUpload> элемент управления, который сохраняет файлы по указанному пути и ограничивает размер файла, который можно отправить.  
  
-   В четвертом примере демонстрируется создание <xref:System.Web.UI.WebControls.FileUpload> элемент управления, который сохраняет файлы по указанному пути и разрешает только файлы, которые имеют расширения имени файла DOC или xls для отправки.  
  
> [!CAUTION]
>  Эти примеры демонстрируют базовый синтаксис для <xref:System.Web.UI.WebControls.FileUpload> элемента управления, но они не отражают все необходимые проверки ошибок, должно быть завершено до сохранения файла. Более полный пример содержится в разделе <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>.  
  
 Следующий пример демонстрирует создание <xref:System.Web.UI.WebControls.FileUpload> элемент управления, который сохраняет файлы в расположении, указанном в коде. <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> Вызывается метод, чтобы сохранить файл по указанному пути на сервере.  
  
 [!code-aspx-csharp[FileUploadClass1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass1/cs/fileuploadclass1cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass1/VB/fileuploadclass1vb.aspx#1)]  
  
 Следующий пример демонстрирует создание <xref:System.Web.UI.WebControls.FileUpload> элемент управления, который сохраняет файлы в указанном каталоге в файловой системе для приложения. <xref:System.Web.HttpRequest.PhysicalApplicationPath%2A?displayProperty=nameWithType> Свойство позволяет получить физический путь корневого каталога для выполняющемуся серверному приложению. <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> Вызывается метод, чтобы сохранить файл по указанному пути на сервере.  
  
 [!code-aspx-csharp[FileUploadClass2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass2/cs/fileuploadclass2cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass2/VB/fileuploadclass2vb.aspx#1)]  
  
 Следующий пример демонстрирует создание <xref:System.Web.UI.WebControls.FileUpload> элемент управления, который сохраняет файлы в расположении, указанном в коде. Элемент управления ограничивает размер файла, который можно отправить в 5 МБ. <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> Свойство используется для доступа к базовой <xref:System.Web.HttpPostedFile.ContentLength%2A> свойства и возвращаемые размер файла. Если размер отправляемого файла меньше 2 МБ, <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> вызывается метод, чтобы сохранить файл по указанному пути на сервере. В дополнение к проверке для максимального размера, заданного в коде приложения, можно задать `maxRequestLength` атрибут [httpRuntime](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) элемент максимально допустимый размер в файле конфигурации приложения.  
  
 [!code-aspx-csharp[FileUploadClass3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass3/cs/fileuploadclass3cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass3/VB/fileuploadclass3vb.aspx#1)]  
  
 Следующий пример демонстрирует создание <xref:System.Web.UI.WebControls.FileUpload> элемент управления, который сохраняет файлы в расположении, указанном в коде. В этом примере разрешает только файлы, которые имеют расширения имени файла DOC или xls для отправки. <xref:System.IO.Path.GetExtension%2A?displayProperty=nameWithType> Метод вызывается для возвращения расширение файла для отправки. Если файл с расширением .doc или XLS-файл, <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> вызывается метод, чтобы сохранить файл по указанному пути на сервере.  
  
 [!code-aspx-csharp[FileUploadClass4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass4/cs/fileuploadclass4cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass4/VB/fileuploadclass4vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileUpload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileUpload();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.FileUpload" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FileUpload.%23ctor%2A> конструктор для инициализации нового экземпляра <xref:System.Web.UI.WebControls.FileUpload> класса. <xref:System.Web.UI.WebControls.FileUpload> Элемент управления не сохраняет автоматически файл на сервер после того как пользователь выберет файл для передачи. Необходимо явно предоставить элемент управления или механизм, позволяющий пользователю отправить указанный файл. Например дает кнопка, пользователь нажимает кнопку для отправки файла.  
  
   
  
## Examples  
 Следующий пример демонстрирует, как инициализировать новый экземпляр класса <xref:System.Web.UI.WebControls.FileUpload> класса. Обратите внимание, что в этом примере показан синтаксис конструктора, но не добавляет функциональные возможности элемента управления после его создания.  
  
 Этот пример является частью большего примера для <xref:System.Web.UI.WebControls.FileUpload> класса.  
  
 [!code-aspx-vb[FileUploadCstr#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadCstr/VB/fileuploadcstrvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="fileUpload.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, представляющий выходной поток для отрисовки HTML-содержимого на стороне клиента.</param>
        <summary>Добавляет атрибуты и стили HTML элемента управления <see cref="T:System.Web.UI.WebControls.FileUpload" />, которые должны быть отображены в указанном объекте <see cref="T:System.Web.UI.HtmlTextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload.AddAttributesToRender%2A> Метод в основном используется разработчиками элементов управления для вставки соответствующие атрибуты и стили в <xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType> выходной поток для <xref:System.Web.UI.WebControls.FileUpload> элемента управления. <xref:System.Web.UI.WebControls.FileUpload.AddAttributesToRender%2A> Переопределения методов <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A?displayProperty=nameWithType> метод.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AllowMultiple">
      <MemberSignature Language="C#" Value="public virtual bool AllowMultiple { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMultiple" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.AllowMultiple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowMultiple { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowMultiple : bool with get, set" Usage="System.Web.UI.WebControls.FileUpload.AllowMultiple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, может ли для отправки быть выбрано несколько файлов.</summary>
        <value>Значение <see langword="true" />, если можно выбрать несколько файлов; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileBytes">
      <MemberSignature Language="C#" Value="public byte[] FileBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] FileBytes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.FileBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileBytes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ FileBytes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileBytes : byte[]" Usage="System.Web.UI.WebControls.FileUpload.FileBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает массив байт всего указанного файла, используя элемент управления <see cref="T:System.Web.UI.WebControls.FileUpload" />.</summary>
        <value>Массив <see cref="T:System.Byte" />, который все содержимое указанного файла.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload> Управления автоматически не прочитать файл от клиента. Необходимо явно предоставить элемент управления или механизм, позволяющий пользователю отправить указанный файл. Например дает кнопка, пользователь может щелкнуть для отправки файла. Код, написанный для сохранения в указанный файл может вызывать <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> свойство, которое возвращает содержимое файла.  
  
 Перед вызовом <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> свойства, следует использовать <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> свойство, чтобы убедиться, что <xref:System.Web.UI.WebControls.FileUpload> элемент управления содержит файл для передачи. Если <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> возвращает `true`, вызовите <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> свойство. Если он возвращает `false`, выводит сообщение для пользователя, указывая, что элемент управления не содержит файл. Если вы не предоставите код обработки ошибок, чтобы убедиться, что файл существует, при попытке сохранить несуществующего файла создается <xref:System.Web.HttpException> исключение.  
  
   
  
## Examples  
 Следующий пример демонстрирует создание <xref:System.Web.UI.WebControls.FileUpload> элемента управления. Когда пользователь щелкает **передайте файл** отображается кнопка, содержимое файла в байтах в текстовом поле на странице. В этом примере используется <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> свойства для передачи всего файла.  
  
 [!code-aspx-csharp[FileUploadFileBytes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadFileBytes/CS/FileUploadFileBytesCS.aspx#1)]
 [!code-aspx-vb[FileUploadFileBytes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadFileBytes/VB/FileUploadFileBytesVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Весь файл не был прочитан.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FileUpload.HasFile" />
      </Docs>
    </Member>
    <Member MemberName="FileContent">
      <MemberSignature Language="C#" Value="public System.IO.Stream FileContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream FileContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.FileContent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileContent As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ FileContent { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileContent : System.IO.Stream" Usage="System.Web.UI.WebControls.FileUpload.FileContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.IO.Stream" />, указывающий на файл для загрузки, используя элемент управления <see cref="T:System.Web.UI.WebControls.FileUpload" />.</summary>
        <value><see cref="T:System.IO.Stream" />, указывающий на файл для загрузки, используя <see cref="T:System.Web.UI.WebControls.FileUpload" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> Свойство получает <xref:System.IO.Stream> объект, указывающий на файл для передачи с помощью <xref:System.Web.UI.WebControls.FileUpload> элемента управления. Используйте <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> свойство для доступа к содержимому файла. Например, можно использовать <xref:System.IO.Stream> объект, возвращаемый этим свойством для чтения содержимое файла в виде байт и хранить их в массив байтов.  
  
   
  
## Examples  
 Следующий пример демонстрирует создание <xref:System.Web.UI.WebControls.FileUpload> элемента управления. <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> Свойство используется для считывания содержимого файла в массив байтов. Когда пользователь щелкает **передайте файл** отображается кнопка, содержимое файла в байтах в текстовом поле на странице.  
  
 [!code-aspx-csharp[FileUpload.FileContent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.FileContent/cs/fileupload.filecontentcs.aspx#1)]
 [!code-aspx-vb[FileUpload.FileContent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.FileContent/VB/fileupload.filecontentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileName : string" Usage="System.Web.UI.WebControls.FileUpload.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает имя файла на компьютере клиента, используя элемент управления <see cref="T:System.Web.UI.WebControls.FileUpload" />.</summary>
        <value>Строка, содержащая имя файла на компьютере клиента для отправки с помощью <see cref="T:System.Web.UI.WebControls.FileUpload" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращает имя файла на компьютере клиента, используя элемент управления <xref:System.Web.UI.WebControls.FileUpload>. Имя файла, <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> свойство возвращает не включает путь к файлу на клиентском компьютере.  
  
   
  
## Examples  
 Следующий пример демонстрирует создание <xref:System.Web.UI.WebControls.FileUpload> элемент управления, который сохраняет файлы в расположении, указанном в коде. <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> Свойство используется для получения имени файла для отправки. <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> Вызывается метод, чтобы сохранить файл по указанному пути на сервере, используя то же имя имеет файл на стороне клиента. Обратите внимание, что в этом примере показан основной синтаксис для этого элемента управления, но не демонстрирует все необходимые проверки ошибок, это нужно сделать перед сохранением файла. Более полный пример содержится в разделе <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>.  
  
 [!code-aspx-csharp[FileUploadClass1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass1/cs/fileuploadclass1cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass1/VB/fileuploadclass1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasFile">
      <MemberSignature Language="C#" Value="public bool HasFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.HasFile" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasFile As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasFile { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasFile : bool" Usage="System.Web.UI.WebControls.FileUpload.HasFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, определяющее наличие файла у элемента управления <see cref="T:System.Web.UI.WebControls.FileUpload" />.</summary>
        <value>Значение <see langword="true" />, если <see cref="T:System.Web.UI.WebControls.FileUpload" /> содержит файл; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> Свойство получает значение, указывающее, является ли <xref:System.Web.UI.WebControls.FileUpload> элемент управления содержит файл для передачи. Это свойство используется, чтобы убедиться, что файл для передачи существует перед выполнением операции с файлом. Например, перед вызовом <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> метод для сохранения файла на диск, используйте <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> свойство, чтобы убедиться, что файл существует. Если <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> возвращает `true`, вызовите <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> метод. Если он возвращает `false`, выводит сообщение для пользователя, указывая, что элемент управления не содержит файл.  
  
   
  
## Examples  
 Следующий пример демонстрирует создание <xref:System.Web.UI.WebControls.FileUpload> элемент управления, который выполняет проверку ошибок. Перед сохранением файла, <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> вызывается метод, чтобы убедиться, что элемент управления содержит файл для передачи. Кроме того <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> вызывается метод, чтобы проверить, происходит ли уже файл с тем же именем в пути. В этом случае имя файла, отправляемого с префиксом с символом подчеркивания перед <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> вызывается метод. Это предотвращает перезапись существующего файла.  
  
 [!code-aspx-csharp[FileUpload.SaveAs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.SaveAs/cs/fileupload.saveascs.aspx#1)]
 [!code-aspx-vb[FileUpload.SaveAs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.SaveAs/VB/fileupload.saveasvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasFiles">
      <MemberSignature Language="C#" Value="public bool HasFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFiles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.HasFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasFiles { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasFiles : bool" Usage="System.Web.UI.WebControls.FileUpload.HasFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, которое указывает, были ли загружены файлы.</summary>
        <value>Значение <see langword="true" />, если были отправлены какие-либо файлы; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод также возвращает `false` Если передан пустой файл (нулю).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="fileUpload.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.EventArgs" />, содержащий данные о событии.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.Control.PreRender" /> элемента управления <see cref="T:System.Web.UI.WebControls.FileUpload" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload.OnPreRender%2A> Метод уведомляет <xref:System.Web.UI.WebControls.FileUpload> управления выполнить все необходимые действия предвизуализации перед сохранением состояния представления и отрисовки содержимого.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostedFile">
      <MemberSignature Language="C#" Value="public System.Web.HttpPostedFile PostedFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpPostedFile PostedFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.PostedFile" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PostedFile As HttpPostedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpPostedFile ^ PostedFile { System::Web::HttpPostedFile ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PostedFile : System.Web.HttpPostedFile" Usage="System.Web.UI.WebControls.FileUpload.PostedFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpPostedFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает основной объект <see cref="T:System.Web.HttpPostedFile" /> для загружаемого файла для загрузки, используя элемент управления <see cref="T:System.Web.UI.WebControls.FileUpload" />.</summary>
        <value><see cref="T:System.Web.HttpPostedFile" /> для загружаемого файла, используя <see cref="T:System.Web.UI.WebControls.FileUpload" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> Получает базовое <xref:System.Web.HttpPostedFile> объекта для файла, который будет загружен с использованием <xref:System.Web.UI.WebControls.FileUpload> элемента управления. Это свойство используется для доступа к дополнительным свойствам загружаемого файла.  
  
 Можно использовать <xref:System.Web.HttpPostedFile.ContentLength%2A> свойство для получения длины файла. Можно использовать <xref:System.Web.HttpPostedFile.ContentType%2A> свойство для получения MIME содержимого тип файла. Кроме того, можно использовать <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> свойство для доступа к <xref:System.Web.HttpPostedFile.FileName%2A> свойство, <xref:System.Web.HttpPostedFile.InputStream%2A> свойство и <xref:System.Web.HttpPostedFile.SaveAs%2A> метод. Тем не менее, те же функциональные возможности обеспечивается <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> свойство, <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> свойство и <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> метод.  
  
   
  
## Examples  
 Следующий пример демонстрирует создание <xref:System.Web.UI.WebControls.FileUpload> элемента управления. Когда пользователь щелкает **передайте файл** отображается кнопка, содержимое файла в байтах в текстовом поле на странице. В этом примере используется <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> свойство для доступа к <xref:System.Web.HttpPostedFile.ContentLength%2A?displayProperty=nameWithType> свойство. <xref:System.Web.HttpPostedFile.ContentLength%2A> Свойство используется для определения длины файла перед копированием содержимое файла в массив байтов.  
  
 [!code-aspx-csharp[FileUpload.FileContent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.FileContent/cs/fileupload.filecontentcs.aspx#1)]
 [!code-aspx-vb[FileUpload.FileContent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.FileContent/VB/fileupload.filecontentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpPostedFile" />
      </Docs>
    </Member>
    <Member MemberName="PostedFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Web.HttpPostedFile&gt; PostedFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Web.HttpPostedFile&gt; PostedFiles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.PostedFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PostedFiles As IList(Of HttpPostedFile)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Web::HttpPostedFile ^&gt; ^ PostedFiles { System::Collections::Generic::IList&lt;System::Web::HttpPostedFile ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PostedFiles : System.Collections.Generic.IList&lt;System.Web.HttpPostedFile&gt;" Usage="System.Web.UI.WebControls.FileUpload.PostedFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Web.HttpPostedFile&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию отправленных файлов.</summary>
        <value>Коллекция отправленных файлов.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="fileUpload.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, получающий содержимое элемента управления <see cref="T:System.Web.UI.WebControls.FileUpload" />.</param>
        <summary>Отправляет содержимое элемента управления <see cref="T:System.Web.UI.WebControls.FileUpload" /> указанному объекту <see cref="T:System.Web.UI.HtmlTextWriter" />, который записывает содержимое для отрисовки в клиенте.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload.Render%2A> Метод отправляет <xref:System.Web.UI.WebControls.FileUpload> содержимое указанного элемента управления <xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType> объекту, который записывает содержимое для отрисовки на стороне клиента.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAs(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="member this.SaveAs : string -&gt; unit" Usage="fileUpload.SaveAs filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Строка, указывающая полный путь к каталогу на сервере, в котором следует сохранить загружаемый файл.</param>
        <summary>Сохраняет содержимое загруженного файла по указанному пути на веб-сервере.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> Метод сохраняет содержимое отправленного файла по указанному пути на веб-сервере.  
  
 <xref:System.Web.UI.WebControls.FileUpload> Элемент управления не сохраняет автоматически файл на сервер после того как пользователь выберет файл для передачи. Необходимо явно предоставить элемент управления или механизм, позволяющий пользователю отправить указанный файл. Например дает кнопка, пользователь нажимает кнопку для отправки файла. Код, который пишется для сохранить указанный файл должен вызывать <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> метод, который сохраняет содержимое файла по указанному пути на сервере. Как правило <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> вызывается метод в метод обработки событий для события, которое вызывает отправку на сервер. Например если кнопки для отправки файла, код для сохранения файла на сервер можно также включить внутри метода обработки событий для события щелчка.  
  
 При вызове <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> метода, необходимо указать полный путь к каталогу на сервере, в котором следует сохранить отправленный файл. Если вы явно не укажете путь в коде приложения <xref:System.Web.HttpException> исключение при попытке загрузить файл. Это поведение помогает защитить файлы на сервере, не давая пользователям указать путь для сохранения файлов, которые они отправляют.  
  
 Перед вызовом <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> метод, следует использовать <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> свойство, чтобы убедиться, что <xref:System.Web.UI.WebControls.FileUpload> элемент управления содержит файл для передачи. Если <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> возвращает `true`, вызовите <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> метод. Если он возвращает `false`, выводит сообщение для пользователя, указывая, что элемент управления не содержит файл. Если вы не предоставите код обработки ошибок, чтобы убедиться, что файл существует, при попытке сохранить несуществующего файла создается <xref:System.Web.HttpException> исключение.  
  
 Для вызова <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> для работы в приложении ASP.NET необходим доступ на запись к каталогу на сервере. Существует два способа, что приложение может получить доступ на запись. Можно явно предоставить доступ на запись в учетную запись, под которой выполняется приложение, в каталоге, в котором будет сохранен переданные файлы. Кроме того можно увеличить уровень доверия, предоставляемый приложению ASP.NET. Чтобы получить доступ на запись в каталог выполнения для приложения, приложения должны быть предоставлены <xref:System.Web.AspNetHostingPermission> объекта с уровнем доверия, равным <xref:System.Web.AspNetHostingPermissionLevel.Medium?displayProperty=nameWithType> значение. При увеличении уровня доверия приложения доступ к ресурсам на сервере. Обратите внимание, что это не безопасный подход, поскольку пользователь-злоумышленник, получивший контроль над приложением, также смогут запускаться повышенный уровень доверия. Это лучший способ запуска приложения ASP.NET в контексте пользователя, имеющего минимальные права, необходимые для запуска приложения. Дополнительные сведения о безопасности в приложениях ASP.NET, см. в разделе [основные рекомендации по обеспечению безопасности для веб-приложений](https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad) и [уровни доверия в ASP.NET и файлы политики](https://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1).  
  
   
  
## Examples  
 Следующий пример демонстрирует создание <xref:System.Web.UI.WebControls.FileUpload> элемент управления, который выполняет проверку ошибок. Перед сохранением файла <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> вызывается метод, чтобы убедиться, что существует файл для передачи. Кроме того <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> вызывается метод, чтобы проверить, существует ли файл с тем же именем уже в пути. В этом случае имя файла, отправляемого указывается перед <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> вызывается метод. Это предотвращает перезапись существующего файла.  
  
 [!code-aspx-csharp[FileUpload.SaveAs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.SaveAs/cs/fileupload.saveascs.aspx#1)]
 [!code-aspx-vb[FileUpload.SaveAs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.SaveAs/VB/fileupload.saveasvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><paramref name="filename" /> не является полным путем.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FileUpload.HasFile" />
        <related type="Article" href="https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad">Базовые методики безопасности для веб-приложений</related>
      </Docs>
    </Member>
  </Members>
</Type>