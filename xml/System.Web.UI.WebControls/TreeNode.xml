<Type Name="TreeNode" FullName="System.Web.UI.WebControls.TreeNode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="58a611834e472e9062a01bc597fe6593cf47a2fd" /><Meta Name="ms.sourcegitcommit" Value="9058026d5788c19bed0a767fc52b40a1eac8ebfe" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/24/2019" /><Meta Name="ms.locfileid" Value="72847918" /></Metadata><TypeSignature Language="C#" Value="public class TreeNode : ICloneable, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TreeNode extends System.Object implements class System.ICloneable, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeNode" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeNode&#xA;Implements ICloneable, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeNode : ICloneable, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type TreeNode = class&#xA;    interface IStateManager&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "ChildNodes")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет узел в элементе управления <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Элемент управления <xref:System.Web.UI.WebControls.TreeView> состоит из узлов. Каждая запись в дереве называется узлом и представляется объектом <xref:System.Web.UI.WebControls.TreeNode>. Узел, содержащий другие узлы, называется *родительским узлом*. Узел, содержащийся в другом узле, называется *дочерним узлом*. Узел, который не имеет дочерних узлов, называется *конечным узлом*. Узел, который не содержится ни в одном другом узле, но является предком всех остальных узлов, является *корневым узлом*. Узел может быть одновременно родительским и дочерним, но корневой, родительский и конечный узлы являются взаимоисключающими. Некоторые визуальные и свойства поведения узлов определяются тем, является ли узел *корневым*, *родительским*или *конечным* узлом.  
  
 Хотя типичное дерево имеет только один корневой узел, элемент управления <xref:System.Web.UI.WebControls.TreeView> позволяет добавлять в древовидную структуру несколько корневых узлов. Это полезно, если нужно отобразить вхождения элементов без отображения одного основного корневого узла, как в списке категорий продуктов.  
  
 Узел в основном хранит данные в двух свойствах: <xref:System.Web.UI.WebControls.TreeNode.Text%2A> свойстве и свойстве <xref:System.Web.UI.WebControls.TreeNode.Value%2A>. Значение свойства <xref:System.Web.UI.WebControls.TreeNode.Text%2A> отображается в элементе управления <xref:System.Web.UI.WebControls.TreeView>, а свойство <xref:System.Web.UI.WebControls.TreeNode.Value%2A> используется для хранения дополнительных данных об узле, например данных, используемых для обработки событий обратной передачи. Узел также хранит путь от узла к его корневому узлу в свойстве <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>. Свойство <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> указывает расположение узла относительно корневого узла.  
  
> [!NOTE]
>  Узлы на одном уровне должны иметь уникальное значение для свойства <xref:System.Web.UI.WebControls.TreeNode.Value%2A>; элемент управления "<xref:System.Web.UI.WebControls.TreeView>" не может отличать разные узлы на одном уровне с одинаковым значением. В этом сценарии, если пользователь щелкает узел, имеющий повторяющееся значение, выбирается узел, который отображается первым в элементе управления <xref:System.Web.UI.WebControls.TreeView>.  
  
 Объект <xref:System.Web.UI.WebControls.TreeNode> состоит из следующих четырех элементов пользовательского интерфейса, которые могут быть настроены или скрыты:  
  
-   Значок-индикатор расширения узла, используемый для отображения развернутого, свернутого или неразвертываемого узла.  
  
-   Необязательный флажок, связанный с узлом.  
  
-   Необязательный образ узла.  
  
-   Текст узла.  
  
 Можно указать пользовательский образ для развертываемых, свертываемых и неразвертываемых индикаторов узлов, задав свойства <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>и <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> класса <xref:System.Web.UI.WebControls.TreeView>. Значки индикаторов узла расширения можно даже скрыть полностью, задав для свойства <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> класса <xref:System.Web.UI.WebControls.TreeView> значение `false`.  
  
 Чтобы отобразить флажок рядом с узлом, задайте свойство <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> класса <xref:System.Web.UI.WebControls.TreeView>. Если для свойства <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> задано значение, отличное от `TreeNodeType.Node`, флажки отображаются рядом с указанным типом узла. Можно выборочно переопределить флажок отдельного узла, задав свойство <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> узла. Когда появится флажок, используйте свойство <xref:System.Web.UI.WebControls.TreeNode.Checked%2A>, чтобы определить, установлен ли флажок.  
  
 Изображение можно отобразить в узле, задав свойство <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>. Это изображение отображается рядом с текстом узла.  
  
 Текст узла в элементе управления <xref:System.Web.UI.WebControls.TreeView> может находиться в одном из двух режимов: режим выделения или режим навигации. По умолчанию узел находится в режиме выбора. Чтобы перевести узел в режим навигации, задайте для свойства <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> узла значение, отличное от пустой строки (""). Чтобы перевести узел в режим выбора, задайте для свойства <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> узла пустую строку.  
  
> [!NOTE]
>  Некоторые Интернет-браузеры имеют ограничение, которое может повлиять на производительность элемента управления <xref:System.Web.UI.WebControls.TreeView>. Например, Microsoft Internet Explorer 6,0 имеет ограничение по URL-адресу, равное 2067 символам, которые он отправляет. Если число символов в URL-адресе узла превышает это число, расширение узла завершится ошибкой и исключение не будет создано.  
  
 По умолчанию щелчок узла в режиме выбора отправляет страницу обратно на сервер и вызывает событие <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>. При необходимости можно указать другое событие для вызова, задав свойство `SelectAction` узла. Для получения дополнительной информации см. <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>. Чтобы определить, какой узел был выбран в режиме выбора, используйте свойство <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> элемента управления <xref:System.Web.UI.WebControls.TreeView>.  
  
 Когда узел находится в режиме навигации, все события выбора для этого узла отключаются. Если щелкнуть узел в режиме навигации, пользователь направляет его на указанный URL-адрес. При необходимости можно задать свойство <xref:System.Web.UI.WebControls.TreeNode.Target%2A>, чтобы указать окно или кадр, в котором будет отображаться связанное содержимое.  
  
 Класс <xref:System.Web.UI.WebControls.TreeNode> содержит несколько свойств, которые используются для хранения состояния узла. Используйте свойство <xref:System.Web.UI.WebControls.TreeNode.Selected%2A>, чтобы определить, выбран ли узел. Чтобы определить, развернут ли узел, используйте свойство <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>. Свойство <xref:System.Web.UI.WebControls.TreeNode.DataBound%2A> используется для определения, привязан ли узел к данным. Если узел привязан к данным, доступ к базовому элементу данных можно получить с помощью свойства <xref:System.Web.UI.WebControls.TreeNode.DataItem%2A>.  
  
 Класс предоставляет несколько свойств, помогающих определить расположение узла относительно других узлов дерева. Чтобы определить глубину узла, используйте свойство <xref:System.Web.UI.WebControls.TreeNode.Depth%2A>. Список узлов с разделителями из текущего узла в корневой узел можно получить с помощью свойства <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>. Чтобы определить родительский узел узла, используйте свойство <xref:System.Web.UI.WebControls.TreeNode.Parent%2A>. Доступ к дочерним узлам осуществляется с помощью коллекции <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>.  
  
 Иногда нецелесообразно статически определить древовидную структуру из-за размера данных или пользовательского содержимого, которое зависит от пользовательского ввода. По этой причине элемент управления <xref:System.Web.UI.WebControls.TreeView> поддерживает динамическое заполнение узла. Узел может быть заполнен во время выполнения, когда он развернут. Обратите внимание, что при сохранении асинхронно созданных узлов может возникать непредвиденное поведение. Например, если для асинхронного заполнения узлов используется фоновый рабочий поток, дерево узлов может не быть заполнено немедленно, хотя элемент управления переходит к остальной части жизненного цикла страницы. При обратной передаче, отложенное создание узлов может вызвать проблемы при загрузке состояния представления элемента управления, если дерево узлов не заполнено полностью.  Дополнительные сведения о динамическом заполнении узлов см. в описании свойства <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>.  
  
 Список начальных значений свойств для экземпляра <xref:System.Web.UI.WebControls.TreeNode> см. в разделе Конструктор <xref:System.Web.UI.WebControls.TreeNode.%23ctor%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как настроить кадры для следующего примера кода.  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 В следующем примере кода показано, как использовать декларативный синтаксис для создания <xref:System.Web.UI.WebControls.TreeNode> объектов в элементе управления <xref:System.Web.UI.WebControls.TreeView>. Этот пример используется в наборе рамок предыдущего примера для вывода оглавления.  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.Parent" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.TreeNode" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.TreeNode" /> без текста или значения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот конструктор для инициализации нового экземпляра класса <xref:System.Web.UI.WebControls.TreeNode>, используя значения по умолчанию.  
  
> [!NOTE]
>  При использовании этого конструктора все свойства в объекте <xref:System.Web.UI.WebControls.TreeNode> устанавливаются в значения по умолчанию. После создания объекта обязательно задайте необходимые свойства.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать этот конструктор для динамического добавления узла в элемент управления <xref:System.Web.UI.WebControls.TreeView>.  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : string -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Текст, отображаемый для узла в элементе управления <see cref="T:System.Web.UI.WebControls.TreeView" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.TreeNode" /> с помощью указанного текста.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот конструктор для инициализации нового экземпляра класса <xref:System.Web.UI.WebControls.TreeNode>, используя текст, заданный параметром `text`.  
  
 В следующей таблице показано начальное значение свойства для экземпляра <xref:System.Web.UI.WebControls.TreeNode>.  
  
|Свойство.|Исходное значение|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|Значение параметра `text`.|  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать этот конструктор для динамического добавления узла в элемент управления <xref:System.Web.UI.WebControls.TreeView>.  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : string * string -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode (text, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Текст, отображаемый для узла в элементе управления <see cref="T:System.Web.UI.WebControls.TreeView" />.</param>
        <param name="value">Дополнительные данные об узле, как данные, используемые для обработки событий обратной передачи.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.TreeNode" />, используя указанные текст и значение.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот конструктор для инициализации нового экземпляра класса <xref:System.Web.UI.WebControls.TreeNode>, используя текст и значение, заданные параметрами `text` и `value` соответственно.  
  
 В следующей таблице показаны начальные значения свойств для экземпляра <xref:System.Web.UI.WebControls.TreeNode>.  
  
|Свойство.|Исходное значение|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|Значение параметра `text`.|  
|<xref:System.Web.UI.WebControls.TreeNode.Value%2A>|Значение параметра `value`.|  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать этот конструктор для динамического добавления узла в элемент управления <xref:System.Web.UI.WebControls.TreeView>.  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal TreeNode (System.Web.UI.WebControls.TreeView owner, bool isRoot);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.TreeView owner, bool isRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.Web.UI.WebControls.TreeView,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (owner As TreeView, isRoot As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; TreeNode(System::Web::UI::WebControls::TreeView ^ owner, bool isRoot);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : System.Web.UI.WebControls.TreeView * bool -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode (owner, isRoot)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.TreeView" />
        <Parameter Name="isRoot" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="owner">Объект <see cref="T:System.Web.UI.WebControls.TreeView" />, который содержит новый <see cref="T:System.Web.UI.WebControls.TreeNode" />.</param>
        <param name="isRoot"><see langword="true" />, если <see cref="T:System.Web.UI.WebControls.TreeNode" /> является корневым узлом; в противном случае — <see langword="false" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.TreeNode" /> с помощью указанного владельца.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeTypes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, string value, string imageUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value, string imageUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String, imageUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, System::String ^ value, System::String ^ imageUrl);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : string * string * string -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode (text, value, imageUrl)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="imageUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Текст, отображаемый для узла в элементе управления <see cref="T:System.Web.UI.WebControls.TreeView" />.</param>
        <param name="value">Дополнительные данные об узле, как данные, используемые для обработки событий обратной передачи.</param>
        <param name="imageUrl">URL-адрес изображения для отображения рядом с текстом узла.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.TreeNode" />, используя указанные текст, значение и URL-адрес изображения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот конструктор для инициализации нового экземпляра класса <xref:System.Web.UI.WebControls.TreeNode>, используя текст, значение и URL-адрес изображения, заданные параметрами `text`, `value`и `imageUrl` соответственно.  
  
 В следующей таблице показаны начальные значения свойств для экземпляра <xref:System.Web.UI.WebControls.TreeNode>.  
  
|Свойство.|Исходное значение|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|Значение параметра `text`.|  
|<xref:System.Web.UI.WebControls.TreeNode.Value%2A>|Значение параметра `value`.|  
|<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>|Значение параметра `imageUrl`.|  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать этот конструктор для динамического добавления узла в элемент управления <xref:System.Web.UI.WebControls.TreeView>.  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, string value, string imageUrl, string navigateUrl, string target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value, string imageUrl, string navigateUrl, string target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String, imageUrl As String, navigateUrl As String, target As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, System::String ^ value, System::String ^ imageUrl, System::String ^ navigateUrl, System::String ^ target);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : string * string * string * string * string -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode (text, value, imageUrl, navigateUrl, target)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="imageUrl" Type="System.String" />
        <Parameter Name="navigateUrl" Type="System.String" />
        <Parameter Name="target" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Текст, отображаемый для узла в элементе управления <see cref="T:System.Web.UI.WebControls.TreeView" />.</param>
        <param name="value">Дополнительные данные об узле, как данные, используемые для обработки событий обратной передачи.</param>
        <param name="imageUrl">URL-адрес изображения для отображения рядом с текстом узла.</param>
        <param name="navigateUrl">URL-адрес для перемещения при щелчке по узлу.</param>
        <param name="target">Целевое окно или фрейм, для отображения содержимого веб-страницы, на которую осуществляется переход при щелчке по узлу.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.TreeNode" />, используя указанные текст, значение, URL-адрес изображения, URL-адрес навигации и цель.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот конструктор для инициализации нового экземпляра класса <xref:System.Web.UI.WebControls.TreeNode>, используя URL-адреса текста, значения, изображения и навигации, а также конечный объект, заданный параметрами `text`, `value`, `imageUrl`, `navigateUrl`и `target` соответственно.  
  
 В следующей таблице показаны начальные значения свойств для экземпляра <xref:System.Web.UI.WebControls.TreeNode>.  
  
|Свойство.|Исходное значение|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|Значение параметра `text`.|  
|<xref:System.Web.UI.WebControls.TreeNode.Value%2A>|Значение параметра `value`.|  
|<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>|Значение параметра `imageUrl`.|  
|<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>|Значение параметра `navigateUrl`.|  
|<xref:System.Web.UI.WebControls.TreeNode.Target%2A>|Значение параметра `target`.|  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать этот конструктор для динамического добавления узла в элемент управления <xref:System.Web.UI.WebControls.TreeView>.  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Checked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Checked : bool with get, set" Usage="System.Web.UI.WebControls.TreeNode.Checked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, выбран ли флаг узла.</summary>
        <value>Значение <see langword="true" />, если флаг узла установлен; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда узел отображает флажок, свойство <xref:System.Web.UI.WebControls.TreeNode.Checked%2A> обычно используется, чтобы указать, установлен ли флажок. Если установлен флажок, связанный с узлом, узел автоматически добавляется в коллекцию <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> элемента управления <xref:System.Web.UI.WebControls.TreeView>. Свойство <xref:System.Web.UI.WebControls.TreeNode.Checked%2A> также может использоваться для определения того, установлен ли флажок.  
  
> [!NOTE]
>  Чаще всего для определения того, какие узлы в элементе управления <xref:System.Web.UI.WebControls.TreeView> установлены флажки, выполняется перебор коллекции <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>.  
  
 Значение этого свойства хранится в состоянии представления.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.UI.WebControls.TreeNode.Checked%2A>, чтобы указать, установлен ли флажок узла. Он инициализирует флажки для узлов с глубиной одного в выбранном состоянии. Чтобы этот пример работал правильно, необходимо скопировать приведенный ниже образец XML-данных в файл с именем "Группа новостей. XML".  
  
 [!code-aspx-csharp[TreeNodeChecked#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeChecked/CS/treenodecheckedcs.aspx#1)]
 [!code-aspx-vb[TreeNodeChecked#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeChecked/VB/treenodecheckedvb.aspx#1)]  
  
 Следующий код представляет собой образец XML-данных для предыдущего примера.  
  
```  
<category name="news.microsoft.com">  
    <group name="microsoft.public.dotnet.framework.aspnet"/>  
    <group name="microsoft.public.dotnet.framework.aspnet.mobile"/>  
    <group name="microsoft.public.dotnet.framework.aspnet.webservices"/>  
</category>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
      </Docs>
    </Member>
    <Member MemberName="ChildNodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection ChildNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection ChildNodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildNodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeCollection ^ ChildNodes { System::Web::UI::WebControls::TreeNodeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildNodes : System.Web.UI.WebControls.TreeNodeCollection" Usage="System.Web.UI.WebControls.TreeNode.ChildNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />, содержащую дочерние узлы первого уровня для данного узла.</summary>
        <value><see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />, содержащая дочерние узлы первого уровня для данного узла.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>, чтобы получить коллекцию <xref:System.Web.UI.WebControls.TreeNodeCollection>, содержащую дочерние узлы первого уровня текущего узла. Эта коллекция обычно используется для перебора всех дочерних узлов первого уровня или для доступа к конкретному дочернему узлу первого уровня текущего узла.  
  
 Свойство <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> также может использоваться для программного управления дочерними узлами первого уровня в текущем узле. В коллекцию можно добавлять, вставлять, удалять и получать <xref:System.Web.UI.WebControls.TreeNode> объекты. Любые обновления коллекции будут автоматически отражены в элементе управления <xref:System.Web.UI.WebControls.TreeView> при следующем обновлении страницы.  
  
 Чтобы получить доступ к дочерним узлам на более низких уровнях дерева, используйте свойство <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> дочернего узла следующего уровня для перемещения по уровням узла.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> для прохода по дереву.  
  
 [!code-aspx-csharp[TreeNodeCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCount/CS/treenodecollectioncountcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCount/VB/treenodecollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Parent" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="treeNode.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает новый экземпляр класса <see cref="T:System.Web.UI.WebControls.TreeNode" /> со свойствами для текущего экземпляра <see cref="T:System.Web.UI.WebControls.TreeNode" />.</summary>
        <returns>Новый экземпляр <see cref="T:System.Web.UI.WebControls.TreeNode" /> со свойствами для текущего экземпляра <see cref="T:System.Web.UI.WebControls.TreeNode" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это вспомогательный метод, который поддерживает интерфейс <xref:System.ICloneable>, реализованный <xref:System.Web.UI.WebControls.TreeNode>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ICloneable" />
      </Docs>
    </Member>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public void Collapse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Collapse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.Collapse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Collapse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Collapse();" />
      <MemberSignature Language="F#" Value="member this.Collapse : unit -&gt; unit" Usage="treeNode.Collapse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сворачивает текущий узел дерева.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A> для удобного сворачивания текущего узла.  
  
> [!NOTE]
>  В качестве альтернативы можно также задать для свойства <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> значение `false`.  
  
 Чтобы свернуть текущий узел и все его дочерние узлы, рассмотрите возможность использования метода <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A>.  
  
 <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A> будет сворачивать все узлы во всем дереве.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A> для программного сворачивания узла в элементе управления <xref:System.Web.UI.WebControls.TreeView>. Для правильной работы этого примера необходимо скопировать приведенный ниже образец XML-данных в файл с именем Book. XML.  
  
 [!code-aspx-csharp[TreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpand/CS/treenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpand/VB/treenodeexpandvb.aspx#1)]  
  
 Следующий код представляет собой образец XML-данных для предыдущего примера.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="CollapseAll">
      <MemberSignature Language="C#" Value="public void CollapseAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CollapseAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub CollapseAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CollapseAll();" />
      <MemberSignature Language="F#" Value="member this.CollapseAll : unit -&gt; unit" Usage="treeNode.CollapseAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сворачивает текущий узел и все его дочерние узлы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A> для удобного свертывания текущего узла и всех его дочерних узлов.  
  
> [!NOTE]
>  В качестве альтернативы можно также задать для свойства <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> текущего узла и всех его дочерних узлов значение `false`.  
  
 Чтобы свернуть только текущий узел, рассмотрите возможность использования метода <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A>.  
  
 <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A> будет сворачивать все узлы во всем дереве.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A> для программного сворачивания узла и всех его дочерних узлов в элементе управления <xref:System.Web.UI.WebControls.TreeView>. Для правильной работы этого примера необходимо скопировать приведенный ниже образец XML-данных в файл с именем Book. XML.  
  
 [!code-aspx-csharp[TreeNodeExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpandAll/CS/treenodeexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpandAll/VB/treenodeexpandallvb.aspx#1)]  
  
 Следующий код представляет собой образец XML-данных для предыдущего примера.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="DataBound">
      <MemberSignature Language="C#" Value="public bool DataBound { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DataBound" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.DataBound" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBound As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DataBound { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBound : bool" Usage="System.Web.UI.WebControls.TreeNode.DataBound" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, определяющее, был ли данный узел создан при помощи привязки данных.</summary>
        <value><see langword="true" />, если узел был создан при помощи привязки данных; в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Web.UI.WebControls.TreeNode.DataBound%2A> используется для программного определения того, был ли узел создан с помощью привязки данных. Так как динамическое и статическое содержимое нельзя смешивать в одном узле, это свойство обычно используется при динамическом заполнении элемента управления <xref:System.Web.UI.WebControls.TreeView>, чтобы определить, содержит ли узел статическое содержимое.  
  
 Значение этого свойства хранится в состоянии представления.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItem : obj" Usage="System.Web.UI.WebControls.TreeNode.DataItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает элемент данных, привязанных к элементу управления.</summary>
        <value><see cref="T:System.Object" /> представляет элемент данных, которое связанно с данным элементом управления. Значение по умолчанию — <see langword="null" />, определяющее, что узел не привязан ни к каким элементам данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если элемент управления <xref:System.Web.UI.WebControls.TreeView> привязан к источнику данных, например <xref:System.Web.UI.WebControls.XmlDataSource> объекту, это свойство устанавливается равным элементу данных, привязанному к этому конкретному узлу. Это свойство обычно используется для доступа к значениям элемента данных.  
  
> [!NOTE]
>  Это свойство доступно только после привязки данных.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataPath">
      <MemberSignature Language="C#" Value="public string DataPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.DataPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataPath : string" Usage="System.Web.UI.WebControls.TreeNode.DataPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает путь к данным, привязанных к узлу.</summary>
        <value>Путь к данным, привязанных к узлу. Данное значение происходит из иерархического источника данных, к которому привязан элемент управления <see cref="T:System.Web.UI.WebControls.TreeView" />. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение свойства <xref:System.Web.UI.WebControls.TreeNode.DataPath%2A> обычно используется при вызове метода <xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A?displayProperty=nameWithType> для предоставления пути к данным, привязанным к текущему узлу. Затем этот метод возвращает объект <xref:System.Web.UI.HierarchicalDataSourceView?displayProperty=nameWithType>, который содержит данные по указанному пути.  
  
 Значение этого свойства хранится в состоянии представления.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="M:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView(System.String)" />
        <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Depth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Web.UI.WebControls.TreeNode.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает глубину узла.</summary>
        <value>Глубина узла.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы определить глубину узла, используйте свойство <xref:System.Web.UI.WebControls.TreeNode.Depth%2A>. Глубина представляет количество уровней иерархии между узлом и корневым узлом. Например, корневой узел имеет нулевую глубину. Дочерний элемент корневого узла имеет глубину 1 и т. д.  
  
   
  
## Examples  
 В следующем примере кода показано использование свойства <xref:System.Web.UI.WebControls.TreeNode.Depth%2A> для определения глубины узла. Он инициализирует все узлы с глубиной 1 в выбранном состоянии. Чтобы этот пример работал правильно, необходимо скопировать приведенный ниже образец XML-данных в файл с именем "Группа новостей. XML".  
  
 [!code-aspx-csharp[TreeNodeChecked#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeChecked/CS/treenodecheckedcs.aspx#1)]
 [!code-aspx-vb[TreeNodeChecked#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeChecked/VB/treenodecheckedvb.aspx#1)]  
  
 Следующий код представляет собой образец XML-данных для предыдущего примера.  
  
```  
<category name="news.microsoft.com">  
    <group name="microsoft.public.dotnet.framework.aspnet"/>  
    <group name="microsoft.public.dotnet.framework.aspnet.mobile"/>  
    <group name="microsoft.public.dotnet.framework.aspnet.webservices"/>  
</category>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public void Expand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Expand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.Expand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Expand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Expand();" />
      <MemberSignature Language="F#" Value="member this.Expand : unit -&gt; unit" Usage="treeNode.Expand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Раскрывает текущий узел дерева.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.Web.UI.WebControls.TreeNode.Expand%2A> для удобного развертывания текущего узла.  
  
> [!NOTE]
>  В качестве альтернативы можно также задать для свойства <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> значение `true`.  
  
 Чтобы развернуть текущий узел и все его дочерние узлы, рассмотрите возможность использования метода <xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A>.  
  
 <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A> развернет все узлы во всем дереве.  
  
 Значение этого свойства хранится в состоянии представления.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.WebControls.TreeNode.Expand%2A> для программного расширения узла в элементе управления <xref:System.Web.UI.WebControls.TreeView>. Для правильной работы этого примера необходимо скопировать приведенный ниже образец XML-данных в файл с именем Book. XML.  
  
 [!code-aspx-csharp[TreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpand/CS/treenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpand/VB/treenodeexpandvb.aspx#1)]  
  
 Следующий код представляет собой образец XML-данных для предыдущего примера.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="ExpandAll">
      <MemberSignature Language="C#" Value="public void ExpandAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandAll();" />
      <MemberSignature Language="F#" Value="member this.ExpandAll : unit -&gt; unit" Usage="treeNode.ExpandAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Раскрывает текущий узел и все его дочерние узлы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A> для удобного развертывания текущего узла и всех его дочерних узлов.  
  
> [!NOTE]
>  В качестве альтернативы можно также задать для свойства <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> текущего узла и всех его дочерних узлов значение `true`.  
  
 Чтобы развернуть только текущий узел, рассмотрите возможность использования метода <xref:System.Web.UI.WebControls.TreeNode.Expand%2A>.  
  
 <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A> развернет все узлы во всем дереве.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A> для программного расширения узла и всех его дочерних узлов в элементе управления <xref:System.Web.UI.WebControls.TreeView>. Для правильной работы этого примера необходимо скопировать приведенный ниже образец XML-данных в файл с именем Book. XML.  
  
 [!code-aspx-csharp[TreeNodeExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpandAll/CS/treenodeexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpandAll/VB/treenodeexpandallvb.aspx#1)]  
  
 Следующий код представляет собой образец XML-данных для предыдущего примера.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="Expanded">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; Expanded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; Expanded" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Expanded" />
      <MemberSignature Language="VB.NET" Value="Public Property Expanded As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; Expanded { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.Expanded : Nullable&lt;bool&gt; with get, set" Usage="System.Web.UI.WebControls.TreeNode.Expanded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Nullable`1&lt;System.Boolean&gt;), "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, является узел раскрытым.</summary>
        <value><see langword="true" />, если узел раскрыт; в противном случае — <see langword="false" /> или <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>, чтобы указать или определить, развернут ли узел.  
  
 Узел можно развернуть и свернуть, вызвав методы <xref:System.Web.UI.WebControls.TreeNode.Expand%2A> и <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A> соответственно. Можно также развернуть и свернуть узел и все его дочерние узлы, вызвав методы <xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A> и <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A> соответственно.  
  
 Так как свойство <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> является свойством с тремя состояниями, следующий C# фрагмент кода вызывает ошибку компиляции:  
  
```  
protected void TreeView1_SelectedNodeChanged(object sender, EventArgs e)  
{  
if (TreeView1.Nodes[0].Expanded)  
{  
// some work here   
}  
}  
```  
  
 Хотя VB.Net неявно приводит `Boolean` значение к `NullableBoolean`, C# не выполняет. Поэтому рекомендуется явным образом проверить состояние свойства. Например, следующие примеры кода в Visual Basic и C# явно проверяют значение свойства<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>.  
  
 В следующем примере кода Visual Basic явно проверяется значение свойства <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>. В этом примере проверяется, имеет ли свойство <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> значение `True`. Поэтому `Nothing` и `False` попадают в `If`ную инструкцию.  
  
```  
If TreeView1.Nodes(0).Expanded = True Then 'some work hereEnd IF  
```  
  
 В C# этом примере кода явно проверяется значение свойства<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>. В этом примере проверяется, имеет ли свойство <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> значение `True`. Поэтому `Null` и `False` попадают в `If`ную инструкцию.  
  
```  
if( TreeView1.Nodes[0].Expanded == true ) { //some work here}  
```  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> для программного расширения узла. Он инициализирует все узлы с глубиной 1 в развернутом состоянии. Обратите внимание, что при развертывании корневого узла его дочерние узлы уже развернуты. Для правильной работы этого примера необходимо скопировать приведенный ниже образец XML-данных в файл с именем Book. XML.  
  
 [!code-aspx-csharp[TreeNodeExpanded#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpanded/CS/treenodeexpandedcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpanded#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpanded/VB/treenodeexpandedvb.aspx#1)]  
  
 Следующий код представляет собой образец XML-данных для предыдущего примера.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandDepth" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ImageToolTip">
      <MemberSignature Language="C#" Value="public string ImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ImageToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageToolTip : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.ImageToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает текст контекстных подсказок для изображения, отображаемого рядом с текстом узла.</summary>
        <value>Текст контекстных подсказок для изображения, отображаемого рядом с текстом узла. По умолчанию используется пустая строка (""), указывающая, что это свойство не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда изображение отображается рядом с узлом (если задано свойство <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>), используйте свойство <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A>, чтобы указать подсказку, отображаемую, когда пользователь наводит указатель мыши на изображение. Указанный текст предоставляет специальные технологические устройства с описанием образа, который можно использовать, чтобы сделать элемент управления более доступным.  
  
 Значение этого свойства хранится в состоянии представления.  
  
 Значение этого свойства, если оно задано, можно автоматически сохранить в файл ресурсов с помощью средства конструктора. Дополнительные сведения см. в разделе <xref:System.ComponentModel.LocalizableAttribute>, [Глобализация и локализация](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> для указания текста подсказки для изображения, отображаемого рядом с узлом. Чтобы этот пример работал правильно, необходимо предоставить собственные образы.  
  
 [!code-aspx-csharp[TreeNodeImageToolTip#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeImageToolTip/CS/treenodeimagetooltipcs.aspx#1)]
 [!code-aspx-vb[TreeNodeImageToolTip#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeImageToolTip/VB/treenodeimagetooltipvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ToolTip" />
      </Docs>
    </Member>
    <Member MemberName="ImageUrl">
      <MemberSignature Language="C#" Value="public string ImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.ImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает URL-адрес изображения для отображения рядом с текстом узла.</summary>
        <value>URL-адрес настраиваемого изображения для отображения рядом с текстом узла. По умолчанию свойство содержит пустую строку (""), показывающую, что значение свойства не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>, чтобы указать пользовательский образ для текущего узла в элементе управления <xref:System.Web.UI.WebControls.TreeView>. Это изображение отображается рядом с узлом и может быть в любом формате (JPG, GIF, BMP и т. д.), если клиентский браузер поддерживает этот формат.  
  
 Значение этого свойства хранится в состоянии представления.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> для предоставления пользовательского изображения для узла. Для правильной работы этого примера необходимо скопировать приведенный ниже образец XML-данных в файл с именем Book. XML.  
  
 [!code-aspx-csharp[TreeViewTreeNodeDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/CS/treeviewtreenodedataboundcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/VB/treeviewtreenodedataboundvb.aspx#1)]  
  
 Следующий код представляет собой образец XML-данных для предыдущего примера.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTrackingViewState : bool" Usage="System.Web.UI.WebControls.TreeNode.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, отражающее сохранение изменений в состояние представления узла.</summary>
        <value>Значение <see langword="true" />, если элемент управления сохраняет состояние представления; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/19d2a6ed-9a77-4c7c-a7f5-74dd4b6c3818">Обзор состояния представления</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : obj -&gt; unit&#xA;override this.LoadViewState : obj -&gt; unit" Usage="treeNode.LoadViewState state" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Объект <see cref="T:System.Object" />, который представляет состояние узла.</param>
        <summary>Загружает предварительно сохраненное состояние представления узла.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.LoadViewState%2A> — это вспомогательный метод, используемый для загрузки ранее сохраненного состояния представления узла.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" />
        <related type="Article" href="https://msdn.microsoft.com/library/19d2a6ed-9a77-4c7c-a7f5-74dd4b6c3818">Обзор состояния представления</related>
      </Docs>
    </Member>
    <Member MemberName="NavigateUrl">
      <MemberSignature Language="C#" Value="public string NavigateUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NavigateUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property NavigateUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NavigateUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NavigateUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.NavigateUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает URL-адрес для перемещения при щелчке по узлу.</summary>
        <value>URL-адрес для перемещения при щелчке по узлу. По умолчанию свойство содержит пустую строку (""), показывающую, что значение свойства не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Текст узла может находиться в одном из двух режимов: режим выделения или режим навигации. По умолчанию узел находится в режиме выбора. Чтобы перевести узел в режим навигации, задайте для свойства <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> узла значение, отличное от пустой строки.  
  
 Когда узел находится в режиме навигации, все события выбора для этого узла отключаются. Если щелкнуть узел в режиме навигации, пользователь свяжется с указанным URL-адресом. При необходимости можно задать свойство <xref:System.Web.UI.WebControls.TreeNode.Target%2A>, чтобы указать окно или кадр, в котором будет отображаться связанное содержимое.  
  
 Значение этого свойства хранится в состоянии представления.  
  
   
  
## Examples  
 В следующем примере кода показано, как настроить кадры для следующего примера кода.  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>, чтобы указать URL-адрес для ссылки при щелчке узла. Этот пример используется в наборе рамок предыдущего примера для вывода оглавления.  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNode Parent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNode ^ Parent { System::Web::UI::WebControls::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Web.UI.WebControls.TreeNode" Usage="System.Web.UI.WebControls.TreeNode.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает родительский узел текущего узла.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.TreeNode" />, который предоставляет родительский узел для текущего узла.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Web.UI.WebControls.TreeNode.Parent%2A> возвращает объект <xref:System.Web.UI.WebControls.TreeNode>, представляющий родительский узел текущего узла. Обычно он используется для определения родительского узла или для доступа к свойствам родительского узла.  
  
> [!NOTE]
>  Корневой узел не имеет родительского узла.  
  
 Чтобы получить доступ к дочерним узлам текущего узла, используйте свойство <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.UI.WebControls.TreeNode.Parent%2A> для доступа к свойству <xref:System.Web.UI.WebControls.TreeNode.Text%2A> родительского узла текущего узла.  
  
 [!code-aspx-csharp[TreeNodeParent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeParent/CS/treenodeparentcs.aspx#1)]
 [!code-aspx-vb[TreeNodeParent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeParent/VB/treenodeparentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="PopulateOnDemand">
      <MemberSignature Language="C#" Value="public bool PopulateOnDemand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PopulateOnDemand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
      <MemberSignature Language="VB.NET" Value="Public Property PopulateOnDemand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PopulateOnDemand { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PopulateOnDemand : bool with get, set" Usage="System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, заполнен ли узел динамически.</summary>
        <value><see langword="true" /> для динамического заполнения узла; иначе — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Иногда нецелесообразно статически определить древовидную структуру из-за размера данных или пользовательского содержимого, которое зависит от пользовательского ввода. По этой причине элемент управления <xref:System.Web.UI.WebControls.TreeView> поддерживает динамическое заполнение узла. Если свойство <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> узла имеет значение `true`, этот узел заполняется во время выполнения с помощью события обратной передачи при развертывании узла. Для динамического заполнения узла необходимо определить метод обработки событий, который заполняет узел, для события <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>.  
  
 Поддерживаемые браузеры также могут использовать преимущества заполнения узла на стороне клиента. При включении этот параметр позволяет элементу управления <xref:System.Web.UI.WebControls.TreeView> динамически заполнять узел на клиенте при развертывании этого узла, что предотвращает необходимость обратной передачи на сервер. Дополнительные сведения о заполнении узла на стороне клиента см. в разделе <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.  
  
 Значение этого свойства хранится в состоянии представления.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>, чтобы указать, что узел заполняется динамически.  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostText">
      <MemberSignature Language="C#" Value="protected virtual void RenderPostText (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderPostText(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.RenderPostText(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderPostText (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderPostText(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderPostText : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderPostText : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeNode.RenderPostText writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, представляющий поток вывода для записи содержимого в веб-страницу.</param>
        <summary>Позволяет разработчикам узла создавать дополнительные способы отрисовки узла.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод может быть переопределен разработчиками элементов управления для добавления дополнительной отрисовки после подготовки узла.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderPreText">
      <MemberSignature Language="C#" Value="protected virtual void RenderPreText (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderPreText(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderPreText (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderPreText(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderPreText : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderPreText : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeNode.RenderPreText writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, представляющий поток вывода для записи содержимого в веб-страницу.</param>
        <summary>Позволяет разработчикам узла создавать дополнительные способы отрисовки узла.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод может быть переопределен разработчиками элементов управления для добавления дополнительной отрисовки перед отрисовкой узла.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : unit -&gt; obj&#xA;override this.SaveViewState : unit -&gt; obj" Usage="treeNode.SaveViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сохраняет текущее состояние отображения узла.</summary>
        <returns>Объект <see cref="T:System.Object" />, содержащий сохраненное состояние узла.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.TreeNode.SaveViewState%2A> — это вспомогательный метод, вызываемый узлом для сохранения его состояния.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/19d2a6ed-9a77-4c7c-a7f5-74dd4b6c3818">Обзор состояния представления</related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.Select" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select();" />
      <MemberSignature Language="F#" Value="member this.Select : unit -&gt; unit" Usage="treeNode.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выбирает текущий узел в элементе управления <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.Web.UI.WebControls.TreeNode.Select%2A>, чтобы выбрать текущий узел в элементе управления <xref:System.Web.UI.WebControls.TreeView>.  
  
 **Примечание** . В качестве альтернативы можно также выбрать текущий узел, задав свойству <xref:System.Web.UI.WebControls.TreeNode.Selected%2A> значение `true`.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.WebControls.TreeNode.Select%2A> для выбора узла в элементе управления <xref:System.Web.UI.WebControls.TreeView>.  
  
 [!code-aspx-csharp[TreeNodeSelected2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeSelected2/CS/treenodeselected2cs.aspx#1)]
 [!code-aspx-vb[TreeNodeSelected2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeSelected2/VB/treenodeselected2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Selected" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="SelectAction">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeSelectAction SelectAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeNodeSelectAction SelectAction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectAction As TreeNodeSelectAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeSelectAction SelectAction { System::Web::UI::WebControls::TreeNodeSelectAction get(); void set(System::Web::UI::WebControls::TreeNodeSelectAction value); };" />
      <MemberSignature Language="F#" Value="member this.SelectAction : System.Web.UI.WebControls.TreeNodeSelectAction with get, set" Usage="System.Web.UI.WebControls.TreeNode.SelectAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeSelectAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает события для генерации в случае выбора узла.</summary>
        <value>Одно из значений <see cref="T:System.Web.UI.WebControls.TreeNodeSelectAction" />. Значение по умолчанию — <see langword="TreeNodeSelectAction.Select" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Текст узла в элементе управления <xref:System.Web.UI.WebControls.TreeView> может находиться в одном из двух режимов: режим выделения или режим навигации. По умолчанию узел находится в режиме выбора. Чтобы перевести узел в режим навигации, задайте для свойства <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> узла значение, отличное от пустой строки (""). Чтобы перевести узел в режим выбора, задайте для свойства <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> узла пустую строку.  
  
> [!NOTE]
>  Когда узел находится в режиме навигации, события выбора для этого узла отключаются. Если щелкнуть узел, пользователь перейдет к указанному URL-адресу вместо того, чтобы отправлять страницу обратно на сервер и вызывать событие.  
  
 Когда узел находится в режиме выбора, используйте свойство <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>, чтобы указать событие или события, которые вызываются при выборе узла. В следующей таблице перечислены доступные параметры.  
  
|Действие выбора|Описание|  
|----------------------|-----------------|  
|`TreeNodeSelectAction.Expand`|Переключает узел между развернутым и свернутым. При необходимости вызывает событие <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> или <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>.|  
|`TreeNodeSelectAction.None`|Не генерирует событий при выборе узла.|  
|`TreeNodeSelectAction.Select`|Вызывает событие <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> при выборе узла.|  
|`TreeNodeSelectAction.SelectExpand`|Вызывает события <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> и <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> при выборе узла. Узлы развертываются, но никогда не сворачиваются.|  
  
> [!NOTE]
>  Свойство <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> не отображается для узла, свойство <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> которого имеет значение `TreeNodeSelectAction.None`.  
  
 Значение этого свойства хранится в состоянии представления.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>, чтобы указать, какое событие вызывается при щелчке узла.  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeSelectAction" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public bool Selected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selected" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Property Selected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Selected { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Selected : bool with get, set" Usage="System.Web.UI.WebControls.TreeNode.Selected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, выделен ли узел.</summary>
        <value><see langword="true" />, если данный узел выделен; в противном случае <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство <xref:System.Web.UI.WebControls.TreeNode.Selected%2A>, чтобы указать или определить, выбран ли узел.  
  
> [!NOTE]
>  Несмотря на то, что свойство можно использовать для определения того, выбран ли узел, чаще всего используется свойство <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>.  
  
 При использовании этого свойства можно выбрать только один узел за раз в элементе управления <xref:System.Web.UI.WebControls.TreeView>.  
  
> [!NOTE]
>  В качестве альтернативы можно также выбрать узел с помощью метода <xref:System.Web.UI.WebControls.TreeNode.Select%2A>.  
  
 Значение этого свойства хранится в состоянии представления.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.UI.WebControls.TreeNode.Selected%2A> для выбора узла в элементе управления <xref:System.Web.UI.WebControls.TreeView>.  
  
 [!code-aspx-csharp[TreeNodeSelected2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeSelected2/CS/treenodeselected2cs.aspx#1)]
 [!code-aspx-vb[TreeNodeSelected2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeSelected2/VB/treenodeselected2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Select" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="ShowCheckBox">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; ShowCheckBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; ShowCheckBox" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ShowCheckBox" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCheckBox As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; ShowCheckBox { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.ShowCheckBox : Nullable&lt;bool&gt; with get, set" Usage="System.Web.UI.WebControls.TreeNode.ShowCheckBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Nullable`1&lt;System.Boolean&gt;), "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, отображается ли рядом с узлом флаг.</summary>
        <value>Значение <see langword="true" />, если флаг отображается; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Элемент управления <xref:System.Web.UI.WebControls.TreeView> позволяет отображать флажок рядом с изображением узла. Используйте свойство <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>, чтобы показать или скрыть флажок для текущего узла.  
  
 Хотя для вывода флажков можно использовать свойство <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>, чаще всего используется свойство <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=nameWithType> элемента управления <xref:System.Web.UI.WebControls.TreeView>. Однако свойство <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=nameWithType> влияет на каждый тип узла, заданный свойством. Таким образом, свойство <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A?displayProperty=nameWithType> часто используется для переопределения этого параметра для отдельного узла.  
  
 Так как свойство <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=nameWithType> является свойством с тремя состояниями, следующий C# фрагмент кода вызывает ошибку компиляции:  
  
```  
protected void TreeView1_SelectedNodeChanged(object sender, EventArgs e)  
{  
if (TreeView1.Nodes[0].Expanded)  
{  
// some work here   
}  
}  
```  
  
 Хотя VB.Net неявно приводит `Boolean` значение к `NullableBoolean`, C# не выполняет. Поэтому рекомендуется явным образом проверить состояние свойства. Например, следующие примеры кода в Visual Basic и C# явно проверяют значение свойства<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>.  
  
 В следующем примере кода Visual Basic явно проверяется значение свойства <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>. В этом примере проверяется, имеет ли свойство <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> значение `True`. Поэтому `Nothing` и `False` попадают в `If`ную инструкцию.  
  
```  
If TreeView1.Nodes(0).Expanded = True Then 'some work hereEnd IF  
```  
  
 В C# этом примере кода явно проверяется значение свойства<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>. В этом примере проверяется, имеет ли свойство <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> значение `True`. Поэтому `Null` и `False` попадают в `If`ную инструкцию.  
  
```  
if( TreeView1.Nodes[0].Expanded == true ) { //some work here}  
```  
  
 Значение этого свойства хранится в состоянии представления.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> для программного отображения и скрытия флажка для узла в элементе управления <xref:System.Web.UI.WebControls.TreeView>. Для правильной работы этого примера необходимо скопировать приведенный ниже образец XML-данных в файл с именем Book. XML.  
  
 [!code-aspx-csharp[TreeNodeShowCheckBox#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeShowCheckBox/CS/treenodeshowcheckboxcs.aspx#1)]
 [!code-aspx-vb[TreeNodeShowCheckBox#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeShowCheckBox/VB/treenodeshowcheckboxvb.aspx#1)]  
  
 Следующий код представляет собой образец XML-данных для предыдущего примера.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает копию объекта <see cref="T:System.Web.UI.WebControls.TreeNode" />.</summary>
        <returns>Объект <see cref="T:System.Object" />, представляющий копию объекта <see cref="T:System.Web.UI.WebControls.TreeNode" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.WebControls.TreeNode.System%23ICloneable%23Clone%2A> используется классом <xref:System.Web.UI.WebControls.TreeNode> для создания копии самого себя.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ICloneable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />.</summary>
        <value>Значение, отражающее сохранение изменений в состояние представления узла.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Его можно использовать только в том случае, если экземпляр <xref:System.Web.UI.WebControls.TreeNode> приводится к интерфейсу <xref:System.Web.UI.IStateManager>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (state As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ state) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Объект <see cref="T:System.Object" />, содержащий сохраненных значениях сведения о состоянии представления.</param>
        <summary>Загружает предварительно сохраненное состояние представления узла.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">Общие сведения об управлении состоянием ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сохраняет изменения состояния просмотра в <see cref="T:System.Object" />.</summary>
        <returns>Объект <see cref="T:System.Object" />, содержащий данные об изменении состояния представления.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">Общие сведения об управлении состоянием ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выдает объекту <see cref="T:System.Web.UI.WebControls.TreeNode" /> инструкции отслеживать изменения в его состоянии представления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 После вызова этого метода для серверного элемента управления свойство <xref:System.Web.UI.Control.IsTrackingViewState%2A> возвращает `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">Общие сведения об управлении состоянием ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает целевое окно или фрейм, для отображения содержимого веб-страницы, связанной с этим узлом.</summary>
        <value>Целевое окно или фрейм, для отображения связанного содержимого веб-страницы. Значения должны начинаться с буквы от "A" до "Z" (регистр учитывается), за исключением некоторых специальных значений, начинающиеся со знака подчеркивания, как показано в следующей таблице.  
  
 <list type="table"><listheader><term> Целевое значение 
 </term><description> Описание: 
 </description></listheader><item><term><see langword="_blank" /></term><description> Отображает содержимое в новом окне без фреймов.  
  
 </description></item><item><term><see langword="_parent" /></term><description> Отрисовывает содержимое в непосредственно родительском элементе набора фреймов.  
  
 </description></item><item><term><see langword="_search" /></term><description> Отображает содержимое в панели поиска.  
  
 </description></item><item><term><see langword="_self" /></term><description> Отображает содержимое во фрейме с фокусировкой.  
  
 </description></item><item><term><see langword="_top" /></term><description> Отображает содержимое в окне без фреймов.  
  
 </description></item></list><block subset="none" type="note"><para>  
 Чтобы выяснить, поддерживается ли значение <see langword="_search" />, обратитесь к документации браузера. Например, Microsoft Internet Explorer 5.0 или более поздней версии поддерживает целевое значение <see langword="_search" />.  
  
</para></block>  
  
 Значение по умолчанию — пустая строка (""), обновляющая окно или фрейм, имеющий фокус.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство <xref:System.Web.UI.WebControls.TreeNode.Target%2A>, чтобы указать окно или кадр, в котором будет отображаться веб-содержимое, связанное с узлом при нажатии на этот узел.  
  
> [!NOTE]
>  Задание этого свойства переопределяет свойство <xref:System.Web.UI.WebControls.TreeView.Target%2A> элемента управления <xref:System.Web.UI.WebControls.TreeView>.  
  
> [!NOTE]
>  Свойство <xref:System.Web.UI.WebControls.TreeNode.Target%2A> отображается как атрибут `target`. Атрибут `target` в элементах `anchor` не разрешен в определении типа документа XHTML 1,1. Не устанавливайте свойство <xref:System.Web.UI.WebControls.TreeNode.Target%2A>, если отображаемые выходные данные для объекта <xref:System.Web.UI.WebControls.TreeNode> должны соответствовать XHTML 1,1. Дополнительные сведения см. [в статье стандарты XHTML в Visual Studio и ASP.NET](https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97).  
>   
>  При создании веб-страниц со специальными возможностями настоятельно рекомендуется не использовать свойство <xref:System.Web.UI.WebControls.TreeNode.Target%2A> для целевого другого окна. Дополнительные сведения см. в разделе [ASP.NET Accessibility](https://docs.microsoft.com/previous-versions/aspnet/ms228011(v=vs.100)).  
  
 Значение этого свойства хранится в состоянии представления.  
  
   
  
## Examples  
 В следующем примере кода показано, как настроить кадры для следующего примера.  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.UI.WebControls.TreeNode.Target%2A> для указания фрейма, в котором отображается связанное содержимое. Этот пример используется в наборе рамок предыдущего примера для вывода оглавления.  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Target" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает текст, отображаемый для узла в элементе управления <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <value>Текст, отображаемый для узла в элементе управления <see cref="T:System.Web.UI.WebControls.TreeView" />. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство <xref:System.Web.UI.WebControls.TreeNode.Text%2A>, чтобы указать или определить текст, отображаемый для узла в элементе управления <xref:System.Web.UI.WebControls.TreeView>.  
  
> [!NOTE]
>  Если свойство <xref:System.Web.UI.WebControls.TreeNode.Text%2A> содержит `null`, то метод доступа `get` возвращает значение свойства <xref:System.Web.UI.WebControls.TreeNode.Value%2A>. Если свойство <xref:System.Web.UI.WebControls.TreeNode.Value%2A>, в свою очередь, содержит `null`, возвращается <xref:System.String.Empty>.  
  
 Значение этого свойства хранится в состоянии представления.  
  
 Значение этого свойства, если оно задано, можно автоматически сохранить в файл ресурсов с помощью средства конструктора. Дополнительные сведения см. в разделе <xref:System.ComponentModel.LocalizableAttribute>, [Глобализация и локализация](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.UI.WebControls.TreeNode.Text%2A>, чтобы указать текст для узла.  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
      </Docs>
    </Member>
    <Member MemberName="ToggleExpandState">
      <MemberSignature Language="C#" Value="public void ToggleExpandState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ToggleExpandState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.ToggleExpandState" />
      <MemberSignature Language="VB.NET" Value="Public Sub ToggleExpandState ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ToggleExpandState();" />
      <MemberSignature Language="F#" Value="member this.ToggleExpandState : unit -&gt; unit" Usage="treeNode.ToggleExpandState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выбирает между раскрытым и свернутым состояниями узла.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.Web.UI.WebControls.TreeNode.ToggleExpandState%2A> для переключения между развернутым и свернутым состоянием узла. Например, если узел свернут, вызов метода <xref:System.Web.UI.WebControls.TreeNode.ToggleExpandState%2A> расширяет узел и наоборот.  
  
> [!NOTE]
>  В качестве альтернативы можно задать свойство <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> напрямую.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.WebControls.TreeNode.ToggleExpandState%2A> для переключения между развернутым и свернутым состоянием корневого узла элемента управления <xref:System.Web.UI.WebControls.TreeView>.  
  
 [!code-aspx-csharp[TreeNodeToggleExpandState#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeToggleExpandState/CS/treenodetoggleexpandstatecs.aspx#1)]
 [!code-aspx-vb[TreeNodeToggleExpandState#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeToggleExpandState/VB/treenodetoggleexpandstatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTip : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает текст контекстной подсказки для этого узла.</summary>
        <value>Текст контекстной подсказки для этого узла. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A>, чтобы указать текст подсказки для узла. Текст подсказки отображается при помещении указателя мыши на узел.  
  
 Значение этого свойства, если оно задано, можно автоматически сохранить в файл ресурсов с помощью средства конструктора. Дополнительные сведения см. в разделе <xref:System.ComponentModel.LocalizableAttribute>, [Глобализация и локализация](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> для предоставления подсказок для узлов в элементе управления <xref:System.Web.UI.WebControls.TreeView>.  
  
 [!code-aspx-csharp[TreeNodeToolTip#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeToolTip/CS/treenodetooltipcs.aspx#1)]
 [!code-aspx-vb[TreeNodeToolTip#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeToolTip/VB/treenodetooltipvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageToolTip" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void TrackViewState();" />
      <MemberSignature Language="F#" Value="member this.TrackViewState : unit -&gt; unit" Usage="treeNode.TrackViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Отмечает точку отсчета, с которой начинает отслеживание и сохранение изменений в состоянии отображения узла.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IStateManager.TrackViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/19d2a6ed-9a77-4c7c-a7f5-74dd4b6c3818">Обзор состояния представления</related>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает неотображаемое значение, используемое для хранения любых дополнительных данных об узле, как данных, используемые в событиях обратной передачи.</summary>
        <value>Дополнительная информация о неотображаемом узле. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Web.UI.WebControls.TreeNode.Value%2A> используется для дополнения свойства <xref:System.Web.UI.WebControls.TreeNode.Text%2A> путем хранения любых дополнительных данных, связанных с узлом. Это значение не отображается в элементе управления и обычно используется для хранения данных для обработки событий обратной передачи.  
  
> [!NOTE]
>  Если свойство <xref:System.Web.UI.WebControls.TreeNode.Value%2A> содержит `null`, то метод доступа `get` возвращает значение свойства <xref:System.Web.UI.WebControls.TreeNode.Text%2A>. Если свойство <xref:System.Web.UI.WebControls.TreeNode.Text%2A>, в свою очередь, содержит `null`, возвращается <xref:System.String.Empty>.  
  
> [!NOTE]
>  Узлы на одном уровне должны иметь уникальное значение для свойства <xref:System.Web.UI.WebControls.TreeNode.Value%2A>; элемент управления "<xref:System.Web.UI.WebControls.TreeView>" не может отличать разные узлы на одном уровне с одинаковым значением. В этом сценарии, если пользователь щелкает узел, имеющий повторяющееся значение, выбирается узел, который отображается первым в элементе управления <xref:System.Web.UI.WebControls.TreeView>.  
  
 Значение этого свойства хранится в состоянии представления.  
  
 Значение этого свойства, если оно задано, можно автоматически сохранить в файл ресурсов с помощью средства конструктора. Дополнительные сведения см. в разделе <xref:System.ComponentModel.LocalizableAttribute>, [Глобализация и локализация](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.UI.WebControls.TreeNode.Value%2A> для хранения ключевого поля.  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
      </Docs>
    </Member>
    <Member MemberName="ValuePath">
      <MemberSignature Language="C#" Value="public string ValuePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValuePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValuePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValuePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValuePath : string" Usage="System.Web.UI.WebControls.TreeNode.ValuePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает путь из корневого узла к текущему узлу.</summary>
        <value>Список с разделителями, содержащий значения узла, которые формируют путь от корневого узла к текущему.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> содержит список значений узлов с разделителями-разделителями, образующих путь от корневого узла к текущему узлу. Используйте свойство <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A>, чтобы указать символ разделителя, используемый для разделения значений узлов. Это значение обычно используется при анализе списка для отдельных значений или для передачи в качестве аргумента методу <xref:System.Web.UI.WebControls.TreeView.FindNode%2A> класса <xref:System.Web.UI.WebControls.TreeView>.  
  
 В зависимости от значения, отображаемого в элементе управления <xref:System.Web.UI.WebControls.TreeView>, может потребоваться изменить символ разделителя, чтобы предотвратить конфликты. Например, если в качестве символа разделителя задана запятая, отображаемое значение не должно содержать запятые. в противном случае вы не сможете точно проанализировать свойство <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>.  
  
> [!NOTE]
>  Узлы на одном уровне должны иметь уникальное значение для свойства <xref:System.Web.UI.WebControls.TreeNode.Value%2A>; элемент управления "<xref:System.Web.UI.WebControls.TreeView>" не может отличать разные узлы на одном уровне с одинаковым значением. В этом сценарии, если пользователь щелкает узел, имеющий повторяющееся значение, выбирается узел, который отображается первым в элементе управления <xref:System.Web.UI.WebControls.TreeView>.  
  
   
  
## Examples  
 В следующем примере кода показано, как выполнить синтаксический анализ свойства <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>.  
  
 [!code-aspx-csharp[TreeViewPathSeparator2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPathSeparator2/CS/treeviewpathseparatorcs.aspx#1)]
 [!code-aspx-vb[TreeViewPathSeparator2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPathSeparator2/VB/treeviewpathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PathSeparator" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.FindNode(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
