<Type Name="TreeNodeBindingCollection" FullName="System.Web.UI.WebControls.TreeNodeBindingCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="024eaa62373414ff488c04a7133814130aeb7584" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70688076" /></Metadata><TypeSignature Language="C#" Value="public sealed class TreeNodeBindingCollection : System.Web.UI.StateManagedCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TreeNodeBindingCollection extends System.Web.UI.StateManagedCollection" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TreeNodeBindingCollection&#xA;Inherits StateManagedCollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeNodeBindingCollection sealed : System::Web::UI::StateManagedCollection" />
  <TypeSignature Language="F#" Value="type TreeNodeBindingCollection = class&#xA;    inherit StateManagedCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.StateManagedCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет коллекцию объектов <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> в элементе управления <see cref="T:System.Web.UI.WebControls.TreeView" />. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс используется для хранения <xref:System.Web.UI.WebControls.TreeNodeBinding> коллекции объектов в <xref:System.Web.UI.WebControls.TreeView> элементе управления и управления ею. <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> Элемент управления использует класс для его  <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Свойства. <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> <xref:System.Web.UI.WebControls.TreeView>  
  
 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Свойство содержит <xref:System.Web.UI.WebControls.TreeNodeBinding>  объекты, определяющие связь между элементом данных и узлом, к которому он привязан. При привязке к источнику данных, где каждый элемент данных содержит несколько свойств (например, XML-элемент с несколькими атрибутами), узел по умолчанию отображает значение, `ToString` возвращаемое методом элемента данных. В случае XML-элемента узел отображает имя элемента, которое показывает базовую структуру дерева, но не очень полезно в противном случае. Можно привязать узел к определенному свойству элемента данных, указав привязки узлов дерева. Несмотря на <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> то, что коллекцию можно заполнять программным образом, она обычно задается декларативно.  
  
 Чтобы декларативно задать привязки узлов дерева, сделайте следующее:  
  
1.  Вложение открывающих и `<DataBindings>` закрывающих тегов между открывающим и закрывающим <xref:System.Web.UI.WebControls.TreeView> тегами элемента управления.  
  
2.  Поместите `<asp:TreeNodeBinding>` элементы между открывающим и закрывающим `<DataBindings>` тегами для каждой привязки узла дерева, которую нужно указать.  
  
 Можно программно управлять <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> , добавляя и удаляя <xref:System.Web.UI.WebControls.TreeNodeBinding> объекты. Чтобы добавить <xref:System.Web.UI.WebControls.TreeNodeBinding> объект в коллекцию, <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A> используйте метод или <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A> . Чтобы удалить узлы из коллекции, используйте <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A>метод, <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A>или <xref:System.Web.UI.StateManagedCollection.Clear%2A?displayProperty=nameWithType> .  
  
 <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> Класс поддерживает несколько способов доступа к элементам в коллекции:  
  
-   Используйте индексатор, чтобы получить объект непосредственно в определенном индексе, начинающемся с нуля. <xref:System.Web.UI.WebControls.TreeNode> <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Item%2A>  
  
-   <xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A?displayProperty=nameWithType> Используйте метод, чтобы создать перечислитель, который можно использовать для прохода по коллекции.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода демонстрируется декларативное заполнение <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> объекта. Во втором примере кода показано, как заполнять <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> объект программным способом.  
  
 В следующем примере кода показано, как заполнять <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> объект декларативно. Чтобы этот пример работал правильно, необходимо скопировать XML-данные, расположенные в конце этого раздела, в файл с именем Book. XML.  
  
 [!code-aspx-csharp[TreeViewXml#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewXml/CS/treeviewxmlcs.aspx#1)]
 [!code-aspx-vb[TreeViewXml#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewXml/VB/treeviewxmlvb.aspx#1)]  
  
 В следующем примере кода показано, как заполнять <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> объект программным способом. Чтобы этот пример работал правильно, необходимо скопировать образец XML-данных, расположенный в конце этого раздела, в файл с именем Book. XML.  
  
 [!code-aspx-csharp[TreeViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCtor/CS/treeviewctorcs.aspx#1)]
 [!code-aspx-vb[TreeViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCtor/VB/treeviewctorvb.aspx#1)]  
  
 Ниже приведены XML-данные для приведенных выше примеров кода.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
       <Section Heading="Section 1">  
       </Section>  
       <Section Heading="Section 2">  
       </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)" />
    <altmember cref="M:System.Web.UI.StateManagedCollection.Clear" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Web.UI.WebControls.TreeNodeBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Web.UI.WebControls.TreeNodeBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (binding As TreeNodeBinding) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Web::UI::WebControls::TreeNodeBinding ^ binding);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.UI.WebControls.TreeNodeBinding -&gt; int" Usage="treeNodeBindingCollection.Add binding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Web.UI.WebControls.TreeNodeBinding" />
      </Parameters>
      <Docs>
        <param name="binding">Объект <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> для добавления в коллекцию.</param>
        <summary>Добавляет указанный объект <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> в конец объекта <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />.</summary>
        <returns>Начинающийся с нуля индекс расположения добавляемого <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> в <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод, чтобы добавить указанный <xref:System.Web.UI.WebControls.TreeNodeBinding> объект <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> в конец объекта. <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A>  
  
 В качестве альтернативы можно вставить <xref:System.Web.UI.WebControls.TreeNodeBinding> объект <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> в по определенному индексу с помощью <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A> метода.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A> метод для программного добавления нового <xref:System.Web.UI.WebControls.TreeNodeBinding> объекта в <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> объект. Чтобы этот пример работал правильно, необходимо скопировать XML-данные, расположенные в конце этого раздела, в файл с именем Book. XML.  
  
 [!code-aspx-csharp[TreeNodeBindingCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingCollectionAdd/CS/treenodebindingcollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingCollectionAdd/VB/treenodebindingcollectionaddvb.aspx#1)]  
  
 Ниже приведен XML-данные для предыдущего примера кода.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
        <Section Heading="Section 2"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.TreeNodeBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.TreeNodeBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Contains(System.Web.UI.WebControls.TreeNodeBinding)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (binding As TreeNodeBinding) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::TreeNodeBinding ^ binding);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.UI.WebControls.TreeNodeBinding -&gt; bool" Usage="treeNodeBindingCollection.Contains binding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Web.UI.WebControls.TreeNodeBinding" />
      </Parameters>
      <Docs>
        <param name="binding">Искомый объект <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />.</param>
        <summary>Определяет, присутствует ли в коллекции указанный объект <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />.</summary>
        <returns>Значение <see langword="true" />, если <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> входит в коллекцию; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Contains%2A> , чтобы определить, содержится <xref:System.Web.UI.WebControls.TreeNodeBinding> ли <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> объект в объекте. Этот метод обычно используется для проверки существования <xref:System.Web.UI.WebControls.TreeNodeBinding> объекта перед выполнением задачи, например добавления или <xref:System.Web.UI.WebControls.TreeNodeBinding> удаления из коллекции.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf(System.Web.UI.WebControls.TreeNodeBinding)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.TreeNodeBinding[] bindingArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.TreeNodeBinding[] bindingArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo(System.Web.UI.WebControls.TreeNodeBinding[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (bindingArray As TreeNodeBinding(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::TreeNodeBinding ^&gt; ^ bindingArray, int index);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Web.UI.WebControls.TreeNodeBinding[] * int -&gt; unit" Usage="treeNodeBindingCollection.CopyTo (bindingArray, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingArray" Type="System.Web.UI.WebControls.TreeNodeBinding[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bindingArray">Индексируемый от нуля массив объектов <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />, получающий скопированные из коллекции<see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" /> элементы.</param>
        <param name="index">Позиция в <paramref name="bindingArray" />, начиная с которой в него будет копироваться содержимое.</param>
        <summary>Копирует все элементы из объекта <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" /> в совместимый одномерный массив объектов <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />, начиная с указанного индекса в массиве назначения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод, чтобы скопировать содержимое <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> объекта в  `bindingArray` .  <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo%2A> Элементы копируются начиная с `index`. Затем можно использовать массив для доступа к элементам коллекции.  
  
 В качестве альтернативы можно использовать <xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A> метод для создания перечислителя, который можно использовать для доступа к элементам в коллекции.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo%2A> метод для копирования содержимого <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> коллекции в массив.  
  
 [!code-aspx-csharp[TreeNodeBindingCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingCollectionCopyTo/CS/treenodebindingcollectioncopytocs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingCollectionCopyTo/VB/treenodebindingcollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="T:System.Array" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBindingCollection.Item(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.CopyTo(System.Array)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="CreateKnownType">
      <MemberSignature Language="C#" Value="protected override object CreateKnownType (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object CreateKnownType(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateKnownType (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ CreateKnownType(int index);" />
      <MemberSignature Language="F#" Value="override this.CreateKnownType : int -&gt; obj" Usage="treeNodeBindingCollection.CreateKnownType index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKnownTypes">
      <MemberSignature Language="C#" Value="protected override Type[] GetKnownTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Type[] GetKnownTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetKnownTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;Type ^&gt; ^ GetKnownTypes();" />
      <MemberSignature Language="F#" Value="override this.GetKnownTypes : unit -&gt; Type[]" Usage="treeNodeBindingCollection.GetKnownTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.TreeNodeBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.TreeNodeBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf(System.Web.UI.WebControls.TreeNodeBinding)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (binding As TreeNodeBinding) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::TreeNodeBinding ^ binding);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.UI.WebControls.TreeNodeBinding -&gt; int" Usage="treeNodeBindingCollection.IndexOf binding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Web.UI.WebControls.TreeNodeBinding" />
      </Parameters>
      <Docs>
        <param name="binding">Искомый объект <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />.</param>
        <summary>Определяет индекс указанного объекта <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> в коллекции.</summary>
        <returns>Индекс (с нуля) первого вхождения параметра <paramref name="binding" /> внутри <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />, если он найден; в противном случае — значение -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод, чтобы определить Отсчитываемый от нуля индекс указанного <xref:System.Web.UI.WebControls.TreeNodeBinding> объекта в <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> объекте. <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf%2A> Если узел отсутствует в коллекции, метод возвращает значение-1.  
  
> [!NOTE]
>  Если указанный <xref:System.Web.UI.WebControls.TreeNodeBinding> объект встречается в коллекции несколько раз, возвращается индекс первого вхождения.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Contains(System.Web.UI.WebControls.TreeNodeBinding)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Web.UI.WebControls.TreeNodeBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Web.UI.WebControls.TreeNodeBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, binding As TreeNodeBinding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Web::UI::WebControls::TreeNodeBinding ^ binding);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Web.UI.WebControls.TreeNodeBinding -&gt; unit" Usage="treeNodeBindingCollection.Insert (index, binding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="binding" Type="System.Web.UI.WebControls.TreeNodeBinding" />
      </Parameters>
      <Docs>
        <param name="index">Отсчитываемый от нуля индекс, по которому должен быть вставлен объект <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />.</param>
        <param name="binding">Вставляемый объект <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />.</param>
        <summary>Вставляет указанный объект <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> в объект <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" /> по указанному индексу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод, чтобы вставить указанный <xref:System.Web.UI.WebControls.TreeNodeBinding> объект в <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> объект в  `index` .  <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A>  
  
 В качестве альтернативы можно добавить <xref:System.Web.UI.WebControls.TreeNodeBinding> объект в конец <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> объекта с помощью <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A> метода.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A> метод для вставки нового <xref:System.Web.UI.WebControls.TreeNodeBinding> объекта в <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> объект программным способом. Чтобы этот пример работал правильно, необходимо скопировать XML-данные, расположенные в конце этого раздела, в файл с именем Book. XML.  
  
 [!code-aspx-csharp[TreeNodeBindingCollectionInsert#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingCollectionInsert/CS/treenodebindingcollectioninsertcs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingCollectionInsert#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingCollectionInsert/VB/treenodebindingcollectioninsertvb.aspx#1)]  
  
 Ниже приведен XML-данные для предыдущего примера кода.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
        <Section Heading="Section 2"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeBinding this[int i] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeBinding Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNodeBindingCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(i As Integer) As TreeNodeBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeBinding ^ default[int] { System::Web::UI::WebControls::TreeNodeBinding ^ get(int i); void set(int i, System::Web::UI::WebControls::TreeNodeBinding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.TreeNodeBinding with get, set" Usage="System.Web.UI.WebControls.TreeNodeBindingCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">Индекс (с нуля) извлекаемой ошибки <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />.</param>
        <summary>Получает или задает объект <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> с указанным индексом в объекте <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> по указанному индексу в коллекции <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте индексатор для <xref:System.Web.UI.WebControls.TreeNodeBinding> доступа к объекту из объекта, <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> находящегося в `i` представлении с помощью нотации массива. <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Item%2A> Индексатор позволяет изменять или <xref:System.Web.UI.WebControls.TreeNodeBinding> заменять объект в коллекции напрямую. <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Item%2A>  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Item%2A> индексатор для доступа к элементам, которые находятся <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> в объекте. <xref:System.Web.UI.WebControls.TreeNodeBinding> Объект для узлов третьего уровня обновляется программным образом с новыми значениями. Чтобы этот пример работал правильно, необходимо скопировать XML-данные, расположенные в конце этого раздела, в файл с именем Book. XML.  
  
 [!code-aspx-csharp[TreeNodeBindingCollectionIndexer#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingCollectionIndexer/CS/treenodebindingcollectionindexercs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingCollectionIndexer#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingCollectionIndexer/VB/treenodebindingcollectionindexervb.aspx#1)]  
  
 Ниже приведен XML-данные для предыдущего примера кода.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
        <Section Heading="Section 2"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="OnClear">
      <MemberSignature Language="C#" Value="protected override void OnClear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClear ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClear();" />
      <MemberSignature Language="F#" Value="override this.OnClear : unit -&gt; unit" Usage="treeNodeBindingCollection.OnClear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRemoveComplete">
      <MemberSignature Language="C#" Value="protected override void OnRemoveComplete (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRemoveComplete(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnRemoveComplete (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRemoveComplete(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnRemoveComplete : int * obj -&gt; unit" Usage="treeNodeBindingCollection.OnRemoveComplete (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnValidate">
      <MemberSignature Language="C#" Value="protected override void OnValidate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValidate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValidate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValidate(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.OnValidate : obj -&gt; unit" Usage="treeNodeBindingCollection.OnValidate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.TreeNodeBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.TreeNodeBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (binding As TreeNodeBinding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::WebControls::TreeNodeBinding ^ binding);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.UI.WebControls.TreeNodeBinding -&gt; unit" Usage="treeNodeBindingCollection.Remove binding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Web.UI.WebControls.TreeNodeBinding" />
      </Parameters>
      <Docs>
        <param name="binding">Объект <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> для удаления.</param>
        <summary>Удаляет указанный объект <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> из объекта <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод, чтобы удалить указанный <xref:System.Web.UI.WebControls.TreeNodeBinding> объект из коллекции. <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A> Все элементы, которые следуют за этим узлом, затем перемещаются вверх, чтобы заполнить вакантное расположение. Индексы перемещенных элементов также обновляются.  
  
 В качестве альтернативы можно удалить узел с указанным индексом с помощью <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A> метода. Можно также удалить каждый узел в коллекции с помощью <xref:System.Web.UI.StateManagedCollection.Clear%2A> метода.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A> метод для <xref:System.Web.UI.WebControls.TreeNodeBinding> удаления объекта программным способом из <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> объекта. Чтобы этот пример работал правильно, необходимо скопировать XML-данные, расположенные в конце этого раздела, в файл с именем Book. XML.  
  
 [!code-aspx-csharp[TreeNodeBindingCollectionAdd#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingCollectionAdd/CS/treenodebindingcollectionaddcs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingCollectionAdd#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingCollectionAdd/VB/treenodebindingcollectionaddvb.aspx#1)]  
  
 Ниже приведен XML-данные для предыдущего примера кода.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
        <Section Heading="Section 2"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="treeNodeBindingCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Отсчитываемый от нуля индекс расположения удаляемого объекта <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" />.</param>
        <summary>Удаляет объект <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> по указанному индексу из объекта <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод для <xref:System.Web.UI.WebControls.TreeNodeBinding> удаления объекта, расположенного в `index` , <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> из объекта. <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A> Все элементы, которые следуют за этим узлом, затем перемещаются вверх, чтобы заполнить вакантное расположение. Индексы перемещенных элементов также обновляются.  
  
 В качестве альтернативы можно удалить конкретный <xref:System.Web.UI.WebControls.TreeNodeBinding> объект с <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A> помощью метода. Можно также удалить каждый узел в коллекции с помощью <xref:System.Web.UI.StateManagedCollection.Clear%2A> метода.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A> метод для <xref:System.Web.UI.WebControls.TreeNodeBinding> удаления объекта программным способом из <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> объекта. Чтобы этот пример работал правильно, необходимо скопировать XML-данные, расположенные в конце этого раздела, в файл с именем Book. XML.  
  
 [!code-aspx-csharp[TreeNodeBindingCollectionInsert#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeBindingCollectionInsert/CS/treenodebindingcollectioninsertcs.aspx#1)]
 [!code-aspx-vb[TreeNodeBindingCollectionInsert#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeBindingCollectionInsert/VB/treenodebindingcollectioninsertvb.aspx#1)]  
  
 Ниже приведен XML-данные для предыдущего примера кода.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
        <Section Heading="Section 2"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1"  
            Subject="Subject 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)" />
      </Docs>
    </Member>
    <Member MemberName="SetDirtyObject">
      <MemberSignature Language="C#" Value="protected override void SetDirtyObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDirtyObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetDirtyObject (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetDirtyObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.SetDirtyObject : obj -&gt; unit" Usage="treeNodeBindingCollection.SetDirtyObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
