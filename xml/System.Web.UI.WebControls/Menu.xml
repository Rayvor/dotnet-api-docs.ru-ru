<Type Name="Menu" FullName="System.Web.UI.WebControls.Menu">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b8d95e6ec9c8aa1aca71f7b8e760f38fc6b5dcb6" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70630916" /></Metadata><TypeSignature Language="C#" Value="public class Menu : System.Web.UI.WebControls.HierarchicalDataBoundControl, System.Web.UI.INamingContainer, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Menu extends System.Web.UI.WebControls.HierarchicalDataBoundControl implements class System.Web.UI.INamingContainer, class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Menu" />
  <TypeSignature Language="VB.NET" Value="Public Class Menu&#xA;Inherits HierarchicalDataBoundControl&#xA;Implements INamingContainer, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class Menu : System::Web::UI::WebControls::HierarchicalDataBoundControl, System::Web::UI::INamingContainer, System::Web::UI::IPostBackEventHandler" />
  <TypeSignature Language="F#" Value="type Menu = class&#xA;    inherit HierarchicalDataBoundControl&#xA;    interface IPostBackEventHandler&#xA;    interface INamingContainer" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HierarchicalDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("MenuItemClick")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.MenuDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.MenuDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Отображает меню на веб-странице ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В этом разделе.  
  
-   [Введение](#introduction)  
  
-   [Пункты меню](#menu_items)  
  
-   [Статические данные](#static_data)  
  
-   [Привязка к данным](#binding_to_data)  
  
-   [Настройка пользовательского интерфейса](#customizing_the_user_interface)  
  
-   [События](#events)  
  
-   [Специальные возможности](#accessibility)  
  
-   [Декларативный синтаксис](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Вступление  
 Элемент управления используется для вывода меню на веб-странице ASP.NET и часто используется в сочетании <xref:System.Web.UI.WebControls.SiteMapDataSource> с элементом управления для навигации по веб-сайту. <xref:System.Web.UI.WebControls.Menu> <xref:System.Web.UI.WebControls.Menu> Элемент управления поддерживает следующие функции:  
  
-   Привязка данных, позволяющая привязывать элементы меню элемента управления к иерархическим источникам данных.  
  
-   Навигация по сайту с помощью интеграции <xref:System.Web.UI.WebControls.SiteMapDataSource> с элементом управления.  
  
-   Программный доступ к <xref:System.Web.UI.WebControls.Menu> объектной модели для динамического создания меню, заполнения пунктов меню, установки свойств и т. д.  
  
-   Настраиваемый внешний вид с помощью тем, определяемых пользователем изображений, стилей и определяемых пользователем шаблонов.  
  
 Когда пользователь щелкает элемент меню, <xref:System.Web.UI.WebControls.Menu> элемент управления может перейти на связанную веб-страницу или просто выполнить обратную передачу на сервер. Если свойство элемента меню задано <xref:System.Web.UI.WebControls.Menu> , элемент управления переходит на связанную страницу. в противном случае она отправляет страницу обратно на сервер для обработки. <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> По умолчанию связанная страница отображается в том же окне или фрейме, что <xref:System.Web.UI.WebControls.Menu> и элемент управления. Чтобы отобразить связанное содержимое в другом окне или рамке, используйте <xref:System.Web.UI.WebControls.Menu.Target%2A> свойство <xref:System.Web.UI.WebControls.Menu> элемента управления.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Menu.Target%2A> Свойство влияет на каждый пункт меню в элементе управления. Чтобы задать окно или фрейм для отдельного элемента меню, непосредственно задайте <xref:System.Web.UI.WebControls.MenuItem.Target%2A> свойство <xref:System.Web.UI.WebControls.MenuItem> объекта.  
  
 <xref:System.Web.UI.WebControls.Menu> Элемент управления отображает два типа меню: статическое меню и динамическое меню. Статическое меню всегда отображается в <xref:System.Web.UI.WebControls.Menu> элементе управления. По умолчанию пункты меню на корневом уровне (уровень 0) отображаются в статическом меню. Можно отобразить дополнительные уровни меню (статические подменю) в статическом меню, задав <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> свойство. Элементы меню (если они есть) с более высоким уровнем, чем значение, заданное <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> свойством, отображаются в динамическом меню. Динамическое меню появляется только в том случае, если пользователь позиционирует указатель мыши на родительский элемент меню, содержащий динамическое подменю. Динамические меню автоматически исчезают после определенной длительности. Чтобы указать длительность, используйте свойство. <xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A>  
  
> [!NOTE]
>  Динамическое меню также исчезает, когда пользователь щелкает за пределами меню.  
  
 Можно также ограничить число уровней, отображаемых в динамическом меню, задав <xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A> свойство. Уровни меню выше указанного значения отбрасываются.  
  
> [!NOTE]
>  Элемент управления не предназначен для использования <xref:System.Web.UI.UpdatePanel> внутри элемента управления. <xref:System.Web.UI.WebControls.Menu> <xref:System.Web.UI.WebControls.Menu> Элемент управления можно добавить только на страницу <xref:System.Web.UI.UpdatePanel> за пределами элемента управления. <xref:System.Web.UI.UpdatePanel>элементы управления используются для обновления выбранных областей страницы вместо обновления всей страницы с помощью обратной передачи. Дополнительные сведения см. в разделе [Общие сведения об элементе управления UpdatePanel](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) и [Общие сведения о частичной отрисовке страниц](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
<a name="menu_items"></a>   
## <a name="menu-items"></a>Пункты меню  
 Элемент управления состоит из дерева пунктов меню, <xref:System.Web.UI.WebControls.MenuItem> представленных объектами. <xref:System.Web.UI.WebControls.Menu> Пункты меню на верхнем уровне (уровень 0) называются элементами корневого меню. Элемент меню, имеющий родительский элемент меню, называется дочерним элементом меню. Все корневые элементы меню хранятся в <xref:System.Web.UI.WebControls.Menu.Items%2A> коллекции. Дочерние пункты меню хранятся в <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> коллекции элементов родительского меню.  
  
 Каждый пункт меню имеет <xref:System.Web.UI.WebControls.MenuItem.Text%2A> <xref:System.Web.UI.WebControls.MenuItem.Value%2A> свойства и. Значение <xref:System.Web.UI.WebControls.MenuItem.Text%2A> свойства отображается <xref:System.Web.UI.WebControls.Menu> в элементе управления, а <xref:System.Web.UI.WebControls.MenuItem.Value%2A> свойство используется для хранения дополнительных данных об элементе меню, например данных, передаваемых в событие обратной передачи, связанное с пунктом меню. При нажатии пункта меню можно переходить на другую веб-страницу, указанную <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> свойством.  
  
> [!NOTE]
>  Если свойство не задано для пункта меню <xref:System.Web.UI.WebControls.Menu> , элемент управления просто отправляет страницу на сервер для обработки при нажатии пункта меню. <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>  
  
 При необходимости можно также отобразить изображение в пункте меню, задав <xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A> свойство.  
  
 Дополнительные сведения о пунктах меню см. <xref:System.Web.UI.WebControls.MenuItem>в разделе.  
  
<a name="static_data"></a>   
## <a name="static-data"></a>Статические данные  
 Простейшая модель <xref:System.Web.UI.WebControls.Menu> данных элемента управления — это статические пункты меню. Чтобы отобразить элементы статического меню с помощью декларативного синтаксиса, сначала вложенные открывающие и закрывающие `<Items>` теги между открывающим и закрывающим тегами <xref:System.Web.UI.WebControls.Menu> элемента управления. Затем создайте структуру меню, добавив вложенные `<asp:MenuItem>` элементы между открывающим и закрывающим `<Items>` тегами. Каждый `<asp:MenuItem>` элемент представляет пункт меню в элементе управления и сопоставляется <xref:System.Web.UI.WebControls.MenuItem> с объектом. Свойства каждого пункта меню можно задать, задав атрибуты его `<asp:MenuItem>` элемента. Чтобы создать элементы подменю, вложите `<asp:MenuItem>` дополнительные элементы между открывающим и `<asp:MenuItem>` закрывающим тегами пункта родительского меню.  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>Привязка к данным  
 Элемент управления может использовать любой элемент управления источником иерархических данных, например <xref:System.Web.UI.WebControls.XmlDataSource> элемент управления или <xref:System.Web.UI.WebControls.SiteMapDataSource> элемент управления. <xref:System.Web.UI.WebControls.Menu> Чтобы выполнить привязку к элементу управления источника иерархических данных <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> , присвойте <xref:System.Web.UI.WebControls.Menu> свойству элемента <xref:System.Web.UI.Control.ID%2A> управления значение, равное значению элемента управления источника данных. <xref:System.Web.UI.WebControls.Menu> Элемент управления автоматически привязывается к указанному элементу управления источником данных. Это предпочтительный метод для привязки к данным.  
  
 При привязке к источнику данных, где каждый элемент данных содержит несколько свойств (например, элемент XML с несколькими атрибутами), элемент меню отображает значение, возвращаемое `ToString` методом элемента данных по умолчанию. В случае XML-элемента элемент меню отображает имя элемента, которое показывает базовую структуру дерева меню, но не очень полезно в противном случае. Элемент меню можно привязать к определенному свойству элемента данных, используя <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> коллекцию для указания привязок пунктов меню. <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> Коллекция содержит <xref:System.Web.UI.WebControls.MenuItemBinding>  объекты, определяющие связь между элементом данных и пунктом меню, к которому он привязан. Можно указать критерии для привязки и свойство элемента данных, которые будут отображаться в узле. Дополнительные сведения о привязках пунктов меню см. в <xref:System.Web.UI.WebControls.MenuItemBinding>разделе.  
  
 Нельзя создать пустые узлы в <xref:System.Web.UI.WebControls.Menu> элементе управления, <xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A> задав для свойств или <xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A> пустую строку (""). Присвоение этим свойствам пустой строки приведет к тому же результату, что и при задании свойств. В этом случае <xref:System.Web.UI.WebControls.Menu> элемент управления создает привязку по умолчанию <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> с помощью свойства. Дополнительные сведения см. [в разделе Привязка к базам данных](https://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742).  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>Настройка пользовательского интерфейса  
 Существует множество способов настройки внешнего вида <xref:System.Web.UI.WebControls.Menu> элемента управления. Во-первых, можно указать, <xref:System.Web.UI.WebControls.Menu> должен ли элемент управления подготавливаться горизонтально или <xref:System.Web.UI.WebControls.Menu.Orientation%2A> вертикально, задав свойство. Можно также указать другой стиль (например, размер и цвет шрифта) для каждого из типов элементов меню.  
  
 Если для настройки внешнего вида элемента управления используются каскадные таблицы стилей (CSS), используйте либо встроенные стили, либо отдельный CSS-файл, но не оба. Использование обоих встроенных стилей и отдельного CSS-файла может привести к непредвиденным результатам. Дополнительные сведения об использовании таблиц стилей с элементами управления см. в разделе [элементы управления веб-сервера и стили CSS](https://msdn.microsoft.com/library/782c2db6-fc9b-4243-8df9-a8ffe2f4cc42).  
  
 В следующей таблице перечислены доступные стили пунктов меню.  
  
|Свойство стиля пункта меню|Описание|  
|------------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>|Параметры стиля для элемента динамического меню при помещении на него указателя мыши.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>|Параметры стиля для отдельного элемента динамического меню.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>|Параметры стиля для динамического меню.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>|Параметры стиля для выбранного в данный момент элемента динамического меню.|  
|<xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>|Параметры стиля для элемента статического меню при помещении на него указателя мыши.|  
|<xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>|Параметры стиля для отдельного элемента статического меню.|  
|<xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>|Параметры стиля для статического меню.|  
|<xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>|Параметры стиля для выбранного в данный момент элемента статического меню.|  
  
 Вместо настройки отдельных свойств стиля можно указать стили, применяемые к пунктам меню на основе их уровня, используя следующие коллекции стилей.  
  
|Коллекции стилей уровней|Описание|  
|-----------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>|Коллекция <xref:System.Web.UI.WebControls.MenuItemStyle> объектов, управляющих стилем пунктов меню на уровне каждого уровня.|  
|<xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A>|Коллекция <xref:System.Web.UI.WebControls.MenuItemStyle> объектов, управляющих стилем выбранных пунктов меню на уровне каждого уровня.|  
|<xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A>|Коллекция <xref:System.Web.UI.WebControls.MenuItemStyle> объектов, управляющих стилем пунктов подменю на уровне каждого уровня.|  
  
 Первый стиль в коллекции соответствует стилю пунктов меню на первом уровне глубины в дереве меню. Второй стиль в коллекции соответствует стилю пунктов меню на втором уровне глубины в дереве меню и т. д. Чаще всего это используется для создания таблицы меню навигации в стиле содержимого, где пункты меню в определенной глубине должны иметь одинаковый внешний вид независимо от того, есть ли в них подменю.  
  
> [!NOTE]
>  При использовании любой из коллекций стилей уровней, перечисленных в предыдущей таблице, для определения стиля <xref:System.Web.UI.WebControls.Menu> элемента управления, эти параметры стиля переопределяют свойства стиля отдельных пунктов меню.  
  
 Другим способом изменения внешнего вида элемента управления является настройка изображений, отображаемых в <xref:System.Web.UI.WebControls.Menu> элементе управления. Можно указать собственный пользовательский образ для различных частей элемента управления, задав свойства, показанные в следующей таблице.  
  
|Свойство Image|Описание|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A>|Необязательное изображение, отображаемое в нижней части элемента динамического меню для отделения его от других пунктов меню.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>|Необязательное изображение, отображаемое в пункте динамического меню для указания, что у него есть подменю.|  
|<xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A>|Необязательное изображение, отображаемое в верхней части элемента динамического меню, чтобы отделить его от других пунктов меню.|  
|<xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A>|Изображение, отображаемое в нижней части пункта меню и указывающее, что пользователь может прокручивать вниз для просмотра дополнительных пунктов меню.|  
|<xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A>|Изображение, отображаемое в верхней части пункта меню и указывающее, что пользователь может прокручивать окно вверх для просмотра дополнительных пунктов меню.|  
|<xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A>|Необязательное изображение, отображаемое в нижней части статического пункта меню, чтобы отделить его от других пунктов меню.|  
|<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>|Необязательное изображение, отображаемое в пункте статического меню для указания того, что у него есть подменю.|  
|<xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A>|Необязательное изображение, отображаемое в верхней части элемента статического меню, чтобы отделить его от других пунктов меню.|  
  
 Для полного управления пользовательским интерфейсом можно определить собственные пользовательские шаблоны для <xref:System.Web.UI.WebControls.Menu> элемента управления, используя следующие свойства шаблона.  
  
|Свойство шаблона|Описание|  
|-----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicItemTemplate%2A>|Шаблон, содержащий настраиваемое содержимое для отображения в элементе динамического меню.|  
|<xref:System.Web.UI.WebControls.Menu.StaticItemTemplate%2A>|Шаблон, содержащий настраиваемое содержимое для отображения в статическом элементе меню.|  
  
 Можно управлять вертикальным и горизонтальным положением динамического меню относительно родительского пункта меню, задав <xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A> свойства и <xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A> соответственно. Для управления отступом статических элементов вложенного меню в статическом меню используйте <xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A> свойство.  
  
<a name="events"></a>   
## <a name="events"></a>События  
 <xref:System.Web.UI.WebControls.Menu> Элемент управления предоставляет несколько событий, по которым можно программировать. Это позволяет запускать пользовательскую подпрограммы при каждом возникновении события. В следующей таблице перечислены поддерживаемые события.  
  
|событие|Описание|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.MenuItemClick>|Происходит при щелчке пункта меню. Это событие обычно используется для синхронизации <xref:System.Web.UI.WebControls.Menu> элемента управления с другим элементом управления на странице.|  
|<xref:System.Web.UI.WebControls.Menu.MenuItemDataBound>|Происходит при привязке элемента меню к данным. Это событие обычно используется для изменения пункта меню перед его отрисовкой в <xref:System.Web.UI.WebControls.Menu> элементе управления.|  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>Специальные возможности  
 Сведения о том, как настроить этот элемент управления таким образом, чтобы он создавал разметку, которая соответствует стандартам специальных возможностей, см. [в разделе Специальные возможности в Visual Studio, ASP.NET](https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) и [ASP.NET и специальные возможности](https://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Декларативный синтаксис  
  
```  
<asp:Menu  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CssClass="string"  
    DataSource="string"  
    DataSourceID="string"  
    DisappearAfter="integer"  
    DynamicBottomSeparatorImageUrl="uri"  
    DynamicEnableDefaultPopOutImage="True|False"  
    DynamicHorizontalOffset="integer"  
    DynamicItemFormatString="string"  
    DynamicPopOutImageTextFormatString="string"  
    DynamicPopOutImageUrl="uri"  
    DynamicTopSeparatorImageUrl="uri"  
    DynamicVerticalOffset="integer"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    ItemWrap="True|False"  
    MaximumDynamicDisplayLevels="integer"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnMenuItemClick="MenuItemClick event handler"  
    OnMenuItemDataBound="MenuItemDataBound event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    Orientation="Horizontal|Vertical"  
    PathSeparator="string"  
    runat="server"  
    ScrollDownImageUrl="uri"  
    ScrollDownText="string"  
    ScrollUpImageUrl="uri"  
    ScrollUpText="string"  
    SkinID="string"  
    SkipLinkText="string"  
    StaticBottomSeparatorImageUrl="uri"  
    StaticDisplayLevels="integer"  
    StaticEnableDefaultPopOutImage="True|False"  
    StaticItemFormatString="string"  
    StaticPopOutImageTextFormatString="string"  
    StaticPopOutImageUrl="uri"  
    StaticSubMenuIndent="size"  
    StaticTopSeparatorImageUrl="uri"  
    Style="string"  
    TabIndex="integer"  
    Target="string"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <DataBindings>  
                <asp:MenuItemBinding  
                    DataMember="string"  
                    Depth="integer"  
                    Enabled="True|False"  
                    EnabledField="string"  
                    FormatString="string"  
                    ImageUrl="uri"  
                    ImageUrlField="string"  
                    NavigateUrl="uri"  
                    NavigateUrlField="string"  
                    PopOutImageUrl="uri"  
                    PopOutImageUrlField="string"  
                    Selectable="True|False"  
                    SelectableField="string"  
                    SeparatorImageUrl="uri"  
                    SeparatorImageUrlField="string"  
                    Target="string"  
                    TargetField="string"  
                    Text="string"  
                    TextField="string"  
                    ToolTip="string"  
                    ToolTipField="string"  
                    Value="string"  
                    ValueField="string"  
                />  
        </DataBindings>  
        <DynamicHoverStyle />  
        <DynamicItemTemplate>  
            <!-- child controls -->  
        </DynamicItemTemplate>  
        <DynamicMenuItemStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <DynamicMenuStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <DynamicSelectedStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <Items />  
        <LevelMenuItemStyles>  
                <asp:MenuItemStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ItemSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelMenuItemStyles>  
        <LevelSelectedStyles>  
                <asp:MenuItemStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ItemSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelSelectedStyles>  
        <LevelSubMenuStyles>  
                <asp:SubMenuStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelSubMenuStyles>  
        <StaticHoverStyle />  
        <StaticItemTemplate>  
            <!-- child controls -->  
        </StaticItemTemplate>  
        <StaticMenuItemStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|  
                X-Small|Small|Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <StaticMenuStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <StaticSelectedStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
</asp:Menu>  
```  
  
   
  
## Examples  
 Проект веб-сайта Visual Studio с исходным кодом можно найти в этой статье: [download](https://go.microsoft.com/fwlink/?LinkId=192868).  
  
 В следующем примере кода показано, как создать <xref:System.Web.UI.WebControls.Menu> элемент управления со статическими элементами меню с помощью декларативного синтаксиса.  
  
 [!code-aspx-csharp[MenuDeclarative#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDeclarative/CS/menudeclarativecs.aspx#1)]
 [!code-aspx-vb[MenuDeclarative#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDeclarative/VB/menudeclarativevb.aspx#1)]  
  
 В следующем примере кода показано, как привязать <xref:System.Web.UI.WebControls.Menu> элемент управления <xref:System.Web.UI.WebControls.SiteMapDataSource> к элементу управления. Для правильной работы этого примера необходимо скопировать приведенные ниже данные карты сайта в файл с именем Web. sitemap.  
  
 [!code-aspx-csharp[MenuDataBind#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDataBind/CS/menudatabindcs.aspx#1)]
 [!code-aspx-vb[MenuDataBind#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDataBind/VB/menudatabindvb.aspx#1)]  
  
 Ниже приведен пример данных схемы сайта для предыдущего примера.  
  
```  
<siteMap>  
  <siteMapNode url="~\Home.aspx"   
    title="Home"  
    description="Home">  
    <siteMapNode url="~\Music.aspx"  
      title="Music"  
      description="Music">  
      <siteMapNode url="~\Classical.aspx"   
        title="Classical"  
        description="Classical"/>  
      <siteMapNode url="~\Rock.aspx"  
        title="Rock"  
        description="Rock"/>  
      <siteMapNode url="~\Jazz.aspx"  
        title="Jazz"  
        description="Jazz"/>  
    </siteMapNode>  
    <siteMapNode url="~\Movies.aspx"  
      title="Movies"  
      description="Movies">  
      <siteMapNode url="~\Action.aspx"  
        title="Action"  
        description="Action"/>  
      <siteMapNode url="~\Drama.aspx"  
        title="Drama"  
        description="Drama"/>  
      <siteMapNode url="~\Musical.aspx"  
        title="Musical"  
        description="Musical"/>  
    </siteMapNode>  
  </siteMapNode>  
</siteMap>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Menu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Menu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот конструктор для создания и инициализации нового экземпляра <xref:System.Web.UI.WebControls.Menu> класса. Чтобы динамически добавить <xref:System.Web.UI.WebControls.Menu> элемент управления на страницу, создайте новый <xref:System.Web.UI.WebControls.Menu> объект, задайте его свойства, а <xref:System.Web.UI.Control.Controls%2A> затем добавьте его в <xref:System.Web.UI.WebControls.PlaceHolder>коллекцию элемента управления контейнера, например.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать конструктор для динамического добавления <xref:System.Web.UI.WebControls.Menu> элемента управления на страницу.  
  
 [!code-aspx-csharp[MenuCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuCtor/CS/menuctorcs.aspx#1)]
 [!code-aspx-vb[MenuCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuCtor/VB/menuctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Выходной поток, который осуществляет преобразование для просмотра содержимого HTML на клиентском компьютере.</param>
        <summary>Добавляет атрибуты и стили HTML, которые должны быть отображены в указанном объекте <see cref="T:System.Web.UI.HtmlTextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Элемент управления <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> переопределяет метод для сброса свойства в  <xref:System.String.Empty> .  <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A> <xref:System.Web.UI.WebControls.Menu> Этот член в основном используется разработчиками элементов управления при создании пользовательского элемента управления из <xref:System.Web.UI.WebControls.Menu> класса.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.WebControls.Menu.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию <see cref="T:System.Web.UI.ControlCollection" />, содержащую дочерние элементы управления элемента управления <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <value>Коллекция <see cref="T:System.Web.UI.ControlCollection" />, содержащая дочерние элементы управления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство обеспечивает программный доступ к экземпляру <xref:System.Web.UI.ControlCollection> класса для <xref:System.Web.UI.WebControls.Menu> элемента управления. <xref:System.Web.UI.WebControls.Menu.Controls%2A> Можно добавлять элементы управления в коллекцию, удалять элементы управления из коллекции или выполнять перебор элементов управления сервера в коллекции.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="menu.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает дочерние элементы управления элемента управления <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член в основном используется разработчиками элементов управления при создании пользовательского элемента управления из <xref:System.Web.UI.WebControls.Menu> класса.  
  
 Этот метод вызывается инфраструктурой ASP.NET для уведомления всех элементов управления, использующих реализацию на основе композиции, включая элементы управления, <xref:System.Web.UI.WebControls.CompositeDataBoundControl> производные от и <xref:System.Web.UI.WebControls.CompositeControl>. для создания дочерних элементов управления, которые они содержат при подготовке к обратной передаче или подготовке к просмотру.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="menu.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Привязывает источник данных к элементу управления <see cref="T:System.Web.UI.WebControls.Menu" />. Наследовать этот метод нельзя.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот элемент используется преимущественно разработчиками элементов управления при создании пользовательского элемента управления из <xref:System.Web.UI.WebControls.Menu> класса.  
  
 Используйте метод для привязки данных из источника данных <xref:System.Web.UI.WebControls.Menu> к элементу управления. <xref:System.Web.UI.WebControls.Menu.DataBind%2A> Этот метод разрешает все выражения привязки данных в активном шаблоне элемента управления.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Элементы управления с привязкой к <see cref="M:System.Web.UI.WebControls.Menu.PerformDataBinding" /> данным должны <see cref="M:System.Web.UI.WebControls.Menu.DataBind" />переопределяться вместо. Если <see cref="M:System.Web.UI.WebControls.Menu.DataBind" /> переопределено <see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" /> , события и <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)" /> вызываются в неправильном порядке.</para></block>
      </Docs>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemBindingCollection DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemBindingCollection DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DataBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBindings As MenuItemBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemBindingCollection ^ DataBindings { System::Web::UI::WebControls::MenuItemBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBindings : System.Web.UI.WebControls.MenuItemBindingCollection" Usage="System.Web.UI.WebControls.Menu.DataBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuBindingsEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuBindingsEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию объектов <see cref="T:System.Web.UI.WebControls.MenuItemBinding" />, определяющих связь между элементом данных и пунктом меню, к которому он привязан.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />, представляющий связь между элементом данных и пунктом меню, к которому он привязан.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> Коллекция содержит <xref:System.Web.UI.WebControls.MenuItemBinding>  объекты, определяющие связь между элементом данных и пунктом меню, к которому он привязан. При привязке к источнику данных, где каждый элемент данных содержит несколько свойств (например, элемент XML с несколькими атрибутами), элемент меню отображает значение, возвращаемое `ToString()` методом элемента данных по умолчанию. В случае XML-элемента элемент меню отображает имя элемента, которое показывает базовую структуру дерева, но не очень полезно в противном случае. Элемент меню можно привязать к определенному свойству элемента данных, указав привязки пунктов меню.  
  
 При определении связи между элементом данных и пунктом меню необходимо указать как критерии привязки, так и свойство элемента данных для привязки. Критерий указывает, когда элемент данных должен быть привязан к пункту меню. Критерии можно указать с помощью глубины, элемента данных или и того и другого. Глубина определяет уровень меню, на который осуществляется привязка. Например, если указать глубину 0, все пункты меню в древовидной структуре на уровне 0 будут привязаны с помощью привязки пункта меню. Элемент данных указывает тип элемента данных в базовом источнике данных, но может представлять различные сведения в зависимости от источника данных. Например, элемент данных для элемента XML указывает имя элемента.  
  
 Если определено несколько <xref:System.Web.UI.WebControls.MenuItemBinding> объектов, которые конфликтуют друг с другом <xref:System.Web.UI.WebControls.Menu> , элемент управления применяет привязки пунктов меню в следующем порядке приоритета:  
  
1.  <xref:System.Web.UI.WebControls.MenuItemBinding> Объект, определяющий глубину и элемент данных.  
  
2.  <xref:System.Web.UI.WebControls.MenuItemBinding> Объект, определяющий только глубину.  
  
3.  <xref:System.Web.UI.WebControls.MenuItemBinding> Объект, определяющий только элемент данных.  
  
4.  <xref:System.Web.UI.WebControls.MenuItemBinding> Объект, который определяет глубину и элемент данных.  
  
 После установки критериев привязки можно привязать свойство <xref:System.Web.UI.WebControls.MenuItem> объекта, который может быть привязан к атрибуту или полю элемента данных. Например, можно привязать <xref:System.Web.UI.WebControls.MenuItem.Text%2A> свойство элемента меню к атрибуту Text элемента XML, <xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A> задав свойство <xref:System.Web.UI.WebControls.MenuItemBinding> объекта. Также можно выполнить привязку к статическому значению. Если задать <xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A> свойство <xref:System.Web.UI.WebControls.MenuItemBinding> объекта, то все пункты <xref:System.Web.UI.WebControls.MenuItemBinding> меню, к которым применяется этот объект, имеют одинаковое статическое текстовое значение. Дополнительные сведения о привязке свойств <xref:System.Web.UI.WebControls.MenuItem> объекта к значению см. в разделе. <xref:System.Web.UI.WebControls.MenuItemBinding>  
  
 Несмотря на <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> то, что коллекцию можно заполнять программным образом, она обычно задается декларативно. Чтобы указать привязки пунктов меню, сначала вложенные открывающие и закрывающие `<DataBindings>` теги между открывающим и закрывающим тегами <xref:System.Web.UI.WebControls.Menu> элемента управления. Затем поместите `<asp:MenuItemBinding>` элементы между открывающим и закрывающим `<DataBindings>` тегами для каждой привязки пункта меню, которую нужно указать.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> коллекцию для определения связи между полями <xref:System.Web.UI.WebControls.XmlDataSource> элемента управления и элементами меню в <xref:System.Web.UI.WebControls.Menu> элементе управления. Чтобы этот пример работал правильно, необходимо скопировать приведенный ниже образец XML-данных в файл с именем Map. XML.  
  
 [!code-aspx-csharp[MenuBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuBindings/CS/menubindingscs.aspx#1)]
 [!code-aspx-vb[MenuBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuBindings/VB/menubindingsvb.aspx#1)]  
  
 Ниже приведен пример данных схемы сайта для предыдущего примера.  
  
```  
<MapHomeNode url="~\Home.aspx"   
  title="Home"  
  description="Home">  
  <MapNode url="~\Music.aspx"  
    title="Music"  
    description="Music">  
    <MapNode url="~\Classical.aspx"   
      title="Classical"  
      description="Classical"/>  
    <MapNode url="~\Rock.aspx"  
      title="Rock"  
      description="Rock"/>  
    <MapNode url="~\Jazz.aspx"  
      title="Jazz"  
      description="Jazz"/>  
  </MapNode>  
  <MapNode url="~\Movies.aspx"  
    title="Movies"  
    description="Movies">  
    <MapNode url="~\Action.aspx"  
      title="Action"  
      description="Action"/>  
    <MapNode url="~\Drama.aspx"  
      title="Drama"  
      description="Drama"/>  
    <MapNode url="~\Musical.aspx"  
      title="Musical"  
      description="Musical"/>  
  </MapNode>  
</MapHomeNode>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBinding" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="DisappearAfter">
      <MemberSignature Language="C#" Value="public int DisappearAfter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DisappearAfter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DisappearAfter" />
      <MemberSignature Language="VB.NET" Value="Public Property DisappearAfter As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DisappearAfter { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DisappearAfter : int with get, set" Usage="System.Web.UI.WebControls.Menu.DisappearAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(500)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает длительность отображения динамического меню после перемещения указателя мыши за его пределы.</summary>
        <value>Количество времени (в миллисекундах), в течение которого отображается динамическое меню после перемещения указателя мыши за его пределы. Значение по умолчанию — 500.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию динамическое меню автоматически исчезает после определенной длительности, когда указатель мыши больше не находится в меню. Чтобы указать длительность, используйте свойство. <xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A>  
  
> [!NOTE]
>  Динамическое меню сразу же исчезает, если пользователь щелкает за пределами меню.  
  
 Можно также указать, что динамическое меню не должно автоматически исчезнуть, задав этому свойству значение-1. В этом случае элемент динамического меню исчезнет только тогда, когда пользователь щелкнет за пределами меню.  
  
 Значение для данного свойства нельзя задать с помощью тем или тем таблиц стилей. Дополнительные сведения см <xref:System.Web.UI.ThemeableAttribute> . в статьях и [ASP.NET Themes и обложки](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A> свойство, чтобы указать, что динамическое меню должно исчезнуть после того, как пользователь переместит указатель мыши из меню в течение более двух секунд.  
  
 [!code-aspx-csharp[MenuDisappearAfter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDisappearAfter/CS/menudisappearaftercs.aspx#1)]
 [!code-aspx-vb[MenuDisappearAfter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDisappearAfter/VB/menudisappearaftervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Выбранное значение меньше -1.</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicBottomSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicBottomSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicBottomSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicBottomSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicBottomSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicBottomSeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает URL-адрес изображения, которое отображается под пунктом динамического меню и отделяет его от остальных пунктов меню.</summary>
        <value>URL-адрес изображения-разделителя, отображаемого под каждым пунктом динамического меню. По умолчанию свойство содержит пустую строку (""), показывающую, что значение свойства не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A> Используйте свойство, чтобы указать необязательный пользовательский образ, который будет отображаться в нижней части каждого элемента динамического меню. Этот образ выступает в качестве разделителя между пунктами меню и обычно является изображением линии.  
  
> [!NOTE]
>  Можно также отобразить изображение разделителя в верхней части каждого элемента динамического меню, задав <xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A> свойство для отображения изображения-разделителя в нижней части каждого элемента динамического меню.  
  
 [!code-aspx-csharp[MenuDynamicBottomSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicBottomSeparatorImageUrl/CS/menudynamicbottomseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicBottomSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicBottomSeparatorImageUrl/VB/menudynamicbottomseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="DynamicEnableDefaultPopOutImage">
      <MemberSignature Language="C#" Value="public bool DynamicEnableDefaultPopOutImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DynamicEnableDefaultPopOutImage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicEnableDefaultPopOutImage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DynamicEnableDefaultPopOutImage { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicEnableDefaultPopOutImage : bool with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, будет ли отображаться встроенное изображение, свидетельствующее о том, что в пункте динамического меню есть вложенное меню.</summary>
        <value>Значение <see langword="true" /> для отображения встроенного изображения для пунктов динамического меню с вложенными меню; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если динамический элемент меню содержит подменю, можно отобразить изображение, чтобы указать, что пользователь может развернуть меню, наведя указатель мыши на пункт меню. Существует два способа отобразить это изображение:  
  
-   Задайте для <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> `true` свойства значение, чтобы использовать встроенное изображение (по умолчанию).  
  
-   <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> Задайте свойство, чтобы указать пользовательский образ.  
  
 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> Если свойство задано, это изображение переопределяет встроенное изображение.  
  
> [!NOTE]
>  Если свойство не задано <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> и свойство имеет значение `false`, изображение не отображается. <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>  
  
 Можно указать альтернативный текст для изображения, задав <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> свойство. Этот текст отображается в виде подсказки, когда пользователь позиционирует указатель мыши на изображение. Этот текст также предоставляет вспомогательные технологические устройства с описанием образа, который можно использовать, чтобы сделать элемент управления более доступным.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> свойства для скрытия изображения, указывающего, что в динамическом пункте меню есть подменю. Для скрытия изображения свойству также необходимо присвоить пустую строку (""). <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>  
  
 [!code-aspx-csharp[MenuDynamicEnableDefaultPopOutImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicEnableDefaultPopOutImage/CS/menudynamicenabledefaultpopoutimagecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicEnableDefaultPopOutImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicEnableDefaultPopOutImage/VB/menudynamicenabledefaultpopoutimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicHorizontalOffset">
      <MemberSignature Language="C#" Value="public int DynamicHorizontalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DynamicHorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicHorizontalOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DynamicHorizontalOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicHorizontalOffset : int with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает число пикселей смещения динамического меню по горизонтали относительно родительского пункта меню.</summary>
        <value>Число пикселей смещения динамического меню по горизонтали относительно родительского пункта меню. Значение по умолчанию — 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A> Используйте свойство, чтобы настроить горизонтальное расположение динамического меню относительно его родительского пункта меню. Это свойство влияет на положение динамического меню по-разному в зависимости от того, <xref:System.Web.UI.WebControls.Menu> отображается ли элемент управления вертикально или горизонтально (как указано <xref:System.Web.UI.WebControls.Menu.Orientation%2A> свойством). Различия описаны в следующей таблице.  
  
|Ориентация|Описание|  
|-----------------|-----------------|  
|Горизонтально|По умолчанию динамическое меню отображается непосредственно под родительским пунктом меню. При установке этого свойства положение динамического меню смещается по горизонтали от этой базовой должности.|  
|Вертикально|По умолчанию рядом с родительским пунктом меню отображается динамический элемент меню без промежутка между ними. Задание этого свойства управляет интервалом по горизонтали между динамическим меню и его родительским пунктом меню.|  
  
> [!NOTE]
>  Для этого свойства можно задать отрицательное значение, чтобы переместить динамическое меню в отрицательное направление. При отображении вертикального меню отрицательное значение приводит к наложению динамического меню и его родительского пункта меню.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A> свойство для задания разрыва в 5 пикселей между динамическим меню и его родительским пунктом меню.  
  
 [!code-aspx-csharp[MenuDynamicHorizontalOffset#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/CS/menudynamichorizontaloffsetcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicHorizontalOffset#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/VB/menudynamichorizontaloffsetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      </Docs>
    </Member>
    <Member MemberName="DynamicHoverStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style DynamicHoverStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style DynamicHoverStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicHoverStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ DynamicHoverStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicHoverStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает ссылку на объект <see cref="T:System.Web.UI.WebControls.Style" />, позволяющий задать внешний вид пункта динамического меню при наведении на него указателя мыши.</summary>
        <value>Ссылка на объект <see cref="T:System.Web.UI.WebControls.Style" />, представляющий стиль пункта динамического меню при наведении на него указателя мыши.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A> Свойство используется для управления внешним видом элемента динамического меню при помещении на него указателя мыши. Это свойство доступно только для чтения; Однако можно задать свойства <xref:System.Web.UI.WebControls.Style> возвращаемого объекта. Свойства `Property-Subproperty`можно задать декларативно в форме, где `Subproperty` <xref:System.Web.UI.WebControls.Style> — это свойство объекта (например, `DynamicHoverStyle-ForeColor`). Свойства также могут быть заданы программно в форме `Property.Subproperty` (например, `DynamicHoverStyle.ForeColor`).  
  
 Свойства стиля для элемента динамического меню применяются в следующем порядке:  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>. Если коллекция или <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> коллекция определены, они применяются в этот момент, переопределяя другие свойства стиля элемента меню. <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>. <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> Если коллекция определена, она применяется в этот момент, переопределяя другие свойства стиля элемента меню.  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A> свойство для изменения цвета фона элемента динамического меню на светло-голубой, когда пользователь позиционирует указатель мыши на него.  
  
 [!code-aspx-csharp[MenuDynamicHoverStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicHoverStyle/CS/menudynamichoverstylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicHoverStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicHoverStyle/VB/menudynamichoverstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicItemFormatString">
      <MemberSignature Language="C#" Value="public string DynamicItemFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicItemFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicItemFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicItemFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicItemFormatString : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает дополнительный текст, отображаемый вместе со всеми динамическими пунктами меню.</summary>
        <value>Дополнительный текст или символы, отображаемые вместе с пунктами меню. Значение этого свойства по умолчанию — "{0}."</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство можно использовать для вставки текста для форматирования элементов динамического меню в меню, которое отображается на мобильных устройствах. <xref:System.Web.UI.WebControls.Menu> Элемент управления поддерживает шаблоны для вывода статических и динамических пунктов меню. Для мобильных устройств шаблоны игнорируются, поэтому это свойство позволяет добавлять символы или текст для применения форматирования к пунктам меню без использования шаблона.  
  
> [!NOTE]
>  Чтобы обеспечить согласованное форматирование при использовании этого свойства, необходимо также задать <xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A> свойство, если форматирование должно быть одинаковым между статическими и динамическими элементами меню.  
  
 При применении форматирования шаблона и этого свойства форматирование шаблона не учитывается для мобильных устройств.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A> свойства и <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> для добавления текста в каждый пункт меню.  
  
 [!code-aspx-csharp[MenuItemFormatString#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemFormatString/CS/menuitemformatstringcs.aspx#1)]
 [!code-aspx-vb[MenuItemFormatString#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemFormatString/VB/menuitemformatstringvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticItemFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicItemTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate DynamicItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate DynamicItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ DynamicItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.MenuItemTemplateContainer))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает шаблон, содержащий настраиваемое содержимое, преобразовываемое для отображения в динамическом меню.</summary>
        <value>Объект <see cref="T:System.Web.UI.ITemplate" />, содержащий настраиваемое содержимое для динамического меню. По умолчанию свойство имеет значение NULL, показывающее, что значение свойства не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вместо использования встроенной отрисовки для динамического меню можно определить собственный внешний вид для динамического меню с помощью <xref:System.Web.UI.WebControls.Menu.DynamicItemTemplate%2A> свойства. Чтобы указать пользовательский шаблон для элемента динамического меню, сначала поместите `<DynamicItemTemplate>` теги между открывающим и закрывающим тегами <xref:System.Web.UI.WebControls.Menu> элемента управления. Затем можно перечислить содержимое шаблона между открывающим и закрывающим `<DynamicItemTemplate>` тегами. Можно дополнительно управлять стилем динамического меню с помощью <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> свойства.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicMenuItemStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle DynamicMenuItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle DynamicMenuItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicMenuItemStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ DynamicMenuItemStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicMenuItemStyle : System.Web.UI.WebControls.MenuItemStyle" Usage="System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает ссылку на объект <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />, позволяющий задать внешний вид пунктов динамического меню.</summary>
        <value>Ссылка на объект <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />, представляющий стиль пунктов динамического меню.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A> Свойство используется для управления внешним видом пунктов меню в динамическом меню. Это свойство доступно только для чтения; Однако можно задать свойства <xref:System.Web.UI.WebControls.MenuItemStyle> возвращаемого объекта. Свойства `Property-Subproperty`можно задать декларативно в форме, где `Subproperty` <xref:System.Web.UI.WebControls.MenuItemStyle> — это свойство объекта (например, `DynamicMenuItemStyle-ForeColor`). Свойства также могут быть заданы программно в форме `Property.Subproperty` (например, `DynamicMenuItemStyle.ForeColor`).  
  
 Свойства стиля для элемента динамического меню применяются в следующем порядке:  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>. Если коллекция или <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> коллекция определены, они применяются в этот момент, переопределяя другие свойства стиля элемента меню. <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>. <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> Если коллекция определена, она применяется в этот момент, переопределяя другие свойства стиля элемента меню.  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A> свойство, чтобы задать голубой цвет фона для пунктов меню в динамическом меню.  
  
 [!code-aspx-csharp[MenuDynamicMenuItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/menudynamicmenuitemstyle/CS/MenuDynamicMenuItemStylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicMenuItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/menudynamicmenuitemstyle/VB/MenuDynamicMenuItemStylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicMenuStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyle DynamicMenuStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SubMenuStyle DynamicMenuStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicMenuStyle As SubMenuStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SubMenuStyle ^ DynamicMenuStyle { System::Web::UI::WebControls::SubMenuStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicMenuStyle : System.Web.UI.WebControls.SubMenuStyle" Usage="System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает ссылку на объект <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />, позволяющий задать внешний вид динамического меню.</summary>
        <value>Ссылка на объект <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />, представляющий стиль динамического меню.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A> Свойство используется для управления внешним видом динамического меню. Это свойство доступно только для чтения; Однако можно задать свойства <xref:System.Web.UI.WebControls.MenuItemStyle> возвращаемого объекта. Свойства `Property-Subproperty`можно задать декларативно в форме, где `Subproperty` <xref:System.Web.UI.WebControls.MenuItemStyle> — это свойство объекта (например, `DynamicMenuStyle-ForeColor`). Свойства также могут быть заданы программно в форме `Property.Subproperty` (например, `DynamicMenuStyle.ForeColor`).  
  
 Свойства стиля для элемента динамического меню применяются в следующем порядке:  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>. Если коллекция или <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> коллекция определены, они применяются в этот момент, переопределяя другие свойства стиля элемента меню. <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>. <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> Если коллекция определена, она применяется в этот момент, переопределяя другие свойства стиля элемента меню.  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A> свойство, чтобы задать светло-голубой цвет фона для динамического меню.  
  
 [!code-aspx-csharp[MenuDynamicMenuStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicMenuStyle/CS/menudynamicmenustylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicMenuStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicMenuStyle/VB/menudynamicmenustylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicPopOutImageTextFormatString">
      <MemberSignature Language="C#" Value="public string DynamicPopOutImageTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicPopOutImageTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicPopOutImageTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicPopOutImageTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicPopOutImageTextFormatString : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает альтернативный текст для изображения, свидетельствующий о том, что в пункте динамического меню есть вложенное меню.</summary>
        <value>Альтернативный текст для изображения, свидетельствующий о том, что в пункте динамического меню есть вложенное меню. По умолчанию используется пустая строка (""), указывающая, что это свойство не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если динамический элемент меню содержит подменю, можно отобразить изображение, чтобы указать, что пользователь может развернуть меню. <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> Используйте свойство, чтобы указать альтернативный текст для этого изображения. Указанный текст предоставляет специальные технологические устройства с описанием образа, который можно использовать, чтобы сделать элемент управления более доступным.  
  
 Существует два способа отобразить изображение:  
  
-   Задайте для <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> `true` свойства значение, чтобы использовать встроенное изображение (по умолчанию).  
  
-   <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> Задайте свойство, чтобы указать пользовательский образ.  
  
> [!NOTE]
>  Это свойство применяется как к встроенному, так и к пользовательскому образу.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> свойство, чтобы указать альтернативный текст для изображения, которое указывает, что в элементе динамического меню есть подменю. Этот текст отображается в виде подсказки, когда пользователь позиционирует указатель мыши на изображение.  
  
 [!code-aspx-csharp[MenuDynamicPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicPopoutImageText/CS/menudynamicpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicPopoutImageText/VB/menudynamicpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicPopOutImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicPopOutImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicPopOutImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicPopOutImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicPopOutImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicPopOutImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает URL-адрес пользовательского изображения, отображаемого в пункте динамического меню при наличии в нем вложенного меню.</summary>
        <value>URL-адрес изображения, свидетельствующий о том, что в пункте динамического меню есть вложенное меню. По умолчанию свойство содержит пустую строку (""), показывающую, что значение свойства не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если динамический элемент меню содержит подменю, можно отобразить изображение, чтобы указать, что пользователь может развернуть меню, наведя указатель мыши на пункт меню. Существует два способа отобразить это изображение:  
  
-   Задайте для <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> `true` свойства значение, чтобы использовать встроенное изображение (по умолчанию).  
  
-   <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> Задайте свойство, чтобы указать пользовательский образ.  
  
 <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> Если свойство задано, это изображение переопределяет встроенное изображение.  
  
 Если свойство не задано <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> и свойство имеет значение `false`, изображение не отображается. <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>  
  
> [!NOTE]
>  При задании этого свойства используйте знак косой черты (/) вместо обратной косой черты (\\). Если в пути используются обратные косые черты, указанное изображение не будет отображаться.  
  
 Можно указать альтернативный текст для изображения, задав <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> свойство для задания пользовательского изображения, отображаемого в пункте динамического меню, чтобы указать, что у пункта меню есть подменю.  
  
 [!code-aspx-csharp[MenuDynamicPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicPopoutImageText/CS/menudynamicpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicPopoutImageText/VB/menudynamicpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicSelectedStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle DynamicSelectedStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle DynamicSelectedStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynamicSelectedStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ DynamicSelectedStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicSelectedStyle : System.Web.UI.WebControls.MenuItemStyle" Usage="System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает ссылку на объект <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />, позволяющий задать внешний вид выбранного пользователем пункта динамического меню.</summary>
        <value>Ссылка на объект <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />, представляющий стиль выбранного пункта динамического меню.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> Свойство используется для управления внешним видом элемента динамического меню, когда пользователь выбирает его из меню. Это свойство доступно только для чтения; Однако можно задать свойства <xref:System.Web.UI.WebControls.MenuItemStyle> возвращаемого объекта. Свойства `Property-Subproperty`можно задать декларативно в форме, где `Subproperty` <xref:System.Web.UI.WebControls.MenuItemStyle> — это свойство объекта (например, `DynamicSelectedStyle-ForeColor`). Свойства также могут быть заданы программно в форме `Property.Subproperty` (например, `DynamicSelectedStyle.ForeColor`).  
  
 Свойства стиля для элемента динамического меню применяются в следующем порядке:  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>. Если коллекция или <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> коллекция определены, они применяются в этот момент, переопределяя другие свойства стиля элемента меню. <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>. <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> Если коллекция определена, она применяется в этот момент, переопределяя другие свойства стиля элемента меню.  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> свойство, чтобы указать светло-синий цвет фона для выбранного динамического пункта меню.  
  
 [!code-aspx-csharp[MenuDynamicSelectedStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicSelectedStyle/CS/menudynamicselectedstylecs.aspx#1)]
 [!code-aspx-vb[MenuDynamicSelectedStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicSelectedStyle/VB/menudynamicselectedstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicTopSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicTopSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicTopSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicTopSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicTopSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicTopSeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает URL-адрес изображения, которое отображается над пунктом динамического меню и отделяет его от остальных пунктов меню.</summary>
        <value>URL-адрес изображения-разделителя, отображаемого над каждым пунктом динамического меню. По умолчанию свойство содержит пустую строку (""), показывающую, что значение свойства не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A> Используйте свойство, чтобы указать необязательный пользовательский образ, отображаемый в верхней части каждого элемента динамического меню. Этот образ выступает в качестве разделителя между пунктами меню и обычно является изображением линии.  
  
> [!NOTE]
>  Можно также отобразить изображение разделителя в нижней части каждого элемента динамического меню, задав <xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A> свойство для отображения изображения-разделителя в верхней части каждого элемента динамического меню.  
  
 [!code-aspx-csharp[MenuDynamicTopSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicTopSeparatorImageUrl/CS/menudynamictopseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicTopSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicTopSeparatorImageUrl/VB/menudynamictopseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="DynamicVerticalOffset">
      <MemberSignature Language="C#" Value="public int DynamicVerticalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DynamicVerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicVerticalOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DynamicVerticalOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicVerticalOffset : int with get, set" Usage="System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает число пикселей смещения динамического меню по вертикали относительно родительского пункта меню.</summary>
        <value>Число пикселей смещения динамического меню по вертикали относительно родительского пункта меню. Значение по умолчанию — 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A> Используйте свойство, чтобы настроить вертикальное расположение динамического меню относительно его родительского пункта меню. Это свойство влияет на положение динамического меню по-разному в зависимости от того, <xref:System.Web.UI.WebControls.Menu> отображается ли элемент управления вертикально или горизонтально (как указано <xref:System.Web.UI.WebControls.Menu.Orientation%2A> свойством). Различия описаны в следующей таблице.  
  
|Ориентация|Описание|  
|-----------------|-----------------|  
|Горизонтально|По умолчанию динамическое меню отображается непосредственно под родительским элементом меню без промежутка между ними. Задание этого свойства управляет интервалом по вертикали между динамическим меню и его родительским пунктом меню.|  
|Вертикально|По умолчанию динамический элемент меню отображается рядом с родительским элементом меню с согласованными верхними краями. Задание этого свойства смещает расположение динамического меню по вертикали от этой базовой должности.|  
  
> [!NOTE]
>  Для этого свойства можно задать отрицательное значение, чтобы переместить динамическое меню в отрицательное направление. При отображении горизонтального меню отрицательное значение приводит к наложению динамического меню и его родительского пункта меню.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A> свойство для сдвига динамического меню на 10 пикселей от верхнего края родительского пункта меню.  
  
 [!code-aspx-csharp[MenuDynamicHorizontalOffset#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/CS/menudynamichorizontaloffsetcs.aspx#1)]
 [!code-aspx-vb[MenuDynamicHorizontalOffset#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/VB/menudynamichorizontaloffsetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Orientation" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected override void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.EnsureDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EnsureDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EnsureDataBound();" />
      <MemberSignature Language="F#" Value="override this.EnsureDataBound : unit -&gt; unit" Usage="menu.EnsureDataBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Перед вызовом метода <see cref="M:System.Web.UI.WebControls.Menu.DataBind" /> проверяет, нужна ли привязка данных для элемента управления меню и задан ли допустимый элемент управления источниками данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Этот метод используется главным образом разработчиками элементов управления для расширения <xref:System.Web.UI.WebControls.Menu> элемента управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindItem">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItem FindItem (string valuePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.MenuItem FindItem(string valuePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.FindItem(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItem (valuePath As String) As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::MenuItem ^ FindItem(System::String ^ valuePath);" />
      <MemberSignature Language="F#" Value="member this.FindItem : string -&gt; System.Web.UI.WebControls.MenuItem" Usage="menu.FindItem valuePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valuePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valuePath">Путь к значению, соответствующему пункту меню, который необходимо извлечь.</param>
        <summary>Извлекает пункт меню по указанному пути к значению.</summary>
        <returns>Объект <see cref="T:System.Web.UI.WebControls.MenuItem" />, представляющий пункт меню по указанному пути к значению.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод для <xref:System.Web.UI.WebControls.MenuItem> получения объекта из <xref:System.Web.UI.WebControls.Menu> элемента управления. <xref:System.Web.UI.WebControls.Menu.FindItem%2A> Чтобы получить <xref:System.Web.UI.WebControls.MenuItem> объект, необходимо указать путь к пункту меню. Путь к меню представляет собой строку с разделителями, которая формирует путь от корневого пункта меню к текущему пункту меню. Чтобы определить символ разделителя, используйте <xref:System.Web.UI.WebControls.Menu.PathSeparator%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.FindItem%2A> метод для получения пункта меню <xref:System.Web.UI.WebControls.Menu> из элемента управления по указанному пути к значению.  
  
 [!code-aspx-csharp[MenuPathSeparator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuPathSeparator/CS/menupathseparatorcs.aspx#1)]
 [!code-aspx-vb[MenuPathSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuPathSeparator/VB/menupathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.PathSeparator" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignModeState">
      <MemberSignature Language="C#" Value="protected override System.Collections.IDictionary GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.IDictionary GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.GetDesignModeState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetDesignModeState () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::IDictionary ^ GetDesignModeState();" />
      <MemberSignature Language="F#" Value="override this.GetDesignModeState : unit -&gt; System.Collections.IDictionary" Usage="menu.GetDesignModeState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает состояние элемента управления <see cref="T:System.Web.UI.WebControls.Menu" /> во время разработки.</summary>
        <returns>Объект <see cref="T:System.Collections.IDictionary" />, содержащий данные о состоянии элемента управления <see cref="T:System.Web.UI.WebControls.Menu" /> во время разработки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод является вспомогательным методом, используемым для получения текущего состояния <xref:System.Web.UI.WebControls.Menu> времени разработки элемента управления. <xref:System.Web.UI.WebControls.Menu.GetDesignModeState%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IncludeStyleBlock">
      <MemberSignature Language="C#" Value="public bool IncludeStyleBlock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeStyleBlock" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.IncludeStyleBlock" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeStyleBlock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeStyleBlock { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeStyleBlock : bool with get, set" Usage="System.Web.UI.WebControls.Menu.IncludeStyleBlock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Description("Determines whether or not to render the inline style block (only used in standards compliance mode)")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, должна ли платформа ASP.NET отображать блок определений спецификации каскадных таблиц стилей (CSS) для стилей, используемых в меню.</summary>
        <value>Значение, указывающее, должна ли платформа ASP.NET отображать блок определений CSS для стилей, используемых в меню. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu> Элемент управления использует стили CSS для управления внешним видом в браузере. По умолчанию он отображает `style` элемент, содержащий определения CSS для используемых классов CSS. Это свойство `false` обычно устанавливается в следующие ситуации:  
  
-   Необходимо предоставить собственные определения CSS для настройки внешнего вида меню. Затем необходимо предоставить собственный блок определений CSS на странице или включить ссылку на внешний файл CSS, содержащий определения.  
  
-   Вы хотите использовать внешний вид по умолчанию, но не отключайте созданные определения CSS в отдельном файле. Затем необходимо указать файл и привязать к нему ссылку.  
  
 В любой из этих ситуаций можно получить копию блока CSS по умолчанию, <xref:System.Web.UI.WebControls.Menu> создаваемого элементом управления, задав `true`свойству значение, запустив страницу и просмотрев страницу в браузере. Затем можно просмотреть источник страницы в браузере и скопировать и вставить блок CSS в разметку страницы или в отдельный файл.  
  
 Если для `false`этого свойства задано значение, задать свойства стиля нельзя. Например, нельзя добавить `DynamicHoverStyle-ForeColor` атрибут в разметку или `DynamicHoverStyle.ForeColor` задать свойство в коде.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As MenuItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemCollection ^ Items { System::Web::UI::WebControls::MenuItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Web.UI.WebControls.MenuItemCollection" Usage="System.Web.UI.WebControls.Menu.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />, содержащий все пункты меню элемента управления <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />, содержащий все пункты меню в элементе управления <see cref="T:System.Web.UI.WebControls.Menu" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство (коллекция) используется для <xref:System.Web.UI.WebControls.MenuItemCollection> получения объекта, содержащего все пункты меню в <xref:System.Web.UI.WebControls.Menu> элементе управления. <xref:System.Web.UI.WebControls.Menu.Items%2A> Эта коллекция обычно используется для быстрого прохода по всем пунктам меню или для доступа к конкретному пункту меню.  
  
 <xref:System.Web.UI.WebControls.Menu.Items%2A> Коллекцию также можно использовать для программного управления элементами меню. Можно добавлять, вставлять, удалять и получать <xref:System.Web.UI.WebControls.MenuItem> объекты коллекции. Все обновления коллекции будут автоматически отражаться в <xref:System.Web.UI.WebControls.Menu> элементе управления после следующего цикла обработки на сервере.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.Items%2A> коллекцию для прохода по пунктам меню <xref:System.Web.UI.WebControls.Menu> в элементе управления.  
  
 [!code-aspx-csharp[MenuItems#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItems/CS/menuitemscs.aspx#1)]
 [!code-aspx-vb[MenuItems#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItems/VB/menuitemsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName="ItemWrap">
      <MemberSignature Language="C#" Value="public bool ItemWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ItemWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ItemWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ItemWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ItemWrap : bool with get, set" Usage="System.Web.UI.WebControls.Menu.ItemWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, нужно ли переносить текст пункта меню.</summary>
        <value>Значение <see langword="true" />, чтобы переносить текст пункта меню; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.ItemWrap%2A> Используйте свойство, чтобы указать, будет ли переноситься текст, отображаемый в каждом элементе меню. Когда текст заканчивается, он автоматически разбивается и продолжается в следующей строке.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.ItemWrap%2A> свойство для включения переноса текста <xref:System.Web.UI.WebControls.Menu> в элемент управления.  
  
 [!code-aspx-csharp[MenuItemWrap#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemWrap/CS/menuitemwrapcs.aspx#1)]
 [!code-aspx-vb[MenuItemWrap#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemWrap/VB/menuitemwrapvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Font" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ForeColor" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      </Docs>
    </Member>
    <Member MemberName="LevelMenuItemStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyleCollection LevelMenuItemStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyleCollection LevelMenuItemStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelMenuItemStyles As MenuItemStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyleCollection ^ LevelMenuItemStyles { System::Web::UI::WebControls::MenuItemStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LevelMenuItemStyles : System.Web.UI.WebControls.MenuItemStyleCollection" Usage="System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" />, содержащий параметры стиля, применяемые к пунктам меню в соответствии с их уровнем в элементе управления <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" />, содержащий параметры стиля, применяемые к пунктам меню в соответствии с их уровнем в элементе управления <see cref="T:System.Web.UI.WebControls.Menu" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте коллекцию в качестве альтернативы отдельным свойствам стиля (например, <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>), чтобы управлять стилем пунктов меню на отдельных уровнях меню. <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> Стили, содержащиеся в этой коллекции, применяются к пунктам меню на основе их уровня меню. Первый стиль в коллекции соответствует стилю пунктов меню на первом уровне меню. Второй стиль в коллекции соответствует стилю пунктов меню на втором уровне меню и т. д. Эта коллекция чаще всего используется для создания таблицы меню навигации в стиле содержимого, где пункты меню на определенном уровне должны иметь одинаковый внешний вид независимо от того, есть ли в них подменю.  
  
> [!NOTE]
>  Если стиль определяется для определенного уровня с помощью <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> коллекции, это переопределяет все параметры стиля элемента меню для пунктов меню на этом уровне.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> коллекцию для применения параметров стиля к пунктам меню <xref:System.Web.UI.WebControls.Menu> в элементе управления в зависимости от их уровня.  
  
 [!code-aspx-csharp[MenuLevelMenuItemStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuLevelMenuItemStyles/CS/menulevelmenuitemstylecs.aspx#1)]
 [!code-aspx-vb[MenuLevelMenuItemStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuLevelMenuItemStyles/VB/menulevelmenuitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelSelectedStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyleCollection LevelSelectedStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyleCollection LevelSelectedStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelSelectedStyles As MenuItemStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyleCollection ^ LevelSelectedStyles { System::Web::UI::WebControls::MenuItemStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LevelSelectedStyles : System.Web.UI.WebControls.MenuItemStyleCollection" Usage="System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" />, содержащий параметры стиля, применяемые к выбранному пункту меню в соответствии с его уровнем в элементе управления <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" />, содержащий параметры стиля, применяемые к выбранному пункту меню в соответствии с его уровнем в элементе управления <see cref="T:System.Web.UI.WebControls.Menu" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте коллекцию в качестве альтернативы <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> свойствам и <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> для управления стилем выбранного пункта меню на отдельных уровнях меню. <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> Стили, содержащиеся в этой коллекции, применяются к выбранному пункту меню на основе его уровня меню. Первый стиль в коллекции соответствует стилю выбранного пункта меню на первом уровне меню. Второй стиль в коллекции соответствует стилю выбранного пункта меню на втором уровне меню и т. д. Эта коллекция чаще всего используется для создания таблицы меню навигации в стиле содержимого, где пункты меню на определенном уровне должны иметь одинаковый внешний вид независимо от того, есть ли в них подменю.  
  
> [!NOTE]
>  Если стиль определяется для определенного уровня с помощью <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> коллекции, это <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> переопределяет свойства и <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> на этом уровне.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> коллекцию для применения параметра стиля к выбранному пункту меню <xref:System.Web.UI.WebControls.Menu> в элементе управления в зависимости от его уровня.  
  
 [!code-aspx-csharp[MenuLevelMenuItemStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuLevelMenuItemStyles/CS/menulevelmenuitemstylecs.aspx#1)]
 [!code-aspx-vb[MenuLevelMenuItemStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuLevelMenuItemStyles/VB/menulevelmenuitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelSubMenuStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyleCollection LevelSubMenuStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SubMenuStyleCollection LevelSubMenuStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelSubMenuStyles As SubMenuStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SubMenuStyleCollection ^ LevelSubMenuStyles { System::Web::UI::WebControls::SubMenuStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LevelSubMenuStyles : System.Web.UI.WebControls.SubMenuStyleCollection" Usage="System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" />, содержащий параметры стиля, применяемые к пунктам вложенного меню в статическом меню в соответствии с их уровнем в элементе управления <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" />, содержащий параметры стиля, применяемые к пунктам вложенного меню в статическом меню в соответствии с их уровнем в элементе управления <see cref="T:System.Web.UI.WebControls.Menu" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте коллекцию в качестве альтернативы отдельным свойствам стиля (например, <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>), чтобы управлять стилем элементов вложенного меню, отображаемых в статическом меню на отдельных уровнях. <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> Стили, содержащиеся в этой коллекции, применяются к элементам вложенного меню, основанным на их уровне меню. Первый стиль в коллекции соответствует стилю первого статического уровня вложенного меню, отображаемого в статическом меню. Второй стиль в коллекции соответствует стилю второго уровня вложенного меню, отображаемого в статическом меню, и т. д. Эта коллекция чаще всего используется для создания таблицы меню навигации в стиле содержимого, где пункты меню на определенном уровне должны иметь одинаковый внешний вид независимо от того, есть ли в них подменю.  
  
> [!NOTE]
>  Если стиль определяется для определенного уровня с помощью <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> коллекции, это переопределяет все параметры стиля элемента вложенного меню на этом уровне.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> коллекцию для применения параметров стиля к элементам подменю, отображаемым в статическом меню <xref:System.Web.UI.WebControls.Menu> элемента управления в зависимости от их уровня.  
  
 [!code-aspx-csharp[MenuLevelSubMenuStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuLevelSubMenuStyles/CS/menulevelsubmenustylescs.aspx#1)]
 [!code-aspx-vb[MenuLevelSubMenuStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuLevelSubMenuStyles/VB/menulevelsubmenustylesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="menu.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Object" />, представляющий восстанавливаемое состояние элемента управления.</param>
        <summary>Загружает в элемент управления <see cref="T:System.Web.UI.WebControls.Menu" /> состояние свойств, которые необходимо сохранить.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Этот метод используется главным образом разработчиками элементов управления для расширения <xref:System.Web.UI.WebControls.Menu> элемента управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="menu.LoadViewState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Объект <see cref="T:System.Object" />, содержащий сохраненные значения состояния представления для элемента управления.</param>
        <summary>Загружает предварительно сохраненное состояние представления элемента управления <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumDynamicDisplayLevels">
      <MemberSignature Language="C#" Value="public int MaximumDynamicDisplayLevels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumDynamicDisplayLevels" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumDynamicDisplayLevels As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumDynamicDisplayLevels { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumDynamicDisplayLevels : int with get, set" Usage="System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает количество уровней меню обрабатываемых для просмотра в динамическом меню.</summary>
        <value>Количество уровней меню обрабатываемых для просмотра в динамическом меню. Значение по умолчанию — 3.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В статическом меню можно отобразить несколько уровней меню, задав <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> свойству значение больше 1. Можно также отобразить дополнительные уровни в динамических меню, задав для этого свойства значение больше 0. Например, если в статическом меню отображаются два уровня меню (путем задания <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> свойства равным 2), а затем этому свойству присвоено значение 3, в динамических меню отображаются три дополнительных уровня меню. Все остальные уровни меню выше (если таковые имеются) отбрасываются.  
  
> [!NOTE]
>  Установка этого свойства в 0 отображает плоское меню вплоть до уровня, указанного <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> свойством, без каких-либо динамических меню.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A> свойство для ограничения числа уровней меню, отображаемых в динамическом меню, до 1. Отображается только корневой уровень меню.  
  
 [!code-aspx-csharp[MenuMaximumDynamicDisplayLevels#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuMaximumDynamicDisplayLevels/CS/menumaximumdynamicdisplaylevelscs.aspx#1)]
 [!code-aspx-vb[MenuMaximumDynamicDisplayLevels#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuMaximumDynamicDisplayLevels/VB/menumaximumdynamicdisplaylevelsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Для свойства <see cref="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" /> задано значение меньше 0.</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
      </Docs>
    </Member>
    <Member MemberName="MenuItemClick">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.MenuEventHandler MenuItemClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.MenuEventHandler MenuItemClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuItemClick As MenuEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::MenuEventHandler ^ MenuItemClick;" />
      <MemberSignature Language="F#" Value="member this.MenuItemClick : System.Web.UI.WebControls.MenuEventHandler " Usage="member this.MenuItemClick : System.Web.UI.WebControls.MenuEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при выборе пункта меню в элементе управления <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Событие возникает при щелчке элемента меню <xref:System.Web.UI.WebControls.Menu> в элементе управления. <xref:System.Web.UI.WebControls.Menu.MenuItemClick> Это позволяет предоставить обработчик событий, выполняющий пользовательскую подпрограммы, например синхронизацию с другим элементом управления на странице, при возникновении этого события.  
  
 <xref:System.Web.UI.WebControls.MenuEventArgs> Объект передается в обработчик событий, который позволяет получить доступ к свойствам пункта меню, вызвавшего событие.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано, как создать обработчик событий для <xref:System.Web.UI.WebControls.Menu.MenuItemClick> события, отображающего текст пункта меню, выбранного пользователем.  
  
 [!code-aspx-csharp[MenuMenuItemClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuMenuItemClick/CS/menumenuitemclickcs.aspx#1)]
 [!code-aspx-vb[MenuMenuItemClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuMenuItemClick/VB/menumenuitemclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MenuItemClickCommandName">
      <MemberSignature Language="C#" Value="public static readonly string MenuItemClickCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MenuItemClickCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Menu.MenuItemClickCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuItemClickCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ MenuItemClickCommandName;" />
      <MemberSignature Language="F#" Value=" staticval mutable MenuItemClickCommandName : string" Usage="System.Web.UI.WebControls.Menu.MenuItemClickCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Содержит имя команды.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это поле только для чтения содержит имя команды, используемой для доступа к пунктам меню. Значение по умолчанию — "Click".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuItemDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.MenuEventHandler MenuItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.MenuEventHandler MenuItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MenuItemDataBound As MenuEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::MenuEventHandler ^ MenuItemDataBound;" />
      <MemberSignature Language="F#" Value="member this.MenuItemDataBound : System.Web.UI.WebControls.MenuEventHandler " Usage="member this.MenuItemDataBound : System.Web.UI.WebControls.MenuEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, если пункт меню в элементе управления <see cref="T:System.Web.UI.WebControls.Menu" /> привязан к данным.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Событие возникает, когда пункт меню привязан к данным <xref:System.Web.UI.WebControls.Menu> в элементе управления. <xref:System.Web.UI.WebControls.Menu.MenuItemDataBound> Это позволяет предоставить обработчик событий, выполняющий пользовательскую подпрограммы, например добавление пользовательского содержимого или изменение пункта меню перед отображением, при возникновении этого события.  
  
 <xref:System.Web.UI.WebControls.MenuEventArgs> Объект передается в обработчик событий, который позволяет получить доступ к свойствам пункта меню, вызвавшего событие.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано, как создать обработчик событий для <xref:System.Web.UI.WebControls.Menu.MenuItemDataBound> события, изменяющего текст `Home` пункта меню перед <xref:System.Web.UI.WebControls.Menu> его отображением в элементе управления.  
  
 [!code-aspx-csharp[MenuItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemDataBound/CS/menumenuitemdataboundcs.aspx#1)]
 [!code-aspx-vb[MenuItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemDataBound/VB/menumenuitemdataboundvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="menu.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Источник события.</param>
        <param name="e">Объект <see cref="T:System.EventArgs" />, содержащий данные событий.</param>
        <summary>Определяет, передается ли событие элемента управления <see cref="T:System.Web.UI.WebControls.Menu" /> вверх по иерархии серверных элементов управления пользовательского интерфейса страницы.</summary>
        <returns>Значение <see langword="true" />, если событие было отменено, в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот элемент переопределяет метод <xref:System.Web.UI.Control.OnBubbleEvent%2A>.  
  
> [!NOTE]
>  Этот метод используется главным образом разработчиками элементов управления для расширения <xref:System.Web.UI.WebControls.Menu> элемента управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected override void OnDataBinding (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataBinding(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataBinding (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataBinding(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDataBinding : EventArgs -&gt; unit" Usage="menu.OnDataBinding e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.MenuEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.Control.DataBinding" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Событие возникает, когда данные привязаны <xref:System.Web.UI.WebControls.Menu> к элементу управления. <xref:System.Web.UI.Control.DataBinding> Этот метод уведомляет элемент управления, чтобы выполнить связанную с ним логику привязки данных.  
  
 <xref:System.Web.UI.WebControls.Menu.OnDataBinding%2A> Метод позволяет производным классам выполнять обработку события без присоединения делегата. Это предпочтительная методика обработки событий в производном классе.  
  
 Этот метод обычно используется разработчиками элементов управления при расширении <xref:System.Web.UI.WebControls.Menu> класса.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [Обработка и вызов событий](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="menu.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.MenuEventArgs" />, содержащий данные события.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.Control.Init" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При уведомлении от этого метода элементы управления веб-сервера должны выполнить все шаги инициализации, необходимые для создания и настройки экземпляра служб. На этом этапе жизненного цикла серверного элемента управления состояние представления элемента управления еще заполнено. Кроме того, нельзя получить доступ к другому серверному элементу управления при вызове этого метода, независимо от того, является ли он дочерним или родительским для этого элемента управления. Не гарантируется, что другие серверные элементы управления будут созданы и готовы к доступу.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [Обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Web.UI.WebControls.Menu.OnInit%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMenuItemClick">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuItemClick (System.Web.UI.WebControls.MenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuItemClick(class System.Web.UI.WebControls.MenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuItemClick (e As MenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuItemClick(System::Web::UI::WebControls::MenuEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMenuItemClick : System.Web.UI.WebControls.MenuEventArgs -&gt; unit&#xA;override this.OnMenuItemClick : System.Web.UI.WebControls.MenuEventArgs -&gt; unit" Usage="menu.OnMenuItemClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.MenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.MenuEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод вызывается <xref:System.Web.UI.WebControls.Menu> элементом управления для вызова <xref:System.Web.UI.WebControls.Menu.MenuItemClick> события. <xref:System.Web.UI.WebControls.Menu.OnMenuItemClick%2A> Обычно он используется разработчиками элементов управления при расширении <xref:System.Web.UI.WebControls.Menu> класса.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [Обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Web.UI.WebControls.Menu.OnMenuItemClick%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMenuItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuItemDataBound (System.Web.UI.WebControls.MenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuItemDataBound(class System.Web.UI.WebControls.MenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMenuItemDataBound (e As MenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMenuItemDataBound(System::Web::UI::WebControls::MenuEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMenuItemDataBound : System.Web.UI.WebControls.MenuEventArgs -&gt; unit&#xA;override this.OnMenuItemDataBound : System.Web.UI.WebControls.MenuEventArgs -&gt; unit" Usage="menu.OnMenuItemDataBound e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.MenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.MenuEventArgs" />, содержащий данные события.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод вызывается <xref:System.Web.UI.WebControls.Menu> элементом управления для вызова <xref:System.Web.UI.WebControls.Menu.MenuItemDataBound> события. <xref:System.Web.UI.WebControls.Menu.OnMenuItemDataBound%2A> Обычно он используется разработчиками элементов управления при расширении <xref:System.Web.UI.WebControls.Menu> класса.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [Обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Web.UI.WebControls.Menu.OnMenuItemDataBound%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="menu.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.Control.PreRender" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод вызывается <xref:System.Web.UI.WebControls.Menu> элементом управления для вызова <xref:System.Web.UI.Control.PreRender> события. <xref:System.Web.UI.WebControls.Menu.OnPreRender%2A> Обычно он используется разработчиками элементов управления при расширении <xref:System.Web.UI.WebControls.Menu> класса.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [Обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Web.UI.WebControls.Menu.OnPreRender%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении метода <see cref="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Orientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Orientation Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As Orientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Orientation Orientation { System::Web::UI::WebControls::Orientation get(); void set(System::Web::UI::WebControls::Orientation value); };" />
      <MemberSignature Language="F#" Value="member this.Orientation : System.Web.UI.WebControls.Orientation with get, set" Usage="System.Web.UI.WebControls.Menu.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает направление, в котором обрабатывается элемент управления <see cref="T:System.Web.UI.WebControls.Menu" /> для отображения.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.WebControls.Orientation" />. Значение по умолчанию — <see langword="Orientation.Vertical" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство, чтобы указать направление <xref:System.Web.UI.WebControls.Menu> отрисовки элемента управления. <xref:System.Web.UI.WebControls.Menu.Orientation%2A> В следующей таблице перечислены доступные направления.  
  
|Ориентация|Описание|  
|-----------------|-----------------|  
|`Orientation.Horizontal`|<xref:System.Web.UI.WebControls.Menu> Элемент управления отображается горизонтально.|  
|`Orientation.Vertical`|<xref:System.Web.UI.WebControls.Menu> Элемент управления отображается вертикально.|  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.Orientation%2A> свойство для отображения горизонтального меню.  
  
 [!code-aspx-csharp[MenuOrientation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuOrientation/CS/menuorientationcs.aspx#1)]
 [!code-aspx-vb[MenuOrientation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuOrientation/VB/menuorientationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Orientation" />
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public char PathSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PathSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PathSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PathSeparator { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PathSeparator : char with get, set" Usage="System.Web.UI.WebControls.Menu.PathSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue('/')</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает символ, используемый в качестве разделителя пути к пункту меню в элементе управления <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <value>Символ, используемый для отделения пути к пункту меню. Значение по умолчанию — косая черта (/).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Каждый элемент меню (представленный <xref:System.Web.UI.WebControls.MenuItem> объектом) <xref:System.Web.UI.WebControls.Menu> в элементе управления имеет <xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A> свойство, указывающее позицию элемента меню. Значение Path — это строка с разделителями, которая формирует путь от корневого пункта меню к текущему пункту меню. <xref:System.Web.UI.WebControls.Menu.PathSeparator%2A> Используйте свойство, чтобы указать символ разделителя, используемый для разделения значений в пути меню. Это значение обычно используется при анализе списка для отдельных значений.  
  
 В зависимости от текста, отображаемого в <xref:System.Web.UI.WebControls.Menu> элементе управления, может потребоваться изменить символ разделителя, чтобы предотвратить конфликты. Например, если символ-разделитель установлен в запятую, отображаемый текст не должен содержать запятые. в противном случае свойство не может быть правильно проанализировано. <xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A>  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.PathSeparator%2A> свойство, чтобы изменить символ разделителя для пути к значению пункта меню на запятую.  
  
 [!code-aspx-csharp[MenuPathSeparator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuPathSeparator/CS/menupathseparatorcs.aspx#1)]
 [!code-aspx-vb[MenuPathSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuPathSeparator/VB/menupathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ValuePath" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.FindItem(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.PerformDataBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding();" />
      <MemberSignature Language="F#" Value="override this.PerformDataBinding : unit -&gt; unit" Usage="menu.PerformDataBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Привязывает элементы из источника данных к пунктам меню в элементе управления <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод — это вспомогательный метод, вызываемый <xref:System.Web.UI.WebControls.Menu> элементом управления для привязки элементов в источнике данных к <xref:System.Web.UI.WebControls.Menu> элементу управления. <xref:System.Web.UI.WebControls.Menu.PerformDataBinding%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected internal virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="menu.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Метод <see cref="T:System.String" />, представляющий аргумент события, передаваемый обработчику событий.</param>
        <summary>Обрабатывает вызванное событие при передаче страницы на сервер.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, представляющий поток вывода для записи содержимого в веб-страницу.</param>
        <summary>Выполняет преобразование для просмотра элемента управления меню в браузере клиентского компьютера.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.RenderBeginTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, содержащий методы построения и отрисовки определяемого устройством вывода.</param>
        <summary>Добавляет атрибуты тега и записывает разметку для открывающего тега элемента управления в поток вывода, передаваемый в браузер или устройство.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.RenderBeginTag%2A> Метод добавляет атрибуты тегов и записывает разметку для открывающего тега элемента управления в поток вывода, передаваемый в поток ответа для клиентского браузера.  
  
 Переопределяйте <xref:System.Web.UI.WebControls.Menu.RenderBeginTag%2A> , если требуется реализовать пользовательское поведение, например для записи нескольких тегов в поток ответа перед любым содержимым элемента управления, `<table><tr><td>`например. Этот метод переопределяет <xref:System.Web.UI.WebControls.Menu.RenderBeginTag%2A> метод, чтобы <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> добавить свойство.  
  
> [!NOTE]
>  Этот метод используется главным образом разработчиками элементов управления для расширения <xref:System.Web.UI.WebControls.Menu> элемента управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, содержащий методы построения и отрисовки определяемого устройством вывода.</param>
        <summary>Этот элемент переопределяет метод <see cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Переопределите <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> метод, чтобы отобразить содержимое элемента управления между открывающим и закрывающим тегами. Реализация по умолчанию этого метода визуализирует любые дочерние элементы управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="menu.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, содержащий методы построения и отрисовки определяемого устройством вывода.</param>
        <summary>Выполняет окончательную разметку и записывает закрывающий HTML-тег элемента управления в поток вывода, передаваемый в браузер или устройство.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод переопределяет <xref:System.Web.UI.WebControls.WebControl.RenderEndTag%2A?displayProperty=nameWithType> для <xref:System.Web.UI.WebControls.Menu> отображения подменю и <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> свойства.  
  
> [!NOTE]
>  Этот метод используется главным образом разработчиками элементов управления для расширения <xref:System.Web.UI.WebControls.Menu> элемента управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderingMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuRenderingMode RenderingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.MenuRenderingMode RenderingMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.RenderingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderingMode As MenuRenderingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuRenderingMode RenderingMode { System::Web::UI::WebControls::MenuRenderingMode get(); void set(System::Web::UI::WebControls::MenuRenderingMode value); };" />
      <MemberSignature Language="F#" Value="member this.RenderingMode : System.Web.UI.WebControls.MenuRenderingMode with get, set" Usage="System.Web.UI.WebControls.Menu.RenderingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuRenderingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, определяющее, преобразует ли для просмотра элемент управления <see cref="T:System.Web.UI.WebControls.Menu" /> элементы HTML <see langword="table" /> и встроенные стили или элементы <see langword="listitem" /> и стили CSS.</summary>
        <value>Значение, определяющее, преобразует ли для просмотра элемент управления <see cref="T:System.Web.UI.WebControls.Menu" /> элементы HTML <see langword="table" /> и встроенные стили или элементы <see langword="listitem" /> и стили CSS. Значение по умолчанию — <see cref="F:System.Web.UI.WebControls.MenuRenderingMode.Default" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Web.UI.WebControls.Menu.RenderingMode%2A> свойства определяет, как элемент управления Menu визуализирует разметку <xref:System.Web.UI.WebControls.Menu> для элемента управления.  
  
 В ASP.NET 3,5 и более ранних версиях <xref:System.Web.UI.WebControls.Menu> элемент управления использует `table` элементы HTML и встроенные стили для указания внешнего вида меню в браузере. В ASP.NET 4 и более поздних версиях по умолчанию <xref:System.Web.UI.WebControls.Menu> элемент управления использует элементы HTML `listitem` и стили каскадной таблицы стилей (CSS).  
  
 Если это свойство не задано, <xref:System.Web.UI.WebControls.Menu> элемент управления визуализирует разметку, соответствующую версии ASP.NET, указанной <xref:System.Web.UI.Control.RenderingCompatibility%2A?displayProperty=nameWithType> свойством. <xref:System.Web.UI.WebControls.Menu> Элемент управления использует следующие правила.  
  
-   Если значение <xref:System.Web.UI.Control.RenderingCompatibility%2A> свойства равно `3.5`, <xref:System.Web.UI.WebControls.Menu> элемент управления использует элементы HTML `table` и встроенные стили.  
  
-   Если значение <xref:System.Web.UI.Control.RenderingCompatibility%2A> свойства равно `4.0` или больше, <xref:System.Web.UI.WebControls.Menu> элемент управления использует элементы HTML `listitem` и стили CSS.  
  
 Это свойство предоставляется для обеспечения обратной совместимости. Если свойство указывает, что вы хотите, чтобы элементы управления создавали HTML-код, совместимый с ASP.NET 4 или более <xref:System.Web.UI.WebControls.Menu> поздней версии, но вы хотите, чтобы элемент управления был исключением, использующим <xref:System.Web.UI.WebControls.MenuRenderingMode.Table>более раннее поведение, можно присвоить этому свойству значение. <xref:System.Web.UI.Control.RenderingCompatibility%2A> Например, если имеется веб-страница с текстом справа налево, может потребоваться установить это свойство в значение, <xref:System.Web.UI.WebControls.MenuRenderingMode.Table> так как некоторые браузеры не <xref:System.Web.UI.WebControls.MenuRenderingMode.List> отображают разметку режима правильно для текста справа налево.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="menu.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сохраняет состояние свойств в элементе управления <see cref="T:System.Web.UI.WebControls.Menu" />, который необходимо сохранить.</summary>
        <returns>Объект, содержащий данные о состоянии элемента управления. Если состояние не изменилось, этот метод возвращает значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод используется для сохранения состояния свойств в <xref:System.Web.UI.WebControls.Menu> элементе управления, который необходимо сохранить, даже <xref:System.Web.UI.Control.EnableViewState%2A> если свойство имеет значение `false`. <xref:System.Web.UI.WebControls.Menu.SaveControlState%2A> Метод связан с данными состояния, важными для операции элемента управления (например, индексом или ключевым словом) и отделенной от данных состояния представления элемента управления.  
  
> [!NOTE]
>  Этот метод используется главным образом разработчиками элементов управления для расширения <xref:System.Web.UI.WebControls.Menu> элемента управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="menu.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сохраняет состояние элемента управления <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <returns>Объект <see cref="T:System.Object" />, содержащий сведения о состоянии элемента управления <see cref="T:System.Web.UI.WebControls.Menu" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollDownImageUrl">
      <MemberSignature Language="C#" Value="public string ScrollDownImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollDownImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollDownImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollDownImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollDownImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает URL-адрес изображения, отображаемого в динамическом меню и указывающего на то, что пользователь может воспользоваться прокруткой вниз для просмотра дополнительных пунктов меню.</summary>
        <value>URL-адрес изображения, отображаемого в динамическом меню и указывающего на то, что пользователь может воспользоваться прокруткой вниз для просмотра дополнительных пунктов меню. По умолчанию свойство содержит пустую строку (""), показывающую, что значение свойства не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство не поддерживается в режиме отрисовки .NET 4,0. Если это свойство является обязательным, можно присвоить меню режиму рендеринга .NET 3,5, добавив в код страницы следующее:  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 <xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A> Используйте свойство, чтобы указать пользовательский образ, отображаемый в нижней части каждого динамического меню, чтобы указать, что пользователь может прокручивать вниз для дополнительных пунктов меню.  
  
> [!NOTE]
>  Если это свойство не задано, используется внутреннее изображение по умолчанию.  
  
 Можно указать альтернативный текст для изображения, задав <xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A> свойство для отображения пользовательского изображения, указывающего, что пользователь может прокручивать окно вниз в динамическом меню для дополнительных пунктов меню.  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      </Docs>
    </Member>
    <Member MemberName="ScrollDownText">
      <MemberSignature Language="C#" Value="public string ScrollDownText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollDownText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollDownText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollDownText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollDownText : string with get, set" Usage="System.Web.UI.WebControls.Menu.ScrollDownText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает альтернативный текст для изображения, указанного в свойстве <see cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />.</summary>
        <value>Альтернативный текст для изображения, указанного в свойстве <see cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />. По умолчанию используется пустая строка (""), указывающая, что это свойство не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство не поддерживается в режиме отрисовки .NET 4,0. Если это свойство является обязательным, можно присвоить меню режиму рендеринга .NET 3,5, добавив в код страницы следующее:  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 Когда динамический элемент меню содержит дополнительные элементы в нижней части меню, отображается изображение, показывающее, что пользователь может прокручивать вниз для просмотра дополнительных пунктов меню. <xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A> Используйте свойство, чтобы указать альтернативный текст для этого изображения. Указанный текст предоставляет специальные технологические устройства с описанием образа, который можно использовать, чтобы сделать элемент управления более доступным.  
  
 Значение этого свойства, если оно задано, можно автоматически сохранить в файл ресурсов с помощью средства конструктора. Дополнительные сведения см <xref:System.ComponentModel.LocalizableAttribute> . в статьях и [Глобализация и локализация](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A> свойство, чтобы указать альтернативный текст для изображения, используемого для указания, что пользователь может прокручивать вниз в динамическом меню для дополнительных пунктов меню.  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      </Docs>
    </Member>
    <Member MemberName="ScrollUpImageUrl">
      <MemberSignature Language="C#" Value="public string ScrollUpImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollUpImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollUpImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollUpImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollUpImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает URL-адрес изображения, отображаемого в динамическом меню и указывающего на то, что пользователь может воспользоваться прокруткой вверх для просмотра дополнительных пунктов меню.</summary>
        <value>URL-адрес изображения, отображаемого в динамическом меню и указывающего на то, что пользователь может воспользоваться прокруткой вверх для просмотра дополнительных пунктов меню. По умолчанию свойство содержит пустую строку (""), показывающую, что значение свойства не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство не поддерживается в режиме отрисовки .NET 4,0. Если это свойство является обязательным, можно присвоить меню режиму рендеринга .NET 3,5, добавив в код страницы следующее:  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 <xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A> Используйте свойство, чтобы указать пользовательский образ, отображаемый в верхней части каждого динамического меню, чтобы указать, что пользователь может прокручивать вверх для получения дополнительных пунктов меню.  
  
> [!NOTE]
>  Если это свойство не задано, используется внутреннее изображение по умолчанию.  
  
 Можно указать альтернативный текст для изображения, задав <xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A> свойство для отображения пользовательского изображения, указывающего, что пользователь может прокручивать вверх в динамическом меню для дополнительных пунктов меню.  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      </Docs>
    </Member>
    <Member MemberName="ScrollUpText">
      <MemberSignature Language="C#" Value="public string ScrollUpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollUpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollUpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScrollUpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollUpText : string with get, set" Usage="System.Web.UI.WebControls.Menu.ScrollUpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает альтернативный текст для изображения, указанного в свойстве <see cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />.</summary>
        <value>Альтернативный текст для изображения, указанного в свойстве <see cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />. По умолчанию используется пустая строка (""), указывающая, что это свойство не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство не поддерживается в режиме отрисовки .NET 4,0. Если это свойство является обязательным, можно присвоить меню режиму рендеринга .NET 3,5, добавив в код страницы следующее:  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 Когда динамический элемент меню содержит дополнительные элементы в верхней части меню, отображается изображение, показывающее, что пользователь может прокручивать окно вверх для просмотра дополнительных пунктов меню. <xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A> Используйте свойство, чтобы указать альтернативный текст для этого изображения. Указанный текст предоставляет специальные технологические устройства с описанием образа, который можно использовать, чтобы сделать элемент управления более доступным.  
  
 Значение этого свойства, если оно задано, можно автоматически сохранить в файл ресурсов с помощью средства конструктора. Дополнительные сведения см <xref:System.ComponentModel.LocalizableAttribute> . в статьях и [Глобализация и локализация](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A> свойство, чтобы указать альтернативный текст для изображения, используемого для указания, что пользователь может прокручивать вверх в динамическом меню для дополнительных пунктов меню.  
  
 [!code-aspx-csharp[MenuScrollDownImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-aspx-vb[MenuScrollDownImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItem SelectedItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItem SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.SelectedItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedItem As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItem ^ SelectedItem { System::Web::UI::WebControls::MenuItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItem : System.Web.UI.WebControls.MenuItem" Usage="System.Web.UI.WebControls.Menu.SelectedItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает выбранный пункт меню.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.MenuItem" />, представляющий выбранный пункт меню.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.SelectedItem%2A> Используйте свойство, чтобы определить пункт меню, выбранный пользователем.  
  
> [!NOTE]
>  В качестве ярлыка можно также определить текст выбранного пункта меню непосредственно с помощью <xref:System.Web.UI.WebControls.Menu.SelectedValue%2A> свойства.  
  
 Когда пользователь выбирает пункт меню из <xref:System.Web.UI.WebControls.Menu> элемента управления <xref:System.Web.UI.WebControls.Menu.MenuItemClick> , возникает событие, которое позволяет выполнять пользовательские действия, предоставляя обработчик событий.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.SelectedItem%2A> свойство для определения выбранного пункта меню <xref:System.Web.UI.WebControls.Menu> в элементе управления.  
  
 [!code-aspx-csharp[MenuSelectedItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSelectedItem/CS/menuselecteditemcs.aspx#1)]
 [!code-aspx-vb[MenuSelectedItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSelectedItem/VB/menuselecteditemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.SelectedValue" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public string SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedValue { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : string" Usage="System.Web.UI.WebControls.Menu.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение выбранного пункта меню.</summary>
        <value>Значение выбранного пункта меню. Значение по умолчанию — <see cref="F:System.String.Empty" />. Оно указывает на то, что в данный момент пункты меню не выбраны.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.SelectedValue%2A> Используйте свойство в качестве ярлыка, чтобы определить текст выбранного пункта меню. Чтобы получить доступ к другим свойствам выбранного пункта меню, используйте <xref:System.Web.UI.WebControls.Menu.SelectedItem%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.SelectedValue%2A> свойство для определения текста выбранного пункта меню <xref:System.Web.UI.WebControls.Menu> в элементе управления.  
  
 [!code-aspx-csharp[MenuSelectedItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSelectedItem/CS/menuselecteditemcs.aspx#1)]
 [!code-aspx-vb[MenuSelectedItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSelectedItem/VB/menuselecteditemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.SelectedItem" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetDesignModeState (data As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetDesignModeState(System::Collections::IDictionary ^ data);" />
      <MemberSignature Language="F#" Value="override this.SetDesignModeState : System.Collections.IDictionary -&gt; unit" Usage="menu.SetDesignModeState data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">Объект <see cref="T:System.Collections.IDictionary" />, содержащий данные о состоянии для отображения элемента управления.</param>
        <summary>Задает данные времени разработки для элемента управления <see cref="T:System.Web.UI.WebControls.Menu" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод переопределяет метод <xref:System.Web.UI.Control.SetDesignModeState%2A>.  
  
> [!NOTE]
>  Этот метод используется главным образом разработчиками элементов управления для расширения <xref:System.Web.UI.WebControls.Menu> элемента управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemDataBound">
      <MemberSignature Language="C#" Value="protected void SetItemDataBound (System.Web.UI.WebControls.MenuItem node, bool dataBound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetItemDataBound(class System.Web.UI.WebControls.MenuItem node, bool dataBound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetItemDataBound(System.Web.UI.WebControls.MenuItem,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetItemDataBound (node As MenuItem, dataBound As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetItemDataBound(System::Web::UI::WebControls::MenuItem ^ node, bool dataBound);" />
      <MemberSignature Language="F#" Value="member this.SetItemDataBound : System.Web.UI.WebControls.MenuItem * bool -&gt; unit" Usage="menu.SetItemDataBound (node, dataBound)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataBound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="node">Задаваемый набор <see cref="T:System.Web.UI.WebControls.MenuItem" />.</param>
        <param name="dataBound">Значение <see langword="true" />, чтобы задать узел в качестве привязки данных; в противном случае — значение <see langword="false" />.</param>
        <summary>Присваивает свойству <see cref="P:System.Web.UI.WebControls.MenuItem.DataBound" /> указанного объекта <see cref="T:System.Web.UI.WebControls.MenuItem" /> заданное значение.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод — это вспомогательный метод, используемый производными классами для <xref:System.Web.UI.WebControls.MenuItem.DataBound%2A> задания свойства указанного <xref:System.Web.UI.WebControls.MenuItem> объекта. <xref:System.Web.UI.WebControls.Menu.SetItemDataBound%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetItemDataItem">
      <MemberSignature Language="C#" Value="protected void SetItemDataItem (System.Web.UI.WebControls.MenuItem node, object dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetItemDataItem(class System.Web.UI.WebControls.MenuItem node, object dataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetItemDataItem (node As MenuItem, dataItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetItemDataItem(System::Web::UI::WebControls::MenuItem ^ node, System::Object ^ dataItem);" />
      <MemberSignature Language="F#" Value="member this.SetItemDataItem : System.Web.UI.WebControls.MenuItem * obj -&gt; unit" Usage="menu.SetItemDataItem (node, dataItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">Задаваемый набор <see cref="T:System.Web.UI.WebControls.MenuItem" />.</param>
        <param name="dataItem">Элемент данных для объекта <see cref="T:System.Web.UI.WebControls.MenuItem" />.</param>
        <summary>Присваивает свойству <see cref="P:System.Web.UI.WebControls.MenuItem.DataItem" /> указанного объекта <see cref="T:System.Web.UI.WebControls.MenuItem" /> заданное значение.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод — это вспомогательный метод, используемый производными классами для <xref:System.Web.UI.WebControls.MenuItem.DataItem%2A> задания свойства указанного <xref:System.Web.UI.WebControls.MenuItem> объекта. <xref:System.Web.UI.WebControls.Menu.SetItemDataItem%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataBound(System.Web.UI.WebControls.MenuItem,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetItemDataPath">
      <MemberSignature Language="C#" Value="protected void SetItemDataPath (System.Web.UI.WebControls.MenuItem node, string dataPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetItemDataPath(class System.Web.UI.WebControls.MenuItem node, string dataPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetItemDataPath (node As MenuItem, dataPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetItemDataPath(System::Web::UI::WebControls::MenuItem ^ node, System::String ^ dataPath);" />
      <MemberSignature Language="F#" Value="member this.SetItemDataPath : System.Web.UI.WebControls.MenuItem * string -&gt; unit" Usage="menu.SetItemDataPath (node, dataPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">Задаваемый набор <see cref="T:System.Web.UI.WebControls.MenuItem" />.</param>
        <param name="dataPath">Путь к данным для объекта <see cref="T:System.Web.UI.WebControls.MenuItem" />.</param>
        <summary>Присваивает свойству <see cref="P:System.Web.UI.WebControls.MenuItem.DataPath" /> указанного объекта <see cref="T:System.Web.UI.WebControls.MenuItem" /> заданное значение.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод — это вспомогательный метод, используемый производными классами для <xref:System.Web.UI.WebControls.MenuItem.DataPath%2A> задания свойства указанного <xref:System.Web.UI.WebControls.MenuItem> объекта. <xref:System.Web.UI.WebControls.Menu.SetItemDataPath%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public string SkipLinkText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkipLinkText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.SkipLinkText" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipLinkText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SkipLinkText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkipLinkText : string with get, set" Usage="System.Web.UI.WebControls.Menu.SkipLinkText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает альтернативный текст скрытого изображения, считываемого программами чтения с экрана, для предоставления возможности пропуска списка ссылок.</summary>
        <value>Альтернативный текст скрытого изображения, считываемого программами чтения с экрана, для предоставления возможности пропуска списка ссылок. По умолчанию используется пустая строка (""), указывающая, что это свойство не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> Используйте свойство, чтобы указать альтернативный текст для скрытого изображения, считываемого программами чтения с экрана, чтобы предоставить возможность пропускать список ссылок. Указанный текст предоставляет специальные технологические устройства с описанием скрытого изображения ссылки для пропуска, которое можно использовать, чтобы сделать элемент управления более доступным.  
  
 Значение этого свойства, если оно задано, можно автоматически сохранить в файл ресурсов с помощью средства конструктора. Дополнительные сведения см <xref:System.ComponentModel.LocalizableAttribute> . в статьях и [Глобализация и локализация](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
 <xref:System.Web.UI.WebControls.Menu> Элемент управления <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> предоставляет свойство таким образом, чтобы весь элемент управления был пропущен средствами чтения с экрана. <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> Если свойство задано, то отображается невидимое изображение с альтернативным текстом, предоставляя пользователю возможность перейти к концу элемента управления. Читатели экрана считывают альтернативный текст вслух, и изображение занимает всего одно пространство пикселей. Для точного управления отрисовкой страницы присвойте <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> свойству пустую строку ("") и предоставьте собственный механизм для пропуска меню. По <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> умолчанию свойству присваивается пустая строка.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> свойство, чтобы указать альтернативный текст для скрытого изображения, считываемого программами чтения с экрана, чтобы предоставить возможность пропускать список ссылок.  
  
 [!code-aspx-csharp[MenuSkipLinkText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSkipLinkText/CS/menuskiplinktextcs.aspx#1)]
 [!code-aspx-vb[MenuSkipLinkText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSkipLinkText/VB/menuskiplinktextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticBottomSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string StaticBottomSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticBottomSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticBottomSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticBottomSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticBottomSeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает URL-адрес изображения, которое отображается в качестве разделителя под каждым пунктом статического меню.</summary>
        <value>URL-адрес изображения, которое отображается в качестве разделителя под каждым пунктом статического меню. По умолчанию свойство содержит пустую строку (""), показывающую, что значение свойства не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A> Используйте свойство, чтобы указать пользовательский образ, отображаемый в нижней части каждого элемента статического меню, который выступает в качестве разделителя между элементами меню.  
  
> [!NOTE]
>  В качестве альтернативы можно также отобразить изображение разделителя в верхней части каждого элемента статического меню, задав <xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A> свойство для указания изображения разделителя, отображаемого в нижней части каждого элемента статического меню.  
  
 [!code-aspx-csharp[MenuStaticBottomSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticBottomSeparatorImageUrl/CS/menustaticbottomseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuStaticBottomSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticBottomSeparatorImageUrl/VB/menustaticbottomseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="StaticDisplayLevels">
      <MemberSignature Language="C#" Value="public int StaticDisplayLevels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StaticDisplayLevels" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticDisplayLevels As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StaticDisplayLevels { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.StaticDisplayLevels : int with get, set" Usage="System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает количество уровней меню, отображаемых в статическом меню.</summary>
        <value>Количество уровней меню, отображаемых в статическом меню. Значение по умолчанию — 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> Используйте свойство, чтобы указать число уровней меню, отображаемых в статическом меню. Все уровни меню ниже указанного значения отображаются в динамическом меню. Можно также ограничить число уровней меню, отображаемых в динамическом меню, установив <xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> свойство для отображения первых двух уровней меню в статическом меню.  
  
 [!code-aspx-csharp[MenuStaticDisplayLevels#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticDisplayLevels/CS/menustaticdisplaylevelscs.aspx#1)]
 [!code-aspx-vb[MenuStaticDisplayLevels#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticDisplayLevels/VB/menustaticdisplaylevelsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Указанное значение меньше 1.</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />
      </Docs>
    </Member>
    <Member MemberName="StaticEnableDefaultPopOutImage">
      <MemberSignature Language="C#" Value="public bool StaticEnableDefaultPopOutImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaticEnableDefaultPopOutImage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticEnableDefaultPopOutImage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaticEnableDefaultPopOutImage { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StaticEnableDefaultPopOutImage : bool with get, set" Usage="System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, будет ли отображаться встроенное изображение, свидетельствующее о том, что в пункте статического меню есть вложенное меню.</summary>
        <value>Значение <see langword="true" /> для отображения встроенного изображения для пунктов статического меню с вложенными меню; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если в статическом пункте меню содержится подменю, можно отобразить изображение, чтобы показать, что пользователь может развернуть меню. Существует два способа отобразить это изображение:  
  
-   Задайте для <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> `true` свойства значение, чтобы использовать встроенное изображение (по умолчанию).  
  
-   <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> Задайте свойство, чтобы указать пользовательский образ.  
  
 Если свойство задано, это изображение переопределяет встроенное изображение независимо от значения <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> свойства. <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>  
  
> [!NOTE]
>  Если свойство не задано <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> и свойство имеет значение `false`, изображение не отображается. <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>  
  
 Можно указать альтернативный текст для изображения, задав <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> свойства для скрытия изображения, указывающего, что у статического пункта меню есть подменю. Для скрытия изображения свойству также необходимо присвоить пустую строку (""). <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>  
  
 [!code-aspx-csharp[MenuStaticEnableDefaultPopOutImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticEnableDefaultPopOutImage/CS/menustaticenabledefaultpopoutimagecs.aspx#1)]
 [!code-aspx-vb[MenuStaticEnableDefaultPopOutImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticEnableDefaultPopOutImage/VB/menustaticenabledefaultpopoutimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticHoverStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style StaticHoverStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style StaticHoverStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticHoverStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ StaticHoverStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticHoverStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.Menu.StaticHoverStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает ссылку на объект <see cref="T:System.Web.UI.WebControls.Style" />, позволяющий задать внешний вид пункта статического меню при наведении на него указателя мыши.</summary>
        <value>Ссылка на объект <see cref="T:System.Web.UI.WebControls.Style" />, представляющий стиль пункта статического меню при наведении на него указателя мыши.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A> Свойство используется для управления внешним видом элемента статического меню при помещении на него указателя мыши. Это свойство доступно только для чтения; Однако можно задать свойства <xref:System.Web.UI.WebControls.Style> возвращаемого объекта. Свойства `Property-Subproperty`можно задать декларативно в форме, где `Subproperty` <xref:System.Web.UI.WebControls.Style> — это свойство объекта (например, `StaticHoverStyle-ForeColor`). Свойства также могут быть заданы программно в форме `Property.Subproperty` (например, `StaticHoverStyle.ForeColor`).  
  
 Свойства стиля для элемента статического меню применяются в следующем порядке:  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>. Если коллекция или <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> коллекция определены, они применяются в этот момент, переопределяя другие свойства стиля элемента меню. <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>. <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> Если коллекция определена, она применяется в этот момент, переопределяя другие свойства стиля элемента меню.  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A> свойство для изменения цвета фона элемента статического меню на светло-голубой, когда пользователь позиционирует указатель мыши на него.  
  
 [!code-aspx-csharp[MenuStaticHoverStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticHoverStyle/CS/menustatichoverstylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticHoverStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticHoverStyle/VB/menustatichoverstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticItemFormatString">
      <MemberSignature Language="C#" Value="public string StaticItemFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticItemFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticItemFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticItemFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticItemFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticItemFormatString : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticItemFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает дополнительный текст, отображаемый вместе со всеми статическими пунктами меню.</summary>
        <value>Дополнительный текст или символы, отображаемые вместе с пунктами меню. Значение этого свойства по умолчанию — "{0}."</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство можно использовать для вставки текста в меню для форматирования элементов статического меню. Это особенно удобно для мобильных устройств. <xref:System.Web.UI.WebControls.Menu> Элемент управления поддерживает шаблоны для вывода статических и динамических пунктов меню, но шаблоны не учитываются на мобильных устройствах. Это свойство позволяет добавлять символы или текст, а также применять форматирование к пунктам меню для мобильных и настольных устройств без использования шаблона.  
  
> [!NOTE]
>  Чтобы обеспечить согласованное форматирование при использовании этого свойства, необходимо также задать <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> свойство, если форматирование должно быть одинаковым между статическими и динамическими элементами меню.  
  
 При применении форматирования шаблона и этого свойства форматирование шаблона не учитывается для мобильных устройств.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A> свойства и <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> для добавления текста в каждый пункт меню.  
  
 [!code-aspx-csharp[MenuItemFormatString#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemFormatString/CS/menuitemformatstringcs.aspx#1)]
 [!code-aspx-vb[MenuItemFormatString#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemFormatString/VB/menuitemformatstringvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticItemTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate StaticItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate StaticItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ StaticItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.Menu.StaticItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.MenuItemTemplateContainer))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает шаблон, содержащий настраиваемое содержимое, преобразовываемое для просмотра в статическом меню.</summary>
        <value>Объект <see cref="T:System.Web.UI.ITemplate" />, содержащий настраиваемое содержимое для статического меню. По умолчанию свойство имеет значение NULL, показывающее, что значение свойства не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вместо использования встроенной отрисовки для статического меню можно определить собственный пользовательский интерфейс для элемента статического меню с помощью <xref:System.Web.UI.WebControls.Menu.StaticItemTemplate%2A> свойства. Чтобы указать пользовательский шаблон для пункта статического меню, сначала поместите `<StaticTemplate>` теги между открывающим и закрывающим тегами <xref:System.Web.UI.WebControls.Menu> элемента управления. Затем можно перечислить содержимое шаблона между открывающим и закрывающим `<StaticTemplate>` тегами. Можно дополнительно управлять стилем статического меню с помощью <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A> свойства.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaticMenuItemStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle StaticMenuItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle StaticMenuItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticMenuItemStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ StaticMenuItemStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticMenuItemStyle : System.Web.UI.WebControls.MenuItemStyle" Usage="System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает ссылку на объект <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />, позволяющий задать внешний вид пунктов статического меню.</summary>
        <value>Ссылка на объект <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />, представляющий стиль пунктов статического меню.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A> Свойство используется для управления внешним видом пунктов меню в статическом меню. Это свойство доступно только для чтения; Однако можно задать свойства <xref:System.Web.UI.WebControls.MenuItemStyle> возвращаемого объекта. Свойства `Property-Subproperty`можно задать декларативно в форме, где `Subproperty` <xref:System.Web.UI.WebControls.MenuItemStyle> — это свойство объекта (например, `StaticMenuItemStyle-ForeColor`). Свойства также могут быть заданы программно в форме `Property.Subproperty` (например, `StaticMenuItemStyle.ForeColor`).  
  
 Свойства стиля для элемента статического меню применяются в следующем порядке:  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>. Если коллекция или <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> коллекция определены, они применяются в этот момент, переопределяя другие свойства стиля элемента меню. <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>. <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> Если коллекция определена, она применяется в этот момент, переопределяя другие свойства стиля элемента меню.  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A> свойство, чтобы задать голубой цвет фона для пунктов меню в статическом меню.  
  
 [!code-aspx-csharp[MenuStaticMenuItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticMenuItemStyle/CS/menustaticmenuitemstylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticMenuItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticMenuItemStyle/VB/menustaticmenuitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticMenuStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyle StaticMenuStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SubMenuStyle StaticMenuStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticMenuStyle As SubMenuStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SubMenuStyle ^ StaticMenuStyle { System::Web::UI::WebControls::SubMenuStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticMenuStyle : System.Web.UI.WebControls.SubMenuStyle" Usage="System.Web.UI.WebControls.Menu.StaticMenuStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает ссылку на объект <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />, позволяющий задать внешний вид статического меню.</summary>
        <value>Ссылка на объект <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />, представляющий стиль статического меню.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A> Свойство используется для управления внешним видом статического меню. Это свойство доступно только для чтения; Однако можно задать свойства <xref:System.Web.UI.WebControls.MenuItemStyle> возвращаемого объекта. Свойства `Property-Subproperty`можно задать декларативно в форме, где `Subproperty` <xref:System.Web.UI.WebControls.MenuItemStyle> — это свойство объекта (например, `StaticMenuStyle-ForeColor`). Свойства также могут быть заданы программно в форме `Property.Subproperty` (например, `StaticMenuStyle.ForeColor`).  
  
 Свойства стиля для элемента статического меню применяются в следующем порядке:  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>. Если коллекция или <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> коллекция определены, они применяются в этот момент, переопределяя другие свойства стиля элемента меню. <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>. <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> Если коллекция определена, она применяется в этот момент, переопределяя другие свойства стиля элемента меню.  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A> свойство, чтобы задать голубой цвет фона для всего статического меню.  
  
 [!code-aspx-csharp[MenuStaticMenuStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticMenuStyle/CS/menustaticmenustylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticMenuStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticMenuStyle/VB/menustaticmenustylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticPopOutImageTextFormatString">
      <MemberSignature Language="C#" Value="public string StaticPopOutImageTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticPopOutImageTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticPopOutImageTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticPopOutImageTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticPopOutImageTextFormatString : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает альтернативный текст для исчезающего изображения, свидетельствующий о том, что в пункте статического меню есть вложенное меню.</summary>
        <value>Альтернативный текст для исчезающего изображения. По умолчанию используется пустая строка (""), указывающая, что это свойство не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если в статическом пункте меню содержится подменю, можно отобразить изображение, чтобы показать, что пользователь может развернуть меню. <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> Используйте свойство, чтобы указать альтернативный текст для этого изображения.  
  
 Существует два способа отобразить изображение:  
  
-   Задайте для <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> `true` свойства значение, чтобы использовать встроенное изображение (по умолчанию).  
  
-   <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> Задайте свойство, чтобы указать пользовательский образ.  
  
> [!NOTE]
>  Это свойство применяется как к встроенному, так и к пользовательскому образу.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> свойство, чтобы указать альтернативный текст для изображения, которое указывает, что у статического пункта меню есть подменю. Этот текст отображается в виде подсказки, когда пользователь позиционирует указатель мыши на изображение.  
  
 [!code-aspx-csharp[MenuStaticPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticPopoutImageText/CS/menustaticpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuStaticPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticPopoutImageText/VB/menustaticpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="StaticPopOutImageUrl">
      <MemberSignature Language="C#" Value="public string StaticPopOutImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticPopOutImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticPopOutImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticPopOutImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticPopOutImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает URL-адрес изображения, указывающего на наличие вложенного меню в пункте статического меню.</summary>
        <value>URL-адрес изображения, указывающего на наличие вложенного меню в пункте статического меню. По умолчанию свойство содержит пустую строку (""), показывающую, что значение свойства не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если в статическом пункте меню содержится подменю, можно отобразить изображение, чтобы показать, что пользователь может развернуть меню. Существует два способа отобразить это изображение:  
  
-   Задайте для <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> `true` свойства значение, чтобы использовать встроенное изображение (по умолчанию).  
  
-   <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> Задайте свойство, чтобы указать пользовательский образ.  
  
 Если свойство задано, это изображение переопределяет встроенное изображение независимо от значения <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> свойства. <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>  
  
 Если свойство не задано <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> и свойство имеет значение `false`, изображение не отображается. <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>  
  
> [!NOTE]
>  При задании этого свойства используйте знак косой черты (/) вместо обратной косой черты (\\). Если в пути используются обратные косые черты, указанное изображение не будет отображаться.  
  
 Можно указать альтернативный текст для изображения, задав <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> свойство для указания пользовательского изображения, отображаемого в пункте статического меню, когда у пункта меню есть подменю.  
  
 [!code-aspx-csharp[MenuStaticPopoutImageText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticPopoutImageText/CS/menustaticpopoutimagetextcs.aspx#1)]
 [!code-aspx-vb[MenuStaticPopoutImageText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticPopoutImageText/VB/menustaticpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticSelectedStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle StaticSelectedStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle StaticSelectedStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticSelectedStyle As MenuItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemStyle ^ StaticSelectedStyle { System::Web::UI::WebControls::MenuItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticSelectedStyle : System.Web.UI.WebControls.MenuItemStyle" Usage="System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает ссылку на объект <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />, позволяющий задать внешний вид выбранного пользователем пункта статического меню.</summary>
        <value>Ссылка на объект <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />, представляющий стиль выбранного пункта статического меню.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> Используйте свойство для управления внешним видом пункта меню, выбранного пользователем в статическом меню. Это свойство доступно только для чтения; Однако можно задать свойства <xref:System.Web.UI.WebControls.MenuItemStyle> возвращаемого объекта. Свойства `Property-Subproperty`можно задать декларативно в форме, где `Subproperty` <xref:System.Web.UI.WebControls.MenuItemStyle> — это свойство объекта (например, `StaticSelectedStyle-ForeColor`). Свойства также могут быть заданы программно в форме `Property.Subproperty` (например, `StaticSelectedStyle.ForeColor`).  
  
 Свойства стиля для элемента статического меню применяются в следующем порядке:  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>. Если коллекция или <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> коллекция определены, они применяются в этот момент, переопределяя другие свойства стиля элемента меню. <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>. <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> Если коллекция определена, она применяется в этот момент, переопределяя другие свойства стиля элемента меню.  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>.  
  
> [!IMPORTANT]
>  Критическое изменение ниже.  
  
 До .NET Framework 4,0 при определении `<asp:Menu>` элемента управления в файле. aspx пользователи могут `StaticSelectedStyle-CssClass` задать свойство, чтобы задать класс CSS для выбранного элемента управления. Например, пользователь может иметь элемент управления Menu, как показано ниже:  
  
```  
<asp:Menu ID="Menu1" runat="server" Orientation="Horizontal"   
    StaticMenuItemStyle-CssClass="MenuItem"  
    StaticSelectedStyle-CssClass="MenuItem_selected"  
    OnMenuItemClick="Menu1_MenuItemClick" Style="margin-bottom: 0px" EnableTheming="True" ClientIDMode="Static">  
    <Items>  
        <asp:MenuItem Text="item_0" Value="0" Selected="True"></asp:MenuItem>  
        <asp:MenuItem Text="itme_1" Value="1"></asp:MenuItem>  
    </Items>  
</asp:Menu>  
```  
  
 И элемент управления "меню" отображается следующим образом:  
  
```  
<div id="Menu1" style="margin-bottom: 0px">  
    <ul class="level1">  
        <li><a class="level1 MenuItem MenuItem_selected " href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;0&#39;)">item_0</a></li>  
        <li><a class="level1 MenuItem" href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;1&#39;)">itme_1</a></li>  
    </ul>  
</div>  
```  
  
 Однако в .NET Framework 4,0 и более поздних версиях выбранный элемент меню задается как `selected` класс CSS Always вместо класса, указанного параметром `StaticSelectedStyle-CssClass`. Таким образом, вместо этого выводится приведенный выше код ASP.NET, как показано ниже.  
  
```  
<div id="Menu1" style="margin-bottom: 0px">  
    <ul class="level1">  
        <li><a class="level1 MenuItem selected " href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;0&#39;)">item_0</a></li>  
        <li><a class="level1 MenuItem" href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;1&#39;)">itme_1</a></li>  
    </ul>  
</div>  
  
```  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> свойство, чтобы указать светло-синий цвет фона для выбранного элемента статического меню.  
  
 [!code-aspx-csharp[MenuStaticSelectedStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticSelectedStyle/CS/menustaticselectedstylecs.aspx#1)]
 [!code-aspx-vb[MenuStaticSelectedStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticSelectedStyle/VB/menustaticselectedstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticSubMenuIndent">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Unit StaticSubMenuIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit StaticSubMenuIndent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticSubMenuIndent As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Unit StaticSubMenuIndent { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.StaticSubMenuIndent : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "16px")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает размер отступа вложенных меню в пикселях в статическом меню.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.Unit" />, представляющий размер отступа вложенных меню в пикселях в статическом меню. Значение по умолчанию — 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если в статическом меню отображается более одного уровня меню (если <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> для свойства задано значение больше 1), <xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A> используйте свойство, чтобы указать число пикселей, на которое помещается отступ для пунктов вложенного меню в статическом окне.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A> свойство для отступа пунктов подменю в статическом меню на 10 пикселей.  
  
 [!code-aspx-csharp[MenuStaticSubMenuIndent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticSubMenuIndent/CS/menustaticsubmenuindentcs.aspx#1)]
 [!code-aspx-vb[MenuStaticSubMenuIndent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticSubMenuIndent/VB/menustaticsubmenuindentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение выбранного объекта <see cref="T:System.Web.UI.WebControls.Unit" /> меньше 0.</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
      </Docs>
    </Member>
    <Member MemberName="StaticTopSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string StaticTopSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticTopSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property StaticTopSeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StaticTopSeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StaticTopSeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает URL-адрес изображения, которое отображается в качестве разделителя над каждым пунктом статического меню.</summary>
        <value>URL-адрес изображения, которое отображается в качестве разделителя над каждым пунктом статического меню. По умолчанию свойство содержит пустую строку (""), показывающую, что значение свойства не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A> Используйте свойство, чтобы указать пользовательский образ, отображаемый в верхней части каждого элемента статического меню, который выступает в качестве разделителя между элементами меню.  
  
> [!NOTE]
>  В качестве альтернативы можно также отобразить изображение разделителя в нижней части каждого элемента статического меню, задав <xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A> свойства для указания изображения разделителя, отображаемого в верхней части каждого элемента статического меню.  
  
 [!code-aspx-csharp[MenuStaticTopSeparatorImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticTopSeparatorImageUrl/CS/menustatictopseparatorimageurlcs.aspx#1)]
 [!code-aspx-vb[MenuStaticTopSeparatorImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticTopSeparatorImageUrl/VB/menustatictopseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Метод <see cref="T:System.String" />, представляющий аргумент события, передаваемый обработчику событий.</param>
        <summary>Обрабатывает вызванное событие при передаче страницы на сервер.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.Menu.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение <see cref="T:System.Web.UI.HtmlTextWriterTag" />, соответствующее элементу управления <see cref="T:System.Web.UI.WebControls.Menu" />. Это свойство используется преимущественно разработчиками элементов управления.</summary>
        <value>Всегда возвращает значение <see langword="HtmlTextWriterTag.Table" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство, чтобы <xref:System.Web.UI.HtmlTextWriterTag> определить значение <xref:System.Web.UI.WebControls.Menu> , связанное с элементом управления. <xref:System.Web.UI.WebControls.Menu.TagKey%2A> Это свойство используется преимущественно разработчиками элементов управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.WebControls.Menu.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает целевое окно или фрейм, для отображения содержимого веб-страницы, связанной с пунктом меню.</summary>
        <value>Целевое окно или фрейм, для отображения связанного содержимого веб-страницы. Значение по умолчанию — пустая строка (""), обновляющая окно или фрейм, имеющий фокус.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu.Target%2A> Используйте свойство, чтобы указать окно или кадр, в котором будет отображаться веб-содержимое, связанное с пунктом меню при щелчке этого пункта меню. Значения должны начинаться с буквы от "A" до "Z" (регистр учитывается), за исключением некоторых специальных значений, начинающиеся со знака подчеркивания, как показано в следующей таблице.  
  
|Целевое значение|Описание:|  
|------------------|-----------------|  
|`_blank`|Отображает содержимое в новом окне без фреймов.|  
|`_parent`|Отрисовывает содержимое в непосредственно родительском элементе набора фреймов.|  
|`_search`|Отображает содержимое в панели поиска.|  
|`_self`|Отображает содержимое во фрейме с фокусировкой.|  
|`_top`|Отображает содержимое в окне без фреймов.|  
  
> [!NOTE]
>  Чтобы выяснить, поддерживается ли значение `_search`, следует обратиться к документации браузера.  Например, в `_search` Internet Explorer версии 5,0 и выше поддерживается целевое значение.  
  
 Это свойство применяется ко всем пунктам меню в <xref:System.Web.UI.WebControls.Menu> элементе управления. Можно выборочно переопределить это свойство, задав <xref:System.Web.UI.WebControls.MenuItem.Target%2A> свойство для каждого <xref:System.Web.UI.WebControls.MenuItem> объекта напрямую.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.MenuItem.Target%2A> Свойство отображается как целевой атрибут. Атрибут Target в элементах привязки не допускается в определении типа документа XHTML 1,1. Если отображаемые выходные данные должны соответствовать стандартам XHTML или Accessibility, не устанавливайте <xref:System.Web.UI.WebControls.MenuItem.Target%2A> свойство. Дополнительные сведения см. в статьях [стандарты XHTML в Visual Studio и ASP.NET](https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97) и [Специальные возможности в visual Studio и ASP.NET](https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13).  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.Menu.Target%2A> свойство, чтобы указать, что содержимое, связанное с каждым из пунктов меню, должно отображаться в новом окне, когда пользователь щелкает этот пункт меню.  
  
 [!code-aspx-csharp[MenuTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuTarget/CS/menutargetcs.aspx#1)]
 [!code-aspx-vb[MenuTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuTarget/VB/menutargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="menu.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Отслеживает изменения состояния представления элемента управления <see cref="T:System.Web.UI.WebControls.Menu" /> для сохранения в объекте элемента управления <see cref="T:System.Web.UI.StateBag" />. Этот объект доступен с помощью свойства <see cref="P:System.Web.UI.Control.ViewState" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
  </Members>
</Type>
