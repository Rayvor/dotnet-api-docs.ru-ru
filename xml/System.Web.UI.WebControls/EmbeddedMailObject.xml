<Type Name="EmbeddedMailObject" FullName="System.Web.UI.WebControls.EmbeddedMailObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6e6e4f425938ebcb8847ed190584e88300c7ac13" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73396726" /></Metadata><TypeSignature Language="C#" Value="public sealed class EmbeddedMailObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EmbeddedMailObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.EmbeddedMailObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EmbeddedMailObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class EmbeddedMailObject sealed" />
  <TypeSignature Language="F#" Value="type EmbeddedMailObject = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.EmbeddedMailObject/EmbeddedMailObjectTypeConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет объект для внедрения в сообщение электронной почты, сконструированного с помощью класса <see cref="T:System.Web.UI.WebControls.MailDefinition" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EmbeddedMailObject> представляет элемент, внедряемый в почтовое сообщение. Эти внедренные элементы могут представлять собой файлы изображений, такие как логотипы компании. Каждый внедренный элемент задается идентификатором и путем.  
  
 Чтобы убедиться, что внедренный объект правильно отображается в файле сообщения электронной почты, должны выполняться следующие условия.  
  
-   Сообщение электронной почты имеет формат HTML.  
  
-   Элемент — это файл изображения (JPG, GIF, BMP и т. д.).  
  
-   HTML-файл текста, указанный в свойстве <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A>, содержит ссылку на файл изображения, используя следующий синтаксис:  
  
    ```  
    <img src="cid:identifier" alt="Alternate Text" />.  
    ```  
  
 Если <xref:System.Web.UI.WebControls.EmbeddedMailObject> добавляется к почтовому сообщению и не выполняет все указанные выше требования, скорее всего, оно будет отображаться как вложение в почтовом сообщении. Если на элемент ссылается идентификатор в почтовом сообщении, но он не включен в качестве внедренного элемента, то при просмотре почты он будет отображаться как поврежденное вложение.  
  
 <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> сохраняет коллекцию объектов <xref:System.Web.UI.WebControls.EmbeddedMailObject> для одного почтового сообщения. <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> используется свойством <xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A> объекта <xref:System.Web.UI.WebControls.MailDefinition> для создания почтового сообщения.  
  
 Сообщения электронной почты, которые разрешают внедренные объекты, можно настроить в следующих веб-элементах управления, задав свойства <xref:System.Web.UI.WebControls.MailDefinition> декларативно:  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard>  
  
-   <xref:System.Web.UI.WebControls.ChangePassword>  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery>  
  
> [!NOTE]
>  Значения в объектах <xref:System.Web.UI.WebControls.EmbeddedMailObject> и <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> не хранятся в состоянии просмотра. Это обеспечивает защиту от вредоносных пользователей, которые обнаруживают сведения о пути для сервера.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется страница ASP.NET, использующая веб-элемент управления <xref:System.Web.UI.WebControls.ChangePassword> и включающая обработчик событий <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> для события с именем `SendingMail`. В примере кода предполагается, что веб-сайт ASP.NET настроен для использования проверки подлинности членства и форм ASP.NET, а также что пользователь создал имя и пароль, которые вам известны. Дополнительные сведения см. [в разделе Практические руководства. Реализация простой проверки подлинности с помощью форм](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Если изменение пароля прошло удачно, код в обработчике событий `SendingMail` пытается отправить пользователю сообщение электронной почты для подтверждения изменения. Чтобы этот пример кода работал, протокол SMTP уже должен быть настроен на сервере. Сведения о настройке SMTP-сервера см. в разделе [как установить и настроить виртуальные SMTP-серверы в IIS 6,0](https://docs.microsoft.com/previous-versions/aspnet/8b83ac7t(v=vs.100)). В этом примере нет необходимости настраивать SMTP-сервер. Этот пример создается для проверки сбоя при отправке сообщения электронной почты.  
  
 Если почтовый сервер настроен неправильно или возникла какая-либо другая ошибка и сообщение электронной почты не удается отправить, вызывается функция `SendMailError`. Пользователю выводится сообщение. Кроме того, событие заносится в журнал событий приложений Windows с предположением о том, что источник события с именем Мисамплессите уже существует. Чтобы создать указанный источник события, см. Приведенный ниже пример кода. Дополнительные сведения о создании источника событий см. в разделе [Обработка событий сервера на страницах веб-форм ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Для свойства <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> объекта <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> задается значение `true`, чтобы указать, что ошибка была обработана.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Используйте следующий пример кода, если необходимо программно добавить источник событий с именем Мисамплессите в журнал приложения. Чтобы первый пример кода работал правильно, этот источник событий должен существовать. Для следующего примера кода требуются права администратора.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 Следующий пример кода можно использовать в качестве файла Чанжепассвордмаил. htm для предыдущего примера кода.  
  
> [!IMPORTANT]
>  Отправка имен учетных записей пользователей или паролей в сообщении электронной почты является потенциальной угрозой безопасности. Сообщения электронной почты обычно отправляются в виде обычного текста и могут быть прочитаны специальными сетевыми приложениями «перехвата».  Для повышения безопасности используйте способы защиты, описанные в статье [Защита элементов управления входом](https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c).  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
    <altmember cref="T:System.Web.UI.WebControls.CreateUserWizard" />
    <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendingMail" />
    <altmember cref="T:System.Web.UI.WebControls.ChangePassword" />
    <altmember cref="P:System.Web.UI.WebControls.ChangePassword.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendingMail" />
    <altmember cref="T:System.Web.UI.WebControls.PasswordRecovery" />
    <altmember cref="P:System.Web.UI.WebControls.PasswordRecovery.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendingMail" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
    <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Вкладка "приложение" средства администрирования веб-сайта</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmbeddedMailObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EmbeddedMailObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы получить или задать идентификатор внедренного элемента, используйте свойство <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A>. Чтобы получить или задать путь к внедренному элементу, используйте свойство <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A>. Оба свойства должны быть установлены для успешного внедрения элемента в почтовое сообщение.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Вкладка "приложение" средства администрирования веб-сайта</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmbeddedMailObject (string name, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObject.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EmbeddedMailObject(System::String ^ name, System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.EmbeddedMailObject : string * string -&gt; System.Web.UI.WebControls.EmbeddedMailObject" Usage="new System.Web.UI.WebControls.EmbeddedMailObject (name, path)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Имя используется в качестве идентификатора внедренного в сообщение объекта. Для получения дополнительной информации см. <see cref="P:System.Web.UI.WebControls.EmbeddedMailObject.Name" />.</param>
        <param name="path">Маршрут используется для извлечения объекта, который будет внедрен в сообщение. Для получения дополнительной информации см. <see cref="P:System.Web.UI.WebControls.EmbeddedMailObject.Path" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" />, используя указанные идентификатор и маршрут для формирования объекта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показан пример кода программной части страницы ASP.NET, который использует элемент управления <xref:System.Web.UI.WebControls.ChangePassword> и включает обработчик событий <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> с именем `SendingMail`. В этом примере кода предполагается, что веб-сайт ASP.NET настроен для использования проверки подлинности членства и форм ASP.NET и создан пользователь, имя и пароль которого известны. Дополнительные сведения см. [в разделе Практические руководства. Реализация простой проверки подлинности с помощью форм](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Если изменение пароля прошло удачно, код в обработчике событий `SendingMail` пытается отправить пользователю сообщение электронной почты для подтверждения изменения. Чтобы этот пример кода работал, протокол SMTP уже должен быть настроен на сервере. Сведения о настройке SMTP-сервера см. в разделе [как установить и настроить виртуальные SMTP-серверы в IIS 6,0](https://docs.microsoft.com/previous-versions/aspnet/8b83ac7t(v=vs.100)). В этом примере нет необходимости настраивать SMTP-сервер. Этот пример создается для проверки сбоя при отправке сообщения электронной почты.  
  
 Если почтовый сервер настроен неправильно или возникла какая-либо другая ошибка и сообщение электронной почты не удается отправить, вызывается функция `SendMailError`. Пользователю выводится сообщение. Кроме того, событие заносится в журнал событий приложений Windows с предположением о том, что источник события с именем Мисамплессите уже существует. Чтобы создать указанный источник события, см. Приведенный ниже пример кода. Дополнительные сведения о создании источника событий см. в разделе [Обработка событий сервера на страницах веб-форм ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Для свойства <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> объекта <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> задается значение `true`, чтобы указать, что ошибка была обработана.  
  
 В следующем примере кода демонстрируется использование страницы. aspx.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ChangePassword#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ChangePassword#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/VB/changepassword_vb.aspx#1)]  
  
 В следующем примере кода показано использование файла кода программной части.  
  
 [!code-csharp[System.Web.UI.WebControls.ChangePassword#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/CS/changepassword.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ChangePassword#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/VB/changepassword.vb#2)]  
  
 Используйте следующий пример кода, если необходимо программно добавить источник событий с именем Мисамплессите в журнал приложения. Чтобы первый пример кода работал правильно, этот источник событий должен существовать. Для следующего примера кода требуются права администратора.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 Следующий пример кода можно использовать в качестве файла Чанжепассвордмаил. htm для предыдущего примера кода.  
  
> [!IMPORTANT]
>  Отправка имен или паролей учетных записей пользователей в сообщении электронной почты является потенциальной угрозой безопасности. Сообщения электронной почты обычно отправляются в виде обычного текста и могут быть прочитаны специальными сетевыми приложениями «перехвата».  Для повышения безопасности используйте способы защиты, описанные в статье [Защита элементов управления входом](https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c).  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <altmember cref="T:System.Web.Mail.SmtpMail" />
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Вкладка "приложение" средства администрирования веб-сайта</related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EmbeddedMailObject.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.WebControls.EmbeddedMailObject.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя, используемое в качестве идентификатора объекта, который внедряется в сообщение электронной почты, сформированное с помощью класса <see cref="T:System.Web.UI.WebControls.MailDefinition" />.</summary>
        <value>Возвращает идентификатор объекта для внедрения в сообщение электронной почты.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> указывает идентификатор элемента для внедрения в сообщение электронной почты, сформированное декларативно с помощью класса <xref:System.Web.UI.WebControls.MailDefinition>. Идентификатор используется для отображения элемента, содержащегося в свойстве <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A>, в соответствующем месте в тексте файла, указанном в свойстве <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A>, с использованием следующего синтаксиса:  
  
```  
<img src="cid:identifier" alt="Alternate Text" />  
```  
  
 Как правило, элемент является файлом изображения. Значением по умолчанию для свойства <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> является пустая строка.  
  
 При проектировании специальных возможностей рекомендуется задать свойство альтернативного текста в почтовом сообщении для любых внедренных изображений.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется страница ASP.NET, использующая веб-элемент управления <xref:System.Web.UI.WebControls.ChangePassword> и включающая обработчик событий <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> для события с именем `SendingMail`. В примере кода предполагается, что веб-сайт ASP.NET настроен для использования проверки подлинности членства и форм ASP.NET, а также что пользователь создал имя и пароль, которые вам известны. Дополнительные сведения см. [в разделе Практические руководства. Реализация простой проверки подлинности с помощью форм](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Если изменение пароля прошло удачно, код в обработчике событий `SendingMail` пытается отправить пользователю сообщение электронной почты для подтверждения изменения. Чтобы этот пример кода работал, протокол SMTP уже должен быть настроен на сервере. Сведения о настройке SMTP-сервера см. в разделе [как установить и настроить виртуальные SMTP-серверы в IIS 6,0](https://docs.microsoft.com/previous-versions/aspnet/8b83ac7t(v=vs.100)). В этом примере нет необходимости настраивать SMTP-сервер. Этот пример создается для проверки сбоя при отправке сообщения электронной почты.  
  
 Если почтовый сервер настроен неправильно или возникла какая-либо другая ошибка и сообщение электронной почты не удается отправить, вызывается функция `SendMailError`. Пользователю выводится сообщение. Кроме того, событие заносится в журнал событий приложений Windows с предположением о том, что источник события с именем Мисамплессите уже существует. Чтобы создать указанный источник события, см. Приведенный ниже пример кода. Дополнительные сведения о создании источника событий см. в разделе [Обработка событий сервера на страницах веб-форм ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Для свойства <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> объекта <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> задается значение `true`, чтобы указать, что ошибка была обработана.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Используйте следующий пример кода, если необходимо программно добавить источник событий с именем Мисамплессите в журнал приложения. Чтобы первый пример кода работал правильно, этот источник событий должен существовать. Для следующего примера кода требуются права администратора.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 Следующий пример кода можно использовать в качестве файла Чанжепассвордмаил. htm для предыдущего примера кода.  
  
> [!IMPORTANT]
>  Отправка имен или паролей учетных записей пользователей в сообщении электронной почты является потенциальной угрозой безопасности. Сообщения электронной почты отправляются в виде обычного текста и могут быть прочитаны специальными сетевыми приложениями «перехвата».  Для повышения безопасности используйте способы защиты, описанные в статье [Защита элементов управления входом](https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c).  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Вкладка "приложение" средства администрирования веб-сайта</related>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EmbeddedMailObject.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.UI.WebControls.EmbeddedMailObject.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.MailFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.MailFileEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает маршрут, используемый для извлечения объекта, который внедряется в сообщение, формируемое с помощью класса <see cref="T:System.Web.UI.WebControls.MailDefinition" />.</summary>
        <value>Возвращает маршрут к объекту, внедряемому в сообщение.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> указывает путь к элементу, который необходимо внедрить в почтовое сообщение, созданное декларативно с помощью объекта <xref:System.Web.UI.WebControls.MailDefinition>. Путь к файлу в <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> должен быть путем, таким как К:\мисервер\баннер.гиф. Как правило, внедренным элементом является файл изображения. Если на файл изображения ссылается идентификатор в почтовом сообщении, но он не включен в сообщение, то изображение отображается как поврежденное вложение при просмотре сообщения электронной почты.  
  
 При проектировании специальных возможностей рекомендуется задать свойство альтернативного текста в почтовом сообщении для любых внедренных изображений.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется страница ASP.NET, использующая веб-элемент управления <xref:System.Web.UI.WebControls.ChangePassword> и включающая обработчик событий <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> для события с именем `SendingMail`. В примере кода предполагается, что веб-сайт ASP.NET настроен для использования проверки подлинности членства и форм ASP.NET, а также что пользователь создал имя и пароль, которые вам известны. Дополнительные сведения см. [в разделе Практические руководства. Реализация простой проверки подлинности с помощью форм](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Если изменение пароля прошло удачно, код в обработчике событий `SendingMail` пытается отправить пользователю сообщение электронной почты для подтверждения изменения. Чтобы этот пример кода работал, протокол SMTP уже должен быть настроен на сервере. Сведения о настройке SMTP-сервера см. в разделе [как установить и настроить виртуальные SMTP-серверы в IIS 6,0](https://docs.microsoft.com/previous-versions/aspnet/8b83ac7t(v=vs.100)). В этом примере нет необходимости настраивать SMTP-сервер. Этот пример создается для проверки сбоя при отправке сообщения электронной почты.  
  
 Если почтовый сервер настроен неправильно или возникла какая-либо другая ошибка и сообщение электронной почты не удается отправить, вызывается функция `SendMailError`. Пользователю выводится сообщение. Кроме того, событие заносится в журнал событий приложений Windows с предположением о том, что источник события с именем Мисамплессите уже существует. Чтобы создать указанный источник события, см. Приведенный ниже пример кода. Дополнительные сведения о создании источника событий см. в разделе [Обработка событий сервера на страницах веб-форм ASP.NET](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). Для свойства <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> объекта <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> задается значение `true`, чтобы указать, что ошибка была обработана.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 Используйте следующий пример кода, если необходимо программно добавить источник событий с именем Мисамплессите в журнал приложения. Чтобы первый пример кода работал правильно, этот источник событий должен существовать. Для следующего примера кода требуются права администратора.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 Следующий пример кода можно использовать в качестве файла Чанжепассвордмаил. htm для предыдущего примера кода.  
  
> [!IMPORTANT]
>  Отправка имен или паролей учетных записей пользователей в сообщении электронной почты является потенциальной угрозой безопасности. Сообщения электронной почты обычно отправляются в виде обычного текста и могут быть прочитаны специальными сетевыми приложениями «перехвата».  Для повышения безопасности используйте способы защиты, описанные в статье [Защита элементов управления входом](https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c).  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Вкладка "приложение" средства администрирования веб-сайта</related>
      </Docs>
    </Member>
  </Members>
</Type>
