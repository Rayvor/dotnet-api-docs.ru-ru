<Type Name="BoundField" FullName="System.Web.UI.WebControls.BoundField">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6e94421910ccc641b86fc005a6eec0e5ef705dfe" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69401814" /></Metadata><TypeSignature Language="C#" Value="public class BoundField : System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BoundField extends System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BoundField" />
  <TypeSignature Language="VB.NET" Value="Public Class BoundField&#xA;Inherits DataControlField" />
  <TypeSignature Language="C++ CLI" Value="public ref class BoundField : System::Web::UI::WebControls::DataControlField" />
  <TypeSignature Language="F#" Value="type BoundField = class&#xA;    inherit DataControlField" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataControlField</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет поле, которое отображается как текст в элементе управления с привязкой к данным.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс используется элементами управления с привязкой к данным ( <xref:System.Web.UI.WebControls.GridView> например, и <xref:System.Web.UI.WebControls.DetailsView>) для вывода значения поля в виде текста. <xref:System.Web.UI.WebControls.BoundField> <xref:System.Web.UI.WebControls.BoundField> Объект отображается по-разному в зависимости от привязанного к данным элемента управления, в котором он используется. Например, <xref:System.Web.UI.WebControls.GridView> элемент управления <xref:System.Web.UI.WebControls.BoundField> отображает объект как столбец, а <xref:System.Web.UI.WebControls.DetailsView> элемент управления отображает его как строку.  
  
 Чтобы указать поле, отображаемое в <xref:System.Web.UI.WebControls.BoundField> объекте, <xref:System.Web.UI.WebControls.BoundField.DataField%2A> задайте для свойства имя поля. Значение поля может быть закодировано в <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> `true`формате HTML перед отображением путем присвоения свойству значения. Пользовательскую строку форматирования можно применить к значению поля, задав <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> свойство. Если свойство равно `true`, в строке настраиваемого формата используется закодированное строковое значение поля. <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> По умолчанию строка форматирования применяется к значениям полей только в том случае, если элемент управления с привязкой к данным находится в режиме только для чтения. Чтобы применить строку форматирования к значениям, отображаемым, когда элемент управления с привязкой к данным находится в <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> режиме редактирования `true`, задайте для свойства значение. Если значение поля равно null, можно отобразить пользовательский заголовок, задав <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> свойство. Объект также может автоматически преобразовывать пустые строковые ("") значения полей в значения NULL, <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> присвоив свойству `true`значение. <xref:System.Web.UI.WebControls.BoundField>  
  
 Можно скрыть <xref:System.Web.UI.WebControls.BoundField> объект в элементе управления с привязкой к данным, <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> задав свойству `false`значение. Чтобы запретить изменение значения поля в режиме редактирования, задайте <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> для `true`свойства значение. В элементах управления с привязкой к данным, поддерживающих вставку <xref:System.Web.UI.WebControls.DetailsView> записей (например, элемент управления) <xref:System.Web.UI.WebControls.BoundField> , можно скрыть объект <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> , задав `false`для свойства значение. Обычно это делается, когда необходимо скрыть автоматически созданное ключевое поле в режиме вставки.  
  
 Можно настроить разделы <xref:System.Web.UI.WebControls.BoundField> верхнего и нижнего колонтитула объекта. Чтобы отобразить заголовок в разделах верхнего или нижнего колонтитула, задайте <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> свойства или <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> соответственно. Вместо отображения текста в разделе заголовка можно отобразить изображение, задав <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> свойство. Раздел заголовка можно скрыть в <xref:System.Web.UI.WebControls.BoundField> объекте, <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> задав свойству `false`значение.  
  
> [!NOTE]
>  Некоторые элементы управления с привязкой к данным ( <xref:System.Web.UI.WebControls.GridView> например, элемент управления) могут отображать или скрывать только весь раздел заголовка элемента управления. Эти элементы управления с привязкой к данным не <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> поддерживают свойство для отдельного привязанного поля. Чтобы показать или скрыть весь раздел заголовка элемента управления с привязкой к данным (если он доступен), используйте `ShowHeader` свойство элемента управления.  
  
 Можно также настроить внешний вид <xref:System.Web.UI.WebControls.BoundField> объекта (цвет шрифта, цвет фона и т. д.), задав свойства стиля для различных частей поля. В следующей таблице перечислены различные свойства стиля.  
  
|Свойство Style|Описание|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|Параметры стиля для дочерних серверных веб-элементов управления <xref:System.Web.UI.WebControls.BoundField> объекта.|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|Параметры стиля для нижнего колонтитула <xref:System.Web.UI.WebControls.BoundField> объекта.|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|Параметры стиля для раздела <xref:System.Web.UI.WebControls.BoundField> заголовка объекта.|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|Параметры стиля для элементов данных в <xref:System.Web.UI.WebControls.BoundField> объекте.|  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.BoundField> объект для отображения значений поля <xref:System.Web.UI.WebControls.GridView> в элементе управления.  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.InsertVisible" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ReadOnly" />
    <altmember cref="P:System.Web.UI.WebControls.CheckBoxField.Text" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoundField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BoundField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.BoundField" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот конструктор для инициализации нового экземпляра <xref:System.Web.UI.WebControls.BoundField> класса. Этот конструктор обычно используется при добавлении полей в динамически созданный элемент управления с привязкой к данным.  
  
 Чтобы динамически добавить <xref:System.Web.UI.WebControls.BoundField> объект в элемент управления с привязкой к данным, создайте новый <xref:System.Web.UI.WebControls.BoundField> объект, задайте его свойства, а затем добавьте его в коллекцию полей привязанного к данным элемента управления. Например, если вы используете <xref:System.Web.UI.WebControls.GridView> элемент управления, <xref:System.Web.UI.WebControls.BoundField> добавьте объект в <xref:System.Web.UI.WebControls.GridView.Columns%2A> коллекцию.  
  
> [!NOTE]
>  Хотя можно динамически добавлять поля к элементу управления с привязкой к данным, настоятельно рекомендуется, чтобы поля были статически объявлены, а затем отображались или скрыты соответствующим образом. Статическое объявление всех полей уменьшает размер состояния представления для родительского элемента управления с привязкой к данным.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать конструктор для динамического добавления <xref:System.Web.UI.WebControls.BoundField> объекта <xref:System.Web.UI.WebControls.GridView> в элемент управления.  
  
 [!code-aspx-csharp[BoundFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldCtor/CS/boundfieldctorcs.aspx#1)]
 [!code-aspx-vb[BoundFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldCtor/VB/boundfieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public virtual bool ApplyFormatInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ApplyFormatInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ApplyFormatInEditMode : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее на применения форматирующей строки, указанной свойством <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> к значениям поля, если элемент управления, привязанный к данным и содержащий объект <see cref="T:System.Web.UI.WebControls.BoundField" /> находится в режиме правки.</summary>
        <value><see langword="true" /> для применения форматирующей строки к значениям поля в режиме правки; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Элементы управления с привязкой к данным <xref:System.Web.UI.WebControls.DetailsView>( <xref:System.Web.UI.WebControls.FormView>такие как <xref:System.Web.UI.WebControls.GridView>, и) имеют разные режимы интерфейса, позволяющие пользователю читать, изменять или вставлять записи. По умолчанию строка форматирования, заданная <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> свойством, применяется к значениям полей только в том случае, если элемент управления с привязкой к данным находится в режиме только для чтения. Чтобы применить строку форматирования к значениям, отображаемым, когда элемент управления с привязкой к данным находится в <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> режиме редактирования `true`, задайте для свойства значение.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.BoundField> Объект не удаляет форматирование автоматически при обновлении поля в источнике данных. Если форматирование не должно быть частью сохраненного значения, необходимо будет удалить форматирование программным способом.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> свойство для применения строки форматирования к значениям полей, <xref:System.Web.UI.WebControls.GridView> когда элемент управления находится в режиме редактирования. Затем форматирование удаляется программным способом перед обновлением значения в источнике данных.  
  
 [!code-aspx-csharp[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldapplyformatineditmode/CS/boundfieldapplyformatineditmodecs.aspx#1)]
 [!code-aspx-vb[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldapplyformatineditmode/VB/boundfieldapplyformatineditmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public virtual bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, показывающее, преобразовываются ли пустые строковые значения ("") автоматически в значения null, когда в источнике данных обновляется поле данных.</summary>
        <value>Значение <see langword="true" />, если пустые строковые значения автоматически преобразуются в значения null; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Иногда пользователь может ввести пустую строку для значения поля при обновлении или вставке записей. <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> Используйте свойство, чтобы указать, должно ли пустое строковое значение автоматически преобразовываться в значение null при обновлении поля данных в источнике данных.  
  
> [!NOTE]
>  По умолчанию <xref:System.Web.UI.WebControls.BoundField> объект отображает значения NULL как пустые строки. Чтобы отобразить другое значение, задайте <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> свойство, чтобы указать, что значение поля пустой строки ("") должно автоматически преобразовываться в значение null.  
  
 [!code-aspx-csharp[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/CS/boundfieldconvertemptystingtonullcs.aspx#1)]
 [!code-aspx-vb[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/VB/boundfieldconvertemptystingtonullvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberSignature Language="F#" Value="override this.CopyProperties : System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="boundField.CopyProperties newField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">Объект <see cref="T:System.Web.UI.WebControls.DataControlField" />, в который копируются свойства текущего объекта <see cref="T:System.Web.UI.WebControls.BoundField" />.</param>
        <summary>Копирует свойства текущего объекта <see cref="T:System.Web.UI.WebControls.BoundField" /> в указанный объект <see cref="T:System.Web.UI.WebControls.DataControlField" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод — это вспомогательный метод, используемый <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> методом для копирования свойств текущего <xref:System.Web.UI.WebControls.BoundField> объекта в <xref:System.Web.UI.WebControls.DataControlField> объект, созданный методом. <xref:System.Web.UI.WebControls.BoundField.CopyProperties%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.CreateField" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberSignature Language="F#" Value="override this.CreateField : unit -&gt; System.Web.UI.WebControls.DataControlField" Usage="boundField.CreateField " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает пустой объект <see cref="T:System.Web.UI.WebControls.BoundField" />.</summary>
        <returns>Пустая коллекция типа <see cref="T:System.Web.UI.WebControls.BoundField" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод — это вспомогательный метод, используемый <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> методом для создания пустого <xref:System.Web.UI.WebControls.BoundField> объекта, в который копируются свойства текущего <xref:System.Web.UI.WebControls.BoundField> объекта. <xref:System.Web.UI.WebControls.BoundField.CreateField%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public virtual string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.BoundField.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя поля данных, привязываемого к объекту <see cref="T:System.Web.UI.WebControls.BoundField" />.</summary>
        <value>Имя поля данных, привязываемого к объекту <see cref="T:System.Web.UI.WebControls.BoundField" />. По умолчанию используется пустая строка (""), указывающая, что это свойство не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство, чтобы указать имя поля данных для привязки <xref:System.Web.UI.WebControls.BoundField> к объекту. <xref:System.Web.UI.WebControls.BoundField.DataField%2A> Значения указанного поля отображаются в <xref:System.Web.UI.WebControls.BoundField> объекте в виде текста. При необходимости можно отформатировать отображаемый текст, задав <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> свойство.  
  
> [!NOTE]
>  Если значение поля равно null, для значения по умолчанию отображается пустая строка (""). Чтобы указать альтернативный заголовок, задайте <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Web.UI.WebControls.BoundField.DataField%2A> свойства для указания поля, отображаемого <xref:System.Web.UI.WebControls.BoundField> в столбце <xref:System.Web.UI.WebControls.GridView> поля элемента управления.  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFormatString : string with get, set" Usage="System.Web.UI.WebControls.BoundField.DataFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает строку, определяющую формат отображения значения поля.</summary>
        <value>Строка форматирования, определяющая формат отображения значения поля. По умолчанию это пустая строка (""), указывающая на неприменение к значению поля специального форматирования.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство, чтобы указать пользовательский формат отображения для значений, отображаемых <xref:System.Web.UI.WebControls.BoundField> в объекте. <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> Если свойство не задано, значение поля отображается без специального форматирования.  
  
> [!NOTE]
>  В версиях ASP.NET, предшествующих 3,5, необходимо присвоить <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> `false` свойству значение, чтобы форматировать поля, которые не являются строковыми типами данных. В противном случае значение поля преобразуется в строку методом преобразования по умолчанию перед применением строки формата, хранящейся в <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> свойстве.  
  
 По умолчанию строка форматирования применяется к значению поля только в том случае, если элемент управления с привязкой к <xref:System.Web.UI.WebControls.BoundField> данным, содержащий объект, находится в режиме только для чтения. Чтобы применить строку форматирования к значениям полей в режиме редактирования, присвойте <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> `true`свойству значение.  
  
 Строка форматирования может быть любой строкой литерала и обычно содержит заполнитель для значения поля. Например, в строке `Item Value: {0}`форматирования значение поля заменяется {0} заполнителем, когда <xref:System.Web.UI.WebControls.BoundField> строка отображается в объекте. Остальная часть строки форматирования отображается как литеральный текст.  
  
 Если строка форматирования не содержит заполнитель, в окончательный отображаемый текст включается только сама строка форматирования (значение поля из источника данных не включается). Если заполнитель равен 0 (нулю), заключенному в фигурные скобки, как показано в предыдущем примере, значение поля преобразуется в строку методом по умолчанию. Можно добавить к нулю строку, указывающую, как должно быть отформатировано значение поля. Например, заполнитель `{0:C}` для числового поля указывает, что значение поля должно быть преобразовано в формат валюты.  
  
 Форматирование применяется с помощью <xref:System.String.Format%2A> метода. Число, следующее за левой фигурной скобкой, является частью синтаксиса, используемого этим методом, и указывает, какой из ряда значений должен использоваться заполнителем. Поскольку в каждой ячейке имеется только одно значение поля, число, следующее за левой фигурной скобкой, может быть установлено только равным 0.  
  
 В следующей таблице перечислены стандартные символы формата для числовых полей. В этих символах формата регистр не учитывается, за `X`исключением, который отображает шестнадцатеричные символы в указанном случае. Можно добавить число в большинство символов формата, чтобы указать, сколько значащих цифр или десятичных разрядов требуется отобразить.  
  
> [!NOTE]
>  В большинстве случаев форматирование зависит от языка и региональных параметров сервера. Примеры предназначены для языка и региональных параметров `en-US`.  
  
|Символ формата|Описание|Пример|  
|----------------------|-----------------|-------------|  
|`C` или `c`|Отображает числовые значения в формате валюты. Можно указать число десятичных разрядов.|Формат: `{0:C}`<br /><br /> 123.456 -> $123.46<br /><br /> Формат: `{0:C3}`<br /><br /> 123.456  -> $123.456|  
|`D` или `d`|Отображает целочисленные значения в десятичном формате. Можно указать количество цифр. (Хотя тип называется "Decimal", числа форматируются как целые числа.)|Формат: `{0:D}`<br /><br /> 1234 -> 1234<br /><br /> Формат: `{0:D6}`<br /><br /> 1234  -> 001234|  
|`E` или `e`|Отображает числовые значения в экспоненциальном (экспоненциальном) формате. Можно указать число десятичных разрядов.|Формат: `{0:E}`<br /><br /> 1052,0329112756-> 1.052033 E + 003<br /><br /> Формат: `{0:E2}`<br /><br /> -1052,0329112756->-1,05 e + 003|  
|`F` или `f`|Отображает числовые значения в фиксированном формате. Можно указать число десятичных разрядов.|Формат: `{0:F}`<br /><br /> 1234.567 -> 1234.57<br /><br /> Формат: `{0:F3}`<br /><br /> 1234.567 -> 1234.567|  
|`G` или `g`|Отображает числовые значения в общем формате (самая компактная часть нотации с фиксированной или экспоненциальной запятой). Можно указать количество значащих цифр.|Формат: `{0:G}`<br /><br /> -123.456 -> -123.456<br /><br /> Формат: `{0:G2}`<br /><br /> -123.456 -> -120|  
|`N` или `n`|Отображает числовые значения в числовом формате (включая разделители групп и необязательный знак отрицательного числа). Можно указать число десятичных разрядов.|Формат: `{0:N}`<br /><br /> 1234.567 -> 1,234.57<br /><br /> Формат: `{0:N4}`<br /><br /> 1234.567 -> 1,234.5670|  
|`P` или `p`|Отображает числовые значения в процентном формате. Можно указать число десятичных разрядов.|Формат: `{0:P}`<br /><br /> 1 -> 100.00%<br /><br /> Формат: `{0:P1}`<br /><br /> .5 -> 50.0%|  
|`R` или `r`|Отображает <xref:System.Single>значения <xref:System.Double>, или`BigInteger` в формате приема-передачи.|Формат: `{0:R}`<br /><br /> 123456789.12345678 -> 123456789.12345678|  
|`X` или `x`|Отображает целочисленные значения в шестнадцатеричном формате. Можно указать количество цифр.|Формат: `{0:X}`<br /><br /> 255 -> FF<br /><br /> Формат: `{0:x4}`<br /><br /> 255  -> 00ff|  
  
 Дополнительные сведения и примеры, демонстрирующие форматирование других значений языка и региональных параметров, см. в разделе [строки стандартных числовых форматов](~/docs/standard/base-types/standard-numeric-format-strings.md). Можно также создавать строки настраиваемых числовых форматов. Дополнительные сведения см. в разделе [Строки настраиваемых числовых форматов](~/docs/standard/base-types/custom-numeric-format-strings.md).  
  
 В следующей таблице перечислены символы форматирования для <xref:System.DateTime> полей. Большинство этих спецификаций форматирования приводят к различным результатам, в зависимости от настроек языка и региональных параметров. В примерах используется <xref:System.DateTime> значение 6/15/2009 1:45:30 PM с `en-US`параметром culture.  
  
|Символ формата|Описание|Пример|  
|----------------------|-----------------|-------------|  
|`d`|Короткий шаблон даты.|Формат: `{0:d}`<br /><br /> 6/15/2009 1:45:30 PM-> 6/15/2009|  
|`D`|Полный шаблон даты.|Формат: `{0:D}`<br /><br /> 6/15/2009 1:45:30 PM-> понедельник, 15 июня 2009 г.|  
|`f`|Полный шаблон даты и времени (короткий шаблон времени).|Формат: `{0:f}`<br /><br /> 6/15/2009 1:45:30 PM-> понедельник, 15 июня 2009 1:45|  
|`F`|Полный шаблон даты и времени (полный шаблон времени).|Формат: `{0:F}`<br /><br /> 6/15/2009 1:45:30 PM-> понедельник, 15 июня 2009 1:45:30|  
|`g`|Общий шаблон даты и времени (короткий шаблон времени).|Формат: `{0:g}`<br /><br /> 6/15/2009 1:45:30 PM-> 6/15/2009 1:45 PM|  
|`G`|Общий шаблон даты и времени (полный шаблон времени).|Формат: `{0:G}`<br /><br /> 6/15/2009 1:45:30 PM-> 6/15/2009 1:45:30 PM|  
|`M` или `m`|Шаблон дней месяца.|Формат: `{0:M}`<br /><br /> 6/15/2009 1:45:30 PM-> 15 июня|  
|`O` или `o`|Шаблон обратного преобразования даты и времени.|Формат: `{0:o}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30.0900000|  
|`R` или `r`|Шаблон RFC1123 (Дополнительные сведения см. <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=nameWithType>в разделе).|Формат: `{0:R}`<br /><br /> 6/15/2009 1:45:30 PM -> Mon, 15 Jun 2009 20:45:30 GMT|  
|`s`|Сортируемый шаблон времени и даты.|Формат: `{0:s}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30|  
|`t`|Короткий шаблон времени.|Формат: `{0:t}`<br /><br /> 6/15/2009 1:45:30 PM-> 1:45 PM|  
|`T`|Полный шаблон времени.|Формат: `{0:T}`<br /><br /> 6/15/2009 1:45:30 PM-> 1:45:30 PM|  
|`u`|Универсальный сортируемый шаблон времени и даты.|Формат: `{0:u}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15 20:45:30Z|  
|`U`|Универсальный полный шаблон даты и времени.|Формат: `{0:U}`<br /><br /> 6/15/2009 1:45:30 PM-> понедельник, 15 июня 2009 8:45:30|  
|`Y` или `y`|Шаблон месяца года.|Формат: `{0:Y}`<br /><br /> 6/15/2009 1:45:30 PM-> Июнь, 2009|  
  
 Дополнительные сведения и примеры, демонстрирующие форматирование других значений языка и региональных параметров, см. в разделе [строки стандартных форматов даты и времени](~/docs/standard/base-types/standard-date-and-time-format-strings.md). Можно также создавать строки настраиваемых форматов даты и времени. Дополнительные сведения см. в разделе [строки настраиваемых форматов даты и времени](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  
  
   
  
## Examples  
 Для этого раздела доступен проект веб-сайта Visual Studio с исходным кодом: [Скачайте](https://go.microsoft.com/fwlink/?LinkId=191889).  
  
 В следующем примере показано использование <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> свойства для задания пользовательского формата отображения значений поля.  
  
  
  
 В следующем примере показана одна строка выходных данных, которая создается в этом примере.  
  
|ProductID|name|ProductNumber|ListPrice|Насыщенность|ModifiedDate|  
|---------------|----------|-------------------|---------------|------------|------------------|  
|`000680`|`HL Road Frame - Black, 58`|`#FR-R92B-58`|`$1,431.50`|`1016.040`|`3/11/2004`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Типы форматирования в .NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExtractValuesFromCell">
      <MemberSignature Language="C#" Value="public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExtractValuesFromCell(class System.Collections.Specialized.IOrderedDictionary dictionary, class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ExtractValuesFromCell (dictionary As IOrderedDictionary, cell As DataControlFieldCell, rowState As DataControlRowState, includeReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ExtractValuesFromCell(System::Collections::Specialized::IOrderedDictionary ^ dictionary, System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="F#" Value="override this.ExtractValuesFromCell : System.Collections.Specialized.IOrderedDictionary * System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState * bool -&gt; unit" Usage="boundField.ExtractValuesFromCell (dictionary, cell, rowState, includeReadOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="includeReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dictionary">Объект <see cref="T:System.Collections.IDictionary" />, используемый для хранения значений указанной ячейки.</param>
        <param name="cell">Объект <see cref="T:System.Web.UI.WebControls.TableCell" />, содержащий извлекаемые значения.</param>
        <param name="rowState">Одно из значений перечисления <see cref="T:System.Web.UI.WebControls.DataControlRowState" />.</param>
        <param name="includeReadOnly">Значение <see langword="true" />, чтобы включить значения файлов, доступных только для чтения; в противном случае — <see langword="false" />.</param>
        <summary>Заполняет указанный объект <see cref="T:System.Collections.IDictionary" /> значениями из указанного объекта <see cref="T:System.Web.UI.WebControls.TableCell" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод предоставляется в качестве удобного способа извлечения значений полей из указанного <xref:System.Web.UI.WebControls.TableCell> объекта в <xref:System.Web.UI.WebControls.BoundField> объекте. <xref:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell%2A>  
  
> [!NOTE]
>  Этот метод используется в основном разработчиками элементов управления.  
  
 Этот метод не имеет возвращаемого значения. Вместо этого значения полей возвращаются по ссылке через <xref:System.Collections.IDictionary?displayProperty=nameWithType> объект, переданный `dictionary` для параметра. После вызова метода пройдите по <xref:System.Collections.IDictionary?displayProperty=nameWithType> объекту, чтобы получить доступ к значениям поля.  
  
> [!NOTE]
>  Если объект содержит значения полей, доступных только для чтения, необходимо передать их `true` в качестве `includeReadOnly` параметра, чтобы включить эти значения. <xref:System.Web.UI.WebControls.TableCell>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
      </Docs>
    </Member>
    <Member MemberName="FormatDataValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataValue (object dataValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataValue(object dataValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataValue (dataValue As Object, encode As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataValue(System::Object ^ dataValue, bool encode);" />
      <MemberSignature Language="F#" Value="abstract member FormatDataValue : obj * bool -&gt; string&#xA;override this.FormatDataValue : obj * bool -&gt; string" Usage="boundField.FormatDataValue (dataValue, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataValue" Type="System.Object" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataValue">Значение поля для форматирования.</param>
        <param name="encode"><see langword="true" /> для кодирования значения; в противном случае — значение <see langword="false" />.</param>
        <summary>Форматирует указанное значение поля для ячейки в объекте <see cref="T:System.Web.UI.WebControls.BoundField" />.</summary>
        <returns>Значение поля, преобразованное в формат, указанный <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод — это вспомогательный метод, используемый для преобразования значения поля в формат, заданный <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> свойством. <xref:System.Web.UI.WebControls.BoundField.FormatDataValue%2A> Если значение поля равно null, возвращается значение <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> свойства.  
  
> [!NOTE]
>  Этот метод используется в основном разработчиками элементов управления.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При расширении <see cref="T:System.Web.UI.WebControls.BoundField" /> класса этот метод можно переопределить для выполнения пользовательской подпрограммы форматирования.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeValue">
      <MemberSignature Language="C#" Value="protected virtual object GetDesignTimeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetDesignTimeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDesignTimeValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetDesignTimeValue();" />
      <MemberSignature Language="F#" Value="abstract member GetDesignTimeValue : unit -&gt; obj&#xA;override this.GetDesignTimeValue : unit -&gt; obj" Usage="boundField.GetDesignTimeValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает значение, используемое для значения поля при отрисовке объекта <see cref="T:System.Web.UI.WebControls.BoundField" /> в конструкторе.</summary>
        <returns>Значение отображаемого в конструкторе в качестве значения поля.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод — это вспомогательный метод, используемый для определения значения, отображаемого для поля при <xref:System.Web.UI.WebControls.BoundField> отрисовке объекта в конструкторе. <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> Если реальные данные не могут быть получены из источника данных во время разработки, вместо этого отображается значение, возвращаемое этим методом.  
  
> [!NOTE]
>  Этот метод используется в основном разработчиками элементов управления.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При расширении <see cref="T:System.Web.UI.WebControls.BoundField" /> класса этот метод можно переопределить для возврата другого значения, отображаемого для поля в конструкторе.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="protected virtual object GetValue (System.Web.UI.Control controlContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetValue(class System.Web.UI.Control controlContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetValue (controlContainer As Control) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetValue(System::Web::UI::Control ^ controlContainer);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : System.Web.UI.Control -&gt; obj&#xA;override this.GetValue : System.Web.UI.Control -&gt; obj" Usage="boundField.GetValue controlContainer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlContainer" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="controlContainer">Контейнерного значения объекта.</param>
        <summary>Извлекает значения поля, привязанного к объекту <see cref="T:System.Web.UI.WebControls.BoundField" />.</summary>
        <returns>Значение поля, привязанного к <see cref="T:System.Web.UI.WebControls.BoundField" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.GetValue%2A> Метод является вспомогательным методом, используемым для определения значения поля. Если объект отображается в конструкторе и значение поля не может быть определено во время разработки, возвращается значение, возвращенное <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> методом, а не фактическое значение поля. <xref:System.Web.UI.WebControls.BoundField>  
  
> [!NOTE]
>  Этот метод используется в основном разработчиками элементов управления.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Контейнер, заданный в параметре <paramref name="controlContainer" />, имеет значение <see langword="null" />.  
  
- или - 
Контейнер, заданный параметром <paramref name="controlContainer" /> не содержит элемент данных.  
  
- или - 
Поле данных не найдено.</exception>
        <block subset="none" type="overrides"><para>При расширении <see cref="T:System.Web.UI.WebControls.BoundField" /> класса этот метод можно переопределить, чтобы предоставить пользовательскую подпрограммы для определения значения поля.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.BoundField.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает текст для отображения в верхнем колонтитуле элемента управления данными.</summary>
        <value>Текст, отображаемый в верхнем колонтитуле элемента управления данными. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.HeaderText%2A> Используйте свойство для задания поля в элементе управления данными с понятным именем. Наиболее распространенным применением <xref:System.Web.UI.WebControls.BoundField.HeaderText%2A> свойства является предоставление осмысленных имен столбцов для полей, привязанных к данным, <xref:System.Web.UI.WebControls.GridView> в <xref:System.Web.UI.WebControls.DetailsView> элементе управления или.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public virtual bool HtmlEncode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HtmlEncode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.HtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, позволяющее определить, следует ли кодировать в HTML значения полей, перед отображением в объекте <see cref="T:System.Web.UI.WebControls.BoundField" />.</summary>
        <value><see langword="true" /> если значения поддаются HTML-кодировке перед отображением в объекте <see cref="T:System.Web.UI.WebControls.BoundField" />; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство, чтобы указать, кодируются ли значения полей в формате HTML в соответствующие строковые представления перед их отображением <xref:System.Web.UI.WebControls.BoundField> в объекте. <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> Например, `true`если это свойство имеет значение, строка со значением "\<script >" будет отображаться как "&lt;script&gt;". Если это свойство имеет `false`значение, строка будет преобразована в неизменное значение.  
  
> [!NOTE]
>  Значения полей в кодировке HTML позволяют предотвратить отображение вредоносных атак с использованием межсайтовых сценариев и злонамеренного содержимого. Это свойство должно быть включено везде, где это возможно.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> свойство, чтобы предотвратить кодирование значений полей <xref:System.Web.UI.WebControls.BoundField> в формате HTML перед отображением в объекте.  
  
 [!code-aspx-csharp[BoundFieldHtmlEncode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldHtmlEncode/CS/BoundFieldHtmlEncodecs.aspx#1)]
 [!code-aspx-vb[BoundFieldHtmlEncode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldHtmlEncode/VB/BoundFieldHtmlEncodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncodeFormatString">
      <MemberSignature Language="C#" Value="public virtual bool HtmlEncodeFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncodeFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlEncodeFormatString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HtmlEncodeFormatString { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncodeFormatString : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, нужно ли отображать текст, созданный применением свойства <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> к значению <see cref="T:System.Web.UI.WebControls.BoundField" />, в кодировке HTML.</summary>
        <value>Значение <see langword="true" />, если текст следует кодировать в HTML; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значения кодировки HTML могут помочь предотвратить появление атак с использованием межсайтовых сценариев и вредоносного содержимого. Кодировка HTML также полезна для отображения HTML-кода в браузере, например для отображения строки "\<br/>" вместо вставки разрыва строки (`<br/>` элемента) на странице.  
  
> [!NOTE]
>  Это свойство является новым в ASP.NET 3,5. Задание этого свойства для `false` восстановления поведения <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> по умолчанию свойства в версиях ASP.NET, предшествующих 3,5. Дополнительные сведения см. в описании свойства <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override bool Initialize (bool enableSorting, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Initialize(bool enableSorting, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Initialize(bool enableSorting, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Initialize : bool * System.Web.UI.Control -&gt; bool" Usage="boundField.Initialize (enableSorting, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enableSorting" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="enableSorting">Значение <see langword="true" />, если сортировка поддерживается, в противном случае — <see langword="false" />.</param>
        <param name="control">Элемент управления данными, владеющий <see cref="T:System.Web.UI.WebControls.BoundField" />.</param>
        <summary>Выполняет инициализацию объекта <see cref="T:System.Web.UI.WebControls.BoundField" />.</summary>
        <returns>Значение <see langword="false" /> во всех случаях.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод вызывается элементом управления данными, с <xref:System.Web.UI.WebControls.BoundField> которым связан объект, для выполнения базовой инициализации объекта для экземпляров поля перед тем, как поле когда-либо будет добавлено в коллекцию Rows. <xref:System.Web.UI.WebControls.BoundField.Initialize%2A> Элементы управления данными, <xref:System.Web.UI.WebControls.DetailsView> такие <xref:System.Web.UI.WebControls.GridView> как и <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> , вызывают метод `CreateChildControls` в своих методах перед вызовом других методов, таких как `CreateRow` , для создания конкретных строк с данными.  
  
 Этот метод следует вызывать при написании пользовательского элемента управления с привязкой к данным <xref:System.Web.UI.WebControls.TableCell> , использующего объекты для выполнения базовой <xref:System.Web.UI.WebControls.BoundField> инициализации объекта. Реализуйте этот метод, <xref:System.Web.UI.WebControls.BoundField>если для производного типа требуется инициализация объектов перед <xref:System.Web.UI.WebControls.TableCell> заполнением объектов <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> данными или элементами управления в методе.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlCellType * System.Web.UI.WebControls.DataControlRowState * int -&gt; unit" Usage="boundField.InitializeCell (cell, cellType, rowState, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">Объект <see cref="T:System.Web.UI.WebControls.TableCell" /> для инициализации.</param>
        <param name="cellType">Одно из значений перечисления <see cref="T:System.Web.UI.WebControls.DataControlCellType" />.</param>
        <param name="rowState">Одно из значений перечисления <see cref="T:System.Web.UI.WebControls.DataControlRowState" />.</param>
        <param name="rowIndex">Начинающийся с нуля индекс строки.</param>
        <summary>Инициализирует указанный объект <see cref="T:System.Web.UI.WebControls.TableCell" /> заданным состоянием строки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод реализован производными типами для добавления <xref:System.Web.UI.WebControls.TableCell> текста и элементов управления в объект элемента управления данными, который использует таблицы для вывода пользовательского интерфейса. <xref:System.Web.UI.WebControls.BoundField> <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> Эти элементы управления данными создают полную структуру таблицы по строкам при вызове `CreateChildControls` метода элемента управления. Метод вызывается `InitializeRow` методом элементов управления данными, таких как <xref:System.Web.UI.WebControls.DetailsView> и <xref:System.Web.UI.WebControls.GridView>. <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A>  
  
 Этот метод следует вызывать при написании пользовательского элемента управления с привязкой к данным <xref:System.Web.UI.WebControls.TableCell> , использующего объекты для инициализации ячеек структуры таблицы с данными или элементами управления. Реализуйте этот метод при написании <xref:System.Web.UI.WebControls.BoundField>класса, производного от.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeDataCell">
      <MemberSignature Language="C#" Value="protected virtual void InitializeDataCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeDataCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeDataCell (cell As DataControlFieldCell, rowState As DataControlRowState)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeDataCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberSignature Language="F#" Value="abstract member InitializeDataCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState -&gt; unit&#xA;override this.InitializeDataCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState -&gt; unit" Usage="boundField.InitializeDataCell (cell, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="cell">Объект <see cref="T:System.Web.UI.WebControls.TableCell" /> для инициализации.</param>
        <param name="rowState">Одно из значений перечисления <see cref="T:System.Web.UI.WebControls.DataControlRowState" />.</param>
        <summary>Инициализирует указанный объект <see cref="T:System.Web.UI.WebControls.TableCell" /> заданным состоянием строки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод является вспомогательным методом, используемым для инициализации ячейки <xref:System.Web.UI.WebControls.BoundField> в объекте. <xref:System.Web.UI.WebControls.BoundField.InitializeDataCell%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При расширении <see cref="T:System.Web.UI.WebControls.BoundField" /> класса этот метод можно переопределить для выполнения пользовательской процедуры инициализации.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="boundField.LoadViewState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Представляет восстанавливаемое состояние элемента управления.</param>
        <summary>Восстанавливает сохраненное раннее состояние просмотра для данного поля.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public virtual string NullDisplayText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NullDisplayText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NullDisplayText : string with get, set" Usage="System.Web.UI.WebControls.BoundField.NullDisplayText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает заголовок для поля, имеющего нулевое значение.</summary>
        <value>Заголовок для поля, имеющего нулевое значение. По умолчанию используется пустая строка (""), указывающая, что это свойство не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Иногда значение поля хранится в источнике данных как значение null. Можно указать пользовательский заголовок, который будет отображаться для полей, имеющих значение null, задав <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> свойство. Если это свойство не задано, значения пустых полей отображаются как пустые строки (""). Если запись обновляется или вставляется в элемент управления с привязкой к данным, то если пользователь вводит значение, заданное свойством (отличное от пустой строки) для поля в элементе управления с привязкой к данным, это значение автоматически преобразуется в значение NULL в источнике данных.  
  
> [!NOTE]
>  Чтобы преобразовать пустое строковое значение поля в значение null, установите <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> свойство в. `true`  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> свойство для указания пользовательского заголовка, отображаемого для значений полей null.  
  
 [!code-aspx-csharp[BoundFieldNullDisplayText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldNullDisplayText/CS/boundfieldnulldisplaytextcs.aspx#1)]
 [!code-aspx-vb[BoundFieldNullDisplayText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldNullDisplayText/VB/boundfieldnulldisplaytextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      </Docs>
    </Member>
    <Member MemberName="OnDataBindField">
      <MemberSignature Language="C#" Value="protected virtual void OnDataBindField (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataBindField(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataBindField (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataBindField(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataBindField : obj * EventArgs -&gt; unit&#xA;override this.OnDataBindField : obj * EventArgs -&gt; unit" Usage="boundField.OnDataBindField (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Источник события.</param>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Привязывает значение поля к указанному объекту <see cref="T:System.Web.UI.WebControls.BoundField" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод — это вспомогательный метод, используемый для привязки значения поля в источнике данных к соответствующей ячейке <xref:System.Web.UI.WebControls.BoundField> в объекте. <xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Элемент управления, к которому привязано значение поля, не является <see cref="T:System.Web.UI.WebControls.TextBox" /> или <see cref="T:System.Web.UI.WebControls.TableCell" />.</exception>
        <block subset="none" type="overrides"><para>При расширении <see cref="T:System.Web.UI.WebControls.BoundField" /> класса этот метод можно переопределить для выполнения пользовательской подпрограммы привязки.</para></block>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.Web.HttpException" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, позволяющее определить, можно ли менять значения поля, в режиме редактирования.</summary>
        <value>Чтобы запретить изменения значения поля в режиме правки — <see langword="true" />; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойство, чтобы предотвратить изменение значений, отображаемых <xref:System.Web.UI.WebControls.BoundField> в объекте. <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> Если элемент управления с привязкой к данным находится в режиме редактирования, поля, доступные только для чтения, отображаются как обычный текст без каких-либо элементов управления редактирования.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> Свойство применяется только к режиму редактирования. Чтобы запретить отображение полей в режиме вставки, используйте <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> свойства для предотвращения изменения значений ключевого поля, отображаемого <xref:System.Web.UI.WebControls.BoundField> в объекте, в режиме редактирования.  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
      </Docs>
    </Member>
    <Member MemberName="SupportsHtmlEncode">
      <MemberSignature Language="C#" Value="protected virtual bool SupportsHtmlEncode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsHtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SupportsHtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool SupportsHtmlEncode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsHtmlEncode : bool" Usage="System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее поддержку HTML кодирования объектом <see cref="T:System.Web.UI.WebControls.BoundField" />.</summary>
        <value>Всегда возвращает <see langword="true" /> для указания поддержки HTML кодирования в <see cref="T:System.Web.UI.WebControls.BoundField" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство является вспомогательным свойством, используемым <xref:System.Web.UI.WebControls.BoundField> классом и производными классами для определения того, поддерживается ли классом кодирование HTML. <xref:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При наследовании от <see cref="T:System.Web.UI.WebControls.BoundField" /> класса можно переопределить это свойство, чтобы указать, поддерживается ли в классе кодирование HTML.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
        <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
      </Docs>
    </Member>
    <Member MemberName="ThisExpression">
      <MemberSignature Language="C#" Value="public static readonly string ThisExpression;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ThisExpression" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.BoundField.ThisExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ThisExpression As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ ThisExpression;" />
      <MemberSignature Language="F#" Value=" staticval mutable ThisExpression : string" Usage="System.Web.UI.WebControls.BoundField.ThisExpression" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет выражение "this".</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это поле используется для указания того, что <xref:System.Web.UI.WebControls.BoundField> объект должен быть привязан к самому источнику данных, а не к полю источника данных. В этом случае `ToString` значение объекта будет отображаться в поле.  
  
 Это поле используется преимущественно разработчиками элементов управления.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRequestMode : System.Web.UI.ValidateRequestMode with get, set" Usage="System.Web.UI.WebControls.BoundField.ValidateRequestMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, проверяет ли элемент управления клиентский ввод.</summary>
        <value>Значение, указывающее, проверяет ли элемент управления клиентский ввод. Значение по умолчанию — <see cref="F:System.Web.UI.ValidateRequestMode.Inherit" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberSignature Language="F#" Value="override this.ValidateSupportsCallback : unit -&gt; unit" Usage="boundField.ValidateSupportsCallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Определяет поддержку обратных вызовов элементами управления, содержащимися в объекте <see cref="T:System.Web.UI.WebControls.BoundField" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод — это вспомогательный метод, используемый для определения того, поддерживают ли элементы <xref:System.Web.UI.WebControls.BoundField> управления, содержащиеся в объекте, обратные вызовы. <xref:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback%2A> Этот метод реализован как пустой метод (метод, который не содержит кода), чтобы указать, что обратные вызовы поддерживаются.  
  
> [!NOTE]
>  Этот метод используется в основном разработчиками элементов управления.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Классы, производные от <see cref="T:System.Web.UI.WebControls.BoundField" /> класса, могут переопределять этот метод, чтобы указать, поддерживают ли элементы управления, содержащиеся в поле, обратные вызовы. Чтобы указать, что обратные вызовы поддерживаются, реализуйте этот метод в качестве пустого метода, который не создает исключение. в противном случае вызовите исключение с полезным сообщением, описывающим, почему обратные вызовы не поддерживаются.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback" />
      </Docs>
    </Member>
  </Members>
</Type>
