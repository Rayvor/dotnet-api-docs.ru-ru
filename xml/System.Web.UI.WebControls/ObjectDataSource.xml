<Type Name="ObjectDataSource" FullName="System.Web.UI.WebControls.ObjectDataSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4acc8e1132aea83e23c3d537ed963f4b9f5eaf80" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70630866" /></Metadata><TypeSignature Language="C#" Value="public class ObjectDataSource : System.Web.UI.DataSourceControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSource extends System.Web.UI.DataSourceControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSource&#xA;Inherits DataSourceControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSource : System::Web::UI::DataSourceControl" />
  <TypeSignature Language="F#" Value="type ObjectDataSource = class&#xA;    inherit DataSourceControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Selecting")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("TypeName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ObjectDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.ObjectDataSource))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ObjectDataSourceDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет бизнес-объект, предоставляющий данные для элементов управления с привязкой к данным в многоуровневой архитектуре веб-приложений.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В этом разделе.  
  
-   [Введение](#introduction)  
  
-   [Назначение](#purpose)  
  
-   [Получение данных](#retrieving_data)  
  
-   [Выполнение операций с данными](#performing_data_operations)  
  
-   [Фильтрация данных](#filtering_data)  
  
-   [Кэширование](#caching)  
  
-   [Функции](#features)  
  
-   [Представление данных](#data_view)  
  
-   [Использование LINQ to SQL](#using_linq_to_sql)  
  
-   [Декларативный синтаксис](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Вступление  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления работает с созданным классом. Вы создаете методы, которые извлекают и обновляют данные, а также предоставляете имена этих методов <xref:System.Web.UI.WebControls.ObjectDataSource> элементу управления в разметке. Во время отрисовки или обработки <xref:System.Web.UI.WebControls.ObjectDataSource> обратной передачи вызывается указанный метод.  
  
 Визуальная отрисовка <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления отсутствует. В результате <xref:System.Web.UI.WebControls.ObjectDataSource> компонент не поддерживает такие визуальные функции, <xref:System.Web.UI.DataSourceControl.EnableTheming%2A> как свойство или <xref:System.Web.UI.DataSourceControl.SkinID%2A> .  
  
<a name="purpose"></a>   
## <a name="purpose"></a>Цель  
 Очень распространенной практикой разработки приложений является отделение уровня представления от бизнес-логики и инкапсуляции бизнес-логики в бизнес-объекты. Эти бизнес-объекты формируют отдельный слой между уровнем представления и уровнем данных, что приводит к трехуровневой архитектуре приложения. <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления позволяет разработчикам использовать элемент управления источниками данных ASP.NET, сохраняя архитектуру трехуровневой архитектуры приложения.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления использует отражение для создания экземпляров бизнес-объектов и вызова методов для них для получения, обновления, вставки и удаления данных. Свойство определяет имя класса <xref:System.Web.UI.WebControls.ObjectDataSource> , с которым работает. <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления создает и уничтожает экземпляр класса для каждого вызова метода; он не удерживает объект в памяти в течение времени существования веб-запроса. Это серьезное обстоятельство, если для используемого вами бизнес-объекта требуется много ресурсов или в противном случае он будет затратным для создания и уничтожения. Использование дорогостоящего объекта может не быть оптимальным выбором проекта, но вы можете управлять жизненным циклом объекта с помощью <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>событий, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> .  
  
> [!NOTE]
>  Методы, <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>определяемые`Shared` свойствами <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, и <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> , могут быть методами экземпляра или `static` (в Visual Basic). Если методы `static` имеют значение (`Shared` в Visual Basic), экземпляр бизнес-объекта <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>не создается, а события, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> не вызываются.  
  
<a name="retrieving_data"></a>   
## <a name="retrieving-data"></a>Получение данных  
 Чтобы получить данные из бизнес-объекта, задайте <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> для свойства имя метода, который получает данные. Если метод не возвращает <xref:System.Collections.IEnumerable> объект или <xref:System.Data.DataSet> , то объект упаковывается средой выполнения в <xref:System.Collections.IEnumerable> коллекцию. Если сигнатура метода имеет параметры, можно добавить <xref:System.Web.UI.WebControls.Parameter> объекты <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> в коллекцию, а затем привязать их к значениям, которые необходимо передать в метод <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> , указанный свойством. <xref:System.Web.UI.WebControls.ObjectDataSource> Чтобы элемент управления мог использовать параметры, параметры должны соответствовать именам и типам параметров в сигнатуре метода. Дополнительные сведения см. в разделе [Использование параметров с элементом управления ObjectDataSource](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 Элемент управления получает данные <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> при каждом вызове метода. <xref:System.Web.UI.WebControls.ObjectDataSource> Этот метод обеспечивает программный доступ к методу, указанному <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойством. Метод, заданный <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойством, вызывается автоматически элементами управления, которые привязаны <xref:System.Web.UI.WebControls.ObjectDataSource> к объекту при вызове их `DataBind` метода. Если задать `DataSourceID` свойство элемента управления с привязкой к данным, то при необходимости элемент управления автоматически привязывается к данным из источника данных. Установка свойства является рекомендуемым методом <xref:System.Web.UI.WebControls.ObjectDataSource> привязки элемента управления к элементу управления с привязкой к данным. `DataSourceID` Кроме того, можно задать `DataSource` свойство, но затем необходимо явно `DataBind` вызвать метод элемента управления с привязкой к данным. <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Метод можно вызвать программно в любое время, чтобы получить данные.  
  
 Дополнительные сведения о привязке элементов управления с привязкой к данным к элементам управления источниками данных см. в разделе [Привязка к данным с помощью элемента управления источником данных](https://msdn.microsoft.com/library/e41adfff-8fb8-449e-9cd1-9bd49788c5f7).  
  
<a name="performing_data_operations"></a>   
## <a name="performing-data-operations"></a>Выполнение операций с данными  
 В зависимости от возможностей бизнес-объекта, с которым <xref:System.Web.UI.WebControls.ObjectDataSource> работает элемент управления, можно выполнять операции с данными, такие как обновления, вставки и удаления. Чтобы выполнить эти операции с данными, задайте соответствующее имя метода и все связанные с ним параметры для операции, которую необходимо выполнить. Например, для операции обновления задайте <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> для свойства имя метода бизнес-объекта, который выполняет обновления, и добавьте <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> в коллекцию необходимые параметры. <xref:System.Web.UI.WebControls.ObjectDataSource> Если элемент управления связан с элементом управления с привязкой к данным, параметры добавляются элементом управления с привязкой к данным. В этом случае необходимо убедиться, что имена параметров метода соответствуют именам полей в элементе управления с привязкой к данным. Обновление выполняется при <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> вызове метода либо явным образом кодом, либо автоматически с помощью привязанного к данным элемента управления. Один и тот же общий шаблон следует <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> за <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> операциями и. Предполагается, что бизнес-объекты выполняют эти типы операций с данными по одной записи за раз, а не в пакетном режиме.  
  
<a name="filtering_data"></a>   
## <a name="filtering-data"></a>Фильтрация данных  
 Элемент управления может фильтровать данные, извлекаемые <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойством, если <xref:System.Data.DataSet> данные возвращаются как объект или  <xref:System.Data.DataTable> . <xref:System.Web.UI.WebControls.ObjectDataSource> Можно задать <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> для свойства выражение фильтрации с помощью синтаксиса строки формата и привязать значения в выражении к параметрам, указанным <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> в коллекции.  
  
<a name="caching"></a>   
## <a name="caching"></a>Кэширование  
 Несмотря на <xref:System.Web.UI.WebControls.ObjectDataSource> то, что не удерживает экземпляр бизнес-объекта между несколькими запросами, он может кэшировать результат вызова метода, идентифицируемого <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойством. Во время кэширования данных последующие вызовы <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метода возвращают кэшированные данные вместо создания бизнес-объекта и вызова его <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> с помощью отражения. Кэширование позволяет избежать создания объекта и вызова его метода данных за счет использования памяти на веб-сервере. Объект <xref:System.Web.UI.WebControls.ObjectDataSource> автоматически кэширует данные `true`, <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> если свойство имеет <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> значение, а свойство равно количеству секунд, в течение которых кэш хранит данные, прежде чем кэш будет удален. Можно также указать <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> свойство и необязательное <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> свойство. Элемент управления позволяет кэшировать все типы данных, но не следует кэшировать объекты, удерживающие ресурсы или состояние, которые не могут быть общими для обслуживания нескольких запросов (например, Открытый <xref:System.Data.SqlClient.SqlDataReader> объект), так как тот же экземпляр объекта <xref:System.Web.UI.WebControls.ObjectDataSource> будет использоваться для обслуживания нескольких запросов.  
  
<a name="features"></a>   
## <a name="features"></a>Функции  
 В следующей таблице описаны функции <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
|Возможность|Требования|  
|----------------|------------------|  
|Выбор|Присвойте <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> свойству имя метода бизнес-объекта, который выбирает данные и включает все необходимые параметры в коллекцию программно или с помощью элемента управления с привязкой к данным. <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>|  
|Сортировка|<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Присвойте <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> свойству имя параметра в методе, который содержит критерии сортировки.|  
|Фильтрация|Задайте для <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> свойства выражение фильтрации и при необходимости добавьте любые параметры в коллекцию, чтобы отфильтровать данные при вызове метода. <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Метод, заданный <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойством, должен <xref:System.Data.DataSet> возвращать <xref:System.Data.DataTable>или.|  
|Разбивка на страницы|Разбиение по страницам источника данных поддерживается <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> , если метод содержит параметры для максимального числа извлекаемых записей и индекс первой извлекаемой записи. Имена этих параметров должны быть заданы в <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> свойствах и <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> соответственно. Элемент управления с привязкой к данным может выполнять разбиение на страницы, даже если <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления не поддерживает разбиение по страницам непосредственно в методе, указанном <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойством. Чтобы элемент управления с привязкой к данным мог сделать это, необходимо, чтобы метод, заданный <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойством, возвращал объект, <xref:System.Collections.ICollection> реализующий интерфейс.|  
|Updating|Присвойте <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> свойству имя метода бизнес-объекта, который обновляет данные, и включите в коллекцию необходимые параметры. <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>|  
|Удаление|Задайте для <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> свойства имя метода или функции бизнес-объекта, который удаляет данные, и включите в коллекцию необходимые параметры. <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>|  
|Вставка|Задайте для <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> свойства имя метода или функции бизнес-объекта, который вставляет данные, и включите в коллекцию необходимые параметры. <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>|  
|Кэширование|<xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> Задайте для <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> свойства значение, а свойства и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> в соответствии с требуемым поведением кэширования для кэшированных данных. `true`|  
  
> [!NOTE]
>  При использовании <xref:System.Web.UI.WebControls.ObjectDataSource> класса для обновления или вставки данных строки, введенные на клиенте, не преобразуются автоматически из формата языка и региональных параметров клиента в формат языка и региональных параметров сервера. Например, язык и региональные параметры клиента могут указывать в качестве формата даты дд/мм/гггг, а формат даты на сервере — мм/дд/гггг. В этом случае 5 октября 2009 записываются в <xref:System.Web.UI.WebControls.TextBox> элемент управления как 5/10/2009, но будет интерпретирован как 10 мая 2009. 15 октября 2009 г. будет использоваться как 15/10/2009 и будет отклонено как недопустимая дата.  
  
<a name="data_view"></a>   
## <a name="data-view"></a>Представление данных  
 Как и все элементы управления источниками данных <xref:System.Web.UI.WebControls.ObjectDataSource> , элемент управления связан с классом представления источников данных. Хотя элемент управления — это интерфейс, используемый разработчиком страницы для работы с данными <xref:System.Web.UI.WebControls.ObjectDataSourceView> , класс является интерфейсом, с которым работают элементы управления с привязкой к данным. <xref:System.Web.UI.WebControls.ObjectDataSource> Кроме того, <xref:System.Web.UI.WebControls.ObjectDataSourceView> класс описывает возможности элемента управления источниками данных и выполняет фактическую работу. Элемент управления имеет только один связанный <xref:System.Web.UI.WebControls.ObjectDataSourceView>объект, и ему всегда присваивается имя  `DefaultView` .  <xref:System.Web.UI.WebControls.ObjectDataSource> Хотя объект предоставляется <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> методом, многие его свойства и методы упаковываются <xref:System.Web.UI.WebControls.ObjectDataSource> и предоставляются непосредственно элементом управления. <xref:System.Web.UI.WebControls.ObjectDataSourceView> В <xref:System.Web.UI.WebControls.ObjectDataSourceView> фоновом режиме объект выполняет все операции с данными, включая получение, вставку, обновление, удаление, фильтрацию и сортировку данных. Для получения дополнительной информации см. <xref:System.Web.UI.WebControls.ObjectDataSourceView>.  
  
<a name="using_linq_to_sql"></a>   
## <a name="using-linq-to-sql"></a>Использование LINQ to SQL  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления можно использовать с классом LINQ to SQL. Для этого необходимо присвоить <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойству имя класса контекста данных. Вы также задаете <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>методы <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> и для методов в классе контекста данных, выполняющих соответствующие операции. Чтобы отменить удаление класса контекста данных, необходимо <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> создать обработчик событий для события. Этот шаг необходим, поскольку LINQ to SQL поддерживает отложенное выполнение, в <xref:System.Web.UI.WebControls.ObjectDataSource> то время как элемент управления пытается удалить контекст данных после операции выбора. Дополнительные сведения о создании классов LINQ to SQL см. в разделе [как создать LINQ to SQL классы в веб-проекте](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081). Пример отмены удаления класса контекста данных см. в <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> описании события.  
  
## <a name="using-the-entity-framework"></a>Использование Entity Framework  
 Также можно использовать <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления с Entity Framework. Дополнительные сведения см. [в разделе использование Entity Framework и элемента управления ObjectDataSource](https://go.microsoft.com/fwlink/?LinkId=209117).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Декларативный синтаксис  
  
```  
<asp:ObjectDataSource  
    CacheDuration="string|Infinite"  
    CacheExpirationPolicy="Absolute|Sliding"  
    CacheKeyDependency="string"  
    ConflictDetection="OverwriteChanges|CompareAllValues"  
    ConvertNullToDBNull="True|False"  
    DataObjectTypeName="string"  
    DeleteMethod="string"  
    EnableCaching="True|False"  
    EnablePaging="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    FilterExpression="string"  
    ID="string"  
    InsertMethod="string"  
    MaximumRowsParameterName="string"  
    OldValuesParameterFormatString="string"  
    OnDataBinding="DataBinding event handler"  
    OnDeleted="Deleted event handler"  
    OnDeleting="Deleting event handler"  
    OnDisposed="Disposed event handler"  
    OnFiltering="Filtering event handler"  
    OnInit="Init event handler"  
    OnInserted="Inserted event handler"  
    OnInserting="Inserting event handler"  
    OnLoad="Load event handler"  
    OnObjectCreated="ObjectCreated event handler"  
    OnObjectCreating="ObjectCreating event handler"  
    OnObjectDisposing="ObjectDisposing event handler"  
    OnPreRender="PreRender event handler"  
    OnSelected="Selected event handler"  
    OnSelecting="Selecting event handler"  
    OnUnload="Unload event handler"  
    OnUpdated="Updated event handler"  
    OnUpdating="Updating event handler"  
    runat="server"  
    SelectCountMethod="string"  
    SelectMethod="string"  
    SkinID="string"  
    SortParameterName="string"  
    SqlCacheDependency="string"  
    StartRowIndexParameterName="string"  
    TypeName="string"  
    UpdateMethod="string"  
    Visible="True|False"  
>  
        <DeleteParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </DeleteParameters>  
        <FilterParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </FilterParameters>  
        <InsertParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </InsertParameters>  
        <SelectParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </SelectParameters>  
        <UpdateParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </UpdateParameters>  
</asp:ObjectDataSource>  
```  
  
   
  
## Examples  
 Проект веб-сайта Visual Studio с исходным кодом можно найти в этой статье: [download](https://code.msdn.microsoft.com/Project/Download/FileDownload.aspx?ProjectName=aspnetmsdnexamples&DownloadId=14838).  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> В этом разделе показана разметка на странице ASPX и показаны бизнес-объекты, с которыми он работает. В качестве примера используется страница aspx. Он содержит <xref:System.Web.UI.WebControls.GridView> элемент управления, привязанный <xref:System.Web.UI.WebControls.ObjectDataSource> к элементу управления. Разметка <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления указывает имя бизнес-объекта и имя метода бизнес-объекта для вызова, чтобы получить данные.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 В следующем примере показан бизнес-объект, <xref:System.Web.UI.WebControls.ObjectDataSource> используемый элементом управления на странице ASPX. (Во многих <xref:System.Web.UI.WebControls.ObjectDataSource> других примерах кода этот бизнес-объект используется также.) Пример состоит из следующих двух базовых классов:  
  
-   Класс — это класс бизнес-логики <xref:System.Web.UI.WebControls.ObjectDataSource> , используемый. `EmployeeLogic`  
  
-   Класс определяет объект данных, возвращаемый `GetAllEmployees` методом `EmployeeLogic` класса. `NorthwindEmployee`  
  
 Для удобства `NorthwindDataException` предоставляется дополнительный класс.  
  
 Этот набор примеров классов работает с базой данных Northwind Trader, которая доступна в Microsoft SQL Server и Microsoft Access. Чтобы получить полный рабочий пример, необходимо скомпилировать и использовать эти классы с помощью предоставленного примера страницы. aspx. Дополнительные сведения об установке базы данных Northwind Trader см. в разделе [как установить образцы баз](https://msdn.microsoft.com/library/ed1291f6-604c-4972-ae22-0345c6dea12e)данных.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />
    <related type="Article" href="https://msdn.microsoft.com/library/a806fa2c-fe6a-405f-869c-74e804a642ea">Пошаговое руководство. Привязка данных к пользовательскому бизнес-объекту</related>
    <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
    <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
    <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Использование Entity Framework и элемента управления ObjectDataSource</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSource (string typeName, string selectMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string selectMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, selectMethod As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSource(System::String ^ typeName, System::String ^ selectMethod);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSource : string * string -&gt; System.Web.UI.WebControls.ObjectDataSource" Usage="new System.Web.UI.WebControls.ObjectDataSource (typeName, selectMethod)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="selectMethod" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Имя класса, с которым работает объект <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</param>
        <param name="selectMethod">Имя метода или функции, вызываемых элементом управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для извлечения данных.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> с заданными именем типа и именем метода извлечения данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение `typeName` параметра может быть частично квалифицированным типом для кода, расположенного в каталоге bin или App_Code, или полным именем типа для кода, зарегистрированного в глобальном кэше сборок. При использовании глобального кэша сборок необходимо добавить соответствующую ссылку на `assemblies` раздел файла конфигурации Machine. config или Web. config.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public virtual int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CacheDuration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheDuration : int with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataSourceCacheDurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает длину промежутка времени (в секундах), в течение которого элемент управления источником данных кэширует данные, полученные с помощью свойства <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />.</summary>
        <value>Количество секунд, на протяжении которых объект <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> кэширует результаты вызова свойства <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />. Значение по умолчанию — 0. Значение не может быть отрицательным.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления поддерживает кэширование данных. При кэшировании данных вызовы <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метода извлекают данные из кэша, а не из бизнес-объекта <xref:System.Web.UI.WebControls.ObjectDataSource> , с которым работает. По истечении срока действия <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> кэша метод получает данные из бизнес-объекта, а затем кэширует их снова.  
  
 Элемент управления автоматически кэширует `true` данные, <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> когда свойству присвоено значение, <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> а свойству присвоено больше 0, что указывает количество секунд, в течение которых кэш хранит данные перед записью кэша. <xref:System.Web.UI.WebControls.ObjectDataSource> отбрасывается. Значение 0 указывает на бесконечную длину кэша.  
  
 Кэш регулируется сочетанием длительности и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> параметра. <xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Если свойству присвоено <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> значение, то кэширует данные при первом вызове метода и сохраняет его в памяти для, в большинстве случаев, в течение времени, заданного свойством. <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> Данные могут быть освобождены до истечения времени, если требуется память. Затем кэш обновляется во время следующего вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метода. Если свойство имеет <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> значение value, то элемент управления источника данных кэширует данные при первом вызове <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метода, но сбрасывает временное окно, для которого он удерживает кэш, при каждом последующем вызове <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метода. <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> Срок действия кэша истекает, если нет активности за время, равное <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> свойству с момента последнего вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метода.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как <xref:System.Web.UI.WebControls.ObjectDataSource> объект поддерживает кэширование. Во втором примере кода показано, как реализовать метод-оболочку, который <xref:System.Data.DataSet> возвращает объект, чтобы включить кэширование <xref:System.Web.UI.WebControls.ObjectDataSource> с помощью объекта.  
  
 В следующем примере кода показано, <xref:System.Web.UI.WebControls.ObjectDataSource> как элемент управления поддерживает кэширование. Чтобы включить кэширование, необходимо реализовать метод, который получает данные, определяемые <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойством, для возврата данных в <xref:System.Data.DataSet> виде объекта. В этом примере <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> свойство имеет `true`значение, а <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> свойства и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> заданы. Кэширует данные, возвращаемые <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойством, в течение 30 секунд. <xref:System.Web.UI.WebControls.ObjectDataSource>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/CS/objds6cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/VB/objds6vb.aspx#1)]  
  
 В следующем примере кода показано, как реализовать метод-оболочку, который <xref:System.Data.DataSet> возвращает объект, чтобы включить кэширование <xref:System.Web.UI.WebControls.ObjectDataSource> с помощью элемента управления. В базовой реализации `EmployeeLogic` класса `GetAllEmployees` метод возвращает <xref:System.Collections.ArrayList> объект. Вместо рефакторинга объекта для <xref:System.Web.UI.WebControls.ObjectDataSource> работы на странице веб-форм добавляется метод оболочки с именем `GetAllEmployeesAsDataSet` `NorthwindEmployee` , возвращающий <xref:System.Data.DataSet>набор данных в виде.  
  
 Этот пример кода является частью большого примера, <xref:System.Web.UI.WebControls.ObjectDataSource> приведенного для класса.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="CacheExpirationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheExpirationPolicy As DataSourceCacheExpiry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::DataSourceCacheExpiry CacheExpirationPolicy { System::Web::UI::DataSourceCacheExpiry get(); void set(System::Web::UI::DataSourceCacheExpiry value); };" />
      <MemberSignature Language="F#" Value="member this.CacheExpirationPolicy : System.Web.UI.DataSourceCacheExpiry with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceCacheExpiry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает поведение при истечении срока действия кэша, которая в сочетании со сроком кэширования описывает принципы работы кэша, используемого элементом управления источником данных.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.DataSourceCacheExpiry" />. Значение по умолчанию — <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления поддерживает кэширование данных. При кэшировании данных вызовы <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метода извлекают данные из кэша, а не из бизнес-объекта <xref:System.Web.UI.WebControls.ObjectDataSource> , с которым работает. По истечении срока действия <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> кэша метод получает данные из бизнес-объекта, а затем кэширует их снова.  
  
 Элемент управления автоматически кэширует `true` данные, <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> когда свойству присвоено значение, <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> а свойству присвоено больше 0, что указывает количество секунд, в течение которых кэш хранит данные перед записью кэша. <xref:System.Web.UI.WebControls.ObjectDataSource> отбрасывается. Значение 0 указывает на бесконечную продолжительность периода кэширования.  
  
 Кэш регулируется сочетанием длительности и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> параметра. <xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Если свойству присвоено <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> значение, то кэширует данные при первом вызове метода и сохраняет его в памяти для, в большинстве случаев, в течение времени, заданного свойством. <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> Данные могут быть освобождены до истечения времени, если требуется память. Затем кэш обновляется во время следующего вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метода. Если свойству присвоено <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> значение, элемент управления источника данных кэширует данные при первом вызове <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метода, но сбрасывает временное окно, для которого он хранит кэш для каждого последующего вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метода. <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> Срок действия кэша истекает, если нет активности за время, равное <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> свойству с момента последнего вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метода.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как <xref:System.Web.UI.WebControls.ObjectDataSource> объект поддерживает фильтрацию и кэширование. Во втором примере кода показано, как реализовать метод-оболочку, который <xref:System.Data.DataSet> возвращает объект, чтобы включить кэширование и <xref:System.Web.UI.WebControls.ObjectDataSource> фильтрацию с помощью объекта.  
  
 В следующем примере кода показано, как <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления поддерживает фильтрацию и кэширование. Чтобы включить фильтрацию и кэширование, необходимо реализовать метод, который получает данные, определяемые <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойством, для возврата данных в <xref:System.Data.DataSet> виде объекта. В этом примере кэширование включено, так как `EmployeeLogic` объект возвращает данные в <xref:System.Data.DataSet>виде, <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> свойство имеет значение `true`, а <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> свойства и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> заданы. Кэширует данные, возвращаемые <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойством, в течение 30 секунд. <xref:System.Web.UI.WebControls.ObjectDataSource>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/CS/objds6cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/VB/objds6vb.aspx#1)]  
  
 В следующем примере кода показано, как реализовать метод-оболочку, который <xref:System.Data.DataSet> возвращает объект, чтобы включить кэширование и <xref:System.Web.UI.WebControls.ObjectDataSource> фильтрацию с помощью элемента управления. В базовой реализации `EmployeeLogic` класса `GetAllEmployees` метод возвращает <xref:System.Collections.ArrayList>. Вместо рефакторинга объекта для <xref:System.Web.UI.WebControls.ObjectDataSource> работы на странице веб-форм добавляется метод оболочки с именем `GetAllEmployeesAsDataSet` `NorthwindEmployee` , возвращающий <xref:System.Data.DataSet>набор данных в виде. Этот пример кода является частью большого примера, <xref:System.Web.UI.WebControls.ObjectDataSource> приведенного для класса.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="CacheKeyDependency">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheKeyDependency : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает определенную пользователем зависимость ключа, связанную со всеми объектами кэша данных, созданными элементом управления источником данных.</summary>
        <value>Ключ, по которому идентифицируются все объекты кэша, созданные элементом управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> Свойству может быть присвоено произвольное строковое значение.  
  
 Срок действия всех объектов кэша истекает явным образом при истечении срока действия ключа. Это позволяет сделать недействительными элементы кэша, созданные в <xref:System.Web.UI.WebControls.ObjectDataSource> из кода страницы программным способом.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления поддерживает кэширование данных. При кэшировании данных вызовы <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метода извлекают данные из кэша, а не из бизнес-объекта <xref:System.Web.UI.WebControls.ObjectDataSource> , с которым работает. По истечении срока действия <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> кэша метод получает данные из бизнес-объекта, а затем кэширует их снова.  
  
 Элемент управления автоматически кэширует `true` данные, <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> когда свойству присвоено значение, <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> а свойству присвоено больше 0, что указывает количество секунд, в течение которых кэш хранит данные перед записью кэша. <xref:System.Web.UI.WebControls.ObjectDataSource> отбрасывается. Значение 0 указывает на бесконечную длину кэша.  
  
 Можно задать <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> свойство, чтобы создать зависимость между всеми записями кэша, созданными <xref:System.Web.UI.WebControls.ObjectDataSource> элементом управления и ключом. Срок действия всех записей кэша можно будет программными средствами в любое время с помощью ключа. Истекает ключ, используя <xref:System.Web.Caching.Cache.Remove%2A?displayProperty=nameWithType> метод с текущим <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> значением в качестве параметра.  
  
 Уникальная запись кэша <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>создается для каждого сочетания свойств <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>,, <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>и <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> . Несколько <xref:System.Web.UI.WebControls.ObjectDataSource> элементов управления могут использовать одни и те же записи кэша в сценариях, где они загружают данные с использованием того же типа, метода и параметров.  
  
   
  
## Examples  
 В следующих трех примерах показана веб-страница, класс страницы кода программной части и класс доступа к данным, которые извлекают записи из таблицы Employees в базе данных Northwind.  
  
 В первом примере показана веб-страница, содержащая <xref:System.Web.UI.WebControls.ObjectDataSource> два элемента управления <xref:System.Web.UI.WebControls.DropDownList> , элемент управления и <xref:System.Web.UI.WebControls.DetailsView> элемент управления. Первый <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления <xref:System.Web.UI.WebControls.DropDownList> и элемент управления используются для получения и вывода имен сотрудников из базы данных. Второй <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления <xref:System.Web.UI.WebControls.DetailsView> и элемент управления используются для получения и вывода записи сотрудника, выбранной пользователем.  
  
 Для <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления включено кэширование. Таким образом, каждая запись извлекается только один раз из базы данных. <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> Свойство имеет значение "емплойидетаилс", но любое строковое значение может работать в качестве ключа. Веб-страница также содержит <xref:System.Web.UI.WebControls.Button> элемент управления, который пользователь может щелкнуть, чтобы истечет срок действия кэшированных данных.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx#3)]  
  
 Во втором примере показан обработчик для <xref:System.Web.UI.Control.Load> события и обработчик <xref:System.Web.UI.WebControls.Button.Click> для события <xref:System.Web.UI.WebControls.Button> элемента управления. Обработчик событий создает элемент кэша с ключом, имеющим <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> значение. <xref:System.Web.UI.Control.Load> Обработчик событий удаляет элемент кэша, ключ которого равен <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> значению. <xref:System.Web.UI.WebControls.Button.Click> При удалении элемента кэша истечет срок действия всех кэшированных данных, зависящих от ключа.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx.vb#4)]  
  
 В третьем примере показан класс доступа к данным, взаимодействующий с базой данных Northwind. Класс использует LINQ для запроса таблицы Employees. Для примера требуется класс LINQ to SQL, представляющий базу данных Northwind и таблицу Employees. Дополнительные сведения см. в разделе [инструкции. создание LINQ to SQL классов в веб-проекте](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictDetection : System.Web.UI.ConflictOptions with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, позволяющее определить, передаются ли методу <see langword="Update" /> только новые значения или же метод <see langword="Update" /> получает и старые значения, и новые.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.ConflictOptions" />. Значение по умолчанию — <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство определяет, применяются ли параметры для старых и новых значений к методу, указанному <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойством. Например, если метод <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> , заданный свойством, <xref:System.Data.DataTable> Возвращает элемент управления со <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> столбцами `Name` и `Number`, а свойство имеет значение <xref:System.Web.UI.ConflictOptions.OverwriteChanges> , то параметры создаются для `Name` и `Number`  для метода `Update`  . `Number` `original_Name` `original_Number` `Name`Если свойству присвоено <xref:System.Web.UI.ConflictOptions.CompareAllValues> значение, то параметры создаются для,, и. <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> (Точное имя параметров для исходных значений зависит от <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> свойства.) Затем определяет, совпадают ли параметры метода, указанного <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> в свойстве. <xref:System.Web.UI.WebControls.ObjectDataSource>  
  
 Управление параллелизмом — это метод, используемый хранилищами данных для управления чтением и изменением данных в хранилище, когда несколько клиентов обращаются к одним и тем же данным и управляют ими. Например, один клиент считывает данные и представляет их пользователю, в то время как другой клиент считывает одни и те же данные и представляет их другому пользователю. Если оба пользователя обновляют данные и отправляют их в хранилище данных, может произойти непредвиденный результат, так как оба клиента могут предоставлять разные значения для одних и тех же данных. Это считается конфликтом. Если задать <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> <xref:System.Web.UI.ConflictOptions.CompareAllValues> для свойства значение, `Update` то метод может сравнить старое и новое значения с исходным источником данных для обнаружения конфликтов и их обработке по мере необходимости.  
  
 Свойство делегирует <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> <xref:System.Web.UI.WebControls.ObjectDataSource> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с элементом управления. <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="ConvertNullToDBNull">
      <MemberSignature Language="C#" Value="public bool ConvertNullToDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertNullToDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertNullToDBNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertNullToDBNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertNullToDBNull : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, позволяющее определить, выполняет ли элемент управления <see cref="T:System.Web.UI.WebControls.Parameter" /> автоматическое преобразование значений <see cref="F:System.DBNull.Value" />, переданных операции обновления, вставки или удаления и равных величине <see langword="null" />, в значение <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <value>Значение <see langword="true" />, если любое значение <see langword="null" /> в объекте <see cref="T:System.Web.UI.WebControls.Parameter" />, переданное элементу управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />, автоматически преобразуется в значение <see cref="F:System.DBNull.Value" />; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Отсутствие преобразования `null` <xref:System.DBNull.Value> в значение может привести к ошибкам во время выполнения. <xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.DBNull.Value> `null` <xref:System.Web.UI.WebControls.Parameter> Используйте свойство, чтобы указать, будут ли значения, передаваемые в операцию обновления, вставки или удаления, автоматически преобразовываться в значение элементом управления. <xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.DBNull.Value" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="DataObjectTypeName">
      <MemberSignature Language="C#" Value="public string DataObjectTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataObjectTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property DataObjectTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataObjectTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataObjectTypeName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя класса, используемое элементом управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> в качестве параметра в операции обновления, вставки или удаления данных вместо передачи отдельных значений из элемента управления с привязкой к данным.</summary>
        <value>Полное или сокращенное имя класса, обозначающее тип объекта, который может использоваться объектом <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> в качестве параметра операции <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />, <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /> или <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вместо указания нескольких параметров, передаваемых <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>методам, <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>и <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> , можно создать один объект, который объединяет несколько значений полей данных. Этот один объект передается методам, а не нескольким параметрам.  
  
 Поведением <xref:System.Web.UI.WebControls.ObjectDataSource> по умолчанию элемента управления, привязанного к элементу управления с привязкой к данным, является то, что <xref:System.Web.UI.WebControls.Parameter> элемент управления с привязкой к данным создает объект для каждого параметра в источнике данных. Если у бизнес-объекта много полей, то у результирующего метода также будет много полей. <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Свойство позволяет указать тип, имеющий свойство для каждого поля данных. Затем, вместо передачи нескольких параметров в метод, среда выполнения создает один объект и задает все его свойства. Этот один объект добавляется в коллекцию Parameters для вызова метода.  
  
 Тип, заданный <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойством, должен иметь конструктор без параметров, не имеющий параметров, <xref:System.Web.UI.WebControls.ObjectDataSource> поэтому элемент управления может создать экземпляр типа. Тип также должен иметь устанавливаемые свойства, позволяющие <xref:System.Web.UI.WebControls.ObjectDataSource> элементу управления заполнять объект значениями, передаваемыми из элемента управления с привязкой к данным. Имена <xref:System.Web.UI.WebControls.ObjectDataSource> свойств элемента управления должны точно совпадать с именами параметров значений, передаваемых элементом управления с привязкой к данным.  
  
 Если свойство задано <xref:System.Web.UI.WebControls.ObjectDataSource> и элемент управления связан с элементом управления с привязкой к данным, то методы <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> , заданные свойствами и <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> , должны иметь один параметр типа, указанный в свойстве <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>  <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойство. Если свойству присвоено <xref:System.Web.UI.ConflictOptions.OverwriteChanges> значение, то метод <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> , заданный свойством, должен иметь один параметр типа, указанный в <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойстве. <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> Если свойству присвоено <xref:System.Web.UI.ConflictOptions.CompareAllValues> значение, то метод <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> , заданный свойством, должен иметь два параметра типа, заданные в <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойстве. <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> Первый параметр содержит исходные значения; Второй параметр содержит новые значения.  
  
 Свойство делегирует <xref:System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName%2A> свойству объекта <xref:System.Web.UI.WebControls.ObjectDataSourceView> , связанного с <xref:System.Web.UI.WebControls.ObjectDataSource> элементом управления. <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>  
  
   
  
## Examples  
 Раздел содержит два примера кода. В первом примере кода показано, как реализовать тип, объединяющий все значения параметров в один объект с помощью <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойства. Во втором примере кода показана веб-страница, использующая два класса, которые используются в первом примере кода.  
  
 В следующем примере кода показано, как реализовать тип, объединяющий все значения параметров в один объект с помощью <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойства. Метод `AggregateData` Select класса <xref:System.Data.DataTable> возвращает объект с двумя столбцами с именами `Name` и `Number`. Аналогичным образом `Name` `Number`класс определяет два свойства для чтения и записи `NewData` , и. Метод класса принимает один параметр типа  `NewData` .  `Insert` `AggregateData` `TypeName` `NewData`Свойство `AggregateData` объекта <xref:System.Web.UI.WebControls.ObjectDataSource> имеет <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>  значение, а свойство имеет значение.  
  
 [!code-csharp[ObjectDataSourceDataObjectTypeName#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/CS/AggregateData.cs#2)]
 [!code-vb[ObjectDataSourceDataObjectTypeName#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/VB/AggregateData.vb#2)]  
  
 В следующем примере кода показана веб-страница, использующая два класса, которые используются в предыдущем примере кода.  
  
 [!code-aspx-csharp[ObjectDataSourceDataObjectTypeName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/CS/AggregateDataPageCS.aspx#1)]
 [!code-aspx-vb[ObjectDataSourceDataObjectTypeName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/VB/AggregateDataPageVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4">Использование параметров с элементом управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; int" Usage="objectDataSource.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выполняет операцию удаления путем вызова метода, заданного свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" /> с параметрами, содержащимися в коллекции <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />.</summary>
        <returns>Значение, соответствующее числу строк, удаляемых из базового хранилища данных, если в качестве значения свойства <see cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" /> объекта <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> задано событие <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />; в противном случае — значение -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перед выполнением  <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> операции вызывается метод для вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> события. <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Можно обработать <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> событие, чтобы проверить значения параметров и выполнить предварительную обработку <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> перед операцией. Для выполнения операции <xref:System.Web.UI.WebControls.ObjectDataSourceView> удаления объект использует отражение для создания экземпляра объекта, определяемого <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойством. Затем он вызывает метод, идентифицируемый <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойством, используя любые связанные <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> свойства. Если параметры удаления берутся из связанного элемента управления с привязкой к данным, имена параметров создаются в соответствии <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> со свойством. После завершения <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> операции вызывается метод для вызова события. <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> Событие можно обработать для проверки любых возвращаемых значений, выходных параметров и исключений, а также для выполнения любой последующей обработки.  
  
 Метод делегирует <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> методу <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с <xref:System.Web.UI.WebControls.ObjectDataSource> элементом управления. <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>  
  
## <a name="data-bound-controls"></a>Элементы управления с привязкой к данным  
 Если элемент управления связан с элементом управления с привязкой к данным, таким <xref:System.Web.UI.WebControls.GridView> как элемент управления, <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> нет необходимости вызывать метод из кода страницы. <xref:System.Web.UI.WebControls.ObjectDataSource> Вместо <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> этого метод вызывается непосредственно элементом управления с привязкой к данным.  
  
 Дополнительные сведения о слиянии параметров, времени существования объектов и разрешении методов <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>см. в разделе.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Deleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при завершении операции <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывает событие для проверки значений возвращаемого значения или выходных параметров или для определения, было ли создано исключение <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> после завершения операции. <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> Возвращаемое значение, выходные параметры и свойства обработки исключений доступны из <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> объекта, связанного с событием.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Свойство объекта можно использовать для возвращения количества строк, удаленных из метода. <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> Для этого задайте <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> свойство. Если вы возвращаете число удаленных строк из метода, указанного <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойством, значение доступно <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> из свойства <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> объекта.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource> объект с бизнес-объектом <xref:System.Web.UI.WebControls.GridView> и элементом управления для удаления данных. Во втором примере кода показан `EmployeeLogic` класс, который используется в первом примере кода.  
  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления с бизнес-объектом <xref:System.Web.UI.WebControls.GridView> и элементом управления для удаления данных. Изначально элемент управления отображает набор всех сотрудников, используя метод, заданный <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойством, для `EmployeeLogic` получения данных из объекта. <xref:System.Web.UI.WebControls.GridView> Так как  `true` свойство имеет значение, <xref:System.Web.UI.WebControls.GridView> элемент управления автоматически отображает кнопку **Delete.** <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>  
  
 Если нажать кнопку **Удалить** , операция удаления выполняется с помощью метода, указанного <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойством, и всех параметров, указанных в <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекции. В этом примере кода также выполняются некоторые этапы предварительной обработки и последующей обработки. Делегат вызывается для <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> обработки события до выполнения `NorthwindEmployeeDeleted` операции и вызова делегата для обработки <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> события после завершения операции для выполнения обработки исключений. `NorthwindEmployeeDeleting` В этом примере кода, если `NorthwindDataException` создается исключение, оно обрабатывается `NorthwindEmployeeDeleted` методом.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 В следующем примере кода показан `EmployeeLogic` класс, который используется в предыдущем примере кода.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Использование Entity Framework и элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя метода или функции, вызываемого элемента управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для удаления данных.</summary>
        <value>Строка, представляющая имя метода или функции, используемых объектом <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для удаления данных. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Предполагается, что бизнес-объект удаляет данные по одной записи за раз, а не в пакете.  
  
 Свойство делегирует <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> <xref:System.Web.UI.WebControls.ObjectDataSource> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с элементом управления. <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>  
  
 Убедитесь, что имена параметров, настроенных для <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> в коллекции, соответствуют именам столбцов, возвращаемым методом Select.  
  
## <a name="object-lifetime"></a>Время жизни объекта  
 Метод, идентифицируемый <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойством, может быть методом экземпляра `static` или методом (`Shared` в Visual Basic). Если это метод экземпляра, бизнес-объект создается и уничтожается каждый раз <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> при вызове свойства. Вы можете управлять <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> событиями <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> и для работы с бизнес-объектом до <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> вызова свойства. Можно также выполнить обработку <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> события, возникающего <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> после вызова свойства. Если бизнес-объект реализует <xref:System.IDisposable> интерфейс <xref:System.IDisposable.Dispose%2A> , метод вызывается перед уничтожением объекта. Если метод `static` является методом ( <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>`Shared` в Visual Basic), бизнес-объект никогда не создается и вы не можете управлять событиями, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> .  
  
## <a name="parameter-merging"></a>Слияние параметров  
 Параметры добавляются в <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекцию из трех источников:  
  
-   Из элемента управления с привязкой к данным во время выполнения.  
  
-   `DeleteParameters` Из элемента декларативно.  
  
-   `Deleting` Из метода декларативно.  
  
 Во-первых, все параметры, созданные из элементов управления с привязкой к данным <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> , добавляются в коллекцию. Например, <xref:System.Web.UI.WebControls.ObjectDataSource> если элемент управления привязан <xref:System.Web.UI.WebControls.GridView> к элементу управления со столбцами `Name` и `Number`, параметры для `Name` и `Number` добавляются в коллекцию. Точное имя параметра зависит от <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> свойства. Эти параметры имеют `string`тип данных. Затем добавляются параметры, перечисленные в `DeleteParameters` элементе. Если в `DeleteParameters` элементе обнаружен параметр с тем же именем, что и у параметра, уже находящийся <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> в коллекции, существующий параметр изменяется в соответствии с параметром `DeleteParameters` , указанным в элементе. Как правило, он используется для изменения типа данных в параметре. Наконец, можно программно добавлять и удалять параметры в <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> событии, которое происходит <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> перед выполнением метода. Метод разрешается после слияния параметров. Разрешение метода рассматривается в следующем разделе.  
  
## <a name="method-resolution"></a>Разрешение метода  
 При вызове  `DeleteParameters` метода поля данных из элемента управления с привязкой к данным, параметры, которые были созданы декларативно в элементе, и параметры <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> , добавленные в обработчике событий, объединяются. <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> (Дополнительные сведения см. в предыдущем разделе.) Затем <xref:System.Web.UI.WebControls.ObjectDataSource> объект пытается найти вызываемый метод. Во-первых, он ищет один или несколько методов с именем, указанным в <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойстве. Если совпадений не найдено, <xref:System.InvalidOperationException> возникает исключение. Если совпадение найдено, оно ищет совпадающие имена параметров. Например, предположим, что тип, заданный <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойством, имеет два метода с именем. `DeleteARecord` Одна `DeleteARecord` имеет один `ID`параметр,, а другой `DeleteARecord` имеет два параметра: `Name` и `Number`. Если коллекция имеет только один параметр с именем `ID`, `DeleteARecord` вызывается метод только `ID` с параметром. <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> Тип параметра не проверяется при разрешении методов. Порядок параметров не имеет значения.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Если свойство задано, метод разрешается другим способом. Выполняет поиск метода с именем, указанным <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> в свойстве, которое принимает один параметр типа <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> , указанного в свойстве. <xref:System.Web.UI.WebControls.ObjectDataSource> В этом случае имя параметра не имеет значения.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource> объект с бизнес-объектом <xref:System.Web.UI.WebControls.GridView> и элементом управления для удаления данных. Во втором примере кода показан `EmployeeLogic` класс, который используется в первом примере кода.  
  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления с бизнес-объектом <xref:System.Web.UI.WebControls.GridView> и элементом управления для удаления данных. Изначально элемент управления отображает набор всех сотрудников, используя метод, заданный <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойством, для `EmployeeLogic` получения данных из объекта. <xref:System.Web.UI.WebControls.GridView> Так как  `true` свойство имеет значение, <xref:System.Web.UI.WebControls.GridView> элемент управления автоматически отображает кнопку **Delete.** <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>  
  
 Если нажать кнопку **Удалить** , операция удаления выполняется с помощью метода, указанного <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойством, и всех параметров, указанных в <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекции. В этом примере кода также выполняются некоторые этапы предварительной обработки и последующей обработки. Делегат вызывается для <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> обработки события до выполнения операции, а `NorthwindEmployeeDeleted` делегат вызывается для обработки <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> события после завершения операции для выполнения обработки исключений. `NorthwindEmployeeDeleting` В этом примере, если `NorthwindDataException` создается исключение, оно обрабатывается `NorthwindDataException` делегатом.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 В следующем примере кода показан `EmployeeLogic` класс, который используется в предыдущем примере кода.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Использование Entity Framework и элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию параметров, содержащую параметры, используемые методом <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />.</summary>
        <value>Коллекция <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, содержащая параметры, используемые методом <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Имена и типы параметров, содержащихся в <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекции, должны соответствовать именам и типам параметров <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> в сигнатуре метода. На имена параметров зависят <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> свойства и учитывается регистр. Параметры в коллекции зависят от данных, находящихся в элементе управления с привязкой к данным, параметров, которые декларативно задаются, и параметров, которые добавляются программно. Дополнительные сведения см. в разделе "объединение параметров" <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> раздела и [Использование параметров с элементом управления ObjectDataSource](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 Свойство получает свойство, содержащееся в <xref:System.Web.UI.WebControls.ObjectDataSource> объекте, связанном с элементом управления. <xref:System.Web.UI.WebControls.ObjectDataSourceView>  <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>  
  
 Дополнительные сведения о слиянии параметров, времени существования объектов и разрешении методов <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>см. в разделе.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource> объект с бизнес-объектом <xref:System.Web.UI.WebControls.GridView> и элементом управления для удаления данных. Во втором примере кода показан `EmployeeLogic` класс, который используется в первом примере кода.  
  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления с бизнес-объектом и <xref:System.Web.UI.WebControls.GridView> элементом управления для удаления данных. Изначально элемент управления отображает набор всех сотрудников, используя метод, заданный <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойством, для `EmployeeLogic` получения данных из объекта. <xref:System.Web.UI.WebControls.GridView> Так как  `true` свойство имеет значение, <xref:System.Web.UI.WebControls.GridView> элемент управления автоматически отображает кнопку **Delete.** <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>  
  
 Если нажать кнопку **Удалить** , <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> событие вызывается с двумя параметрами. Один параметр `EmpID`,, поступает <xref:System.Web.UI.WebControls.DataGrid> из элемента управления <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> и основан на свойстве. Другой параметр берется из декларативного <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> свойства. Класс перегружает  `DeleteEmployee` метод. `EmployeeLogic` Одна перегрузка принимает `NorthwindEmployee` параметр, а другой <xref:System.Int32> принимает параметр с именем `anID`. В событии записи <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> в свойстве настраиваются так, чтобы включался только один параметр `anID` с именем и значением  `original_EmpID` из.  <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> Если обработчик событий существует, вызывается соответствующий `DeleteEmployee` метод.  
  
 В следующем примере кода показана веб-страница, на <xref:System.Web.UI.WebControls.DataGrid> которой отображается элемент управления <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> и обрабатывается событие.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_11#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/CS/objds11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_11#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/VB/objds11vb.aspx#1)]  
  
 В следующем примере кода показан `EmployeeLogic` класс, который используется в предыдущем примере кода.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_11#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/CS/northwindemployee11.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_11#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/VB/northwindemployee11.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Deleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед операцией <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывайте <xref:System.Web.UI.WebControls.ObjectDataSource> событие, чтобы выполнить дополнительную инициализацию, характерную для вашего приложения, проверить значения параметров или изменить значения параметров до того, как элемент управления выполнит операцию удаления. <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> Параметры доступны в виде <xref:System.Collections.IDictionary> коллекции, к которой обращается <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> свойство, <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> которое предоставляется объектом.  
  
 Операцию удаления можно отменить, задав <xref:Microsoft.Win32.SessionEndingEventArgs.Cancel%2A> для `true`свойства объекта значение <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> .  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource> объект с бизнес-объектом <xref:System.Web.UI.WebControls.GridView> и элементом управления для удаления данных. Во втором примере кода показан `EmployeeLogic` класс, который используется в первом примере кода.  
  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления с бизнес-объектом <xref:System.Web.UI.WebControls.GridView> и элементом управления для удаления данных. Изначально элемент управления отображает набор всех сотрудников, используя метод, заданный <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойством, для `EmployeeLogic` получения данных из объекта. <xref:System.Web.UI.WebControls.GridView> Так как  `true` свойство имеет значение, <xref:System.Web.UI.WebControls.GridView> элемент управления автоматически отображает кнопку **Delete.** <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>  
  
 Если нажать кнопку **Удалить** , операция удаления выполняется с помощью метода, указанного <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойством, и всех параметров, указанных в <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекции. В этом примере кода также выполняются некоторые этапы предварительной обработки и последующей обработки. Делегат вызывается для <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> обработки события до выполнения операции, а `NorthwindEmployeeDeleted` делегат вызывается для обработки <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> события после завершения операции для выполнения обработки исключений. `NorthwindEmployeeDeleting` В этом примере кода, если `NorthwindDataException` создается исключение, оно обрабатывается `NorthwindEmployeeDeleted` методом.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 В следующем примере кода показан `EmployeeLogic` класс, который используется в предыдущем примере кода.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public virtual bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCaching : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение позволяющее определить, включено ли кэширование для элемента управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <value>Значение <see langword="true" />, если кэширование данных для элемента управления источником данных включено; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления поддерживает кэширование данных. При кэшировании данных вызовы <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метода извлекают данные из кэша вместо <xref:System.Web.UI.WebControls.ObjectDataSource> создания экземпляра бизнес-объекта и вызова метода данных. По истечении срока действия <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> кэша метод получает данные из бизнес-объекта, а затем кэширует их снова.  
  
 Элемент управления автоматически кэширует `true` данные, <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> когда свойству присвоено значение, <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> а свойству присвоено больше 0, что указывает количество секунд, в течение которых кэш хранит данные перед записью кэша. <xref:System.Web.UI.WebControls.ObjectDataSource> отбрасывается. Значение 0 указывает на бесконечную длину кэша.  
  
   
  
## Examples  
 В следующих трех примерах показана веб-страница, класс страницы кода программной части и класс доступа к данным, которые извлекают записи из таблицы Employees в базе данных Northwind.  
  
 В первом примере показана веб-страница, содержащая <xref:System.Web.UI.WebControls.ObjectDataSource> два элемента управления <xref:System.Web.UI.WebControls.DropDownList> , элемент управления и <xref:System.Web.UI.WebControls.DetailsView> элемент управления. Первый <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления <xref:System.Web.UI.WebControls.DropDownList> и элемент управления используются для получения и вывода имен сотрудников из базы данных. Второй <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления <xref:System.Web.UI.WebControls.DetailsView> и элемент управления используются для получения и вывода записи сотрудника, выбранной пользователем.  
  
 Для <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления включено кэширование. Таким образом, каждая запись извлекается только один раз из базы данных. <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> Свойство имеет значение "емплойидетаилс", но любое строковое значение может работать в качестве ключа. Веб-страница также содержит <xref:System.Web.UI.WebControls.Button> элемент управления, который пользователь может щелкнуть, чтобы истечет срок действия кэшированных данных.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx#3)]  
  
 Во втором примере показан обработчик для <xref:System.Web.UI.Control.Load> события и обработчик <xref:System.Web.UI.WebControls.Button.Click> для события <xref:System.Web.UI.WebControls.Button> элемента управления. Обработчик событий создает элемент кэша с ключом, имеющим <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> значение. <xref:System.Web.UI.Control.Load> Обработчик событий удаляет элемент кэша, ключ которого равен <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> значению. <xref:System.Web.UI.WebControls.Button.Click> При удалении элемента кэша истечет срок действия всех кэшированных данных, зависящих от ключа.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx.vb#4)]  
  
 В третьем примере показан класс доступа к данным, взаимодействующий с базой данных Northwind. Класс использует LINQ для запроса таблицы Employees. Для примера требуется класс LINQ to SQL, представляющий базу данных Northwind и таблицу Employees. Дополнительные сведения см. в разделе [инструкции. создание LINQ to SQL классов в веб-проекте](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Свойству <see cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" /> присваивается значение <see langword="true" />, если метод, заданный свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> возвращает <see cref="T:System.Data.Common.DbDataReader" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="EnablePaging">
      <MemberSignature Language="C#" Value="public bool EnablePaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePaging : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, поддерживает ли элемент управления источником данных разбиение по страницам извлекаемого им набора данных.</summary>
        <value>Значение <see langword="true" />, если элемент управления источником данных поддерживает разбиение по страницам извлекаемых им данных; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Разбиение по <xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>страницам обрабатывается путем задания свойств <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A>, и <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> объекта <xref:System.Web.UI.WebControls.ObjectDataSource> и определения метода Select в бизнес-объекте с соответствующими параметрами. Если свойство имеет `true`значение, <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> коллекция включает два дополнительных параметра для первой запрошенной строки и количество запрошенных строк. <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> Эти два параметра называются, как определено <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> свойствами <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> и. `Select` Метод должен возвращать запрошенное число строк, начиная с указанного индекса. Поскольку данные могут не делиться равномерно по размеру страницы, последняя страница может содержать меньше строк. Таким же числом строк, которые запрашиваются, фактически является максимальное число возвращаемых строк.  
  
 Если в связанном элементе управления с привязкой к данным включено разбиение на страницы, то элемент `Select` управления с привязкой к данным вызывает метод с начальным индексом и числом требуемых строк. Кроме того, если <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> свойство задано, элемент управления с привязкой к данным вызывает метод перед отрисовкой элементов управления страничного навигатора. Например, если <xref:System.Web.UI.WebControls.GridView> в элементе управления включено разбиение по страницам с размером страницы 5, а метод, заданный <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> свойством, возвращает значение 20, на пейджер отображается только 4 страницы.  
  
 Свойство делегирует <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта. <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>  
  
   
  
## Examples  
 В следующих трех примерах показана веб-страница, класс страницы кода программной части и класс доступа к данным, позволяющие пользователю выбрать количество записей, отображаемых на странице.  
  
 Веб-страница содержит <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления, свойство которого <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> имеет значение `true`. <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Свойству присваивается имя метода, возвращающего общее число записей в запросе. Свойству <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A>  и свойству присвоены имена параметров, используемых в <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> методе Select. Страница также содержит <xref:System.Web.UI.WebControls.DropDownList> элемент управления.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 Во втором примере показан обработчик для <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> события <xref:System.Web.UI.WebControls.DropDownList> элемента управления. Код в обработчике задает <xref:System.Web.UI.WebControls.GridView.PageSize%2A> свойство для выбора пользователя.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 В третьем примере показан класс доступа к данным, который получает данные из таблицы Customers. Он включает метод с именем `GetSubsetOfEmployees`, который назначается <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойству <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. В примере также имеется метод с именем `GetEmployeeCount`, который назначается <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> свойству <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. Класс использует LINQ для запроса таблицы Customers. Для примера требуется класс LINQ to SQL, представляющий таблицу базы данных Northwind и Customers. Дополнительные сведения см. в разделе [инструкции. создание LINQ to SQL классов в веб-проекте](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterExpression : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает выражение фильтрации, применяемое при вызове метода, заданного свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />.</summary>
        <value>Строка, представляющая выражение фильтрации, которое применяется при извлечении данных с помощью метода или функции, заданных свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Элемент управления поддерживает фильтрацию данных только в <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> том случае, <xref:System.Data.DataSet> если метод возвращает объект или  <xref:System.Data.DataTable> . <xref:System.Web.UI.WebControls.ObjectDataSource>  
  
 Синтаксис, используемый для <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойства, — это выражение в стиле строки форматирования. Синтаксис критерия фильтра — это тот же синтаксис, который принимается <xref:System.Data.DataColumn.Expression%2A> свойством. При добавлении параметров в <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> коллекцию можно также включить заполнители строки форматирования. Например, включите `"{0}"` в выражение, чтобы заменить значения параметров. Заполнители заменяются в соответствии с индексом параметра в <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> коллекции.  
  
 В <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойство можно включить параметры. Если тип параметра является строкой или символьным типом, заключите параметр в одинарные кавычки. Если параметр имеет числовой тип, кавычки не требуются.  
  
 Коллекция содержит параметры, которые оцениваются для заполнителей, найденных <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> в свойстве. <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>  
  
 Свойство делегирует <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> <xref:System.Web.UI.WebControls.ObjectDataSource> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с элементом управления. <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>  
  
> [!NOTE]
>  Необходимо проверить любое значение параметра фильтра, полученное от клиента. Среда выполнения просто подставляет значение параметра в критерий фильтра и применяет его к <xref:System.Data.DataSet> объекту <xref:System.Data.DataTable> или <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> , возвращаемому методом. Если вы используете <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойство в качестве меры безопасности для ограничения числа возвращаемых элементов, перед фильтрацией необходимо проверить значения параметров.  
  
   
  
## Examples  
 В следующем примере кода показано, как отобразить отфильтрованные данные с <xref:System.Web.UI.WebControls.ObjectDataSource> помощью элемента управления для получения данных из бизнес-объекта среднего уровня <xref:System.Web.UI.WebControls.GridView> и элемента управления для отображения результатов. Элемент управления может фильтровать данные только в том случае, если метод, извлекающий данные, извлекает <xref:System.Data.DataSet> его как объект или  <xref:System.Data.DataTable> . <xref:System.Web.UI.WebControls.ObjectDataSource> По этой причине <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство определяет метод бизнес-объекта, который получает данные в <xref:System.Data.DataSet>виде.  
  
 Пример <xref:System.Web.UI.WebControls.TextBox> кода состоит из элемента управления <xref:System.Web.UI.WebControls.GridView> , элемента управления, <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления и кнопки **отправки** . По умолчанию поле <xref:System.Web.UI.WebControls.TextBox> заполняется именем одного из сотрудников компании «Борей». Отображает сведения о сотруднике, идентифицируемые по имени <xref:System.Web.UI.WebControls.TextBox>в. <xref:System.Web.UI.WebControls.GridView> Чтобы получить данные от другого сотрудника, введите полное имя сотрудника в <xref:System.Web.UI.WebControls.TextBox>, а затем нажмите кнопку Submit ( **Отправить** ).  
  
 Свойство задает выражение, которое используется для фильтрации данных, получаемых методом, указанным <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойством. <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Он использует заполнители параметров, которые оцениваются для параметров, содержащихся в <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> коллекции. В этом примере заполнитель параметра ограничен одинарными кавычками, так как тип параметра является строковым типом, который может содержать пробелы. Если тип параметра является числовым или типом даты, ограничивающие кавычки не требуются.  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 В следующем примере кода приведен пример бизнес-объекта среднего уровня, используемого в предыдущем примере кода. Пример кода состоит из двух базовых классов:  
  
-   `EmployeeLogic` Класс, который является классом, который инкапсулирует бизнес-логику.  
  
-   `NorthwindEmployee` Класс, который является классом модели, который содержит только базовые функциональные возможности, необходимые для загрузки и сохранения данных на уровне данных.  
  
 Для простоты `EmployeeLogic` класс создает статический набор данных, а не извлекает данные из уровня данных. Это также полезно в этом примере, так как в примере используется полное имя сотрудника Northwind Trader для демонстрации фильтрации. Для выполнения полного рабочего примера необходимо скомпилировать и использовать эти классы с предоставленными примерами кода веб-форм.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Значение свойства <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /> задано, а метод <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> не возвращает значение <see cref="T:System.Data.DataSet" /> или <see cref="T:System.Data.DataTable" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As ObjectDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberSignature Language="F#" Value="member this.Filtering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler " Usage="member this.Filtering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед операцией фильтрации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывайте <xref:System.Web.UI.WebControls.ObjectDataSource> событие, чтобы выполнить операции проверки значений параметров фильтра, прежде чем элемент управления выполнит операцию фильтра. <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering> Вы можете отменить выбранную операцию, задав <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> для `true`свойства объекта значение <xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs> . Событие возникает только в том случае, <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> если свойство задано.  
  
 Событие делегирует <xref:System.Web.UI.WebControls.ObjectDataSourceView.Filtering?displayProperty=nameWithType> к событию <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с <xref:System.Web.UI.WebControls.ObjectDataSource> элементом управления. <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering?displayProperty=nameWithType>  
  
> [!IMPORTANT]
>  Необходимо проверить любое значение параметра фильтра, полученное от клиента. Среда выполнения просто подставляет значение параметра в критерий фильтра и применяет его к <xref:System.Data.DataSet> объекту <xref:System.Data.DataTable> или <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> , возвращаемому методом. Если вы используете <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойство в качестве меры безопасности для ограничения числа возвращаемых элементов, перед фильтрацией необходимо проверить значения параметров.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию параметров, связанных с любыми прототипами параметров в строке <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />.</summary>
        <value>Коллекция <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, содержащая набор параметров, связанных с любыми местозаполнителями параметров, содержащимися в свойстве <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Элемент управления поддерживает фильтрацию данных только в <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> том случае, <xref:System.Data.DataSet> если метод возвращает объект или  <xref:System.Data.DataTable> . <xref:System.Web.UI.WebControls.ObjectDataSource>  
  
 Синтаксис, используемый для <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> , является выражением типа строки форматирования. Синтаксис критерия фильтра — это тот же синтаксис, который принимается <xref:System.Data.DataColumn.Expression%2A> свойством. При добавлении параметров в <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> коллекцию можно также включить заполнители строки форматирования. Например, включите `"{0}"` в выражение, чтобы заменить значения параметров. Заполнители заменяются в соответствии с индексом параметра в <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> коллекции.  
  
 В <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойство можно включить параметры. Если параметр является строковым или символьным типом, заключите параметр в одинарные кавычки. Если параметр имеет числовой тип, кавычки не требуются.  
  
 Свойство получает свойство, содержащееся в <xref:System.Web.UI.WebControls.ObjectDataSource> объекте, связанном с элементом управления. <xref:System.Web.UI.WebControls.ObjectDataSourceView>  <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как отобразить отфильтрованные данные с <xref:System.Web.UI.WebControls.ObjectDataSource> помощью объекта для получения данных из бизнес-объекта среднего уровня <xref:System.Web.UI.WebControls.GridView> и элемента управления для отображения результатов. Во втором примере кода приведен пример бизнес-объекта среднего уровня, который используется в первом примере кода.  
  
 В следующем примере кода показано, как отобразить отфильтрованные данные с <xref:System.Web.UI.WebControls.ObjectDataSource> помощью элемента управления для получения данных из бизнес-объекта среднего уровня <xref:System.Web.UI.WebControls.GridView> и элемента управления для отображения результатов. Элемент управления может фильтровать данные только в том случае, если метод, извлекающий данные, извлекает <xref:System.Data.DataSet> его как объект или  <xref:System.Data.DataTable> . <xref:System.Web.UI.WebControls.ObjectDataSource> По этой причине <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство определяет метод бизнес-объекта, который получает данные в <xref:System.Data.DataSet>виде.  
  
 Пример <xref:System.Web.UI.WebControls.TextBox> кода состоит из элемента управления <xref:System.Web.UI.WebControls.GridView> , элемента управления, <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления и кнопки **отправки** . По умолчанию поле <xref:System.Web.UI.WebControls.TextBox> заполняется именем одного из сотрудников компании «Борей». Отображает сведения о сотруднике, идентифицируемые по имени <xref:System.Web.UI.WebControls.TextBox>в. <xref:System.Web.UI.WebControls.GridView> Чтобы получить данные от другого сотрудника, в <xref:System.Web.UI.WebControls.TextBox>введите полное имя сотрудника и нажмите кнопку **Submit (отправить** ).  
  
 Свойство задает выражение, используемое для фильтрации данных, извлекаемых <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойством. <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Он использует заполнители параметров, которые оцениваются для параметров, содержащихся в <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> коллекции. В этом примере заполнитель параметра ограничен одинарными кавычками, так как тип параметра является строковым типом, который может содержать пробелы. Если тип параметра является числовым или типом даты, ограничивающие кавычки не требуются. Коллекция содержит один параметр <xref:System.Web.UI.WebControls.FormParameter> — объект <xref:System.Web.UI.WebControls.TextBox> , привязанный к элементу управления. <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>  
  
> [!IMPORTANT]
>  Необходимо проверить любое значение параметра фильтра, полученное от клиента. Среда выполнения просто подставляет значение параметра в критерий фильтра и применяет его к <xref:System.Data.DataView> объекту, возвращаемому <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> методом. Если вы используете <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойство в качестве меры безопасности для ограничения числа возвращаемых элементов, перед фильтрацией необходимо проверить значения параметров.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 В следующем примере кода приведен пример бизнес-объекта среднего уровня, используемого в предыдущем примере кода. Пример кода состоит из двух базовых классов:  
  
-   `EmployeeLogic` Класс, который является классом, который инкапсулирует бизнес-логику.  
  
-   `NorthwindEmployee` Класс, который является классом модели, который содержит только базовые функциональные возможности, необходимые для загрузки и сохранения данных на уровне данных.  
  
 Для простоты `EmployeeLogic` класс создает статический набор данных, а не извлекает данные из уровня данных. Это также полезно в этом примере, так как в примере используется полное имя сотрудника Northwind Trader для демонстрации фильтрации. Для выполнения полного рабочего примера необходимо скомпилировать и использовать эти классы с предоставленными примерами кода веб-форм.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Значение свойства <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /> задано, а метод <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> не возвращает значение <see cref="T:System.Data.DataSet" /> или <see cref="T:System.Data.DataTable" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="override this.GetView : string -&gt; System.Web.UI.DataSourceView" Usage="objectDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Имя извлекаемого представления. Поскольку объект <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> поддерживает только одно представление, параметр <paramref name="viewName" /> игнорируется.</param>
        <summary>Извлекает именованное представление источника данных, связанное с элементом управления источника данных.</summary>
        <returns>Представление <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> с именем <see langword="DefaultView" />, связанное с <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления поддерживает только одно представление источника данных. Как и для всех объектов представления источников данных, <xref:System.Web.UI.WebControls.ObjectDataSourceView> объект, связанный с элементом управления источниками данных, определяет его возможности, выполняет всю работу, необходимую для получения данных из базового хранилища данных, и выполняет такие операции, как сортировка. Вставка, удаление и обновление.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> Метод предназначен для вызова элементами управления с привязкой к данным, а не с помощью кода страницы.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Значением указанного параметра <paramref name="viewName" /> является <see langword="null" /> или значение, отличное от <see langword="DefaultView" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected override System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="override this.GetViewNames : unit -&gt; System.Collections.ICollection" Usage="objectDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает коллекцию имен, представляющую список объектов представления, связанных с объектом <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <returns>Объект <see cref="T:System.Collections.ICollection" />, содержащий имена представлений, связанных с элементом управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Элемент управления поддерживает только одно представление с именем `DefaultView`для базовых данных. <xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.ObjectDataSource.GetViewNames%2A> Метод возвращает одноэлементную коллекцию этого имени представления.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.GetViewNames%2A> Метод предназначен для вызова элементами управления с привязкой к данным, а не с помощью кода страницы.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert();" />
      <MemberSignature Language="F#" Value="member this.Insert : unit -&gt; int" Usage="objectDataSource.Insert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выполняет операцию вставки путем вызова метода, который определяется свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" /> и всеми параметрами в коллекции <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />.</summary>
        <returns>Значение, представляющее число строк, вставленных в базовое хранилище данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перед выполнением  <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> операции вызывается метод для вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> события. <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Можно обработать <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> событие, чтобы проверить значения параметров и выполнить предварительную обработку <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> перед операцией. Для выполнения операции <xref:System.Web.UI.WebControls.ObjectDataSourceView> вставки объект использует отражение для создания экземпляра объекта, определяемого <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойством. Затем он вызывает метод, идентифицируемый <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> свойством, используя любые связанные <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> свойства. После завершения <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> операции вызывается метод для вызова события. <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> Событие можно обработать для проверки любых возвращаемых значений, выходных параметров и исключений, а также для выполнения любой последующей обработки.  
  
 Метод делегирует <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> методу <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с <xref:System.Web.UI.WebControls.ObjectDataSource> элементом управления. <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>  
  
 Дополнительные сведения о слиянии параметров, времени существования объектов и разрешении методов <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>см. в разделе.  
  
## <a name="data-bound-controls"></a>Элементы управления с привязкой к данным  
 Если объект связан с элементом управления с привязкой к данным, таким <xref:System.Web.UI.WebControls.GridView> как элемент управления, <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> нет необходимости вызывать метод из кода страницы. <xref:System.Web.UI.WebControls.ObjectDataSource> Вместо <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> этого метод вызывается непосредственно элементом управления с привязкой к данным.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/a806fa2c-fe6a-405f-869c-74e804a642ea">Пошаговое руководство. Привязка данных к пользовательскому бизнес-объекту</related>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Inserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при завершении <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывает событие для проверки значений возвращаемого значения или выходных параметров или для определения, было ли создано исключение <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> после завершения операции. <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> Возвращаемое значение, выходные параметры и свойства обработки исключений доступны из <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> объекта, связанного с событием.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Inserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед операцией <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывайте <xref:System.Web.UI.WebControls.ObjectDataSource> событие, чтобы выполнить дополнительную инициализацию, характерную для вашего приложения, проверить значения параметров или изменить значения параметров, прежде чем элемент управления выполнит операцию вставки. <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> Параметры доступны в виде <xref:System.Collections.IDictionary> коллекции, к которой обращается <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> свойство, <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> которое предоставляется объектом.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource> объект с бизнес-объектом <xref:System.Web.UI.WebControls.DetailsView> и элементом управления для вставки данных. Во втором примере кода приведен пример бизнес-объекта среднего уровня, который используется в первом примере кода.  
  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления с бизнес-объектом <xref:System.Web.UI.WebControls.DetailsView> и элементом управления для вставки данных. Изначально элемент <xref:System.Web.UI.WebControls.DetailsView> отображает новую `NorthwindEmployee` запись вместе с автоматически созданной кнопкой **вставки** . После ввода данных в поля <xref:System.Web.UI.WebControls.DetailsView> элемента управления нажмите кнопку **Вставить** . <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Свойство определяет, какой метод выполняет операцию вставки.  
  
 В этом примере `UpdateEmployeeInfo` метод используется для выполнения вставки, однако для вставки данных `NorthwindEmployee` требуется параметр. По этой причине набор строк, который <xref:System.Web.UI.WebControls.DetailsView> элемент управления передает автоматически, недостаточно. Делегат — это <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> объект, <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>  который обрабатывает событие и позволяет управлять входными параметрами до того, как операция будет продолжена. <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> `NorthwindEmployeeInserting` Поскольку методу `NorthwindEmployee` требуется объект в качестве параметра, он создается с помощью коллекции строк <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> и добавляется в коллекцию с использованием имени параметра (`ne`), которое требуется методу. `UpdateEmployeeInfo` Такие действия можно выполнять при использовании существующего объекта среднего уровня в качестве источника данных с типами и методами, которые не предназначены специально для использования с <xref:System.Web.UI.WebControls.ObjectDataSource> элементом управления.  
  
 При выполнении <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> операции вызывается метод, определяемый свойством. <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Если метод объекта имеет сигнатуру метода, включающую параметры, то <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекция должна содержать параметр с именами, соответствующими параметрам сигнатуры <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> метода для успешного завершения метода. `Insert`  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 В следующем примере кода приведен пример бизнес-объекта среднего уровня, используемого в предыдущем примере кода. Пример кода состоит из двух базовых классов:  
  
-   `EmployeeLogic` Класс, который является классом без отслеживания состояния, который инкапсулирует бизнес-логику.  
  
-   `NorthwindEmployee` Класс, который является классом модели, который содержит только базовые функциональные возможности, необходимые для загрузки и сохранения данных на уровне данных.  
  
 Для удобства `NorthwindDataException` предоставляется дополнительный класс. Для работы с полным рабочим примером необходимо скомпилировать и использовать эти классы. `UpdateEmployeeInfo` Метод не полностью реализован, поэтому при эксперименте с этим примером не нужно вставлять данные в базу данных компании Northwind Traders.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя метода или функции, вызываемого элемента управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для вставки данных.</summary>
        <value>Строка, представляющая имя метода или функции, используемых объектом <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для вставки данных. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Предполагается, что бизнес-объект вставляет данные по одной записи за раз, а не в пакете.  
  
 Свойство делегирует <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> свойству <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с <xref:System.Web.UI.WebControls.ObjectDataSource> объектом. <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>  
  
## <a name="object-lifetime"></a>Время жизни объекта  
 Метод, идентифицируемый <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> свойством, может быть методом экземпляра `static` или методом (`Shared` в Visual Basic). Если это метод экземпляра, бизнес-объект создается и уничтожается каждый раз, когда вызывается метод, заданный <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> свойством. Вы можете управлять <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> событиями <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> и для работы с бизнес-объектом до <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> вызова свойства. Можно также выполнить обработку <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> события, возникающего после вызова метода, заданного <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойством. Если бизнес-объект реализует <xref:System.IDisposable> интерфейс <xref:System.IDisposable.Dispose%2A> , метод вызывается перед уничтожением объекта. Если метод имеет значение `static` (`Shared` в Visual Basic), бизнес-объект никогда не создается <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>и вы не можете управлять событиями, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>и.  
  
## <a name="parameter-merging"></a>Слияние параметров  
 Параметры добавляются в <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекцию из трех источников:  
  
-   Из элемента управления с привязкой к данным во время выполнения.  
  
-   `InsertParameters` Из элемента декларативно.  
  
-   `Inserting` Из метода программным способом.  
  
 Во-первых, все параметры, созданные из элементов управления с привязкой к данным <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> , добавляются в коллекцию. Например, <xref:System.Web.UI.WebControls.ObjectDataSource> если элемент управления привязан <xref:System.Web.UI.WebControls.GridView> к элементу управления со столбцами `Name` и `Number`, параметры для `Name` и `Number` добавляются в коллекцию. Эти параметры имеют `string`тип данных. Затем добавляются параметры, перечисленные в `InsertParameters` элементе. Если в `InsertParameters` элементе обнаружен параметр с тем же именем, что и у параметра, уже находящийся <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> в коллекции, существующий параметр изменяется в соответствии с параметром `InsertParameters` , указанным в элементе. Как правило, он используется для изменения типа данных в параметре. Наконец, можно программно добавлять и удалять параметры в <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> событии, которое происходит <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> перед выполнением метода. Метод разрешается после слияния параметров. Разрешение метода рассматривается в следующем разделе.  
  
> [!IMPORTANT]
>  Следует проверить все значения параметров, получаемые от клиента. Среда выполнения просто подставляет значение параметра в <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> свойство.  
  
## <a name="method-resolution"></a>Разрешение метода  
 При вызове  `InsertParameters` метода поля данных из элемента управления с привязкой к данным, параметры, которые были созданы декларативно в элементе, и параметры <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> , добавленные в обработчике событий, объединяются. <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> (Дополнительные сведения см. в предыдущем разделе.) Затем <xref:System.Web.UI.WebControls.ObjectDataSource> объект пытается найти вызываемый метод. Во-первых, он ищет один или несколько методов с именем, указанным в <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> свойстве. Если совпадений не найдено, <xref:System.InvalidOperationException> возникает исключение. Если совпадение найдено, оно ищет совпадающие имена параметров. Например, предположим, что тип, заданный <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойством, имеет два метода с именем. `InsertARecord` Одна `InsertARecord` имеет один `ID`параметр,, а другой `InsertARecord` имеет два параметра: `Name` и `Number`. Если коллекция имеет только один параметр с именем `ID`, `InsertARecord` вызывается метод только `ID` с параметром. <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> Тип параметра не проверяется при разрешении методов. Порядок параметров не имеет значения.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Если свойство задано, метод разрешается другим способом. Выполняет поиск метода с именем, указанным <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> в свойстве, которое принимает один параметр типа <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> , указанного в свойстве. <xref:System.Web.UI.WebControls.ObjectDataSource> В этом случае имя параметра не имеет значения.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource> объект с бизнес-объектом <xref:System.Web.UI.WebControls.DetailsView> и элементом управления для вставки данных. Во втором примере кода приведен пример бизнес-объекта среднего уровня, который используется в первом примере кода.  
  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления с бизнес-объектом <xref:System.Web.UI.WebControls.DetailsView> и элементом управления для вставки данных. Изначально элемент <xref:System.Web.UI.WebControls.DetailsView> отображает новую `NorthwindEmployee` запись вместе с автоматически созданной кнопкой **вставки** . После ввода данных в поля <xref:System.Web.UI.WebControls.DetailsView> элемента управления нажмите кнопку **Вставить** . <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Свойство определяет, какой метод выполняет операцию вставки.  
  
 В этом примере `UpdateEmployeeInfo` метод используется для выполнения вставки, однако для вставки данных `NorthwindEmployee` требуется параметр. По этой причине набор строк, который <xref:System.Web.UI.WebControls.DetailsView> элемент управления передает автоматически, недостаточно. Делегат — это <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> объект, <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>  который обрабатывает событие и позволяет управлять входными параметрами до того, как операция будет продолжена. <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> `NorthwindEmployeeInserting` Поскольку методу `NorthwindEmployee` требуется объект в качестве параметра, он создается с помощью коллекции строк <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> и добавляется в коллекцию с использованием имени параметра (`ne`), которое требуется методу. `UpdateEmployeeInfo` Такие действия можно выполнять при использовании существующего объекта среднего уровня в качестве источника данных с типами и методами, которые не предназначены специально для использования с <xref:System.Web.UI.WebControls.ObjectDataSource> элементом управления.  
  
 При выполнении <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> операции вызывается метод, определяемый свойством. <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Если метод объекта имеет сигнатуру метода, включающую параметры, то <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекция должна содержать параметр с именами, соответствующими параметрам сигнатуры <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> метода для успешного завершения метода. `Insert`  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 В следующем примере кода приведен пример бизнес-объекта среднего уровня, используемого в предыдущем примере кода. Пример кода состоит из двух базовых классов:  
  
-   `EmployeeLogic` Класс, который является классом без отслеживания состояния, который инкапсулирует бизнес-логику.  
  
-   `NorthwindEmployee` Класс, который является классом модели, который содержит только базовые функциональные возможности, необходимые для загрузки и сохранения данных на уровне данных.  
  
 Для удобства `NorthwindDataException` предоставляется дополнительный класс. Для работы с полным рабочим примером необходимо скомпилировать и использовать эти классы. `UpdateEmployeeInfo` Метод не полностью реализован, поэтому при эксперименте с этим примером не нужно вставлять данные в базу данных компании Northwind Traders.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Использование Entity Framework и элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию параметров, содержащую параметры, используемые свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, содержащий параметры, используемые методом, заданным свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Имена и типы параметров, содержащихся в <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекции, должны соответствовать именам и типам параметров, которые находятся <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> в сигнатуре свойства. В именах параметров учитывается регистр. При работе с элементами управления с привязкой к данным, которые предоставляют параметры <xref:System.Web.UI.WebControls.GridView> , <xref:System.Web.UI.WebControls.DetailsView> такие как элементы <xref:System.Web.UI.WebControls.ObjectDataSource> управления и, элемент управления автоматически выполняет слияние всех параметров, явно указанных в коллекции, с параметрами, которые предоставлено элементом управления с привязкой к данным. Это важно, так как элементы управления с привязкой к данным всегда <xref:System.String> предоставляют свои параметры в виде типов, и если сигнатура метода включает числовые или типы дат, необходимо явно <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> включить параметр в коллекцию с правильным типом. В противном случае элемент управления пытается привести параметры в соответствии с типом, определяемым параметрами в коллекции. <xref:System.Web.UI.WebControls.ObjectDataSource> Дополнительные сведения см. в разделе [Использование параметров с элементом управления ObjectDataSource](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 Свойство получает свойство, содержащееся в <xref:System.Web.UI.WebControls.ObjectDataSourceView> , связанном с <xref:System.Web.UI.WebControls.ObjectDataSource> элементом управления. <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A>  
  
 Дополнительные сведения о слиянии параметров, времени существования объектов и разрешении методов <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>см. в разделе.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource> объект с бизнес-объектом <xref:System.Web.UI.WebControls.DetailsView> и элементом управления для вставки данных. Во втором примере кода приведен пример реализации `Insert` метода, который используется в первом примере кода.  
  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления с бизнес-объектом <xref:System.Web.UI.WebControls.DetailsView> и элементом управления для вставки данных. Изначально в <xref:System.Web.UI.WebControls.DetailsView> отображаются текстовые поля, в которых можно вводить данные для новой `NorthwindEmployee` записи, а также автоматически созданную кнопку **вставки** . После ввода данных в поля <xref:System.Web.UI.WebControls.DetailsView> элемента управления нажмите кнопку **Вставить** . <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Свойство определяет, какой метод выполняет операцию вставки.  
  
 Если нажать кнопку **Вставить** , операция выполняется с помощью метода, указанного <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> свойством, и всех параметров, указанных в <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекции. В этом примере кода в <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекции указан один параметр, соответствующий идентификатору супервизора. Это происходит потому, что несмотря на то, что идентификатор <xref:System.Web.UI.WebControls.GridView.Rows%2A> отображается в коллекции <xref:System.Web.UI.WebControls.DetailsView> для элемента управления <xref:System.Web.UI.WebControls.BoundField> как объект, <xref:System.Web.UI.WebControls.ObjectDataSource> он передается в элемент управления в виде строки. Если явно добавить в <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекцию <xref:System.Web.UI.WebControls.Parameter.Type%2A> свойство <xref:System.TypeCode.Int32> <xref:System.Int32>, для которого задано значение, оно будет правильно передано в метод в виде, а не в виде строки. <xref:System.Web.UI.WebControls.ObjectDataSource>  
  
 При выполнении <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> операции вызывается метод, определяемый свойством. <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Если метод объекта имеет сигнатуру метода, которая включает параметры <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> , коллекция должна содержать параметры, имена которых соответствуют параметрам сигнатуры <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> метода для успешного завершения метода. <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>  
  
> [!IMPORTANT]
>  Следует проверить все значения параметров, получаемые от клиента. Среда выполнения просто подставляет значение параметра в <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> свойство.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/objds8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/objds8vb.aspx#1)]  
  
 В следующем примере кода приведен пример реализации `Insert` метода, используемого в предыдущем примере кода. Метод добавляется `EmployeeLogic` в объект среднего уровня <xref:System.Web.UI.WebControls.ObjectDataSource> , предоставленный в обзоре класса, чтобы обеспечить простоту работы с <xref:System.Web.UI.WebControls.ObjectDataSource> элементом управления в веб-сценариях без существенной перезаписи в фактический `InsertNewEmployeeWrapper` Бизнес-логика.  
  
 Для выполнения этого примера необходимо иметь `NorthwindEmployee` класс, предоставленный <xref:System.Web.UI.WebControls.ObjectDataSource> в обзоре класса. В этом примере показано, <xref:System.Web.UI.WebControls.ObjectDataSource> как подключить к методу бизнес-объекта, который получает данные для новой записи базы данных с помощью параметров. В этом примере не добавляются записи в базу данных, поскольку `Save` метод `NorthwindEmployee` класса не включает код для обновления базы данных.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/northwindemployee8.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/northwindemployee8.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="objectDataSource.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Объект, содержащий сохраненные значения состояния представления для элемента управления.</param>
        <summary>Загружает предварительно сохраненное состояние представления элемента управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод используется преимущественно инфраструктурой .NET Framework и не предназначен для непосредственного использования в коде. Однако разработчики элементов управления могут переопределить этот метод, чтобы указать, как пользовательский серверный элемент управления восстанавливает состояние представления. Дополнительные сведения см. в разделе [Обзор управления состоянием ASP.NET](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)).  
  
 Метод используется для загрузки ранее сохраненного состояния <xref:System.Web.UI.WebControls.ObjectDataSource> представления элемента управления. <xref:System.Web.UI.WebControls.ObjectDataSource.LoadViewState%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Метод используется преимущественно разработчиками элементов управления при <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> расширении элемента управления. <see cref="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)" /></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="MaximumRowsParameterName">
      <MemberSignature Language="C#" Value="public string MaximumRowsParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MaximumRowsParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumRowsParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MaximumRowsParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRowsParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("maximumRows")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя параметра метода извлечения данных бизнес-объекта, который позволяет задать число извлекаемых записей для обеспечения поддержки разбиения по страницам источника данных.</summary>
        <value>Имя параметра <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />, позволяющее задать число извлекаемых записей. Значение по умолчанию — <c>"maximumRows"</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> Свойство используется для поддержки разбиения на страницы источника данных. Сведения о поддержке разбиения по страницам в <xref:System.Web.UI.WebControls.ObjectDataSource> элементе управления см <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>. в разделе.  
  
 Свойство делегирует <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> <xref:System.Web.UI.WebControls.ObjectDataSource> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с элементом управления. <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A>  
  
   
  
## Examples  
 В следующих трех примерах показана веб-страница, класс страницы кода программной части и класс доступа к данным, позволяющие пользователю выбрать количество записей, отображаемых на странице.  
  
 Веб-страница содержит <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления, свойство которого <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> имеет значение `true`. <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Свойству присваивается имя метода, возвращающего общее число записей в запросе. Свойству <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A>  и свойству присвоены имена параметров, используемых в <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> методе Select. Страница также содержит <xref:System.Web.UI.WebControls.DropDownList> элемент управления.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 Во втором примере показан обработчик для <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> события <xref:System.Web.UI.WebControls.DropDownList> элемента управления. Код в обработчике задает <xref:System.Web.UI.WebControls.GridView.PageSize%2A> свойство для выбора пользователя.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 В третьем примере показан класс доступа к данным, который получает данные из таблицы Customers. Он включает метод с именем `GetSubsetOfEmployees`, который назначается <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойству <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. В примере также имеется метод с именем `GetEmployeeCount`, который назначается <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> свойству <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. Класс использует LINQ для запроса таблицы Customers. Для примера требуется класс LINQ to SQL, представляющий таблицу базы данных Northwind и Customers. Дополнительные сведения см. в разделе [инструкции. создание LINQ to SQL классов в веб-проекте](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="ObjectCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreated As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreated;" />
      <MemberSignature Language="F#" Value="member this.ObjectCreated : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " Usage="member this.ObjectCreated : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после создания объекта, созданного свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывает событие для вызова других методов в бизнес-объекте, задания свойств или выполнения другой инициализации, относящейся к бизнес-объекту, <xref:System.Web.UI.WebControls.ObjectDataSource> до того, как объект вызывает метод данных бизнес-объекта для выполнения операции с данными <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> . Обращение к объекту осуществляется через <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> свойство, которое предоставляется <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> объектом.  
  
 Если метод, определенный для выполнения операции с данными, имеет значение `static` (`Shared` <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> в Visual Basic), события и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> никогда не вызываются.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="ObjectCreating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreating As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreating;" />
      <MemberSignature Language="F#" Value="member this.ObjectCreating : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " Usage="member this.ObjectCreating : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед созданием объекта, созданного свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если метод, определенный для выполнения операции с данными, имеет значение `static` (`Shared` <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> в Visual Basic), события и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> никогда не вызываются.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления автоматически вызывает конструктор без параметров бизнес-объекта, чтобы создать его экземпляр с помощью отражения. Обработайте  <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> событие, чтобы явно вызвать другой конструктор, и задайте экземпляр объекта, результатом которого является свойство связанного <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> объекта. <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource> объект с бизнес-объектом <xref:System.Web.UI.WebControls.GridView> и элементом управления для отображения информации. Второй пример кода предоставляет бизнес-объект среднего уровня, который используется в первом примере кода.  
  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления с бизнес-объектом <xref:System.Web.UI.WebControls.GridView> и элементом управления для отображения информации. Для каждой операции с данными, выполняемой веб-страницей, вы можете работать с бизнес-объектом, который очень дорого создавать (с точки зрения времени или ресурсов). Одним из способов работы с дорогостоящим объектом может быть создание его экземпляра один раз, а затем кэширование для последующих операций, а не создание и уничтожение для каждой операции с данными.  
  
> [!NOTE]
>  В рабочем приложении несколько запросов могут завершиться одновременно, используя один и тот же экземпляр. Поэтому объект должен быть реализован потокобезопасным способом.  
  
 Этот шаблон показан в этом примере кода. Можно выполнить обработку <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> события, чтобы сначала проверить кэш для объекта, и создать только экземпляр объекта, если он еще не кэширован. Затем обработайте <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> событие для кэширования бизнес-объекта для будущего использования вместо его уничтожения. В этом <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> примере кода свойству `true` <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> объекта присваивается значение, направляющее <xref:System.Web.UI.WebControls.ObjectDataSource> методу не вызывать <xref:System.IDisposable.Dispose%2A> для объекта.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 В следующем примере кода приведен пример бизнес-объекта среднего уровня, используемого в предыдущем примере кода. Пример кода состоит из базового бизнес-объекта, определяемого `EmployeeLogic` классом, который является классом с отслеживанием состояния, который инкапсулирует бизнес-логику. Для выполнения полного рабочего примера необходимо скомпилировать этот код как библиотеку и использовать эти классы из страницы ASP.NET (ASPX-файла).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="ObjectDisposing">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectDisposing As ObjectDataSourceDisposingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceDisposingEventHandler ^ ObjectDisposing;" />
      <MemberSignature Language="F#" Value="member this.ObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler " Usage="member this.ObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед объявлением объекта, созданного свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Событие всегда вызывается до удаления экземпляра бизнес-объекта. Если бизнес-объект реализует <xref:System.IDisposable> интерфейс <xref:System.IDisposable.Dispose%2A> , метод вызывается после возникновения этого события.  
  
 Обработайте <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> событие для вызова других методов объекта, задания свойств или выполнения очистки, характерной для объекта перед уничтожением объекта. Обращение к объекту осуществляется через <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> свойство, которое предоставляется <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> объектом.  
  
 При использовании <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления с классом LINQ to SQL необходимо отменить удаление класса контекста данных в обработчике <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> события. Этот шаг необходим, поскольку LINQ to SQL поддерживает отложенное выполнение, в <xref:System.Web.UI.WebControls.ObjectDataSource> то время как элемент управления пытается удалить контекст данных после операции выбора.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource> объект с бизнес-объектом <xref:System.Web.UI.WebControls.GridView> и элементом управления для отображения информации. Второй пример кода предоставляет бизнес-объект среднего уровня, который используется в первом примере кода.  
  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления с бизнес-объектом <xref:System.Web.UI.WebControls.GridView> и элементом управления для отображения информации. Для каждой операции с данными, выполняемой веб-страницей, вы можете работать с бизнес-объектом, который очень дорого создавать (с точки зрения времени или ресурсов). Одним из способов работы с дорогостоящим объектом может быть создание его экземпляра один раз, а затем кэширование для последующих операций, а не создание и уничтожение для каждой операции с данными. В этом примере демонстрируется этот шаблон. Можно выполнить обработку <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> события, чтобы сначала проверить кэш для объекта, и создать его экземпляр, если он еще не кэширован. Затем обработайте <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> событие для кэширования бизнес-объекта для будущего использования вместо его уничтожения. В этом <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> примере кода свойству `true` <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> объекта присваивается значение, направляющее <xref:System.Web.UI.WebControls.ObjectDataSource> не вызывать <xref:System.IDisposable.Dispose%2A> метод для объекта.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 В следующем примере кода приведен пример бизнес-объекта среднего уровня, используемого в предыдущем примере кода. Пример кода состоит из базового бизнес-объекта, определяемого `EmployeeLogic` классом, который является классом с отслеживанием состояния, который инкапсулирует бизнес-логику. Для выполнения полного рабочего примера необходимо скомпилировать этот код как библиотеку и использовать эти классы из страницы ASP.NET (ASPX-файла).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]  
  
 В следующем примере показано, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> как выполнить обработку события при <xref:System.Web.UI.WebControls.ObjectDataSource> использовании элемента управления с классом LINQ to SQL.  
  
```vb  
Public Sub ExampleObjectDisposing(ByVal sender As Object, _   
        ByVal e As ObjectDataSourceDisposingEventArgs)  
    e.Cancel = True  
End Sub  
```  
  
```csharp  
public void ExampleObjectDisposing(object sender,   
        ObjectDataSourceDisposingEventArgs e)  
{  
    e.Cancel = true;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OldValuesParameterFormatString : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает строку формата, применяемую к именам параметров для исходных значений, передаваемых методу <see langword="Delete" /> или <see langword="Update" />.</summary>
        <value>Строка, представляющая строку формата, применяемую к именам любых параметров <paramref name="oldValues" /> или параметров ключа, передаваемых методу <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> или <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />. Значение по умолчанию — <c>"{0}"</c>. Это означает, что имя параметра является именем поля.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> свойства применяется только к первичным ключам, например к тем, которые определены `DataKeyNames` в свойстве элемента управления с привязкой к данным, или в сценариях удаления <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> и обновления, где свойство имеет значение <xref:System.Web.UI.ConflictOptions.CompareAllValues> и набор исходных значений передается соответствующему методу данных.  
  
 Ниже приведены два распространенных сценария, в <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> которых можно изменить свойство:  
  
-   Может потребоваться изменить свойство, чтобы отличать старые и новые значения в обновлениях. Если для <xref:System.Web.UI.ConflictOptions.CompareAllValues> свойства задано значение, то в <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> коллекцию добавляются параметры для исходного и нового значений. <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> Без строки форматирования для каждого поля данных будет создано два параметра с одинаковым именем. Изменяя имя исходного параметра значения, можно сравнить данные с исходным источником данных для обнаружения конфликтов и сравнения значений ключей.  
  
-   Некоторые визуальные конструкторы реализуют определенную схему именования для исходных значений и ключей.  
  
 Свойство делегирует <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> <xref:System.Web.UI.WebControls.ObjectDataSource> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с элементом управления. <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="objectDataSource.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.EventArgs" />, содержащий данные событий.</param>
        <summary>Добавляет обработчик событий <see cref="E:System.Web.UI.Page.LoadComplete" /> на страницу, содержащую элемент управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Web.UI.WebControls.ObjectDataSource.OnInit%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении <see cref="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)" /> метода в производном классе обязательно <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /> вызовите метод для базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="ParsingCulture">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParsingCulture ParsingCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ParsingCulture ParsingCulture" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ParsingCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ParsingCulture As ParsingCulture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParsingCulture ParsingCulture { System::Web::UI::WebControls::ParsingCulture get(); void set(System::Web::UI::WebControls::ParsingCulture value); };" />
      <MemberSignature Language="F#" Value="member this.ParsingCulture : System.Web.UI.WebControls.ParsingCulture with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ParsingCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParsingCulture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, какие данные языка и региональные параметры используются при преобразовании строковых значений к фактическим типам свойств для построения объекта типа, указанного <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />.</summary>
        <value>Сведения о языке и региональных параметрах. Значение по умолчанию — <see cref="F:System.Web.UI.WebControls.ParsingCulture.Invariant" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="objectDataSource.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сохраняет состояние элемента управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <returns>Возвращает текущее состояние представления элемента управления; в противном случае, если с элементом управления не связано ни одно состояние представления, — значение <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select();" />
      <MemberSignature Language="F#" Value="member this.Select : unit -&gt; System.Collections.IEnumerable" Usage="objectDataSource.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает данные из базового хранилища данных, вызвав метод, указанный в свойстве <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />, с параметрами, заданными в коллекции <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />.</summary>
        <returns>Список строк данных <see cref="T:System.Collections.IEnumerable" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Указанный метод может иметь любую сигнатуру метода, но он должен возвращать или быть производным от одного из типов, перечисленных в следующей таблице <xref:System.Web.UI.WebControls.ObjectDataSource> , чтобы элемент управления мог успешно его вызвать.  
  
|Возвращаемый тип|Действие|  
|-----------------|------------|  
|<xref:System.Collections.IEnumerable>|Метод возвращается <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> методом. <xref:System.Collections.IEnumerable>|  
|<xref:System.Data.DataTable>|Объект <xref:System.Data.DataView> создается с <xref:System.Data.DataTable> помощью и возвращается <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> методом.|  
|<xref:System.Data.DataView>|Метод возвращается <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> методом. <xref:System.Data.DataView>|  
|<xref:System.Data.DataSet>|Первый <xref:System.Data.DataTable> <xref:System.Data.DataView> из извлекается и создается и возвращается <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> методом. <xref:System.Data.DataSet>|  
|<xref:System.Object>|Объект упаковывается в коллекцию с одним элементом <xref:System.Collections.IEnumerable> и возвращается <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> методом.|  
  
 Метод, идентифицируемый <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойством, может быть методом экземпляра `static` или методом (`Shared` в Visual Basic). Если это метод экземпляра, бизнес-объект создается и уничтожается каждый раз, когда вызывается метод, заданный <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойством, за исключением того, что тот же экземпляр используется для вызова метода, указанного <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойством, и метод, заданный <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> свойством. <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Метод <xref:System.Collections.IEnumerable>  возвращает интерфейс. Однако, чтобы включить сценарии кэширования и фильтрации, возвращаемое значение должно быть <xref:System.Data.DataSet> объектом. <xref:System.Collections.IEnumerable> <xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Data.DataView> Хотя класс не реализует интерфейс, элемент управления автоматически извлекает элемент управления по умолчанию, который реализует  <xref:System.Collections.IEnumerable> .  <xref:System.Data.DataSet>  
  
 Перед выполнением  <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> операции вызывается метод для вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> события. <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Можно обработать <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> событие, чтобы проверить значения параметров и выполнить предварительную обработку <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> перед операцией. Для выполнения операции <xref:System.Web.UI.WebControls.ObjectDataSourceView> получения данных объект использует отражение для создания экземпляра объекта, определяемого <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойством. Затем он вызывает метод, идентифицируемый <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойством, используя любые связанные <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> свойства. После завершения <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> операции вызывается метод для вызова события. <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> Событие можно обработать для проверки любых возвращаемых значений, выходных параметров и исключений, а также для выполнения любой последующей обработки.  
  
 <xref:System.Data.DataTable>Если свойство возвращает объект <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> , или <xref:System.Data.DataView> включено кэширование, извлекает данные из кэша и сохраняет их во время операции. <xref:System.Web.UI.WebControls.ObjectDataSource>  <xref:System.Data.DataSet> <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Кэш создается, удаляется или обновляется в зависимости от поведения кэширования, заданного сочетанием <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> свойств и. <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> Если свойство возвращает объект  <xref:System.Data.DataTable> или, а свойство задано , то оно вычисляется с любыми предоставленными свойствами, а результирующий фильтр применяется к списку данных во время <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> <xref:System.Data.DataSet> <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> операция.  
  
 Метод делегирует <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> методу <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с <xref:System.Web.UI.WebControls.ObjectDataSource> элементом управления. <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>  
  
 Дополнительные сведения о слиянии параметров, времени существования объектов и разрешении методов <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>см. в разделе.  
  
## <a name="data-bound-controls"></a>Элементы управления с привязкой к данным  
 Если элемент управления связан с элементом управления с привязкой к данным, таким <xref:System.Web.UI.WebControls.GridView> как элемент управления, <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> нет необходимости вызывать метод из кода страницы. <xref:System.Web.UI.WebControls.ObjectDataSource> Вместо <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> этого метод вызывается непосредственно элементом управления с привязкой к данным.  
  
   
  
## Examples  
 Пример кода см. в разделе <xref:System.Web.UI.WebControls.ObjectDataSource>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="SelectCountMethod">
      <MemberSignature Language="C#" Value="public string SelectCountMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCountMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCountMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCountMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCountMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя метода или функции, вызываемых элементом управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для извлечения количества строк.</summary>
        <value>Строка, представляющая имя метода или функции, используемых объектом <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для извлечения количества строк. Метод должен возвращать целое число (<see cref="T:System.Int32" />). Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Свойство определяет метод бизнес-объекта, используемый для получения общего числа строк для поддержки разбиения на страницы источника данных. Свойство вычисляется, только <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> если свойство имеет значение  `true` .  <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A>  
  
 Свойство делегирует <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> <xref:System.Web.UI.WebControls.ObjectDataSource> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с элементом управления. <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Сведения о поддержке разбиения по страницам в <xref:System.Web.UI.WebControls.ObjectDataSource> элементе управления см <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>. в разделе.  
  
   
  
## Examples  
 В следующих трех примерах показана веб-страница, класс страницы кода программной части и класс доступа к данным, позволяющие пользователю выбрать количество записей, отображаемых на странице.  
  
 Веб-страница содержит <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления, свойство которого <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> имеет значение `true`. <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Свойству присваивается имя метода, возвращающего общее число записей в запросе. Свойству <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A>  и свойству присвоены имена параметров, используемых в <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> методе Select. Страница также содержит <xref:System.Web.UI.WebControls.DropDownList> элемент управления.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 Во втором примере показан обработчик для <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> события <xref:System.Web.UI.WebControls.DropDownList> элемента управления. Код в обработчике задает <xref:System.Web.UI.WebControls.GridView.PageSize%2A> свойство для выбора пользователя.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 В третьем примере показан класс доступа к данным, который получает данные из таблицы Customers. Он включает метод с именем `GetSubsetOfEmployees`, который назначается <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойству <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. В примере также имеется метод с именем `GetEmployeeCount`, который назначается <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> свойству <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. Класс использует LINQ для запроса таблицы Customers. Для примера требуется класс LINQ to SQL, представляющий таблицу базы данных Northwind и Customers. Дополнительные сведения см. в разделе [инструкции. создание LINQ to SQL классов в веб-проекте](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Selected : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при завершении операции <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывает событие для проверки значений возвращаемого значения или выходных параметров или для определения, было ли создано исключение <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> после завершения операции. <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> Возвращаемое значение, выходные параметры и свойства обработки исключений доступны из <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> объекта, связанного с событием.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующих трех примерах показана веб-страница, класс страницы кода программной части и класс доступа к данным, позволяющие пользователю извлекать и обновлять записи в таблице Employees в базе данных Northwind.  
  
 В первом примере показана веб-страница, содержащая <xref:System.Web.UI.WebControls.ObjectDataSource> два элемента управления <xref:System.Web.UI.WebControls.DropDownList> , элемент управления и <xref:System.Web.UI.WebControls.DetailsView> элемент управления. Первый <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления <xref:System.Web.UI.WebControls.DropDownList> и элемент управления используются для получения и вывода имен сотрудников из базы данных. Второй <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления <xref:System.Web.UI.WebControls.DetailsView> и элемент управления используются для получения, просмотра и изменения данных из записи сотрудника, выбранной пользователем.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]  
  
 Во втором примере показаны обработчики для <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> событий <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> и. Обработчик <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> событий сериализует объект, содержащий данные, полученные из таблицы Employee. Сериализованный объект хранится в состоянии представления. Обработчик <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> событий десериализует объект в состоянии представления, который содержит исходные данные для обновляемой записи данных. Объект, содержащий исходные данные, передается в качестве параметра в метод Update. Исходные данные должны быть переданы в базу данных, чтобы их можно было использовать для проверки того, были ли данные изменены другим процессом.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]  
  
 В третьем примере показан класс доступа к данным, взаимодействующий с базой данных Northwind. Класс использует LINQ для запроса и обновления таблицы Employees. Для примера требуется класс LINQ to SQL, представляющий таблицу базы данных Northwind и Employees. Дополнительные сведения см. в разделе [инструкции. создание LINQ to SQL классов в веб-проекте](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As ObjectDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler " Usage="member this.Selecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед операцией <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывайте <xref:System.Web.UI.WebControls.ObjectDataSource> событие, чтобы выполнить дополнительную инициализацию, характерную для вашего приложения, проверить значения параметров или изменить значения параметров до того, как элемент управления выполнит операцию получения данных. <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> Параметры доступны в виде <xref:System.Collections.IDictionary> коллекции, к которой обращается <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> свойство, <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> которое предоставляется объектом.  
  
 Это событие может быть вызвано дважды для одного вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метода, <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> если свойство задано. <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs.ExecutingSelectCount%2A> Свойство <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>  объекта используется для определения того, был ли вызван метод Select для получения данных или получения счетчика.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="SelectMethod">
      <MemberSignature Language="C#" Value="public string SelectMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя метода или функции, вызываемых элементом управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для извлечения данных.</summary>
        <value>Строка, представляющая имя метода или функции, используемых элементом управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для извлечения данных. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Указанный метод может иметь любую сигнатуру метода, но он должен возвращать один из типов, приведенных в следующей таблице <xref:System.Web.UI.WebControls.ObjectDataSource> , чтобы элемент управления успешно вызывал его.  
  
|Возвращаемый тип|Действие|  
|-----------------|------------|  
|<xref:System.Collections.IEnumerable>|Метод возвращается <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> методом. <xref:System.Collections.IEnumerable>|  
|<xref:System.Data.DataTable>|Создается с помощью  <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> и возвращается методом. <xref:System.Data.DataTable> <xref:System.Data.DataView>|  
|<xref:System.Data.DataView>|Метод возвращается <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> методом. <xref:System.Data.DataView>|  
|<xref:System.Data.DataSet>|Первый <xref:System.Data.DataTable> <xref:System.Data.DataView> из извлекается, а создается и возвращается <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> методом. <xref:System.Data.DataSet>|  
|<xref:System.Object>|Объект упаковывается в коллекцию с одним элементом <xref:System.Collections.IEnumerable> и возвращается <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> методом.|  
  
 Свойство делегирует <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> <xref:System.Web.UI.WebControls.ObjectDataSource> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с элементом управления. <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>  
  
 При использовании <xref:System.Web.UI.WebControls.ObjectDataSource> класса для удаления или обновления данных убедитесь, что имена параметров, настроенных <xref:System.Web.UI.WebControls.ObjectDataSource> для элемента управления в <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекции или <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> коллекции, соответствуют именам столбцов, возвращаемым методом Select. .  
  
## <a name="object-lifetime"></a>Время жизни объекта  
 Метод, идентифицируемый <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойством, может быть методом экземпляра `static` или методом (`Shared` в Visual Basic). Если это метод экземпляра, бизнес-объект создается и уничтожается каждый раз, когда вызывается метод, заданный <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойством. Можно <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> обойти события и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> для работы с бизнес-объектом до вызова метода <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> , заданного свойством. Можно также выполнить обработку <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> события, возникающего после вызова метода, заданного <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойством. Если бизнес-объект реализует <xref:System.IDisposable> интерфейс <xref:System.IDisposable.Dispose%2A> , метод вызывается перед уничтожением объекта. Если метод имеет значение `static` (`Shared` в Visual Basic), бизнес-объект никогда не создается <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>и вы не можете управлять событиями, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>и.  
  
## <a name="parameter-merging"></a>Слияние параметров  
 Параметры добавляются в <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> коллекцию из следующих источников:  
  
-   Декларативно из `SelectParameters` элемента.  
  
-   Программным способом `Selecting` из метода.  
  
 Сначала добавляются параметры, перечисленные в `SelectParameters` элементе. Во-вторых, параметры добавляются в <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> событие программно и удаляются в событии, которое происходит <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> перед выполнением метода. Метод разрешается после слияния параметров. Разрешение метода рассматривается в следующем разделе.  
  
> [!IMPORTANT]
>  Следует проверить все значения параметров, получаемые от клиента. Среда выполнения просто подставляет значение параметра в <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство.  
  
## <a name="method-resolution"></a>Разрешение метода  
 При вызове  `SelectParameters` метода поля данных из элемента управления с привязкой к данным, параметры, которые были созданы декларативно в элементе, и параметры <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> , добавленные в обработчике событий, объединяются. <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> (Дополнительные сведения см. в предыдущем разделе.) Затем <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления пытается найти вызываемый метод. Во-первых, он ищет один или несколько методов с именем, указанным в <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойстве. Если совпадений не найдено, <xref:System.InvalidOperationException> возникает исключение. Если совпадение найдено, оно ищет совпадающие имена параметров. Например, предположим, что тип, заданный <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойством, имеет два метода с именем. `SelectARecord` Одна `SelectARecord` имеет один `ID`параметр,, а другой `SelectARecord` имеет два параметра: `Name` и `Number`. Если коллекция имеет только один параметр с именем `ID`, `SelectARecord` вызывается метод только `ID` с параметром. <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> Тип параметра не проверяется при разрешении методов. Порядок параметров не имеет значения.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Если свойство задано, метод разрешается другим способом. Выполняет поиск метода с именем, указанным <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> в свойстве, которое принимает один параметр типа <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> , указанного в свойстве. <xref:System.Web.UI.WebControls.ObjectDataSource> В этом случае имя параметра не имеет значения.  
  
   
  
## Examples  
 В следующем примере кода показано, как <xref:System.Web.UI.WebControls.GridView> элемент управления может отображать данные <xref:System.Web.UI.WebControls.ObjectDataSource> с помощью элемента управления на странице веб-форм. Определяет частичное или полное имя класса <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> со свойством и методом, который вызывается <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> для получения данных со свойством. <xref:System.Web.UI.WebControls.ObjectDataSource> Во время выполнения создается объект, и метод вызывается с помощью отражения. Элемент управления перечисляет <xref:System.Collections.IEnumerable> коллекцию, возвращаемую методом <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> , указанным свойством, и отображает данные. <xref:System.Web.UI.WebControls.GridView>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Использование Entity Framework и элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию параметров, используемых методом, заданным свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />.</summary>
        <value>Коллекция параметров, используемых методом, заданным свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> Свойство <xref:System.Web.UI.WebControls.ObjectDataSource> получает свойство объекта <xref:System.Web.UI.WebControls.ObjectDataSourceView>  , связанного с элементом управления. <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>  
  
 Параметры добавляются в <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> коллекцию декларативно с `SelectParameters` помощью элемента или программно <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> в обработчике события. Во время выполнения параметры, перечисленные в `SelectParameters` элементе, добавляются в коллекцию первыми. После этого параметры в коллекции добавляются или удаляются обработчиком для <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> события. Событие возникает перед выполнением  <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метода. <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>  
  
 Перед выполнением  <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> метода имена и типы параметров, содержащихся в коллекции, должны соответствовать сигнатуре метода <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> , указанного свойством. <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Например, если метод `GetEmployeesByStateAndAge` SELECT `string` принимает и <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> целое число в качестве параметров, коллекция должна содержать два параметра. Первый параметр должен разрешаться в строку, а второй параметр должен разрешаться в целое число. Оба параметра можно указать в разметке `SelectParameters` элемента. Кроме того, их можно добавить в <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> обработчик событий, а один параметр можно добавить в разметку, а другой можно добавить программным способом.  
  
 Дополнительные сведения см. в разделе [Использование параметров с элементом управления ObjectDataSource](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4) и <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod> свойством.  
  
> [!IMPORTANT]
>  В коде для <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> обработчика событий или в методе, указанном <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойством, убедитесь, что проверяется любое значение параметра, полученное от клиента.  
  
   
  
## Examples  
 В следующем примере кода показано, как получить одну запись данных с помощью <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления и отобразить ее <xref:System.Web.UI.WebControls.DetailsView> в элементе управления. Элемент управления извлекает определенную запись о сотруднике, `GetEmployee` вызывая метод `EmployeeLogic` класса. <xref:System.Web.UI.WebControls.ObjectDataSource> Для `GetEmployee` метода требуется параметр идентификатора сотрудника. Элемент управления использует элемент в разметке `GetEmployee` для создания объекта, который будет получать значение указанного параметра строки запроса из URL-адреса и передавать его методу. <xref:System.Web.UI.WebControls.QueryStringParameter>  `QueryStringParameter` <xref:System.Web.UI.WebControls.ObjectDataSource>  
  
 Другие классы параметров можно использовать для получения значений из других источников, таких как свойства элементов управления, поля форм, файлы cookie, данные профиля ASP.NET или состояние сеанса. Для передачи жестко запрограммированного значения методу Select можно также использовать объект параметра, определенный в разметке. Дополнительные сведения о доступных классах параметров см. в разделе [Использование параметров с элементами управления источниками данных для фильтрации](https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)).  
  
 Для выполнения этого примера потребуется следующее:  
  
-   Веб-сайт, имеющий строку подключения с `NorthwindConnection` именем, которая подключается к базе данных Northwind Traders. Дополнительные сведения см. в <xref:System.Web.UI.WebControls.ObjectDataSource> разделе Общие сведения о классе.  
  
-   Класс, который показан в виде одного из примеров кода <xref:System.Web.UI.WebControls.ObjectDataSource> для обзора класса. `EmployeeLogic` Файл класса должен находиться в папке App_Code.  
  
-   Пример кода можно запустить как страницу ASPX. Если страница запрашивается без параметра строки запроса, выводится сообщение об ошибке. Если вы запрашиваете страницу, используя строку запроса, `?empid=1` например после имени ASPX-файла, вы увидите сведения для запрошенного сотрудника.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/CS/objds3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/VB/objds3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SortParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя бизнес-объекта, который позволяет параметру <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> задать выражение сортировки для обеспечения поддержки сортировки источника данных.</summary>
        <value>Имя параметра метода, позволяющее задать параметр, используемый для сортировки данных. Значение по умолчанию - пустая строка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> Свойство используется для поддержки сортировки источника данных. <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> Если свойство задано для объекта и передается в метод, значение определяет имя параметра метода бизнес-объекта в соответствии с сортировкой данных. <xref:System.Web.UI.DataSourceSelectArguments> <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>  
  
 Если объект <xref:System.Web.UI.WebControls.ObjectDataSource> связан с элементом управления с привязкой к данным, то значения, передаваемые этому параметру, принимают форму значений полей, разделенных запятыми `"DESC"`, `"ASC"` за которыми следует или. Например, значение для сортировки `Name` по возрастанию будет равно. `"Name ASC"`  
  
 Свойство делегирует <xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A> <xref:System.Web.UI.WebControls.ObjectDataSource> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с элементом управления. <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A>  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как реализовать тип, поддерживающий сортировку. Во втором примере кода показано, как реализовать выражение сортировки.  
  
 В следующем примере кода показано, как реализовать тип, поддерживающий сортировку. Класс принимает параметр. `SelectMethod`  `SortingData` `sortExpression` Строка `SelectMethod` , передаваемая в, используется <xref:System.Data.DataView.Sort%2A> для свойства <xref:System.Data.DataView> объекта, возвращаемого методом `SelectMethod`.  
  
 [!code-csharp[ObjectDataSourceSorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceSorting/CS/SortingData.cs#1)]
 [!code-vb[ObjectDataSourceSorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceSorting/VB/SortingData.vb#1)]  
  
 В следующем примере кода показано, как реализовать выражение сортировки. Код на веб-странице создает экземпляр <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. Свойство имеет <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> значение, а свойство имеет значение  `sortExpression` .  `SortingData` <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> Свойству <xref:System.Web.UI.WebControls.GridView> элемента управления присваивается значение  `true` .  <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> Когда пользователь нажимает кнопку **Sort** , имя `Name` поля или `Number`передается `SelectMethod` в параметре Sort.  
  
 [!code-aspx-csharp[ObjectDataSourceSorting#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceSorting/CS/SortingDataExample.aspx#2)]
 [!code-aspx-vb[ObjectDataSourceSorting#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceSorting/VB/SortingDataExampleVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanSort" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="SqlCacheDependency">
      <MemberSignature Language="C#" Value="public virtual string SqlCacheDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlCacheDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SqlCacheDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SqlCacheDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SqlCacheDependency : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает разделенную точками с запятой строку, которая показывает, какие базы данных и таблицы используются для зависимости кэша Microsoft SQL Server.</summary>
        <value>Строка, которая показывает, какие базы данных и таблицы используются для зависимости кэша Microsoft SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Элемент управления поддерживает необязательную политику срока действия, основанную <xref:System.Web.Caching.SqlCacheDependency> на объекте для кэша данных (служба должна быть настроена для сервера базы данных). <xref:System.Web.UI.WebControls.ObjectDataSource>  
  
 SQL Server поддерживает два механизма недействительности кэша: опрос и уведомление. Каждый механизм имеет другой синтаксис для <xref:System.Web.Caching.SqlCacheDependency> объекта.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Поддерживает только опрос. Строка используется для <xref:System.Data.SqlClient.SqlDependency> создания объекта <xref:System.Data.Common.DbCommand> , который передается <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> в конструктор перед выполнением метода. <xref:System.Web.Caching.SqlCacheDependency> Строка определяет базы данных и таблицы в соответствии с тем же форматом, который используется `@ Page` директивой, где первая часть строки является строкой подключения к SQL Server базе данных, за которой следует разделитель-двоеточие и, наконец, имя <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> таблицы базы данных (например, `"connectionstring1:table1"`). Если свойство зависит от более чем одной таблицы, строки подключения и имена таблиц разделяются точками с запятой (например, `"connectionstring1:table1";connectionstring2:table2"`). <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A>  
  
 Для поддержки уведомлений необходимо написать логику кэша в реализации <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойства и обработайте построение <xref:System.Web.Caching.SqlCacheDependency> объекта в коде.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как создать зависимость кэша SQL Server и задать <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSource> объекта. Во втором примере кода показано, как реализовать метод-оболочку, который <xref:System.Data.DataSet> возвращает объект, чтобы включить кэширование и <xref:System.Web.UI.WebControls.ObjectDataSource> фильтрацию с помощью объекта.  
  
 В следующем примере кода показано, как создать зависимость кэша SQL Server и задать <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. В этом примере база данных опрашивается каждые 120 секунд. Если данные в таблице «Сотрудники компании Northwind» изменяются в течение этого времени, то срок действия всех <xref:System.Web.UI.WebControls.ObjectDataSource> данных, кэшированных элементом <xref:System.Web.UI.WebControls.GridView> управления и отображаемых элементом управления, истечет, и при следующем запросе страницы будет получен новый набор данных.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_7/CS/objds7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_7/VB/objds7vb.aspx#1)]  
  
 В следующем примере кода показано, как реализовать метод-оболочку, который <xref:System.Data.DataSet> возвращает объект, чтобы включить кэширование и <xref:System.Web.UI.WebControls.ObjectDataSource> фильтрацию с помощью элемента управления. В базовой реализации `EmployeeLogic` класса `GetAllEmployees` метод возвращает <xref:System.Collections.ArrayList> объект. Вместо рефакторинга объекта для <xref:System.Web.UI.WebControls.ObjectDataSource> работы на странице веб-форм добавляется метод оболочки с именем `GetAllEmployeesAsDataSet` `NorthwindEmployee` , возвращающий <xref:System.Data.DataSet>набор данных в виде.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="StartRowIndexParameterName">
      <MemberSignature Language="C#" Value="public string StartRowIndexParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartRowIndexParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property StartRowIndexParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StartRowIndexParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StartRowIndexParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("startRowIndex")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя параметра метода извлечения данных, который позволяет задать значение идентификатора первой записи для обеспечения поддержки разбиения по страницам источника данных.</summary>
        <value>Имя параметра метода бизнес-объекта, позволяющее задать первую извлекаемую запись. Параметр должен возвращать целую величину. Значение по умолчанию — <c>"startRowIndex"</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> Свойство используется для поддержки разбиения на страницы источника данных. Сведения о поддержке разбиения по страницам в <xref:System.Web.UI.WebControls.ObjectDataSource> элементе управления см <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>. в разделе.  
  
 Свойство делегирует <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> <xref:System.Web.UI.WebControls.ObjectDataSource> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с элементом управления. <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A>  
  
   
  
## Examples  
 В следующих трех примерах показана веб-страница, класс страницы кода программной части и класс доступа к данным, позволяющие пользователю выбрать количество записей, отображаемых на странице.  
  
 Веб-страница содержит <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления, свойство которого <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> имеет значение `true`. <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Свойству присваивается имя метода, возвращающего общее число записей в запросе. Свойству <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A>  и свойству присвоены имена параметров, используемых в <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> методе Select. Страница также содержит <xref:System.Web.UI.WebControls.DropDownList> элемент управления.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 Во втором примере показан обработчик для <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> события <xref:System.Web.UI.WebControls.DropDownList> элемента управления. Код в обработчике задает <xref:System.Web.UI.WebControls.GridView.PageSize%2A> свойство для выбора пользователя.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 В третьем примере показан класс доступа к данным, который получает данные из таблицы Customers. Он включает метод с именем `GetSubsetOfEmployees`, который назначается <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойству <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. В примере также имеется метод с именем `GetEmployeeCount`, который назначается <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> свойству <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. Класс использует LINQ для запроса таблицы Customers. Для примера требуется класс LINQ to SQL, представляющий таблицу базы данных Northwind и Customers. Дополнительные сведения см. в разделе [инструкции. создание LINQ to SQL классов в веб-проекте](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="objectDataSource.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Отслеживает изменения состояния представления элемента управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для сохранения в объекте <see cref="T:System.Web.UI.StateBag" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.TrackViewState%2A> Метод переопределен для пометки начальной точки для начала отслеживания и сохранения изменений в элементе управления как части состояния представления для объекта.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.TrackViewState" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает класс, представляемый объектом <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <value>Полное или сокращенное имя класса, обозначающее тип объекта, представляемого классом <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы создать экземпляр объекта <xref:System.Web.UI.WebControls.ObjectDataSource> , к которому привязан элемент управления, элемент управления использует отражение для загрузки типа, который определяется по имени типа во время выполнения. Таким образом, значение <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойства может быть частично квалифицированным типом для кода, расположенного в каталогах bin или App_Code, или полным именем типа для кода, зарегистрированного в глобальном кэше сборок. При использовании глобального кэша сборок необходимо добавить соответствующую ссылку на `assemblies` раздел файла Machine. config или Web. config.  
  
 Тип должен иметь конструктор без параметров, если только вы не обрабатываете <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> событие, чтобы самостоятельно создать его экземпляр. Экземпляр типа создается <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>для каждого вызова методов, <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>и <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> , если методы типа являются методами-членами. Экземпляр не создается, если методы имеют `static` значение (`Shared` в Visual Basic). Если тип реализует <xref:System.IDisposable> интерфейс <xref:System.IDisposable.Dispose%2A> , метод вызывается перед уничтожением объекта.  
  
   
  
## Examples  
 В следующем примере кода показано, как <xref:System.Web.UI.WebControls.GridView> элемент управления может отображать данные с <xref:System.Web.UI.WebControls.ObjectDataSource> помощью элемента управления на странице веб-форм. Определяет частичное или полное имя класса <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> со свойством и методом, который вызывается <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> для получения данных со свойством. <xref:System.Web.UI.WebControls.ObjectDataSource> Во время выполнения создается объект, и метод вызывается с помощью отражения. Элемент управления перечисляет <xref:System.Collections.IEnumerable> коллекцию <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>  , возвращаемую свойством, и отображает данные. <xref:System.Web.UI.WebControls.GridView>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 В следующем примере показан класс, <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> на который ссылается значение свойства.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; int" Usage="objectDataSource.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выполняет операцию обновления путем вызова метода, заданного свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />, и параметры, содержащиеся в коллекции <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />.</summary>
        <returns>Значение, представляющее число строк, обновленных в базовом хранилище данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Предполагается, что бизнес-объект обновляет данные по одной записи за раз, а не в пакете.  
  
 Перед выполнением  <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> операции вызывается метод для вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> события. <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> Можно обработать <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> событие, чтобы проверить значения параметров и выполнить предварительную обработку <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> перед операцией. Для выполнения операции <xref:System.Web.UI.WebControls.ObjectDataSourceView> обновления объект использует отражение для создания экземпляра объекта, определяемого <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойством. Затем он вызывает метод, идентифицируемый <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойством, используя любые связанные <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> свойства. После завершения <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> операции вызывается метод для вызова события. <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> Событие можно обработать для проверки любых возвращаемых значений, выходных параметров и исключений, а также для выполнения любой последующей обработки.  
  
 Метод делегирует <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> методу <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с <xref:System.Web.UI.WebControls.ObjectDataSource> элементом управления. <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>  
  
 Дополнительные сведения о слиянии параметров, времени существования объектов и разрешении методов <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>см. в разделе.  
  
> [!IMPORTANT]
>  Следует проверить все значения параметров, получаемые от клиента. Среда выполнения просто подставляет значение параметра в <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойство.  
  
## <a name="data-bound-controls"></a>Элементы управления с привязкой к данным  
 Если элемент управления связан с элементом управления с привязкой к данным, таким <xref:System.Web.UI.WebControls.GridView> как элемент управления, <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> нет необходимости вызывать метод из кода страницы. <xref:System.Web.UI.WebControls.ObjectDataSource> Вместо <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> этого метод вызывается непосредственно элементом управления с привязкой к данным.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как использовать <xref:System.Web.UI.WebControls.DropDownList> элемент управления, <xref:System.Web.UI.WebControls.TextBox> элементы управления и несколько <xref:System.Web.UI.WebControls.ObjectDataSource> объектов для обновления данных. Во втором примере кода показан `EmployeeLogic` класс, который используется в первом примере кода.  
  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.DropDownList> элемент управления, <xref:System.Web.UI.WebControls.TextBox> элементы управления и несколько <xref:System.Web.UI.WebControls.ObjectDataSource> элементов управления для обновления данных. Отображает имя сотрудника Northwind, <xref:System.Web.UI.WebControls.TextBox> а элементы управления используются для ввода и обновления сведений об адресах. <xref:System.Web.UI.WebControls.DropDownList> Поскольку коллекция содержит объект, привязанный к <xref:System.Web.UI.WebControls.DropDownList>выбранному значению, кнопка, которая вызывает <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> операцию, активируется только после выбора сотрудника. <xref:System.Web.UI.WebControls.ControlParameter> <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 В следующем примере кода показан `EmployeeLogic` класс, который используется в предыдущем примере кода.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/northwindemployee12.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/northwindemployee12.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Использование Entity Framework и элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Updated : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при завершении <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывает событие для проверки значений возвращаемого значения или выходных параметров или для определения, было ли создано исключение <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> после завершения операции. <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> Возвращаемое значение, выходные параметры и свойства обработки исключений доступны из <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> объекта, связанного с событием.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Использование Entity Framework и элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя метода или функции, вызываемого элемента управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для обновления данных.</summary>
        <value>Строка, представляющая имя метода или функции, используемых объектом <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для обновления данных. Значение по умолчанию - пустая строка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Элемент управления предполагает, что метод, идентифицируемый <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойством, выполняет обновление по одному за раз, а не в пакете. <xref:System.Web.UI.WebControls.ObjectDataSource>  
  
 Свойство делегирует <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> <xref:System.Web.UI.WebControls.ObjectDataSource> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, связанного с элементом управления. <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>  
  
 Убедитесь, что имена параметров, настроенных для <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> в коллекции, соответствуют именам столбцов, возвращаемым методом Select.  
  
## <a name="object-lifetime"></a>Время жизни объекта  
 Метод, идентифицируемый <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойством, может быть методом экземпляра `static` или методом (`Shared` в Visual Basic). Если это метод экземпляра, бизнес-объект создается и уничтожается каждый раз, когда вызывается метод, заданный <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойством. Можно <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> обойти события и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> для работы с бизнес-объектом до вызова метода <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> , заданного свойством. Можно также выполнить обработку <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> события, возникающего после вызова метода, заданного <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойством. Если бизнес-объект реализует <xref:System.IDisposable> интерфейс <xref:System.IDisposable.Dispose%2A> , метод вызывается перед уничтожением объекта. Если метод имеет значение `static` (`Shared` в Visual Basic), бизнес-объект никогда не создается <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>и вы не можете управлять событиями, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>и.  
  
## <a name="parameter-merging"></a>Слияние параметров  
 Параметры добавляются в <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> коллекцию из трех источников:  
  
-   Из элемента управления с привязкой к данным во время выполнения.  
  
-   `UpdateParameters` Из элемента декларативно.  
  
-   Из обработчика <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> событий программным способом.  
  
 Во-первых, все параметры, созданные из элементов управления с привязкой к данным <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> , добавляются в коллекцию. Например, <xref:System.Web.UI.WebControls.ObjectDataSource> если элемент управления привязан <xref:System.Web.UI.WebControls.GridView> к элементу управления со столбцами `Name` и `Number`, параметры для `Name` и `Number` добавляются в коллекцию. Точное имя параметра зависит от <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> свойства. Эти параметры имеют `string`тип данных. Затем добавляются параметры, перечисленные в `UpdateParameters` элементе. Если в `UpdateParameters` элементе обнаружен параметр с тем же именем, что и у параметра, уже находящийся <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> в коллекции, существующий параметр изменяется в соответствии с параметром `UpdateParameters` , указанным в элементе. Как правило, он используется для изменения типа данных в параметре. Наконец, можно программно добавлять и удалять параметры в <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> событии, которое происходит <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> перед выполнением метода. Метод разрешается после слияния параметров. Разрешение метода рассматривается в следующем разделе.  
  
> [!IMPORTANT]
>  Следует проверить все значения параметров, получаемые от клиента. Среда выполнения просто подставляет значение параметра в <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойство.  
  
## <a name="method-resolution"></a>Разрешение метода  
 При вызове  `UpdateParameters` метода поля данных из элемента управления с привязкой к данным, параметры, которые были созданы декларативно в элементе, и параметры <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> , добавленные в обработчике событий, объединяются. <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> (Дополнительные сведения см. в предыдущем разделе.) Затем <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления пытается найти вызываемый метод. Во-первых, он ищет один или несколько методов с именем, указанным в <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойстве. Если совпадений не найдено, <xref:System.InvalidOperationException> возникает исключение. Если совпадение найдено, оно ищет совпадающие имена параметров. Например, предположим, что тип, заданный <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойством, имеет два метода с именем. `UpdateARecord` Одна `UpdateARecord` имеет один `ID`параметр,, а другой `UpdateARecord` имеет два параметра: `Name` и `Number`. Если коллекция имеет только один параметр с именем `ID`, `UpdateARecord` вызывается метод только `ID` с параметром. <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> Тип параметра не проверяется при разрешении методов. Порядок параметров не имеет значения.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Если свойство задано, метод разрешается другим способом. Выполняет поиск метода с именем, указанным <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> в свойстве, которое принимает один параметр типа <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> , указанного в свойстве. <xref:System.Web.UI.WebControls.ObjectDataSource> В этом случае имя параметра не имеет значения.  
  
   
  
## Examples  
 В следующих трех примерах показана веб-страница, класс страницы кода программной части и класс доступа к данным, позволяющие пользователю извлекать и обновлять записи в таблице Employees в базе данных Northwind.  
  
 В первом примере показана веб-страница, содержащая <xref:System.Web.UI.WebControls.ObjectDataSource> два элемента управления <xref:System.Web.UI.WebControls.DropDownList> , элемент управления и <xref:System.Web.UI.WebControls.DetailsView> элемент управления. Первый <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления <xref:System.Web.UI.WebControls.DropDownList> и элемент управления используются для получения и вывода имен сотрудников из базы данных. Второй <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления <xref:System.Web.UI.WebControls.DetailsView> и элемент управления используются для получения, просмотра и изменения данных из записи сотрудника, выбранной пользователем.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]  
  
 Во втором примере показаны обработчики для <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> событий <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> и. Обработчик <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> событий сериализует объект, содержащий данные, полученные из таблицы Employee. Сериализованный объект хранится в состоянии представления. Обработчик <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> событий десериализует объект в состоянии представления, который содержит исходные данные для обновляемой записи данных. Объект, содержащий исходные данные, передается в качестве параметра в метод Update. Исходные данные должны быть переданы в базу данных, чтобы их можно было использовать для проверки того, были ли данные изменены другим процессом.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]  
  
 В третьем примере показан класс доступа к данным, взаимодействующий с базой данных Northwind. Класс использует LINQ для запроса и обновления таблицы Employees. Для примера требуется класс LINQ to SQL, представляющий таблицу базы данных Northwind и Employees. Дополнительные сведения см. в разделе [инструкции. создание LINQ to SQL классов в веб-проекте](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Использование Entity Framework и элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию параметров, содержащую параметры, используемые методом, заданным свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, содержащий параметры, используемые методом, заданным свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Имена и типы параметров, содержащихся в <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> коллекции, должны соответствовать именам и типам параметров <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> в сигнатуре метода. На имена параметров зависят <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> свойства и учитывается регистр. Параметры в коллекции зависят от данных в элементе управления с привязкой к данным, параметров, которые декларативно задаются, и параметров, которые добавляются программно. Дополнительные сведения см. в <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> подразделе «объединение параметров» раздела и [Использование параметров с элементом управления ObjectDataSource](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 Свойство получает свойство, содержащееся в <xref:System.Web.UI.WebControls.ObjectDataSource> объекте, связанном с элементом управления. <xref:System.Web.UI.WebControls.ObjectDataSourceView>  <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>  
  
 Дополнительные сведения о слиянии параметров, времени существования объектов и разрешении методов <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>см. в разделе.  
  
> [!IMPORTANT]
>  Следует проверить все значения параметров, получаемые от клиента. Среда выполнения просто подставляет значение параметра в <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойство.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как использовать <xref:System.Web.UI.WebControls.DropDownList> элемент управления, <xref:System.Web.UI.WebControls.TextBox> элементы управления и несколько <xref:System.Web.UI.WebControls.ObjectDataSource> объектов для обновления данных. Во втором примере кода показан `EmployeeLogic` класс, который используется в первом примере кода.  
  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.DropDownList> элемент управления, <xref:System.Web.UI.WebControls.TextBox> элементы управления и несколько <xref:System.Web.UI.WebControls.ObjectDataSource> элементов управления для обновления данных. Отображает имя сотрудника Northwind, <xref:System.Web.UI.WebControls.TextBox> а элементы управления используются для ввода и обновления сведений об адресах. <xref:System.Web.UI.WebControls.DropDownList> Поскольку коллекция содержит объект <xref:System.Web.UI.WebControls.ControlParameter> , привязанный к выбранному значению <xref:System.Web.UI.WebControls.DropDownList>, кнопка, которая вызывает <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> операцию, активируется только после выбора сотрудника. <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 В следующем примере кода показан `EmployeeLogic` класс, который используется в предыдущем примере кода.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/northwindemployee12.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/northwindemployee12.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Updating : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед операцией <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывайте <xref:System.Web.UI.WebControls.ObjectDataSource> событие, чтобы выполнить дополнительную инициализацию, характерную для вашего приложения, проверить значения параметров или изменить значения параметров до того, как элемент управления выполнит операцию обновления. <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> Параметры доступны в виде <xref:System.Collections.IDictionary> коллекции, к которой обращается <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> свойство, <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> которое предоставляется объектом.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующих трех примерах показана веб-страница, класс страницы кода программной части и класс доступа к данным, позволяющие пользователю извлекать и обновлять записи в таблице Employees в базе данных Northwind.  
  
 В первом примере показана веб-страница, содержащая <xref:System.Web.UI.WebControls.ObjectDataSource> два элемента управления <xref:System.Web.UI.WebControls.DropDownList> , элемент управления и <xref:System.Web.UI.WebControls.DetailsView> элемент управления. Первый <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления <xref:System.Web.UI.WebControls.DropDownList> и элемент управления используются для получения и вывода имен сотрудников из базы данных. Второй <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления <xref:System.Web.UI.WebControls.DetailsView> и элемент управления используются для получения, просмотра и изменения данных из записи сотрудника, выбранной пользователем.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]  
  
 Во втором примере показаны обработчики для <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> событий <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> и. Обработчик <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> событий сериализует объект, содержащий данные, полученные из таблицы Employee. Сериализованный объект хранится в состоянии представления. Обработчик <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> событий десериализует объект в состоянии представления, который содержит исходные данные для обновляемой записи данных. Объект, содержащий исходные данные, передается в качестве параметра в метод Update. Исходные данные должны быть переданы в базу данных, чтобы их можно было использовать для проверки того, были ли данные изменены другим процессом.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]  
  
 В третьем примере показан класс доступа к данным, взаимодействующий с базой данных Northwind. Класс использует LINQ для запроса и обновления таблицы Employees. Для примера требуется класс LINQ to SQL, представляющий таблицу базы данных Northwind и Employees. Дополнительные сведения см. в разделе [инструкции. создание LINQ to SQL классов в веб-проекте](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Элементы управления веб-сервером с источником данных</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">Общие сведения об элементе управления ObjectDataSource</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">Создание исходного объекта элемента управления ObjectDataSource</related>
      </Docs>
    </Member>
  </Members>
</Type>
