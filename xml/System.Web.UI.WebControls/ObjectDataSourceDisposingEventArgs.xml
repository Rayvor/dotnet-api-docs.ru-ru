<Type Name="ObjectDataSourceDisposingEventArgs" FullName="System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8781c3e861884abb7749ec0650543faca4af7b10" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69412463" /></Metadata><TypeSignature Language="C#" Value="public class ObjectDataSourceDisposingEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceDisposingEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSourceDisposingEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSourceDisposingEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type ObjectDataSourceDisposingEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет данные для события <see cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" /> элемента управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс используется в методе для предоставления доступа к экземпляру бизнес-объекта после выполнения любых <xref:System.Web.UI.WebControls.ObjectDataSource> операций с данными, использующих элемент управления и бизнес-объект, но до уничтожения бизнес-объекта. <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> Доступ к бизнес-объекту осуществляется с <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance%2A> помощью свойства. Добавив делегат для <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> работы с событием, можно получить доступ к любым общедоступным членам бизнес-объекта для выполнения любой конечной работы или очистки.  
  
 Метод не вызывается <xref:System.Web.UI.WebControls.ObjectDataSource> элементом управления, если метод, `static` выполняющий операции с данными, является методом. <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> Экземпляр бизнес-объекта не создается, если метод является статическим.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления предоставляет множество событий, которые можно обойти для работы с базовым бизнес-объектом в различные моменты жизненного цикла. В следующей таблице перечислены события и связанные с ними <xref:System.EventArgs> классы и делегаты обработчиков событий.  
  
|событие|EventArgs|EventHandler|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.<br /><br /> Происходит непосредственно перед созданием экземпляра бизнес-объекта.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.<br /><br /> Происходит сразу после создания экземпляра бизнес-объекта.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.<br /><br /> Происходит перед извлечением данных.|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> и <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>.<br /><br /> Происходит перед выполнением операции вставки, обновления или удаления.|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selected><br /><br /> Происходит после извлечения данных.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> и <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.<br /><br /> Происходит после завершения операции вставки, обновления или удаления.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.<br /><br /> Происходит перед уничтожением бизнес-объекта.|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления с бизнес-объектом <xref:System.Web.UI.WebControls.GridView> и элементом управления для отображения информации. Во втором примере кода представлен пример бизнес-объекта среднего уровня, используемого в первом примере кода.  
  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления с бизнес-объектом <xref:System.Web.UI.WebControls.GridView> и элементом управления для отображения информации. Для создания каждой операции с данными, выполняемой веб-страницей, можно работать с бизнес-объектом, который является очень ресурсоемким (с точки зрения времени или ресурсов). Одним из способов работы с дорогостоящим объектом может быть создание его экземпляра один раз, а затем кэширование для последующих операций, а не создание и уничтожение для каждой операции с данными. В этом примере демонстрируется этот шаблон. Можно выполнить обработку <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> события, чтобы сначала проверить кэш для объекта, а затем создать экземпляр, только если он еще не кэширован. Затем обработайте <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> событие для кэширования бизнес-объекта для будущего использования вместо его уничтожения. В <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> этом примере <xref:System.IDisposable.Dispose%2A> свойству <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> объекта присваивается значение `true`, чтобы <xref:System.Web.UI.WebControls.ObjectDataSource> не вызывать метод в экземпляре.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 В следующем примере кода приведен пример бизнес-объекта среднего уровня, используемого в предыдущем примере кода. Пример кода состоит из базового бизнес-объекта, определяемого `EmployeeLogic` классом, который является классом, сохраняющим состояние и инкапсулирующий бизнес-логику. Для выполнения полного рабочего примера необходимо скомпилировать этот код как библиотеку, а затем использовать эти классы из страницы ASP.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
    <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceDisposingEventArgs (object objectInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object objectInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (objectInstance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceDisposingEventArgs(System::Object ^ objectInstance);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs : obj -&gt; System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" Usage="new System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs objectInstance" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="objectInstance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectInstance">Бизнес-объект, с которым взаимодействует элемент управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для выполнения операций с данными.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" />, используя заданный объект.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ObjectInstance">
      <MemberSignature Language="C#" Value="public object ObjectInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ObjectInstance" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ObjectInstance As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ObjectInstance { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ObjectInstance : obj" Usage="System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект, представляющий бизнес-объект, совместно с которым элемент управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> выполняет операции с данными.</summary>
        <value>Бизнес-объект, который используется элементом управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для выполнения операций с данными; в противном случае —<see langword="null" />, если значение <see langword="null" /> передается элементу управления <see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если методы операции с данными (<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, и <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>) являются методами экземпляра, то перед выполнением метода создается экземпляр бизнес-объекта. Можно предотвратить создание бизнес-объекта для каждого вызова, сохранив объект в <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs.ObjectInstance%2A> свойстве <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> в обработчике событий. В последующих <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> событиях можно получить бизнес-объект <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> из свойства.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления с бизнес-объектом <xref:System.Web.UI.WebControls.GridView> и элементом управления для отображения информации. Для создания каждой операции с данными, выполняемой веб-страницей, можно работать с бизнес-объектом, который является очень ресурсоемким (с точки зрения времени или ресурсов). Одним из способов работы с дорогостоящим объектом может быть создание его экземпляра один раз, а затем кэширование для последующих операций, а не создание и уничтожение для каждой операции с данными. В этом примере демонстрируется этот шаблон. Можно выполнить обработку <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> события, чтобы сначала проверить кэш для объекта, а затем создать экземпляр, только если он еще не кэширован. Затем обработайте <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> событие для кэширования бизнес-объекта для будущего использования вместо его уничтожения. В <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> этом примере свойству `true` <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> класса присваивается значение, чтобы направить <xref:System.Web.UI.WebControls.ObjectDataSource> невызов <xref:System.IDisposable.Dispose%2A> в экземпляре.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance" />
      </Docs>
    </Member>
  </Members>
</Type>
