<Type Name="XmlDataSource" FullName="System.Web.UI.WebControls.XmlDataSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e80040e0b6f88a7b20d337228c83fb1384c6a83f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69399202" /></Metadata><TypeSignature Language="C#" Value="public class XmlDataSource : System.Web.UI.HierarchicalDataSourceControl, System.ComponentModel.IListSource, System.Web.UI.IDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDataSource extends System.Web.UI.HierarchicalDataSourceControl implements class System.ComponentModel.IListSource, class System.Web.UI.IDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.XmlDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDataSource&#xA;Inherits HierarchicalDataSourceControl&#xA;Implements IDataSource, IListSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDataSource : System::Web::UI::HierarchicalDataSourceControl, System::ComponentModel::IListSource, System::Web::UI::IDataSource" />
  <TypeSignature Language="F#" Value="type XmlDataSource = class&#xA;    inherit HierarchicalDataSourceControl&#xA;    interface IDataSource&#xA;    interface IListSource" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HierarchicalDataSourceControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IDataSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Transforming")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("DataFile")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.XmlDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.XmlDataSource))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.XmlDataSourceDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет источник XML-данных в элементы управления с привязкой к данным.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В этом разделе.  
  
-   [Введение](#introduction)  
  
-   [Источники XML-данных](#source_of_xml_data)  
  
-   [Обновление XML-данных](#updating_xml_data)  
  
-   [Указание преобразования XSL](#specifying_an_xsl_transformation)  
  
-   [Фильтрация с помощью выражения XPath](#filtering_using_an_xpath_expression)  
  
-   [Кэширование](#caching)  
  
-   [Дополнительные возможности](#additional_features)  
  
-   [Объект представления данных](#data_view_object)  
  
-   [Декларативный синтаксис](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Вступление  
 <xref:System.Web.UI.WebControls.XmlDataSource> Элемент управления является элементом управления источниками данных, который представляет XML-данные для элементов управления с привязкой к данным. <xref:System.Web.UI.WebControls.XmlDataSource> Элемент управления может использоваться элементами управления с привязкой к данным для вывода как иерархических, так и табличных данных. <xref:System.Web.UI.WebControls.XmlDataSource> Элемент управления обычно используется для вывода иерархических XML-данных в сценариях только для чтения. Поскольку элемент управления <xref:System.Web.UI.HierarchicalDataSourceControl> расширяет класс, он работает с иерархическими данными. <xref:System.Web.UI.WebControls.XmlDataSource> Элемент управления также <xref:System.Web.UI.IDataSource> реализует интерфейс и работает с табличными данными или со списком стилей. <xref:System.Web.UI.WebControls.XmlDataSource>  
  
> [!NOTE]
>  В целях безопасности ни одно из <xref:System.Web.UI.WebControls.XmlDataSource> свойств элемента управления не хранится в состоянии просмотра. Поскольку технически можно декодировать содержимое состояния представления на клиенте, хранение конфиденциальной информации о структуре данных или ее содержимом может привести к угрозе раскрытия информации. Обратите внимание, что если необходимо хранить такие сведения <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> , как свойство, в состоянии представления, можно включить шифрование для защиты содержимого, <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> установив для `@ Page` директивы.  
  
 Разработчики страниц используют <xref:System.Web.UI.WebControls.XmlDataSource> элемент управления для вывода XML-данных с помощью элементов управления с привязкой к данным.  
  
<a name="source_of_xml_data"></a>   
## <a name="sources-of-xml-data"></a>Источники XML-данных  
 Обычно загружает XML-данные из XML-файла, который задается <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> свойством. <xref:System.Web.UI.WebControls.XmlDataSource> XML-данные также могут храниться непосредственно в элементе управления источника данных в виде строки с <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> помощью свойства. Если требуется преобразовать XML-данные перед отображением элементом управления с привязкой к данным, можно предоставить таблицу стилей XSL для преобразования. Как и в случае с XML-данными, таблицу стилей обычно загружается из файла, определяемого <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> свойством, но его также можно сохранить в виде строки непосредственно <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> с помощью свойства.  
  
<a name="updating_xml_data"></a>   
## <a name="updating-xml-data"></a>Обновление XML-данных  
 <xref:System.Web.UI.WebControls.XmlDataSource> Элемент управления обычно используется в сценариях с данными только для чтения, в которых элемент управления с привязкой к данным отображает XML-данные. Однако для редактирования XML-данных также <xref:System.Web.UI.WebControls.XmlDataSource> можно использовать элемент управления. Чтобы изменить XML-данные, вызовите <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> метод, чтобы <xref:System.Xml.XmlDataDocument> получить объект, который является представлением XML-данных в памяти. Можно использовать объектную модель, предоставляемую <xref:System.Xml.XmlDataDocument> объектами и, которые <xref:System.Xml.XmlNode> она содержит, или использовать выражение фильтрации XPath для управления данными в документе. После внесения изменений в представление XML-данных в памяти можно сохранить их на диске, вызвав <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> метод.  
  
 Существуют некоторые ограничения на возможности <xref:System.Web.UI.WebControls.XmlDataSource> редактирования элемента управления.  
  
-   XML-данные должны быть загружены из XML-файла, указанного <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> свойством, а не из встроенного XML, указанного <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> в свойстве.  
  
-   В <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> свойствах или <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> не может быть указано преобразование XSLT.  
  
-   <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> Метод не обрабатывает параллельные операции сохранения различными запросами. Если редактируется XML-файл с помощью <xref:System.Web.UI.WebControls.XmlDataSource>более чем одного пользователя, нет никакой гарантии, что все пользователи работают с одними и теми же данными. Также возможно, <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> что операция завершится сбоем из-за таких же проблем параллелизма.  
  
<a name="specifying_an_xsl_transformation"></a>   
## <a name="specifying-an-xsl-transformation"></a>Указание преобразования XSL  
 Распространенная операция, выполняемая с XML-данными, преобразует их из одного набора данных XML в другой. Элемент управления поддерживает преобразование XML <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> с помощью свойств и <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> , которые задают таблицу стилей XSL, применяемую к XML-данным перед их передачей в элемент управления с привязкой к данным, <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> и свойство, которое позволяет <xref:System.Web.UI.WebControls.XmlDataSource> Укажите динамические аргументы таблицы стилей XSLT, которые будут использоваться таблицей стилей XSL во время преобразования. Если задать выражение фильтрации XPath с помощью <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> свойства, оно будет применено после преобразования.  
  
> [!NOTE]
>  Класс использует устаревший класс для выполнения преобразований XSL. <xref:System.Xml.Xsl.XslTransform> <xref:System.Web.UI.WebControls.XmlDataSource> Если вы хотите использовать функции таблицы стилей, появившиеся после того, <xref:System.Xml.Xsl.XslTransform> как класс был признан нерекомендуемым, примените преобразования вручную <xref:System.Xml.Xsl.XslCompiledTransform> с помощью класса.  
  
<a name="filtering_using_an_xpath_expression"></a>   
## <a name="filtering-using-an-xpath-expression"></a>Фильтрация с помощью выражения XPath  
 По умолчанию <xref:System.Web.UI.WebControls.XmlDataSource> элемент управления загружает все XML-данные в XML-файле, определенном <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> свойством, или в <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> строку свойства, но можно фильтровать данные с помощью выражения XPath. <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> Свойство поддерживает фильтр синтаксиса XPath, который применяется после загрузки и преобразования XML-данных.  
  
<a name="caching"></a>   
## <a name="caching"></a>Кэширование  
 В целях повышения производительности кэширование по умолчанию <xref:System.Web.UI.WebControls.XmlDataSource> включено для элемента управления. Открытие и чтение XML-файла на сервере каждый раз, когда запрошенная страница может снизить производительность приложения. Кэширование позволяет сократить вычислительную нагрузку на сервер за счет использования памяти на веб-сервере; в большинстве случаев это хороший компромисс. Объект <xref:System.Web.UI.WebControls.XmlDataSource> автоматически кэширует данные `true`, <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> если свойство имеет <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> значение, а свойство имеет значение, равное количеству секунд, в течение которых кэш хранит данные до того, как кэш становится недействительным. С помощью <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> можно настроить поведение кэширования элемента управления источниками данных.  
  
<a name="additional_features"></a>   
## <a name="additional-features"></a>Дополнительные функции  
 В следующей таблице перечислены дополнительные возможности, поддерживаемые <xref:System.Web.UI.WebControls.XmlDataSource> элементом управления.  
  
|Возможность|Описание|  
|----------------|-----------------|  
|Сортировка|Не поддерживается <xref:System.Web.UI.WebControls.XmlDataSource> элементом управления.|  
|Фильтрация|<xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> Свойство можно использовать для фильтрации XML-данных с помощью соответствующего выражения XPath.|  
|Разбивка на страницы|Не поддерживается <xref:System.Web.UI.WebControls.XmlDataSource> элементом управления.|  
|Updating|Поддерживается путем <xref:System.Xml.XmlDataDocument> непосредственного манипулирования и <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> вызова метода.|  
|Удаление|Поддерживается путем <xref:System.Xml.XmlDataDocument> непосредственного манипулирования и <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> вызова метода.|  
|Вставка|Поддерживается путем <xref:System.Xml.XmlDataDocument> непосредственного манипулирования и <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> вызова метода.|  
|Кэширование|По умолчанию включено, <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> если свойство имеет значение 0 (бесконечно), <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> а свойство имеет значение. <xref:System.Web.UI.DataSourceCacheExpiry.Absolute>|  
  
<a name="data_view_object"></a>   
## <a name="data-view-object"></a>Объект представления данных  
 <xref:System.Web.UI.WebControls.XmlDataSource> Поскольку элемент управления поддерживает элементы управления с привязкой к данным, отображающие иерархические данные, а также элементы управления, отображающие табличные данные, элемент управления источника данных поддерживает несколько типов объектов представления источников данных в своих базовых XML-данных. Элемент управления извлекает один именованный <xref:System.Web.UI.WebControls.XmlDataSourceView> объект при использовании с элементом управления с привязкой к данным, который отображает табличные данные. <xref:System.Web.UI.WebControls.XmlDataSource> <xref:System.Web.UI.IDataSource.GetViewNames%2A> Метод определяет это представление с одним именем. При использовании с привязанным к данным элементом управления, который отображает иерархические <xref:System.Web.UI.WebControls.XmlDataSource> данные, элемент <xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView> управления получает объект для любого уникального <xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A> иерархического пути, переданного в метод.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Декларативный синтаксис  
  
```  
<asp:XmlDataSource  
    CacheDuration="string|Infinite"  
    CacheExpirationPolicy="Absolute|Sliding"  
    CacheKeyDependency="string"  
    DataFile="string"  
    EnableCaching="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnTransforming="Transforming event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    TransformArgumentList="string"  
    TransformFile="string"  
    Visible="True|False"  
    XPath="string"  
>  
    <Data>string</Data>  
    <Transform>string</Transform>  
</asp:XmlDataSource>  
```  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как использовать <xref:System.Web.UI.WebControls.XmlDataSource> элемент управления <xref:System.Web.UI.WebControls.TreeView> с элементом управления для отображения XML-данных из примера XML-файла. Во втором примере демонстрируется использование <xref:System.Web.UI.WebControls.XmlDataSource> элемента управления с <xref:System.Web.UI.WebControls.Repeater> шаблонным элементом управления для отображения XML-данных.  
  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.XmlDataSource> элемент управления <xref:System.Web.UI.WebControls.TreeView> с элементом управления для отображения XML-данных. Загружает XML-данные из XML-файла, определенного <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> свойством. <xref:System.Web.UI.WebControls.XmlDataSource>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_1/CS/xmlds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_1/VB/xmlds1vb.aspx#1)]  
  
 XML-файл в примере кода содержит следующие данные:  
  
```  
<books>  
   <computerbooks>  
     <book title="Secrets of Silicon Valley" author="Sheryl Hunter"/>  
     <book title="Straight Talk About Computers" author="Dean Straight"/>  
     <book title="You Can Combat Computer Stress!" author="Marjorie Green"/>                  
   </computerbooks>  
   <cookbooks>  
     <book title="Silicon Valley Gastronomic Treats" author="Innes del Castill"/>  
   </cookbooks>  
</books>  
```  
  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.XmlDataSource> элемент управления с <xref:System.Web.UI.WebControls.Repeater> шаблонным элементом управления для отображения XML-данных. Элемент управления использует выражение привязки данных XPath для привязки к элементам данных внутри XML-документа <xref:System.Web.UI.WebControls.XmlDataSource> , который представляет. <xref:System.Web.UI.WebControls.Repeater> Дополнительные сведения о `XPath` синтаксисе `XPathSelect` и привязке данных см. в <xref:System.Web.UI.XPathBinder> разделе класс.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_14#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_14/CS/xmlds14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_14#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_14/VB/xmlds14vb.aspx#1)]  
  
 XML-файл в примере кода содержит следующие данные:  
  
```  
<?xml version="1.0" encoding="iso-8859-1"?>  
 <orders>  
   <order>  
     <customer id="12345" />  
     <customername>  
         <firstn>John</firstn>  
         <lastn>Smith</lastn>  
     </customername>  
     <transaction id="12345" />  
     <shipaddress>  
         <address1>1234 Tenth Avenue</address1>  
         <city>Bellevue</city>  
         <state>Washington</state>  
         <zip>98001</zip>  
     </shipaddress>  
     <summary>  
         <item dept="tools">screwdriver</item>  
         <item dept="tools">hammer</item>  
         <item dept="plumbing">fixture</item>  
     </summary>  
   </order>  
</orders>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.UI.IDataSource.GetViewNames" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Создает новый экземпляр класса <see cref="T:System.Web.UI.WebControls.XmlDataSource" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public virtual int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CacheDuration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheDuration : int with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.CacheDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataSourceCacheDurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает длину промежутка времени (в секундах), в течение которого элемент управления источником данных кэширует извлеченные им данные.</summary>
        <value>Количество секунд, на протяжении которых элемент управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> кэширует результат операции извлечения. Значение по умолчанию — 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.XmlDataSource> Элемент управления автоматически кэширует данные при следующем применении:  
  
-   Свойству <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> задано значение `true`.  
  
-   <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> Свойству присвоено значение больше 0, которое указывает количество секунд, в течение которых кэш хранит данные, прежде чем сделать кэш недействительным.  
  
 Любое изменение <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> свойства или содержимого файла, содержащего XML-данные, приводит к тому, что кэш станет недействительным.  
  
 По умолчанию <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> свойство имеет значение 0, которое указывает на неопределенный кэш, и источник данных кэширует данные до тех пор, пока не будет изменен XML-файл, от которого он зависит.  
  
 Поведение кэша регулируется сочетанием длительности и <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> параметра. Если <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> параметр имеет <xref:System.Web.UI.DataSourceCacheExpiry.Absolute>значение, <xref:System.Web.UI.WebControls.XmlDataSource> элемент управления кэширует данные при первой операции получения данных, сохраняет их в памяти в течение времени, заданного параметром <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>, и делает его недействительным после истечения времени. Затем кэш обновляется при следующей операции. Если <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> параметр имеет <xref:System.Web.UI.DataSourceCacheExpiry.Sliding>значение, то элемент управления источника данных кэширует данные при первой операции получения данных, но сбрасывает временное окно, в котором хранится кэш для каждой последующей операции. Срок действия кэша истекает только в том случае, если нет активности за время, равное значению, <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> с момента последнего получения данных.  
  
   
  
## Examples  
 В следующем примере кода показано, как включить кэширование при использовании <xref:System.Web.UI.WebControls.XmlDataSource> элемента управления для отображения данных, содержащихся в XML-файле. Кэширование включается, <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> если свойство имеет `true` значение, а <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> значение равно количеству секунд, в течение которых данные кэшируются элементом управления источника данных.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_16/CS/xmlds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_16/VB/xmlds16vb.aspx#1)]  
  
 XML-файл в примере кода содержит следующие данные:  
  
```  
<books>  
   <computerbooks>  
     <book title="Secrets of Silicon Valley" author="Sheryl Hunter"/>  
     <book title="Straight Talk About Computers" author="Dean Straight"/>  
     <book title="You Can Combat Computer Stress!" author="Marjorie Green"/>  
   </computerbooks>  
   <cookbooks>  
     <book title="Silicon Valley Gastronomic Treats" author="Innes del Castill"/>  
   </cookbooks>  
</books>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheExpirationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheExpirationPolicy As DataSourceCacheExpiry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::DataSourceCacheExpiry CacheExpirationPolicy { System::Web::UI::DataSourceCacheExpiry get(); void set(System::Web::UI::DataSourceCacheExpiry value); };" />
      <MemberSignature Language="F#" Value="member this.CacheExpirationPolicy : System.Web.UI.DataSourceCacheExpiry with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceCacheExpiry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает политику истечения срока действия кэша, которая в сочетании со сроком кэширования описывает порядок кэширования в кэше, используемом элементом управления источником данных.</summary>
        <value>Одно из значений <see cref="T:System.Web.UI.DataSourceCacheExpiry" />. Значением параметра политики истечения срока кэширования по умолчанию является <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поведение кэша регулируется сочетанием <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> параметров и. <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> Если параметр <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> <xref:System.Web.UI.WebControls.XmlDataSource> имеет значение, то кэширует данные при первой операции извлечения данных, сохраняет их в памяти в течение времени, заданного параметром <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>, и делает его недействительным по истечении времени. <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> Затем кэш обновляется при следующей операции. Если параметр <xref:System.Web.UI.DataSourceCacheExpiry.Sliding>имеет значение, то элемент управления источника данных кэширует данные при первой операции получения данных, но сбрасывает временное окно, в котором хранится кэш для каждой последующей операции. <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> Срок действия кэша истекает только в том случае, если нет активности за время, равное значению, <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> с момента последнего получения данных.  
  
   
  
## Examples  
 В следующем примере кода показано, как включить кэширование при использовании <xref:System.Web.UI.WebControls.XmlDataSource> элемента управления для отображения данных, содержащихся в XML-файле. Кэширование включается, <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> если свойство имеет `true` значение, а <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> значение равно количеству секунд, в течение которых данные кэшируются элементом управления источника данных.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_16/CS/xmlds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_16/VB/xmlds16vb.aspx#1)]  
  
 XML-файл в примере кода содержит следующие данные:  
  
```  
<books>  
   <computerbooks>  
     <book title="Secrets of Silicon Valley" author="Sheryl Hunter"/>  
     <book title="Straight Talk About Computers" author="Dean Straight"/>  
     <book title="You Can Combat Computer Stress!" author="Marjorie Green"/>                  
   </computerbooks>  
   <cookbooks>  
     <book title="Silicon Valley Gastronomic Treats" author="Innes del Castill"/>  
   </cookbooks>  
</books>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheKeyContext">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyContext" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyContext As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyContext { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheKeyContext : string with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.CacheKeyContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение ключа кэша для элемента управления источником данных из состояния просмотра или добавляет ключ кэша в состояние просмотра.</summary>
        <value>Значение ключа кэша или пустая строка, если ключ кэша отсутствует в состоянии просмотра.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство позволяет вручную создать ключ кэша <xref:System.Web.UI.WebControls.XmlDataSource> для элемента управления. <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyContext%2A> Это необходимо только при назначении объекта, содержащего данные XML или XSLT, в элемент управления вместо указания файла, содержащего данные. При назначении данных элементу управления данные не используются для создания ключа кэша. Вместо этого необходимо вручную создать уникальный ключ кэша, если планируется обновить объект данных.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheKeyDependency">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheKeyDependency : string with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает определенную пользователем зависимость ключа, связанную со всеми объектами кэша данных, созданными элементом управления источником данных. Срок действия всех объектов кэша истекает явным образом при истечении срока действия ключа.</summary>
        <value>Ключ, по которому идентифицируются все объекты кэша, созданные элементом управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.XmlDataSource> Элемент управления поддерживает кэширование данных. При кэшировании данных <xref:System.Web.UI.WebControls.XmlDataSource> извлекает данные из кэша, а не из базового файла данных. По истечении срока действия кэша он получает данные из базового файла и повторно кэширует их.  
  
 Можно задать <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A> свойство, чтобы создать зависимость между всеми записями кэша, созданными <xref:System.Web.UI.WebControls.XmlDataSource> элементом управления и ключом. Вы можете программно сделать недействительными все записи кэша в любое время, истечения срока действия ключа.  
  
 Из-за свойств <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A>, используемых для создания, возможно, что несколько <xref:System.Web.UI.WebControls.XmlDataSource> элементов управления могут использовать один и тот же кэш в сценариях, где они загружают одни и те же данные из одного и того же <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> файла XML и файла преобразования и имеют одинаковые и <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>задайте значение.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual string Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Data" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Data As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Data { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Data : string with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.ComponentModel.MultilineStringConverter,System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.ComponentModel.MultilineStringConverter,System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает блок данных XML, к которому выполняется привязка элемента управления источником данных.</summary>
        <value>Строка встроенных данных XML, к которым привязывает элемент управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" />. Значение по умолчанию — <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В декларативных сценариях <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> свойство указывается как многострочное внутреннее свойство <xref:System.Web.UI.WebControls.XmlDataSource> объекта. Внутреннее свойство совместимо с XML-данными, так как оно позволяет форматировать XML-данные любым способом и игнорировать проблемы заполнения символов, такие как символы кавычек заполнения.  
  
 Если заданы <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> свойства<xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> и и, свойство имеет приоритет, а данные в XML-файле используются вместо XML-данных, указанных в <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> свойстве.  
  
 При изменении значения <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> свойства <xref:System.Web.UI.IDataSource.DataSourceChanged> возникает событие. Если кэширование включено и вы изменяете значение <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>, кэш становится недействительным.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.XmlDataSource> элемент управления для отображения встроенных XML-данных, содержащихся <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> в свойстве, с <xref:System.Web.UI.WebControls.TreeView> элементом управления.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_10/CS/xmlds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_10/VB/xmlds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Выполняется загрузка документа.</exception>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
      </Docs>
    </Member>
    <Member MemberName="DataFile">
      <MemberSignature Language="C#" Value="public virtual string DataFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFile : string with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.DataFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.XmlDataFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.XmlDataFileEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Задает имя XML-файла, к которому привязывается источник данных.</summary>
        <value>Абсолютный физический или относительный путь к XML-файлу, содержащему данные, представленные элементом управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" />. Значение по умолчанию — <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если заданы <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> свойства<xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> и и, свойство имеет приоритет, а данные в XML-файле используются вместо XML-данных, указанных в <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> свойстве.  
  
 При изменении значения <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> свойства <xref:System.Web.UI.IDataSource.DataSourceChanged> возникает событие. Если кэширование включено и вы изменяете значение <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>, кэш становится недействительным.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.XmlDataSource> элемент управления для отображения XML-данных, содержащихся в файле, <xref:System.Web.UI.WebControls.TreeView> с элементом управления.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_1/CS/xmlds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_1/VB/xmlds1vb.aspx#1)]  
  
 XML-файл в примере кода содержит следующие данные:  
  
```  
<books>  
   <computerbooks>  
     <book title="Secrets of Silicon Valley" author="Sheryl Hunter"/>  
     <book title="Straight Talk About Computers" author="Dean Straight"/>  
     <book title="You Can Combat Computer Stress!" author="Marjorie Green"/>                  
   </computerbooks>  
   <cookbooks>  
     <book title="Silicon Valley Gastronomic Treats" author="Innes del Castill"/>  
   </cookbooks>  
</books>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Выполняется загрузка документа.</exception>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.Data" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public virtual bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCaching : bool with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.EnableCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение позволяющее определить, включено ли кэширование для элемента управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" />.</summary>
        <value>Значение <see langword="true" />, если кэширование данных для элемента управления источником данных включено; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Элемент управления автоматически кэширует данные, <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> если свойство имеет значение `true`. <xref:System.Web.UI.WebControls.XmlDataSource> По умолчанию <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> свойство имеет значение 0, которое указывает на неопределенный кэш, и источник данных кэширует данные до тех пор, пока не будет изменен XML-файл, от которого он зависит. Если задать <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> для свойства значение больше 0, то в кэше будут храниться данные за это количество секунд, прежде чем будет получен новый набор.  
  
 Если свойство имеет `true` значение и <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> задано свойство, записи кэша не становятся автоматически недействительными при изменении параметров в списке аргументов Transforms. <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> В этом случае необходимо написать код, чтобы сделать кэш недействительным, задав <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано, как включить кэширование при использовании <xref:System.Web.UI.WebControls.XmlDataSource> элемента управления для отображения данных, содержащихся в XML-файле. Кэширование включается, <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> если свойство имеет `true` значение, а <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> значение равно количеству секунд, в течение которых данные кэшируются элементом управления источника данных.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_16/CS/xmlds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_16/VB/xmlds16vb.aspx#1)]  
  
 XML-файл в примере кода содержит следующие данные:  
  
```  
<books>  
   <computerbooks>  
     <book title="Secrets of Silicon Valley" author="Sheryl Hunter"/>  
     <book title="Straight Talk About Computers" author="Dean Straight"/>  
     <book title="You Can Combat Computer Stress!" author="Marjorie Green"/>                  
   </computerbooks>  
   <cookbooks>  
     <book title="Silicon Valley Gastronomic Treats" author="Innes del Castill"/>  
   </cookbooks>  
</books>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy" />
      </Docs>
    </Member>
    <Member MemberName="GetHierarchicalView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HierarchicalDataSourceView GetHierarchicalView (string viewPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.HierarchicalDataSourceView GetHierarchicalView(string viewPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetHierarchicalView (viewPath As String) As HierarchicalDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::HierarchicalDataSourceView ^ GetHierarchicalView(System::String ^ viewPath);" />
      <MemberSignature Language="F#" Value="override this.GetHierarchicalView : string -&gt; System.Web.UI.HierarchicalDataSourceView" Usage="xmlDataSource.GetHierarchicalView viewPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HierarchicalDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewPath">Выражение XPath, указывающее узел, на основе которого строится текущее иерархическое представление.</param>
        <summary>Получает объект представления источника данных для элемента управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" />. Значением параметра <paramref name="viewPath" /> может быть выражение XPath.</summary>
        <returns>Возвращает объект <see cref="T:System.Web.UI.WebControls.XmlHierarchicalDataSourceView" />, представляющий единственное представление данных, начиная с узла данных, заданного параметром <paramref name="viewPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A> Метод можно вызвать для <xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView> получения объекта, связанного с <xref:System.Web.UI.WebControls.XmlDataSource> элементом управления. Если указать `viewPath` значение <xref:System.Web.UI.WebControls.XmlDataSource> , элемент управления возвращает объект представления источника данных, представляющий представление на узле, определенном с помощью `viewPath`, вместе со всеми его дочерними узлами. Если задано `viewPath` значение <xref:System.String.Empty?displayProperty=nameWithType> <xref:System.Web.UI.WebControls.XmlDataSource>,элемент управления проверяет свойство,чтобыопределитькорневойузел,изкоторогобудетпостроенопредставлениеисточникаданных.<xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> Если свойство задано <xref:System.Web.UI.WebControls.XmlDataSource> , элемент управления использует его для возвращения представления источника данных точно так же, как `viewPath` используется выражение. <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> Если свойство не задано <xref:System.Web.UI.WebControls.XmlDataSource> , элемент управления возвращает представление всех узлов данных в XML-данных. <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXmlDocument">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDocument GetXmlDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlDocument GetXmlDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument" />
      <MemberSignature Language="VB.NET" Value="Public Function GetXmlDocument () As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlDocument ^ GetXmlDocument();" />
      <MemberSignature Language="F#" Value="member this.GetXmlDocument : unit -&gt; System.Xml.XmlDocument" Usage="xmlDataSource.GetXmlDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Загружает данные XML в память (непосредственно, из базового хранилища данных или из кэша) и возвращает их в форме объекта <see cref="T:System.Xml.XmlDataDocument" />.</summary>
        <returns>Объект <see cref="T:System.Xml.XmlDataDocument" />, представляющий данные XML, заданные в свойстве <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> или файле, указанном в свойстве <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />, с применением всех преобразований и запросов <see cref="P:System.Web.UI.WebControls.XmlDataSource.XPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> Используйте метод для прямого доступа к представлению базовых данных XML в памяти.  
  
 Можно управлять возвращаемым <xref:System.Xml.XmlDataDocument> объектом, а затем вызывать <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> для сохранения изменений в <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> XML-файле, указанном свойством. Чтобы объект можно было успешно сохранить, <xref:System.Xml.XmlDataDocument> необходимо выполнить несколько требований. Дополнительные сведения см. в описании метода <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере показано, как использовать <xref:System.Web.UI.WebControls.XmlDataSource> элемент управления <xref:System.Web.UI.WebControls.TreeView> с элементом управления для отображения и редактирования XML-данных, содержащихся в XML-файле. Во втором примере демонстрируется использование <xref:System.Web.UI.WebControls.XmlDataSource> элемента управления с <xref:System.Web.UI.WebControls.Repeater> шаблонным элементом управления для отображения и редактирования XML-данных, содержащихся в XML-файле.  
  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.XmlDataSource> элемент управления <xref:System.Web.UI.WebControls.TreeView> с элементом управления для отображения и редактирования XML-данных, содержащихся в XML-файле. Данные обрабатываются в памяти с помощью <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> метода при каждом <xref:System.Web.UI.WebControls.TreeView> выборе узла, а затем сохраняются в XML-файле. Наконец, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> вызывается <xref:System.Web.UI.WebControls.TreeView> для элемента управления, чтобы обновить отображаемые данные.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_17/CS/xmlds17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_17/VB/xmlds17vb.aspx#1)]  
  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.XmlDataSource> элемент управления с <xref:System.Web.UI.WebControls.Repeater> шаблонным элементом управления для отображения и редактирования XML-данных, содержащихся в XML-файле. Как и в предыдущем примере, данные обрабатываются в памяти с помощью <xref:System.Xml.XmlDataDocument> <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> метода, полученного методом. Наконец, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> вызывается <xref:System.Web.UI.WebControls.TreeView> для элемента управления, чтобы обновить отображаемые данные.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_18/CS/xmlds18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_18/VB/xmlds18vb.aspx#1)]  
  
 XML-файл в примерах кода содержит следующие данные:  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
 <bookstore xmlns:bk="urn:samples">  
   <book genre="novel" publicationdate="1999" bk:ISBN="0000000000">  
     <title>Secrets of Silicon Valley</title>  
     <author>  
       <first-name>Sheryl</first-name>  
       <last-name>Hunter</last-name>  
     </author>  
     <price>24.95</price>"   
     </book>  
   <book genre="novel" publicationdate="1985" bk:ISBN="1111111111">  
     <title>Straight Talk About Computers</title>  
     <author>  
       <first-name>Dean</first-name>  
       <last-name>Straight</last-name>  
     </author>  
     <price>29.95</price>  
   </book>  
</bookstore>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">URL-адрес для свойства <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> задан, однако у элемента управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> отсутствуют надлежащие разрешения для веб-ресурса.</exception>
        <exception cref="T:System.NotSupportedException">URL-адрес для свойства <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> задан, однако он не соответствует протоколу HTTP.  
  
- или - 
Относительный путь времени разработки не правильно сопоставлен конструктором перед использованием элемента управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" />.  
  
- или - 
Разрешено как кэширование, так и олицетворение клиента. Элемент управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> не поддерживает кэширование при разрешенном олицетворении клиента.</exception>
        <exception cref="T:System.Web.HttpException">Доступ по пути, заданному для свойства <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />, запрещен.</exception>
        <altmember cref="M:System.Web.UI.WebControls.XmlDataSource.Save" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />
      </Docs>
    </Member>
    <Member MemberName="OnTransforming">
      <MemberSignature Language="C#" Value="protected virtual void OnTransforming (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTransforming(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTransforming (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTransforming(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTransforming : EventArgs -&gt; unit&#xA;override this.OnTransforming : EventArgs -&gt; unit" Usage="xmlDataSource.OnTransforming e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.XmlDataSource.Transforming" /> перед тем, как элемент управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> выполняет XSLT-преобразование данных XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Web.UI.WebControls.XmlDataSource.OnTransforming%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.XmlDataSource> элемент управления <xref:System.Web.UI.WebControls.TreeView> с элементом управления для отображения преобразованных XML-данных. Преобразование XML выполняется с помощью таблицы стилей, указанной <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> свойством. Кроме того, таблица стилей использует аргументы преобразования, которые передаются в элемент управления источника данных <xref:System.Xml.Xsl.XsltArgumentList> в объекте во время выполнения. В примере кода показано, как передать <xref:System.Xml.Xsl.XsltArgumentList> объект в элемент управления источника данных, <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> обрабатывая событие с помощью пользовательского обработчика событий, который определяется по имени набора методов для <xref:System.Web.UI.WebControls.XmlDataSource.OnTransforming%2A> метода.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_9/CS/xmlds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_9/VB/xmlds9vb.aspx#1)]  
  
 XML-файл в примере кода содержит следующие данные:  
  
```  
<bookstore>  
   <genre name="fiction">  
     <book ISBN="0000000000">  
       <title>Secrets of Silicon Valley</title>  
       <price>12.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />             
         <chapter num="2" name="Body" />            
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
   <genre name="novel">  
     <book genre="novel" ISBN="1111111111">  
       <title>Straight Talk About Computers</title>  
       <price>24.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />   
         <chapter num="2" name="Body" />  
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
</bookstore>  
```  
  
 Преобразование XML выполняется с помощью следующей таблицы стилей.  
  
```  
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  
 <xsl:param name="purchdate"/>  
 <xsl:template match="bookstore">  
   <bookstore>  
     <xsl:apply-templates select="genre"/>  
   </bookstore>  
 </xsl:template>  
 <xsl:template match="genre">  
   <genre>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates select="book"/>  
   </genre>  
 </xsl:template>  
 <xsl:template match="book">  
   <book>  
     <xsl:attribute name="ISBN">  
       <xsl:value-of select="@ISBN"/>  
     </xsl:attribute>  
     <xsl:attribute name="title">  
       <xsl:value-of select="title"/>  
       Price: <xsl:value-of select="price"/>  
           15% discount if purchased by: <xsl:value-of select="$purchdate"/>        
     </xsl:attribute>  
     <xsl:apply-templates select="chapters/chapter" />  
   </book>  
 </xsl:template>  
 <xsl:template match="chapter">  
   <chapter>  
     <xsl:attribute name="num">  
       <xsl:value-of select="@num"/>  
     </xsl:attribute>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates/>  
   </chapter>  
 </xsl:template>  
</xsl:stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении <see cref="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)" /> в производном классе обязательно <see cref="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)" /> вызовите метод базового класса, чтобы зарегистрированные делегаты получили событие.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.XmlDataSource.Transforming" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.Save" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save();" />
      <MemberSignature Language="F#" Value="member this.Save : unit -&gt; unit" Usage="xmlDataSource.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сохраняет на диске данные XML, хранимые в настоящий момент в памяти элементом управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" />, если задано свойство <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Хотя элемент управления обычно используется в сценариях привязки данных, предназначенных только для чтения, можно <xref:System.Web.UI.WebControls.XmlDataSource> использовать элемент управления для редактирования XML-данных в базовом файле данных XML. <xref:System.Web.UI.WebControls.XmlDataSource> В этих сценариях XML-данные загружаются <xref:System.Web.UI.WebControls.XmlDataSource> элементом управления из XML-файла. Вы изменяете <xref:System.Xml.XmlDataDocument> в памяти <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> с помощью метода, а затем сохраняете <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> данные в XML-файл, вызывая метод. Этот XML-сценарий можно редактировать, если выполняются следующие условия.  
  
-   XML-данные загружаются из XML-файла, указанного <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> свойством, а не из встроенных XML-данных <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> , указанных в свойстве.  
  
-   В <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> свойствах или <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> не указано преобразование XSLT.  
  
 <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> Метод не обрабатывает параллельные операции сохранения различными запросами. Если редактирование XML-файла осуществляется с помощью <xref:System.Web.UI.WebControls.XmlDataSource> элемента управления несколькими пользователями, нет никакой гарантии, что все пользователи работают с одними и теми же данными. Также возможно, <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> что операция завершится сбоем из-за таких же проблем параллелизма.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как использовать <xref:System.Web.UI.WebControls.XmlDataSource> элемент управления <xref:System.Web.UI.WebControls.TreeView> с элементом управления для отображения и редактирования XML-данных, содержащихся в XML-файле. Во втором примере кода демонстрируется использование <xref:System.Web.UI.WebControls.XmlDataSource> элемента управления с <xref:System.Web.UI.WebControls.Repeater> шаблонным элементом управления для отображения и редактирования XML-данных, содержащихся в XML-файле.  
  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.XmlDataSource> элемент управления <xref:System.Web.UI.WebControls.TreeView> с элементом управления для отображения и редактирования XML-данных, содержащихся в XML-файле. Данные обрабатываются в памяти с помощью <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> метода при каждом <xref:System.Web.UI.WebControls.TreeView> выборе узла, а затем сохраняются в XML-файле. Наконец, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> вызывается <xref:System.Web.UI.WebControls.TreeView> для элемента управления, чтобы обновить отображаемые данные.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_17/CS/xmlds17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_17/VB/xmlds17vb.aspx#1)]  
  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.XmlDataSource> элемент управления с <xref:System.Web.UI.WebControls.Repeater> шаблонным элементом управления для отображения и редактирования XML-данных, содержащихся в XML-файле. Как и в предыдущем примере, данные в памяти обрабатываются с помощью <xref:System.Xml.XmlDataDocument> объекта, полученного <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> методом. Наконец, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> вызывается <xref:System.Web.UI.WebControls.TreeView> для элемента управления, чтобы обновить отображаемые данные.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_18/CS/xmlds18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_18/VB/xmlds18vb.aspx#1)]  
  
 XML-файл в примерах кода содержит следующие данные:  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
 <bookstore xmlns:bk="urn:samples">  
   <book genre="novel" publicationdate="1999" bk:ISBN="0000000000">  
     <title>Secrets of Silicon Valley</title>  
     <author>  
       <first-name>Sheryl</first-name>  
       <last-name>Hunter</last-name>  
     </author>  
     <price>24.95</price>"   
     </book>  
   <book genre="novel" publicationdate="1985" bk:ISBN="1111111111">  
     <title>Straight Talk About Computers</title>  
     <author>  
       <first-name>Dean</first-name>  
       <last-name>Straight</last-name>  
     </author>  
     <price>29.95</price>  
   </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Данные XML были загружены не с помощью свойства <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" />, а с помощью свойства <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />.  
  
- или - 
URL-адрес для свойства <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> задан, однако у элемента управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> отсутствуют надлежащие разрешения для веб-ресурса.</exception>
        <exception cref="T:System.NotSupportedException">URL-адрес для свойства <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> задан, однако он не соответствует протоколу HTTP.  
  
- или - 
Относительный путь времени разработки не правильно сопоставлен конструктором перед использованием элемента управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" />.</exception>
        <exception cref="T:System.Web.HttpException">Доступ по пути, заданному для свойства <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />, запрещен.</exception>
        <altmember cref="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::IListSource::ContainsListCollection { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IListSource.ContainsListCollection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</summary>
        <value>Значение <see langword="true" />, если коллекция является коллекцией объектов <see cref="T:System.Collections.IList" />; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Его можно использовать только при <xref:System.Web.UI.WebControls.XmlDataSource> приведении экземпляра <xref:System.ComponentModel.IListSource> к интерфейсу.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IListSource" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IListSource.GetList</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IListSource.GetList" />.</summary>
        <returns>Объект, реализующий интерфейс <see cref="T:System.Collections.IList" />, который можно привязать к источнику данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Его можно использовать только при <xref:System.Web.UI.WebControls.XmlDataSource> приведении экземпляра <xref:System.ComponentModel.IListSource> к интерфейсу.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IListSource" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.DataSourceChanged">
      <MemberSignature Language="C#" Value="event EventHandler System.Web.UI.IDataSource.DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler System.Web.UI.IDataSource.DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event DataSourceChanged As EventHandler Implements System.Web.UI.IDataSource" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.IDataSource.DataSourceChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="E:System.Web.UI.IDataSource.DataSourceChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Его можно использовать только при <xref:System.Web.UI.WebControls.XmlDataSource> приведении экземпляра <xref:System.Web.UI.IDataSource> к интерфейсу.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataSource" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.GetView">
      <MemberSignature Language="C#" Value="System.Web.UI.DataSourceView IDataSource.GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.DataSourceView System.Web.UI.IDataSource.GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetView (viewName As String) As DataSourceView Implements IDataSource.GetView" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::DataSourceView ^ System.Web.UI.IDataSource.GetView(System::String ^ viewName) = System::Web::UI::IDataSource::GetView;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetView(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Имя извлекаемого представления. Если задано значение <see cref="F:System.String.Empty" />, для элемента управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> извлекается представление по умолчанию.</param>
        <summary>Возвращает названное представление источника данных, связанное с элементом управления источника данных.</summary>
        <returns>Возвращает именованный объект <see cref="T:System.Web.UI.WebControls.XmlDataSourceView" />, связанный с элементом управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.GetViewNames">
      <MemberSignature Language="C#" Value="System.Collections.ICollection IDataSource.GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.ICollection System.Web.UI.IDataSource.GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Function GetViewNames () As ICollection Implements IDataSource.GetViewNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::ICollection ^ System.Web.UI.IDataSource.GetViewNames() = System::Web::UI::IDataSource::GetViewNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetViewNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="M:System.Web.UI.IDataSource.GetViewNames" />.</summary>
        <returns>Объект, реализующий интерфейс <see cref="T:System.Collections.ICollection" /> и содержащий имена, представляющие список объектов представления, связанных с объектом <see cref="T:System.Web.UI.IDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Его можно использовать только при <xref:System.Web.UI.WebControls.XmlDataSource> приведении экземпляра <xref:System.Web.UI.IDataSource> к интерфейсу.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataSource" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public virtual string Transform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Transform" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.Transform" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Transform As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Transform { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transform : string with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.Transform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.ComponentModel.MultilineStringConverter,System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.ComponentModel.MultilineStringConverter,System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает блок данных XSL, который определяет преобразование XSLT для данных XML, управление которыми осуществляется с помощью элемента управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" />.</summary>
        <value>Строка встроенных данных XSL, которая определяет преобразование XML для данных, содержащихся в свойствах <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> или <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />. Значение по умолчанию — <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В декларативных сценариях <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> свойство указывается как многострочное внутреннее свойство <xref:System.Web.UI.WebControls.XmlDataSource> объекта. Внутреннее свойство совместимо с данными таблицы стилей XSL, так как оно позволяет форматировать таблицу стилей любым способом и игнорировать проблемы заполнения символов, такие как символы кавычек заполнения.  
  
 Если заданы <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> свойства<xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> и и, свойство имеет приоритет, а данные в файле таблицы стилей XSL (XSL) используются вместо элементов таблицы стилей, указанных в <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> свойстве. Если выражение XPath задано с помощью <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> свойства, оно применяется после преобразования XML-данных.  
  
 При изменении значения <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> свойства <xref:System.Web.UI.IDataSource.DataSourceChanged> возникает событие. Если кэширование включено и вы изменяете значение <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>, кэш становится недействительным.  
  
> [!NOTE]
>  Класс использует устаревший класс для выполнения преобразований XSL. <xref:System.Xml.Xsl.XslTransform> <xref:System.Web.UI.WebControls.XmlDataSource> Если вы хотите использовать функции таблицы стилей, появившиеся после того, <xref:System.Xml.Xsl.XslTransform> как класс был признан нерекомендуемым, примените преобразования вручную <xref:System.Xml.Xsl.XslCompiledTransform> с помощью класса.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.XmlDataSource> элемент управления с <xref:System.Web.UI.WebControls.Repeater> шаблонным элементом управления для отображения преобразованных XML-данных. Таблица стилей, выполняющая преобразование, определяется встроенным <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> свойством элемента управления источника данных.  
  
  
  
 XML-файл в примере кода содержит следующие данные:  
  
```  
<?xml version="1.0" encoding="iso-8859-1"?>  
 <orders>  
   <order>  
     <customer id="12345" />  
     <customername>  
         <firstn>Todd</firstn>  
         <lastn>Rowe</lastn>  
     </customername>  
     <transaction id="12345" />  
     <shipaddress>  
         <address1>1234 Tenth Avenue</address1>  
         <city>Bellevue</city>  
         <state>Washington</state>  
         <zip>98001</zip>  
     </shipaddress>  
     <summary>  
         <item dept="tools">screwdriver</item>  
         <item dept="tools">hammer</item>  
         <item dept="plumbing">fixture</item>  
     </summary>  
   </order>  
</orders>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Выполняется загрузка документа.</exception>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
      </Docs>
    </Member>
    <Member MemberName="TransformArgumentList">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Xsl.XsltArgumentList TransformArgumentList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Xsl.XsltArgumentList TransformArgumentList" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TransformArgumentList As XsltArgumentList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Xsl::XsltArgumentList ^ TransformArgumentList { System::Xml::Xsl::XsltArgumentList ^ get(); void set(System::Xml::Xsl::XsltArgumentList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TransformArgumentList : System.Xml.Xsl.XsltArgumentList with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.TransformArgumentList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.XsltArgumentList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Предоставляет список аргументов XSLT, используемых совместно с таблицей стилей, определенной свойствами <see cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" /> или <see cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" />, для выполнения преобразования данных XML.</summary>
        <value>Объект<see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий параметры и объекты XSLT, применяемые к данным XML при загрузке этих данные элементом управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" />. Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Задайте свойство при возникновении события, чтобы обеспечить доступность параметров XSLT во время применения преобразования XSLT к XML-данным. <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A>  
  
 Если свойство имеет `true` значение и <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> задано свойство, записи кэша не становятся автоматически недействительными при изменении параметров в списке аргументов Transforms. <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> В этом случае необходимо написать код, чтобы сделать кэш недействительным, задав <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.XmlDataSource> <xref:System.Web.UI.WebControls.TreeView> с элементом управления для отображения преобразованных XML-данных. Преобразование XML выполняется с помощью таблицы стилей, указанной <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> свойством. Кроме того, таблица стилей использует аргументы преобразования, которые передаются в элемент управления источника данных <xref:System.Xml.Xsl.XsltArgumentList> в объекте во время выполнения. В примере кода показано, как передать объект <xref:System.Xml.Xsl.XsltArgumentList> в элемент управления источника данных, <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> обрабатывая событие с помощью пользовательского обработчика событий.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_9/CS/xmlds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_9/VB/xmlds9vb.aspx#1)]  
  
 XML-файл в примере кода содержит следующие данные:  
  
```  
<bookstore>  
   <genre name="fiction">  
     <book ISBN="0000000000">  
       <title>Secrets of Silicon Valley</title>  
       <price>12.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />             
         <chapter num="2" name="Body" />            
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
   <genre name="novel">  
     <book genre="novel" ISBN="1111111111">  
       <title>Straight Talk About Computers</title>  
       <price>24.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />   
         <chapter num="2" name="Body" />  
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
</bookstore>  
```  
  
 Преобразование XML-данных выполняется со следующей таблицей стилей.  
  
```  
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  
 <xsl:param name="purchdate"/>  
 <xsl:template match="bookstore">  
   <bookstore>  
     <xsl:apply-templates select="genre"/>  
   </bookstore>  
 </xsl:template>  
 <xsl:template match="genre">  
   <genre>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates select="book"/>  
   </genre>  
 </xsl:template>  
 <xsl:template match="book">  
   <book>  
     <xsl:attribute name="ISBN">  
       <xsl:value-of select="@ISBN"/>  
     </xsl:attribute>  
     <xsl:attribute name="title">  
       <xsl:value-of select="title"/>  
       Price: <xsl:value-of select="price"/>  
           15% discount if purchased by: <xsl:value-of select="$purchdate"/>        
     </xsl:attribute>  
     <xsl:apply-templates select="chapters/chapter" />  
   </book>  
 </xsl:template>  
 <xsl:template match="chapter">  
   <chapter>  
     <xsl:attribute name="num">  
       <xsl:value-of select="@num"/>  
     </xsl:attribute>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates/>  
   </chapter>  
 </xsl:template>  
</xsl:stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.XmlDataSource.Transforming" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" />
      </Docs>
    </Member>
    <Member MemberName="TransformFile">
      <MemberSignature Language="C#" Value="public virtual string TransformFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransformFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TransformFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TransformFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TransformFile : string with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.TransformFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.XslTransformFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.XslTransformFileEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Задает имя XSL-файла (.xsl), который определяет преобразование XSLT для данных XML, управление которыми осуществляется с помощью элемента управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" />.</summary>
        <value>Абсолютный физический или относительный путь к файлу таблицы стилей XSL, определяющему преобразование XML, выполняемое с данными, содержащимися в свойствах <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> или <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />. Значение по умолчанию — <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если заданы <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> свойства<xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> и и, свойство имеет приоритет, а данные в файле таблицы стилей XSL (XSL) используются вместо элементов таблицы стилей, указанных в <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> свойстве. Если выражение XPath задано с помощью <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> свойства, оно применяется после преобразования XML-данных.  
  
 При изменении значения <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> свойства <xref:System.Web.UI.IDataSource.DataSourceChanged> возникает событие. Если кэширование включено и вы изменяете значение <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>, кэш становится недействительным.  
  
> [!NOTE]
>  Класс использует устаревший класс для выполнения преобразований XSL. <xref:System.Xml.Xsl.XslTransform> <xref:System.Web.UI.WebControls.XmlDataSource> Если вы хотите использовать функции таблицы стилей, появившиеся после того, <xref:System.Xml.Xsl.XslTransform> как класс был признан нерекомендуемым, примените преобразования вручную <xref:System.Xml.Xsl.XslCompiledTransform> с помощью класса.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.XmlDataSource> элемент управления <xref:System.Web.UI.WebControls.TreeView> и элемент управления для отображения преобразованных данных XML в веб-форме. Преобразование выполняется с использованием таблицы стилей, <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> указанной свойством. При необходимости можно указать аргументы преобразования для таблицы стилей с помощью <xref:System.Xml.Xsl.XsltArgumentList>. Дополнительные сведения см. в описании свойства <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_5/CS/xmlds5cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_5/VB/xmlds5vb.aspx#1)]  
  
 XML-файл в примере кода содержит следующие данные:  
  
```  
<bookstore>  
   <genre name="fiction">  
     <book ISBN="0000000000">  
       <title>Secrets of Silicon Valley</title>  
       <price>12.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />             
         <chapter num="2" name="Body" />            
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
   <genre name="novel">  
     <book genre="novel" ISBN="1111111111">  
       <title>Straight Talk About Computers</title>  
       <price>24.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />   
         <chapter num="2" name="Body" />  
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
</bookstore>  
```  
  
 Таблица стилей XSL, которая выполняет преобразование XML, имеет следующую структуру:  
  
```  
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  
 <xsl:template match="bookstore">  
   <bookstore>  
     <xsl:apply-templates select="genre"/>  
   </bookstore>  
 </xsl:template>  
 <xsl:template match="genre">  
   <genre>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates select="book"/>  
   </genre>  
 </xsl:template>  
 <xsl:template match="book">  
   <book>  
     <xsl:attribute name="ISBN">  
       <xsl:value-of select="@ISBN"/>  
     </xsl:attribute>  
     <xsl:attribute name="title">  
       <xsl:value-of select="title"/>  
     </xsl:attribute>  
     <xsl:attribute name="price">  
       <xsl:value-of select="price"/>  
     </xsl:attribute>  
     <xsl:apply-templates select="chapters/chapter" />  
   </book>  
 </xsl:template>  
 <xsl:template match="chapter">  
   <chapter>  
     <xsl:attribute name="num">  
       <xsl:value-of select="@num"/>  
     </xsl:attribute>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates/>  
   </chapter>  
 </xsl:template>  
</xsl:stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Выполняется загрузка документа.</exception>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
      </Docs>
    </Member>
    <Member MemberName="Transforming">
      <MemberSignature Language="C#" Value="public event EventHandler Transforming;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Transforming" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.XmlDataSource.Transforming" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Transforming As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Transforming;" />
      <MemberSignature Language="F#" Value="member this.Transforming : EventHandler " Usage="member this.Transforming : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед тем, как таблица стилей, определенная свойством <see cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" /> или заданная с помощью свойства <see cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" />, применяется к данным XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обработайте <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> <xref:System.Xml.Xsl.XsltArgumentList> <xref:System.Web.UI.WebControls.XmlDataSource> событие, чтобы задать свойство объекту, прежде чем элемент управления выполняет преобразование XML. <xref:System.Web.UI.WebControls.XmlDataSource.Transforming>  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.XmlDataSource> элемент управления <xref:System.Web.UI.WebControls.TreeView> с элементом управления для отображения преобразованных XML-данных. Преобразование XML выполняется с помощью таблицы стилей, указанной <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> свойством. Кроме того, в таблице стилей используются аргументы преобразования, которые передаются в элемент управления <xref:System.Xml.Xsl.XsltArgumentList> источника данных во время выполнения. В примере кода показано, как передать <xref:System.Xml.Xsl.XsltArgumentList> объект в элемент управления источника данных, <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> обрабатывая событие с помощью пользовательского обработчика событий.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_9/CS/xmlds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_9/VB/xmlds9vb.aspx#1)]  
  
 XML-файл в примере кода содержит следующие данные:  
  
```  
<bookstore>  
   <genre name="fiction">  
     <book ISBN="0000000000">  
       <title>Secrets of Silicon Valley</title>  
       <price>12.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />             
         <chapter num="2" name="Body" />            
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
   <genre name="novel">  
     <book genre="novel" ISBN="1111111111">  
       <title>Straight Talk About Computers</title>  
       <price>24.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />   
         <chapter num="2" name="Body" />  
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
</bookstore>  
```  
  
 Преобразование XML-данных выполняется со следующей таблицей стилей:  
  
```  
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  
 <xsl:param name="purchdate"/>  
 <xsl:template match="bookstore">  
   <bookstore>  
     <xsl:apply-templates select="genre"/>  
   </bookstore>  
 </xsl:template>  
 <xsl:template match="genre">  
   <genre>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates select="book"/>  
   </genre>  
 </xsl:template>  
 <xsl:template match="book">  
   <book>  
     <xsl:attribute name="ISBN">  
       <xsl:value-of select="@ISBN"/>  
     </xsl:attribute>  
     <xsl:attribute name="title">  
       <xsl:value-of select="title"/>  
       Price: <xsl:value-of select="price"/>  
           15% discount if purchased by: <xsl:value-of select="$purchdate"/>        
     </xsl:attribute>  
     <xsl:apply-templates select="chapters/chapter" />  
   </book>  
 </xsl:template>  
 <xsl:template match="chapter">  
   <chapter>  
     <xsl:attribute name="num">  
       <xsl:value-of select="@num"/>  
     </xsl:attribute>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates/>  
   </chapter>  
 </xsl:template>  
</xsl:stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="public virtual string XPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.XPath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property XPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XPath : string with get, set" Usage="System.Web.UI.WebControls.XmlDataSource.XPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Задает выражение XPath, которое нужно применить к данным XML, содержащимся в свойстве <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> или в XML-файле, заданном свойством <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />.</summary>
        <value>Строка, представляющая выражение XPath, которое можно использовать для фильтрации данных, содержащихся в свойстве <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> или в XML-файле, заданном свойством <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />. Значение по умолчанию — <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения о выражениях привязки данных XPath см. в разделе [Привязка табличного элемента управления к элементу управления XmlDataSource](https://msdn.microsoft.com/library/d6bf202f-6454-45fd-9424-e17f6c7eafe8).  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.XmlDataSource> элемент управления с <xref:System.Web.UI.WebControls.Repeater> шаблонным элементом управления для отображения данных XML, которые были отфильтрованы с помощью выражения XPath. В этом примере синтаксис XPath используется для фильтрации XML-данных, когда <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> свойство элемента управления источниками данных задано, а также привязывает элементы <xref:System.Web.UI.WebControls.Repeater> шаблона элемента управления к XML-данным.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_8/CS/xmlds8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_8/VB/xmlds8vb.aspx#1)]  
  
 XML-файл в примере кода содержит следующие данные:  
  
```  
<bookstore>  
   <genre name="fiction">  
     <book ISBN="0000000000">  
       <title>Secrets of Silicon Valley</title>  
       <price>12.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />             
         <chapter num="2" name="Body" />            
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
   <genre name="novel">  
     <book genre="novel" ISBN="1111111111">  
       <title>Straight Talk About Computers</title>  
       <price>24.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />   
         <chapter num="2" name="Body" />  
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
</bookstore>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Выполняется загрузка документа.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
