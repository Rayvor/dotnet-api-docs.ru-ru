<Type Name="SemanticResultValue" FullName="System.Speech.Recognition.SemanticResultValue">
  <Metadata><Meta Name="ms.openlocfilehash" Value="73739246a3d34b754f871bb66457c788887dd0b4" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70560265" /></Metadata><TypeSignature Language="C#" Value="public class SemanticResultValue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SemanticResultValue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SemanticResultValue" />
  <TypeSignature Language="VB.NET" Value="Public Class SemanticResultValue" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemanticResultValue" />
  <TypeSignature Language="F#" Value="type SemanticResultValue = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{_tag.DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a0e32-101">Представляет семантическое значение и, при необходимости, связывает значение с компонентом грамматики распознавания речи.</span><span class="sxs-lookup"><span data-stu-id="a0e32-101">Represents a semantic value and optionally associates the value with a component of a speech recognition grammar.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0e32-102"><xref:System.Speech.Recognition.SemanticResultKey> <xref:System.Speech.Recognition.GrammarBuilder>  <xref:System.Speech.Recognition.Choices> Использование объектов и в сочетании с и <xref:System.Speech.Recognition.Grammar> является самым простым способом проектирования семантической структуры для. <xref:System.Speech.Recognition.SemanticResultValue></span><span class="sxs-lookup"><span data-stu-id="a0e32-102">Use of <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, in conjunction with <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices>, is the easiest way to design a semantic structure for a <xref:System.Speech.Recognition.Grammar>.</span></span> <span data-ttu-id="a0e32-103">Доступ к семантической информации для фразы осуществляется путем получения экземпляра <xref:System.Speech.Recognition.SemanticValue>с <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> помощью свойства в <xref:System.Speech.Recognition.RecognizedPhrase>.</span><span class="sxs-lookup"><span data-stu-id="a0e32-103">Semantic information for a phrase is accessed by obtaining an instance of <xref:System.Speech.Recognition.SemanticValue>, through the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on <xref:System.Speech.Recognition.RecognizedPhrase>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a0e32-104">Значения, <xref:System.Speech.Recognition.SemanticResultValue> управляемые объектами, <xref:System.Object> определяются экземплярами, передаваемыми их конструкторам.</span><span class="sxs-lookup"><span data-stu-id="a0e32-104">Values managed by <xref:System.Speech.Recognition.SemanticResultValue> objects are defined by <xref:System.Object> instances passed to their constructors.</span></span> <span data-ttu-id="a0e32-105"><xref:System.Object> Базовый тип этого типа должен быть `int` `bool`,, `float`или `string`.</span><span class="sxs-lookup"><span data-stu-id="a0e32-105">The underlying type of this <xref:System.Object> must be `bool`, `int`, `float`, or `string`.</span></span> <span data-ttu-id="a0e32-106">Любой другой тип не позволит построить <xref:System.Speech.Recognition.Grammar> экземпляр <xref:System.Speech.Recognition.SemanticResultValue>с помощью.</span><span class="sxs-lookup"><span data-stu-id="a0e32-106">Any other type will prevent construction of a <xref:System.Speech.Recognition.Grammar> instance with the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
 <span data-ttu-id="a0e32-107">Типичное использование <xref:System.Speech.Recognition.SemanticResultValue> экземпляра связывает экземпляр с распознаваемым компонентом <xref:System.Speech.Recognition.Grammar>, таким как фраза, правило или <xref:System.Speech.Recognition.Choices> объект.</span><span class="sxs-lookup"><span data-stu-id="a0e32-107">The typical use of a <xref:System.Speech.Recognition.SemanticResultValue> instance associates the instance with a recognizable component of a <xref:System.Speech.Recognition.Grammar>, such as a phrase, a rule, or a <xref:System.Speech.Recognition.Choices> object.</span></span> <span data-ttu-id="a0e32-108">Если связанный компонент используется как часть операции распознавания, <xref:System.Speech.Recognition.SemanticResultValue> используется для определения значения в семантике возвращаемой фразы.</span><span class="sxs-lookup"><span data-stu-id="a0e32-108">If the associated component is used as part of a recognition operation, the <xref:System.Speech.Recognition.SemanticResultValue> is used to define a value in the semantics of the returned phrase.</span></span>  
  
 <span data-ttu-id="a0e32-109">Существует два основных метода связывания <xref:System.Speech.Recognition.SemanticResultValue> экземпляра с элементом грамматики в зависимости от конструктора, используемого для <xref:System.Speech.Recognition.SemanticResultValue>создания.</span><span class="sxs-lookup"><span data-stu-id="a0e32-109">There are two basic methods for associating a <xref:System.Speech.Recognition.SemanticResultValue> instance with a grammar element, depending on the constructor used to create the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
-   <span data-ttu-id="a0e32-110">Если для <xref:System.Object> <xref:System.Speech.Recognition.SemanticResultValue> создания объекта используется только значение (заданное экземпляром), то в дополнение к <xref:System.Speech.Recognition.GrammarBuilder> объекту связывается с компонентом грамматики, которому он предшествует. <xref:System.Speech.Recognition.SemanticResultValue></span><span class="sxs-lookup"><span data-stu-id="a0e32-110">If only the value (specified by an instance of <xref:System.Object>) is used to construct a <xref:System.Speech.Recognition.SemanticResultValue> object, the <xref:System.Speech.Recognition.SemanticResultValue> is associated with the grammar component that preceded it, in addition to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
     <span data-ttu-id="a0e32-111">Например, в приведенном ниже фрагменте кода, если <xref:System.Speech.Recognition.Grammar> созданный с помощью <xref:System.Speech.Recognition.GrammarBuilder> этого экземпляра код распознает слово "Background `true` ", значение задается в распознанной семантике фразы.</span><span class="sxs-lookup"><span data-stu-id="a0e32-111">For instance, in the code fragment below, if a <xref:System.Speech.Recognition.Grammar> constructed using this <xref:System.Speech.Recognition.GrammarBuilder> instance recognizes the word "background", a value of `true` is set in the recognized phrase semantics.</span></span>  
  
    ```csharp  
    GrammarBuilder backgroundGB=new GrammarBuilder("background");  
    backgroundGB.Append(new SemanticResultValue(true));  
    ```  
  
     <span data-ttu-id="a0e32-112">Дополнительные сведения см. в описании <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="a0e32-112">For more information, see the description of <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span></span>  
  
-   <span data-ttu-id="a0e32-113">Если используется строковая фраза или <xref:System.Speech.Recognition.GrammarBuilder> конкретный экземпляр, а <xref:System.Object> с <xref:System.Speech.Recognition.SemanticResultValue> параметром, указывающим значение, это значение автоматически <xref:System.Speech.Recognition.GrammarBuilder> связывается со строковым значением фразы или экземпляром.</span><span class="sxs-lookup"><span data-stu-id="a0e32-113">If a string value phrase or specific <xref:System.Speech.Recognition.GrammarBuilder> instance is used, together with a <xref:System.Object> that specifies a <xref:System.Speech.Recognition.SemanticResultValue> value, that value is automatically associated with the string value phrase or the <xref:System.Speech.Recognition.GrammarBuilder> instance.</span></span>  <span data-ttu-id="a0e32-114">Если фраза или <xref:System.Speech.Recognition.GrammarBuilder> объект используется в процессе распознавания, значение будет присвоено семантике распознанной фразы.</span><span class="sxs-lookup"><span data-stu-id="a0e32-114">If the phrase or <xref:System.Speech.Recognition.GrammarBuilder> object is used in the process of recognition, the value will be assigned to the semantics of the recognized phrase.</span></span>  
  
     <span data-ttu-id="a0e32-115">В следующем примере показано это, и функционально эквивалентно предыдущему примеру, в котором использовались явные вызовы функций <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> и <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="a0e32-115">The following example illustrates this, and is functionally equivalent to the preceding example, which used explicit calls to <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> and <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span></span> <span data-ttu-id="a0e32-116">Если в логике распознавания используется слово "Background", значение `true` будет добавлено к распознанной семантике.</span><span class="sxs-lookup"><span data-stu-id="a0e32-116">If the recognition logic uses the word "background", the value `true` will be added to the recognized semantics.</span></span>  
  
    ```csharp  
    fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("background", true));  
    ```  
  
     <span data-ttu-id="a0e32-117">Дополнительные сведения см. в описании <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Object%29> и. <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.String%2CSystem.Object%29></span><span class="sxs-lookup"><span data-stu-id="a0e32-117">For more information, see the description of <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Object%29> and <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.String%2CSystem.Object%29>.</span></span>  
  
 <span data-ttu-id="a0e32-118">Для использования <xref:System.Speech.Recognition.Grammar> в распознавании все <xref:System.Speech.Recognition.SemanticResultValue> экземпляры должны быть <xref:System.Speech.Recognition.SemanticValue> связаны с одним из объектов, <xref:System.Speech.Recognition.Grammar>используемых этим объектом.</span><span class="sxs-lookup"><span data-stu-id="a0e32-118">To be used by a <xref:System.Speech.Recognition.Grammar> in recognition, all <xref:System.Speech.Recognition.SemanticResultValue> instances must be associated with one of the <xref:System.Speech.Recognition.SemanticValue> objects used by that <xref:System.Speech.Recognition.Grammar>.</span></span> <span data-ttu-id="a0e32-119">Для этого необходимо связать семантический ключ с <xref:System.Speech.Recognition.SemanticResultValue>.</span><span class="sxs-lookup"><span data-stu-id="a0e32-119">This is done by associating a semantic key with the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
 <span data-ttu-id="a0e32-120">Семантические ключи можно явно прикрепить <xref:System.Speech.Recognition.SemanticResultValue>к, <xref:System.Speech.Recognition.SemanticResultKey> используя объект.</span><span class="sxs-lookup"><span data-stu-id="a0e32-120">Semantic keys can be explicitly attached to a <xref:System.Speech.Recognition.SemanticResultValue>, using a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  <span data-ttu-id="a0e32-121"><xref:System.Speech.Recognition.SemanticResultValue>экземпляры, которые не были явно присоединены к ключу, присоединяются к корневому <xref:System.Speech.Recognition.SemanticValue>ключу по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a0e32-121"><xref:System.Speech.Recognition.SemanticResultValue> instances not explicitly attached to a key are attached to the root key of the default <xref:System.Speech.Recognition.SemanticValue>.</span></span>  
  
 <span data-ttu-id="a0e32-122">После того <xref:System.Speech.Recognition.SemanticResultValue> <xref:System.Speech.Recognition.SemanticValue.Value%2A>, как объект был использован для задания значения, помеченного как корневой ключ по умолчанию или каким <xref:System.Speech.Recognition.SemanticResultKey>-либо конкретным, это значение не должно изменяться, или во время операций распознавания возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="a0e32-122">After a <xref:System.Speech.Recognition.SemanticResultValue> has been used to set the <xref:System.Speech.Recognition.SemanticValue.Value%2A>, whether it is tagged with the default root key or by any particular <xref:System.Speech.Recognition.SemanticResultKey>, that value must not be modified or an exception will occur during recognition operations.</span></span>  
  
 <span data-ttu-id="a0e32-123">В следующем примере вызывается исключение, так как оно задает, а затем изменяет корневой <xref:System.Speech.Recognition.SemanticValue.Value%2A> элемент. <xref:System.Speech.Recognition.Grammar></span><span class="sxs-lookup"><span data-stu-id="a0e32-123">The following example will cause an exception because it sets and then modifies the root <xref:System.Speech.Recognition.SemanticValue.Value%2A> of a <xref:System.Speech.Recognition.Grammar>.</span></span>  
  
```csharp  
GrammarBuilder gb=new GrammarBuilder();  
gb.Append(new SemanticResultValue("One"));  
gb.Append(new SemanticResultValue("Two"));  
```  
  
 <span data-ttu-id="a0e32-124">С другой стороны, код в следующем примере разрешается.</span><span class="sxs-lookup"><span data-stu-id="a0e32-124">On the other hand, the code in the following example is permitted.</span></span> <span data-ttu-id="a0e32-125">Хотя он определяет несколько экземпляров <xref:System.Speech.Recognition.SemanticResultValue>, они включаются <xref:System.Speech.Recognition.Choices> в объект, и только один из них будет использоваться для задания значения ключа `bgOrfgText`.</span><span class="sxs-lookup"><span data-stu-id="a0e32-125">Although it defines multiple instances of <xref:System.Speech.Recognition.SemanticResultValue>, they are included in a <xref:System.Speech.Recognition.Choices> object, and only one will ever be used to set the value of the key `bgOrfgText`.</span></span>  
  
```csharp  
Choices fgOrbgChoice = new Choices();  
fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("background"));  
fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground"));  
SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgText", fgOrbgChoice);  
```
  
## Examples  
 <span data-ttu-id="a0e32-126">В следующем примере возвращается объект <xref:System.Speech.Recognition.Grammar> , который распознает команду Set/Change/ALTER переднего плана/Background...</span><span class="sxs-lookup"><span data-stu-id="a0e32-126">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="a0e32-127">[список цветов] ".</span><span class="sxs-lookup"><span data-stu-id="a0e32-127">[color list]".</span></span>  <span data-ttu-id="a0e32-128"><xref:System.Speech.Recognition.SemanticResultValue>экземпляры <xref:System.Speech.Recognition.SemanticResultKey> и (в сочетании с <xref:System.Speech.Recognition.Choices> объектами <xref:System.Speech.Recognition.GrammarBuilder> и) используются для определения семантики, которая может быть проанализирована при распознавании.</span><span class="sxs-lookup"><span data-stu-id="a0e32-128"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="a0e32-129">Проанализированная семантика определяет, какой цвет был запрошен, а также будет ли изменен передний план или фон.</span><span class="sxs-lookup"><span data-stu-id="a0e32-129">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(new SemanticResultValue(introGB, String.Format("Command: {0}", introString)));  
  }    
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
        (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
                       cmdIntro,  
                       new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361587(v%3doffice.14)"><span data-ttu-id="a0e32-130">Использование SemanticResultKey для извлечения Семантикресултвалуе</span><span class="sxs-lookup"><span data-stu-id="a0e32-130">Using a SemanticResultKey to Extract a SemanticResultValue</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a0e32-131">Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span><span class="sxs-lookup"><span data-stu-id="a0e32-131">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0e32-132">`int` `bool` `float` `string`Конструкторы поддерживают <xref:System.Object> указание экземпляра с базовым типом данных,, или. `SemanticResultValue`</span><span class="sxs-lookup"><span data-stu-id="a0e32-132">The `SemanticResultValue` constructors support specifying an <xref:System.Object> instance with an underlying data type of `bool`, `int`, `float`, or `string`.</span></span>  
  
 <span data-ttu-id="a0e32-133">Конструктор может создать `SemanticResultValue` экземпляр в одном из двух случаев:</span><span class="sxs-lookup"><span data-stu-id="a0e32-133">A constructor can create a `SemanticResultValue` instance in either of two circumstances:</span></span>  
  
-   <span data-ttu-id="a0e32-134">Экземпляр должен быть явно связан с элементом грамматики при <xref:System.Speech.Recognition.GrammarBuilder> использовании для создания  <xref:System.Speech.Recognition.Grammar> .  `SemanticResultValue`</span><span class="sxs-lookup"><span data-stu-id="a0e32-134">The `SemanticResultValue` instance must be explicitly associated with a grammar element when using a <xref:System.Speech.Recognition.GrammarBuilder> to construct a <xref:System.Speech.Recognition.Grammar>.</span></span>  
  
-   <span data-ttu-id="a0e32-135">Объект уже <xref:System.Speech.Recognition.GrammarBuilder>  связан с фразой строки или объектом. `SemanticResultValue`</span><span class="sxs-lookup"><span data-stu-id="a0e32-135">The `SemanticResultValue` is already associated with a string value phrase or a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultValue : obj -&gt; System.Speech.Recognition.SemanticResultValue" Usage="new System.Speech.Recognition.SemanticResultValue value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a0e32-136">Значение, управляемое объектом <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span><span class="sxs-lookup"><span data-stu-id="a0e32-136">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span></span> <span data-ttu-id="a0e32-137">Должен иметь тип <see langword="bool" />, <see langword="int" />, <see langword="float" /> или <see langword="string" />.</span><span class="sxs-lookup"><span data-stu-id="a0e32-137">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span></span></param>
        <summary><span data-ttu-id="a0e32-138">Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.SemanticResultValue" /> и указывает семантическое значение.</span><span class="sxs-lookup"><span data-stu-id="a0e32-138">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and specifies a semantic value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0e32-139">Объект `SemanticResultValue` , возвращенный этим конструктором, не связан с каким-либо определенным элементом грамматики.</span><span class="sxs-lookup"><span data-stu-id="a0e32-139">A `SemanticResultValue` returned by this constructor is not associated with any particular grammar element.</span></span> <span data-ttu-id="a0e32-140">Связь необходимо сделать явной с помощью экземпляра `SemanticResultValue` в сочетании с. <xref:System.Speech.Recognition.GrammarBuilder></span><span class="sxs-lookup"><span data-stu-id="a0e32-140">The association must be made explicit by using the instance of `SemanticResultValue` in conjunction with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="a0e32-141">Например, в приведенном ниже фрагменте кода, если <xref:System.Speech.Recognition.Grammar> созданный с помощью <xref:System.Speech.Recognition.GrammarBuilder> этого экземпляра код распознает слово "Background `true` ", значение задается в распознанной семантике фразы.</span><span class="sxs-lookup"><span data-stu-id="a0e32-141">For instance, in the code fragment below, if a <xref:System.Speech.Recognition.Grammar> constructed using this <xref:System.Speech.Recognition.GrammarBuilder> instance recognizes the word "background", a value of `true` is set in the recognized phrase semantics.</span></span>  
  
```csharp  
GrammarBuilder backgroundGB=new GrammarBuilder("background");  
backgroundGB.Append(new SemanticResultValue(true));  
```  
  
   
  
## Examples  
 <span data-ttu-id="a0e32-142">В следующем примере возвращается объект <xref:System.Speech.Recognition.Grammar> , который распознает команду Set/Change/ALTER переднего плана/Background...</span><span class="sxs-lookup"><span data-stu-id="a0e32-142">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="a0e32-143">[список цветов] ".</span><span class="sxs-lookup"><span data-stu-id="a0e32-143">[color list]".</span></span> <span data-ttu-id="a0e32-144"><xref:System.Speech.Recognition.SemanticResultValue>экземпляры <xref:System.Speech.Recognition.SemanticResultKey> и (в сочетании с <xref:System.Speech.Recognition.Choices> объектами <xref:System.Speech.Recognition.GrammarBuilder> и) используются для определения семантики, которая может быть проанализирована при распознавании.</span><span class="sxs-lookup"><span data-stu-id="a0e32-144"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="a0e32-145">Проанализированная семантика определяет, какой цвет был запрошен, а также будет ли изменен передний план или фон.</span><span class="sxs-lookup"><span data-stu-id="a0e32-145">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```csharp  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }           
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
                 (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
        cmdIntro,   
        new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (System.Speech.Recognition.GrammarBuilder builder, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder builder, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Speech.Recognition.GrammarBuilder,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As GrammarBuilder, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::Speech::Recognition::GrammarBuilder ^ builder, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultValue : System.Speech.Recognition.GrammarBuilder * obj -&gt; System.Speech.Recognition.SemanticResultValue" Usage="new System.Speech.Recognition.SemanticResultValue (builder, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="a0e32-146">Компонент грамматики, используемый при распознавании.</span><span class="sxs-lookup"><span data-stu-id="a0e32-146">A grammar component to be used in recognition.</span></span></param>
        <param name="value"><span data-ttu-id="a0e32-147">Значение, управляемое объектом <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span><span class="sxs-lookup"><span data-stu-id="a0e32-147">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span></span> <span data-ttu-id="a0e32-148">Должен иметь тип <see langword="bool" />, <see langword="int" />, <see langword="float" /> или <see langword="string" />.</span><span class="sxs-lookup"><span data-stu-id="a0e32-148">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span></span></param>
        <summary><span data-ttu-id="a0e32-149">Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.SemanticResultValue" /> и связывает семантическое значение с объектом <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="a0e32-149">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and associates a semantic value with a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0e32-150">Если элемент грамматики, заданный параметром <xref:System.Speech.Recognition.GrammarBuilder> , используется в логике распознавания, `value` будет установлен в семантике распознаваемых выходных данных.</span><span class="sxs-lookup"><span data-stu-id="a0e32-150">If the grammar element specified by <xref:System.Speech.Recognition.GrammarBuilder> is used in the recognition logic, `value` will be set in the semantics of the recognized output.</span></span>  
  
 <span data-ttu-id="a0e32-151">В приведенном ниже фрагменте кода, если логика распознавания, <xref:System.Speech.Recognition.GrammarBuilder> созданная`myGb`с помощью экземпляра <xref:System.Speech.Recognition.Choices> ()`myChoice`, использует объект () для обнаружения `true` входных данных, значение добавляется к распознанной семантике.</span><span class="sxs-lookup"><span data-stu-id="a0e32-151">In the code fragment below, if the recognition logic constructed with the <xref:System.Speech.Recognition.GrammarBuilder> instance (`myGb`) uses the <xref:System.Speech.Recognition.Choices> object (`myChoice`) to identify input, the value `true` is added to the recognized semantics.</span></span>  
  
```csharp  
myGb.Append(new SemanticResultValue(myChoice, true);  
```  
  
 <span data-ttu-id="a0e32-152">Так <xref:System.Speech.Recognition.GrammarBuilder> как поддерживает неявное `SemanticResultValue`преобразование для <xref:System.Speech.Recognition.SemanticResultKey> <xref:System.Speech.Recognition.Choices>, и, этот конструктор также может использовать эти объекты.</span><span class="sxs-lookup"><span data-stu-id="a0e32-152">As <xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversion for <xref:System.Speech.Recognition.Choices>,  `SemanticResultValue`, and <xref:System.Speech.Recognition.SemanticResultKey>, this constructor can use those objects as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0e32-153">В следующем примере возвращается объект <xref:System.Speech.Recognition.Grammar> , который распознает команду Set/Change/ALTER переднего плана/Background...</span><span class="sxs-lookup"><span data-stu-id="a0e32-153">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="a0e32-154">[список цветов] ".</span><span class="sxs-lookup"><span data-stu-id="a0e32-154">[color list]".</span></span> <span data-ttu-id="a0e32-155"><xref:System.Speech.Recognition.SemanticResultValue>экземпляры <xref:System.Speech.Recognition.SemanticResultKey> и (в сочетании с <xref:System.Speech.Recognition.Choices> объектами <xref:System.Speech.Recognition.GrammarBuilder> и) используются для определения семантики, которая может быть проанализирована при распознавании.</span><span class="sxs-lookup"><span data-stu-id="a0e32-155"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="a0e32-156">Проанализированная семантика определяет, какой цвет был запрошен, а также будет ли изменен передний план или фон.</span><span class="sxs-lookup"><span data-stu-id="a0e32-156">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```csharp  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }           
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
              (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
    }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
                      cmdIntro,  
                      new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (string phrase, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::String ^ phrase, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultValue : string * obj -&gt; System.Speech.Recognition.SemanticResultValue" Usage="new System.Speech.Recognition.SemanticResultValue (phrase, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="a0e32-157">Фраза, используемый при распознавании.</span><span class="sxs-lookup"><span data-stu-id="a0e32-157">A phrase to be used in recognition.</span></span></param>
        <param name="value"><span data-ttu-id="a0e32-158">Значение, управляемое объектом <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span><span class="sxs-lookup"><span data-stu-id="a0e32-158">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span></span> <span data-ttu-id="a0e32-159">Должен иметь тип <see langword="bool" />, <see langword="int" />, <see langword="float" /> или <see langword="string" />.</span><span class="sxs-lookup"><span data-stu-id="a0e32-159">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span></span></param>
        <summary><span data-ttu-id="a0e32-160">Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.SemanticResultValue" /> и связывает семантическое значение с объектом <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="a0e32-160">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and associates a semantic value with a <see cref="T:System.String" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0e32-161">Если строка, заданная `phrase` параметром, используется в логике `value` распознавания, будет задана семантика распознаваемых выходных данных.</span><span class="sxs-lookup"><span data-stu-id="a0e32-161">If the string specified by `phrase` is used in the recognition logic, `value` will be set in the semantics of the recognized output.</span></span>  
  
 <span data-ttu-id="a0e32-162">В следующем фрагменте кода, если логика распознавания, созданная <xref:System.Speech.Recognition.GrammarBuilder> с помощью`myGb`экземпляра (), использует строку "Моя закладная" для обозначения `true` входных данных, значение будет добавлено к распознанной семантике.</span><span class="sxs-lookup"><span data-stu-id="a0e32-162">In the following code fragment, if the recognition logic constructed with the <xref:System.Speech.Recognition.GrammarBuilder> instance (`myGb`) uses the string "my mortgage" to identify input, the value `true` will be added to the recognized semantics.</span></span>  
  
```csharp  
myGb.Append(new SemanticResultValue("my mortgage", true);  
```  
  
   
  
## Examples  
 <span data-ttu-id="a0e32-163">В следующем примере возвращается объект <xref:System.Speech.Recognition.Grammar> , который распознает команду Set/Change/ALTER переднего плана/Background...</span><span class="sxs-lookup"><span data-stu-id="a0e32-163">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="a0e32-164">[список цветов] ".</span><span class="sxs-lookup"><span data-stu-id="a0e32-164">[color list]".</span></span> <span data-ttu-id="a0e32-165"><xref:System.Speech.Recognition.SemanticResultValue>экземпляры <xref:System.Speech.Recognition.SemanticResultKey> и (в сочетании с <xref:System.Speech.Recognition.Choices> объектами <xref:System.Speech.Recognition.GrammarBuilder> и) используются для определения семантики, которая может быть проанализирована при распознавании.</span><span class="sxs-lookup"><span data-stu-id="a0e32-165"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="a0e32-166">Проанализированная семантика определяет, какой цвет был запрошен, а также будет ли изменен передний план или фон.</span><span class="sxs-lookup"><span data-stu-id="a0e32-166">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }  
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
          (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(cmdIntro,  
                         new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToGrammarBuilder">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Recognition.GrammarBuilder ToGrammarBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Function ToGrammarBuilder () As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Recognition::GrammarBuilder ^ ToGrammarBuilder();" />
      <MemberSignature Language="F#" Value="member this.ToGrammarBuilder : unit -&gt; System.Speech.Recognition.GrammarBuilder" Usage="semanticResultValue.ToGrammarBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a0e32-167">Возвращает экземпляр <see cref="T:System.Speech.Recognition.GrammarBuilder" />, созданный из текущего <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span><span class="sxs-lookup"><span data-stu-id="a0e32-167">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultValue" /> instance.</span></span></summary>
        <returns><span data-ttu-id="a0e32-168">Возвращает экземпляр <see cref="T:System.Speech.Recognition.GrammarBuilder" />, созданный из текущего <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span><span class="sxs-lookup"><span data-stu-id="a0e32-168">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultValue" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0e32-169">Использование <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> <xref:System.Speech.Recognition.SemanticResultValue> <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29>функции эквивалентно использованию конструктора, который принимает в качестве аргумента (). <xref:System.Speech.Recognition.GrammarBuilder></span><span class="sxs-lookup"><span data-stu-id="a0e32-169">The use of <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> is equivalent to using the <xref:System.Speech.Recognition.GrammarBuilder> constructor that takes a <xref:System.Speech.Recognition.SemanticResultValue> as an argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0e32-170">В следующем примере создаются <xref:System.Speech.Recognition.Grammar> объекты, поддерживающие команды для изменения цвета фона.</span><span class="sxs-lookup"><span data-stu-id="a0e32-170">The following example creates <xref:System.Speech.Recognition.Grammar> objects that support commands to change the background color.</span></span>  
  
 <span data-ttu-id="a0e32-171"><xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> <xref:System.Speech.Recognition.GrammarBuilder> <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> `SemanticResultValue` Объект (`colorChoice`), содержащий список параметров цветов фона, заполняется с помощью метода экземплярами, полученными из метода в созданных объектах. <xref:System.Speech.Recognition.Choices> из цветовых строк.</span><span class="sxs-lookup"><span data-stu-id="a0e32-171">A <xref:System.Speech.Recognition.Choices> object (`colorChoice`) containing the list of options for background colors is filled using the <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> method with <xref:System.Speech.Recognition.GrammarBuilder> instances that are obtained from the <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> method on the `SemanticResultValue` objects created from color strings.</span></span>  
  
 <span data-ttu-id="a0e32-172">Затем <xref:System.Speech.Recognition.GrammarBuilder> объект получается путем вызова <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> метода в <xref:System.Speech.Recognition.SemanticResultKey> экземпляре, который будет `colorChoice` использоваться для получения ключевых вариантов семантического выбора в экземпляре.</span><span class="sxs-lookup"><span data-stu-id="a0e32-172">A <xref:System.Speech.Recognition.GrammarBuilder> is then obtained by calling <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> on a <xref:System.Speech.Recognition.SemanticResultKey> instance, which will be used to key the semantic choices in the `colorChoice` instance.</span></span>  
  
```csharp  
  
private Grammar CreateGrammarBuilderRGBSemantics()   
{  
  
  // Create a set of choices, each a lookup from a color name to RBG.  
  // Choices constructors do not take a SemanticResultValue parameter, so  
  // cast SemanticResultValue to GrammarBuilder.  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    SemanticResultValue colorValue =   
        new SemanticResultValue(colorName, Color.FromName(colorName).ToArgb());  
    colorChoice.Add(colorValue.ToGrammarBuilder());  
  }  
  
  SemanticResultKey choiceKey = new SemanticResultKey("rgb", colorChoice);  
  GrammarBuilder choiceBuilder = choiceKey.ToGrammarBuilder();  
  
  // Create two intermediate grammars with an introductory phrase and the  
  // color choice.  
  GrammarBuilder makeBackgroundBuilder = "Make background";  
  makeBackgroundBuilder.Append(choiceBuilder);  
  
  GrammarBuilder configureBackgroundBuilder = new GrammarBuilder("Configure background as");  
  configureBackgroundBuilder.Append((new SemanticResultKey("rgb", colorChoice)).ToGrammarBuilder());  
  
  // Create the final grammar, which recognizes either intermediate grammar.  
  Grammar grammar = new Grammar(new Choices(new GrammarBuilder[] { makeBackgroundBuilder, configureBackgroundBuilder }));  
  grammar.Name = "Set Background Color";  
  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
