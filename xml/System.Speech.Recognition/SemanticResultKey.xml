<Type Name="SemanticResultKey" FullName="System.Speech.Recognition.SemanticResultKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d41242796c25031134a175d7e82a84cb6e4c818" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70606476" /></Metadata><TypeSignature Language="C#" Value="public class SemanticResultKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SemanticResultKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SemanticResultKey" />
  <TypeSignature Language="VB.NET" Value="Public Class SemanticResultKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemanticResultKey" />
  <TypeSignature Language="F#" Value="type SemanticResultKey = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{_semanticKey.DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5ae5c-101">Связывает ключевую строку со значениями <see cref="T:System.Speech.Recognition.SemanticResultValue" /> для идентификации объектов <see cref="T:System.Speech.Recognition.SemanticValue" />.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-101">Associates a key string with <see cref="T:System.Speech.Recognition.SemanticResultValue" /> values to define <see cref="T:System.Speech.Recognition.SemanticValue" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ae5c-102">Базовая единица семантического выражения в System. Speech — <xref:System.Speech.Recognition.SemanticValue>это пара "ключ-значение".</span><span class="sxs-lookup"><span data-stu-id="5ae5c-102">The basic unit of semantic expression in System.Speech is the <xref:System.Speech.Recognition.SemanticValue>, which is a key/value pair.</span></span>  
  
 <span data-ttu-id="5ae5c-103">С <xref:System.Speech.Recognition.SemanticResultKey> помощью объектов вы размечеем <xref:System.Speech.Recognition.SemanticResultValue> экземпляры <xref:System.Speech.Recognition.GrammarBuilder> , содержащиеся в объектах и строках, чтобы получить доступ к <xref:System.Speech.Recognition.SemanticValue> значениям из экземпляров при распознавании.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-103">Using <xref:System.Speech.Recognition.SemanticResultKey> objects, you tag <xref:System.Speech.Recognition.SemanticResultValue> instances contained in <xref:System.Speech.Recognition.GrammarBuilder> objects and strings so that the values may readily be accessed from <xref:System.Speech.Recognition.SemanticValue> instances on recognition.</span></span>  
  
 <span data-ttu-id="5ae5c-104">Для определения семантической <xref:System.Speech.Recognition.SemanticResultKey> структуры для грамматики распознавания речи <xref:System.Speech.Recognition.Choices> можно использовать <xref:System.Speech.Recognition.SemanticResultValue> объекты и в сочетании с <xref:System.Speech.Recognition.GrammarBuilder> объектами и.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-104">You can use <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, in conjunction with <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects, to define the semantic structure for a speech recognition grammar.</span></span> <span data-ttu-id="5ae5c-105">Чтобы получить доступ к семантическим сведениям в результатах распознавания, получите экземпляр <xref:System.Speech.Recognition.SemanticValue> <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> через свойство в <xref:System.Speech.Recognition.RecognizedPhrase>.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-105">To access the semantic information in a recognition result, obtain an instance of <xref:System.Speech.Recognition.SemanticValue> through the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on <xref:System.Speech.Recognition.RecognizedPhrase>.</span></span>  
  
  
## Examples  
 <span data-ttu-id="5ae5c-106">В следующем примере создается <xref:System.Speech.Recognition.Grammar> для распознавания ввода пароля в форме "мой пароль —...", где фактические входные данные сопоставляются с подстановочным знаком.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-106">The following example creates a <xref:System.Speech.Recognition.Grammar> to recognize password input of the form "My password is …", where the actual input is matched with a wildcard.</span></span>  
  
 <span data-ttu-id="5ae5c-107">Подстановочный знак помечается семантическим ключом, а <xref:System.Speech.Recognition.Grammar.SpeechRecognized> обработчик проверяет наличие этого тега, чтобы убедиться в том, что произошел ввод пароля.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-107">The wildcard is tagged with a semantic key, and the <xref:System.Speech.Recognition.Grammar.SpeechRecognized> handler checks for the presence of this tag to verify that a password input has occurred.</span></span>  
  
```csharp  
private void pwdGrammar()   
{  
  GrammarBuilder pwdBuilder = new GrammarBuilder("My Password is");  
  GrammarBuilder wildcardBuilder = new GrammarBuilder();  
  wildcardBuilder.AppendWildcard();  
  SemanticResultKey wildcardKey= new SemanticResultKey("Password", wildcardBuilder);  
  pwdBuilder+=wildcardKey;  
  Grammar grammar = new Grammar(pwdBuilder);  
  grammar.Name = "Password input";  
  
  grammar.SpeechRecognized += delegate(object sender, SpeechRecognizedEventArgs eventArgs)   
  {  
    SemanticValue semantics = eventArgs.Result.Semantics;  
    RecognitionResult result=eventArgs.Result;  
  
    if (!semantics.ContainsKey("Password"))   
    {  
      SpeechUI.SendTextFeedback(eventArgs.Result, "No Password Provided", false);  
    }  
    else   
    {  
      RecognizedAudio pwdAudio = result.GetAudioForWordRange(result.Words[3], result.Words[result.Words.Count - 1]);  
      MemoryStream pwdMemoryStream = new MemoryStream();  
      pwdAudio.WriteToAudioStream(pwdMemoryStream);  
      if (!IsValidPwd(pwdMemoryStream))   
      {  
        string badPwd = System.IO.Path.GetTempPath() + "BadPwd" + (new Random()).Next().ToString() + ".wav";  
        FileStream waveStream = new FileStream(badPwd, FileMode.Create);  
        pwdAudio.WriteToWaveStream(waveStream);  
        waveStream.Flush();  
        waveStream.Close();  
        SpeechUI.SendTextFeedback(eventArgs.Result, "Invalid Password", false);  
  
      }  
    }  
  };  
  grammar.Enabled = true;  
  _recognizer.LoadGrammar(grammar);  
  UpdateGrammarTree(_grammarTreeView, _recognizer);  
  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.SemanticValue" />
    <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361587(v%3doffice.14)"><span data-ttu-id="5ae5c-108">Использование SemanticResultKey для извлечения Семантикресултвалуе</span><span class="sxs-lookup"><span data-stu-id="5ae5c-108">Using a SemanticResultKey to Extract a SemanticResultValue</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5ae5c-109">Создает экземпляр <see cref="T:System.Speech.Recognition.SemanticResultKey" /> и связывает ключ с компонентами грамматики.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-109">Constructs an instance of <see cref="T:System.Speech.Recognition.SemanticResultKey" /> and associates the key with grammar components.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ae5c-110">Конструкторы для <xref:System.Speech.Recognition.SemanticResultKey> задания текстового тега (семантического ключа) и набора грамматических компонентов для добавления в грамматику распознавания речи.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-110">The constructors for <xref:System.Speech.Recognition.SemanticResultKey> specify a text tag (the semantic key) and a set of grammar components to add to a speech recognition grammar.</span></span>  
  
 <span data-ttu-id="5ae5c-111">Компоненты грамматики могут быть заданы как массив <xref:System.Speech.Recognition.GrammarBuilder> объектов или как <xref:System.String> массив экземпляров.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-111">The grammar components can be specified either as an array of <xref:System.Speech.Recognition.GrammarBuilder> objects, or as an array of <xref:System.String> instances.</span></span>  
  
 <span data-ttu-id="5ae5c-112">Если компоненты грамматики используются в распознавании, можно получить доступ к возвращенному <xref:System.Speech.Recognition.SemanticValue> с помощью текстового тега, предоставленного <xref:System.Speech.Recognition.SemanticResultKey> конструктору в качестве семантического ключа.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-112">If the grammar components are used in recognition, you can access the returned <xref:System.Speech.Recognition.SemanticValue> using the text tag provided to the constructor of <xref:System.Speech.Recognition.SemanticResultKey> as a semantic key.</span></span> <span data-ttu-id="5ae5c-113">Свойство экземпляра будет определяться компонентами грамматики, <xref:System.Speech.Recognition.SemanticResultKey>используемыми в определении. <xref:System.Speech.Recognition.SemanticValue> <xref:System.Speech.Recognition.SemanticValue.Value%2A></span><span class="sxs-lookup"><span data-stu-id="5ae5c-113">The <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of the <xref:System.Speech.Recognition.SemanticValue> instance will be determined by the grammar components used in the definition of <xref:System.Speech.Recognition.SemanticResultKey>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultKey (string semanticResultKey, params System.Speech.Recognition.GrammarBuilder[] builders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string semanticResultKey, class System.Speech.Recognition.GrammarBuilder[] builders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.Speech.Recognition.GrammarBuilder[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (semanticResultKey As String, ParamArray builders As GrammarBuilder())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultKey(System::String ^ semanticResultKey, ... cli::array &lt;System::Speech::Recognition::GrammarBuilder ^&gt; ^ builders);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultKey : string * System.Speech.Recognition.GrammarBuilder[] -&gt; System.Speech.Recognition.SemanticResultKey" Usage="new System.Speech.Recognition.SemanticResultKey (semanticResultKey, builders)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="semanticResultKey" Type="System.String" />
        <Parameter Name="builders" Type="System.Speech.Recognition.GrammarBuilder[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="semanticResultKey"><span data-ttu-id="5ae5c-114">Тег, который будет использоваться как семантический колюч для доступа к экземпляру <see cref="T:System.Speech.Recognition.SemanticValue" />, связанному с объектами <see cref="T:System.Speech.Recognition.GrammarBuilder" />, указанными аргументом <paramref name="builders" />.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-114">The tag to be used as a semantic key to access the <see cref="T:System.Speech.Recognition.SemanticValue" /> instance associated with the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects specified by the <paramref name="builders" /> argument.</span></span></param>
        <param name="builders"><span data-ttu-id="5ae5c-115">Массив компонентов грамматики, которые будут связаны с объектом <see cref="T:System.Speech.Recognition.SemanticValue" />, доступным с тегом, который определен в <paramref name="semanticResultKey" />.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-115">An array of grammar components that will be associated with a <see cref="T:System.Speech.Recognition.SemanticValue" /> object accessible with the tag defined in <paramref name="semanticResultKey" />.</span></span></param>
        <summary><span data-ttu-id="5ae5c-116">Присваивает семантический ключ одному или нескольким объектам <see cref="T:System.Speech.Recognition.GrammarBuilder" />, используемым для создания грамматики распознавания речи.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-116">Assigns a semantic key to one or more <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects used to create a speech recognition grammar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ae5c-117">Из-за неявных `builders` преобразований <xref:System.Speech.Recognition.SemanticResultValue>аргумент <xref:System.Speech.Recognition.SemanticResultKey>поддерживает также объекты <xref:System.String> ,, <xref:System.Speech.Recognition.Choices>и.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-117">Because of implicit conversions, the `builders` argument supports <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.Choices>, and <xref:System.String> objects as well.</span></span> <span data-ttu-id="5ae5c-118">Дополнительные сведения о неявных преобразованиях см. в разделе <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A>.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-118">For more information on implicit conversions, see <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A>.</span></span>  
  
 <span data-ttu-id="5ae5c-119">При выполнении операции распознавания <xref:System.Speech.Recognition.GrammarBuilder> объекты, указанные `builders` в аргументе, обрабатываются как последовательные.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-119">When performing a recognition operation, the <xref:System.Speech.Recognition.GrammarBuilder> objects provided in the `builders` argument are treated as sequential.</span></span> <span data-ttu-id="5ae5c-120">Например, если для <xref:System.Speech.Recognition.SemanticResultValue> <xref:System.Speech.Recognition.Grammar>создания, входные данные для подсистемы распознавания используются следующим образом, должны содержать слова «Quick Браун Fox» в последовательности для распознавания.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-120">For example, if the following <xref:System.Speech.Recognition.SemanticResultValue> is used to construct a <xref:System.Speech.Recognition.Grammar>, input to the recognition engine must contain the words "the quick brown fox" in sequence to be recognized.</span></span>  
  
```csharp  
SemanticResultKey stringTest=new SemanticResultKey(  
    "stringTest", new GrammarBuilder[] {  
    new GrammarBuilder("the"),  
    new GrammarBuilder("quick"),  
    new GrammarBuilder("brown"),  
    new GrammarBuilder("fox")});  
```  
  
 <span data-ttu-id="5ae5c-121">Аргумент содержит тег, используемый для доступа к, <xref:System.Speech.Recognition.SemanticValue> который может быть возвращен. `semanticResultKey`</span><span class="sxs-lookup"><span data-stu-id="5ae5c-121">The `semanticResultKey` argument contains the tag used to access the <xref:System.Speech.Recognition.SemanticValue> which might be returned.</span></span>  
  
 <span data-ttu-id="5ae5c-122">Объект <xref:System.Speech.Recognition.SemanticValue.Value%2A> класса определяется <xref:System.Speech.Recognition.GrammarBuilder> экземплярами , `builders` предоставленными параметром. <xref:System.Speech.Recognition.SemanticValue></span><span class="sxs-lookup"><span data-stu-id="5ae5c-122">The <xref:System.Speech.Recognition.SemanticValue.Value%2A> of the <xref:System.Speech.Recognition.SemanticValue> is determined by the <xref:System.Speech.Recognition.GrammarBuilder> instances provided by the `builders` parameter.</span></span>  
  
 <span data-ttu-id="5ae5c-123">Если объекты не содержат определяющих <xref:System.Speech.Recognition.SemanticResultValue>экземпляров, значение параметра <xref:System.Speech.Recognition.SemanticValue> равно  `null` .  <xref:System.Speech.Recognition.GrammarBuilder></span><span class="sxs-lookup"><span data-stu-id="5ae5c-123">If the <xref:System.Speech.Recognition.GrammarBuilder> objects contain no defining instances of <xref:System.Speech.Recognition.SemanticResultValue>, the value of the <xref:System.Speech.Recognition.SemanticValue> is `null`.</span></span>  
  
 <span data-ttu-id="5ae5c-124"><xref:System.Speech.Recognition.SemanticResultKey> <xref:System.Speech.Recognition.SemanticResultValue> <xref:System.Speech.Recognition.SemanticResultValue> Если объекты, предоставленные `builders` в параметре, предоставляют экземпляр без тегов (не связанный с объектом), который используется логикой распознавания, то этот экземпляр будет определять <xref:System.Speech.Recognition.GrammarBuilder> <xref:System.Speech.Recognition.SemanticValue.Value%2A>созданное свойство <xref:System.Speech.Recognition.SemanticValue> объекта.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-124">If the <xref:System.Speech.Recognition.GrammarBuilder> objects provided in the `builders` parameter provide an untagged (not associated with a <xref:System.Speech.Recognition.SemanticResultKey> object) <xref:System.Speech.Recognition.SemanticResultValue> instance that is used by the recognition logic, that instance of <xref:System.Speech.Recognition.SemanticResultValue> will define the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of the <xref:System.Speech.Recognition.SemanticValue> that is produced.</span></span>  
  
 <span data-ttu-id="5ae5c-125">В объектах, заданных с помощью `builders` параметра, должен быть один и только один экземпляр без тегов. <xref:System.Speech.Recognition.SemanticResultValue> <xref:System.Speech.Recognition.GrammarBuilder></span><span class="sxs-lookup"><span data-stu-id="5ae5c-125">There should be one, and only one, untagged <xref:System.Speech.Recognition.SemanticResultValue> instance in the <xref:System.Speech.Recognition.GrammarBuilder> objects specified by the `builders` parameter.</span></span> <span data-ttu-id="5ae5c-126">Если с параметром <xref:System.Speech.Recognition.SemanticResultKey>связаны несколько <xref:System.Speech.Recognition.SemanticResultValue> экземпляров без тегов, каждый из них попытается <xref:System.Speech.Recognition.SemanticValue> установить значение объекта, полученного в результате распознавания.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-126">If multiple instances of untagged <xref:System.Speech.Recognition.SemanticResultValue> are associated with the <xref:System.Speech.Recognition.SemanticResultKey>, each will attempt to the set the value of the <xref:System.Speech.Recognition.SemanticValue> produced in the recognition result.</span></span> <span data-ttu-id="5ae5c-127">Это не разрешено, и распознаватель создает исключение при попытке использования <xref:System.Speech.Recognition.Grammar> созданного с помощью <xref:System.Speech.Recognition.SemanticResultKey> такого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-127">This is not permitted, and the recognizer will generate an exception when it attempts to use a <xref:System.Speech.Recognition.Grammar> created using such a <xref:System.Speech.Recognition.SemanticResultKey> instance.</span></span>  
  
 <span data-ttu-id="5ae5c-128">`builders` <xref:System.Speech.Recognition.SemanticResultKey> <xref:System.Speech.Recognition.SemanticResultKey> Экземпляры, <xref:System.Speech.Recognition.GrammarBuilder> содержащиеся в объектах, заданных параметром и уже связанные с другим, не влияют на текущий экземпляр. <xref:System.Speech.Recognition.SemanticResultValue></span><span class="sxs-lookup"><span data-stu-id="5ae5c-128">Instances of <xref:System.Speech.Recognition.SemanticResultValue> contained in the <xref:System.Speech.Recognition.GrammarBuilder> objects specified by the `builders` parameter and already associated with another <xref:System.Speech.Recognition.SemanticResultKey> have no effect on the current <xref:System.Speech.Recognition.SemanticResultKey> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ae5c-129">В следующем примере создается <xref:System.Speech.Recognition.Grammar> для распознавания ввода пароля в форме "мой пароль —...", где фактические входные данные сопоставляются с подстановочным знаком.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-129">The following example creates a <xref:System.Speech.Recognition.Grammar> to recognize password input of the form "My password is …", where the actual input is matched with a wildcard.</span></span>  
  
 <span data-ttu-id="5ae5c-130">Подстановочный знак помечается <xref:System.Speech.Recognition.SpeechRecognizer> тегом, значением ключа которого является Password.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-130">The wildcard is tagged by a <xref:System.Speech.Recognition.SpeechRecognizer> whose key value is "Password".</span></span> <span data-ttu-id="5ae5c-131"><xref:System.Speech.Recognition.Grammar.SpeechRecognized> Обработчик проверяет наличие этого тега, получает звуковые входные данные пароля и проверяет пароль.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-131">The <xref:System.Speech.Recognition.Grammar.SpeechRecognized> handler checks for the presence of this tag, obtains the audio input of the password, and verifies the password.</span></span>  
  
```csharp  
private void pwdGrammar()   
{  
  GrammarBuilder pwdBuilder = new GrammarBuilder("My Password is");  
  GrammarBuilder wildcardBuilder = new GrammarBuilder();  
  wildcardBuilder.AppendWildcard();  
  SemanticResultKey wildcardKey= new SemanticResultKey("Password", wildcardBuilder);  
  pwdBuilder+=wildcardKey;  
  Grammar grammar = new Grammar(pwdBuilder);  
  grammar.Name = "Password input";  
  
  grammar.SpeechRecognized +=   
    delegate(object sender, SpeechRecognizedEventArgs eventArgs)   
    {  
      SemanticValue semantics = eventArgs.Result.Semantics;  
      RecognitionResult result=eventArgs.Result;  
  
      if (!semantics.ContainsKey("Password"))   
      {  
        SpeechUI.SendTextFeedback(eventArgs.Result, "No Password Provided", false);  
      }  
      else   
      {  
        RecognizedAudio pwdAudio = result.GetAudioForWordRange(  
                  result.Words[3],  
                  result.Words[result.Words.Count - 1]);  
                  MemoryStream pwdMemoryStream = new MemoryStream();  
                  pwdAudio.WriteToAudioStream(pwdMemoryStream);  
        if (!IsValidPwd(pwdMemoryStream))   
        {  
          string badPwd = System.IO.Path.GetTempPath() + "BadPwd" + (new Random()).Next().ToString() + ".wav";  
          FileStream waveStream = new FileStream(badPwd, FileMode.Create);    
          pwdAudio.WriteToWaveStream(waveStream);  
          waveStream.Flush();  
          waveStream.Close();  
          SpeechUI.SendTextFeedback(eventArgs.Result, "Invalid Password", false);      
        }  
      }  
    };  
  
  grammar.Enabled = true;  
  _recognizer.LoadGrammar(grammar);  
  UpdateGrammarTree(_grammarTreeView, _recognizer);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultKey (string semanticResultKey, params string[] phrases);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string semanticResultKey, string[] phrases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (semanticResultKey As String, ParamArray phrases As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultKey(System::String ^ semanticResultKey, ... cli::array &lt;System::String ^&gt; ^ phrases);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultKey : string * string[] -&gt; System.Speech.Recognition.SemanticResultKey" Usage="new System.Speech.Recognition.SemanticResultKey (semanticResultKey, phrases)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="semanticResultKey" Type="System.String" />
        <Parameter Name="phrases" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="semanticResultKey"><span data-ttu-id="5ae5c-132">Тег, который будет использоваться, имеет доступ к экземпляру <see cref="T:System.Speech.Recognition.SemanticValue" />, связанному с объектами <see cref="T:System.String" />, указанными аргументом <paramref name="phrases" />.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-132">The tag to be used access the <see cref="T:System.Speech.Recognition.SemanticValue" /> instance associated with the <see cref="T:System.String" /> objects specified by the <paramref name="phrases" /> argument.</span></span></param>
        <param name="phrases"><span data-ttu-id="5ae5c-133">Один или несколько объектов <see cref="T:System.String" />, урезанный текст которых связан с объектом <see cref="T:System.Speech.Recognition.SemanticValue" />, доступ к которому осуществляется через тег, определенный в <paramref name="semanticResultKey" />.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-133">One or more <see cref="T:System.String" /> objects, whose concatenated text will be associated with a <see cref="T:System.Speech.Recognition.SemanticValue" /> object accessible with the tag defined in <paramref name="semanticResultKey" />.</span></span></param>
        <summary><span data-ttu-id="5ae5c-134">Присваивает семантический ключ одному или нескольким экземплярам <see cref="T:System.String" />, используемым для создания грамматики распознавания речи.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-134">Assigns a semantic key to one or more <see cref="T:System.String" /> instances used to create a speech recognition grammar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ae5c-135">При выполнении операции распознавания <xref:System.String> объекты, используемые `phrases` в параметре, обрабатываются как последовательные.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-135">When performing a recognition operation, the <xref:System.String> objects used in the `phrases` parameter are treated as sequential.</span></span> <span data-ttu-id="5ae5c-136">Например, если для <xref:System.Speech.Recognition.SemanticResultValue> <xref:System.Speech.Recognition.Grammar>создания, входные данные для подсистемы распознавания используются следующим образом, должны содержать слова «Quick Браун Fox» в последовательности для распознавания.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-136">For example, if the following <xref:System.Speech.Recognition.SemanticResultValue> is used to construct a <xref:System.Speech.Recognition.Grammar>, input to the recognition engine must contain the words "the quick brown fox" in sequence to be recognized.</span></span>  
  
```csharp  
SemanticResultKey stringTest=new SemanticResultKey("stringTest",   
                                new string[] {  
                                               "the",  
                                               "quick",  
                                               "brown",  
                                               "fox"});  
```  
  
 <span data-ttu-id="5ae5c-137">Аргумент определяет ключ, используемый для доступа к, <xref:System.Speech.Recognition.SemanticValue> который может быть возвращен. `semanticResultKey`</span><span class="sxs-lookup"><span data-stu-id="5ae5c-137">The `semanticResultKey` argument determines the key used to access the <xref:System.Speech.Recognition.SemanticValue> which might be returned.</span></span>  
  
 <span data-ttu-id="5ae5c-138">При создании <xref:System.Speech.Recognition.Grammar> <xref:System.Speech.Recognition.SemanticValue.Value%2A> с помощью <xref:System.Speech.Recognition.SemanticValue> объекта, содержащего семантический ключ с массивом строковых объектов, объект, созданный операцией распознавания, будет строкой, используемой при распознавании. <xref:System.Speech.Recognition.GrammarBuilder></span><span class="sxs-lookup"><span data-stu-id="5ae5c-138">If you construct a <xref:System.Speech.Recognition.Grammar> using a <xref:System.Speech.Recognition.GrammarBuilder> object that contains a semantic key with an array of string objects,  the <xref:System.Speech.Recognition.SemanticValue.Value%2A> of the <xref:System.Speech.Recognition.SemanticValue> produced by a recognition operation  will be the string used in recognition.</span></span> <span data-ttu-id="5ae5c-139">В предыдущем примере это означает, что <xref:System.Speech.Recognition.SemanticValue.Value%2A> это будет «Quick Браун Fox».</span><span class="sxs-lookup"><span data-stu-id="5ae5c-139">In the preceding example, this means that <xref:System.Speech.Recognition.SemanticValue.Value%2A> would be "the quick brown fox".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ae5c-140">В следующем примере <xref:System.Speech.Recognition.Grammar> создается объект <xref:System.Speech.Recognition.GrammarBuilder> из объекта, использующего <xref:System.Speech.Recognition.SemanticResultKey>объект <xref:System.String> , который определяется массивом объектов.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-140">The following example creates a <xref:System.Speech.Recognition.Grammar> from a <xref:System.Speech.Recognition.GrammarBuilder> object that uses a <xref:System.Speech.Recognition.SemanticResultKey>, which is defined by an array of <xref:System.String> objects.</span></span>  
  
 <span data-ttu-id="5ae5c-141">Подсистема распознавания, <xref:System.Speech.Recognition.Grammar> созданная с помощью команды Created, распознает фразу «красный цвет красного цвета 0».</span><span class="sxs-lookup"><span data-stu-id="5ae5c-141">A recognition engine using the <xref:System.Speech.Recognition.Grammar> created will recognize the phrase "color red green blue zero".</span></span> <span data-ttu-id="5ae5c-142">Семантика, <xref:System.Speech.Recognition.RecognizedPhrase> возвращаемая функцией распознавания, будет <xref:System.Speech.Recognition.SemanticValue> содержать символ с <xref:System.Speech.Recognition.SemanticValue.Value%2A> красным зеленым цветом.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-142">The semantics of the <xref:System.Speech.Recognition.RecognizedPhrase> returned by recognition will contain a <xref:System.Speech.Recognition.SemanticValue> with a <xref:System.Speech.Recognition.SemanticValue.Value%2A> of "red green blue".</span></span> <span data-ttu-id="5ae5c-143">Доступ к можно получить <xref:System.Speech.Recognition.SemanticValue> с помощью тега "Code".</span><span class="sxs-lookup"><span data-stu-id="5ae5c-143">You can access the <xref:System.Speech.Recognition.SemanticValue> using the "code" tag.</span></span>  
  
 <span data-ttu-id="5ae5c-144">Из `SemanticResultValue("zero", 5)` -за добавления <xref:System.Speech.Recognition.GrammarBuilder>к объекту корневой <xref:System.Speech.Recognition.SemanticValue> объект в <xref:System.Speech.Recognition.RecognizedPhrase> будет иметь значение 5.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-144">Because of the `SemanticResultValue("zero", 5)` appended to the <xref:System.Speech.Recognition.GrammarBuilder>, the root <xref:System.Speech.Recognition.SemanticValue> object in the <xref:System.Speech.Recognition.RecognizedPhrase> will have a value of 5.</span></span>  
  
```csharp  
private void keyTest()   
{  
  // Say "color red green blue zero"  
  GrammarBuilder gb = new GrammarBuilder("color") +  
                        new SemanticResultKey("code",   
                          (new string[] {"red", "green", "blue"})) +  
                        new SemanticResultValue("zero", 5);  
  Grammar g = new Grammar(gb);  
  g.Name = "keyTest";  
  _recognizer.LoadGrammar(g);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToGrammarBuilder">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Recognition.GrammarBuilder ToGrammarBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Function ToGrammarBuilder () As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Recognition::GrammarBuilder ^ ToGrammarBuilder();" />
      <MemberSignature Language="F#" Value="member this.ToGrammarBuilder : unit -&gt; System.Speech.Recognition.GrammarBuilder" Usage="semanticResultKey.ToGrammarBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5ae5c-145">Возвращает экземпляр <see cref="T:System.Speech.Recognition.GrammarBuilder" />, созданный из текущего <see cref="T:System.Speech.Recognition.SemanticResultKey" />.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-145">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultKey" /> instance.</span></span></summary>
        <returns><span data-ttu-id="5ae5c-146">Экземпляр <see cref="T:System.Speech.Recognition.GrammarBuilder" />, созданный из текущего экземпляра <see langword="SemanticResultKey" />.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-146">An instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see langword="SemanticResultKey" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ae5c-147">Использование метода <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> эквивалентно <xref:System.Speech.Recognition.GrammarBuilder> использованию конструктора, который принимает <xref:System.Speech.Recognition.SemanticResultKey> в качестве аргумента (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29>).</span><span class="sxs-lookup"><span data-stu-id="5ae5c-147">The use of <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> is equivalent to using the <xref:System.Speech.Recognition.GrammarBuilder> constructor which takes <xref:System.Speech.Recognition.SemanticResultKey> as an argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5ae5c-148">В следующем примере создается <xref:System.Speech.Recognition.Grammar> объект, который поддерживает команды для изменения цвета фона.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-148">The following example creates a <xref:System.Speech.Recognition.Grammar> object that supports commands to change the background color.</span></span>  
  
 <span data-ttu-id="5ae5c-149">Объект (`colorChoice`), содержащий список параметров <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> цветов фона, заполняется с помощью метода с <xref:System.Speech.Recognition.GrammarBuilder> экземплярами. <xref:System.Speech.Recognition.Choices></span><span class="sxs-lookup"><span data-stu-id="5ae5c-149">A <xref:System.Speech.Recognition.Choices> object (`colorChoice`) containing the list of options for background colors is filled using the <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> method with <xref:System.Speech.Recognition.GrammarBuilder> instances.</span></span> <span data-ttu-id="5ae5c-150">Экземпляры получаются с <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> помощью метода для объектов, <xref:System.Speech.Recognition.SemanticResultValue> созданных из цветовых строк. <xref:System.Speech.Recognition.GrammarBuilder></span><span class="sxs-lookup"><span data-stu-id="5ae5c-150">The <xref:System.Speech.Recognition.GrammarBuilder> instances are obtained through the <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> method on the <xref:System.Speech.Recognition.SemanticResultValue> objects created from color strings.</span></span>  
  
 <span data-ttu-id="5ae5c-151">Затем <xref:System.Speech.Recognition.GrammarBuilder> объект получается путем вызова <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> метода в <xref:System.Speech.Recognition.SemanticResultKey> экземпляре, который будет использоваться для выбора семантических выборок `colorChoice`в.</span><span class="sxs-lookup"><span data-stu-id="5ae5c-151">A <xref:System.Speech.Recognition.GrammarBuilder> is then obtained by calling <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> on a <xref:System.Speech.Recognition.SemanticResultKey> instance, which will be used to key the semantic choices in `colorChoice`.</span></span>  
  
```csharp  
  
private Grammar CreateGrammarBuilderRGBSemantics()   
{  
  
  // Create a set of choices, each a lookup from a color name to RGB.  
  // Choices constructors do not take SemanticResultValue parameters, so cast   
  // the SemanticResultValue to GrammarBuilder.  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
    SemanticResultValue colorValue=new SemanticResultValue(colorName, Color.FromName(colorName).ToArgb());  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.  
    colorChoice.Add(colorValue.ToGrammarBuilder());      
  }  
  SemanticResultKey choiceKey = new SemanticResultKey("rgb", colorChoice);  
  GrammarBuilder choiceBuilder = choiceKey.ToGrammarBuilder();  
  
  // Create two intermediate grammars with introductory phrase and the color choice.  
  GrammarBuilder makeBackgroundBuilder = "Make background";  
  makeBackgroundBuilder.Append(choiceBuilder);  
  
  GrammarBuilder configureBackgroundBuilder = new GrammarBuilder("Configure background as");  
  configureBackgroundBuilder.Append((new SemanticResultKey("rgb", colorChoice)).ToGrammarBuilder());  
  
  // Create the Grammar object, which recognizes either intermediate grammar.  
  Grammar grammar = new Grammar(new Choices(new GrammarBuilder[] {makeBackgroundBuilder, configureBackgroundBuilder}));  
  grammar.Name = "Make Background /Configure background as";  
  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
