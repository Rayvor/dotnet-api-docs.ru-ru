<Type Name="GrammarBuilder" FullName="System.Speech.Recognition.GrammarBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e0d9bfa62675c9e59e6fa12e0bf36c839258e976" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69231353" /></Metadata><TypeSignature Language="C#" Value="public class GrammarBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GrammarBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.GrammarBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class GrammarBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class GrammarBuilder" />
  <TypeSignature Language="F#" Value="type GrammarBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ceb7f-101">Предоставляет механизм для программного создания ограничений для грамматики распознавания речи.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-101">Provides a mechanism for programmatically building the constraints for a speech recognition grammar.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-102">Грамматики распознавания речи обычно создаются в формате XML, определенном в [спецификации грамматики распознавания речи (SRGS) версии 1,0](https://go.microsoft.com/fwlink/?LinkId=201761).</span><span class="sxs-lookup"><span data-stu-id="ceb7f-102">Speech recognition grammars are commonly authored in the XML format defined by the [Speech Recognition Grammar Specification (SRGS) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201761).</span></span> <span data-ttu-id="ceb7f-103">Если вы знакомы с SRGS, но хотите создать грамматики программно, можно использовать <xref:System.Speech.Recognition.SrgsGrammar> пространство имен, члены которого близко соответствуют элементам и атрибутам, определенным в SRGS.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-103">If you are familiar with SRGS but want to generate the grammars programmatically, you can use the <xref:System.Speech.Recognition.SrgsGrammar> namespace, whose members correspond closely to the elements and attributes defined by SRGS.</span></span> <span data-ttu-id="ceb7f-104">Если вы не знакомы с SRGS или хотите использовать упрощенный, программный подход к созданию грамматик, с помощью которых можно эффективно выполнять многие распространенные сценарии; можно использовать <xref:System.Speech.Recognition.GrammarBuilder> классы и <xref:System.Speech.Recognition.Choices> .</span><span class="sxs-lookup"><span data-stu-id="ceb7f-104">If you are unfamiliar with SRGS, or you want a lightweight, programmatic approach to authoring grammars with which you can efficiently accomplish many common scenarios; you can use the <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> classes.</span></span>  
  
 <span data-ttu-id="ceb7f-105">Используйте <xref:System.Speech.Recognition.GrammarBuilder> объекты для создания иерархического дерева, состоящего из <xref:System.Speech.Recognition.Choices> объектов, содержащих альтернативные фразы, в том числе с помощью выражений преамбулы и POST-преамбул на каждом узле, а также начальных значений, которые передаются обратно в приклад.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-105">Use <xref:System.Speech.Recognition.GrammarBuilder> objects to build a hierarchical tree composed of <xref:System.Speech.Recognition.Choices> objects that contain alternate phrases, interspersed with preamble and post-amble phrases at each node, and seeded with semantic values that convey  meaning back to the application.</span></span>  
  
 <span data-ttu-id="ceb7f-106"><xref:System.Speech.Recognition.GrammarBuilder> Чтобы<xref:System.Speech.Recognition.Grammar> создать объект с помощью, выполните следующие действия.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-106">To use a <xref:System.Speech.Recognition.GrammarBuilder> to create a <xref:System.Speech.Recognition.Grammar> object, use the following steps.</span></span>  
  
1.  <span data-ttu-id="ceb7f-107">Создание объекта <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-107">Create a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
2.  <span data-ttu-id="ceb7f-108">Добавление ограничений <xref:System.Speech.Recognition.GrammarBuilder>к, таким как <xref:System.Speech.Recognition.Choices> <xref:System.String> <xref:System.Speech.Recognition.GrammarBuilder> объекты, <xref:System.Speech.Recognition.SemanticResultKey> <xref:System.Speech.Recognition.SemanticResultValue>, ,,идругиеобъекты,определяющиеограниченияграмматики.<xref:System.Speech.Recognition.DictationGrammar></span><span class="sxs-lookup"><span data-stu-id="ceb7f-108">Append constraints to the <xref:System.Speech.Recognition.GrammarBuilder>, such as <xref:System.String> objects, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.DictationGrammar>, and other <xref:System.Speech.Recognition.GrammarBuilder> objects that define the constraints for the grammar.</span></span>  
  
3.  <span data-ttu-id="ceb7f-109">Используйте один из <xref:System.Speech.Recognition.Grammar.%23ctor%2A> конструкторов для <xref:System.Speech.Recognition.Grammar> создания объекта из завершенной <xref:System.Speech.Recognition.GrammarBuilder> грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-109">Use one of the <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructors to create a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder> grammar.</span></span>  
  
 <span data-ttu-id="ceb7f-110">Разработка с <xref:System.Speech.Recognition.GrammarBuilder> помощью лучше всего подходит для грамматики с одним правилом, содержащим списки, или, возможно, списки.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-110">Authoring with <xref:System.Speech.Recognition.GrammarBuilder> is best suited to grammars that have a single rule containing lists, or perhaps lists of lists.</span></span> <span data-ttu-id="ceb7f-111">Чтобы программно создать грамматики с несколькими правилами или ссылки на внутренние правила, используйте классы <xref:System.Speech.Recognition.SrgsGrammar> пространства имен.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-111">To programmatically build grammars that have multiple rules, or that need to make internal rule references, use the classes of the <xref:System.Speech.Recognition.SrgsGrammar> namespace.</span></span>  
  
 <span data-ttu-id="ceb7f-112">Экземпляры также <xref:System.Speech.Recognition.GrammarBuilder> могут быть получены неявными преобразованиями из некоторых других классов или путем объединения со вторым объектом, который содержит ограничения для грамматики. <xref:System.Speech.Recognition.GrammarBuilder></span><span class="sxs-lookup"><span data-stu-id="ceb7f-112">Instances of <xref:System.Speech.Recognition.GrammarBuilder> can also be obtained by implicit conversions from certain other classes or by combining a  <xref:System.Speech.Recognition.GrammarBuilder> with a second object that contains constraints for a grammar..</span></span> <span data-ttu-id="ceb7f-113">Дополнительные сведения см. в <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> описании операторов <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> и <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> методов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-113">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators and the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods.</span></span>  
  
 <span data-ttu-id="ceb7f-114">Чтобы добавить правила в существующую <xref:System.Speech.Recognition.GrammarBuilder>, <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>используйте методы, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>,, и <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> .</span><span class="sxs-lookup"><span data-stu-id="ceb7f-114">To add rules to an existing <xref:System.Speech.Recognition.GrammarBuilder>, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ceb7f-115">Распознаватель речи может вызывать исключение при использовании грамматики распознавания речи, содержащей повторяющиеся семантические элементы с одинаковым именем ключа или несколькими семантическими элементами, которые могут периодически изменять значение одного и того же семантического элемента.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-115">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> 
  
 <span data-ttu-id="ceb7f-116">Чтобы упростить отладку, <xref:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases%2A> свойство возвращает текущее состояние в <xref:System.Speech.Recognition.GrammarBuilder> виде строки.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-116">To help with debugging, the <xref:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases%2A> property returns the current status of the <xref:System.Speech.Recognition.GrammarBuilder> as a string.</span></span>  
  
 <span data-ttu-id="ceb7f-117">Дополнительные сведения о создании и использовании грамматик распознавания речи см. в разделе [Распознавание речи](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) и [Создание грамматик граммарбуилдер](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="ceb7f-117">For more information about building and using speech recognition grammars, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) and [Creating GrammarBuilder Grammars](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb7f-118">В следующем примере используются <xref:System.Speech.Recognition.GrammarBuilder> объекты <xref:System.Speech.Recognition.Choices> и для создания грамматики, которая может распознать любую из двух фраз: «make Background *колорчоице*» или «Set Background to *колорчоице*».</span><span class="sxs-lookup"><span data-stu-id="ceb7f-118">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="ceb7f-119">В примере используется <xref:System.Speech.Recognition.Choices> объект для создания списка допустимых значений для *колорчоице* <xref:System.String> из массива объектов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-119">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="ceb7f-120">Объект является аналогом `one-of` элемента в спецификации SRGS и содержит набор альтернативных фраз, любой из которых можно распознать при разговоре. <xref:System.Speech.Recognition.Choices></span><span class="sxs-lookup"><span data-stu-id="ceb7f-120">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any of which can be recognized when spoken.</span></span> <span data-ttu-id="ceb7f-121">В примере также используется <xref:System.Speech.Recognition.Choices> объект для группирования массива из двух <xref:System.Speech.Recognition.GrammarBuilder> объектов в пару альтернативных фраз, которые может распознать результирующая грамматика.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-121">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="ceb7f-122">Альтернативные слова или фразы являются компонентом большинства грамматик, а <xref:System.Speech.Recognition.Choices> объект предоставляет эту функцию для грамматик, созданных с помощью. <xref:System.Speech.Recognition.GrammarBuilder></span><span class="sxs-lookup"><span data-stu-id="ceb7f-122">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="ceb7f-123">В примере наконец создается <xref:System.Speech.Recognition.Grammar> объект из, <xref:System.Speech.Recognition.GrammarBuilder> созданного на основе <xref:System.Speech.Recognition.Choices> объекта.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-123">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.Choices" />
    <altmember cref="T:System.Speech.Recognition.Grammar" />
    <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
    <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ceb7f-124">Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-124">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-125">Экземпляры этого класса также могут быть получены неявными преобразованиями из других классов или путем <xref:System.Speech.Recognition.GrammarBuilder> объединения объекта со вторым объектом в новый. <xref:System.Speech.Recognition.GrammarBuilder></span><span class="sxs-lookup"><span data-stu-id="ceb7f-125">Instances of this class can also be obtained by implicit conversions from other classes or by combining a <xref:System.Speech.Recognition.GrammarBuilder> object with a second object to from a new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="ceb7f-126">Дополнительные сведения см. в <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> описании методов и. <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A></span><span class="sxs-lookup"><span data-stu-id="ceb7f-126">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> methods.</span></span>  
  
 <span data-ttu-id="ceb7f-127">Чтобы добавить ограничения к существующему <xref:System.Speech.Recognition.GrammarBuilder>, <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>используйте <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A> методы<xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> , <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>,, и, а также <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> оператор.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-127">To add constraints to an existing <xref:System.Speech.Recognition.GrammarBuilder>, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods, and the <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operator.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ceb7f-128">Распознаватель речи может вызывать исключение при использовании грамматики распознавания речи, содержащей повторяющиеся семантические элементы с одинаковым именем ключа или несколькими семантическими элементами, которые могут периодически изменять значение одного и того же семантического элемента.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-128">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span>
  
 <span data-ttu-id="ceb7f-129">Дополнительные сведения о создании и использовании грамматик распознавания речи см. в разделе [Распознавание речи](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) и [Создание грамматик граммарбуилдер](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="ceb7f-129">For more information about building and using speech recognition grammars, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) and [Creating GrammarBuilder Grammars](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ceb7f-130">Инициализирует новый пустой экземпляр класса <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-130">Initializes a new, empty instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-131">Чтобы добавить правила в существующий <xref:System.Speech.Recognition.GrammarBuilder> объект, <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>используйте <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A> методы<xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> ,,, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>и, а также <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> оператор.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-131">To add rules to an existing <xref:System.Speech.Recognition.GrammarBuilder> object, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods, and the <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operator.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ceb7f-132">Распознаватель речи может вызывать исключение при использовании грамматики распознавания речи, содержащей повторяющиеся семантические элементы с одинаковым именем ключа или несколькими семантическими элементами, которые могут периодически изменять значение одного и того же семантического элемента.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-132">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="ceb7f-133">В следующем примере используются <xref:System.Speech.Recognition.GrammarBuilder> объекты <xref:System.Speech.Recognition.Choices> и для создания грамматики, которая может распознать любую из двух фраз: «make Background *колорчоице*» или «Set Background to *колорчоице*».</span><span class="sxs-lookup"><span data-stu-id="ceb7f-133">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="ceb7f-134">В примере используется <xref:System.Speech.Recognition.Choices> объект для создания списка допустимых значений для *колорчоице* <xref:System.String> из массива объектов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-134">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="ceb7f-135">Объект является аналогом `one-of` элемента в спецификации SRGS и содержит набор альтернативных фраз, любой из которых можно распознать при разговоре. <xref:System.Speech.Recognition.Choices></span><span class="sxs-lookup"><span data-stu-id="ceb7f-135">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any one of which can be recognized when spoken.</span></span> <span data-ttu-id="ceb7f-136">В примере также используется <xref:System.Speech.Recognition.Choices> объект для группирования массива из двух <xref:System.Speech.Recognition.GrammarBuilder> объектов в пару альтернативных фраз, которые может распознать результирующая грамматика.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-136">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="ceb7f-137">Альтернативные слова или фразы являются компонентом большинства грамматик, а <xref:System.Speech.Recognition.Choices> объект предоставляет эту функцию для грамматик, созданных с помощью. <xref:System.Speech.Recognition.GrammarBuilder></span><span class="sxs-lookup"><span data-stu-id="ceb7f-137">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="ceb7f-138">В примере наконец создается <xref:System.Speech.Recognition.Grammar> объект из, <xref:System.Speech.Recognition.GrammarBuilder> созданного на основе <xref:System.Speech.Recognition.Choices> объекта.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-138">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  GrammarBuilder bothPhrases = new GrammarBuilder();  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  bothPhrases.Append(bothChoices);  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.Choices alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.Choices alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.Choices)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (alternateChoices As Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::Choices ^ alternateChoices);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder alternateChoices" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="alternateChoices"><span data-ttu-id="ceb7f-139">Набор вариантов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-139">The set of alternatives.</span></span></param>
        <summary><span data-ttu-id="ceb7f-140">Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.GrammarBuilder" /> из набора объектов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-140">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a set of alternatives.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-141">Дополнительные сведения о создании грамматики распознавания речи, содержащей альтернативные варианты, см. в разделе [Использование вариантов для создания грамматики граммарбуилдер](https://msdn.microsoft.com/library/5b18db18-a5f6-46a3-aa77-6d3141544efd).</span><span class="sxs-lookup"><span data-stu-id="ceb7f-141">For more information about building a speech recognition grammar that contains alternatives, see [Using Choices to Create a GrammarBuilder Grammar](https://msdn.microsoft.com/library/5b18db18-a5f6-46a3-aa77-6d3141544efd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb7f-142">В следующем примере используются <xref:System.Speech.Recognition.GrammarBuilder> объекты <xref:System.Speech.Recognition.Choices> и для создания грамматики, которая может распознать любую из двух фраз: «make Background *колорчоице*» или «Set Background to *колорчоице*».</span><span class="sxs-lookup"><span data-stu-id="ceb7f-142">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="ceb7f-143">В примере используется <xref:System.Speech.Recognition.Choices> объект для создания списка допустимых значений для *колорчоице* <xref:System.String> из массива объектов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-143">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="ceb7f-144">Объект является аналогом `one-of` элемента в спецификации SRGS и содержит набор альтернативных фраз, любой из которых можно распознать при разговоре. <xref:System.Speech.Recognition.Choices></span><span class="sxs-lookup"><span data-stu-id="ceb7f-144">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any of which can be recognized when spoken.</span></span> <span data-ttu-id="ceb7f-145">В примере также используется <xref:System.Speech.Recognition.Choices> объект для группирования массива из двух <xref:System.Speech.Recognition.GrammarBuilder> объектов в пару альтернативных фраз, которые может распознать результирующая грамматика.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-145">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="ceb7f-146">Альтернативные слова или фразы являются компонентом большинства грамматик, а <xref:System.Speech.Recognition.Choices> объект предоставляет эту функцию для грамматик, созданных с помощью. <xref:System.Speech.Recognition.GrammarBuilder></span><span class="sxs-lookup"><span data-stu-id="ceb7f-146">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="ceb7f-147">В примере наконец создается <xref:System.Speech.Recognition.Grammar> объект из, <xref:System.Speech.Recognition.GrammarBuilder> созданного на основе <xref:System.Speech.Recognition.Choices> объекта.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-147">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.SemanticResultKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SemanticResultKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As SemanticResultKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::SemanticResultKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.SemanticResultKey -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ceb7f-148">Семантический ключ.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-148">The semantic key.</span></span></param>
        <summary><span data-ttu-id="ceb7f-149">Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.GrammarBuilder" /> из семантического ключа.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-149">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a semantic key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-150">При создании <xref:System.Speech.Recognition.GrammarBuilder> экземпляра <xref:System.Speech.Recognition.SemanticResultValue> из объекта в грамматику добавляются семантические сведения, которые могут быть возвращены в результате распознавания.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-150">When you create a <xref:System.Speech.Recognition.GrammarBuilder> instance from a <xref:System.Speech.Recognition.SemanticResultValue> object, you add semantic information to the grammar that can be returned in the recognition result.</span></span> <span data-ttu-id="ceb7f-151">Вы можете получить доступ к семантическим сведениям в результатах распознавания <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> , используя <xref:System.Speech.Recognition.RecognizedPhrase>свойство объекта, которое доступно `SpeechRecognized` в обработчике события.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-151">You can access the semantic information in the recognition result using the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property of <xref:System.Speech.Recognition.RecognizedPhrase>, which is available in the handler for the `SpeechRecognized` event.</span></span> <span data-ttu-id="ceb7f-152">Если объект <xref:System.Speech.Recognition.GrammarBuilder> <xref:System.Speech.Recognition.SemanticResultKey>определяет, он может использоваться для получения семантической информации в результате распознавания, связанного с ключом.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-152">If the <xref:System.Speech.Recognition.GrammarBuilder> defines a <xref:System.Speech.Recognition.SemanticResultKey>, this can be used to retrieve the semantic information in a recognition result that is associated with the key.</span></span> <span data-ttu-id="ceb7f-153">См. пример для <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>, а также см <xref:System.Speech.Recognition.SemanticResultValue> . <xref:System.Speech.Recognition.SemanticResultKey>раздел и.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-153">See the example for <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>, and also see <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ceb7f-154">При создании <xref:System.Speech.Recognition.GrammarBuilder> объектов, содержащих <xref:System.Speech.Recognition.SemanticResultValue> экземпляры или <xref:System.Speech.Recognition.SemanticResultKey> , убедитесь, что вы не создаете повторяющиеся семантические элементы с одинаковым именем ключа или <xref:System.Speech.Recognition.SemanticValue.Value%2A> несколькими семантическими элементами, которые могут периодически изменять <xref:System.Speech.Recognition.SemanticValue> свойство объекта.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-154">When you construct <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="ceb7f-155">Распознаватель речи может вызвать исключение, если в них возникают такие обстоятельства.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-155">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="ceb7f-156">В следующем примере создается Грамматика распознавания речи, которая может распознать две фразы: «make Background *колорчоице*» и «Set Background to *колорчоице*», где *колорчоице* выбирается из набора цветов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-156">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *colorChoice*" and "Set background to *colorChoice*", where *colorChoice* is selected from a set of colors.</span></span> <span data-ttu-id="ceb7f-157">Грамматика позволяет пользователю поговорить с любым из нескольких имен цветов и Возвращает семантическую информацию о распознанном имени цвета для приложения.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-157">The grammar lets a user speak any of several color names, and returns semantic information about the recognized color name to the application.</span></span>  
  
 <span data-ttu-id="ceb7f-158">В примере используется один <xref:System.Speech.Recognition.SemanticResultKey> объект, с помощью которого можно получить объект <xref:System.Speech.Recognition.SemanticValue> , связанный с цветом, произнесенным пользователем.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-158">The example uses a single <xref:System.Speech.Recognition.SemanticResultKey> with which you can retrieve the <xref:System.Speech.Recognition.SemanticValue> that is associated with the color spoken by the user.</span></span> <span data-ttu-id="ceb7f-159">Например, если вход содержит фразу «установить фон в красный цвет», результат распознавания будет содержать семантическое значение «#FF0000», которое можно получить с помощью обработчика для `SpeechRecognized` события.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-159">For example, if the input contains the phrase, "Set background to red", the recognition result contains the semantic value of "#FF0000", which you can retrieve using a handler for the `SpeechRecognized` event.</span></span>  
  
 <span data-ttu-id="ceb7f-160">В примере используются <xref:System.String> <xref:System.Speech.Recognition.Choices> <xref:System.Speech.Recognition.GrammarBuilder> объекты, <xref:System.Speech.Recognition.SemanticResultKey> ,<xref:System.Speech.Recognition.SemanticResultValue>, и <xref:System.Speech.Recognition.GrammarBuilder> для построения ограничений, содержащихся в последнем объекте. `bothPhrases`</span><span class="sxs-lookup"><span data-stu-id="ceb7f-160">The example uses <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and <xref:System.Speech.Recognition.GrammarBuilder> objects to build the constraints that are all contained in the last <xref:System.Speech.Recognition.GrammarBuilder> object, `bothPhrases`.</span></span> <span data-ttu-id="ceb7f-161">Наконец, в примере создается <xref:System.Speech.Recognition.Grammar> объект из завершенного. <xref:System.Speech.Recognition.GrammarBuilder></span><span class="sxs-lookup"><span data-stu-id="ceb7f-161">Finally, the example constructs a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  // Include semantic information about each of the colors.  
  Choices colorChoice = new Choices();  
  
  GrammarBuilder colorBuilder = new GrammarBuilder("red");  
  SemanticResultValue colorValue =  
    new SemanticResultValue(colorBuilder, "#FF0000");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("green");  
  colorValue = new SemanticResultValue(colorBuilder, "#00FF00");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("blue");  
  colorValue = new SemanticResultValue(colorBuilder, "#0000FF");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices object for the two alternative phrases.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  // Create the semantic key for referencing the color information.  
  SemanticResultKey colorKey =  
    new SemanticResultKey("ColorCode", bothPhrases);  
  bothPhrases = new GrammarBuilder(colorKey);  
  
  // Construct the Grammar object from the GrammarBuilder.  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.SemanticResultValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SemanticResultValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As SemanticResultValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::SemanticResultValue ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.SemanticResultValue -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ceb7f-162">Семантическое значение или пара имя-значение.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-162">The semantic value or name/value pair.</span></span></param>
        <summary><span data-ttu-id="ceb7f-163">Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.GrammarBuilder" /> из семантического значения.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-163">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a semantic value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-164">При создании <xref:System.Speech.Recognition.GrammarBuilder> экземпляра <xref:System.Speech.Recognition.SemanticResultValue> из объекта в грамматику добавляются семантические сведения, которые могут быть возвращены в результате распознавания.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-164">When you create a <xref:System.Speech.Recognition.GrammarBuilder> instance from a <xref:System.Speech.Recognition.SemanticResultValue> object, you add semantic information to the grammar that can be returned in the recognition result.</span></span> <span data-ttu-id="ceb7f-165">Вы можете получить доступ к семантическим сведениям в результатах распознавания <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> , используя <xref:System.Speech.Recognition.RecognizedPhrase>свойство объекта, которое доступно `SpeechRecognized` в обработчике события.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-165">You can access the semantic information in the recognition result using the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property of <xref:System.Speech.Recognition.RecognizedPhrase>, which is available in the handler for the `SpeechRecognized` event.</span></span> <span data-ttu-id="ceb7f-166">Если объект <xref:System.Speech.Recognition.GrammarBuilder> <xref:System.Speech.Recognition.SemanticResultKey>определяет, он может использоваться для получения семантической информации в результате распознавания, связанного с ключом.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-166">If the <xref:System.Speech.Recognition.GrammarBuilder> defines a <xref:System.Speech.Recognition.SemanticResultKey>, this can be used to retrieve the semantic information in a recognition result that is associated with the key.</span></span> <span data-ttu-id="ceb7f-167">См. пример для <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>, а также см <xref:System.Speech.Recognition.SemanticResultValue> . <xref:System.Speech.Recognition.SemanticResultKey>раздел и.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-167">See the example for <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>, and also see <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ceb7f-168">При создании <xref:System.Speech.Recognition.GrammarBuilder> объектов, содержащих <xref:System.Speech.Recognition.SemanticResultValue> экземпляры или <xref:System.Speech.Recognition.SemanticResultKey> , убедитесь, что вы не создаете повторяющиеся семантические элементы с одинаковым именем ключа или <xref:System.Speech.Recognition.SemanticValue.Value%2A> несколькими семантическими элементами, которые могут периодически изменять <xref:System.Speech.Recognition.SemanticValue> свойство объекта.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-168">When you construct <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="ceb7f-169">Распознаватель речи может вызвать исключение, если в них возникают такие обстоятельства.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-169">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="ceb7f-170">В следующем примере создается Грамматика распознавания речи, которая может распознать две фразы: «make Background *колорчоице*» и «Set Background to *колорчоице*», где *колорчоице* выбирается из набора цветов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-170">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *colorChoice*" and "Set background to *colorChoice*", where *colorChoice* is selected from a set of colors.</span></span> <span data-ttu-id="ceb7f-171">Грамматика позволяет пользователю поговорить с любым из нескольких имен цветов и Возвращает семантическую информацию о распознанном имени цвета для приложения.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-171">The grammar lets a user speak any of several color names, and returns semantic information about the recognized color name to the application.</span></span>  
  
 <span data-ttu-id="ceb7f-172">В примере используется один <xref:System.Speech.Recognition.SemanticResultKey> объект, с помощью которого можно получить объект <xref:System.Speech.Recognition.SemanticValue> , связанный с цветом, произнесенным пользователем.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-172">The example uses a single <xref:System.Speech.Recognition.SemanticResultKey> with which you can retrieve the <xref:System.Speech.Recognition.SemanticValue> that is associated with the color spoken by the user.</span></span> <span data-ttu-id="ceb7f-173">Например, если вход содержит фразу «установить фон в красный цвет», результат распознавания будет содержать семантическое значение «#FF0000», которое можно получить с помощью обработчика для `SpeechRecognized` события.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-173">For example, if the input contains the phrase, "Set background to red", the recognition result contains the semantic value of "#FF0000", which you can retrieve using a handler for the `SpeechRecognized` event.</span></span>  
  
 <span data-ttu-id="ceb7f-174">В примере используются <xref:System.String> <xref:System.Speech.Recognition.Choices> <xref:System.Speech.Recognition.GrammarBuilder> объекты, <xref:System.Speech.Recognition.SemanticResultKey> ,<xref:System.Speech.Recognition.SemanticResultValue>, и <xref:System.Speech.Recognition.GrammarBuilder> для построения ограничений, содержащихся в последнем объекте. `bothPhrases`</span><span class="sxs-lookup"><span data-stu-id="ceb7f-174">The example uses <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and <xref:System.Speech.Recognition.GrammarBuilder> objects to build the constraints that are all contained in the last <xref:System.Speech.Recognition.GrammarBuilder> object, `bothPhrases`.</span></span> <span data-ttu-id="ceb7f-175">Наконец, в примере создается <xref:System.Speech.Recognition.Grammar> объект из завершенного. <xref:System.Speech.Recognition.GrammarBuilder></span><span class="sxs-lookup"><span data-stu-id="ceb7f-175">Finally, the example constructs a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  // Include semantic information about each of the colors.  
  Choices colorChoice = new Choices();  
  
  GrammarBuilder colorBuilder = new GrammarBuilder("red");  
  SemanticResultValue colorValue =  
    new SemanticResultValue(colorBuilder, "#FF0000");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("green");  
  colorValue = new SemanticResultValue(colorBuilder, "#00FF00");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("blue");  
  colorValue = new SemanticResultValue(colorBuilder, "#0000FF");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  // Create the semantic key for referencing the color information.  
  SemanticResultKey colorKey =  
    new SemanticResultKey("ColorCode", bothPhrases);  
  bothPhrases = new GrammarBuilder(colorKey);  
  
  // Construct the grammar from the grammar builder.  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder phrase" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="ceb7f-176">Последовательность слов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-176">The sequence of words.</span></span></param>
        <summary><span data-ttu-id="ceb7f-177">Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.GrammarBuilder" /> из последовательности слов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-177">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a sequence of words.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-178">Фраза представляет собой точную голосовую фразу, которую может распознать Грамматика распознавания речи.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-178">The phrase represents an exact spoken phrase that the speech recognition grammar can recognize.</span></span> <span data-ttu-id="ceb7f-179">Дополнительные сведения о создании грамматики распознавания речи, содержащей строки, см. [в разделе Использование строк для создания грамматики граммарбуилдер](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="ceb7f-179">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb7f-180">В следующем примере используются <xref:System.Speech.Recognition.GrammarBuilder> объекты <xref:System.Speech.Recognition.Choices> и для создания грамматики, которая может распознать любую из двух фраз: «make Background *колорчоице*» или «Set Background to *колорчоице*».</span><span class="sxs-lookup"><span data-stu-id="ceb7f-180">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="ceb7f-181">После создания списка допустимых значений для *колорчоице* с <xref:System.Speech.Recognition.Choices> помощью объекта в примере инициализируются два <xref:System.Speech.Recognition.GrammarBuilder> объекта, `makePhrase` а `setPhrase`в качестве аргумента используется строка.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-181">After creating a list of acceptable values for *colorChoice* using a <xref:System.Speech.Recognition.Choices> object, the example initializes two <xref:System.Speech.Recognition.GrammarBuilder> objects, `makePhrase` and `setPhrase`, using a string as an argument.</span></span>  
  
 <span data-ttu-id="ceb7f-182">В примере наконец создается <xref:System.Speech.Recognition.Grammar> объект <xref:System.Speech.Recognition.Choices> из объекта, приведенного к <xref:System.Speech.Recognition.GrammarBuilder> объекту.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-182">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.Choices> object cast to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase, System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, valuetype System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, subsetMatchingCriteria As SubsetMatchingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase, System::Speech::Recognition::SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : string * System.Speech.Recognition.SubsetMatchingMode -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder (phrase, subsetMatchingCriteria)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="subsetMatchingCriteria" Type="System.Speech.Recognition.SubsetMatchingMode" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="ceb7f-183">Последовательность слов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-183">The sequence of words.</span></span></param>
        <param name="subsetMatchingCriteria"><span data-ttu-id="ceb7f-184">Соответствующий режим, используемый грамматикой распознавания речи для распознавания фразы.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-184">The matching mode the speech recognition grammar uses to recognize the phrase.</span></span></param>
        <summary><span data-ttu-id="ceb7f-185">Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.GrammarBuilder" /> для подмножества последовательности слов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-185">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class for a subset of a sequence of words.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-186">`phrase` Параметр представляет фразу, которую может распознать Грамматика распознавания речи.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-186">The `phrase` parameter represents the phrase that the speech recognition grammar can recognize.</span></span> <span data-ttu-id="ceb7f-187">`subsetMatchingMode` Параметр указывает подмножество фразы, с помощью которых можно получить успешное распознавание всей фразы.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-187">The `subsetMatchingMode` parameter specifies a subset of the phrase that can be spoken to achieve successful recognition of the entire phrase.</span></span> <span data-ttu-id="ceb7f-188">С помощью этого параметра можно создать грамматику со списком записей с длинными именами, не требуя от пользователя говорить о полном имени в соответствии с элементом.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-188">You can use this to create a grammar with a list of entries that have long names, without requiring users to speak an entire name to match an item.</span></span>  
  
 <span data-ttu-id="ceb7f-189">Дополнительные сведения о режимах сопоставления см. в <xref:System.Speech.Recognition.SubsetMatchingMode>разделе.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-189">For more information about the matching modes, see <xref:System.Speech.Recognition.SubsetMatchingMode>.</span></span> <span data-ttu-id="ceb7f-190">Дополнительные сведения о создании грамматики распознавания речи, содержащей строки, см. [в разделе Использование строк для создания грамматики граммарбуилдер](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="ceb7f-190">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb7f-191">В следующем примере создается Грамматика распознавания речи для каждого <xref:System.Speech.Recognition.SubsetMatchingMode> значения и грамматики для выбора между грамматикой режима сопоставления.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-191">The following example creates a speech recognition grammar for each <xref:System.Speech.Recognition.SubsetMatchingMode> value and a grammar for choosing between the matching mode grammars.</span></span> <span data-ttu-id="ceb7f-192">Если значение `phrase` равно "1 2 3 4 5 6 7", то грамматика подпоследовательности распознает входные данные "2 3 4", но не входные данные "1 3 5".</span><span class="sxs-lookup"><span data-stu-id="ceb7f-192">If the value of `phrase` is "one two three four five six seven", then the Subsequence grammar recognizes the input "two three four", but not the input "one three five".</span></span> <span data-ttu-id="ceb7f-193">Однако грамматика упорядоченного подмножества распознает оба этих входа.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-193">However, the Ordered Subset grammar recognizes both of these inputs.</span></span>  
  
```csharp  
  
private static IEnumerable<Grammar>  
  CreateMatchingModeGrammars(string phrase)  
{  
  List<Grammar> grammars = new List<Grammar>(5);  
  
  Choices modeChoice = new Choices();  
  Type enumType = typeof(SubsetMatchingMode);  
  foreach (SubsetMatchingMode mode in Enum.GetValues(enumType))  
  {  
    string modeName = Enum.GetName(enumType, mode);  
    modeName = BreakAtCaps(modeName);  
  
    GrammarBuilder builder = new GrammarBuilder(phrase, mode);  
    Grammar modeGrammar = new Grammar(builder);  
    modeGrammar.Name = modeName;  
    modeGrammar.Enabled = false;  
    grammars.Add(modeGrammar);  
  
    modeChoice.Add(modeName);  
  }  
  
  Grammar choiceGrammar = new Grammar(modeChoice);  
  choiceGrammar.Name = "choice";  
  grammars.Add(choiceGrammar);  
  
  return grammars;  
}  
  
// Insert spaces preceding each uppercase letter in a string.   
private static string BreakAtCaps(string item)  
{  
  if (item == null || item.Length == 0)  
  {  
    return item;  
  }  
  
  StringBuilder sb = new StringBuilder(item[0].ToString());  
  for (int i = 1; i < item.Length; i++)  
  {  
    char c = item[i];  
    if (char.IsUpper(c))  
    {  
      sb.Append(" ");  
    }  
    sb.Append(c);  
  }  
  
  return sb.ToString();  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SubsetMatchingMode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.GrammarBuilder builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder builder, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As GrammarBuilder, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::GrammarBuilder ^ builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.GrammarBuilder * int * int -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder (builder, minRepeat, maxRepeat)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="ceb7f-194">Повторяющийся элемент.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-194">The repeated element.</span></span></param>
        <param name="minRepeat"><span data-ttu-id="ceb7f-195">Минимальное количество сопоставлений входных данных элементу, определенному в <paramref name="builder" />, при котором засчитывается совпадение.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-195">The minimum number of times that input matching the element defined by <paramref name="builder" /> must occur to constitute a match.</span></span></param>
        <param name="maxRepeat"><span data-ttu-id="ceb7f-196">Максимальное количество сопоставлений входных данных элементу, определенному в <paramref name="builder" />, при котором засчитывается совпадение.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-196">The maximum number of times that input matching the element defined by <paramref name="builder" /> can occur to constitute a match.</span></span></param>
        <summary><span data-ttu-id="ceb7f-197">Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.GrammarBuilder" /> из повторяющегося элемента.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-197">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a repeated element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-198">Если значение `minRepeat` равно 0, то New <xref:System.Speech.Recognition.GrammarBuilder> представляет необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-198">If the value of `minRepeat` is 0, then the new <xref:System.Speech.Recognition.GrammarBuilder> represents an optional element.</span></span>  
  
 <span data-ttu-id="ceb7f-199">Значение `minRepeat` должно быть больше или равно 0 и меньше или равно `maxRepeat`значению.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-199">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ceb7f-200">При указании REPEAT для <xref:System.Speech.Recognition.GrammarBuilder> объектов, содержащих <xref:System.Speech.Recognition.SemanticResultValue> экземпляры или <xref:System.Speech.Recognition.SemanticResultKey> , следует избегать создания повторяющихся семантических элементов с одинаковым именем ключа или несколькими семантическими элементами, которые могут периодически изменять <xref:System.Speech.Recognition.SemanticValue.Value%2A> свойство объекта.<xref:System.Speech.Recognition.SemanticValue></span><span class="sxs-lookup"><span data-stu-id="ceb7f-200">When you specify repeats for <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="ceb7f-201">Распознаватель речи может вызвать исключение, если в них возникают такие обстоятельства.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-201">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="ceb7f-202">В следующем примере создается Грамматика распознавания речи для упорядочивания пиццы.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-202">The following example creates a speech recognition grammar for ordering a pizza.</span></span> <span data-ttu-id="ceb7f-203">Он начинается с необязательной, открывающей фразы, от одной до четырех наследов и закрывается словом «пицца».</span><span class="sxs-lookup"><span data-stu-id="ceb7f-203">It starts with an optional, opening phrase, followed by one to four toppings, and closes with the word "pizza".</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object from a string array of alternative toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : string * int * int -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder (phrase, minRepeat, maxRepeat)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="ceb7f-204">Повторяющаяся последовательность слов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-204">The repeated sequence of words.</span></span></param>
        <param name="minRepeat"><span data-ttu-id="ceb7f-205">Минимальное количество сопоставлений входной фразы, при котором засчитывается совпадение.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-205">The minimum number of times that input matching the phrase must occur to constitute a match.</span></span></param>
        <param name="maxRepeat"><span data-ttu-id="ceb7f-206">Максимальное количество сопоставлений входной фразы, при котором засчитывается совпадение.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-206">The maximum number of times that input matching the phrase can occur to constitute a match.</span></span></param>
        <summary><span data-ttu-id="ceb7f-207">Инициализирует новый экземпляр класса <see cref="T:System.Speech.Recognition.GrammarBuilder" /> из последовательности слов в <see cref="T:System.String" /> и определяет, сколько раз можно повторить <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-207">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from the sequence of words in a <see cref="T:System.String" /> and specifies how many times the <see cref="T:System.String" /> can be repeated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-208">Если значение `minRepeat` равно 0, то New <xref:System.Speech.Recognition.GrammarBuilder> представляет необязательный элемент.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-208">If the value of `minRepeat` is 0, then the new <xref:System.Speech.Recognition.GrammarBuilder> represents an optional element.</span></span>  
  
 <span data-ttu-id="ceb7f-209">Значение `minRepeat` должно быть больше или равно 0 и меньше или равно `maxRepeat`значению.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-209">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span> <span data-ttu-id="ceb7f-210">Дополнительные сведения о создании грамматики распознавания речи, содержащей строки, см. [в разделе Использование строк для создания грамматики граммарбуилдер](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="ceb7f-210">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb7f-211">В следующем примере создается Грамматика распознавания речи для упорядочивания пиццы.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-211">The following example creates a speech recognition grammar for ordering a pizza.</span></span> <span data-ttu-id="ceb7f-212">Он начинается с необязательной, открывающей фразы, от одной до четырех наследов и закрывается словом «пицца».</span><span class="sxs-lookup"><span data-stu-id="ceb7f-212">It starts with an optional, opening phrase, followed by one to four toppings, and closes with the word "pizza".</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ceb7f-213">Создает новый объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />, содержащий последовательность из двух элементов грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-213">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-214">Статические <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> методы предоставляют еще один механизм, с помощью которого можно комбинировать различные типы для создания разнородности и гибкости в <xref:System.Speech.Recognition.GrammarBuilder>грамматиках, построенных с помощью.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-214">The static <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods provide another mechanism by which you can combine various types to create diversity and flexibility in grammars built with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="ceb7f-215">Эти методы соответствуют статическим <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> методам, которые также определены <xref:System.Speech.Recognition.GrammarBuilder> в классе.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-215">These methods correspond to the static <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> methods, which are also defined on the <xref:System.Speech.Recognition.GrammarBuilder> class.</span></span> <span data-ttu-id="ceb7f-216">Порядок параметров определяет порядок элементов в новом <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-216">The order of the parameters determines the order of the elements in the new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="ceb7f-217"><xref:System.Speech.Recognition.Choices> <xref:System.Speech.Recognition.SemanticResultKey> [](https://go.microsoft.com/fwlink/?LinkId=159733) Можно также получить из строковых объектов,, <xref:System.Speech.Recognition.SemanticResultValue>и. <xref:System.Speech.Recognition.GrammarBuilder></span><span class="sxs-lookup"><span data-stu-id="ceb7f-217">A <xref:System.Speech.Recognition.GrammarBuilder> can also be obtained from <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and [String](https://go.microsoft.com/fwlink/?LinkId=159733) objects.</span></span> <span data-ttu-id="ceb7f-218">Дополнительные сведения см. в <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> разделе операторы и. <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A></span><span class="sxs-lookup"><span data-stu-id="ceb7f-218">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ceb7f-219">Распознаватель речи может вызывать исключение при использовании грамматики распознавания речи, содержащей повторяющиеся семантические элементы с одинаковым именем ключа или несколькими семантическими элементами, которые могут периодически изменять значение одного и того же семантического элемента.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-219">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> 
  
 <span data-ttu-id="ceb7f-220">Дополнительные сведения о создании и использовании грамматик распознавания речи см. в разделе [Распознавание речи](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) и [Создание грамматик граммарбуилдер](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="ceb7f-220">For more information about building and using speech recognition grammars, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) and [Creating GrammarBuilder Grammars](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.Choices choices, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.Choices choices, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::Choices ^ choices, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.Choices * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (choices, builder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="choices"><span data-ttu-id="ceb7f-221">Первый элемент grammar, представляющий набор альтернатив.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-221">The first grammar element, which represents a set of alternatives.</span></span></param>
        <param name="builder"><span data-ttu-id="ceb7f-222">Второй элемент grammar.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-222">The second grammar element.</span></span></param>
        <summary><span data-ttu-id="ceb7f-223">Создает элемент <see cref="T:System.Speech.Recognition.GrammarBuilder" />, содержащий объект <see cref="T:System.Speech.Recognition.Choices" />, за которым следует объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-223">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.Choices" /> object followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="ceb7f-224">Объект <see cref="T:System.Speech.Recognition.GrammarBuilder" /> для последовательности элементов <paramref name="choices" />, за которой следует элемент <paramref name="builder" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-224">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="choices" /> element followed by the <paramref name="builder" /> element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-225"><xref:System.Speech.Recognition.GrammarBuilder>поддерживает неявные преобразования из следующих классов:</span><span class="sxs-lookup"><span data-stu-id="ceb7f-225"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="ceb7f-226">Этот метод принимает перечисленные выше объекты для `builder` параметра.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-226">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="ceb7f-227">Дополнительные сведения см. в <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> разделе операторы и. <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A></span><span class="sxs-lookup"><span data-stu-id="ceb7f-227">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ceb7f-228">При объединении <xref:System.Speech.Recognition.Choices> объектов <xref:System.Speech.Recognition.GrammarBuilder> и, содержащих <xref:System.Speech.Recognition.SemanticResultValue> или <xref:System.Speech.Recognition.SemanticResultKey> , следует избегать создания повторяющихся семантических элементов с одинаковым именем ключа или несколькими семантическими элементами, которые могут периодически изменять <xref:System.Speech.Recognition.SemanticValue.Value%2A> свойство объекта.<xref:System.Speech.Recognition.SemanticValue></span><span class="sxs-lookup"><span data-stu-id="ceb7f-228">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="ceb7f-229">Распознаватель речи может вызвать исключение, если в них возникают такие обстоятельства.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-229">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="ceb7f-230">Дополнительные сведения о создании грамматики распознавания речи, содержащей семантическую информацию, см. в разделе [Добавление семантики в грамматику граммарбуилдер](https://msdn.microsoft.com/library/hh361581.aspx).</span><span class="sxs-lookup"><span data-stu-id="ceb7f-230">For more information about building a speech recognition grammar that contains semantic information, see [Add Semantics to a GrammarBuilder Grammar](https://msdn.microsoft.com/library/hh361581.aspx).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder, System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder, class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder, System::Speech::Recognition::Choices ^ choices);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (builder, choices)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="ceb7f-231">Первый элемент грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-231">The first grammar element.</span></span></param>
        <param name="choices"><span data-ttu-id="ceb7f-232">Второй элемент грамматики, который представляет набор вариантов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-232">The second grammar element, which represents a set of alternatives.</span></span></param>
        <summary><span data-ttu-id="ceb7f-233">Создает элемент <see cref="T:System.Speech.Recognition.GrammarBuilder" />, содержащий объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />, за которым следует объект <see cref="T:System.Speech.Recognition.Choices" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-233">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object followed by a <see cref="T:System.Speech.Recognition.Choices" /> object.</span></span></summary>
        <returns><span data-ttu-id="ceb7f-234">Объект <see cref="T:System.Speech.Recognition.GrammarBuilder" /> для последовательности элементов <paramref name="builder" />, за которой следует элемент <paramref name="choices" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-234">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> element followed by the <paramref name="choices" /> element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-235"><xref:System.Speech.Recognition.GrammarBuilder>поддерживает неявные преобразования из следующих классов:</span><span class="sxs-lookup"><span data-stu-id="ceb7f-235"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="ceb7f-236">Этот метод принимает перечисленные выше объекты для `builder` параметра.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-236">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="ceb7f-237">Дополнительные сведения см. в <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> разделе операторы и. <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A></span><span class="sxs-lookup"><span data-stu-id="ceb7f-237">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ceb7f-238">При объединении <xref:System.Speech.Recognition.Choices> объектов <xref:System.Speech.Recognition.GrammarBuilder> и, содержащих <xref:System.Speech.Recognition.SemanticResultValue> экземпляры <xref:System.Speech.Recognition.SemanticResultKey> или с другими элементами грамматики, следует избегать создания повторяющихся семантических элементов с одинаковым именем ключа или несколькими семантическими элементами, которые может периодически изменять <xref:System.Speech.Recognition.SemanticValue.Value%2A> свойство <xref:System.Speech.Recognition.SemanticValue> объекта.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-238">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="ceb7f-239">Распознаватель речи может вызвать исключение, если в них возникают такие обстоятельства.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-239">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="ceb7f-240">В следующем примере создается Грамматика распознавания речи, которая может распознать две фразы: «создать *Цвет*фона» и «задать фон до *цвета*», где *Цвет* выбирается из набора цветов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-240">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="ceb7f-241">Для создания окончательной грамматики, например [строк](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>и <xref:System.Speech.Recognition.GrammarBuilder> объектов, используются различные типы.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-241">Various types are used to build the final grammar, such as [String](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="ceb7f-242">Операторы явного приведения в вызовах <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> методов являются необязательными.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-242">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder1, System.Speech.Recognition.GrammarBuilder builder2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder1, class System.Speech.Recognition.GrammarBuilder builder2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (builder1 As GrammarBuilder, builder2 As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder1, System::Speech::Recognition::GrammarBuilder ^ builder2);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (builder1, builder2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder1" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="builder2" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder1"><span data-ttu-id="ceb7f-243">Первый элемент грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-243">The first grammar element.</span></span></param>
        <param name="builder2"><span data-ttu-id="ceb7f-244">Второй элемент grammar.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-244">The second grammar element.</span></span></param>
        <summary><span data-ttu-id="ceb7f-245">Создает новый объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />, содержащий последовательность из двух объектов <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-245">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects.</span></span></summary>
        <returns><span data-ttu-id="ceb7f-246">Объект <see cref="T:System.Speech.Recognition.GrammarBuilder" /> для последовательности элементов <paramref name="builder1" />, за которой следует элемент <paramref name="builder2" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-246">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder1" /> element followed by the <paramref name="builder2" /> element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-247"><xref:System.Speech.Recognition.GrammarBuilder>поддерживает неявные преобразования из следующих классов:</span><span class="sxs-lookup"><span data-stu-id="ceb7f-247"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="ceb7f-248">Этот метод принимает перечисленные выше объекты для `builder1` параметра или. `builder2`</span><span class="sxs-lookup"><span data-stu-id="ceb7f-248">This method accepts the objects listed above for the `builder1` or `builder2` parameter.</span></span>  
  
 <span data-ttu-id="ceb7f-249">Дополнительные сведения см. в <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> разделе операторы и. <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A></span><span class="sxs-lookup"><span data-stu-id="ceb7f-249">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ceb7f-250">При объединении <xref:System.Speech.Recognition.Choices> объектов <xref:System.Speech.Recognition.GrammarBuilder> и, содержащих <xref:System.Speech.Recognition.SemanticResultValue> экземпляры <xref:System.Speech.Recognition.SemanticResultKey> или с другими элементами грамматики, следует избегать создания повторяющихся семантических элементов с одинаковым именем ключа или несколькими семантическими элементами, которые может периодически изменять <xref:System.Speech.Recognition.SemanticValue.Value%2A> свойство <xref:System.Speech.Recognition.SemanticValue> объекта.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-250">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="ceb7f-251">Распознаватель речи может вызвать исключение, если в них возникают такие обстоятельства.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-251">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="ceb7f-252">В следующем примере создается Грамматика распознавания речи, которая может распознать две фразы: «создать *Цвет*фона» и «задать фон до *цвета*», где *Цвет* выбирается из набора цветов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-252">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="ceb7f-253">Для создания окончательной грамматики, например [строк](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>и <xref:System.Speech.Recognition.GrammarBuilder> объектов, используются различные типы.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-253">Various types are used to build the final grammar, such as [String](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="ceb7f-254">Операторы явного приведения в вызовах <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> методов являются необязательными.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-254">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder, string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder, string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (builder As GrammarBuilder, phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder, System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.GrammarBuilder * string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (builder, phrase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="ceb7f-255">Первый элемент грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-255">The first grammar element.</span></span></param>
        <param name="phrase"><span data-ttu-id="ceb7f-256">Второй элемент грамматики, который представляет последовательность слов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-256">The second grammar element, which represents a sequence of words.</span></span></param>
        <summary><span data-ttu-id="ceb7f-257">Создает новый объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />, содержащий объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />, после которого следует фраза.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-257">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object followed by a phrase.</span></span></summary>
        <returns><span data-ttu-id="ceb7f-258">Объект <see cref="T:System.Speech.Recognition.GrammarBuilder" /> для последовательности элементов <paramref name="builder" />, за которой следует элемент <paramref name="phrase" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-258">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> element followed by the <paramref name="phrase" /> element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-259"><xref:System.Speech.Recognition.GrammarBuilder>поддерживает неявные преобразования из следующих классов:</span><span class="sxs-lookup"><span data-stu-id="ceb7f-259"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="ceb7f-260">Этот метод принимает перечисленные выше объекты для `builder` параметра.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-260">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="ceb7f-261">Дополнительные сведения см. в <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> разделе операторы и. <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A></span><span class="sxs-lookup"><span data-stu-id="ceb7f-261">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb7f-262">В следующем примере создается Грамматика распознавания речи, которая может распознать две фразы: «создать *Цвет*фона» и «задать фон до *цвета*», где *Цвет* выбирается из набора цветов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-262">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="ceb7f-263">Для создания окончательной грамматики, например [строк](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>и <xref:System.Speech.Recognition.GrammarBuilder> объектов, используются различные типы.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-263">Various types are used to build the final grammar, such as [String](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="ceb7f-264">Операторы явного приведения в вызовах <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> методов являются необязательными.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-264">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (string phrase, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(string phrase, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.String,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (phrase As String, builder As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::String ^ phrase, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member Add : string * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (phrase, builder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="ceb7f-265">Первый элемент грамматики, который представляет последовательность слов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-265">The first grammar element, which represents a sequence of words.</span></span></param>
        <param name="builder"><span data-ttu-id="ceb7f-266">Второй элемент grammar.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-266">The second grammar element.</span></span></param>
        <summary><span data-ttu-id="ceb7f-267">Создает новый объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />, содержащий фразу, после которой следует объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-267">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a phrase followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="ceb7f-268">Объект <see cref="T:System.Speech.Recognition.GrammarBuilder" /> для последовательности элементов <paramref name="phrase" />, за которой следует элемент <paramref name="builder" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-268">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="phrase" /> element followed by the <paramref name="builder" /> element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-269"><xref:System.Speech.Recognition.GrammarBuilder>поддерживает неявные преобразования из следующих классов:</span><span class="sxs-lookup"><span data-stu-id="ceb7f-269"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="ceb7f-270">Этот метод принимает перечисленные выше объекты для `builder` параметра.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-270">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="ceb7f-271">Дополнительные сведения см. в <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> разделе операторы и. <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A></span><span class="sxs-lookup"><span data-stu-id="ceb7f-271">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb7f-272">В следующем примере создается Грамматика распознавания речи, которая может распознать две фразы: «создать *Цвет*фона» и «задать фон до *цвета*», где *Цвет* выбирается из набора цветов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-272">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="ceb7f-273">Для создания окончательной грамматики, например [строк](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>и <xref:System.Speech.Recognition.GrammarBuilder> объектов, используются различные типы.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-273">Various types are used to build the final grammar, such as [String](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="ceb7f-274">Операторы явного приведения в вызовах <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> методов являются необязательными.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-274">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Append">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ceb7f-275">Добавляет элемент грамматики к текущей последовательности элементов грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-275">Appends a grammar element to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-276">Используйте эти методы, чтобы присоединить элементы грамматики <xref:System.Speech.Recognition.GrammarBuilder>к существующему.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-276">Use these methods to append grammar elements to an existing <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="ceb7f-277">При создании элементов грамматики их можно добавить к существующему построителю, чтобы поочередно разрабатывать ограничения для грамматики распознавания речи.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-277">As you create grammar elements, you can append them to the existing builder to progressively develop the constraints for a speech recognition grammar.</span></span> <span data-ttu-id="ceb7f-278">Каждый элемент добавляется в конец текущей последовательности элементов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-278">Each element is added to the end of the current sequence of elements.</span></span>  
  
 <span data-ttu-id="ceb7f-279"><xref:System.Speech.Recognition.GrammarBuilder>Этот метод имеет перегрузки для добавления объектов <xref:System.Speech.Recognition.Choices>, <xref:System.String> <xref:System.Speech.Recognition.SemanticResultKey>,, и <xref:System.Speech.Recognition.SemanticResultValue> .</span><span class="sxs-lookup"><span data-stu-id="ceb7f-279">This method has overloads for appending <xref:System.Speech.Recognition.GrammarBuilder>, <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, and <xref:System.Speech.Recognition.SemanticResultValue> objects.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ceb7f-280">Распознаватель речи может вызывать исключение при использовании грамматики распознавания речи, содержащей повторяющиеся семантические элементы с одинаковым именем ключа или несколькими семантическими элементами, которые могут периодически изменять значение одного и того же семантического элемента.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-280">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> 
  
 <span data-ttu-id="ceb7f-281">Дополнительные сведения о создании и использовании грамматик распознавания речи см. в разделе [Распознавание речи](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) и [Создание грамматик граммарбуилдер](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="ceb7f-281">For more information about building and using speech recognition grammars, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) and [Creating GrammarBuilder Grammars](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.Choices alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.Choices alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (alternateChoices As Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::Choices ^ alternateChoices);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.Choices -&gt; unit" Usage="grammarBuilder.Append alternateChoices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="alternateChoices"><span data-ttu-id="ceb7f-282">Набор вариантов для добавления.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-282">The set of alternatives to append.</span></span></param>
        <summary><span data-ttu-id="ceb7f-283">Добавляет набор альтернатив к текущей последовательности элементов грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-283">Appends a set of alternatives to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-284">`alternateChoices`добавляется в конец текущей последовательности элементов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-284">`alternateChoices` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ceb7f-285">При добавлении <xref:System.Speech.Recognition.Choices> объектов, содержащих <xref:System.Speech.Recognition.SemanticResultValue> экземпляры или <xref:System.Speech.Recognition.SemanticResultKey> , в <xref:System.Speech.Recognition.GrammarBuilder> объект следует избегать создания повторяющихся семантических элементов с одинаковым именем ключа или несколькими семантическими элементами, которые могут повторяться. <xref:System.Speech.Recognition.SemanticValue.Value%2A> измените свойство<xref:System.Speech.Recognition.SemanticValue> объекта.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-285">When you append <xref:System.Speech.Recognition.Choices> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="ceb7f-286">Распознаватель речи может вызвать исключение, если в них возникают такие обстоятельства.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-286">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="ceb7f-287">В следующем примере создается Грамматика распознавания речи для таких фраз, как "позвонить в Джеймс at" и "вызвать Anne на своем сотовом телефоне", где слово "Phone" является необязательным.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-287">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="ceb7f-288">В примере демонстрируется использование <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-288">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (builder As GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.GrammarBuilder -&gt; unit" Usage="grammarBuilder.Append builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="ceb7f-289">Элемент грамматики для добавления.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-289">The grammar element to append.</span></span></param>
        <summary><span data-ttu-id="ceb7f-290">Добавляет элемент грамматики к текущей последовательности элементов грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-290">Appends a grammar element to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-291">`builder`добавляется в конец текущей последовательности элементов грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-291">`builder` is added to the end of the current sequence of grammar elements.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ceb7f-292">При добавлении <xref:System.Speech.Recognition.GrammarBuilder> объектов, содержащих <xref:System.Speech.Recognition.SemanticResultValue> экземпляры или <xref:System.Speech.Recognition.SemanticResultKey> , в <xref:System.Speech.Recognition.GrammarBuilder> объект следует избегать создания повторяющихся семантических элементов с одинаковым именем ключа или несколькими семантическими элементами, которые могут повторяться. <xref:System.Speech.Recognition.SemanticValue.Value%2A> измените свойство<xref:System.Speech.Recognition.SemanticValue> объекта.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-292">When you append <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="ceb7f-293">Распознаватель речи может вызвать исключение, если в них возникают такие обстоятельства.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-293">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="ceb7f-294">В следующем примере создается Грамматика распознавания речи для таких фраз, как "позвонить в Джеймс at" и "вызвать Anne на своем сотовом телефоне", где слово "Phone" является необязательным.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-294">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="ceb7f-295"><xref:System.Speech.Recognition.GrammarBuilder>объекты <xref:System.Speech.Recognition.Choices> и используются для создания грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-295"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="ceb7f-296">В примере демонстрируется использование <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-296">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.SemanticResultKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.SemanticResultKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (key As SemanticResultKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::SemanticResultKey ^ key);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.SemanticResultKey -&gt; unit" Usage="grammarBuilder.Append key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="ceb7f-297">Семантический ключ для добавления.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-297">The semantic key to append.</span></span></param>
        <summary><span data-ttu-id="ceb7f-298">Добавляет семантический ключ к текущей последовательности элементов грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-298">Appends a semantic key to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-299">`key`добавляется в конец текущей последовательности элементов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-299">`key` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ceb7f-300">При добавлении <xref:System.Speech.Recognition.SemanticResultValue> <xref:System.Speech.Recognition.GrammarBuilder> объектов или <xref:System.Speech.Recognition.SemanticResultKey> к объекту следует избегать создания повторяющихся семантических элементов с одинаковым именем ключа или <xref:System.Speech.Recognition.SemanticValue.Value%2A> несколькими семантическими элементами, которые могут периодически изменять свойство элемента <xref:System.Speech.Recognition.SemanticValue> объект.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-300">When you append  <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="ceb7f-301">Распознаватель речи может вызвать исключение, если в них возникают такие обстоятельства.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-301">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="ceb7f-302">Следующий пример является частью консольного приложения для выбора исходных и целевых городов для рейса.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-302">The following example is part of a console application for choosing origin and destination cities for a flight.</span></span> <span data-ttu-id="ceb7f-303">Приложение распознает такие фразы, как «я хочу полета из Майами в Чикаго».</span><span class="sxs-lookup"><span data-stu-id="ceb7f-303">The application recognizes phrases such as "I want to fly from Miami to Chicago."</span></span> <span data-ttu-id="ceb7f-304">Обработчик <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> события <xref:System.Speech.Recognition.SemanticResultValue> использует для извлечения кода аэропорта, указанного в, для исходных и целевых городов. <xref:System.Speech.Recognition.SemanticResultKey></span><span class="sxs-lookup"><span data-stu-id="ceb7f-304">The handler for the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> event uses the <xref:System.Speech.Recognition.SemanticResultKey> to extract the airport code specified in the <xref:System.Speech.Recognition.SemanticResultValue> for the origin and destination cities.</span></span>  
  
```csharp  
using System;  
using System.Speech.Recognition;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an in-process speech recognition engine.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine())  
      {  
  
        // Create a Choices object and add  cities and airport codes  
        // using SemanticResultValue objects.  
        Choices cities = new Choices();  
        cities.Add(new SemanticResultValue("Chicago", "ORD"));  
        cities.Add(new SemanticResultValue("Boston", "BOS"));  
        cities.Add(new SemanticResultValue("Miami", "MIA"));  
        cities.Add(new SemanticResultValue("Dallas", "DFW"));  
  
        // Build the phrase and add SemanticResultKeys.  
        GrammarBuilder chooseCities = new GrammarBuilder();  
        chooseCities.Append("I want to fly from");  
        chooseCities.Append(new SemanticResultKey("origin", cities));  
        chooseCities.Append("to");  
        chooseCities.Append(new SemanticResultKey("destination", cities));  
  
        // Build a Grammar object from the GrammarBuilder.  
        Grammar bookFlight = new Grammar(chooseCities);  
        bookFlight.Name = "Book Flight";  
  
        // Add a handler for the LoadGrammarCompleted event.  
        recognizer.LoadGrammarCompleted +=   
          new EventHandler<LoadGrammarCompletedEventArgs>(recognizer_LoadGrammarCompleted);  
  
        // Add a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=   
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Configure the input to the recognizer.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Load the grammar object and start recognition.  
        recognizer.LoadGrammarAsync(bookFlight);  
        recognizer.RecognizeAsync();  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
  
    // Handle the LoadGrammarCompleted event.  
    static void recognizer_LoadGrammarCompleted(object sender, LoadGrammarCompletedEventArgs e)  
    {  
      Console.WriteLine("Grammar loaded: " + e.Grammar.Name);  
      Console.WriteLine();  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Speech recognized:  " + e.Result.Text);  
      Console.WriteLine();  
      Console.WriteLine("Semantic results:");  
      Console.WriteLine("  The flight origin is " + e.Result.Semantics["origin"].Value);  
      Console.WriteLine("  The flight destination is " + e.Result.Semantics["destination"].Value);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.SemanticResultValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.SemanticResultValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (value As SemanticResultValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::SemanticResultValue ^ value);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.SemanticResultValue -&gt; unit" Usage="grammarBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ceb7f-305">Прибавляемое семантическое значение.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-305">The semantic value to append.</span></span></param>
        <summary><span data-ttu-id="ceb7f-306">Добавляет семантическое значение к текущей последовательности элементов грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-306">Appends a semantic value to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-307">`value`добавляется в конец текущей последовательности элементов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-307">`value` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ceb7f-308">При добавлении <xref:System.Speech.Recognition.SemanticResultValue> <xref:System.Speech.Recognition.GrammarBuilder> объектов или <xref:System.Speech.Recognition.SemanticResultKey> к объекту следует избегать создания повторяющихся семантических элементов с одинаковым именем ключа или <xref:System.Speech.Recognition.SemanticValue.Value%2A> несколькими семантическими элементами, которые могут периодически изменять свойство элемента <xref:System.Speech.Recognition.SemanticValue> объект.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-308">When you append  <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="ceb7f-309">Распознаватель речи может вызвать исключение, если в них возникают такие обстоятельства.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-309">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="ceb7f-310">Следующий пример является частью консольного приложения для выбора исходных и целевых городов для рейса.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-310">The following example is part of a console application for choosing origin and destination cities for a flight.</span></span> <span data-ttu-id="ceb7f-311">Приложение распознает такие фразы, как «я хочу полета из Майами в Чикаго».</span><span class="sxs-lookup"><span data-stu-id="ceb7f-311">The application recognizes phrases such as "I want to fly from Miami to Chicago."</span></span> <span data-ttu-id="ceb7f-312">Обработчик <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> события <xref:System.Speech.Recognition.SemanticResultValue> использует для извлечения кода аэропорта, указанного в, для исходных и целевых городов. <xref:System.Speech.Recognition.SemanticResultKey></span><span class="sxs-lookup"><span data-stu-id="ceb7f-312">The handler for the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> event uses the <xref:System.Speech.Recognition.SemanticResultKey> to extract the airport code specified in the <xref:System.Speech.Recognition.SemanticResultValue> for the origin and destination cities.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Recognition;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an in-process speech recognition engine.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine())  
      {  
  
        // Create GrammarBuilder objects and append SemanticResultValue objects   
        // that contain cities and airport codes.  
  
        GrammarBuilder chicago = new GrammarBuilder();  
        chicago.Append(new SemanticResultValue("Chicago", "ORD"));  
  
        GrammarBuilder boston = new GrammarBuilder();  
        boston.Append(new SemanticResultValue("Boston", "BOS"));  
  
        GrammarBuilder miami = new GrammarBuilder();  
        miami.Append(new SemanticResultValue("Miami", "MIA"));  
  
        GrammarBuilder dallas = new GrammarBuilder();  
        dallas.Append(new SemanticResultValue("Dallas", "DFW"));  
  
        // Create a Choices object and add the cities using implicit conversion from   
        // SemanticResultValue to GrammarBuilder.  
        Choices cities = new Choices();  
        cities.Add(new Choices(new GrammarBuilder[] { chicago, boston, miami, dallas }));  
  
        // Build the phrase and add SemanticResultKeys.  
        GrammarBuilder chooseCities = new GrammarBuilder();  
        chooseCities.Append("I want to fly from");  
        chooseCities.Append(new SemanticResultKey("origin", cities));  
        chooseCities.Append("to");  
        chooseCities.Append(new SemanticResultKey("destination", cities));  
  
        // Build a Grammar object from the GrammarBuilder.  
        Grammar bookFlight = new Grammar(chooseCities);  
        bookFlight.Name = "Book Flight";  
  
        // Add a handler for the LoadGrammarCompleted event.  
        recognizer.LoadGrammarCompleted +=   
          new EventHandler<LoadGrammarCompletedEventArgs>(recognizer_LoadGrammarCompleted);  
  
        // Add a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=   
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Configure the input to the recognizer.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Load the grammar object and start recognition.  
        recognizer.LoadGrammarAsync(bookFlight);  
        recognizer.RecognizeAsync();  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
    // Handle the LoadGrammarCompleted event.  
    static void recognizer_LoadGrammarCompleted(object sender, LoadGrammarCompletedEventArgs e)  
    {  
      Console.WriteLine("Grammar loaded: " + e.Grammar.Name);  
      Console.WriteLine();  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Speech recognized:  " + e.Result.Text);  
      Console.WriteLine();  
      Console.WriteLine("Semantic results:");  
      Console.WriteLine("  The flight origin is " + e.Result.Semantics["origin"].Value);  
      Console.WriteLine("  The flight destination is " + e.Result.Semantics["destination"].Value);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="member this.Append : string -&gt; unit" Usage="grammarBuilder.Append phrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="ceb7f-313">Последовательность слов для добавления.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-313">The sequence of words to append.</span></span></param>
        <summary><span data-ttu-id="ceb7f-314">Добавляет фразу к текущей последовательности элементов грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-314">Appends a phrase to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-315">`phrase`добавляется в конец текущей последовательности элементов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-315">`phrase` is added to the end of the current sequence of elements.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase, System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase, valuetype System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String, subsetMatchingCriteria As SubsetMatchingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase, System::Speech::Recognition::SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="F#" Value="member this.Append : string * System.Speech.Recognition.SubsetMatchingMode -&gt; unit" Usage="grammarBuilder.Append (phrase, subsetMatchingCriteria)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="subsetMatchingCriteria" Type="System.Speech.Recognition.SubsetMatchingMode" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="ceb7f-316">Последовательность слов для добавления.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-316">The sequence of words to append.</span></span></param>
        <param name="subsetMatchingCriteria"><span data-ttu-id="ceb7f-317">Соответствующий режим, используемый грамматикой для распознавания фразы.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-317">The matching mode the grammar uses to recognize the phrase.</span></span></param>
        <summary><span data-ttu-id="ceb7f-318">Добавляет элемент для подмножества фразы к текущей последовательности элементов грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-318">Appends an element for a subset of a phrase to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-319">Элемент подмножества добавляется в конец текущей последовательности элементов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-319">The subset element is added to the end of the current sequence of elements.</span></span> <span data-ttu-id="ceb7f-320">Дополнительные сведения о создании грамматики распознавания речи с помощью строк см. [в разделе Использование строк для создания грамматики граммарбуилдер](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="ceb7f-320">For more information about building a speech recognition grammar using strings, see [Using Strings to Create a GrammarBuilder Grammar](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
 <span data-ttu-id="ceb7f-321">Подробные сведения об использовании режимов сопоставления подмножеств см. в разделе <xref:System.Speech.Recognition.SubsetMatchingMode?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-321">For detailed information on the use of subset matching modes, see <xref:System.Speech.Recognition.SubsetMatchingMode?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb7f-322">В следующем примере создается Грамматика распознавания речи для каждого <xref:System.Speech.Recognition.SubsetMatchingMode> значения.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-322">The following example creates a speech recognition grammar for each <xref:System.Speech.Recognition.SubsetMatchingMode> value.</span></span> <span data-ttu-id="ceb7f-323">Например, созданная грамматика `OrderedSubset` распознает фразы «3 4 5» и «1 3 5», и грамматика `Subsequence` распознает фразу «3 4 5», но не фразу «1 3 5».</span><span class="sxs-lookup"><span data-stu-id="ceb7f-323">For example, the generated grammar `OrderedSubset` recognizes the phrases, "three four five" and "one three five", and the grammar `Subsequence` recognizes the phrase "three four five", but not the phrase, "one three five".</span></span>  
  
```csharp  
  
private Grammar[] CreateSubsetMatchTest()  
{  
  List<Grammar> grammars = new List<Grammar>(4);  
  
  string phrase = "one two three four five six";  
  foreach (SubsetMatchingMode mode in  
    Enum.GetValues(typeof(SubsetMatchingMode)))  
  {  
    GrammarBuilder gb = new GrammarBuilder();  
    gb.Append(phrase, mode);  
  
    Grammar grammar = new Grammar(gb);  
    grammar.Name = mode.ToString();  
    grammars.Add(grammar);  
  }  
  
  return grammars.ToArray();  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.GrammarBuilder builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.GrammarBuilder builder, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (builder As GrammarBuilder, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::GrammarBuilder ^ builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.GrammarBuilder * int * int -&gt; unit" Usage="grammarBuilder.Append (builder, minRepeat, maxRepeat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="ceb7f-324">Повторяющийся элемент грамматики для добавления.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-324">The repeated grammar element to append.</span></span></param>
        <param name="minRepeat"><span data-ttu-id="ceb7f-325">Минимальное количество сопоставлений входных данных элементу, определенному в <paramref name="builder" />, при котором засчитывается совпадение.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-325">The minimum number of times that input matching the element defined by <paramref name="builder" /> must occur to constitute a match.</span></span></param>
        <param name="maxRepeat"><span data-ttu-id="ceb7f-326">Максимальное количество сопоставлений входных данных элементу, определенному в <paramref name="builder" />, при котором засчитывается совпадение.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-326">The maximum number of times that input matching the element defined by <paramref name="builder" /> can occur to constitute a match.</span></span></param>
        <summary><span data-ttu-id="ceb7f-327">Добавляет повторный элемент грамматики к текущей последовательности элементов грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-327">Appends a repeated grammar element to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-328">Значение `minRepeat` должно быть больше или равно 0 и меньше или равно `maxRepeat`значению.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-328">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ceb7f-329">При добавлении <xref:System.Speech.Recognition.GrammarBuilder> объектов, содержащих <xref:System.Speech.Recognition.SemanticResultValue> экземпляры или <xref:System.Speech.Recognition.SemanticResultKey> , в <xref:System.Speech.Recognition.GrammarBuilder> объект следует избегать создания повторяющихся семантических элементов с одинаковым именем ключа или несколькими семантическими элементами, которые могут повторяться. <xref:System.Speech.Recognition.SemanticValue.Value%2A> измените свойство<xref:System.Speech.Recognition.SemanticValue> объекта.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-329">When you append <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="ceb7f-330">Распознаватель речи может вызвать исключение, если в них возникают такие обстоятельства.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-330">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="ceb7f-331">В следующем примере создается Грамматика распознавания речи для таких фраз, как "позвонить в Джеймс at" и "вызвать Anne на своем сотовом телефоне", где слово "Phone" является необязательным.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-331">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="ceb7f-332"><xref:System.Speech.Recognition.GrammarBuilder>объекты <xref:System.Speech.Recognition.Choices> и используются для создания грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-332"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="ceb7f-333">В примере демонстрируется использование <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-333">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="member this.Append : string * int * int -&gt; unit" Usage="grammarBuilder.Append (phrase, minRepeat, maxRepeat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="ceb7f-334">Повторяющаяся последовательность слов для добавления.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-334">The repeated sequence of words to append.</span></span></param>
        <param name="minRepeat"><span data-ttu-id="ceb7f-335">Минимальное количество сопоставлений входных данных <paramref name="phrase" />, при котором засчитывается совпадение.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-335">The minimum number of times that input matching <paramref name="phrase" /> must occur to constitute a match.</span></span></param>
        <param name="maxRepeat"><span data-ttu-id="ceb7f-336">Максимальное количество сопоставлений входных данных <paramref name="phrase" />, при котором засчитывается совпадение.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-336">The maximum number of times that input matching <paramref name="phrase" /> can occur to constitute a match.</span></span></param>
        <summary><span data-ttu-id="ceb7f-337">Добавляет повторную фразу к текущей последовательности элементов грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-337">Appends a repeated phrase to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-338">Значение `minRepeat` должно быть больше или равно 0 и меньше или равно `maxRepeat`значению.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-338">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb7f-339">В следующем примере создается Грамматика распознавания речи для таких фраз, как "позвонить в Джеймс at" и "вызвать Anne на своем сотовом телефоне", где слово "Phone" является необязательным.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-339">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="ceb7f-340"><xref:System.Speech.Recognition.GrammarBuilder>объекты <xref:System.Speech.Recognition.Choices> и используются для создания грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-340"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="ceb7f-341">В примере демонстрируется использование <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-341">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendDictation">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ceb7f-342">Добавляет грамматику диктовки к текущей последовательности элементов грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-342">Appends a dictation grammar to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-343">Методы позволяют добавлять грамматику диктовки в качестве правила <xref:System.Speech.Recognition.GrammarBuilder>в. <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A></span><span class="sxs-lookup"><span data-stu-id="ceb7f-343">The <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A> methods allow you to append a dictation grammar as a rule to a <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="ceb7f-344">Дополнительные сведения о грамматиках диктовки см. в <xref:System.Speech.Recognition.DictationGrammar>разделе.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-344">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendDictation">
      <MemberSignature Language="C#" Value="public void AppendDictation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendDictation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendDictation ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendDictation();" />
      <MemberSignature Language="F#" Value="member this.AppendDictation : unit -&gt; unit" Usage="grammarBuilder.AppendDictation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ceb7f-345">Добавляет грамматику диктовки по умолчанию к текущей последовательности элементов грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-345">Appends the default dictation grammar to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-346">Дополнительные сведения о грамматиках диктовки см. в <xref:System.Speech.Recognition.DictationGrammar>разделе.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-346">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb7f-347">В следующем примере создается Грамматика распознавания речи, включающая диктовку.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-347">The following example creates a speech recognition grammar that incorporates dictation.</span></span>  
  
```csharp  
  
GrammarBuilder builder = new GrammarBuilder();  
builder.Append("begin");  
builder.AppendDictation();  
builder.Append("end");  
Grammar grammarWithDictation = new Grammar(builder);  
grammarWithDictation.Name = "Grammar with Dictation";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DictationGrammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendDictation">
      <MemberSignature Language="C#" Value="public void AppendDictation (string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendDictation(string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendDictation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendDictation (category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendDictation(System::String ^ category);" />
      <MemberSignature Language="F#" Value="member this.AppendDictation : string -&gt; unit" Usage="grammarBuilder.AppendDictation category" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="category"><span data-ttu-id="ceb7f-348">Категория грамматики диктовки для добавления.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-348">The category of the dictation grammar to append.</span></span></param>
        <summary><span data-ttu-id="ceb7f-349">Добавляет указанную грамматику диктовки к текущей последовательности элементов грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-349">Appends the specified dictation grammar to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-350">Чтобы использовать грамматику диктовки, присвойте `category` параметру значение `spelling`.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-350">To use the spelling dictation grammar, set `category` to `spelling`.</span></span>  
  
 <span data-ttu-id="ceb7f-351">Дополнительные сведения о грамматиках диктовки см. в <xref:System.Speech.Recognition.DictationGrammar>разделе.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-351">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb7f-352">В следующем примере создается Грамматика распознавания речи, которая включает грамматические правила диктовки орфографии.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-352">The following example creates a speech recognition grammar that incorporates the spelling dictation grammar rules.</span></span>  
  
```csharp  
  
GrammarBuilder builder = new GrammarBuilder();  
builder.Append("begin");  
builder.AppendDictation("spelling");  
builder.Append("end");  
Grammar grammarWithDictation = new Grammar(builder);  
grammarWithDictation.Name = "Grammar with Dictation";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DictationGrammar" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendRuleReference">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ceb7f-353">Добавляет файл грамматики или правило грамматики к текущей последовательности элементов грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-353">Appends a grammar file or a grammar rule to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-354"><xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> Методы могут добавлять файл грамматики или грамматическое правило из файла.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-354">The <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> methods can append a grammar file or a grammar rule from a file.</span></span> <span data-ttu-id="ceb7f-355">Эти методы позволяют приложениям использовать предварительно развернутые или общедоступные грамматические правила.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-355">These methods allow applications to make use of pre-deployed or publicly available grammar rules.</span></span> <span data-ttu-id="ceb7f-356">Приложение должно иметь доступ на чтение к расположению указанных файлов грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-356">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="ceb7f-357">Эти методы могут читать грамматику распознавания речи в следующих форматах.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-357">These methods can read a speech recognition grammar from the following formats.</span></span>  
  
-   <span data-ttu-id="ceb7f-358">XML-файлы форматирования, соответствующие [спецификации грамматики распознавания речи W3C (SRGS), версия 1,0](https://go.microsoft.com/fwlink/?LinkId=201761)</span><span class="sxs-lookup"><span data-stu-id="ceb7f-358">XML-format files that conform to the W3C [Speech Recognition Grammar Specification (SRGS) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)</span></span>  
  
-   <span data-ttu-id="ceb7f-359">Двоичные файлы, соответствующие грамматике в двоичном формате для распознавания речи Майкрософт (расширение файла. cfg)</span><span class="sxs-lookup"><span data-stu-id="ceb7f-359">Binary files that conform to the Microsoft Speech Recognition Grammar Binary Format (.cfg file extension)</span></span>  
  
 <span data-ttu-id="ceb7f-360">Компиляция файла грамматики XML-формата в двоичный файл грамматики с расширением CFG может сократить время, затраченное на поиск совпадения, особенно если для грамматики требуется распознавание большого количества слов и фраз.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-360">Compiling an XML-format SRGS grammar file to a binary grammar file with the .cfg extension can reduce the time consumed by searches for a match, especially if the grammar requires recognition of a large number of words and phrases.</span></span> <span data-ttu-id="ceb7f-361">Дополнительные сведения о компиляции грамматики SRGS в двоичный формат CFG см. в <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler>разделе.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-361">For information about compiling SRGS grammars to the CFG binary format, see <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendRuleReference">
      <MemberSignature Language="C#" Value="public void AppendRuleReference (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendRuleReference(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendRuleReference (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendRuleReference(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.AppendRuleReference : string -&gt; unit" Usage="grammarBuilder.AppendRuleReference path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="ceb7f-362">Путь или универсальный идентификатор ресурса (URI) файла, который описывает грамматику распознавания речи в поддерживаемом формате.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-362">The path or Universal Resource Identifier (URI) of the file that describes a speech recognition grammar in a supported format.</span></span></param>
        <summary><span data-ttu-id="ceb7f-363">Добавляет файл определения грамматики к текущей последовательности элементов грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-363">Appends a grammar definition file to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-364">URI, предоставленный `path` аргументом, может быть локальным или удаленным.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-364">The URI provided by the `path` argument may be local or remote.</span></span> <span data-ttu-id="ceb7f-365">Приложение должно иметь доступ на чтение к расположению указанных файлов грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-365">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="ceb7f-366">Представление спецификации грамматики распознавания речи W3C (SRGS) может определять корневое правило.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-366">A W3C Speech Recognition Grammar Specification (SRGS) representation can define a root rule.</span></span> <span data-ttu-id="ceb7f-367">Этот метод добавляет грамматику, начиная с ее корневого правила, к текущей последовательности элементов грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-367">This method appends the grammar, beginning with its root rule, to the current sequence of grammar elements.</span></span> <span data-ttu-id="ceb7f-368">Чтобы добавить определенное грамматическое правило, используйте <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-368">To append a specific grammar rule, use the <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb7f-369">В следующем C# примере создается Грамматика распознавания речи, которая использует правило с `Cities` именем в локальном файле SRGS, городах. грксмл.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-369">The following C# example creates a speech recognition grammar that uses the rule named `Cities` in a local SRGS file, cities.grxml.</span></span> <span data-ttu-id="ceb7f-370">Содержимое файла городов. грксмл отображается под примером C# кода.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-370">The content of the cities.grxml file appears below the C# code example.</span></span>  
  
```csharp  
  
private static Grammar CreateCitiesGrammar1()  
{  
  GrammarBuilder builder = new GrammarBuilder();  
  builder.AppendRuleReference("file://c:/temp/cities.grxml");  
  
  Grammar citiesGrammar = new Grammar(builder);  
  citiesGrammar.Name = "Cities Grammar 1";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-16" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.grxml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item> Seattle </item>  
      <item> Los Angeles </item>  
      <item> New York </item>  
      <item> Miami </item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendRuleReference">
      <MemberSignature Language="C#" Value="public void AppendRuleReference (string path, string rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendRuleReference(string path, string rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendRuleReference (path As String, rule As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendRuleReference(System::String ^ path, System::String ^ rule);" />
      <MemberSignature Language="F#" Value="member this.AppendRuleReference : string * string -&gt; unit" Usage="grammarBuilder.AppendRuleReference (path, rule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="rule" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="ceb7f-371">Путь к файлу или универсальный идентификатор ресурса (URI) файла, который описывает грамматику распознавания речи в поддерживаемом формате.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-371">The file path or Universal Resource Identifier (URI) of the file that describes a speech recognition grammar in a supported format.</span></span></param>
        <param name="rule"><span data-ttu-id="ceb7f-372">Идентификатор добавляемого правила или значение <see langword="null" />, чтобы добавить корневое правило файла грамматики по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-372">The identifier of the rule to append, or <see langword="null" /> to append the default root rule of the grammar file.</span></span></param>
        <summary><span data-ttu-id="ceb7f-373">Добавляет указанное правило файла определения грамматики к текущей последовательности элементов грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-373">Appends the specified rule of a grammar definition file to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-374">URI, предоставленный `path` аргументом, может быть локальным или удаленным.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-374">The URI provided by the `path` argument may be local or remote.</span></span> <span data-ttu-id="ceb7f-375">Приложение должно иметь доступ на чтение к расположению указанных файлов грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-375">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="ceb7f-376">С помощью <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> метода можно добавить файл грамматики, начиная с его корневого правила.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-376">You can use the use the <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> method to append a grammar file beginning with its root rule.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb7f-377">В следующем C# примере создается Грамматика распознавания речи, которая использует правило с `Cities` именем в локальном файле SRGS, городах. грксмл.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-377">The following C# example creates a speech recognition grammar that uses the rule named `Cities` in a local SRGS file, cities.grxml.</span></span> <span data-ttu-id="ceb7f-378">Содержимое файла городов. грксмл отображается под примером C# кода.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-378">The content of the cities.grxml file appears below the C# code example.</span></span>  
  
```csharp  
  
private static Grammar CreateCitiesGrammar2()  
{  
  GrammarBuilder builder = new GrammarBuilder();  
  builder.Append("Does");  
  builder.AppendRuleReference(@"c:\temp\cities.grxml", "Cities");  
  builder.Append("have a shuttle");  
  
  Grammar citiesGrammar = new Grammar(builder);  
  citiesGrammar.Name = "Cities Grammar 2";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.grxml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item> Seattle </item>  
      <item> Los Angeles </item>  
      <item> New York </item>  
      <item> Miami </item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendWildcard">
      <MemberSignature Language="C#" Value="public void AppendWildcard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendWildcard() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendWildcard ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendWildcard();" />
      <MemberSignature Language="F#" Value="member this.AppendWildcard : unit -&gt; unit" Usage="grammarBuilder.AppendWildcard " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ceb7f-379">Добавляет элемент грамматики распознавания, соответствующий любой входной информации для текущей последовательности элементов грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-379">Appends a recognition grammar element that matches any input to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-380">Элемент-шаблон добавляется в конец текущей последовательности элементов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-380">The wildcard element is added to the end of the current sequence of elements.</span></span>  
  
 <span data-ttu-id="ceb7f-381">Подстановочный элемент соответствует любому произнесенному слову.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-381">The wildcard element matches any spoken word.</span></span> <span data-ttu-id="ceb7f-382">Он не соответствует фоновым шумам или тишине.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-382">It does not match background noise or silence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb7f-383">В следующем примере создается грамматика, которая принимает ввод пароля в качестве подстановочного знака.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-383">The following example creates a grammar that accepts password input as a wildcard.</span></span> <span data-ttu-id="ceb7f-384">В этом примере обработчик <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType> событий присоединяется к грамматике, которая проверяет ввод пароля.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-384">The example attaches a <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType> event handler to the grammar that validates the password input.</span></span>  
  
```csharp  
private Grammar CreatePasswordGrammar()  
{  
  GrammarBuilder wildcardBuilder = new GrammarBuilder();  
  wildcardBuilder.AppendWildcard();  
  SemanticResultKey passwordKey =  
    new SemanticResultKey("Password", wildcardBuilder);  
  
  GrammarBuilder passwordBuilder =  
    new GrammarBuilder("My Password is");  
  passwordBuilder.Append(passwordKey);  
  
  Grammar passwordGrammar = new Grammar(passwordBuilder);  
  passwordGrammar.Name = "Password input";  
  
  passwordGrammar.SpeechRecognized +=  
    new EventHandler<SpeechRecognizedEventArgs>(  
      PasswordInputHandler);  
  
  return passwordGrammar;  
}  
  
// Handle the SpeechRecognized event for the password grammar.  
private void PasswordInputHandler(object sender, SpeechRecognizedEventArgs e)  
{  
  if (e.Result == null) return;  
  
  RecognitionResult result = e.Result;  
  SemanticValue semantics = e.Result.Semantics;  
  
  if (semantics.ContainsKey("Password"))  
  {  
    RecognizedAudio passwordAudio =  
      result.GetAudioForWordRange(  
        result.Words[3], result.Words[result.Words.Count - 1]);  
  
    if (IsValidPassword(passwordAudio))  
    {  
      Console.WriteLine("Password accepted.");  
  
      // Add code to handle a valid password here.  
    }  
    else  
    {  
      Console.WriteLine("Invalid password.");  
  
      // Add code to handle an invalid password here.  
    }  
  }  
}  
  
// Validate the password input.   
private bool IsValidPassword(RecognizedAudio passwordAudio)  
{  
  Console.WriteLine("Validating password.");  
  
  // Add password validation code here.  
  
  return false;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.GrammarBuilder.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo with get, set" Usage="System.Speech.Recognition.GrammarBuilder.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ceb7f-385">Получает или задает язык и региональные параметры грамматики распознавания речи.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-385">Gets or sets the culture of the speech recognition grammar.</span></span></summary>
        <value><span data-ttu-id="ceb7f-386">Язык и региональные параметры <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-386">The culture of the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span></span> <span data-ttu-id="ceb7f-387">По умолчанию — свойство <see cref="P:System.Threading.Thread.CurrentUICulture" /> выполняющего потока.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-387">The default is the executing thread's <see cref="P:System.Threading.Thread.CurrentUICulture" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-388"><xref:System.Speech.Recognition.Grammar.%23ctor%2A> Конструктор<xref:System.Speech.Recognition.Grammar> создает объект, который может использоваться распознавателем речи соответствующего языка и региональных параметров.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-388">The <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructor creates a <xref:System.Speech.Recognition.Grammar> object that can be used by a speech recognizer of the corresponding culture.</span></span> <span data-ttu-id="ceb7f-389"><xref:System.Speech.Recognition.GrammarBuilder.Culture%2A> Только свойство<xref:System.Speech.Recognition.GrammarBuilder> объекта, предоставленное в качестве параметра для конструктора грамматики, используется для задания языка и региональных параметров в результирующей грамматике распознавания речи.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-389">Only the <xref:System.Speech.Recognition.GrammarBuilder.Culture%2A> property of the <xref:System.Speech.Recognition.GrammarBuilder> that is provided as the parameter to the Grammar constructor is used to set the culture of the resulting speech recognition grammar.</span></span>  
  
 <span data-ttu-id="ceb7f-390">Microsoft Windows и API System. Speech принимают все допустимые коды языковых стран.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-390">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="ceb7f-391">Чтобы выполнить распознавание речи с использованием языка, указанного `Culture` в свойстве, необходимо установить модуль распознавания речи, поддерживающий этот код языка и страны.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-391">To perform speech recognition using the language specified in the `Culture` property, a speech recognition engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="ceb7f-392">Модули распознавания речи, поставляемые вместе с Microsoft Windows 7, работают со следующими кодами языковых стран.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-392">The speech recognition engines that shipped with Microsoft Windows 7 work with the following language-country codes.</span></span>  
  
-   <span data-ttu-id="ceb7f-393">EN-GB.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-393">en-GB.</span></span> <span data-ttu-id="ceb7f-394">Английский (Великобритания)</span><span class="sxs-lookup"><span data-stu-id="ceb7f-394">English (United Kingdom)</span></span>  
  
-   <span data-ttu-id="ceb7f-395">EN-US.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-395">en-US.</span></span> <span data-ttu-id="ceb7f-396">Английский (США)</span><span class="sxs-lookup"><span data-stu-id="ceb7f-396">English (United States)</span></span>  
  
-   <span data-ttu-id="ceb7f-397">de-DE.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-397">de-DE.</span></span> <span data-ttu-id="ceb7f-398">Немецкий (Германия)</span><span class="sxs-lookup"><span data-stu-id="ceb7f-398">German (Germany)</span></span>  
  
-   <span data-ttu-id="ceb7f-399">ES-ES.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-399">es-ES.</span></span> <span data-ttu-id="ceb7f-400">Испанский (Испания)</span><span class="sxs-lookup"><span data-stu-id="ceb7f-400">Spanish (Spain)</span></span>  
  
-   <span data-ttu-id="ceb7f-401">fr-FR.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-401">fr-FR.</span></span> <span data-ttu-id="ceb7f-402">Французский (Франция)</span><span class="sxs-lookup"><span data-stu-id="ceb7f-402">French (France)</span></span>  
  
-   <span data-ttu-id="ceb7f-403">ja-JP.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-403">ja-JP.</span></span> <span data-ttu-id="ceb7f-404">Японский (Япония)</span><span class="sxs-lookup"><span data-stu-id="ceb7f-404">Japanese (Japan)</span></span>  
  
-   <span data-ttu-id="ceb7f-405">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-405">zh-CN.</span></span> <span data-ttu-id="ceb7f-406">Китайский (Китай)</span><span class="sxs-lookup"><span data-stu-id="ceb7f-406">Chinese (China)</span></span>  
  
-   <span data-ttu-id="ceb7f-407">zh-TW.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-407">zh-TW.</span></span> <span data-ttu-id="ceb7f-408">Китайский (Тайвань)</span><span class="sxs-lookup"><span data-stu-id="ceb7f-408">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="ceb7f-409">Также разрешены двухбуквенный код языка, например "en", "fr" или "ES".</span><span class="sxs-lookup"><span data-stu-id="ceb7f-409">Two-letter language codes such as "en", "fr", or "es" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb7f-410">В следующем примере создается Грамматика распознавания речи для упорядочивания пиццы до четырех.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-410">The following example creates a speech recognition grammar for ordering a pizza with up to four toppings.</span></span> <span data-ttu-id="ceb7f-411">В частности, <xref:System.Speech.Recognition.GrammarBuilder> язык и региональные параметры объекта задаются как английский (США).</span><span class="sxs-lookup"><span data-stu-id="ceb7f-411">It specifically sets the <xref:System.Speech.Recognition.GrammarBuilder> object's culture to English (United States).</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.RecognizerInfo" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
      </Docs>
    </Member>
    <Member MemberName="DebugShowPhrases">
      <MemberSignature Language="C#" Value="public string DebugShowPhrases { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DebugShowPhrases" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DebugShowPhrases As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DebugShowPhrases { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DebugShowPhrases : string" Usage="System.Speech.Recognition.GrammarBuilder.DebugShowPhrases" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ceb7f-412">Получает строку, которая отображает содержимое и структуру грамматики, содержащейся в <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-412">Gets a string that shows the contents and structure of the grammar contained by the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span></span></summary>
        <value><span data-ttu-id="ceb7f-413">Текущее содержимое и структура <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-413">The current content and structure of the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ceb7f-414">В следующем примере создается Грамматика распознавания речи для упорядочивания пиццы до четырех.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-414">The following example creates a speech recognition grammar for ordering a pizza with up to four toppings.</span></span> <span data-ttu-id="ceb7f-415">Перед созданием грамматики она <xref:System.Speech.Recognition.GrammarBuilder> записывает состояние в консоль.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-415">It writes the status of the <xref:System.Speech.Recognition.GrammarBuilder> to the console before creating the grammar.</span></span> <span data-ttu-id="ceb7f-416">Этот метод создает следующие выходные данные:</span><span class="sxs-lookup"><span data-stu-id="ceb7f-416">This method generates the following output:</span></span>  
  
-   `GrammarBuilder status: I would like a [cheese,mushroom,tomato,onion,anchovy,chic ken,pepperoni] and [cheese,mushroom,tomato,onion,anchovy,chicken,pepperoni] pizza`  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Write the contents and structure of the GrammarBuilder to the console.  
  Console.WriteLine("Grammar content and structure: {0}", gb.DebugShowPhrases);  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361640(v%3doffice.14)"><span data-ttu-id="ceb7f-417">Создание грамматик с помощью Граммарбуилдер</span><span class="sxs-lookup"><span data-stu-id="ceb7f-417">Create Grammars Using GrammarBuilder</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Addition">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ceb7f-418">Создает новый объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />, соответствующий последовательности из двух элементов грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-418">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that corresponds to a sequence of two grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-419">Порядок операндов определяет порядок элементов в новом <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-419">The order of the operands determines the order of the elements in the new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ceb7f-420">При объединении <xref:System.Speech.Recognition.Choices> объектов или <xref:System.Speech.Recognition.GrammarBuilder> , содержащих <xref:System.Speech.Recognition.SemanticResultValue> экземпляры или <xref:System.Speech.Recognition.SemanticResultKey> с другими элементами грамматики, рекомендуется соблюдать осторожность.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-420">Caution is recommended when combining <xref:System.Speech.Recognition.Choices> or <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements.</span></span> <span data-ttu-id="ceb7f-421">Распознаватель речи может вызывать исключение при использовании грамматики распознавания речи, содержащей повторяющиеся семантические элементы с одинаковым именем ключа или несколькими семантическими элементами, которые могут периодически изменять значение одного и того же семантического элемента.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-421">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> 
  
 <span data-ttu-id="ceb7f-422">Дополнительные сведения о создании и использовании грамматик распознавания речи см. в разделе [Распознавание речи](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) и [Создание грамматик граммарбуилдер](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="ceb7f-422">For more information about building and using speech recognition grammars, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) and [Creating GrammarBuilder Grammars](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.Choices choices, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.Choices choices, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::Choices ^ choices, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.Choices * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="choices + builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="choices"><span data-ttu-id="ceb7f-423">Первый элемент grammar, представляющий набор альтернатив.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-423">The first grammar element, which represents a set of alternatives.</span></span></param>
        <param name="builder"><span data-ttu-id="ceb7f-424">Второй элемент grammar.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-424">The second grammar element.</span></span></param>
        <summary><span data-ttu-id="ceb7f-425">Создает элемент <see cref="T:System.Speech.Recognition.GrammarBuilder" />, содержащий объект <see cref="T:System.Speech.Recognition.Choices" />, за которым следует объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-425">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.Choices" /> object followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="ceb7f-426">Возвращает <see cref="T:System.Speech.Recognition.GrammarBuilder" /> для последовательности параметра <paramref name="choices" />, а затем параметр <paramref name="builder" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-426">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="choices" /> parameter followed by the <paramref name="builder" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-427"><xref:System.Speech.Recognition.GrammarBuilder>поддерживает преобразования из следующих классов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-427"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="ceb7f-428">Этот метод принимает перечисленные выше объекты для `builder` параметра.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-428">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="ceb7f-429">Дополнительные сведения см. в <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> разделе операторы.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-429">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ceb7f-430">При объединении <xref:System.Speech.Recognition.Choices> объектов <xref:System.Speech.Recognition.GrammarBuilder> и, содержащих <xref:System.Speech.Recognition.SemanticResultValue> или <xref:System.Speech.Recognition.SemanticResultKey> , следует избегать создания повторяющихся семантических элементов с одинаковым именем ключа или несколькими семантическими элементами, которые могут периодически изменять <xref:System.Speech.Recognition.SemanticValue.Value%2A> свойство объекта.<xref:System.Speech.Recognition.SemanticValue></span><span class="sxs-lookup"><span data-stu-id="ceb7f-430">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="ceb7f-431">Распознаватель речи может вызвать исключение, если в них возникают такие обстоятельства.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-431">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
 <span data-ttu-id="ceb7f-432">Эквивалентным методом для этого оператора является<xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.Choices%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ceb7f-432">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.Choices%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder, System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder, class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder, System::Speech::Recognition::Choices ^ choices);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="builder + choices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="ceb7f-433">Первый элемент грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-433">The first grammar element.</span></span></param>
        <param name="choices"><span data-ttu-id="ceb7f-434">Второй элемент грамматики, который представляет набор альтернативных вариантов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-434">The second grammar element, which represents a set of alternative elements.</span></span></param>
        <summary><span data-ttu-id="ceb7f-435">Создает новый объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />, содержащий объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />, после которого следует <see cref="T:System.Speech.Recognition.Choices" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-435">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> followed by a <see cref="T:System.Speech.Recognition.Choices" />.</span></span></summary>
        <returns><span data-ttu-id="ceb7f-436">Возвращает <see cref="T:System.Speech.Recognition.GrammarBuilder" /> для последовательности параметра <paramref name="builder" />, а затем параметр <paramref name="choices" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-436">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> parameter followed by the <paramref name="choices" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-437"><xref:System.Speech.Recognition.GrammarBuilder>поддерживает преобразования из следующих классов:</span><span class="sxs-lookup"><span data-stu-id="ceb7f-437"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="ceb7f-438">Этот метод принимает перечисленные выше объекты для `builder` параметра.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-438">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="ceb7f-439">Дополнительные сведения см. в <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> разделе операторы.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-439">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ceb7f-440">При объединении <xref:System.Speech.Recognition.Choices> объектов <xref:System.Speech.Recognition.GrammarBuilder> и, содержащих <xref:System.Speech.Recognition.SemanticResultValue> или <xref:System.Speech.Recognition.SemanticResultKey> , следует избегать создания повторяющихся семантических элементов с одинаковым именем ключа или несколькими семантическими элементами, которые могут периодически изменять <xref:System.Speech.Recognition.SemanticValue.Value%2A> свойство объекта.<xref:System.Speech.Recognition.SemanticValue></span><span class="sxs-lookup"><span data-stu-id="ceb7f-440">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="ceb7f-441">Распознаватель речи может вызвать исключение, если в них возникают такие обстоятельства.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-441">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
 <span data-ttu-id="ceb7f-442">Эквивалентным методом для этого оператора является<xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.Choices%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ceb7f-442">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.Choices%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="ceb7f-443">В следующем примере создается Грамматика распознавания речи, которая может распознать две фразы: «создать *Цвет*фона» и «задать фон до *цвета*», где *Цвет* выбирается из набора цветов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-443">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="ceb7f-444">Для создания окончательной грамматики, например [строк](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>и <xref:System.Speech.Recognition.GrammarBuilder> объектов, используются различные типы.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-444">Various types are used to build the final grammar, such as [String](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] { "red", "green", "blue" });  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    (GrammarBuilder)"Make background" + colorChoice;  
  GrammarBuilder setPhrase =  
    "Set background to" + (GrammarBuilder)colorChoice;  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] { makePhrase, setPhrase });  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder1, System.Speech.Recognition.GrammarBuilder builder2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder1, class System.Speech.Recognition.GrammarBuilder builder2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (builder1 As GrammarBuilder, builder2 As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder1, System::Speech::Recognition::GrammarBuilder ^ builder2);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="builder1 + builder2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder1" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="builder2" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder1"><span data-ttu-id="ceb7f-445">Первый элемент грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-445">The first grammar element.</span></span></param>
        <param name="builder2"><span data-ttu-id="ceb7f-446">Второй элемент grammar.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-446">The second grammar element.</span></span></param>
        <summary><span data-ttu-id="ceb7f-447">Создает новый объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />, содержащий последовательность из двух объектов <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-447">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects.</span></span></summary>
        <returns><span data-ttu-id="ceb7f-448">Возвращает <see cref="T:System.Speech.Recognition.GrammarBuilder" /> для последовательности параметра <paramref name="builder1" />, а затем параметр <paramref name="builder2" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-448">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder1" /> parameter followed by the <paramref name="builder2" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-449"><xref:System.Speech.Recognition.GrammarBuilder>поддерживает преобразования из следующих классов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-449"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="ceb7f-450">Этот метод принимает перечисленные выше объекты для `builder1` параметров и. `builder2`</span><span class="sxs-lookup"><span data-stu-id="ceb7f-450">This method accepts the objects listed above for the `builder1` and `builder2` parameters.</span></span> <span data-ttu-id="ceb7f-451">Дополнительные сведения см. в <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> разделе операторы.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-451">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ceb7f-452">При объединении <xref:System.Speech.Recognition.GrammarBuilder> объектов, содержащих <xref:System.Speech.Recognition.SemanticResultValue> экземпляры <xref:System.Speech.Recognition.SemanticResultKey> или, следует избегать создания повторяющихся семантических элементов с одинаковым именем ключа или <xref:System.Speech.Recognition.SemanticValue.Value%2A> несколькими семантическими элементами, которые могут периодически изменять <xref:System.Speech.Recognition.SemanticValue> свойство объекта.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-452">When you combine <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="ceb7f-453">Распознаватель речи может вызвать исключение, если в них возникают такие обстоятельства.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-453">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
 <span data-ttu-id="ceb7f-454">Эквивалентным методом для этого оператора является<xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ceb7f-454">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder, string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder, string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (builder As GrammarBuilder, phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder, System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.GrammarBuilder * string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="builder + phrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="ceb7f-455">Первый элемент грамматики.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-455">The first grammar element.</span></span></param>
        <param name="phrase"><span data-ttu-id="ceb7f-456">Второй элемент грамматики, который представляет последовательность слов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-456">The second grammar element, which represents a sequence of words.</span></span></param>
        <summary><span data-ttu-id="ceb7f-457">Создает новый объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />, содержащий объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />, после которой следует фраза.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-457">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> followed by a phrase.</span></span></summary>
        <returns><span data-ttu-id="ceb7f-458">Возвращает <see cref="T:System.Speech.Recognition.GrammarBuilder" /> для последовательности параметра <paramref name="builder" />, а затем параметр <paramref name="phrase" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-458">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> parameter followed by the <paramref name="phrase" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-459"><xref:System.Speech.Recognition.GrammarBuilder>поддерживает преобразования из следующих классов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-459"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="ceb7f-460">Этот метод принимает перечисленные выше объекты для `builder` параметра.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-460">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="ceb7f-461">Дополнительные сведения см. в <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> разделе операторы.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-461">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
 <span data-ttu-id="ceb7f-462">Эквивалентным методом для этого оператора является<xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.String%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ceb7f-462">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.String%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (string phrase, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(string phrase, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.String,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (phrase As String, builder As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::String ^ phrase, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member ( + ) : string * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="phrase + builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="ceb7f-463">Первый элемент грамматики, который представляет последовательность слов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-463">The first grammar element, which represents a sequence of words.</span></span></param>
        <param name="builder"><span data-ttu-id="ceb7f-464">Второй элемент grammar.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-464">The second grammar element.</span></span></param>
        <summary><span data-ttu-id="ceb7f-465">Создает новый объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />, содержащий фразу, после которой следует объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-465">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a phrase followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span></span></summary>
        <returns><span data-ttu-id="ceb7f-466">Возвращает <see cref="T:System.Speech.Recognition.GrammarBuilder" /> для последовательности параметра <paramref name="phrase" />, а затем параметр <paramref name="builder" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-466">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="phrase" /> parameter followed by the <paramref name="builder" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-467"><xref:System.Speech.Recognition.GrammarBuilder>поддерживает преобразования из следующих классов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-467"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="ceb7f-468">Этот метод принимает перечисленные выше объекты для `builder` параметра.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-468">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="ceb7f-469">Дополнительные сведения см. в <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> разделе операторы.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-469">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
 <span data-ttu-id="ceb7f-470">Эквивалентным методом для этого оператора является<xref:System.Speech.Recognition.GrammarBuilder.Add%28System.String%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ceb7f-470">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.String%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="ceb7f-471">В следующем примере создается Грамматика распознавания речи, которая может распознать две фразы: «создать *Цвет*фона» и «задать фон до *цвета*», где *Цвет* выбирается из набора цветов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-471">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="ceb7f-472">Для создания окончательной грамматики, например [строк](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>и <xref:System.Speech.Recognition.GrammarBuilder> объектов, используются различные типы.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-472">Various types are used to build the final grammar, such as [String](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] { "red", "green", "blue" });  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    (GrammarBuilder)"Make background" + colorChoice;  
  GrammarBuilder setPhrase =  
    "Set background to" + (GrammarBuilder)colorChoice;  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] { makePhrase, setPhrase });  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Implicit">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ceb7f-473">Преобразует другой тип в <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-473">Converts another type to a <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-474">Неявное преобразование создает новый экземпляр <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-474">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="ceb7f-475">Каждый из следующих классов можно привести к <xref:System.Speech.Recognition.GrammarBuilder>типу.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-475">You can cast each of the following classes to a <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="ceb7f-476">Каждое неявное приведение эквивалентно вызову конструктора.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-476">Each of the implicit casts is equivalent to calling the constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::Choices ^ choices);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit choices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="choices"><span data-ttu-id="ceb7f-477">Набор вариантов для преобразования.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-477">The set of alternatives to convert.</span></span></param>
        <summary><span data-ttu-id="ceb7f-478">Преобразует объект <see cref="T:System.Speech.Recognition.Choices" /> в объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-478">Converts a <see cref="T:System.Speech.Recognition.Choices" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="ceb7f-479">Преобразованный объект <see cref="T:System.Speech.Recognition.Choices" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-479">The converted <see cref="T:System.Speech.Recognition.Choices" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-480">Неявное преобразование создает новый экземпляр <xref:System.Speech.Recognition.GrammarBuilder>. Этот оператор преобразования эквивалентен вызову <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> и указанию `choices` для `alternateChoices`.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-480">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `choices` for the `alternateChoices`.</span></span>  
  
 <span data-ttu-id="ceb7f-481">Эквивалентным методом для этого оператора является<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.Choices%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ceb7f-481">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.Choices%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="ceb7f-482">В следующем примере создается Грамматика распознавания речи, которая может распознать ответ на вопрос "Да" или "нет".</span><span class="sxs-lookup"><span data-stu-id="ceb7f-482">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="ceb7f-483">Оператор неявного преобразования используется в построении <xref:System.Speech.Recognition.SemanticResultValue> объекта <xref:System.Speech.Recognition.Choices> из объекта, <xref:System.Speech.Recognition.Choices> в построении объекта из двух <xref:System.Speech.Recognition.SemanticResultValue> объектов и в построении <xref:System.Speech.Recognition.Grammar> объекта из <xref:System.Speech.Recognition.SemanticResultKey> объект.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-483">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices> object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.SemanticResultKey semanticKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.SemanticResultKey semanticKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultKey)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (semanticKey As SemanticResultKey) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::SemanticResultKey ^ semanticKey);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Speech.Recognition.SemanticResultKey -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit semanticKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="semanticKey" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="semanticKey"><span data-ttu-id="ceb7f-484">Семантический ключ для преобразования.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-484">The semantic key to convert.</span></span></param>
        <summary><span data-ttu-id="ceb7f-485">Преобразует объект <see cref="T:System.Speech.Recognition.SemanticResultKey" /> в объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-485">Converts a <see cref="T:System.Speech.Recognition.SemanticResultKey" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="ceb7f-486">Преобразованный объект <see cref="T:System.Speech.Recognition.SemanticResultKey" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-486">The converted <see cref="T:System.Speech.Recognition.SemanticResultKey" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-487">Неявное преобразование создает новый экземпляр <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-487">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="ceb7f-488">Этот оператор преобразования эквивалентен вызову <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> и указанию `semanticKey` для `key`.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-488">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `semanticKey` for the `key`.</span></span>  
  
 <span data-ttu-id="ceb7f-489">Эквивалентным методом для этого оператора является<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ceb7f-489">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="ceb7f-490">В следующем примере создается Грамматика распознавания речи, которая может распознать ответ на вопрос "Да" или "нет".</span><span class="sxs-lookup"><span data-stu-id="ceb7f-490">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="ceb7f-491">Оператор неявного преобразования используется в построении <xref:System.Speech.Recognition.SemanticResultValue> объекта <xref:System.Speech.Recognition.Choices> из объекта, <xref:System.Speech.Recognition.Choices> в построении объекта из двух <xref:System.Speech.Recognition.SemanticResultValue> объектов и в построении <xref:System.Speech.Recognition.Grammar> объекта из <xref:System.Speech.Recognition.SemanticResultKey> объект.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-491">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices> object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.SemanticResultValue semanticValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.SemanticResultValue semanticValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultValue)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (semanticValue As SemanticResultValue) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::SemanticResultValue ^ semanticValue);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Speech.Recognition.SemanticResultValue -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit semanticValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="semanticValue" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="semanticValue"><span data-ttu-id="ceb7f-492">Преобразуемый объект <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-492">The <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object to convert.</span></span></param>
        <summary><span data-ttu-id="ceb7f-493">Преобразует объект <see cref="T:System.Speech.Recognition.SemanticResultValue" /> в объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-493">Converts a <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="ceb7f-494">Преобразованный объект <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-494">The converted <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-495">Неявное преобразование создает новый экземпляр <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-495">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="ceb7f-496">Этот оператор преобразования эквивалентен вызову <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> и указанию `semanticValue` для `value`.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-496">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `semanticValue` for the `value`.</span></span>  
  
 <span data-ttu-id="ceb7f-497">Эквивалентным методом для этого оператора является<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ceb7f-497">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="ceb7f-498">В следующем примере создается Грамматика распознавания речи, которая может распознать ответ на вопрос "Да" или "нет".</span><span class="sxs-lookup"><span data-stu-id="ceb7f-498">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="ceb7f-499">Оператор неявного преобразования используется в построении <xref:System.Speech.Recognition.SemanticResultValue> объекта <xref:System.Speech.Recognition.Choices>из объекта, <xref:System.Speech.Recognition.Choices> в построении объекта из двух <xref:System.Speech.Recognition.SemanticResultValue> объектов и в построении <xref:System.Speech.Recognition.Grammar> объекта из <xref:System.Speech.Recognition.SemanticResultKey> объект.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-499">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices>object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.String)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit phrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="ceb7f-500">Преобразуемая строка.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-500">The string to convert.</span></span></param>
        <summary><span data-ttu-id="ceb7f-501">Преобразует строку в объект <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-501">Converts a string to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="ceb7f-502">Преобразованная строка.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-502">The converted string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb7f-503">Неявное преобразование создает новый экземпляр <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-503">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="ceb7f-504">Этот оператор преобразования эквивалентен вызову <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> и указанию того `phrase`же самого.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-504">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying the same `phrase`.</span></span>  
  
 <span data-ttu-id="ceb7f-505">Эквивалентным методом для этого оператора является<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.String%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ceb7f-505">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.String%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="ceb7f-506">В следующем примере используются <xref:System.Speech.Recognition.GrammarBuilder> объекты <xref:System.Speech.Recognition.Choices> и для создания грамматики, которая может распознать любую из двух фраз: «make Background *колорчоице*» или «Set Background to *колорчоице*».</span><span class="sxs-lookup"><span data-stu-id="ceb7f-506">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="ceb7f-507">После создания списка допустимых значений для *колорчоице* с <xref:System.Speech.Recognition.Choices> помощью объекта в примере инициализируются два <xref:System.Speech.Recognition.GrammarBuilder> объекта `makePhrase` и `setPhrase`используется неявное преобразование из строковых объектов.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-507">After creating a list of acceptable values for *colorChoice* using a <xref:System.Speech.Recognition.Choices> object, the example initializes two <xref:System.Speech.Recognition.GrammarBuilder> objects, `makePhrase` and `setPhrase`, using implicit conversion from string objects.</span></span>  
  
 <span data-ttu-id="ceb7f-508">В примере наконец создается <xref:System.Speech.Recognition.Grammar> объект <xref:System.Speech.Recognition.Choices> из объекта, приведенного к <xref:System.Speech.Recognition.GrammarBuilder> объекту.</span><span class="sxs-lookup"><span data-stu-id="ceb7f-508">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.Choices> object cast to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
```csharp  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
  </Members>
</Type>
