<Type Name="SpeechHypothesizedEventArgs" FullName="System.Speech.Recognition.SpeechHypothesizedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="69fe0581c017d3edf0600fb9291edaec1083d62a" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70621686" /></Metadata><TypeSignature Language="C#" Value="public class SpeechHypothesizedEventArgs : System.Speech.Recognition.RecognitionEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SpeechHypothesizedEventArgs extends System.Speech.Recognition.RecognitionEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SpeechHypothesizedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SpeechHypothesizedEventArgs&#xA;Inherits RecognitionEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpeechHypothesizedEventArgs : System::Speech::Recognition::RecognitionEventArgs" />
  <TypeSignature Language="F#" Value="type SpeechHypothesizedEventArgs = class&#xA;    inherit RecognitionEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Speech.Recognition.RecognitionEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9b65e-101">Возвращает уведомление из события <see cref="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized" /> или <see cref="E:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized" />.</span><span class="sxs-lookup"><span data-stu-id="9b65e-101">Returns notification from <see cref="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized" /> or <see cref="E:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized" /> events.</span></span>  
  
<span data-ttu-id="9b65e-102">Этот класс служит для поддержки инфраструктуры .NET Framework и не предназначен для непосредственного использования в коде приложения.</span><span class="sxs-lookup"><span data-stu-id="9b65e-102">This class supports the .NET Framework infrastructure and is not intended to be used directly from application code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b65e-103">Событие вызывается <xref:System.Speech.Recognition.SpeechRecognizer> классами и  <xref:System.Speech.Recognition.SpeechRecognitionEngine> . `SpeechHypothesized`</span><span class="sxs-lookup"><span data-stu-id="9b65e-103">A `SpeechHypothesized` event is raised by the <xref:System.Speech.Recognition.SpeechRecognizer> and <xref:System.Speech.Recognition.SpeechRecognitionEngine> classes.</span></span>  
  
 <span data-ttu-id="9b65e-104">Подробные сведения о предварительно распознанной фразе можно получить с помощью <xref:System.Speech.Recognition.RecognitionEventArgs.Result%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="9b65e-104">You can obtain detailed information about a tentatively recognized phrase by using the <xref:System.Speech.Recognition.RecognitionEventArgs.Result%2A> property.</span></span>  
  
 <span data-ttu-id="9b65e-105">Многочисленные `SpeechHypothesized` события создаются в качестве подсистемы распознавания, которая пытается опознать входную фразу.</span><span class="sxs-lookup"><span data-stu-id="9b65e-105">Numerous `SpeechHypothesized` events are generated as a recognition engine attempts to identify an input phrase.</span></span> <span data-ttu-id="9b65e-106">Как правило, обработка этих событий полезна только для отладки.</span><span class="sxs-lookup"><span data-stu-id="9b65e-106">Typically, handling these events is useful only for debugging.</span></span>  
  
 <span data-ttu-id="9b65e-107">Интерфейс `SpeechHypothesizedEventArgs` является производным от интерфейса <xref:System.Speech.Recognition.RecognitionEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="9b65e-107">`SpeechHypothesizedEventArgs` derives from <xref:System.Speech.Recognition.RecognitionEventArgs>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b65e-108">В приведенном ниже примере создается обработчик <xref:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized?displayProperty=nameWithType> для <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized?displayProperty=nameWithType> событий или.</span><span class="sxs-lookup"><span data-stu-id="9b65e-108">The example below creates a handler for <xref:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized?displayProperty=nameWithType> or <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized?displayProperty=nameWithType> events.</span></span> <span data-ttu-id="9b65e-109">Обработчик использует экземпляр `SpeechHypothesizedEventArgs` для возврата и отображения сведений о предварительно распознанной фразе.</span><span class="sxs-lookup"><span data-stu-id="9b65e-109">The handler uses an instance of `SpeechHypothesizedEventArgs` to return and display information about a tentatively recognized phrase.</span></span>  
  
```  
// Create a handler for the SpeechHypothesized event.  
recognizer.SpeechHypothesized += new EventHandler<SpeechHypothesizedEventArgs>(recognizer_SpeechHypothesized);  
  
// Handle the event and display the hypothesized result.  
void recognizer_SpeechHypothesized (object sender, SpeechHypothesizedEventArgs e)  
  {  
    Console.WriteLine("Hypothesized text: " + e.Result.Text);  
  }  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.RecognitionEventArgs" />
    <altmember cref="T:System.Speech.Recognition.RecognitionResult" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized" />
    <altmember cref="T:System.Speech.Recognition.SpeechRecognizedEventArgs" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized" />
    <altmember cref="T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognizer.SpeechRecognitionRejected" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognitionRejected" />
  </Docs>
  <Members />
</Type>
