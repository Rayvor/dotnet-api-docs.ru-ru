<Type Name="EmulateRecognizeCompletedEventArgs" FullName="System.Speech.Recognition.EmulateRecognizeCompletedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c051036cfeec7ba0387c4826185d0c8d1f1c72ba" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69231410" /></Metadata><TypeSignature Language="C#" Value="public class EmulateRecognizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EmulateRecognizeCompletedEventArgs extends System.ComponentModel.AsyncCompletedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class EmulateRecognizeCompletedEventArgs&#xA;Inherits AsyncCompletedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class EmulateRecognizeCompletedEventArgs : System::ComponentModel::AsyncCompletedEventArgs" />
  <TypeSignature Language="F#" Value="type EmulateRecognizeCompletedEventArgs = class&#xA;    inherit AsyncCompletedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.AsyncCompletedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет данные для события <see langword="EmulateRecognizeCompleted" /> классов <see cref="T:System.Speech.Recognition.SpeechRecognizer" /> и <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Экземпляр <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs> создается, <xref:System.Speech.Recognition.SpeechRecognitionEngine> когда объект вызывает <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted> событие. Чтобы получить сведения о результате распознавания, обратитесь к <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> свойству обработчика события.  
  
 Эмуляция — это процесс, в котором текст, а не аудио, является входными данными для модуля распознавания речи. Чтобы обойти входные данные звука <xref:System.Speech.Recognition.SpeechRecognitionEngine> для объекта во время эмуляции, <xref:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToNull%2A> используйте метод.  
  
 Если во время операции распознавания обработчик распознавания речи обнаруживает исключение, <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> для свойства задается исключение, <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> а свойству — значение `null`.  
  
 Интерфейс <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs> является производным от интерфейса <xref:System.ComponentModel.AsyncCompletedEventArgs>.  
  
   
  
## Examples  
 В следующем примере обработчик <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted> события для события добавляется <xref:System.Speech.Recognition.SpeechRecognitionEngine>в. Обработчик получает распознанный текст из <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> свойства.  
  
```csharp  
  
private SpeechRecognitionEngine sre;  
  
// Initialize the speech recognition engine.   
private void Initialize()  
{  
  sre = new SpeechRecognitionEngine();  
  
  // Add a handler for the EmulateRecognizeCompleted event.  
  sre.EmulateRecognizeCompleted += new EventHandler<EmulateRecognizeCompletedEventArgs>(sre_EmulateRecognizeCompleted);  
  
  // Add other initialization code here.  
}  
  
// Handle the EmulateRecognizeCompleted event.   
void sre_EmulateRecognizeCompleted(object sender, EmulateRecognizeCompletedEventArgs e)  
{  
  if (e.Result == null) return;  
  
  string phrase = e.Result.Text;  
  
  // Add event handler code here.  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeCompleted" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted" />
  </Docs>
  <Members>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.RecognitionResult Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Recognition.RecognitionResult Result" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As RecognitionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Recognition::RecognitionResult ^ Result { System::Speech::Recognition::RecognitionResult ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : System.Speech.Recognition.RecognitionResult" Usage="System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.RecognitionResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает результаты эмулированного распознавания.</summary>
        <value>Подробные сведения о результатах распознавания, или <see langword="null" />, если возникла ошибка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект является производным от <xref:System.Speech.Recognition.RecognizedPhrase> и содержит полные сведения о фразе, возвращаемой операцией распознавания. <xref:System.Speech.Recognition.RecognitionResult> В <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> свойстве можно получить список из всех кандидатов на распознавание.  
  
 Если средство распознавания обнаруживает исключение во время операции распознавания, <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> свойству присваивается исключение, <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> а свойству присваивается значение `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeCompleted" />
        <altmember cref="E:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted" />
      </Docs>
    </Member>
  </Members>
</Type>
