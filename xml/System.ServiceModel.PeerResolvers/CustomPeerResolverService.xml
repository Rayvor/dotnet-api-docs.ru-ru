<Type Name="CustomPeerResolverService" FullName="System.ServiceModel.PeerResolvers.CustomPeerResolverService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8638b85a08afbd9b7cc7eac0baad065676a5ea53" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69149909" /></Metadata><TypeSignature Language="C#" Value="public class CustomPeerResolverService : System.ServiceModel.PeerResolvers.IPeerResolverContract" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CustomPeerResolverService extends System.Object implements class System.ServiceModel.PeerResolvers.IPeerResolverContract" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomPeerResolverService&#xA;Implements IPeerResolverContract" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomPeerResolverService : System::ServiceModel::PeerResolvers::IPeerResolverContract" />
  <TypeSignature Language="F#" Value="type CustomPeerResolverService = class&#xA;    interface IPeerResolverContract" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.PeerResolvers.IPeerResolverContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("PeerChannel feature is obsolete and will be removed in the future.", false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, UseSynchronizationContext=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет базовую реализацию настраиваемой службы распознавателя одноранговых узлов.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс <xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService> определяет базовую реализацию службы настраиваемого распознавателя одноранговых узлов и предоставляет подстановку для разрешения идентификаторов регистрации в адреса конечных точек однорангового узла в сетку, обслуживаемую этим распознавателем.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Реализации настраиваемых распознавателей одноранговых узлов должны быть производными от этого класса и переопределять данные функции, для которых они предоставляют настраиваемые реализации. Любой настраиваемый распознаватель одноранговых узлов должен в минимальной степени реализовать интерфейс <see cref="T:System.ServiceModel.PeerResolvers.IPeerResolverContract" />.  
  
Также для клиентов, использующих настраиваемый распознаватель, должна быть настроена верхняя граница задержки передачи данных между сервером и клиентом, чтобы обновление регистрации в службе распознавателя одноранговых узлов выполнялось без сбоев.</para></block>
    <altmember cref="T:System.ServiceModel.PeerResolvers.IPeerResolverContract" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomPeerResolverService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomPeerResolverService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр по умолчанию класса <see cref="T:System.ServiceModel.PeerResolvers.CustomPeerResolverService" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanupInterval">
      <MemberSignature Language="C#" Value="public TimeSpan CleanupInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CleanupInterval" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.CleanupInterval" />
      <MemberSignature Language="VB.NET" Value="Public Property CleanupInterval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan CleanupInterval { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.CleanupInterval : TimeSpan with get, set" Usage="System.ServiceModel.PeerResolvers.CustomPeerResolverService.CleanupInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает повторяющуюся длительность периода, после которого устаревшие записи удаляются из таблицы уточняющих запросов регистрации для службы арбитра одноранговых узлов.</summary>
        <value>Объект структуры <see cref="T:System.TimeSpan" />, указывающий временной интервал, по истечении которого устаревшие записи удаляются из таблицы подстановок регистрации службы распознавателя одноранговых узлов.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данное свойство должно быть задано до определения службы распознавателя одноранговых узлов; свойство не должно иметь нулевое значение. Интервал по умолчанию — 1 минута.  
  
 Это значение должно быть меньше, чем значение свойства <xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService.RefreshInterval%2A> во избежание появления устаревших записей в таблице подстановок регистрации службы распознавателя одноранговых узлов.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Интервал должен иметь нулевое значение или значение больше, чем <see cref="F:System.Int32.MaxValue" />.</exception>
        <exception cref="T:System.InvalidOperationException">Попытка задать свойство предпринята после вызова метода <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="customPeerResolverService.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Закрывает службу распознавателя одноранговых узлов.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Служба закрыта посредством предыдущего вызова этого метода.</exception>
      </Docs>
    </Member>
    <Member MemberName="ControlShape">
      <MemberSignature Language="C#" Value="public bool ControlShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlShape" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.ControlShape" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlShape As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlShape { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ControlShape : bool with get, set" Usage="System.ServiceModel.PeerResolvers.CustomPeerResolverService.ControlShape" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, требуется ли совместное использование ссылок службой распознавателя одноранговых узлов.</summary>
        <value>Используется значение «true», если ссылки в службе распознавателя одноранговых узлов используются совместно; в противном случае используется значение «false».</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceSettings">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo GetServiceSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo GetServiceSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.GetServiceSettings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetServiceSettings () As ServiceSettingsResponseInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::PeerResolvers::ServiceSettingsResponseInfo ^ GetServiceSettings();" />
      <MemberSignature Language="F#" Value="abstract member GetServiceSettings : unit -&gt; System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo&#xA;override this.GetServiceSettings : unit -&gt; System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo" Usage="customPeerResolverService.GetServiceSettings " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.PeerResolvers.IPeerResolverContract.GetServiceSettings</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Получает определенные настройки ответа для службы распознавателя одноранговых узлов.</summary>
        <returns>Объект класса <see cref="T:System.ServiceModel.PeerResolvers.ServiceSettingsResponseInfo" />, содержащий определенные настройки ответа для настраиваемой службы распознавателя одноранговых узлов, включая настройки интервала очистки и обновления.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public virtual void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Open();" />
      <MemberSignature Language="F#" Value="abstract member Open : unit -&gt; unit&#xA;override this.Open : unit -&gt; unit" Usage="customPeerResolverService.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Открывает службу распознавателя одноранговых узлов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При вызове этого метода назначается время первой очистки таблицы подстановок регистрации на основе значения, заданного свойству <xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService.CleanupInterval%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Свойству <see cref="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.CleanupInterval" /> или <see cref="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.RefreshInterval" /> задан интервал времени, равный 0.</exception>
        <exception cref="T:System.InvalidOperationException">Служба запущена посредством предыдущего вызова этого метода.</exception>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.PeerResolvers.RefreshResponseInfo Refresh (System.ServiceModel.PeerResolvers.RefreshInfo refreshInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.PeerResolvers.RefreshResponseInfo Refresh(class System.ServiceModel.PeerResolvers.RefreshInfo refreshInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Refresh(System.ServiceModel.PeerResolvers.RefreshInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::PeerResolvers::RefreshResponseInfo ^ Refresh(System::ServiceModel::PeerResolvers::RefreshInfo ^ refreshInfo);" />
      <MemberSignature Language="F#" Value="abstract member Refresh : System.ServiceModel.PeerResolvers.RefreshInfo -&gt; System.ServiceModel.PeerResolvers.RefreshResponseInfo&#xA;override this.Refresh : System.ServiceModel.PeerResolvers.RefreshInfo -&gt; System.ServiceModel.PeerResolvers.RefreshResponseInfo" Usage="customPeerResolverService.Refresh refreshInfo" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Refresh(System.ServiceModel.PeerResolvers.RefreshInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.RefreshResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="refreshInfo" Type="System.ServiceModel.PeerResolvers.RefreshInfo" />
      </Parameters>
      <Docs>
        <param name="refreshInfo">Объект класса <see cref="T:System.ServiceModel.PeerResolvers.RefreshInfo" />, содержащий идентификатор сетки и идентификатор регистрации записи, который требуется обновить в таблице подстановок регистрации службы распознавателя одноранговых узлов.</param>
        <summary>Обновляет срок истечения записи в таблице подстановок регистрации службы распознавателя одноранговых узлов.</summary>
        <returns>Объект класса <see cref="T:System.ServiceModel.PeerResolvers.RefreshResponseInfo" />, содержащий недавно обновленную запись регистрации.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обновление записи увеличивает продолжительность периода, в течение которого запись остается допустимой. Все сведения, используемые для однозначной идентификации записи, должны предоставляться в объекте класса <xref:System.ServiceModel.PeerResolvers.RefreshInfo>, предоставляемом для данного метода.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Для <paramref name="refreshInfo" /> задано нулевое значение.</exception>
        <exception cref="T:System.InvalidOperationException">Настраиваемая служба распознавателя одноранговых узлов не была запущена посредством предыдущего вызова метода <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RefreshInterval">
      <MemberSignature Language="C#" Value="public TimeSpan RefreshInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RefreshInterval" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.PeerResolvers.CustomPeerResolverService.RefreshInterval" />
      <MemberSignature Language="VB.NET" Value="Public Property RefreshInterval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan RefreshInterval { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.RefreshInterval : TimeSpan with get, set" Usage="System.ServiceModel.PeerResolvers.CustomPeerResolverService.RefreshInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает длительность периода в течение которого записи в таблицы подстановок регистрации службы распознавателя одноранговых узлов остаются действительными.</summary>
        <value>Объект структуры <see cref="T:System.TimeSpan" />, указывающий длительность периода в течение которого записи в таблицы подстановок регистрации службы распознавателя одноранговых узлов остаются действительными.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данное свойство должно быть задано до определения службы распознавателя одноранговых узлов; свойство не должно иметь нулевое значение. Интервал по умолчанию — 2 минуты.  
  
 По истечении срока действия, указанного в этом свойстве для определенной записи в таблице подстановок регистрации службы распознавателя одноранговых узлов, она помечается для удаления. Удаление происходит по истечении интервала, заданного в свойстве <xref:System.ServiceModel.PeerResolvers.CustomPeerResolverService.CleanupInterval%2A>.  Например, если для этого свойства задан интервал 10 минут, записи в таблице подстановок регистрации по истечении заданного интервала перейдут в категорию устаревших и будут помечены на удаление. В результате обновление клиента распознавателя одноранговых узлов должно выполняться каждые десять минут во избежание удаления записей.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Интервал должен иметь нулевое значение или значение больше, чем <see cref="F:System.Int32.MaxValue" />.</exception>
        <exception cref="T:System.InvalidOperationException">Попытка задать свойство предпринята после вызова метода <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Register">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Регистрирует одноранговый узел в настраиваемой службе распознавателя одноранговых узлов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы зарегистрировать одноранговый узел в конкретной сетке, необходимо предоставить правильно сформированный объект класса <xref:System.ServiceModel.PeerResolvers.RegisterInfo> для одной из перегрузок для данного метода. В объекте содержатся определенные подробные сведения, которые требуются, чтобы зарегистрировать запись регистрации, запрашивающую регистрацию, включая глобальный уникальный идентификатор, который однозначно идентифицирует запись регистрации, идентификатор сетки и адрес конечной точки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.PeerResolvers.RegisterResponseInfo Register (System.ServiceModel.PeerResolvers.RegisterInfo registerInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.PeerResolvers.RegisterResponseInfo Register(class System.ServiceModel.PeerResolvers.RegisterInfo registerInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Register(System.ServiceModel.PeerResolvers.RegisterInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::PeerResolvers::RegisterResponseInfo ^ Register(System::ServiceModel::PeerResolvers::RegisterInfo ^ registerInfo);" />
      <MemberSignature Language="F#" Value="abstract member Register : System.ServiceModel.PeerResolvers.RegisterInfo -&gt; System.ServiceModel.PeerResolvers.RegisterResponseInfo&#xA;override this.Register : System.ServiceModel.PeerResolvers.RegisterInfo -&gt; System.ServiceModel.PeerResolvers.RegisterResponseInfo" Usage="customPeerResolverService.Register registerInfo" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Register(System.ServiceModel.PeerResolvers.RegisterInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.RegisterResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="registerInfo" Type="System.ServiceModel.PeerResolvers.RegisterInfo" />
      </Parameters>
      <Docs>
        <param name="registerInfo"><see cref="T:System.ServiceModel.PeerResolvers.RegisterInfo" />, содержащий сведения о записи регистрации, которую необходимо зарегистрировать с помощью службы сопоставителя одноранговых узлов.</param>
        <summary>Добавляет новую запись в таблицу подстановок регистрации службы распознавателя одноранговых узлов.</summary>
        <returns>Объект класса <see cref="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" />, содержащий копию записи, добавленной в таблицу подстановок регистрации службы распознавателя одноранговых узлов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод добавляет новую запись в таблицу подстановок регистрации службы распознавателя одноранговых узлов. Следует учитывать, что регистрации, созданные после закрытия службы, не являются действительными — эти записи не возвращаются посредством запросов на разрешение.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">В таблице подстановок уже имеется регистрационная запись с тем же идентификатором GUID, или служба настраиваемого распознавателя однорангового узла не была запущена при предыдущем вызове метода <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
        <exception cref="T:System.ArgumentException">Объект класса <see cref="T:System.ServiceModel.PeerResolvers.RegisterInfo" />, предоставляемый для данного метода, имеет нулевое значение или неправильно сформирован.</exception>
        <exception cref="T:System.NullReferenceException">Свойство AddressInfo объекта, предоставляемого параметру <paramref name="registerInfo" />, имеет нулевое значение.</exception>
        <exception cref="T:System.ArgumentNullException">Значение <paramref name="meshId" />, предоставляемое данному методу, задано как нулевое.</exception>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.PeerResolvers.RegisterResponseInfo Register (Guid clientId, string meshId, System.ServiceModel.PeerNodeAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.PeerResolvers.RegisterResponseInfo Register(valuetype System.Guid clientId, string meshId, class System.ServiceModel.PeerNodeAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Register(System.Guid,System.String,System.ServiceModel.PeerNodeAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Register (clientId As Guid, meshId As String, address As PeerNodeAddress) As RegisterResponseInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::PeerResolvers::RegisterResponseInfo ^ Register(Guid clientId, System::String ^ meshId, System::ServiceModel::PeerNodeAddress ^ address);" />
      <MemberSignature Language="F#" Value="abstract member Register : Guid * string * System.ServiceModel.PeerNodeAddress -&gt; System.ServiceModel.PeerResolvers.RegisterResponseInfo&#xA;override this.Register : Guid * string * System.ServiceModel.PeerNodeAddress -&gt; System.ServiceModel.PeerResolvers.RegisterResponseInfo" Usage="customPeerResolverService.Register (clientId, meshId, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.RegisterResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientId" Type="System.Guid" />
        <Parameter Name="meshId" Type="System.String" />
        <Parameter Name="address" Type="System.ServiceModel.PeerNodeAddress" />
      </Parameters>
      <Docs>
        <param name="clientId">Объект структуры <see cref="T:System.Guid" />, указывающий уникальный идентификатор регистрационной записи для регистрации с помощью службы распознавателя.</param>
        <param name="meshId">Объект класса <see cref="T:System.String" />, указывающий идентификатор одноранговой сетки, в которой участвует регистрационная запись.</param>
        <param name="address">Объект класса <see cref="T:System.ServiceModel.PeerNodeAddress" />, содержащий адрес конечной точки регистрационной записи.</param>
        <summary>Добавляет новую запись в таблицу подстановок регистрации службы распознавателя одноранговых узлов.</summary>
        <returns>Объект класса <see cref="T:System.ServiceModel.PeerResolvers.RegisterResponseInfo" />, содержащий копию записи, добавленной в таблицу подстановок регистрации службы распознавателя одноранговых узлов.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">В таблице подстановок уже имеется регистрационная запись с тем же идентификатором GUID, или служба настраиваемого распознавателя однорангового узла не была запущена при предыдущем вызове метода <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
        <exception cref="T:System.ArgumentException">Объект класса <see cref="T:System.ServiceModel.PeerResolvers.RegisterInfo" />, предоставляемый для данного метода, имеет нулевое значение или неправильно сформирован.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство MeshId и/или RegistrationId объекта, предоставляемого параметру <paramref name="refreshInfo" />, имеет нулевое значение.</exception>
        <exception cref="T:System.NullReferenceException">Свойство MeshId объекта, предоставляемого параметру <paramref name="refreshInfo" />, неизвестно.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.PeerResolvers.ResolveResponseInfo Resolve (System.ServiceModel.PeerResolvers.ResolveInfo resolveInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.PeerResolvers.ResolveResponseInfo Resolve(class System.ServiceModel.PeerResolvers.ResolveInfo resolveInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Resolve(System.ServiceModel.PeerResolvers.ResolveInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::PeerResolvers::ResolveResponseInfo ^ Resolve(System::ServiceModel::PeerResolvers::ResolveInfo ^ resolveInfo);" />
      <MemberSignature Language="F#" Value="abstract member Resolve : System.ServiceModel.PeerResolvers.ResolveInfo -&gt; System.ServiceModel.PeerResolvers.ResolveResponseInfo&#xA;override this.Resolve : System.ServiceModel.PeerResolvers.ResolveInfo -&gt; System.ServiceModel.PeerResolvers.ResolveResponseInfo" Usage="customPeerResolverService.Resolve resolveInfo" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Resolve(System.ServiceModel.PeerResolvers.ResolveInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.ResolveResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolveInfo" Type="System.ServiceModel.PeerResolvers.ResolveInfo" />
      </Parameters>
      <Docs>
        <param name="resolveInfo">Объект класса <see cref="T:System.ServiceModel.PeerResolvers.ResolveInfo" />, содержащий сведения о регистрационной записи, для которой выполняется поиск конечных точек (если они известны) службой распознавателя одноранговых узлов.</param>
        <summary>Возвращает список известных конечных точек для регистрационной записи.</summary>
        <returns>Объект класса <see cref="T:System.ServiceModel.PeerResolvers.ResolveResponseInfo" />, содержащий конечные точки для регистрационной записи в таблице подстановок, которые соответствуют сведениям, предоставленным в параметре <paramref name="resolveInfo" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данный метод выполняет поиск по регистрационной записи на основе данных, предоставленных в объекте класса <xref:System.ServiceModel.PeerResolvers.ResolveInfo>, и возвращает все адреса соответствующих конечных точек, обнаруженных в таблице подстановок регистрации службы распознавателя одноранговых узлов. Количество адресов возвращаемых конечных точек равно или меньше значения свойства <xref:System.ServiceModel.PeerResolvers.ResolveInfo.MaxAddresses%2A>, заданного для объекта класса <xref:System.ServiceModel.PeerResolvers.ResolveInfo>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Данный объект класса <see cref="T:System.ServiceModel.PeerResolvers.ResolveInfo" /> имеет нулевое значение или неправильно сформирован.</exception>
        <exception cref="T:System.InvalidOperationException">В таблице подстановок уже имеется регистрационная запись с тем же идентификатором GUID, или служба настраиваемого распознавателя однорангового узла не была запущена при предыдущем вызове метода <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public virtual void Unregister (System.ServiceModel.PeerResolvers.UnregisterInfo unregisterInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unregister(class System.ServiceModel.PeerResolvers.UnregisterInfo unregisterInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Unregister(System.ServiceModel.PeerResolvers.UnregisterInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Unregister(System::ServiceModel::PeerResolvers::UnregisterInfo ^ unregisterInfo);" />
      <MemberSignature Language="F#" Value="abstract member Unregister : System.ServiceModel.PeerResolvers.UnregisterInfo -&gt; unit&#xA;override this.Unregister : System.ServiceModel.PeerResolvers.UnregisterInfo -&gt; unit" Usage="customPeerResolverService.Unregister unregisterInfo" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Unregister(System.ServiceModel.PeerResolvers.UnregisterInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unregisterInfo" Type="System.ServiceModel.PeerResolvers.UnregisterInfo" />
      </Parameters>
      <Docs>
        <param name="unregisterInfo">Объект класса <see cref="T:System.ServiceModel.PeerResolvers.UnregisterInfo" />, содержащий сведения, используемые для однозначного определения регистрационной записи, которую требуется удалить из таблицы подстановок регистрации.</param>
        <summary>Удаляет определенную запись из таблицы подстановок регистрации службы распознавателя одноранговых узлов.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Не удалось обнаружить запись для указанной регистрационной записи, или предоставленный объект класса <see cref="T:System.ServiceModel.PeerResolvers.UnregisterInfo" /> имеет нулевое значение или неправильно сформирован.</exception>
        <exception cref="T:System.InvalidOperationException">В таблице подстановок уже имеется регистрационная запись с тем же идентификатором GUID, или служба настраиваемого распознавателя однорангового узла не была запущена при предыдущем вызове метода <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.PeerResolvers.RegisterResponseInfo Update (System.ServiceModel.PeerResolvers.UpdateInfo updateInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.PeerResolvers.RegisterResponseInfo Update(class System.ServiceModel.PeerResolvers.UpdateInfo updateInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Update(System.ServiceModel.PeerResolvers.UpdateInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::PeerResolvers::RegisterResponseInfo ^ Update(System::ServiceModel::PeerResolvers::UpdateInfo ^ updateInfo);" />
      <MemberSignature Language="F#" Value="abstract member Update : System.ServiceModel.PeerResolvers.UpdateInfo -&gt; System.ServiceModel.PeerResolvers.RegisterResponseInfo&#xA;override this.Update : System.ServiceModel.PeerResolvers.UpdateInfo -&gt; System.ServiceModel.PeerResolvers.RegisterResponseInfo" Usage="customPeerResolverService.Update updateInfo" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Update(System.ServiceModel.PeerResolvers.UpdateInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.RegisterResponseInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updateInfo" Type="System.ServiceModel.PeerResolvers.UpdateInfo" />
      </Parameters>
      <Docs>
        <param name="updateInfo">Объект класса <see cref="T:System.ServiceModel.PeerResolvers.UpdateInfo" />, который однозначно идентифицирует конкретную регистрационную запись и предоставляет для нее обновленные сведения.</param>
        <summary>Обновляет существующую регистрационную запись в таблице подстановок регистрации службы распознавателя одноранговых узлов.</summary>
        <returns>Объект класса <see cref="T:System.ServiceModel.PeerResolvers.UpdateInfo" />, содержащий копию обновленной записи регистрационной записи.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Не удалось обнаружить запись для указанной регистрационной записи, или предоставленный объект класса <see cref="T:System.ServiceModel.PeerResolvers.UpdateInfo" /> имеет нулевое значение или неправильно сформирован.</exception>
        <exception cref="T:System.InvalidOperationException">В таблице подстановок уже имеется регистрационная запись с тем же идентификатором GUID, или служба настраиваемого распознавателя однорангового узла не была запущена при предыдущем вызове метода <see cref="M:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Open" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
