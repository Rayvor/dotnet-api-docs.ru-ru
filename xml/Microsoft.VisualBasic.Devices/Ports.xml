<Type Name="Ports" FullName="Microsoft.VisualBasic.Devices.Ports">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f2c1779b529c9d0ab8c416fa013d87b71c5deca0" /><Meta Name="ms.sourcegitcommit" Value="00194cfb0d5c4f2d3f620c0b561d50d547ce2f7f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/06/2019" /><Meta Name="ms.locfileid" Value="70388704" /></Metadata><TypeSignature Language="C#" Value="public class Ports" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Ports extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Ports" />
  <TypeSignature Language="VB.NET" Value="Public Class Ports" />
  <TypeSignature Language="C++ CLI" Value="public ref class Ports" />
  <TypeSignature Language="F#" Value="type Ports = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предлагает свойство и метод для доступа к последовательным портам компьютера.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект предоставляет простую точку входа для [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] доступа к классу последовательного <xref:System.IO.Ports.SerialPort>порта,. `My.Computer.Ports`  
  
 В следующей таблице приведены примеры задач, `My.Computer.Ports` включающих объект.  
  
|Кому|См.|  
|-|-|  
|Набор модема, подключенного к последовательному порту|[Практическое руководство. Дозвон при помощи модема, подключенного к последовательному порту компьютера](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|Отправка строки в последовательный порт|[Практическое руководство. Отправка строк в последовательные порты](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|Получение строк из последовательного порта|[Практическое руководство. Получение строк из последовательных портов](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
|Отображение доступных последовательных портов|[Практическое руководство. Отображение доступных последовательных портов](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Доступность по типу проекта  
  
|Тип проекта|Доступно|  
|-|-|  
|Приложение Windows|**Да**|  
|Библиотека классов|**Да**|  
|Консольное приложение|**Да**|  
|Библиотека элементов управления Windows|**Да**|  
|Библиотека веб-элементов управления|Нет|  
|Служба Windows|**Да**|  
|Веб-сайт|Нет|  
  
   
  
## Examples  
 В этом примере описывается отправка строк в `COM1` последовательный порт компьютера.  
  
 Блок `Using` позволяет приложению закрыть последовательный порт даже в том случае, если он создает исключение. Весь код, управляющий последовательным портом, должен находиться в этом блоке или `Try...Catch...Finally` в блоке с вызовом для <xref:System.IO.Ports.SerialPort.Close%2A> использования метода.  
  
 Метод <xref:System.IO.Ports.SerialPort.WriteLine%2A> отправляет данные в последовательный порт.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Дополнительные сведения см. в разделе [Практическое руководство. Отправка строк в последовательные](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)порты.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
    <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md">Практическое руководство. Дозвон при помощи модема, подключенного к последовательному порту компьютера, в Visual Basic</related>
    <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md">Практическое руководство. Отправка строк в последовательный порт в Visual Basic</related>
    <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md">Практическое руководство. Получение строк из последовательных портов в Visual Basic</related>
    <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports">Практическое руководство. Отображение доступных последовательных портов в Visual Basic</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Ports ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Ports();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.Devices.Ports" />.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenSerialPort">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Создает и открывает объект <see cref="T:System.IO.Ports.SerialPort" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSerialPort (portName As String) As SerialPort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort portName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="portName"><see langword="String" />. Обязательно. Имя открываемого порта.</param>
        <summary>Создает и открывает объект <see cref="T:System.IO.Ports.SerialPort" />.</summary>
        <returns>Открытый объект <see cref="T:System.IO.Ports.SerialPort" />, настроенный с помощью предоставленных аргументов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод создает и <xref:System.IO.Ports.SerialPort> открывает объект. `My.Computer.Ports.OpenSerialPort` Аргументы `OpenSerialPort` метода определяют параметры <xref:System.IO.Ports.SerialPort> объекта.  
  
 Код должен закрыть <xref:System.IO.Ports.SerialPort> объект по завершении использования объекта. Можно использовать <xref:System.IO.Ports.SerialPort.Close%2A> метод, чтобы явно закрыть объект, `Using` или инструкцию, чтобы закрыть его неявно. Дополнительные сведения см. в примере, приведенном в этом разделе.  
  
 В следующей таблице приведены примеры задач, в `My.Computer.Ports.OpenSerialPort` которых используется метод.  
  
|Кому|См.|  
|-|-|  
|Набор модема, подключенного к последовательному порту|[Практическое руководство. Дозвон при помощи модема, подключенного к последовательному порту компьютера](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|Отправка строки в последовательный порт|[Практическое руководство. Отправка строк в последовательные порты](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|Получение строк из последовательного порта|[Практическое руководство. Получение строк из последовательных портов](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Доступность по типу проекта  
  
|Тип проекта|Доступно|  
|-|-|  
|Приложение Windows|**Да**|  
|Библиотека классов|**Да**|  
|Консольное приложение|**Да**|  
|Библиотека элементов управления Windows|**Да**|  
|Библиотека веб-элементов управления|Нет|  
|Служба Windows|**Да**|  
|Веб-сайт|Нет|  
  
   
  
## Examples  
 В этом примере описывается отправка строк в `COM1` последовательный порт компьютера.  
  
 Блок `Using` позволяет приложению закрыть последовательный порт даже в том случае, если он создает исключение. Весь код, управляющий последовательным портом, должен находиться в этом блоке или `Try...Catch...Finally` в блоке с вызовом для <xref:System.IO.Ports.SerialPort.Close%2A> использования метода.  
  
 Метод <xref:System.IO.Ports.SerialPort.WriteLine%2A> отправляет данные в последовательный порт.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Дополнительные сведения см. в разделе [Практическое руководство. Отправка строк в последовательные](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)порты.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="portName" /> имеет значение <see langword="Nothing" /> или является пустой строкой.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md">Практическое руководство. Дозвон при помощи модема, подключенного к последовательному порту компьютера, в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md">Практическое руководство. Отправка строк в последовательный порт в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md">Практическое руководство. Получение строк из последовательных портов в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Оператор Using (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenSerialPort (portName As String, baudRate As Integer) As SerialPort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="portName"><see langword="String" />. Обязательно. Имя открываемого порта.</param>
        <param name="baudRate"><see langword="Integer" />. Скорость порта (в бодах).</param>
        <summary>Создает и открывает объект <see cref="T:System.IO.Ports.SerialPort" />.</summary>
        <returns>Открытый объект <see cref="T:System.IO.Ports.SerialPort" />, настроенный с помощью предоставленных аргументов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод создает и <xref:System.IO.Ports.SerialPort> открывает объект. `My.Computer.Ports.OpenSerialPort` Аргументы `OpenSerialPort` метода определяют параметры <xref:System.IO.Ports.SerialPort> объекта.  
  
 Код должен закрыть <xref:System.IO.Ports.SerialPort> объект по завершении использования объекта. Можно использовать <xref:System.IO.Ports.SerialPort.Close%2A> метод, чтобы явно закрыть объект, `Using` или инструкцию, чтобы закрыть его неявно. Дополнительные сведения см. в примере, приведенном в этом разделе.  
  
 В следующей таблице приведены примеры задач, в `My.Computer.Ports.OpenSerialPort` которых используется метод.  
  
|Кому|См.|  
|-|-|  
|Набор модема, подключенного к последовательному порту|[Практическое руководство. Дозвон при помощи модема, подключенного к последовательному порту компьютера](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|Отправка строки в последовательный порт|[Практическое руководство. Отправка строк в последовательные порты](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|Получение строк из последовательного порта|[Практическое руководство. Получение строк из последовательных портов](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Доступность по типу проекта  
  
|Тип проекта|Доступно|  
|-|-|  
|Приложение Windows|**Да**|  
|Библиотека классов|**Да**|  
|Консольное приложение|**Да**|  
|Библиотека элементов управления Windows|**Да**|  
|Библиотека веб-элементов управления|Нет|  
|Служба Windows|**Да**|  
|Веб-сайт|Нет|  
  
   
  
## Examples  
 В этом примере описывается отправка строк в `COM1` последовательный порт компьютера.  
  
 Блок `Using` позволяет приложению закрыть последовательный порт даже в том случае, если он создает исключение. Весь код, управляющий последовательным портом, должен находиться в этом блоке или `Try...Catch...Finally` в блоке с вызовом для <xref:System.IO.Ports.SerialPort.Close%2A> использования метода.  
  
 Метод <xref:System.IO.Ports.SerialPort.WriteLine%2A> отправляет данные в последовательный порт.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Дополнительные сведения см. в разделе [Практическое руководство. Отправка строк в последовательные](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)порты.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="portName" /> имеет значение <see langword="Nothing" /> или является пустой строкой.</exception>
        <exception cref="T:System.ArgumentException">Значение <paramref name="baudRate" /> не больше нуля.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md">Практическое руководство. Дозвон при помощи модема, подключенного к последовательному порту компьютера, в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md">Практическое руководство. Отправка строк в последовательный порт в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md">Практическое руководство. Получение строк из последовательных портов в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Оператор Using (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int * System.IO.Ports.Parity -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate, parity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
      </Parameters>
      <Docs>
        <param name="portName"><see langword="String" />. Обязательно. Имя открываемого порта.</param>
        <param name="baudRate"><see langword="Integer" />. Скорость порта (в бодах).</param>
        <param name="parity"><see cref="T:System.IO.Ports.Parity" />. Четность порта.</param>
        <summary>Создает и открывает объект <see cref="T:System.IO.Ports.SerialPort" />.</summary>
        <returns>Открытый объект <see cref="T:System.IO.Ports.SerialPort" />, настроенный с помощью предоставленных аргументов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод создает и <xref:System.IO.Ports.SerialPort> открывает объект. `My.Computer.Ports.OpenSerialPort` Аргументы `OpenSerialPort` метода определяют параметры <xref:System.IO.Ports.SerialPort> объекта.  
  
 Код должен закрыть <xref:System.IO.Ports.SerialPort> объект по завершении использования объекта. Можно использовать <xref:System.IO.Ports.SerialPort.Close%2A> метод, чтобы явно закрыть объект, `Using` или инструкцию, чтобы закрыть его неявно. Дополнительные сведения см. в примере, приведенном в этом разделе.  
  
 В следующей таблице приведены примеры задач, в `My.Computer.Ports.OpenSerialPort` которых используется метод.  
  
|Кому|См.|  
|-|-|  
|Набор модема, подключенного к последовательному порту|[Практическое руководство. Дозвон при помощи модема, подключенного к последовательному порту компьютера](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|Отправка строки в последовательный порт|[Практическое руководство. Отправка строк в последовательные порты](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|Получение строк из последовательного порта|[Практическое руководство. Получение строк из последовательных портов](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Доступность по типу проекта  
  
|Тип проекта|Доступно|  
|-|-|  
|Приложение Windows|**Да**|  
|Библиотека классов|**Да**|  
|Консольное приложение|**Да**|  
|Библиотека элементов управления Windows|**Да**|  
|Библиотека веб-элементов управления|Нет|  
|Служба Windows|**Да**|  
|Веб-сайт|Нет|  
  
   
  
## Examples  
 В этом примере описывается отправка строк в `COM1` последовательный порт компьютера.  
  
 Блок `Using` позволяет приложению закрыть последовательный порт даже в том случае, если он создает исключение. Весь код, управляющий последовательным портом, должен находиться в этом блоке или `Try...Catch...Finally` в блоке с вызовом для <xref:System.IO.Ports.SerialPort.Close%2A> использования метода.  
  
 Метод <xref:System.IO.Ports.SerialPort.WriteLine%2A> отправляет данные в последовательный порт.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Дополнительные сведения см. в разделе [Практическое руководство. Отправка строк в последовательные](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)порты.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="portName" /> имеет значение <see langword="Nothing" /> или является пустой строкой.</exception>
        <exception cref="T:System.ArgumentException">Значение <paramref name="baudRate" /> не больше нуля.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Параметр <paramref name="parity" /> не совпадает ни с одним из значений перечисления <see cref="T:System.IO.Ports.Parity" />.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md">Практическое руководство. Дозвон при помощи модема, подключенного к последовательному порту компьютера, в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md">Практическое руководство. Отправка строк в последовательный порт в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md">Практическое руководство. Получение строк из последовательных портов в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Оператор Using (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity, int32 dataBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity, int dataBits);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int * System.IO.Ports.Parity * int -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate, parity, dataBits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
        <Parameter Name="dataBits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="portName"><see langword="String" />. Обязательно. Имя открываемого порта.</param>
        <param name="baudRate"><see langword="Integer" />. Скорость порта (в бодах).</param>
        <param name="parity"><see cref="T:System.IO.Ports.Parity" />. Четность порта.</param>
        <param name="dataBits"><see langword="Integer" />. Настройки битов данных порта.</param>
        <summary>Создает и открывает объект <see cref="T:System.IO.Ports.SerialPort" />.</summary>
        <returns>Открытый объект <see cref="T:System.IO.Ports.SerialPort" />, настроенный с помощью предоставленных аргументов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод создает и <xref:System.IO.Ports.SerialPort> открывает объект. `My.Computer.Ports.OpenSerialPort` Аргументы `OpenSerialPort` метода определяют параметры <xref:System.IO.Ports.SerialPort> объекта.  
  
 Код должен закрыть <xref:System.IO.Ports.SerialPort> объект по завершении использования объекта. Можно использовать <xref:System.IO.Ports.SerialPort.Close%2A> метод, чтобы явно закрыть объект, `Using` или инструкцию, чтобы закрыть его неявно. Дополнительные сведения см. в примере, приведенном в этом разделе.  
  
 В следующей таблице приведены примеры задач, в `My.Computer.Ports.OpenSerialPort` которых используется метод.  
  
|Кому|См.|  
|-|-|  
|Набор модема, подключенного к последовательному порту|[Практическое руководство. Дозвон при помощи модема, подключенного к последовательному порту компьютера](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|Отправка строки в последовательный порт|[Практическое руководство. Отправка строк в последовательные порты](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|Получение строк из последовательного порта|[Практическое руководство. Получение строк из последовательных портов](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Доступность по типу проекта  
  
|Тип проекта|Доступно|  
|-|-|  
|Приложение Windows|**Да**|  
|Библиотека классов|**Да**|  
|Консольное приложение|**Да**|  
|Библиотека элементов управления Windows|**Да**|  
|Библиотека веб-элементов управления|Нет|  
|Служба Windows|**Да**|  
|Веб-сайт|Нет|  
  
   
  
## Examples  
 В этом примере описывается отправка строк в `COM1` последовательный порт компьютера.  
  
 Блок `Using` позволяет приложению закрыть последовательный порт даже в том случае, если он создает исключение. Весь код, управляющий последовательным портом, должен находиться в этом блоке или `Try...Catch...Finally` в блоке с вызовом для <xref:System.IO.Ports.SerialPort.Close%2A> использования метода.  
  
 Метод <xref:System.IO.Ports.SerialPort.WriteLine%2A> отправляет данные в последовательный порт.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Дополнительные сведения см. в разделе [Практическое руководство. Отправка строк в последовательные](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)порты.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="portName" /> имеет значение <see langword="Nothing" /> или является пустой строкой.</exception>
        <exception cref="T:System.ArgumentException">Значение <paramref name="dataBits" /> не больше нуля.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Параметр <paramref name="parity" /> не совпадает ни с одним из значений перечисления <see cref="T:System.IO.Ports.Parity" />.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md">Практическое руководство. Дозвон при помощи модема, подключенного к последовательному порту компьютера, в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md">Практическое руководство. Отправка строк в последовательный порт в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md">Практическое руководство. Получение строк из последовательных портов в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Оператор Using (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="OpenSerialPort">
      <MemberSignature Language="C#" Value="public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits, System.IO.Ports.StopBits stopBits);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.IO.Ports.SerialPort OpenSerialPort(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity, int32 dataBits, valuetype System.IO.Ports.StopBits stopBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Ports::SerialPort ^ OpenSerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity, int dataBits, System::IO::Ports::StopBits stopBits);" />
      <MemberSignature Language="F#" Value="member this.OpenSerialPort : string * int * System.IO.Ports.Parity * int * System.IO.Ports.StopBits -&gt; System.IO.Ports.SerialPort" Usage="ports.OpenSerialPort (portName, baudRate, parity, dataBits, stopBits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPort</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
        <Parameter Name="dataBits" Type="System.Int32" />
        <Parameter Name="stopBits" Type="System.IO.Ports.StopBits" />
      </Parameters>
      <Docs>
        <param name="portName"><see langword="String" />. Обязательно. Имя открываемого порта.</param>
        <param name="baudRate"><see langword="Integer" />. Скорость порта (в бодах).</param>
        <param name="parity"><see cref="T:System.IO.Ports.Parity" />. Четность порта.</param>
        <param name="dataBits"><see langword="Integer" />. Настройки битов данных порта.</param>
        <param name="stopBits"><see cref="T:System.IO.Ports.StopBits" />. Параметры стоповых битов порта.</param>
        <summary>Создает и открывает объект <see cref="T:System.IO.Ports.SerialPort" />.</summary>
        <returns>Открытый объект <see cref="T:System.IO.Ports.SerialPort" />, настроенный с помощью предоставленных аргументов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод создает и <xref:System.IO.Ports.SerialPort> открывает объект. `My.Computer.Ports.OpenSerialPort` Аргументы `OpenSerialPort` метода определяют параметры <xref:System.IO.Ports.SerialPort> объекта.  
  
 Код должен закрыть <xref:System.IO.Ports.SerialPort> объект по завершении использования объекта. Можно использовать <xref:System.IO.Ports.SerialPort.Close%2A> метод, чтобы явно закрыть объект, `Using` или инструкцию, чтобы закрыть его неявно. Дополнительные сведения см. в примере, приведенном в этом разделе.  
  
 В следующей таблице приведены примеры задач, в `My.Computer.Ports.OpenSerialPort` которых используется метод.  
  
|Кому|См.|  
|-|-|  
|Набор модема, подключенного к последовательному порту|[Практическое руководство. Дозвон при помощи модема, подключенного к последовательному порту компьютера](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md)|  
|Отправка строки в последовательный порт|[Практическое руководство. Отправка строк в последовательные порты](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)|  
|Получение строк из последовательного порта|[Практическое руководство. Получение строк из последовательных портов](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Доступность по типу проекта  
  
|Тип проекта|Доступно|  
|-|-|  
|Приложение Windows|**Да**|  
|Библиотека классов|**Да**|  
|Консольное приложение|**Да**|  
|Библиотека элементов управления Windows|**Да**|  
|Библиотека веб-элементов управления|Нет|  
|Служба Windows|**Да**|  
|Веб-сайт|Нет|  
  
   
  
## Examples  
 В этом примере описывается отправка строк в `COM1` последовательный порт компьютера.  
  
 Блок `Using` позволяет приложению закрыть последовательный порт даже в том случае, если он создает исключение. Весь код, управляющий последовательным портом, должен находиться в этом блоке или `Try...Catch...Finally` в блоке с вызовом для <xref:System.IO.Ports.SerialPort.Close%2A> использования метода.  
  
 Метод <xref:System.IO.Ports.SerialPort.WriteLine%2A> отправляет данные в последовательный порт.  
  
 [!code-vb[VbVbalrMyComputer#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#33)]  
  
 Дополнительные сведения см. в разделе [Практическое руководство. Отправка строк в последовательные](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md)порты.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="portName" /> имеет значение <see langword="Nothing" /> или является пустой строкой.</exception>
        <exception cref="T:System.ArgumentException">Значение <paramref name="dataBits" /> не больше нуля.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Параметр <paramref name="stopBits" /> не совпадает ни с одним из значений перечисления <see cref="T:System.IO.Ports.StopBits" />.</exception>
        <altmember cref="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
        <altmember cref="T:System.IO.Ports.Parity" />
        <altmember cref="T:System.IO.Ports.StopBits" />
        <altmember cref="T:System.IO.Ports.SerialPort" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-dial-modems-attached-to-serial-ports.md">Практическое руководство. Дозвон при помощи модема, подключенного к последовательному порту компьютера, в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-send-strings-to-serial-ports.md">Практическое руководство. Отправка строк в последовательный порт в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-receive-strings-from-serial-ports.md">Практическое руководство. Получение строк из последовательных портов в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Оператор Using (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="SerialPortNames">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; SerialPortNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; SerialPortNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerialPortNames As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ SerialPortNames { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SerialPortNames : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="Microsoft.VisualBasic.Devices.Ports.SerialPortNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает набор имен последовательных портов компьютера.</summary>
        <value>Набор имен последовательных портов компьютера.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Computer.Ports.SerialPortNames` Свойство возвращает коллекцию имен последовательных портов на компьютере.  
  
> [!NOTE]
>  Имена портов, возвращаемые свойством `My.Computer.Ports.SerialPortNames`, могут быть неверными при выполнении программы в Windows 98. Во избежание ошибок приложения используйте обработку исключений, например оператор `Try...Catch...Finally` или оператор `Using`, если для открытия портов необходимо использовать их имена.  
  
 В следующей таблице приведен пример задачи, включающей `My.Computer.Ports.SerialPortNames` свойство.  
  
|Кому|См.|  
|-|-|  
|Отображение доступных последовательных портов|[Практическое руководство. Отображение доступных последовательных портов](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md)|  
  
## <a name="availability-by-project-type"></a>Доступность по типу проекта  
  
|Тип проекта|Доступно|  
|-|-|  
|Приложение Windows|**Да**|  
|Библиотека классов|**Да**|  
|Консольное приложение|**Да**|  
|Библиотека элементов управления Windows|**Да**|  
|Библиотека веб-элементов управления|Нет|  
|Служба Windows|**Да**|  
|Веб-сайт|Нет|  
  
   
  
## Examples  
 В этом примере циклически перебираются все строки, которые возвращает свойство `My.Computer.Ports.SerialPortNames`. Эти строки представляют собой имена доступных последовательных портов на компьютере.  
  
 Как правило, пользователь выбирает, какой последовательный порт приложение должно использовать из списка доступных портов. В этом примере имена последовательных портов хранятся в элементе управления <xref:System.Windows.Forms.ListBox>. Дополнительные сведения см. в разделе [Элемент управления ListBox](~/docs/framework/winforms/controls/listbox-control-windows-forms.md).  
  
 [!code-vb[VbVbalrMyComputer#45](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#45)]  
  
 Для этого примера требуются:  
  
-   ссылка на пространство имен <xref:System?displayProperty=nameWithType>.  
  
-   Ваша форма должна включать элемент управления <xref:System.Windows.Forms.ListBox> с именем `ListBox1`.  
  
 Дополнительные сведения см. в разделе [Практическое руководство. Отображение доступных последовательных портов](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports.md).  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None." />
        <altmember cref="Overload:Microsoft.VisualBasic.Devices.Ports.OpenSerialPort" />
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-show-available-serial-ports">Практическое руководство. Отображение доступных последовательных портов в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/try-catch-finally-statement.md">Оператор Try... Catch... Finally (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/using-statement.md">Оператор Using (Visual Basic)</related>
      </Docs>
    </Member>
  </Members>
</Type>
