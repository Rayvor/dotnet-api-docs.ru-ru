<Type Name="Network" FullName="Microsoft.VisualBasic.Devices.Network">
  <Metadata><Meta Name="ms.openlocfilehash" Value="24f4734741c07d6e312d9c6048d259b65560eb2b" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70553705" /></Metadata><TypeSignature Language="C#" Value="public class Network" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Network extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Network" />
  <TypeSignature Language="VB.NET" Value="Public Class Network" />
  <TypeSignature Language="C++ CLI" Value="public ref class Network" />
  <TypeSignature Language="F#" Value="type Network = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет свойство, событие и методы для взаимодействия с сетью, к которой подключен компьютер.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В следующей таблице приведены примеры задач, `My.Computer.Network` включающих объект.  
  
|Кому|См.|  
|-|-|  
|Отправить файл|[Практическое руководство. Передача файла](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
|Скачать файл|[Практическое руководство. Скачивание файла](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
|Проверить состояние подключения|[Практическое руководство. Проверка состояния подключения](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|  
  
   
  
## Examples  
 В этом примере файл `Order.txt` перегружается в. http://www.cohowinery.com/uploads  
  
 [!code-vb[VbVbalrMyNetwork#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Network ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Network();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:Microsoft.VisualBasic.Devices.Network" />.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Загружает указанный удаленный файл и сохраняет его в указанном местоположении.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationFileName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">Путь к файлу, который необходимо загрузить, включая имя файла и адрес сайта.</param>
        <param name="destinationFileName">Имя загружаемого файла и путь к нему.</param>
        <summary>Загружает указанный удаленный файл и сохраняет его в указанном местоположении.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если конечный файл уже существует, `DownloadFile` метод не перезапишет существующий файл. Можно использовать одну из других перегрузок <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> метода, чтобы сообщить ему о необходимости перезаписи существующих файлов, предоставить учетные данные пользователя или указать конкретное значение времени ожидания.  
  
 `DownloadFile`выводит сведения о трассировке при включении трассировки сети в приложении. Дополнительные сведения см. в разделе [Включение трассировки сети](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  `DownloadFile` Метод не отправляет дополнительные заголовки HTTP. Некоторые серверы могут возвращать 500 (внутренняя ошибка сервера), если отсутствует заголовок необязательного агента пользователя. Для отправки необязательных заголовков необходимо создать запрос с <xref:System.Net.WebClient> помощью класса.  
  
 В следующей таблице приведен пример задачи, включающей `My.Computer.Network.DownloadFile` метод.  
  
|Кому|См.|  
|-|-|  
|Скачать файл|[Практическое руководство. Скачивание файла](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 В этом примере файл `WineList.txt` загружается из `http://www.cohowinery.com/downloads` и сохраняется `C:\Documents and Settings\All Users\Documents`в.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Этот пример скачивает файл `WineList.txt` из `http://www.cohowinery.com/downloads` и сохраняет его в `C:\Documents and Settings\All Users\Documents`, указывая интервал времени ожидания 500 миллисекунд.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> заканчивается косой чертой.</exception>
        <exception cref="T:System.TimeoutException">Сервер не отвечает в течение времени ожидания по умолчанию (100 секунд).</exception>
        <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимых разрешений для выполнения сетевой операции.</exception>
        <exception cref="T:System.Net.WebException">Запрос отклонен целевым веб-сервером.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Управляет возможностью доступа к файлам и папкам. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Управляет правами доступа к интернет-ресурсам HTTP. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Практическое руководство. Загрузка файла в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Практическое руководство. Анализ путей к файлам в Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationFileName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">Путь к файлу, который необходимо загрузить, включая имя файла и адрес сайта.</param>
        <param name="destinationFileName">Имя загружаемого файла и путь к нему.</param>
        <summary>Загружает указанный удаленный файл и сохраняет его в указанном местоположении.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если конечный файл уже существует, `DownloadFile` метод не перезапишет существующий файл. Можно использовать одну из других перегрузок <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> метода, чтобы сообщить ему о необходимости перезаписи существующих файлов, предоставить учетные данные пользователя или указать конкретное значение времени ожидания. `DownloadFile`выводит сведения о трассировке при включении трассировки сети в приложении. Дополнительные сведения см. в разделе [Включение трассировки сети](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  `DownloadFile` Метод не отправляет дополнительные заголовки HTTP. Некоторые серверы могут возвращать 500 (внутренняя ошибка сервера), если отсутствует заголовок необязательного агента пользователя. Для отправки необязательных заголовков необходимо создать запрос с <xref:System.Net.WebClient> помощью класса.  
  
 В следующей таблице приведен пример задачи, включающей `My.Computer.Network.DownloadFile` метод.  
  
|Кому|См.|  
|-|-|  
|Скачать файл|[Практическое руководство. Скачивание файла](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 В этом примере файл `WineList.txt` загружается из `http://www.cohowinery.com/downloads` и сохраняется `C:\Documents and Settings\All Users\Documents`в.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Этот пример скачивает файл `WineList.txt` из `http://www.cohowinery.com/downloads` и сохраняет его в `C:\Documents and Settings\All Users\Documents`, указывая интервал времени ожидания 500 миллисекунд.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> заканчивается косой чертой.</exception>
        <exception cref="T:System.TimeoutException">Сервер не отвечает в течение времени ожидания по умолчанию (100 секунд).</exception>
        <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимых разрешений для выполнения сетевой операции.</exception>
        <exception cref="T:System.Net.WebException">Запрос отклонен целевым веб-сервером.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Управляет возможностью доступа к файлам и папкам. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Управляет правами доступа к интернет-ресурсам HTTP. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Практическое руководство. Загрузка файла в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Практическое руководство. Анализ путей к файлам в Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationFileName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">Путь к файлу, который необходимо загрузить, включая имя файла и адрес сайта.</param>
        <param name="destinationFileName">Имя загружаемого файла и путь к нему.</param>
        <param name="userName">Имя пользователя, подлинность которого необходимо проверить. Значением по умолчанию является пустая строка, "".</param>
        <param name="password">Пароль, подлинность которого необходимо проверить. Значением по умолчанию является пустая строка, "".</param>
        <summary>Загружает указанный удаленный файл и сохраняет его в указанном местоположении.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если конечный файл уже существует, `DownloadFile` метод не перезапишет существующий файл. Можно использовать одну из других перегрузок <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> метода, чтобы сообщить ему о необходимости перезаписи существующих файлов или указать определенное значение времени ожидания.  
  
 `DownloadFile`выводит сведения о трассировке при включении трассировки сети в приложении. Дополнительные сведения см. в разделе [Включение трассировки сети](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  `DownloadFile` Метод не отправляет дополнительные заголовки HTTP. Некоторые серверы могут возвращать 500 (внутренняя ошибка сервера), если отсутствует заголовок необязательного агента пользователя. Для отправки необязательных заголовков необходимо создать запрос с <xref:System.Net.WebClient> помощью класса.  
  
> [!NOTE]
>  Протокол FTP отправляет сведения, включая пароли, в виде обычного текста и не должен использоваться для передачи конфиденциальной информации.  
  
 В следующей таблице приведен пример задачи, включающей `My.Computer.Network.DownloadFile` метод.  
  
|Кому|См.|  
|-|-|  
|Скачать файл|[Практическое руководство. Скачивание файла](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 В этом примере файл `WineList.txt` загружается из `http://www.cohowinery.com/downloads` и сохраняется `C:\Documents and Settings\All Users\Documents`в.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Этот пример скачивает файл `WineList.txt` из `http://www.cohowinery.com/downloads` и сохраняет его в `C:\Documents and Settings\All Users\Documents`, указывая интервал времени ожидания 500 миллисекунд.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> заканчивается косой чертой.</exception>
        <exception cref="T:System.TimeoutException">Сервер не отвечает в течение времени ожидания по умолчанию (100 секунд).</exception>
        <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимых разрешений для выполнения сетевой операции.</exception>
        <exception cref="T:System.Net.WebException">Запрос отклонен целевым веб-сервером.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Управляет возможностью доступа к файлам и папкам. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Управляет правами доступа к интернет-ресурсам HTTP. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Практическое руководство. Загрузка файла в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Практическое руководство. Анализ путей к файлам в Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationFileName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">Путь к файлу, который необходимо загрузить, включая имя файла и адрес сайта.</param>
        <param name="destinationFileName">Имя загружаемого файла и путь к нему.</param>
        <param name="userName">Имя пользователя, подлинность которого необходимо проверить. Значением по умолчанию является пустая строка, "".</param>
        <param name="password">Пароль, подлинность которого необходимо проверить. Значением по умолчанию является пустая строка, "".</param>
        <summary>Загружает указанный удаленный файл и сохраняет его в указанном местоположении.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если конечный файл уже существует, `DownloadFile` метод не перезапишет существующий файл. Можно использовать одну из других перегрузок <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> метода, чтобы сообщить ему о необходимости перезаписи существующих файлов или указать определенное значение времени ожидания.  
  
 `DownloadFile`выводит сведения о трассировке при включении трассировки сети в приложении. Дополнительные сведения см. в разделе [Включение трассировки сети](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  `DownloadFile` Метод не отправляет дополнительные заголовки HTTP. Некоторые серверы могут возвращать 500 (внутренняя ошибка сервера), если отсутствует заголовок необязательного агента пользователя. Для отправки необязательных заголовков необходимо создать запрос с <xref:System.Net.WebClient> помощью класса.  
  
> [!NOTE]
>  Протокол FTP отправляет сведения, включая пароли, в виде обычного текста и не должен использоваться для передачи конфиденциальной информации.  
  
 В следующей таблице приведен пример задачи, включающей `My.Computer.Network.DownloadFile` метод.  
  
|Кому|См.|  
|-|-|  
|Скачать файл|[Практическое руководство. Скачивание файла](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 В этом примере файл `WineList.txt` загружается из `http://www.cohowinery.com/downloads` и сохраняется `C:\Documents and Settings\All Users\Documents`в.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Этот пример скачивает файл `WineList.txt` из `http://www.cohowinery.com/downloads` и сохраняет его в `C:\Documents and Settings\All Users\Documents`, указывая интервал времени ожидания 500 миллисекунд.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> заканчивается косой чертой.</exception>
        <exception cref="T:System.TimeoutException">Сервер не отвечает в течение времени ожидания по умолчанию (100 секунд).</exception>
        <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимых разрешений для выполнения сетевой операции.</exception>
        <exception cref="T:System.Net.WebException">Запрос отклонен целевым веб-сервером.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Управляет возможностью доступа к файлам и папкам. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Управляет правами доступа к интернет-ресурсам HTTP. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Практическое руководство. Загрузка файла в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Практическое руководство. Анализ путей к файлам в Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * System.Net.ICredentials * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, networkCredentials, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationFileName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="overwrite" Type="System.Boolean" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address"><see langword="String" /> или <see cref="T:System.Uri" />. Путь к файлу, который необходимо загрузить, включая имя файла и адрес сайта.</param>
        <param name="destinationFileName"><see langword="String" />. Имя загружаемого файла и путь к нему.</param>
        <param name="networkCredentials"><see cref="T:System.Net.ICredentials" />. Учетные данные, которые необходимо предоставить.</param>
        <param name="showUI">Значение <see langword="True" /> для отображения хода выполнения операции; в противном случае — значение <see langword="False" />. Значение по умолчанию — <see langword="False" />.</param>
        <param name="connectionTimeout">Интервал ожидания в миллисекундах. Значение по умолчанию — 100 секунд.</param>
        <param name="overwrite">Значение <see langword="True" /> для перезаписи существующих файлов; в противном случае — значение <see langword="False" />. Значение по умолчанию — <see langword="False" />.</param>
        <summary>Загружает указанный удаленный файл и сохраняет его в указанном местоположении.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `showUI` параметр имеет `True`значение, то отображается диалоговое окно, показывающее ход выполнения операции; диалоговое окно содержит кнопку **Отмена** , которую можно использовать для отмены операции. Диалоговое окно не является модальным и, следовательно, не блокирует ввод данных пользователем в другие окна программы.  
  
 Если сервер не отвечает в течение указанного `connectionTimeout`, операция отменяется и создается исключение.  
  
 `DownloadFile`выводит сведения о трассировке при включении трассировки сети в приложении. Дополнительные сведения см. в разделе [Включение трассировки сети](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  `DownloadFile` Метод не отправляет дополнительные заголовки HTTP. Некоторые серверы могут возвращать 500 (внутренняя ошибка сервера), если отсутствует заголовок необязательного агента пользователя. Для отправки необязательных заголовков необходимо создать запрос с <xref:System.Net.WebClient> помощью класса.  
  
> [!NOTE]
>  Протокол FTP отправляет сведения, включая пароли, в виде обычного текста и не должен использоваться для передачи конфиденциальной информации.  
  
 В следующей таблице приведен пример задачи, включающей `My.Computer.Network.DownloadFile` метод.  
  
|Кому|См.|  
|-|-|  
|Скачать файл|[Практическое руководство. Скачивание файла](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 В этом примере файл `WineList.txt` загружается из `http://www.cohowinery.com/downloads` и сохраняется `C:\Documents and Settings\All Users\Documents`в.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Этот пример скачивает файл `WineList.txt` из `http://www.cohowinery.com/downloads` и сохраняет его в `C:\Documents and Settings\All Users\Documents`, указывая интервал времени ожидания 500 миллисекунд.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> заканчивается косой чертой.</exception>
        <exception cref="T:System.IO.IOException">Для <paramref name="overwrite" /> установлено значение <see langword="False" />, а конечный файл уже существует.</exception>
        <exception cref="T:System.TimeoutException">Сервер не отвечает в пределах указанного <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимых разрешений для выполнения сетевой операции.</exception>
        <exception cref="T:System.Net.WebException">Запрос отклонен целевым веб-сервером.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Управляет возможностью доступа к файлам и папкам. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Управляет разрешениями, связанными с пользовательскими интерфейсами и буфером обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Управляет правами доступа к интернет-ресурсам HTTP. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Практическое руководство. Загрузка файла в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Практическое руководство. Анализ путей к файлам в Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationFileName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="overwrite" Type="System.Boolean" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">Путь к файлу, который необходимо загрузить, включая имя файла и адрес сайта.</param>
        <param name="destinationFileName">Имя загружаемого файла и путь к нему.</param>
        <param name="userName">Имя пользователя, подлинность которого необходимо проверить. Значением по умолчанию является пустая строка, "".</param>
        <param name="password">Пароль, подлинность которого необходимо проверить. Значением по умолчанию является пустая строка, "".</param>
        <param name="showUI">Значение <see langword="True" /> для отображения хода выполнения операции; в противном случае — значение <see langword="False" />. Значение по умолчанию — <see langword="False" />.</param>
        <param name="connectionTimeout"><see cref="T:System.Int32" />. Интервал ожидания в миллисекундах. Значение по умолчанию — 100 секунд.</param>
        <param name="overwrite">Значение <see langword="True" /> для перезаписи существующих файлов; в противном случае — значение <see langword="False" />. Значение по умолчанию — <see langword="False" />.</param>
        <summary>Загружает указанный удаленный файл и сохраняет его в указанном местоположении.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `showUI` параметр имеет `True`значение, то отображается диалоговое окно, показывающее ход выполнения операции; диалоговое окно содержит кнопку **Отмена** , которую можно использовать для отмены операции. Диалоговое окно не является модальным и, следовательно, не блокирует ввод данных пользователем в другие окна программы.  
  
 Если сервер не отвечает в течение указанного `connectionTimeout`, операция отменяется и создается исключение.  
  
 `DownloadFile`выводит сведения о трассировке при включении трассировки сети в приложении. Дополнительные сведения см. в разделе [Включение трассировки сети](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  `DownloadFile` Метод не отправляет дополнительные заголовки HTTP. Некоторые серверы могут возвращать 500 (внутренняя ошибка сервера), если отсутствует заголовок необязательного агента пользователя. Для отправки необязательных заголовков необходимо создать запрос с <xref:System.Net.WebClient> помощью класса.  
  
> [!NOTE]
>  Протокол FTP отправляет сведения, включая пароли, в виде обычного текста и не должен использоваться для передачи конфиденциальной информации.  
  
 В следующей таблице приведен пример задачи, включающей `My.Computer.Network.DownloadFile` метод.  
  
|Кому|См.|  
|-|-|  
|Скачать файл|[Практическое руководство. Скачивание файла](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 В этом примере файл `WineList.txt` загружается из `http://www.cohowinery.com/downloads` и сохраняется `C:\Documents and Settings\All Users\Documents`в.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Этот пример скачивает файл `WineList.txt` из `http://www.cohowinery.com/downloads` и сохраняет его в `C:\Documents and Settings\All Users\Documents`, указывая интервал времени ожидания 500 миллисекунд.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> заканчивается косой чертой.</exception>
        <exception cref="T:System.IO.IOException">Для <paramref name="overwrite" /> установлено значение <see langword="False" />, а конечный файл уже существует.</exception>
        <exception cref="T:System.TimeoutException">Сервер не отвечает в пределах указанного <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимых разрешений для выполнения сетевой операции.</exception>
        <exception cref="T:System.Net.WebException">Запрос отклонен целевым веб-сервером.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Управляет возможностью доступа к файлам и папкам. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Управляет разрешениями, связанными с пользовательскими интерфейсами и буфером обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Управляет правами доступа к интернет-ресурсам HTTP. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Практическое руководство. Загрузка файла в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Практическое руководство. Анализ путей к файлам в Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * System.Net.ICredentials * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, networkCredentials, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationFileName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="overwrite" Type="System.Boolean" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">Путь к файлу, который необходимо загрузить, включая имя файла и адрес сайта.</param>
        <param name="destinationFileName">Имя загружаемого файла и путь к нему.</param>
        <param name="networkCredentials">Учетные данные, которые необходимо предоставить.</param>
        <param name="showUI">Значение <see langword="True" /> для отображения хода выполнения операции; в противном случае — значение <see langword="False" />. Значение по умолчанию — <see langword="False" />.</param>
        <param name="connectionTimeout">Интервал ожидания в миллисекундах. Значение по умолчанию — 100 секунд.</param>
        <param name="overwrite">Значение <see langword="True" /> для перезаписи существующих файлов; в противном случае — значение <see langword="False" />. Значение по умолчанию — <see langword="False" />.</param>
        <param name="onUserCancel">Указывает, что должно выполняться, когда пользователь нажимает кнопки **Отмена** или **Нет** в диалоговом окне, если для параметра <paramref name="showUI" /> задано значение <see langword="True" />. Значение по умолчанию — <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Загружает указанный удаленный файл и сохраняет его в указанном местоположении.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `showUI` параметр имеет `True`значение, то отображается диалоговое окно, показывающее ход выполнения операции; диалоговое окно содержит кнопку **Отмена** , которую можно использовать для отмены операции. Диалоговое окно не является модальным и, следовательно, не блокирует ввод данных пользователем в другие окна программы.  
  
 Если сервер не отвечает в течение указанного `connectionTimeout`, операция отменяется и создается исключение.  
  
 `DownloadFile`выводит сведения о трассировке при включении трассировки сети в приложении. Дополнительные сведения см. в разделе [Включение трассировки сети](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  `DownloadFile` Метод не отправляет дополнительные заголовки HTTP. Некоторые серверы могут возвращать 500 (внутренняя ошибка сервера), если отсутствует заголовок необязательного агента пользователя. Для отправки необязательных заголовков необходимо создать запрос с <xref:System.Net.WebClient> помощью класса.  
  
> [!NOTE]
>  Протокол FTP отправляет сведения, включая пароли, в виде обычного текста и не должен использоваться для передачи конфиденциальной информации.  
  
 В следующей таблице приведен пример задачи, включающей `My.Computer.Network.DownloadFile` метод.  
  
|Кому|См.|  
|-|-|  
|Скачать файл|[Практическое руководство. Скачивание файла](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 В этом примере файл `WineList.txt` загружается из `http://www.cohowinery.com/downloads` и сохраняется `C:\Documents and Settings\All Users\Documents`в.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Этот пример скачивает файл `WineList.txt` из `http://www.cohowinery.com/downloads` и сохраняет его в `C:\Documents and Settings\All Users\Documents`, указывая интервал времени ожидания 500 миллисекунд.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> заканчивается косой чертой.</exception>
        <exception cref="T:System.IO.IOException">Для <paramref name="overwrite" /> установлено значение <see langword="False" />, а конечный файл уже существует.</exception>
        <exception cref="T:System.TimeoutException">Сервер не отвечает в пределах указанного <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимых разрешений для выполнения сетевой операции.</exception>
        <exception cref="T:System.Net.WebException">Запрос отклонен целевым веб-сервером.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Управляет возможностью доступа к файлам и папкам. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Управляет разрешениями, связанными с пользовательскими интерфейсами и буфером обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Управляет правами доступа к интернет-ресурсам HTTP. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Практическое руководство. Загрузка файла в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Практическое руководство. Анализ путей к файлам в Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationFileName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="overwrite" Type="System.Boolean" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">Путь к файлу, который необходимо загрузить, включая имя файла и адрес сайта.</param>
        <param name="destinationFileName">Имя загружаемого файла и путь к нему.</param>
        <param name="userName">Имя пользователя, подлинность которого необходимо проверить. Значением по умолчанию является пустая строка, "".</param>
        <param name="password">Пароль, подлинность которого необходимо проверить. Значением по умолчанию является пустая строка, "".</param>
        <param name="showUI">Значение <see langword="True" /> для отображения хода выполнения операции; в противном случае — значение <see langword="False" />. Значение по умолчанию — <see langword="False" />.</param>
        <param name="connectionTimeout">Интервал ожидания в миллисекундах. Значение по умолчанию — 100 секунд.</param>
        <param name="overwrite">Значение <see langword="True" /> для перезаписи существующих файлов; в противном случае — значение <see langword="False" />. Значение по умолчанию — <see langword="False" />.</param>
        <summary>Загружает указанный удаленный файл и сохраняет его в указанном местоположении.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `showUI` параметр имеет `True`значение, то отображается диалоговое окно, показывающее ход выполнения операции; диалоговое окно содержит кнопку **Отмена** , которую можно использовать для отмены операции. Диалоговое окно не является модальным и, следовательно, не блокирует ввод данных пользователем в другие окна программы.  
  
 Если сервер не отвечает в течение указанного `connectionTimeout`, операция отменяется и создается исключение.  
  
 `DownloadFile`выводит сведения о трассировке при включении трассировки сети в приложении. Дополнительные сведения см. в разделе [Включение трассировки сети](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  `DownloadFile` Метод не отправляет дополнительные заголовки HTTP. Некоторые серверы могут возвращать 500 (внутренняя ошибка сервера), если отсутствует заголовок необязательного агента пользователя. Для отправки необязательных заголовков необходимо создать запрос с <xref:System.Net.WebClient> помощью класса.  
  
> [!NOTE]
>  Протокол FTP отправляет сведения, включая пароли, в виде обычного текста и не должен использоваться для передачи конфиденциальной информации.  
  
 В следующей таблице приведен пример задачи, включающей `My.Computer.Network.DownloadFile` метод.  
  
|Кому|См.|  
|-|-|  
|Скачать файл|[Практическое руководство. Скачивание файла](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 В этом примере файл `WineList.txt` загружается из `http://www.cohowinery.com/downloads` и сохраняется `C:\Documents and Settings\All Users\Documents`в.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Этот пример скачивает файл `WineList.txt` из `http://www.cohowinery.com/downloads` и сохраняет его в `C:\Documents and Settings\All Users\Documents`, указывая интервал времени ожидания 500 миллисекунд.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> заканчивается косой чертой.</exception>
        <exception cref="T:System.IO.IOException">Для <paramref name="overwrite" /> установлено значение <see langword="False" />, а конечный файл уже существует.</exception>
        <exception cref="T:System.TimeoutException">Сервер не отвечает в пределах указанного <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимых разрешений для выполнения сетевой операции.</exception>
        <exception cref="T:System.Net.WebException">Запрос отклонен целевым веб-сервером.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Управляет возможностью доступа к файлам и папкам. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Управляет разрешениями, связанными с пользовательскими интерфейсами и буфером обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Управляет правами доступа к интернет-ресурсам HTTP. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Практическое руководство. Загрузка файла в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Практическое руководство. Анализ путей к файлам в Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationFileName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="overwrite" Type="System.Boolean" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" Index="7" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">Путь к файлу, который необходимо загрузить, включая имя файла и адрес сайта.</param>
        <param name="destinationFileName">Имя загружаемого файла и путь к нему.</param>
        <param name="userName">Имя пользователя, подлинность которого необходимо проверить. Значением по умолчанию является пустая строка, "".</param>
        <param name="password">Пароль, подлинность которого необходимо проверить. Значением по умолчанию является пустая строка, "".</param>
        <param name="showUI">Значение <see langword="True" /> для отображения хода выполнения операции; в противном случае — значение <see langword="False" />. Значение по умолчанию — <see langword="False" />.</param>
        <param name="connectionTimeout">Интервал ожидания в миллисекундах. Значение по умолчанию — 100 секунд.</param>
        <param name="overwrite">Значение <see langword="True" /> для перезаписи существующих файлов; в противном случае — значение <see langword="False" />. Значение по умолчанию — <see langword="False" />.</param>
        <param name="onUserCancel">Указывает, что должно выполняться, когда пользователь нажимает кнопки **Отмена** или **Нет** в диалоговом окне, если для параметра <c>ShowUI</c> задано значение <see langword="True" />. Значение по умолчанию — <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Загружает указанный удаленный файл и сохраняет его в указанном местоположении.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `showUI` параметр имеет `True`значение, то отображается диалоговое окно, показывающее ход выполнения операции; диалоговое окно содержит кнопку **Отмена** , которую можно использовать для отмены операции. Диалоговое окно не является модальным и, следовательно, не блокирует ввод данных пользователем в другие окна программы.  
  
 Если сервер не отвечает в течение указанного `connectionTimeout`, операция отменяется и создается исключение.  
  
 `DownloadFile`выводит сведения о трассировке при включении трассировки сети в приложении. Дополнительные сведения см. в разделе [Включение трассировки сети](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  `DownloadFile` Метод не отправляет дополнительные заголовки HTTP. Некоторые серверы могут возвращать 500 (внутренняя ошибка сервера), если отсутствует заголовок необязательного агента пользователя. Для отправки необязательных заголовков необходимо создать запрос с <xref:System.Net.WebClient> помощью класса.  
  
> [!NOTE]
>  Протокол FTP отправляет сведения, включая пароли, в виде обычного текста и не должен использоваться для передачи конфиденциальной информации.  
  
 В следующей таблице приведен пример задачи, включающей `My.Computer.Network.DownloadFile` метод.  
  
|Кому|См.|  
|-|-|  
|Скачать файл|[Практическое руководство. Скачивание файла](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 В этом примере файл `WineList.txt` загружается из `http://www.cohowinery.com/downloads` и сохраняется `C:\Documents and Settings\All Users\Documents`в.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Этот пример скачивает файл `WineList.txt` из `http://www.cohowinery.com/downloads` и сохраняет его в `C:\Documents and Settings\All Users\Documents`, указывая интервал времени ожидания 500 миллисекунд.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> заканчивается косой чертой.</exception>
        <exception cref="T:System.IO.IOException">Для <paramref name="overwrite" /> установлено значение <see langword="False" />, а конечный файл уже существует.</exception>
        <exception cref="T:System.TimeoutException">Сервер не отвечает в пределах указанного <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимых разрешений для выполнения сетевой операции.</exception>
        <exception cref="T:System.Net.WebException">Запрос отклонен целевым веб-сервером.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Управляет возможностью доступа к файлам и папкам. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Управляет разрешениями, связанными с пользовательскими интерфейсами и буфером обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Управляет правами доступа к интернет-ресурсам HTTP. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Практическое руководство. Загрузка файла в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Практическое руководство. Анализ путей к файлам в Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationFileName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="overwrite" Type="System.Boolean" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" Index="7" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">Путь к файлу, который необходимо загрузить, включая имя файла и адрес сайта.</param>
        <param name="destinationFileName">Имя загружаемого файла и путь к нему.</param>
        <param name="userName">Имя пользователя, подлинность которого необходимо проверить. Значением по умолчанию является пустая строка, "".</param>
        <param name="password">Пароль, подлинность которого необходимо проверить. Значением по умолчанию является пустая строка, "".</param>
        <param name="showUI">Значение <see langword="True" /> для отображения хода выполнения операции; в противном случае — значение <see langword="False" />. Значение по умолчанию — <see langword="False" />.</param>
        <param name="connectionTimeout">Интервал ожидания в миллисекундах. Значение по умолчанию — 100 секунд.</param>
        <param name="overwrite">Значение <see langword="True" /> для перезаписи существующих файлов; в противном случае — значение <see langword="False" />. Значение по умолчанию — <see langword="False" />.</param>
        <param name="onUserCancel">Указывает, что должно выполняться, когда пользователь нажимает кнопки **Отмена** или **Нет** в диалоговом окне, если для параметра <c>ShowUI</c> задано значение <see langword="True" />. Значение по умолчанию — <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Загружает указанный удаленный файл и сохраняет его в указанном местоположении.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `showUI` параметр имеет `True`значение, то отображается диалоговое окно, показывающее ход выполнения операции; диалоговое окно содержит кнопку **Отмена** , которую можно использовать для отмены операции. Диалоговое окно не является модальным и, следовательно, не блокирует ввод данных пользователем в другие окна программы.  
  
 Если сервер не отвечает в течение указанного `connectionTimeout`, операция отменяется и создается исключение.  
  
 `DownloadFile`выводит сведения о трассировке при включении трассировки сети в приложении. Дополнительные сведения см. в разделе [Включение трассировки сети](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  `DownloadFile` Метод не отправляет дополнительные заголовки HTTP. Некоторые серверы могут возвращать 500 (внутренняя ошибка сервера), если отсутствует заголовок необязательного агента пользователя. Для отправки необязательных заголовков необходимо создать запрос с <xref:System.Net.WebClient> помощью класса.  
  
> [!NOTE]
>  Протокол FTP отправляет сведения, включая пароли, в виде обычного текста и не должен использоваться для передачи конфиденциальной информации.  
  
 В следующей таблице приведен пример задачи, включающей `My.Computer.Network.DownloadFile` метод.  
  
|Кому|См.|  
|-|-|  
|Скачать файл|[Практическое руководство. Скачивание файла](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 В этом примере файл `WineList.txt` загружается из `http://www.cohowinery.com/downloads` и сохраняется `C:\Documents and Settings\All Users\Documents`в.  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 Этот пример скачивает файл `WineList.txt` из `http://www.cohowinery.com/downloads` и сохраняет его в `C:\Documents and Settings\All Users\Documents`, указывая интервал времени ожидания 500 миллисекунд.  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> заканчивается косой чертой.</exception>
        <exception cref="T:System.IO.IOException">Для <paramref name="overwrite" /> установлено значение <see langword="False" />, а конечный файл уже существует.</exception>
        <exception cref="T:System.TimeoutException">Сервер не отвечает в пределах указанного <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимых разрешений для выполнения сетевой операции.</exception>
        <exception cref="T:System.Net.WebException">Запрос отклонен целевым веб-сервером.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Управляет возможностью доступа к файлам и папкам. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Управляет разрешениями, связанными с пользовательскими интерфейсами и буфером обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Управляет правами доступа к интернет-ресурсам HTTP. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Практическое руководство. Загрузка файла в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Практическое руководство. Анализ путей к файлам в Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Network.IsAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAvailable : bool" Usage="Microsoft.VisualBasic.Devices.Network.IsAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет, подключен ли компьютер к сети.</summary>
        <value>Значение <see langword="True" />, если компьютер подключен к сети; в противном случае — значение <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `IsAvailable`всегда возвращает `False` значение при вызове `Click Once` из приложения или <xref:System.Net.NetworkInformation.NetworkInformationPermission>значение, если у пользователя нет.  
  
 В следующей таблице приведены примеры задач, в `My.Computer.Network.IsAvailable` которых используется свойство.  
  
|Кому|См.|  
|-|-|  
|Проверьте, подключен ли компьютер к сети.|[Практическое руководство. Проверка состояния подключения](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|  
  
   
  
## Examples  
 В этом примере проверяется состояние свойства и сообщается о нем.  
  
 [!code-vb[VbVbalrMyNetwork#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Управляет возможностью доступа к файлам и папкам. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Управляет правами доступа к интернет-ресурсам HTTP. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="NetworkAvailabilityChanged">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NetworkAvailabilityChanged As NetworkAvailableEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::Devices::NetworkAvailableEventHandler ^ NetworkAvailabilityChanged;" />
      <MemberSignature Language="F#" Value="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " Usage="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении доступности сети.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Приложение вызывает `NetworkAvailabilityChanged` событие при каждом изменении доступности сети. Для получения нового состояния <xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A> сетевого подключения можно `e` использовать свойство параметра. Чтобы получить текущее состояние сетевого подключения, используйте <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> свойство.  
  
 В Windows Forms приложении это событие возникает в основном потоке приложения с другими событиями пользовательского интерфейса. Это позволяет обработчику событий получить доступ непосредственно к пользовательскому интерфейсу приложения. Однако если приложение занято обработкой другого события пользовательского интерфейса при возникновении этого события, это событие не может быть обработано до тех пор, пока другой обработчик <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A> событий не завершит работу или не вызовет метод.  
  
 Для `Handles` `AddHandler` работы с событием нельзя использовать инструкцию; необходимо использовать инструкцию. `NetworkAvailabilityChanged`  
  
 В Windows Forms приложениях `MyApplication` объект `NetworkAvailabilityChanged` предоставляет событие, которое предоставляет те же функциональные возможности, что и данное событие, но его `Handles` можно обменять оператором.  
  
> [!NOTE]
>  Многие сетевые концентраторы обеспечивают сетевое подключение, даже если концентратор отключен от более крупной сети. Следовательно, для проводных подключений это событие указывает на изменение соединения между компьютером и концентратором.  
  
> [!NOTE]
>  Это `NetworkAvailabilityChanged` событие не вызывается приложениями, которые выполняются в Windows 95 и Windows 98 или приложениями, которые выполняются в Windows 2000 без прав администратора. Если приложение может работать на этих платформах, используйте <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> свойство.  
  
   
  
## Examples  
 В этом примере `My.Computer.Network.NetworkAvailabilityChanged` событие используется для обновления пользовательского интерфейса формы или элемента управления.  
  
 Этот код должен находиться в форме или элементе управления <xref:System.Windows.Forms.Label> с именем. `Label1`  
  
 [!code-vb[VbVbalrMyApplication#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Network" />
        <altmember cref="N:Microsoft.VisualBasic.Devices" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Ping">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Проверяет связь с указанным сервером.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (hostNameOrAddress As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="member this.Ping : string -&gt; bool" Usage="network.Ping hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">URL-адрес, имя компьютера или IP-номер сервера, связь с которым необходимо проверить.</param>
        <summary>Проверяет связь с указанным сервером.</summary>
        <returns>Значение <see langword="True" />, если операция выполнена успешно; в противном случае — значение <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping` Метод не является надежным методом для определения доступности удаленного компьютера: порт проверки связи на целевом компьютере может быть отключен или запрос проверки связи может быть заблокирован брандмауэром или маршрутизатором.  
  
 Адрес, передаваемый в `Ping` метод, должен быть разрешимым DNS и не может предшествовать "http://".  
  
   
  
## Examples  
 В этом примере сообщается, можно ли проверить связь с сервером, определяя, возвращает `Ping` `True`ли метод.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Замените `"198.01.01.01"` IP-адресом, URL-адресом или именем компьютера сервера для проверки связи.  
  
 В этом примере указывается, можно ли проверить связь с сервером, определяя, был ли `Ping` возвращен `True` метод, и задает интервал времени ожидания 1000 миллисекунд.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Замените `"www.cohowinery.com"` IP-адресом, URL-адресом или именем компьютера сервера для проверки связи.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Отсутствует сетевое подключение.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Недопустимый URL-адрес.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Управляет возможностью доступа к файлам и папкам. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Описывает набор разрешений безопасности, применяемых к коду. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Управляет правами доступа к интернет-ресурсам HTTP. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Управляет правами на установление или принятие подключений для адреса транспорта. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Управляет доступом к компоненту счетчика производительности Windows NT. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Управляет доступом к сведениям о сети и статистике трафика для локального компьютера. Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (address As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.Ping : Uri -&gt; bool" Usage="network.Ping address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">Универсальный код ресурса (URI) сервера, связь с которым необходимо проверить.</param>
        <summary>Проверяет связь с указанным сервером.</summary>
        <returns>Значение <see langword="True" />, если операция выполнена успешно; в противном случае — значение <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping` Метод не является надежным методом для определения доступности удаленного компьютера: порт проверки связи на целевом компьютере может быть отключен или запрос проверки связи может быть заблокирован брандмауэром или маршрутизатором.  
  
 Адрес, передаваемый в `Ping` метод, должен быть разрешимым DNS и не может предшествовать "http://".  
  
   
  
## Examples  
 В этом примере сообщается, можно ли проверить связь с сервером, определяя, возвращает `Ping` `True`ли метод.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Замените `"198.01.01.01"` IP-адресом, URL-адресом или именем компьютера сервера для проверки связи.  
  
 В этом примере указывается, можно ли проверить связь с сервером, определяя, был ли `Ping` возвращен `True` метод, и задает интервал времени ожидания 1000 миллисекунд.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Замените `"www.cohowinery.com"` IP-адресом, URL-адресом или именем компьютера сервера для проверки связи.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Отсутствует сетевое подключение.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Недопустимый URL-адрес.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Управляет возможностью доступа к файлам и папкам. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Описывает набор разрешений безопасности, применяемых к коду. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Управляет правами доступа к интернет-ресурсам HTTP. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Управляет правами на установление или принятие подключений для адреса транспорта. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Управляет доступом к компоненту счетчика производительности Windows NT. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Управляет доступом к сведениям о сети и статистике трафика для локального компьютера. Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (string hostNameOrAddress, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(string hostNameOrAddress, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (hostNameOrAddress As String, timeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(System::String ^ hostNameOrAddress, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Ping : string * int -&gt; bool" Usage="network.Ping (hostNameOrAddress, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">URL-адрес, имя компьютера или IP-номер сервера, связь с которым необходимо проверить.</param>
        <param name="timeout">Максимальное значение времени в миллисекундах, отведенное на установление связи с удаленным компьютером. Значение по умолчанию — 500.</param>
        <summary>Проверяет связь с указанным сервером.</summary>
        <returns>Значение <see langword="True" />, если операция выполнена успешно; в противном случае — значение <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping` Метод не является надежным методом для определения доступности удаленного компьютера: порт проверки связи на целевом компьютере может быть отключен или запрос проверки связи может быть заблокирован брандмауэром или маршрутизатором.  
  
 Адрес, передаваемый в `Ping` метод, должен быть разрешимым DNS и не может предшествовать "http://".  
  
   
  
## Examples  
 В этом примере сообщается, можно ли проверить связь с сервером, определяя, возвращает `Ping` `True`ли метод.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Замените `"198.01.01.01"` IP-адресом, URL-адресом или именем компьютера сервера для проверки связи.  
  
 В этом примере указывается, можно ли проверить связь с сервером, определяя, был ли `Ping` возвращен `True` метод, и задает интервал времени ожидания 1000 миллисекунд.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Замените `"www.cohowinery.com"` IP-адресом, URL-адресом или именем компьютера сервера для проверки связи.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Отсутствует сетевое подключение.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Недопустимый URL-адрес.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Управляет возможностью доступа к файлам и папкам. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Описывает набор разрешений безопасности, применяемых к коду. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Управляет правами доступа к интернет-ресурсам HTTP. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Управляет правами на установление или принятие подключений для адреса транспорта. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Управляет доступом к компоненту счетчика производительности Windows NT. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Управляет доступом к сведениям о сети и статистике трафика для локального компьютера. Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (Uri address, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(class System.Uri address, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (address As Uri, timeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(Uri ^ address, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Ping : Uri * int -&gt; bool" Usage="network.Ping (address, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="timeout" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="address">Универсальный код ресурса (URI) сервера, связь с которым необходимо проверить.</param>
        <param name="timeout">Максимальное значение времени в миллисекундах, отведенное на установление связи с удаленным компьютером. Значение по умолчанию — 500.</param>
        <summary>Проверяет связь с указанным сервером.</summary>
        <returns>Значение <see langword="True" />, если операция выполнена успешно; в противном случае — значение <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping` Метод не является надежным методом для определения доступности удаленного компьютера: порт проверки связи на целевом компьютере может быть отключен или запрос проверки связи может быть заблокирован брандмауэром или маршрутизатором.  
  
 Адрес, передаваемый в `Ping` метод, должен быть разрешимым DNS и не может предшествовать "http://".  
  
   
  
## Examples  
 В этом примере сообщается, можно ли проверить связь с сервером, определяя, возвращает `Ping` `True`ли метод.  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 Замените `"198.01.01.01"` IP-адресом, URL-адресом или именем компьютера сервера для проверки связи.  
  
 В этом примере указывается, можно ли проверить связь с сервером, определяя, был ли `Ping` возвращен `True` метод, и задает интервал времени ожидания 1000 миллисекунд.  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 Замените `"www.cohowinery.com"` IP-адресом, URL-адресом или именем компьютера сервера для проверки связи.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Отсутствует сетевое подключение.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">Недопустимый URL-адрес.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Управляет возможностью доступа к файлам и папкам. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Описывает набор разрешений безопасности, применяемых к коду. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <permission cref="T:System.Net.WebPermission">Управляет правами доступа к интернет-ресурсам HTTP. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Управляет правами на установление или принятие подключений для адреса транспорта. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Управляет доступом к компоненту счетчика производительности Windows NT. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">Управляет доступом к сведениям о сети и статистике трафика для локального компьютера. Связанное перечисление: <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" />.</permission>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Отправляет указанный файл на адрес указанного сайта.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="address" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Имя отправляемого файла и путь к нему.</param>
        <param name="address">URL-адрес, IP-адрес или URI сервера назначения.</param>
        <summary>Отправляет указанный файл на адрес указанного сайта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать одну из других перегрузок <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> метода для предоставления учетных данных пользователя или указания определенного значения времени ожидания.  
  
 `My.Computer.Network.UploadFile`выводит сведения о трассировке при включении трассировки сети в приложении. Дополнительные сведения см. в разделе [Включение трассировки сети](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
 В следующей таблице приведен пример задачи, включающей `My.Computer.Network.UploadFile` метод.  
  
|Кому|См.|  
|-|-|  
|Отправить файл|[Практическое руководство. Передача файла](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 В этом примере файл `Order.txt` перегружается в. `http://www.cohowinery.com/uploads`  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 В этом примере файл `Order.txt` передается на веб-узел `http://www.cohowinery.com/uploads` без указания имени пользователя или пароля, при этом отображается ход передачи. Время ожидания равно 500 миллисекундам.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Путь к исходному файлу не является допустимым.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> не содержит имя файла.</exception>
        <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимых разрешений для выполнения сетевой операции.</exception>
        <exception cref="T:System.TimeoutException">Сервер не отвечает в течение времени ожидания по умолчанию (100 секунд).</exception>
        <exception cref="T:System.Net.WebException">Запрос отклонен целевым веб-сервером.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Управляет возможностью доступа к файлам и папкам. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Управляет правами доступа к интернет-ресурсам HTTP. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Практическое руководство. Загрузка файла в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Практическое руководство. Анализ путей к файлам в Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri -&gt; unit" Usage="network.UploadFile (sourceFileName, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="address" Type="System.Uri" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Имя отправляемого файла и путь к нему.</param>
        <param name="address">URL-адрес, IP-адрес или URI сервера назначения.</param>
        <summary>Отправляет указанный файл на адрес указанного сайта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать одну из других перегрузок <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> метода для предоставления учетных данных пользователя или указания определенного значения времени ожидания.  
  
 `My.Computer.Network.UploadFile`выводит сведения о трассировке при включении трассировки сети в приложении. Дополнительные сведения см. в разделе [Включение трассировки сети](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
 В следующей таблице приведен пример задачи, включающей `My.Computer.Network.UploadFile` метод.  
  
|Кому|См.|  
|-|-|  
|Отправить файл|[Практическое руководство. Передача файла](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 В этом примере файл `Order.txt` перегружается в. `http://www.cohowinery.com/uploads`  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 В этом примере файл `Order.txt` передается на веб-узел `http://www.cohowinery.com/uploads` без указания имени пользователя или пароля, при этом отображается ход передачи. Время ожидания равно 500 миллисекундам.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Путь к исходному файлу не является допустимым.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> не содержит имя файла.</exception>
        <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимых разрешений для выполнения сетевой операции.</exception>
        <exception cref="T:System.TimeoutException">Сервер не отвечает в течение времени ожидания по умолчанию (100 секунд).</exception>
        <exception cref="T:System.Net.WebException">Запрос отклонен целевым веб-сервером.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Управляет возможностью доступа к файлам и папкам. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Управляет правами доступа к интернет-ресурсам HTTP. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Практическое руководство. Загрузка файла в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Практическое руководство. Анализ путей к файлам в Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="address" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Имя отправляемого файла и путь к нему.</param>
        <param name="address">URL-адрес, IP-адрес или URI сервера назначения.</param>
        <param name="userName">Имя пользователя, подлинность которого необходимо проверить. По умолчанию используется пустая строка <c>""</c>.</param>
        <param name="password">Пароль, подлинность которого необходимо проверить. По умолчанию используется пустая строка <c>""</c>.</param>
        <summary>Отправляет указанный файл на адрес указанного сайта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать одну из других перегрузок <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> метода, чтобы указать конкретное значение времени ожидания.  
  
 `My.Computer.Network.UploadFile`выводит сведения о трассировке при включении трассировки сети в приложении. Дополнительные сведения см. в разделе [Включение трассировки сети](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Протокол FTP отправляет сведения, включая пароли, в виде обычного текста и не должен использоваться для передачи конфиденциальной информации.  
  
 В следующей таблице приведен пример задачи, включающей `My.Computer.Network.UploadFile` метод.  
  
|Кому|См.|  
|-|-|  
|Отправить файл|[Практическое руководство. Передача файла](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 В этом примере файл `Order.txt` перегружается в. `http://www.cohowinery.com/uploads`  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 В этом примере файл `Order.txt` передается на веб-узел `http://www.cohowinery.com/uploads` без указания имени пользователя или пароля, при этом отображается ход передачи. Время ожидания равно 500 миллисекундам.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Значение <paramref name="connectionTimeout" /> не больше нуля.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> не содержит имя файла.</exception>
        <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимых разрешений для выполнения сетевой операции.</exception>
        <exception cref="T:System.TimeoutException">Сервер не отвечает в течение времени ожидания по умолчанию (100 секунд).</exception>
        <exception cref="T:System.Net.WebException">Запрос отклонен целевым веб-сервером.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Управляет возможностью доступа к файлам и папкам. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Управляет правами доступа к интернет-ресурсам HTTP. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Практическое руководство. Загрузка файла в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Практическое руководство. Анализ путей к файлам в Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="address" Type="System.Uri" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Имя отправляемого файла и путь к нему.</param>
        <param name="address">URL-адрес, IP-адрес или URI сервера назначения.</param>
        <param name="userName">Имя пользователя, подлинность которого необходимо проверить. По умолчанию используется пустая строка <c>""</c>.</param>
        <param name="password">Пароль, подлинность которого необходимо проверить. По умолчанию используется пустая строка <c>""</c>.</param>
        <summary>Отправляет указанный файл на адрес указанного сайта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать одну из других перегрузок <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> метода, чтобы указать конкретное значение времени ожидания.  
  
 `My.Computer.Network.UploadFile`выводит сведения о трассировке при включении трассировки сети в приложении. Дополнительные сведения см. в разделе [Включение трассировки сети](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Протокол FTP отправляет сведения, включая пароли, в виде обычного текста и не должен использоваться для передачи конфиденциальной информации.  
  
 В следующей таблице приведен пример задачи, включающей `My.Computer.Network.UploadFile` метод.  
  
|Кому|См.|  
|-|-|  
|Отправить файл|[Практическое руководство. Передача файла](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 В этом примере файл `Order.txt` перегружается в. `http://www.cohowinery.com/uploads`  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 В этом примере файл `Order.txt` передается на веб-узел `http://www.cohowinery.com/uploads` без указания имени пользователя или пароля, при этом отображается ход передачи. Время ожидания равно 500 миллисекундам.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Значение <paramref name="connectionTimeout" /> не больше нуля.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> не содержит имя файла.</exception>
        <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимых разрешений для выполнения сетевой операции.</exception>
        <exception cref="T:System.TimeoutException">Сервер не отвечает в течение времени ожидания по умолчанию (100 секунд).</exception>
        <exception cref="T:System.Net.WebException">Запрос отклонен целевым веб-сервером.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Управляет возможностью доступа к файлам и папкам. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.WebPermission">Управляет правами доступа к интернет-ресурсам HTTP. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Практическое руководство. Загрузка файла в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Практическое руководство. Анализ путей к файлам в Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * System.Net.ICredentials * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, networkCredentials, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="address" Type="System.Uri" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Имя отправляемого файла и путь к нему.</param>
        <param name="address">URL-адрес, IP-адрес или URI сервера назначения.</param>
        <param name="networkCredentials">Учетные данные для проверки подлинности.</param>
        <param name="showUI">Значение <see langword="True" /> для отображения хода выполнения операции; в противном случае — значение <see langword="False" />. Значение по умолчанию — <see langword="False" />.</param>
        <param name="connectionTimeout">Интервал ожидания в миллисекундах. Значение по умолчанию — 100 секунд.</param>
        <summary>Отправляет указанный файл на адрес указанного сайта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `showUI` параметр имеет `True`значение, в диалоговом окне отображается ход выполнения операции и включается кнопка **Отмена** , которую пользователь может щелкнуть для отмены операции. Поскольку диалоговое окно не является модальным, оно не блокирует ввод данных пользователем в другие окна программы.  
  
 Если сервер не отвечает в течение интервала, указанного в `connectionTimeout`параметре, операция отменяется и создается исключение.  
  
 `My.Computer.Network.UploadFile`выводит сведения о трассировке при включении трассировки сети в приложении. Дополнительные сведения см. в разделе [Включение трассировки сети](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Протокол FTP отправляет сведения, включая пароли, в виде обычного текста и не должен использоваться для передачи конфиденциальной информации.  
  
 В следующей таблице приведен пример задачи, включающей `My.Computer.Network.UploadFile` метод.  
  
|Кому|См.|  
|-|-|  
|Отправить файл|[Практическое руководство. Передача файла](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 В этом примере файл `Order.txt` перегружается в. `http://www.cohowinery.com/uploads`  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 В этом примере файл `Order.txt` передается на веб-узел `http://www.cohowinery.com/uploads` без указания имени пользователя или пароля, при этом отображается ход передачи. Время ожидания равно 500 миллисекундам.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Значение <paramref name="connectionTimeout" /> не больше нуля.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> не содержит имя файла.</exception>
        <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимых разрешений для выполнения сетевой операции.</exception>
        <exception cref="T:System.TimeoutException">Сервер не отвечает в пределах указанного <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">Запрос отклонен целевым веб-сервером.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Управляет возможностью доступа к файлам и папкам. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Управляет разрешениями, связанными с пользовательскими интерфейсами и буфером обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Управляет правами доступа к интернет-ресурсам HTTP. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Практическое руководство. Загрузка файла в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Практическое руководство. Анализ путей к файлам в Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="address" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Имя отправляемого файла и путь к нему.</param>
        <param name="address">URL-адрес, IP-адрес или URI сервера назначения.</param>
        <param name="userName">Имя пользователя, подлинность которого необходимо проверить. По умолчанию используется пустая строка <c>""</c>.</param>
        <param name="password">Пароль, подлинность которого необходимо проверить. По умолчанию используется пустая строка <c>""</c>.</param>
        <param name="showUI">Значение <see langword="True" /> для отображения хода выполнения операции; в противном случае — значение <see langword="False" />. Значение по умолчанию — <see langword="False" />.</param>
        <param name="connectionTimeout">Интервал ожидания в миллисекундах. Значение по умолчанию — 100 секунд.</param>
        <summary>Отправляет указанный файл на адрес указанного сайта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `showUI` параметр имеет `True`значение, в диалоговом окне отображается ход выполнения операции и включается кнопка **Отмена** , которую пользователь может щелкнуть для отмены операции. Поскольку диалоговое окно не является модальным, оно не блокирует ввод данных пользователем в другие окна программы.  
  
 Если сервер не отвечает в течение интервала, указанного в `connectionTimeout`параметре, операция отменяется и создается исключение.  
  
 `My.Computer.Network.UploadFile`выводит сведения о трассировке при включении трассировки сети в приложении. Дополнительные сведения см. в разделе [Включение трассировки сети](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Протокол FTP отправляет сведения, включая пароли, в виде обычного текста и не должен использоваться для передачи конфиденциальной информации.  
  
 В следующей таблице приведен пример задачи, включающей `My.Computer.Network.UploadFile` метод.  
  
|Кому|См.|  
|-|-|  
|Отправить файл|[Практическое руководство. Передача файла](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 В этом примере файл `Order.txt` перегружается в. `http://www.cohowinery.com/uploads`  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 В этом примере файл `Order.txt` передается на веб-узел `http://www.cohowinery.com/uploads` без указания имени пользователя или пароля, при этом отображается ход передачи. Время ожидания равно 500 миллисекундам.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Значение <paramref name="connectionTimeout" /> не больше нуля.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> не содержит имя файла.</exception>
        <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимых разрешений для выполнения сетевой операции.</exception>
        <exception cref="T:System.TimeoutException">Сервер не отвечает в пределах указанного <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">Запрос отклонен целевым веб-сервером.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Управляет возможностью доступа к файлам и папкам. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Управляет разрешениями, связанными с пользовательскими интерфейсами и буфером обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Управляет правами доступа к интернет-ресурсам HTTP. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Практическое руководство. Загрузка файла в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Практическое руководство. Анализ путей к файлам в Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * System.Net.ICredentials * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, networkCredentials, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="address" Type="System.Uri" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Имя отправляемого файла и путь к нему.</param>
        <param name="address">URL-адрес, IP-адрес или URI сервера назначения.</param>
        <param name="networkCredentials">Учетные данные для проверки подлинности.</param>
        <param name="showUI">Значение <see langword="True" /> для отображения хода выполнения операции; в противном случае — значение <see langword="False" />. Значение по умолчанию — <see langword="False" />.</param>
        <param name="connectionTimeout">Интервал ожидания в миллисекундах. Значение по умолчанию — 100 секунд.</param>
        <param name="onUserCancel">Действие, которое необходимо выполнять, когда пользователь нажимает кнопку **Отмена**. Значение по умолчанию — <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Отправляет указанный файл на адрес указанного сайта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `showUI` параметр имеет `True`значение, в диалоговом окне отображается ход выполнения операции и включается кнопка **Отмена** , которую пользователь может щелкнуть для отмены операции. Поскольку диалоговое окно не является модальным, оно не блокирует ввод данных пользователем в другие окна программы.  
  
 Если сервер не отвечает в течение интервала, указанного в `connectionTimeout`параметре, операция отменяется и создается исключение.  
  
 `My.Computer.Network.UploadFile`выводит сведения о трассировке при включении трассировки сети в приложении. Дополнительные сведения см. в разделе [Включение трассировки сети](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Протокол FTP отправляет сведения, включая пароли, в виде обычного текста и не должен использоваться для передачи конфиденциальной информации.  
  
 В следующей таблице приведен пример задачи, включающей `My.Computer.Network.UploadFile` метод.  
  
|Кому|См.|  
|-|-|  
|Отправить файл|[Практическое руководство. Передача файла](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 В этом примере файл `Order.txt` перегружается в. `http://www.cohowinery.com/uploads`  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 В этом примере файл `Order.txt` передается на веб-узел `http://www.cohowinery.com/uploads` без указания имени пользователя или пароля, при этом отображается ход передачи. Время ожидания равно 500 миллисекундам.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Значение <paramref name="connectionTimeout" /> не больше нуля.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> не содержит имя файла.</exception>
        <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимых разрешений для выполнения сетевой операции.</exception>
        <exception cref="T:System.TimeoutException">Сервер не отвечает в пределах указанного <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">Запрос отклонен целевым веб-сервером.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Управляет возможностью доступа к файлам и папкам. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Управляет разрешениями, связанными с пользовательскими интерфейсами и буфером обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Управляет правами доступа к интернет-ресурсам HTTP. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Практическое руководство. Загрузка файла в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Практическое руководство. Анализ путей к файлам в Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="address" Type="System.Uri" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Имя отправляемого файла и путь к нему.</param>
        <param name="address">URL-адрес, IP-адрес или URI сервера назначения.</param>
        <param name="userName">Имя пользователя, подлинность которого необходимо проверить. По умолчанию используется пустая строка <c>""</c>.</param>
        <param name="password">Пароль, подлинность которого необходимо проверить. По умолчанию используется пустая строка <c>""</c>.</param>
        <param name="showUI">Значение <see langword="True" /> для отображения хода выполнения операции; в противном случае — значение <see langword="False" />. Значение по умолчанию — <see langword="False" />.</param>
        <param name="connectionTimeout">Интервал ожидания в миллисекундах. Значение по умолчанию — 100 секунд.</param>
        <summary>Отправляет указанный файл на адрес указанного сайта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `showUI` параметр имеет `True`значение, в диалоговом окне отображается ход выполнения операции и включается кнопка **Отмена** , которую пользователь может щелкнуть для отмены операции. Поскольку диалоговое окно не является модальным, оно не блокирует ввод данных пользователем в другие окна программы.  
  
 Если сервер не отвечает в течение интервала, указанного в `connectionTimeout`параметре, операция отменяется и создается исключение.  
  
 `My.Computer.Network.UploadFile`выводит сведения о трассировке при включении трассировки сети в приложении. Дополнительные сведения см. в разделе [Включение трассировки сети](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Протокол FTP отправляет сведения, включая пароли, в виде обычного текста и не должен использоваться для передачи конфиденциальной информации.  
  
 В следующей таблице приведен пример задачи, включающей `My.Computer.Network.UploadFile` метод.  
  
|Кому|См.|  
|-|-|  
|Отправить файл|[Практическое руководство. Передача файла](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 В этом примере файл `Order.txt` перегружается в. `http://www.cohowinery.com/uploads`  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 В этом примере файл `Order.txt` передается на веб-узел `http://www.cohowinery.com/uploads` без указания имени пользователя или пароля, при этом отображается ход передачи. Время ожидания равно 500 миллисекундам.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Значение <paramref name="connectionTimeout" /> не больше нуля.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> не содержит имя файла.</exception>
        <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимых разрешений для выполнения сетевой операции.</exception>
        <exception cref="T:System.TimeoutException">Сервер не отвечает в пределах указанного <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">Запрос отклонен целевым веб-сервером.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Управляет возможностью доступа к файлам и папкам. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Управляет разрешениями, связанными с пользовательскими интерфейсами и буфером обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Управляет правами доступа к интернет-ресурсам HTTP. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Практическое руководство. Загрузка файла в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Практическое руководство. Анализ путей к файлам в Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="address" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Имя отправляемого файла и путь к нему.</param>
        <param name="address">URL-адрес, IP-адрес или URI сервера назначения.</param>
        <param name="userName">Имя пользователя, подлинность которого необходимо проверить. По умолчанию используется пустая строка <c>""</c>.</param>
        <param name="password">Пароль, подлинность которого необходимо проверить. По умолчанию используется пустая строка <c>""</c>.</param>
        <param name="showUI">Указывает, нужно ли отображать ход выполнения операции. Значение по умолчанию — <see langword="False" />.</param>
        <param name="connectionTimeout">Интервал ожидания в миллисекундах. Значение по умолчанию — 100 секунд.</param>
        <param name="onUserCancel">Действие, которое необходимо выполнять, когда пользователь нажимает кнопку **Отмена**. Значение по умолчанию — <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Отправляет указанный файл на адрес указанного сайта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `showUI` параметр имеет `True`значение, в диалоговом окне отображается ход выполнения операции и включается кнопка **Отмена** , которую пользователь может щелкнуть для отмены операции. Поскольку диалоговое окно не является модальным, оно не блокирует ввод данных пользователем в другие окна программы.  
  
 Если сервер не отвечает в течение интервала, указанного в `connectionTimeout`параметре, операция отменяется и создается исключение.  
  
 `My.Computer.Network.UploadFile`выводит сведения о трассировке при включении трассировки сети в приложении. Дополнительные сведения см. в разделе [Включение трассировки сети](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Протокол FTP отправляет сведения, включая пароли, в виде обычного текста и не должен использоваться для передачи конфиденциальной информации.  
  
 В следующей таблице приведен пример задачи, включающей `My.Computer.Network.UploadFile` метод.  
  
|Кому|См.|  
|-|-|  
|Отправить файл|[Практическое руководство. Передача файла](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 В этом примере файл `Order.txt` перегружается в. `http://www.cohowinery.com/uploads`  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 В этом примере файл `Order.txt` передается на веб-узел `http://www.cohowinery.com/uploads` без указания имени пользователя или пароля, при этом отображается ход передачи. Время ожидания равно 500 миллисекундам.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Значение <paramref name="connectionTimeout" /> не больше нуля.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> не содержит имя файла.</exception>
        <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимых разрешений для выполнения сетевой операции.</exception>
        <exception cref="T:System.TimeoutException">Сервер не отвечает в пределах указанного <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">Запрос отклонен целевым веб-сервером.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Управляет возможностью доступа к файлам и папкам. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Управляет разрешениями, связанными с пользовательскими интерфейсами и буфером обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Управляет правами доступа к интернет-ресурсам HTTP. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Практическое руководство. Загрузка файла в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Практическое руководство. Анализ путей к файлам в Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="address" Type="System.Uri" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="userName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="password" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="showUI" Type="System.Boolean" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="connectionTimeout" Type="System.Int32" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Имя отправляемого файла и путь к нему.</param>
        <param name="address">URL-адрес, IP-адрес или URI сервера назначения.</param>
        <param name="userName">Имя пользователя, подлинность которого необходимо проверить. По умолчанию используется пустая строка <c>""</c>.</param>
        <param name="password">Пароль, подлинность которого необходимо проверить. По умолчанию используется пустая строка <c>""</c>.</param>
        <param name="showUI">Указывает, нужно ли отображать ход выполнения операции. Значение по умолчанию — <see langword="False" />.</param>
        <param name="connectionTimeout">Интервал ожидания в миллисекундах. Значение по умолчанию — 100 секунд.</param>
        <param name="onUserCancel">Действие, которое необходимо выполнять, когда пользователь нажимает кнопку **Отмена**. Значение по умолчанию — <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Отправляет указанный файл на адрес указанного сайта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `showUI` параметр имеет `True`значение, в диалоговом окне отображается ход выполнения операции и включается кнопка **Отмена** , которую пользователь может щелкнуть для отмены операции. Поскольку диалоговое окно не является модальным, оно не блокирует ввод данных пользователем в другие окна программы.  
  
 Если сервер не отвечает в течение интервала, указанного в `connectionTimeout`параметре, операция отменяется и создается исключение.  
  
 `My.Computer.Network.UploadFile`выводит сведения о трассировке при включении трассировки сети в приложении. Дополнительные сведения см. в разделе [Включение трассировки сети](~/docs/framework/network-programming/enabling-network-tracing.md).  
  
> [!NOTE]
>  Протокол FTP отправляет сведения, включая пароли, в виде обычного текста и не должен использоваться для передачи конфиденциальной информации.  
  
 В следующей таблице приведен пример задачи, включающей `My.Computer.Network.UploadFile` метод.  
  
|Кому|См.|  
|-|-|  
|Отправить файл|[Практическое руководство. Передача файла](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 В этом примере файл `Order.txt` перегружается в. `http://www.cohowinery.com/uploads`  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 В этом примере файл `Order.txt` передается на веб-узел `http://www.cohowinery.com/uploads` без указания имени пользователя или пароля, при этом отображается ход передачи. Время ожидания равно 500 миллисекундам.  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Значение <paramref name="connectionTimeout" /> не больше нуля.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> не содержит имя файла.</exception>
        <exception cref="T:System.Security.SecurityException">Пользователь не имеет необходимых разрешений для выполнения сетевой операции.</exception>
        <exception cref="T:System.TimeoutException">Сервер не отвечает в пределах указанного <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">Запрос отклонен целевым веб-сервером.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Управляет возможностью доступа к файлам и папкам. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Управляет разрешениями, связанными с пользовательскими интерфейсами и буфером обмена. Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Управляет правами доступа к интернет-ресурсам HTTP. Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Объекты (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">Практическое руководство. Загрузка файла в Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">Практическое руководство. Анализ путей к файлам в Visual Basic</related>
      </Docs>
    </Member>
  </Members>
</Type>
