<Type Name="PnrpPermission" FullName="System.Net.PeerToPeer.PnrpPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="35cc6e54bceafd19f471a8b506b673d622c5f5b6" /><Meta Name="ms.sourcegitcommit" Value="ddce15914650a504a7399d539ac1f7cfed3c2caa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/07/2019" /><Meta Name="ms.locfileid" Value="66759927" /></Metadata><TypeSignature Language="C#" Value="public sealed class PnrpPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PnrpPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PnrpPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PnrpPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class PnrpPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type PnrpPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="abe69-101">Определяет значения, используемые в разрешениях объекта <see cref="N:System.Net.PeerToPeer" />.</span><span class="sxs-lookup"><span data-stu-id="abe69-101">Specifies the values that are used in <see cref="N:System.Net.PeerToPeer" /> object permissions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abe69-102">Разрешения по умолчанию позволяют всем локальным приложениям и приложениям зоны интрасети для доступа к службам PNRP.</span><span class="sxs-lookup"><span data-stu-id="abe69-102">The default permissions allow all local and Intranet zone applications to access PNRP services.</span></span> <span data-ttu-id="abe69-103">Если разрешения по умолчанию не изменяются, всех локальных и локального сайта приложения имеют доступ к службам Peer-to-Peer, но глобальные приложения (Интернет) не имеют доступа.</span><span class="sxs-lookup"><span data-stu-id="abe69-103">If the default permissions are not changed, all link-local and site-local applications have access to Peer-to-Peer services, but global (internet) applications have no access.</span></span>  
  
 <span data-ttu-id="abe69-104">Экземпляры этого типа имеют два состояния разрешений: они либо не имеют доступа к ресурсам, защищенным с помощью разрешений, или они имеют неограниченный полный доступ к этим ресурсам.</span><span class="sxs-lookup"><span data-stu-id="abe69-104">Instances of this type have two permission states: they either have no access to the resources protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
    <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
    <altmember cref="N:System.Security.Permissions" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink?LinkID=92731"><span data-ttu-id="abe69-105">API поставщика пространства имен PNRP</span><span class="sxs-lookup"><span data-stu-id="abe69-105">PNRP Namespace Provider API</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PnrpPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PnrpPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PnrpPermission : System.Security.Permissions.PermissionState -&gt; System.Net.PeerToPeer.PnrpPermission" Usage="new System.Net.PeerToPeer.PnrpPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="abe69-106">Одно из значений в перечислении <see cref="T:System.Security.Permissions.PermissionState" />.</span><span class="sxs-lookup"><span data-stu-id="abe69-106">One of the values in the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration.</span></span></param>
        <summary><span data-ttu-id="abe69-107">Инициализирует новый экземпляр класса <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> с указанным исходным состоянием разрешения.</span><span class="sxs-lookup"><span data-stu-id="abe69-107">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> class with the supplied initial permission state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abe69-108">Экземпляры этого типа имеют два состояния разрешений: либо у них нет доступа к ресурсу, защищенному разрешением, или они имеют неограниченный полный доступ к этим ресурсам.</span><span class="sxs-lookup"><span data-stu-id="abe69-108">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 <span data-ttu-id="abe69-109">Если `state` является передает неограниченный — экземпляр класса PnrpPermission отклоняет все запросы.</span><span class="sxs-lookup"><span data-stu-id="abe69-109">If `state` is Unrestricted, the PnrpPermission instance passes all demands.</span></span> <span data-ttu-id="abe69-110">Если `state` содержит любое другое значение, экземпляр класса PnrpPermission отклоняет отклоняет все запросы.</span><span class="sxs-lookup"><span data-stu-id="abe69-110">If `state` contains any other value, the PnrpPermission instance fails all demands.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="pnrpPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="abe69-111">Создает и возвращает идентичную копию текущего разрешения <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span><span class="sxs-lookup"><span data-stu-id="abe69-111">Creates and returns an identical copy of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span></span></summary>
        <returns><span data-ttu-id="abe69-112">Объект с интерфейсом IPermission, экземпляр которого содержит копию текущего экземпляра класса <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span><span class="sxs-lookup"><span data-stu-id="abe69-112">An object with an IPermission interface, whose instance contains a copy of the current instance of <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abe69-113">Копия разрешение представляет тот же уровень доступа к ресурсам, что и само разрешение.</span><span class="sxs-lookup"><span data-stu-id="abe69-113">A copy of a permission represents the same access to resources as the original permission.</span></span>  
  
 <span data-ttu-id="abe69-114">Экземпляры этого типа имеют два состояния разрешений: либо у них нет доступа к ресурсу, защищенному разрешением, или они имеют неограниченный полный доступ к этим ресурсам.</span><span class="sxs-lookup"><span data-stu-id="abe69-114">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="abe69-115">– Параметр не является допустимым элементом <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span><span class="sxs-lookup"><span data-stu-id="abe69-115">-   The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span></span>  
  
<span data-ttu-id="abe69-116">– Номер версии параметра не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="abe69-116">-   The parameter's version number is not supported.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="abe69-117">Параметр является пустой (<see langword="null" />) ссылкой (<see langword="Nothing" /> в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="abe69-117">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink?LinkID=92731"><span data-ttu-id="abe69-118">API поставщика пространства имен PNRP</span><span class="sxs-lookup"><span data-stu-id="abe69-118">PNRP Namespace Provider API</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (e As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ e);" />
      <MemberSignature Language="F#" Value="override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="pnrpPermission.FromXml e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="abe69-119">Кодировка XML, используемая для восстановления разрешения.</span><span class="sxs-lookup"><span data-stu-id="abe69-119">The XML encoding to use to reconstruct the permission.</span></span></param>
        <summary><span data-ttu-id="abe69-120">Восстанавливает объект безопасности с указанным состоянием из кодировки XML.</span><span class="sxs-lookup"><span data-stu-id="abe69-120">Reconstructs a security object with a specified state from an XML encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abe69-121">Представляет объектную модель XML для кодирования объектов безопасности.</span><span class="sxs-lookup"><span data-stu-id="abe69-121">Represents the XML object model for encoding security objects.</span></span> <span data-ttu-id="abe69-122">Этот класс не наследуется.</span><span class="sxs-lookup"><span data-stu-id="abe69-122">This class cannot be inherited.</span></span>  
  
 <span data-ttu-id="abe69-123">Этот класс предназначен как упрощенная реализация простой объектной модели XML для использования в системе безопасности, а не для использования в качестве общей объектной модели XML.</span><span class="sxs-lookup"><span data-stu-id="abe69-123">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="abe69-124">– Параметр не является допустимым элементом <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span><span class="sxs-lookup"><span data-stu-id="abe69-124">-   The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span></span>  
  
<span data-ttu-id="abe69-125">– Номер версии параметра не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="abe69-125">-   The parameter's version number is not supported.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="abe69-126">Параметр является пустой (<see langword="null" />) ссылкой (<see langword="Nothing" /> в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="abe69-126">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Security.SecurityElement" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="pnrpPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="abe69-127">Разрешение, пересечение которого с текущим нужно создать с помощью метода <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />.</span><span class="sxs-lookup"><span data-stu-id="abe69-127">A permission to <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> with the current permission.</span></span> <span data-ttu-id="abe69-128">Его тип должен совпадать с типом текущего разрешения.</span><span class="sxs-lookup"><span data-stu-id="abe69-128">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="abe69-129">Создает и возвращает разрешение, представляющее собой пересечение текущего разрешения <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> и заданного разрешения.</span><span class="sxs-lookup"><span data-stu-id="abe69-129">Creates and returns a permission that is the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="abe69-130">Новое разрешение, представляющее собой пересечение текущего разрешения <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> и указанного разрешения.</span><span class="sxs-lookup"><span data-stu-id="abe69-130">A new permission that represents the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span> <span data-ttu-id="abe69-131">Это новое разрешение представляет собой пустую ссылку (<see langword="null" />, в Visual Basic — <see langword="Nothing" />), если пересечение является пустым.</span><span class="sxs-lookup"><span data-stu-id="abe69-131">This new permission is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abe69-132">Пересечение двух разрешений является разрешение, которое описывает набор операций, которые они описывают общие.</span><span class="sxs-lookup"><span data-stu-id="abe69-132">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="abe69-133">Только тот запрос, который передает оба исходных разрешения передаст пересечения.</span><span class="sxs-lookup"><span data-stu-id="abe69-133">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
 <span data-ttu-id="abe69-134">Следующие инструкции, требуется ли `true` для всех реализаций метода Intersect.</span><span class="sxs-lookup"><span data-stu-id="abe69-134">The following statements are required to be `true` for all implementations of the Intersect method.</span></span> <span data-ttu-id="abe69-135">X и Y представляют <xref:System.Security.IPermission> ссылки на объекты, которые не являются `null` ссылкой (Nothing в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="abe69-135">X and Y represent <xref:System.Security.IPermission> object references that are not a `null` reference (Nothing in Visual Basic).</span></span>  
  
-   <span data-ttu-id="abe69-136">X.Intersect(X) возвращает значение X.</span><span class="sxs-lookup"><span data-stu-id="abe69-136">X.Intersect(X) returns a value equal to X.</span></span>  
  
-   <span data-ttu-id="abe69-137">X.Intersect(Y) возвращает то же значение, что Y.Intersect(X).</span><span class="sxs-lookup"><span data-stu-id="abe69-137">X.Intersect(Y) returns the same value as Y.Intersect(X).</span></span>  
  
-   <span data-ttu-id="abe69-138">X.Intersect ( `null` ссылки (`Nothing` в Visual Basic)) возвращает `null` ссылки (`Nothing` в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="abe69-138">X.Intersect(a `null` reference (`Nothing` in Visual Basic)) returns a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="abe69-139">Параметр целевого объекта (target) не является пустой ссылкой (<see langword="null" />, в Visual Basic — <see langword="Nothing" />), а также не является экземпляром того же класса, что и текущее разрешение.</span><span class="sxs-lookup"><span data-stu-id="abe69-139">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="pnrpPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="abe69-140">Разрешение, для которого требуется проверить отношение подмножества.</span><span class="sxs-lookup"><span data-stu-id="abe69-140">A permission that is to be tested for the subset relationship.</span></span> <span data-ttu-id="abe69-141">Данное разрешение должно относиться к тому же типу, что и текущее разрешение.</span><span class="sxs-lookup"><span data-stu-id="abe69-141">This permission must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="abe69-142">Определяет, является ли текущее разрешение <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> подмножеством указанного разрешения.</span><span class="sxs-lookup"><span data-stu-id="abe69-142">Determines whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission.</span></span></summary>
        <returns><span data-ttu-id="abe69-143"><see langword="true" />, если текущее разрешение является подмножеством заданного разрешения <see cref="T:System.Net.PeerToPeer.PnrpPermission" />, в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="abe69-143"><see langword="true" /> if the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="abe69-144">Текущий <xref:System.Net.PeerToPeer.PnrpPermission> является подмножеством указанного разрешения, если текущее разрешение задает набор операций, полностью содержащихся в заданном разрешении.</span><span class="sxs-lookup"><span data-stu-id="abe69-144">The current <xref:System.Net.PeerToPeer.PnrpPermission> is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="abe69-145">Например, разрешение, представляющее доступ к "*C:\example.txt*«— это подмножество разрешение, представляющее доступ к»*C:\\*«.</span><span class="sxs-lookup"><span data-stu-id="abe69-145">For example, a permission that represents access to "*C:\example.txt*" is a subset of a permission that represents access to "*C:\\*".</span></span> <span data-ttu-id="abe69-146">Если этот метод возвращает `true`, текущее разрешение представляет уровень доступа к защищенному ресурсу, чем указанное разрешение.</span><span class="sxs-lookup"><span data-stu-id="abe69-146">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
<span data-ttu-id="abe69-147">Следующие инструкции, требуется ли `true` для всех реализаций метода IsSubsetOf.</span><span class="sxs-lookup"><span data-stu-id="abe69-147">The following statements are required to be `true` for all implementations of the IsSubsetOf method.</span></span> <span data-ttu-id="abe69-148">X, Y и Z представляют <xref:System.Security.IPermission> объекты, не являющиеся `null` ссылки (`Nothing` в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="abe69-148">X, Y, and Z represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>

- <span data-ttu-id="abe69-149">`X.IsSubsetOf(X)` возвращает `true`.</span><span class="sxs-lookup"><span data-stu-id="abe69-149">`X.IsSubsetOf(X)` returns `true`.</span></span>

- <span data-ttu-id="abe69-150">`X.IsSubsetOf(Y)` Возвращает то же значение, что `Y.IsSubsetOf(X)` только в том случае, если X и Y представляют один и тот же набор разрешений.</span><span class="sxs-lookup"><span data-stu-id="abe69-150">`X.IsSubsetOf(Y)` returns the same value as `Y.IsSubsetOf(X)` if and only if X and Y represent the same set of permissions.</span></span>

- <span data-ttu-id="abe69-151">Если `X.IsSubsetOf(Y)` и `Y.IsSubsetOf(Z)` обе эти функции возвращают `true`, `X.IsSubsetOf(Z)` возвращает `true`.</span><span class="sxs-lookup"><span data-stu-id="abe69-151">If `X.IsSubsetOf(Y)` and `Y.IsSubsetOf(Z)` both return `true`, `X.IsSubsetOf(Z)` returns `true`.</span></span>
  
<span data-ttu-id="abe69-152">Если X представляет пустой <xref:System.Security.IPermission> объект с состоянием разрешения объекта *None*, а Y — <xref:System.Security.IPermission> объекта, `null` ссылки (`Nothing` в Visual Basic), `X.IsSubsetOf(Y)` возвращает `true`.</span><span class="sxs-lookup"><span data-stu-id="abe69-152">If X represents an empty <xref:System.Security.IPermission> object with a permission state of *None*, and Y represents an <xref:System.Security.IPermission> object that is a `null` reference (`Nothing` in Visual Basic), `X.IsSubsetOf(Y)` returns `true`.</span></span> <span data-ttu-id="abe69-153">Если Z также является пустое разрешение, составная операция `X.Union(Z).IsSubsetOf(Y)` также возвращает `true` поскольку <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> двух пустых разрешений является пустое разрешение.</span><span class="sxs-lookup"><span data-stu-id="abe69-153">If Z is also an empty permission, the compound set operation `X.Union(Z).IsSubsetOf(Y)` also returns `true` because the <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> of two empty permissions is an empty permission.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="abe69-154">Параметр целевого объекта (target) не является пустой ссылкой (<see langword="null" />, в Visual Basic — <see langword="Nothing" />), а также не является экземпляром того же класса, что и текущее разрешение.</span><span class="sxs-lookup"><span data-stu-id="abe69-154">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="pnrpPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="abe69-155">Возвращает значение, определяющее, является ли текущее разрешение <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> неограниченным.</span><span class="sxs-lookup"><span data-stu-id="abe69-155">Returns a value specifying whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is unrestricted.</span></span></summary>
        <returns><span data-ttu-id="abe69-156">Значение <see langword="true" />, если текущее разрешение является неограниченным. В противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="abe69-156"><see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abe69-157">Неограниченное разрешение предоставляет доступ ко всем ресурсам, защищенным разрешением.</span><span class="sxs-lookup"><span data-stu-id="abe69-157">An unrestricted permission represents access to any and all resources protected by the permission.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="pnrpPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="abe69-158">Создает кодирование XML разрешения <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> и его текущего состояния.</span><span class="sxs-lookup"><span data-stu-id="abe69-158">Creates an XML encoding of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and its current state.</span></span></summary>
        <returns><span data-ttu-id="abe69-159">Объект <see cref="T:System.Security.SecurityElement" />, который содержит кодирование XML разрешения, включающее любые данные состояния.</span><span class="sxs-lookup"><span data-stu-id="abe69-159">A <see cref="T:System.Security.SecurityElement" /> object that contains an XML encoding of the permission, including any state information.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="pnrpPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="abe69-160">Разрешение, которое требуется объединить с текущим разрешением.</span><span class="sxs-lookup"><span data-stu-id="abe69-160">A permission to combine with the current permission.</span></span> <span data-ttu-id="abe69-161">Его тип должен совпадать с типом текущего разрешения.</span><span class="sxs-lookup"><span data-stu-id="abe69-161">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="abe69-162">Создает разрешение, представляющее собой объединение текущего разрешения <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> и заданного разрешения.</span><span class="sxs-lookup"><span data-stu-id="abe69-162">Creates a permission that is the union of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="abe69-163">Новое разрешение, представляющее собой объединение текущего разрешения <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> и указанного разрешения, образованное с помощью метода <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span><span class="sxs-lookup"><span data-stu-id="abe69-163">A new permission that represents the <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abe69-164">Результат вызова <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> является разрешение, которое представляет все операции, представленные как текущим <xref:System.Net.PeerToPeer.PnrpPermission> и заданного разрешений.</span><span class="sxs-lookup"><span data-stu-id="abe69-164">The result of a call to <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> is a permission that represents all the operations represented by both the current <xref:System.Net.PeerToPeer.PnrpPermission> and the specified permission.</span></span> <span data-ttu-id="abe69-165">Любой запрос, передающий любое разрешение, передает их объединение.</span><span class="sxs-lookup"><span data-stu-id="abe69-165">Any demand that passes either permission passes their union.</span></span>  
  
 <span data-ttu-id="abe69-166">Следующие инструкции, требуется ли `true` для всех реализаций метода Union.</span><span class="sxs-lookup"><span data-stu-id="abe69-166">The following statements are required to be `true` for all implementations of the Union method.</span></span> <span data-ttu-id="abe69-167">X и Y представляют <xref:System.Security.IPermission> объекты, не являющиеся `null` ссылки (`Nothing` в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="abe69-167">X and Y represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="abe69-168">X.Union(X) возвращает объект, имеющий то же значение, что X.</span><span class="sxs-lookup"><span data-stu-id="abe69-168">X.Union(X) returns an object that has the same value as X.</span></span>  
  
-   <span data-ttu-id="abe69-169">X.Union(Y) возвращает объект, который имеет то же значение, что и объект, возвращаемый y.Union(x).</span><span class="sxs-lookup"><span data-stu-id="abe69-169">X.Union(Y) returns an object that has the same value as the object returned by Y.Union(X).</span></span>  
  
-   <span data-ttu-id="abe69-170">X.Union ( `null` ссылки (`Nothing` в Visual Basic)) возвращает объект, имеющий то же значение, что X.</span><span class="sxs-lookup"><span data-stu-id="abe69-170">X.Union(a `null` reference (`Nothing` in Visual Basic)) returns an object that has the same value as X.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="abe69-171">Параметр <paramref name="target" /> недопустим.</span><span class="sxs-lookup"><span data-stu-id="abe69-171"><paramref name="target" /> parameter is invalid.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      </Docs>
    </Member>
  </Members>
</Type>
