<Type Name="PeerNameResolver" FullName="System.Net.PeerToPeer.PeerNameResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d5b1463d434cef9b1f98bdc79e893974d475d2d8" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70529475" /></Metadata><TypeSignature Language="C#" Value="public class PeerNameResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi PeerNameResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameResolver" />
  <TypeSignature Language="F#" Value="type PeerNameResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Задает значения, разрешающие имя однорангового узла <see cref="T:System.Net.PeerToPeer.PeerName" /> в объект <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> с помощью протокола интерфейса API поставщика пространства имен PNRP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Net.PeerToPeer.PeerNameRecord> , содержащий все сведения о <xref:System.Net.PeerToPeer.PeerName> <xref:System.Net.PeerToPeer.Cloud> , опубликованные в или облаках, которые были запрошены в процессе разрешения.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр по умолчанию класса <see cref="T:System.Net.PeerToPeer.PeerNameResolver" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 После успешного разрешения объект <xref:System.Net.PeerToPeer.PeerName> <xref:System.Net.PeerToPeer.PeerNameRecord> содержит все сведения для указанного <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> , опубликованного в облаках, которые были запрошены во время <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> операции.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveCompleted">
      <MemberSignature Language="C#" Value="protected void OnResolveCompleted (System.Net.PeerToPeer.ResolveCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveCompleted(class System.Net.PeerToPeer.ResolveCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnResolveCompleted (e As ResolveCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnResolveCompleted(System::Net::PeerToPeer::ResolveCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnResolveCompleted : System.Net.PeerToPeer.ResolveCompletedEventArgs -&gt; unit" Usage="peerNameResolver.OnResolveCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" />, который содержит данные, возвращаемые событием <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />.</param>
        <summary>Возвращает данные разрешения имени однорангового узла после возникновения события <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод является асинхронным обратным вызовом, используемым для обработки данных разрешения имени однорангового узла после завершения разрешения однорангового узла.  
  
 Производные типы могут переопределять этот метод для выполнения дополнительных задач <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> при вызове события объектом распознавателя одноранговых узлов.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnResolveProgressChanged">
      <MemberSignature Language="C#" Value="protected void OnResolveProgressChanged (System.Net.PeerToPeer.ResolveProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveProgressChanged(class System.Net.PeerToPeer.ResolveProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnResolveProgressChanged (e As ResolveProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnResolveProgressChanged(System::Net::PeerToPeer::ResolveProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnResolveProgressChanged : System.Net.PeerToPeer.ResolveProgressChangedEventArgs -&gt; unit" Usage="peerNameResolver.OnResolveProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />, содержащий сведения о ходе выполнения разрешения имени однорангового узла, возвращаемые событием <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />.</param>
        <summary>Возвращает данные о ходе выполнения разрешения имени однорангового узла при возникновении события <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод является асинхронным обратным вызовом, используемым для обработки данных разрешения однорангового узла после запроса хода разрешения однорангового узла.  
  
 Производные типы могут переопределять этот метод для выполнения дополнительных задач <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> при возникновении события.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении этого метода в производном типе обязательно вызовите <see cref="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" /> метод базового типа, чтобы зарегистрированные делегаты получили событие.</para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Выполняет разрешение объекта <see cref="T:System.Net.PeerToPeer.PeerName" /> в объект <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> с помощью протокола PNRP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод связывает одноранговые имена с облаками. Вызов метода аналогичен <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> вызову метода для каждой записи имени <xref:System.Net.PeerToPeer.PeerNameRecordCollection>однорангового узла в. <xref:System.Net.PeerToPeer.PeerNameResolver> Обратите внимание, что использование метода Resolve для отдельной записи имени однорангового узла не делает недействительным разрешение нескольких одноранговых имен.  
  
 Для каждого <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> метода существует эквивалентный <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> метод.  Они идентичны в передаваемых параметрах, за исключением того, что метод Ресолвеасинк включает в свой список параметров системный токен для асинхронной обработки событий.  
  
 Если параметр не указан, метод <xref:System.Net.PeerToPeer.Cloud.Available> использует ярлык для заполнения параметров облака. <xref:System.Net.PeerToPeer.Cloud>  Если параметр отсутствует, значение по умолчанию, равное нулю, <xref:System.ArgumentOutOfRangeException> приводит к возникновению исключения. `maxRecords`  
  
 Это событие также будет вызвано, если операция разрешения завершилась с ошибкой или отменена.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve peerName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
      </Parameters>
      <Docs>
        <param name="peerName">Имя <see cref="T:System.Net.PeerToPeer.PeerName" /> для разрешения.</param>
        <summary>Разрешает указанное имя однорангового узла <see cref="T:System.Net.PeerToPeer.PeerName" /> во всех облаках, известных вызывающему одноранговому узлу.</summary>
        <returns>Объект <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />, содержащий все записи одноранговых узелов (представленных объектами <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />), связанными с указанным именем однорангового узла. При использовании незащищенных имен одноранговых узелов один и тот же объект <see cref="T:System.Net.PeerToPeer.PeerName" /> может быть зарегистрирован одновременно разными пользователями в одном облаке <see cref="T:System.Net.PeerToPeer.Cloud" /> и может быть связан с разными конечными точками.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод связывает имя однорангового узла с облаками. Все облака запрашиваются для <xref:System.Net.PeerToPeer.PeerName>. Если имя однорангового узла не может быть `null`разрешено <xref:System.Net.PeerToPeer.PeerToPeerException> или равно, создается исключение.  
  
 Для незащищенных имен одноранговых узлов одно и то же имя можно зарегистрировать (и связать с разными конечными точками) разными одноранговыми узлами в одном облаке.  
  
 Вызов метода аналогичен <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> вызову метода для каждой записи имени <xref:System.Net.PeerToPeer.PeerNameRecordCollection>однорангового узла в. <xref:System.Net.PeerToPeer.PeerNameResolver> Обратите внимание, что использование метода Resolve для отдельной записи имени однорангового узла не делает недействительным разрешение нескольких одноранговых имен.  
  
 Для каждого <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> метода существует эквивалентный <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> метод.  Их списки параметров идентичны, за исключением того, что метод Ресолвеасинк включает системный маркер для асинхронной обработки событий.  
  
 Если параметр не указан, метод <xref:System.Net.PeerToPeer.Cloud.Available> использует ярлык для заполнения параметров облака. <xref:System.Net.PeerToPeer.Cloud>  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Событие будет вызвано, если операция разрешения завершилась с ошибкой или отменена.  
  
   
  
## Examples  
 В следующем примере кода показано, как разрешить публикацию, <xref:System.Net.PeerToPeer.PeerName> опубликованную в любом. <xref:System.Net.PeerToPeer.Cloud>  
  
 [!code-csharp[NCLPNRPPeerNameResolver#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPPeerNameResolver/CS/PeerNameResolver.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="peerName" /> — <see langword="null" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Невозможно разрешить указанное имя однорангового узла.</exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, int maxRecords);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * int -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName">Имя <see cref="T:System.Net.PeerToPeer.PeerName" /> для разрешения.</param>
        <param name="maxRecords">Максимальное количество объектов <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> для получения из всех объектов <see cref="T:System.Net.PeerToPeer.Cloud" /> для предоставленного имени однорангового узла <paramref name="peerName" />.</param>
        <summary>Разрешает указанное имя однорангового узла во всех облаках, известных вызывающему узлу, возвращая не больше заданного количества объектов <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />.</summary>
        <returns>Объект <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />, содержащий не более <paramref name="maxRecords" /> записей. Эта коллекция содержит записи имен одноранговых узелов, связанные с объектом <see cref="T:System.Net.PeerToPeer.PeerName" />, для которого выполнялось разрешение имени узла.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод связывает имя однорангового узла с облаками. Все облака запрашивают имя однорангового узла. В незащищенных одноранговых именах одно и то же имя однорангового узла может быть <xref:System.Net.PeerToPeer.Cloud>зарегистрировано разными пользователями в одном и связанном с разными конечными точками. Если невозможно разрешить (например, имя однорангового узла не публикуется <xref:System.Net.PeerToPeer.PeerToPeerException> ), создается исключение. <xref:System.Net.PeerToPeer.PeerName>  
  
 Для каждого <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> метода существует эквивалентный <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> метод.  Их списки параметров идентичны, за исключением того, что метод Ресолвеасинк включает системный маркер для асинхронной обработки событий.  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Событие будет вызвано, если операция разрешения завершилась с ошибкой или отменена.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="peerName" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="maxRecords" /> меньше или равно нулю.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Невозможно разрешить указанное имя однорангового узла.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, cloud)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="peerName">Имя <see cref="T:System.Net.PeerToPeer.PeerName" /> для разрешения.</param>
        <param name="cloud">Объект облака <see cref="T:System.Net.PeerToPeer.Cloud" />, в котором требуется выполнить разрешение имени однорангового узла.</param>
        <summary>Выполняет разрешение указанного объекта <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> в указанном облаке <see cref="T:System.Net.PeerToPeer.Cloud" />.</summary>
        <returns>Объект <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />, содержащий все записи имен одноранговых узелов (представленных объектами <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />), связанные с заданным именем однорангового узла. При использовании незащищенных имен одноранговых узелов один и тот же объект <see cref="T:System.Net.PeerToPeer.PeerName" /> может быть зарегистрирован одновременно разными пользователями в одном облаке <see cref="T:System.Net.PeerToPeer.Cloud" /> и может быть связан с разными конечными точками.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если невозможно разрешить (то есть имя однорангового узла не публикуется <xref:System.Net.PeerToPeer.PeerToPeerException> ), создается исключение. <xref:System.Net.PeerToPeer.PeerName>  
  
 Для незащищенных имен одноранговых узлов одно и то же имя можно зарегистрировать (и связать с разными конечными точками) разными одноранговыми узлами в одном облаке.  
  
 Для каждого <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> метода существует эквивалентный <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> метод.  Их списки параметров идентичны, за исключением того, что метод Ресолвеасинк включает системный маркер для асинхронной обработки событий.  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver> <xref:System.Net.PeerToPeer.Cloud.Name%2A> <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>Если параметр имеет `null`значение, компонент использует <xref:System.Net.PeerToPeer.Cloud.Available> сочетание клавиш для заполнения, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>и. <xref:System.Net.PeerToPeer.Cloud>  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Событие будет вызвано, если операция разрешения завершилась с ошибкой или отменена.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="peerName" /> — <see langword="null" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Невозможно разрешить указанное имя однорангового узла.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, int maxRecords);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * int -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, cloud, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName">Имя <see cref="T:System.Net.PeerToPeer.PeerName" /> для разрешения.</param>
        <param name="cloud">В <see cref="T:System.Net.PeerToPeer.Cloud" /> необходимо разрешить <paramref name="peerName" />.</param>
        <param name="maxRecords">Максимальное количество объектов записей имен одноранговых узелов, получаемых из указанного облака для заданного имени узла <paramref name="peerName" />.</param>
        <summary>Выполняет разрешение для указанного объекта <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> в указанном облаке <see cref="T:System.Net.PeerToPeer.Cloud" />, возвращая не более заданного количества объектов <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />.</summary>
        <returns>Объект <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" />, содержащий не более <paramref name="maxRecords" /> записей. Эта коллекция содержит записи имен одноранговых узелов, связанные с объектом <see cref="T:System.Net.PeerToPeer.PeerName" />, для которого выполнялось разрешение имени узла.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для незащищенных имен одноранговых узлов одно и то же имя можно зарегистрировать (и связать с разными конечными точками) разными одноранговыми узлами в одном облаке. Если имя однорангового узла не может быть <xref:System.Net.PeerToPeer.PeerToPeerException> разрешено, создается исключение.  
  
 Для каждого <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> метода существует эквивалентный <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> метод.  Их списки параметров идентичны, за исключением того, что метод Ресолвеасинк включает системный маркер для асинхронной обработки событий.  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver> <xref:System.Net.PeerToPeer.Cloud.Name%2A> <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>Если параметр имеет `null`значение, компонент использует <xref:System.Net.PeerToPeer.Cloud.Available> сочетание клавиш для заполнения, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>и. <xref:System.Net.PeerToPeer.Cloud>  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Событие будет вызвано, если операция разрешения завершилась с ошибкой или отменена.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="peerName" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="maxRecords" /> меньше или равно нулю.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Невозможно разрешить указанное имя однорангового узла.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResolveAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Эти методы начинают асинхронную операцию разрешения указанного имени <see cref="T:System.Net.PeerToPeer.PeerName" /> во всех облаках, известных вызывающему узлу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для каждого <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> метода существует эквивалентный <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> метод, который используется, когда требуется асинхронная обработка.  Они идентичны в передаваемых параметрах, за исключением того, что Ресолвеасинк включает в свой список параметров системный токен для обработки событий.  
  
 Если в методе Resolve и методе ресолвеасинк возникает несоответствие параметров, а <xref:System.Net.PeerToPeer.Cloud> параметр не указан, метод <xref:System.Net.PeerToPeer.Cloud.Available> использует ярлык для заполнения параметров облака.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">Имя <see cref="T:System.Net.PeerToPeer.PeerName" /> для разрешения.</param>
        <param name="userState">Определяемый пользователем объект, содержащий сведения о состоянии операции разрешения имени однорангового узла.</param>
        <summary>Начинает операцию асинхронного разрешения имени однорангового узла для указанного значения <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> во всех облаках, известных вызывающему одноранговому узлу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод асинхронно связывает имя однорангового узла с облаками. Все облака запрашиваются для <xref:System.Net.PeerToPeer.PeerName>. Он вызывает <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> событие, которое вызывает <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> метод. Или вызывает <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> событие, которое вызывает <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> метод.  
  
 Если имя однорангового узла не может быть <xref:System.Net.PeerToPeer.PeerToPeerException> разрешено, создается исключение.  
  
 Для незащищенных имен одноранговых узлов одно и то же имя можно зарегистрировать (и связать с разными конечными точками) разными одноранговыми узлами в одном облаке.  
  
 Вызов метода аналогичен <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> вызову метода для каждой записи имени <xref:System.Net.PeerToPeer.PeerNameRecordCollection>однорангового узла в. <xref:System.Net.PeerToPeer.PeerNameResolver> Обратите внимание, что использование метода Resolve для отдельной записи имени однорангового узла не делает недействительным разрешение нескольких одноранговых имен.  
  
 Для каждого <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> метода существует эквивалентный <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> метод.  Их списки параметров идентичны, за исключением того, что метод Ресолвеасинк включает системный маркер для асинхронной обработки событий, а метод Resolve предназначен для синхронной обработки.  
  
 Все асинхронные ссылки на объект сопоставителя координируются с помощью уникального маркера идентификатора. Этот `userState` маркер или идентификатор сообщения позволяет операционной системе доставлять сообщения одному процессу приема после помещения сообщения в очередь сообщений.  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Событие будет вызвано, если операция разрешения завершилась с ошибкой или отменена.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Хотя бы одному параметру (<paramref name="peerName" /> или <paramref name="userState" />) присвоено значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, int maxRecords, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * int * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, maxRecords, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">Имя <see cref="T:System.Net.PeerToPeer.PeerName" /> для разрешения.</param>
        <param name="maxRecords">Максимальное число записей для получения имени однорангового узла.</param>
        <param name="userState">Определяемый пользователем объект, содержащий сведения об операции разрешения.</param>
        <summary>Начинает операцию асинхронного разрешения имени однорангового узла для указанного значения <see cref="T:System.Net.PeerToPeer.PeerName" /> во всех облаках, известных вызывающему одноранговому узлу, возвращая не более <paramref name="maxRecords" /> записей для имен одноранговых узлов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод асинхронно связывает имя однорангового узла с облаками. Все облака запрашиваются для <xref:System.Net.PeerToPeer.PeerName>. Для незащищенных имен одноранговых узлов одно и то же имя можно зарегистрировать (и связать с разными конечными точками) разными одноранговыми узлами в одном облаке. Если имя однорангового узла не может быть `null`разрешено <xref:System.Net.PeerToPeer.PeerToPeerException> или равно, создается исключение.  
  
 Этот метод вызывает <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> событие, которое выполняет обратный вызов <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> к методу. Или вызывает <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> событие, которое вызывает <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> метод.  
  
 Для каждого <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> метода существует эквивалентный <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> метод.  Их списки параметров идентичны, за исключением того, что метод Ресолвеасинк включает системный маркер для асинхронной обработки событий, а метод Resolve предназначен для синхронной обработки.  
  
 Все асинхронные ссылки на объект сопоставителя координируются с помощью уникального маркера <xref:System.Object>идентификатора. Этот `userState` маркер или идентификатор сообщения позволяет операционной системе доставлять сообщения одному процессу приема после помещения сообщения в очередь сообщений.  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Событие будет вызвано, если операция разрешения завершилась с ошибкой или отменена.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Хотя бы одному параметру (<paramref name="peerName" /> или <paramref name="userState" />) присвоено значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="maxRecords" /> меньше или равно нулю.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, cloud, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">Имя <see cref="T:System.Net.PeerToPeer.PeerName" /> для разрешения.</param>
        <param name="cloud">В <see cref="T:System.Net.PeerToPeer.Cloud" /> необходимо разрешить <paramref name="peerName" />.</param>
        <param name="userState">Определяемый пользователем объект <see cref="T:System.Object" />, который содержит сведения об операции разрешения имени однорангового узла.</param>
        <summary>Начинает операцию асинхронного разрешения имени однорангового узла для заданного значения <see cref="T:System.Net.PeerToPeer.PeerName" /> в указанном классе <see cref="T:System.Net.PeerToPeer.Cloud" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывает <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> событие, которое выполняет обратный вызов <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> к методу. Или вызывает <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> событие, которое вызывает <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> метод.  
  
 Для незащищенных имен одноранговых узлов одно и то же имя можно зарегистрировать (и связать с разными конечными точками) разными одноранговыми узлами в одном облаке.  
  
 <xref:System.Net.PeerToPeer.Cloud.Name%2A> <xref:System.Net.PeerToPeer.Cloud.Available> <xref:System.Net.PeerToPeer.Cloud.Scope%2A> <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> Если параметр имеет значение `null`, имя разрешается с помощью ярлыка, который инициализирует значения по умолчанию для свойств, и. <xref:System.Net.PeerToPeer.Cloud>  
  
 Для каждого <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> метода существует эквивалентный <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> метод.  Их списки параметров идентичны, за исключением того, что метод Ресолвеасинк включает системный маркер для асинхронной обработки событий, а метод Resolve предназначен для синхронной обработки.  
  
 Все асинхронные ссылки на объект сопоставителя координируются с помощью уникального маркера идентификатора. Этот `userState` маркер или идентификатор сообщения позволяет операционной системе доставлять сообщения одному процессу приема после помещения сообщения в очередь сообщений.  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Событие будет вызвано, если операция разрешения завершилась с ошибкой или отменена.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Хотя бы одному параметру (<paramref name="peerName" /> или <paramref name="userState" />) присвоено значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, int maxRecords, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * int * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, cloud, maxRecords, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">Имя <paramref name="peerName" /> для разрешения.</param>
        <param name="cloud">Объект <paramref name="cloud" />, в котором необходимо разрешить <paramref name="peerName" />.</param>
        <param name="maxRecords">Максимальное число записей для получения из параметра <paramref name="cloud" /> для <paramref name="peerName" />.</param>
        <param name="userState">Определяемый пользователем объект, содержащий сведения об операции разрешения имени однорангового узла.</param>
        <summary>Начинает операцию асинхронного разрешения имени однорангового узла для заданного значения <see cref="T:System.Net.PeerToPeer.PeerName" /> в указанном классе <see cref="T:System.Net.PeerToPeer.Cloud" />.  Для указанного имени однорангового узла соответствующая операция разрешит не более такого количества записей: <paramref name="maxRecords" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для незащищенных имен одноранговых узлов одно и то же имя можно зарегистрировать (и связать с разными конечными точками) разными одноранговыми узлами в одном облаке.  
  
 Этот метод вызывает <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> событие, которое выполняет обратный вызов <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> к методу. Или вызывает <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> событие, которое вызывает <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> метод.  
  
 <xref:System.Net.PeerToPeer.Cloud.Name%2A> <xref:System.Net.PeerToPeer.Cloud.Available> <xref:System.Net.PeerToPeer.Cloud.Scope%2A> <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> Если параметр имеет значение `null`, имя разрешается с помощью ярлыка, который инициализирует значения по умолчанию для свойств, и. <xref:System.Net.PeerToPeer.Cloud>  
  
 Для каждого <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> метода существует эквивалентный <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> метод.  Их списки параметров идентичны, за исключением того, что метод Ресолвеасинк включает системный маркер для асинхронной обработки событий, а метод Resolve предназначен для синхронной обработки.  
  
 Все асинхронные ссылки на объект распознавателя одноранговых узлов координируются с помощью уникального <xref:System.Object>маркера идентификатора. Этот `userState` маркер или идентификатор сообщения позволяет операционной системе доставлять сообщения одному процессу приема после помещения сообщения в очередь сообщений.  
  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Событие будет вызвано, если операция разрешения завершилась с ошибкой или отменена.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Хотя бы одному параметру (<paramref name="peerName" /> или <paramref name="userState" />) присвоено значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Один или несколько указанных параметров недопустимы.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Чтобы успешно завершить эту операцию, требуется по крайней мере один обработчик событий.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="maxRecords" /> меньше или равно нулю.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsyncCancel">
      <MemberSignature Language="C#" Value="public void ResolveAsyncCancel (object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsyncCancel(object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAsyncCancel (userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsyncCancel(System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsyncCancel : obj -&gt; unit" Usage="peerNameResolver.ResolveAsyncCancel userState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userState">Объект, предоставляемый для экземпляра метода <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" />, который начал операцию разрешения.</param>
        <summary>Отменяет запрос на разрешение имени однорангового узла в рамках асинхронной операции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов этого метода гарантирует, что система не будет пытаться получить дополнительные записи для указанного <xref:System.Net.PeerToPeer.PeerName>.  Если этот метод вызывается, когда асинхронная операция разрешения имени однорангового узла не недоступна, она действует как «No Operation» (NO OP).  
  
 Объект `userState` должен быть предоставлен, так как он используется для отслеживания определенного асинхронного вызова, когда выполняется несколько вызовов. Этот объект, предоставляемый вызывающим объектом, уникален для каждого запроса на разрешение имени однорангового узла.  
  
 Этот метод будет возвращать значение немедленно, но операция может или не отменяться немедленно. Аргументы события, возвращаемые <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> событием, содержат поле, которое клиенты могут опрашивать для определения того, произошла ли отмена.  
  
 Вызов этого метода гарантирует, что событие ресолвекомплетед будет получать сигнал о том как можно скорее, а аргумент <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> события `true`имеет значение.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметры <paramref name="userState" /> не могут иметь значение <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ResolveCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveCompleted As EventHandler(Of ResolveCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::ResolveCompletedEventArgs ^&gt; ^ ResolveCompleted;" />
      <MemberSignature Language="F#" Value="member this.ResolveCompleted : EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; " Usage="member this.ResolveCompleted : System.EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Событие <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> сигнализирует о завершении запроса на разрешение имени однорангового узла для определенного элемента <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> Событие будет вызвано для каждой найденной конечной точки, и это событие будет вызвано только один раз после обнаружения всех конечных точек.  
  
 Это событие также будет вызвано, <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> если операция завершается с ошибкой или отменяется.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="ResolveProgressChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveProgressChanged As EventHandler(Of ResolveProgressChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::ResolveProgressChangedEventArgs ^&gt; ^ ResolveProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.ResolveProgressChanged : EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; " Usage="member this.ResolveProgressChanged : System.EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Это событие отправляет сигнал при каждом обнаружении объекта <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> в ответ на операцию <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> для определенного элемента <see cref="T:System.Net.PeerToPeer.PeerName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если в <xref:System.Net.PeerToPeer.PeerName> запрашиваемых облаках существует несколько объектов, это событие сигнализирует о каждом <xref:System.Net.PeerToPeer.PeerNameRecord> обнаружении.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      </Docs>
    </Member>
  </Members>
</Type>
