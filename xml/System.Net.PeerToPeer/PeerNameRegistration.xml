<Type Name="PeerNameRegistration" FullName="System.Net.PeerToPeer.PeerNameRegistration">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c1540607e6dba258eacddb1de6142450fa22ab17" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69113314" /></Metadata><TypeSignature Language="C#" Value="public class PeerNameRegistration : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerNameRegistration extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameRegistration" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameRegistration&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameRegistration : IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type PeerNameRegistration = class&#xA;    interface IDisposable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Регистрирует имя однорангового узла <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> в объекте облака <see cref="T:System.Net.PeerToPeer.Cloud" /> или наборе облаков.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Регистрация создает (или обновляет) всю информацию, связанную с a <xref:System.Net.PeerToPeer.PeerName> в одноранговом облаке или облаках.  
  
 Возможно наличие нескольких <xref:System.Net.PeerToPeer.PeerNameRegistration> объектов для одного и того же имени однорангового узла. В таком случае, если имя однорангового узла защищено, каждый экземпляр <xref:System.Net.PeerToPeer.PeerNameRegistration> представляется в другом облаке. Однако если имя однорангового узла не защищено, оно может быть зарегистрировано в одном и том же облаке несколько раз, предоставляя каждую регистрацию из другого процесса.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр по умолчанию класса <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращает новый экземпляр типа <xref:System.Net.PeerToPeer.PeerNameRegistration>по умолчанию. Она не выполняет регистрацию имени однорангового узла во время создания.  
  
 После создания экземпляра объекта с этим конструктором вызывающий объект должен заполнить соответствующие поля в экземпляре перед вызовом метода <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> или. <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As PeerName, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">Регистрируемый объект <see cref="T:System.Net.PeerToPeer.PeerName" />.</param>
        <param name="port">Целое число, указывающее номер порта для регистрации.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> с заданным именем и номером порта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При вызове этого конструктора создается экземпляр, который будет использоваться для регистрации всех исходных адресов (IPv6and IPv4) и предоставленного порта для всех облаков, в которых в данный момент участвует одноранговый узел.  Если объект успешно создан, заполняются указанные <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> и <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> .  
  
 Если имя однорангового узла защищено и ранее было зарегистрировано в <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> одноранговых узлах <xref:System.Net.PeerToPeer.PeerToPeerException> , в настоящее время участвует в вызове.  
  
 Этот конструктор создает <xref:System.Net.PeerToPeer.PeerNameRegistration> экземпляр, но не выполняет регистрацию. После создания экземпляра объекта регистрации с помощью этого конструктора и заполнения его полей приложение должно вызвать метод <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> для выполнения фактической регистрации.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> не может иметь значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Указанный номер порта меньше нуля.  Значения номеров портов должны быть больше или равны нулю и меньше 65 535 (0xFFFF).</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">- Указанный элемент <see cref="T:System.Net.PeerToPeer.PeerName" /> уже зарегистрирован из этого узла.  
  
- Удаленный одноранговый узел не является владельцем <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> для предоставленного объекта <see cref="T:System.Net.PeerToPeer.PeerName" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerNameRegistration (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerNameRegistration(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Ссылка на объект, содержащий данные, необходимые для десериализации экземпляра.</param>
        <param name="context">Контекст, который предоставляет средства для десериализации данных. Также называется источником сериализованных данных.</param>
        <summary>Инициализирует новый сериализуемый объект <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.Runtime.Serialization" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int * System.Net.PeerToPeer.Cloud -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port, cloud)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="name">Регистрируемый объект <see cref="T:System.Net.PeerToPeer.PeerName" />.</param>
        <param name="port">Целое число, указывающее номер порта для регистрации.</param>
        <param name="cloud"><see cref="T:System.Net.PeerToPeer.Cloud" />, в котором необходимо зарегистрировать имя однорангового узла.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> с указанным именем однорангового узла, номером порта и значением <see cref="T:System.Net.PeerToPeer.Cloud" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При вызове этого конструктора создается экземпляр, который будет использоваться для регистрации всех исходных адресов (IPv6 и IPv4), предоставленного порта и указанного <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.  Если объект создан успешно, свойства заполняются указанными <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>значениями, <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> и <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.  
  
 Если параметр Cloud имеет `null`значение, имя регистрируется <xref:System.Net.PeerToPeer.Cloud.Available> с помощью ярлыка, который инициализирует значения по умолчанию <xref:System.Net.PeerToPeer.Cloud.Name%2A>для <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, и <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.  
  
 После создания экземпляра <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> необходимо вызвать метод, чтобы <xref:System.Net.PeerToPeer.PeerName>зарегистрировать.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="name" /> не может иметь значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Указанный номер порта меньше нуля.  Значения номеров портов должны быть больше или равны нулю и меньше 65 535 (0xFFFF).</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">- Указанный элемент <see cref="T:System.Net.PeerToPeer.PeerName" /> уже зарегистрирован из этого узла.  
  
- Удаленный одноранговый узел не является владельцем <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> для предоставленного объекта <see cref="T:System.Net.PeerToPeer.PeerName" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Cloud">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Cloud Cloud { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Cloud Cloud" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberSignature Language="VB.NET" Value="Public Property Cloud As Cloud" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::Cloud ^ Cloud { System::Net::PeerToPeer::Cloud ^ get(); void set(System::Net::PeerToPeer::Cloud ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Cloud : System.Net.PeerToPeer.Cloud with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Cloud</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает данные свойства <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />, которое определяет облако, где будет регистрироваться данный объект <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" />.</summary>
        <value>Объект типа <see cref="T:System.Net.PeerToPeer.Cloud" />, который указывает облако однорангового узла, для которого определена регистрация. По умолчанию это свойство имеет значение <see langword="null" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public string Comment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberSignature Language="VB.NET" Value="Public Property Comment As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comment { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Comment : string with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает дополнительные сведения, связанные с объектом <see cref="T:System.Net.PeerToPeer.PeerName" />, который будет регистрироваться в облаке <see cref="T:System.Net.PeerToPeer.Cloud" />.</summary>
        <value>Комментарий, содержащий дополнительные сведения об имени однорангового узла <see cref="T:System.Net.PeerToPeer.PeerName" />, который требуется связать с облаком <see cref="T:System.Net.PeerToPeer.Cloud" />. По умолчанию это свойство имеет значение <see langword="null" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Указанное строковое значение содержит больше 39 символов Юникода.</exception>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public byte[] Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Data" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberSignature Language="VB.NET" Value="Public Property Data As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Data { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Data : byte[] with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает определяемые приложением двоичные данные для объекта <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</summary>
        <value>Массив байтов, в котором хранятся двоичные данные, связанные с записью. По умолчанию это свойство имеет значение <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Максимальный объем <xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A> , который может быть указан, составляет 4 096 байт.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Размер заданного свойства <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /> превышает 4096 байтов.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Освобождает ресурсы, используемые объектом <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда одноранговый узел <xref:System.Net.PeerToPeer.Cloud>покидает, в облаке больше <xref:System.Net.PeerToPeer.PeerNameRegistration> не требуется объект, связанный с одноранговым узлом.  Независимо от того, является ли объект регистрации остановленным или удаленным, зависит от того, будет ли облако повторно использовать объект для регистрации этого однорангового или другого узла. Если в объекте регистрации имеются другие конечные точки, с которыми должен взаимодействовать одноранговый узел, регистрация этих конечных точек в облаке должна быть выполнена перед остановкой или удалением этого объекта.  
  
 Если облако планирует регистрировать больше одноранговых узлов, <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> рекомендуется использовать метод. когда в облаке больше не требуется память, она должна возвращаться в операционную систему с <xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A> помощью метода.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="peerNameRegistration.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Освобождает все ресурсы, используемые объектом <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage"><para>Всегда вызывайте метод Dispose перед уничтожением <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> объекта.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="peerNameRegistration.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</param>
        <summary>Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> (при необходимости освобождает и управляемые ресурсы).</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage"><para>Всегда вызывайте метод Dispose перед тем, как освободить последнюю ссылку на <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> объект.</para></block>
      </Docs>
    </Member>
    <Member MemberName="EndPointCollection">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPointCollection EndPointCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPointCollection EndPointCollection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndPointCollection As IPEndPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPointCollection ^ EndPointCollection { System::Net::IPEndPointCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndPointCollection : System.Net.IPEndPointCollection" Usage="System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию конечных точек сети, для которых регистрируется связанное имя однорангового узла.</summary>
        <value>Объект <see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" />, содержащий конечные точки сети, для которых регистрируется связанное имя однорангового узла. Если явно не задано иное, значением всех свойств ссылочных типов по умолчанию является <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В пространстве имен <xref:System.Net.IPEndPoint> компонент представляет конечную точку сети в виде IP-адреса и номера порта. <xref:System.Net>  Для протокола PNRP для каждой конечной точки необходимо указать IP-адрес и значение порта.  Максимальное число конечных точек, которое можно указать, равно десяти. Если этот параметр имеет значение `null`, используется автоматический выбор адресов.  
  
 Если используется метод регистрации, который автоматически выбирает адреса для регистрации, метод определения адресов, для которых было зарегистрировано одноранговое имя, отсутствует.  Это значит, <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> что свойство не будет обновлено для отражения выбранных адресов.  
  
 Если имя однорангового узла зарегистрировано для нескольких узлов, каждое <xref:System.Net.PeerToPeer.PeerNameRegistration> из них является отдельным <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> , а свойство, определенное для каждого экземпляра регистрации, будет отличаться. Кроме того, если <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> объект зарегистрирован в нескольких единицах <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>, каждая регистрация является отдельной, а коллекция конечных точек обычно будет отличаться для каждого экземпляра.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>Список конечных точек, с которыми будет обмениваться данными этот одноранговый узел, не совпадает со списком конечных точек, по которым известно это одноранговое имя, которое хранится по-другому.</para></block>
        <altmember cref="T:System.Net.IPEndPointCollection" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerNameRegistration.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Содержит сериализуемые данные, связанные с объектом <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</param>
        <param name="context">Содержит назначение сериализованного потока, связанного с объектом <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</param>
        <summary>Заполняет объект сведений о сериализации данными, необходимыми для сериализации экземпляра <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRegistered">
      <MemberSignature Language="C#" Value="public bool IsRegistered ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsRegistered() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered" />
      <MemberSignature Language="VB.NET" Value="Public Function IsRegistered () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsRegistered();" />
      <MemberSignature Language="F#" Value="member this.IsRegistered : unit -&gt; bool" Usage="peerNameRegistration.IsRegistered " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Получает или задает значение, которое указывает, зарегистрировано ли имя однорангового узла, заданное свойством <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />, в конкретном облаке <see cref="T:System.Net.PeerToPeer.Cloud" /> на ведущем узле.</summary>
        <returns>Если значение равно <see langword="true" />, то имя однорангового узла зарегистрировано в облаке <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> для ведущего узла одноранговой сети. Если значение равно <see langword="false" />, то можно запустить процесс регистрации с помощью метода <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Объект, который уже был удален, зарегистрировать нельзя.</exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameResolver" />
      </Docs>
    </Member>
    <Member MemberName="PeerName">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerName PeerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerName PeerName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberSignature Language="VB.NET" Value="Public Property PeerName As PeerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerName ^ PeerName { System::Net::PeerToPeer::PeerName ^ get(); void set(System::Net::PeerToPeer::PeerName ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PeerName : System.Net.PeerToPeer.PeerName with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя однорангового узла, регистрируемое в облаке одноранговых узелов.</summary>
        <value>Объект типа <see cref="T:System.Net.PeerToPeer.PeerName" />, содержащий значения, связанные с данным объектом <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />. Если явно не задано иное, значением всех свойств ссылочных типов по умолчанию является <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Имя однорангового узла можно зарегистрировать для нескольких узлов. Каждый <xref:System.Net.PeerToPeer.PeerNameRegistration> экземпляр является отдельным. Свойство <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> , связанное с каждым <xref:System.Net.PeerToPeer.PeerName> соответствующим экземпляром, отличается. Кроме того, можно зарегистрировать имя однорангового узла для нескольких облаков, к которым подключен узел; Каждая из этих регистраций является отдельной. Имя однорангового <xref:System.Net.IPEndPointCollection> узла будет отличаться в каждом из этих экземпляров.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает номер порта [протокола TCP/IP](https://go.microsoft.com/fwlink?LinkID=98458), который используется одноранговым узелом, регистрируемым в объекте <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</summary>
        <value>Целое число, указывающее номер TCP-порта для конечной точки <see cref="T:System.Net.IPEndPoint" />. Если значение не задано явно, свойство имеет значение по умолчанию — нуль (0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Порт по умолчанию используется <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> методом только в том случае, если не указаны конечные точки.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение номера порта меньше нуля.  Значения номеров портов должны быть больше или равны нулю и меньше 65 535 (0xFFFF).</exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="peerNameRegistration.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Регистрирует <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> в объекте <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />. Если параметр <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /> не указан, автоматический выбор адресов используется со значением порта, указанным в свойстве <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод регистрирует имя однорангового узла, указанное <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> в свойстве, со всеми исходными адресами <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> и указанным в конструкторе. Порт по умолчанию используется этим методом только в том случае, если не указаны конечные точки.  
  
 <xref:System.Net.PeerToPeer.Cloud.Available> <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> <xref:System.Net.PeerToPeer.Cloud.Name%2A> <xref:System.Net.PeerToPeer.Cloud.Scope%2A>Если свойство имеет `null`значение, этот метод регистрирует имя однорангового узла, указанное в свойстве, с помощью поля, которое инициализирует значения по умолчанию для, и <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.  
  
 После запуска <xref:System.Net.PeerToPeer.PeerNameRegistration> <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> объекта метод используется для его отмены.  
  
 Чтобы обновить регистрацию, <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A> необходимо использовать метод.  
  
   
  
## Examples  
 В следующем примере кода создается <xref:System.Net.PeerToPeer.PeerName> и регистрируется вместе с указанными метаданными.  
  
 [!code-csharp[NCLPNRPRegisterPeerName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPRegisterPeerName/CS/RegisterPeerName.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойству <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> задано значение <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Для этого объекта ранее вызывался метод Dispose().</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">- Указанный элемент <see cref="T:System.Net.PeerToPeer.PeerName" /> уже зарегистрирован. Чтобы обновить регистрацию, необходимо использовать метод <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />.  
  
- Удаленный одноранговый узел не является владельцем <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> для указанного узла <see cref="T:System.Net.PeerToPeer.PeerName" />.  
  
- Один из параметров (<see cref="T:System.Net.PeerToPeer.PeerName" /> или <see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" />) не указан. Необходимо указать по крайней мере один из них.  
  
- Сообщение или элементы данных являются недопустимыми. Параметр <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /> не задан, и большой двоичный объект данных или <see cref="T:System.Net.IPEndPoint" /> не указан.</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="peerNameRegistration.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Отменяет регистрацию имени однорангового узла в свойстве <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> из всех облаков, в которых выполнена регистрация.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 После остановки процесса регистрации состояние объекта регистрации равно состоянию непосредственно после создания конструктором без параметров. В этом состоянии предполагается, что все его свойства не имеют значения. <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> Метод можно использовать для его перезапуска.  
  
 Возможно наличие нескольких объектов регистрации для одного и того же имени однорангового узла.  В таком случае, если имя однорангового узла защищено, каждый экземпляр будет представлять регистрацию в другом облаке PNRP.  Однако если имя однорангового узла не защищено, оно может быть зарегистрировано в одном и том же облаке несколько раз.  
  
 Если этот экземпляр уже остановлен, вызов этого метода не оказывает никакого влияния.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> еще не зарегистрировано. Это происходит, когда объект <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> создается с помощью пустого конструктора. Свойство <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> должно быть заполнено в этом экземпляре до вызова <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Для этого объекта ранее вызывался метод Dispose().</exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Содержит сериализуемые данные, связанные с экземпляром <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</param>
        <param name="context">Содержит назначение сериализованного потока, связанного с экземпляром <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</param>
        <summary>Реализует интерфейс <see cref="T:System.Runtime.Serialization.ISerializable" /> и возвращает данные, необходимые для сериализации экземпляра <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; unit" Usage="peerNameRegistration.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Обновляет <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> для узла, зарегистрированного в определенном объекте <see cref="T:System.Net.PeerToPeer.Cloud" />. Обновление выполняется на основе сведений, указанных в свойствах.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Все сведения, зарегистрированные в облаке для этого <xref:System.Net.PeerToPeer.PeerName> до вызова, полностью отбрасываются.  Новые данные не объединяются с существующей регистрацией.  Чтобы обновить <xref:System.Net.PeerToPeer.PeerNameRegistration>, сначала обновите свойства этого экземпляра, а затем вызовите этот метод.  
  
 <xref:System.Net.PeerToPeer.PeerNameRecord> После регистрации<xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> свойство не может быть обновлено.  Все остальные поля в записи могут быть обновлены.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Свойству <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> задано значение <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">- Свойство <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> еще не зарегистрировано. Нельзя вызывать метод <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />, пока имя однорангового узла, указанное в свойстве <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />, зарегистрировано в одном или нескольких облаках.  
  
- Имя однорангового узла, указанное в свойстве <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />, изменилось со времени регистрации соответствующего элемента <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Невозможно зарегистрировать удаленный объект.</exception>
        <exception cref="T:System.ArgumentNullException">Для свойства <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> задано значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UseAutoEndPointSelection">
      <MemberSignature Language="C#" Value="public bool UseAutoEndPointSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAutoEndPointSelection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAutoEndPointSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAutoEndPointSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseAutoEndPointSelection : bool with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, требуется ли использовать автоматический выбор конечных точек при обходе сетки одноранговых узелов или облака <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />.</summary>
        <value><see langword="true" />, если требуется использовать автоматический выбор конечных точек; <see langword="false" />, если для определения конечных точек используется другой метод. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если используется автоматический выбор конечных точек (для `true`этого свойства задано значение) без указания сведений о конечной точке до начала <xref:System.Net.PeerToPeer.PeerNameRegistration>, система выбирает отдельные конечные точки и публикует их вместе с соответствующим именем однорангового узла во всех доступных облака.  Если порт не указан, автоматический выбор в качестве значения <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>выбирает нуль.  
  
 Если задано `false`значение, автоматическое выделение, как описано выше, не выполняется.  Это позволяет процессу регистрации опубликовать имя однорангового узла вместе с BLOB-объектом данных (как указано в <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> свойстве). С именем не связаны конечные точки.  
  
 Если используется метод регистрации, который автоматически выбирает адреса для регистрации, то не существует метода для определения адресов, для которых <xref:System.Net.PeerToPeer.PeerName> был зарегистрирован объект.  Это значит, <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> что свойство не будет обновлено для отражения выбранных адресов.  
  
 Обновление этого свойства после начала регистрации имени однорангового узла не оказывает никакого воздействия.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
