<Type Name="PeerNameRegistration" FullName="System.Net.PeerToPeer.PeerNameRegistration">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c1540607e6dba258eacddb1de6142450fa22ab17" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70591435" /></Metadata><TypeSignature Language="C#" Value="public class PeerNameRegistration : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerNameRegistration extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameRegistration" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameRegistration&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameRegistration : IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type PeerNameRegistration = class&#xA;    interface IDisposable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="15977-101">Регистрирует имя однорангового узла <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> в объекте облака <see cref="T:System.Net.PeerToPeer.Cloud" /> или наборе облаков.</span><span class="sxs-lookup"><span data-stu-id="15977-101">Registers a <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> in a <see cref="T:System.Net.PeerToPeer.Cloud" /> or set of clouds.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15977-102">Регистрация создает (или обновляет) всю информацию, связанную с a <xref:System.Net.PeerToPeer.PeerName> в одноранговом облаке или облаках.</span><span class="sxs-lookup"><span data-stu-id="15977-102">Registration creates (or updates) all the information that is associated with a <xref:System.Net.PeerToPeer.PeerName> in a peer cloud or clouds.</span></span>  
  
 <span data-ttu-id="15977-103">Возможно наличие нескольких <xref:System.Net.PeerToPeer.PeerNameRegistration> объектов для одного и того же имени однорангового узла.</span><span class="sxs-lookup"><span data-stu-id="15977-103">It is possible to have multiple <xref:System.Net.PeerToPeer.PeerNameRegistration> objects for the same peer name.</span></span> <span data-ttu-id="15977-104">В таком случае, если имя однорангового узла защищено, каждый экземпляр <xref:System.Net.PeerToPeer.PeerNameRegistration> представляется в другом облаке.</span><span class="sxs-lookup"><span data-stu-id="15977-104">In such a case, if the peer name is secured, each instance represents <xref:System.Net.PeerToPeer.PeerNameRegistration> in a different cloud.</span></span> <span data-ttu-id="15977-105">Однако если имя однорангового узла не защищено, оно может быть зарегистрировано в одном и том же облаке несколько раз, предоставляя каждую регистрацию из другого процесса.</span><span class="sxs-lookup"><span data-stu-id="15977-105">However, if the peer name is not secured, it can be registered in the same cloud multiple times, providing that each registration is from a different process.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15977-106">Инициализирует новый экземпляр класса <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</span><span class="sxs-lookup"><span data-stu-id="15977-106">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15977-107">Инициализирует новый экземпляр по умолчанию класса <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</span><span class="sxs-lookup"><span data-stu-id="15977-107">Initializes a new default instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15977-108">Возвращает новый экземпляр типа <xref:System.Net.PeerToPeer.PeerNameRegistration>по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="15977-108">Returns a new default instance of type <xref:System.Net.PeerToPeer.PeerNameRegistration>.</span></span> <span data-ttu-id="15977-109">Она не выполняет регистрацию имени однорангового узла во время создания.</span><span class="sxs-lookup"><span data-stu-id="15977-109">It does not perform peer name registration during construction.</span></span>  
  
 <span data-ttu-id="15977-110">После создания экземпляра объекта с этим конструктором вызывающий объект должен заполнить соответствующие поля в экземпляре перед вызовом метода <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> или. <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A></span><span class="sxs-lookup"><span data-stu-id="15977-110">After instantiating an object with this constructor, the caller should populate the appropriate fields in the instance prior to calling <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> or <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As PeerName, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="15977-111">Регистрируемый объект <see cref="T:System.Net.PeerToPeer.PeerName" />.</span><span class="sxs-lookup"><span data-stu-id="15977-111">The <see cref="T:System.Net.PeerToPeer.PeerName" /> object to register.</span></span></param>
        <param name="port"><span data-ttu-id="15977-112">Целое число, указывающее номер порта для регистрации.</span><span class="sxs-lookup"><span data-stu-id="15977-112">Integer value that specifies the port number to register.</span></span></param>
        <summary><span data-ttu-id="15977-113">Инициализирует новый экземпляр класса <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> с заданным именем и номером порта.</span><span class="sxs-lookup"><span data-stu-id="15977-113">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class with the specified name and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15977-114">При вызове этого конструктора создается экземпляр, который будет использоваться для регистрации всех исходных адресов (IPv6and IPv4) и предоставленного порта для всех облаков, в которых в данный момент участвует одноранговый узел.</span><span class="sxs-lookup"><span data-stu-id="15977-114">Calling this constructor creates an instance that will be used to register all source addresses (both IPv6and IPv4) and the provided port for all clouds in which the peer is currently participating.</span></span>  <span data-ttu-id="15977-115">Если объект успешно создан, заполняются указанные <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> и <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> .</span><span class="sxs-lookup"><span data-stu-id="15977-115">If the object is constructed successfully, the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> and <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> are populated.</span></span>  
  
 <span data-ttu-id="15977-116">Если имя однорангового узла защищено и ранее было зарегистрировано в <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> одноранговых узлах <xref:System.Net.PeerToPeer.PeerToPeerException> , в настоящее время участвует в вызове.</span><span class="sxs-lookup"><span data-stu-id="15977-116">If the peer name is secured and was previously registered in a <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> the peer is currently participating in, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="15977-117">Этот конструктор создает <xref:System.Net.PeerToPeer.PeerNameRegistration> экземпляр, но не выполняет регистрацию.</span><span class="sxs-lookup"><span data-stu-id="15977-117">This constructor only creates a <xref:System.Net.PeerToPeer.PeerNameRegistration> instance; it does not perform the registration.</span></span> <span data-ttu-id="15977-118">После создания экземпляра объекта регистрации с помощью этого конструктора и заполнения его полей приложение должно вызвать метод <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> для выполнения фактической регистрации.</span><span class="sxs-lookup"><span data-stu-id="15977-118">After instantiating the registration object with this constructor and populating its fields, the application must call <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> to perform the actual registration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15977-119">Параметр <paramref name="name" /> не может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15977-119">The <paramref name="name" /> parameter cannot be <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15977-120">Указанный номер порта меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="15977-120">The specified port number is less than zero.</span></span>  <span data-ttu-id="15977-121">Значения номеров портов должны быть больше или равны нулю и меньше 65 535 (0xFFFF).</span><span class="sxs-lookup"><span data-stu-id="15977-121">Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="15977-122">- Указанный элемент <see cref="T:System.Net.PeerToPeer.PeerName" /> уже зарегистрирован из этого узла.</span><span class="sxs-lookup"><span data-stu-id="15977-122">-   The <see cref="T:System.Net.PeerToPeer.PeerName" /> specified has already been registered from this host.</span></span>  
  
<span data-ttu-id="15977-123">- Удаленный одноранговый узел не является владельцем <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> для предоставленного объекта <see cref="T:System.Net.PeerToPeer.PeerName" />.</span><span class="sxs-lookup"><span data-stu-id="15977-123">-   The remote peer does not own the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> for the supplied <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerNameRegistration (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerNameRegistration(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="15977-124">Ссылка на объект, содержащий данные, необходимые для десериализации экземпляра.</span><span class="sxs-lookup"><span data-stu-id="15977-124">Reference to the object that holds the data needed to deserialize this instance.</span></span></param>
        <param name="context"><span data-ttu-id="15977-125">Контекст, который предоставляет средства для десериализации данных.</span><span class="sxs-lookup"><span data-stu-id="15977-125">Context that provides the means for deserializing the data.</span></span> <span data-ttu-id="15977-126">Также называется источником сериализованных данных.</span><span class="sxs-lookup"><span data-stu-id="15977-126">Also referred to as the source of the serialized data.</span></span></param>
        <summary><span data-ttu-id="15977-127">Инициализирует новый сериализуемый объект <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</span><span class="sxs-lookup"><span data-stu-id="15977-127">Initializes a new serializable <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.Runtime.Serialization" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int * System.Net.PeerToPeer.Cloud -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port, cloud)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="15977-128">Регистрируемый объект <see cref="T:System.Net.PeerToPeer.PeerName" />.</span><span class="sxs-lookup"><span data-stu-id="15977-128">The <see cref="T:System.Net.PeerToPeer.PeerName" /> object to register.</span></span></param>
        <param name="port"><span data-ttu-id="15977-129">Целое число, указывающее номер порта для регистрации.</span><span class="sxs-lookup"><span data-stu-id="15977-129">Integer value that specifies the port number to register.</span></span></param>
        <param name="cloud"><span data-ttu-id="15977-130"><see cref="T:System.Net.PeerToPeer.Cloud" />, в котором необходимо зарегистрировать имя однорангового узла.</span><span class="sxs-lookup"><span data-stu-id="15977-130"><see cref="T:System.Net.PeerToPeer.Cloud" /> in which to register the peer name.</span></span></param>
        <summary><span data-ttu-id="15977-131">Инициализирует новый экземпляр класса <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> с указанным именем однорангового узла, номером порта и значением <see cref="T:System.Net.PeerToPeer.Cloud" />.</span><span class="sxs-lookup"><span data-stu-id="15977-131">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class with the specified peer name, port number, and <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15977-132">При вызове этого конструктора создается экземпляр, который будет использоваться для регистрации всех исходных адресов (IPv6 и IPv4), предоставленного порта и указанного <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</span><span class="sxs-lookup"><span data-stu-id="15977-132">Calling this constructor creates an instance that will be used to register all source addresses (both IPv6 and IPv4), the provided port, and the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</span></span>  <span data-ttu-id="15977-133">Если объект создан успешно, свойства заполняются указанными <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>значениями, <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> и <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</span><span class="sxs-lookup"><span data-stu-id="15977-133">If the object is constructed successfully, the properties are populated with the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>, <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> and <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</span></span>  
  
 <span data-ttu-id="15977-134">Если параметр Cloud имеет `null`значение, имя регистрируется <xref:System.Net.PeerToPeer.Cloud.Available> с помощью ярлыка, который инициализирует значения по умолчанию <xref:System.Net.PeerToPeer.Cloud.Name%2A>для <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, и <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span><span class="sxs-lookup"><span data-stu-id="15977-134">If the cloud parameter is `null`, the name is registered using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="15977-135">После создания экземпляра <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> необходимо вызвать метод, чтобы <xref:System.Net.PeerToPeer.PeerName>зарегистрировать.</span><span class="sxs-lookup"><span data-stu-id="15977-135">After instantiation, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method must be called to register the <xref:System.Net.PeerToPeer.PeerName>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15977-136">Параметр <paramref name="name" /> не может иметь значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15977-136">The <paramref name="name" /> parameter cannot be <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15977-137">Указанный номер порта меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="15977-137">The specified port number is less than zero.</span></span>  <span data-ttu-id="15977-138">Значения номеров портов должны быть больше или равны нулю и меньше 65 535 (0xFFFF).</span><span class="sxs-lookup"><span data-stu-id="15977-138">Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="15977-139">- Указанный элемент <see cref="T:System.Net.PeerToPeer.PeerName" /> уже зарегистрирован из этого узла.</span><span class="sxs-lookup"><span data-stu-id="15977-139">-   The <see cref="T:System.Net.PeerToPeer.PeerName" /> specified has already been registered from this host.</span></span>  
  
<span data-ttu-id="15977-140">- Удаленный одноранговый узел не является владельцем <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> для предоставленного объекта <see cref="T:System.Net.PeerToPeer.PeerName" />.</span><span class="sxs-lookup"><span data-stu-id="15977-140">-   The remote peer does not own the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> for the supplied <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Cloud">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Cloud Cloud { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Cloud Cloud" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberSignature Language="VB.NET" Value="Public Property Cloud As Cloud" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::Cloud ^ Cloud { System::Net::PeerToPeer::Cloud ^ get(); void set(System::Net::PeerToPeer::Cloud ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Cloud : System.Net.PeerToPeer.Cloud with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Cloud</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15977-141">Получает или задает данные свойства <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />, которое определяет облако, где будет регистрироваться данный объект <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" />.</span><span class="sxs-lookup"><span data-stu-id="15977-141">Gets or sets information in a <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> into which this <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> object will be registered.</span></span></summary>
        <value><span data-ttu-id="15977-142">Объект типа <see cref="T:System.Net.PeerToPeer.Cloud" />, который указывает облако однорангового узла, для которого определена регистрация.</span><span class="sxs-lookup"><span data-stu-id="15977-142">An object of type <see cref="T:System.Net.PeerToPeer.Cloud" /> that specifies the peer cloud for which this registration is defined.</span></span> <span data-ttu-id="15977-143">По умолчанию это свойство имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15977-143">This property is set to <see langword="null" /> by default.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public string Comment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberSignature Language="VB.NET" Value="Public Property Comment As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comment { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Comment : string with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15977-144">Получает или задает дополнительные сведения, связанные с объектом <see cref="T:System.Net.PeerToPeer.PeerName" />, который будет регистрироваться в облаке <see cref="T:System.Net.PeerToPeer.Cloud" />.</span><span class="sxs-lookup"><span data-stu-id="15977-144">Gets or sets additional information about the <see cref="T:System.Net.PeerToPeer.PeerName" /> object that will be registered with the <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span></summary>
        <value><span data-ttu-id="15977-145">Комментарий, содержащий дополнительные сведения об имени однорангового узла <see cref="T:System.Net.PeerToPeer.PeerName" />, который требуется связать с облаком <see cref="T:System.Net.PeerToPeer.Cloud" />.</span><span class="sxs-lookup"><span data-stu-id="15977-145">The comment that contains additional information about the <see cref="T:System.Net.PeerToPeer.PeerName" /> to associate with the <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span> <span data-ttu-id="15977-146">По умолчанию это свойство имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15977-146">This property is set to <see langword="null" /> by default.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="15977-147">Указанное строковое значение содержит больше 39 символов Юникода.</span><span class="sxs-lookup"><span data-stu-id="15977-147">The specified string value is greater than 39 Unicode characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public byte[] Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Data" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberSignature Language="VB.NET" Value="Public Property Data As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Data { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Data : byte[] with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15977-148">Получает или задает определяемые приложением двоичные данные для объекта <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</span><span class="sxs-lookup"><span data-stu-id="15977-148">Gets or sets application-defined binary data for the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <value><span data-ttu-id="15977-149">Массив байтов, в котором хранятся двоичные данные, связанные с записью.</span><span class="sxs-lookup"><span data-stu-id="15977-149">An array of bytes that holds the binary data associated with the entry.</span></span> <span data-ttu-id="15977-150">По умолчанию это свойство имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15977-150">This property is set to <see langword="null" /> by default.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15977-151">Максимальный объем <xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A> , который может быть указан, составляет 4 096 байт.</span><span class="sxs-lookup"><span data-stu-id="15977-151">The maximum amount of <xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A> that can be supplied is 4,096 bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15977-152">Размер заданного свойства <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /> превышает 4096 байтов.</span><span class="sxs-lookup"><span data-stu-id="15977-152">The specified <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /> is greater than 4096 bytes.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15977-153">Освобождает ресурсы, используемые объектом <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</span><span class="sxs-lookup"><span data-stu-id="15977-153">Releases the resources used by the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15977-154">Когда одноранговый узел <xref:System.Net.PeerToPeer.Cloud>покидает, в облаке больше <xref:System.Net.PeerToPeer.PeerNameRegistration> не требуется объект, связанный с одноранговым узлом.</span><span class="sxs-lookup"><span data-stu-id="15977-154">When a peer leaves a <xref:System.Net.PeerToPeer.Cloud>, the cloud no longer requires the <xref:System.Net.PeerToPeer.PeerNameRegistration> object associated with the peer.</span></span>  <span data-ttu-id="15977-155">Независимо от того, является ли объект регистрации остановленным или удаленным, зависит от того, будет ли облако повторно использовать объект для регистрации этого однорангового или другого узла.</span><span class="sxs-lookup"><span data-stu-id="15977-155">Whether the registration object is stopped or disposed is dependent upon whether the cloud will reuse the object to register this peer or another peer.</span></span> <span data-ttu-id="15977-156">Если в объекте регистрации имеются другие конечные точки, с которыми должен взаимодействовать одноранговый узел, регистрация этих конечных точек в облаке должна быть выполнена перед остановкой или удалением этого объекта.</span><span class="sxs-lookup"><span data-stu-id="15977-156">If there are any other endpoint(s) within the registration object with which the peer host expected to communicate, registering those endpoints within the cloud must occur before stopping or disposing of this object.</span></span>  
  
 <span data-ttu-id="15977-157">Если облако планирует регистрировать больше одноранговых узлов, <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> рекомендуется использовать метод. когда в облаке больше не требуется память, она должна возвращаться в операционную систему с <xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A> помощью метода.</span><span class="sxs-lookup"><span data-stu-id="15977-157">If the cloud expects to register more peers, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> method is recommended; when the cloud no longer needs the memory, it should be returned to the operating system via the <xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="peerNameRegistration.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15977-158">Освобождает все ресурсы, используемые объектом <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</span><span class="sxs-lookup"><span data-stu-id="15977-158">Releases all resources used by the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="15977-159">Всегда вызывайте метод Dispose перед уничтожением <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> объекта.</span><span class="sxs-lookup"><span data-stu-id="15977-159">Always call the Dispose method before destroying the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="peerNameRegistration.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="15977-160">Значение <see langword="true" /> позволяет освободить управляемые и неуправляемые ресурсы; значение <see langword="false" /> позволяет освободить только неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="15977-160"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="15977-161">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> (при необходимости освобождает и управляемые ресурсы).</span><span class="sxs-lookup"><span data-stu-id="15977-161">Releases the unmanaged resources and optionally releases the managed resources used by the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="15977-162">Всегда вызывайте метод Dispose перед тем, как освободить последнюю ссылку на <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> объект.</span><span class="sxs-lookup"><span data-stu-id="15977-162">Always call the Dispose method before releasing the last reference to the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndPointCollection">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPointCollection EndPointCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPointCollection EndPointCollection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndPointCollection As IPEndPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPointCollection ^ EndPointCollection { System::Net::IPEndPointCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndPointCollection : System.Net.IPEndPointCollection" Usage="System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15977-163">Возвращает коллекцию конечных точек сети, для которых регистрируется связанное имя однорангового узла.</span><span class="sxs-lookup"><span data-stu-id="15977-163">Gets the collection of network endpoints for which the associated peer name is registered.</span></span></summary>
        <value><span data-ttu-id="15977-164">Объект <see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" />, содержащий конечные точки сети, для которых регистрируется связанное имя однорангового узла.</span><span class="sxs-lookup"><span data-stu-id="15977-164">An <see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /> object that contains the network endpoints for which the associated peer name is registered.</span></span> <span data-ttu-id="15977-165">Если явно не задано иное, значением всех свойств ссылочных типов по умолчанию является <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15977-165">Unless explicitly specified, the default value for all properties is <see langword="null" /> for reference types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15977-166">В пространстве имен <xref:System.Net.IPEndPoint> компонент представляет конечную точку сети в виде IP-адреса и номера порта. <xref:System.Net></span><span class="sxs-lookup"><span data-stu-id="15977-166">In the <xref:System.Net> namespace, an <xref:System.Net.IPEndPoint> represents a network endpoint as an IP address and a port number.</span></span>  <span data-ttu-id="15977-167">Для протокола PNRP для каждой конечной точки необходимо указать IP-адрес и значение порта.</span><span class="sxs-lookup"><span data-stu-id="15977-167">For PNRP, an IP address and port value must be provided for each endpoint.</span></span>  <span data-ttu-id="15977-168">Максимальное число конечных точек, которое можно указать, равно десяти.</span><span class="sxs-lookup"><span data-stu-id="15977-168">The maximum number of endpoints that can be provided is ten.</span></span> <span data-ttu-id="15977-169">Если этот параметр имеет значение `null`, используется автоматический выбор адресов.</span><span class="sxs-lookup"><span data-stu-id="15977-169">Automatic address selection is used when this parameter is `null`.</span></span>  
  
 <span data-ttu-id="15977-170">Если используется метод регистрации, который автоматически выбирает адреса для регистрации, метод определения адресов, для которых было зарегистрировано одноранговое имя, отсутствует.</span><span class="sxs-lookup"><span data-stu-id="15977-170">If a registration method is used that automatically selects the addresses to register, there is no method to determine the addresses for which the peer name was registered.</span></span>  <span data-ttu-id="15977-171">Это значит, <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> что свойство не будет обновлено для отражения выбранных адресов.</span><span class="sxs-lookup"><span data-stu-id="15977-171">That is, the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property will not be updated to reflect the addresses selected.</span></span>  
  
 <span data-ttu-id="15977-172">Если имя однорангового узла зарегистрировано для нескольких узлов, каждое <xref:System.Net.PeerToPeer.PeerNameRegistration> из них является отдельным <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> , а свойство, определенное для каждого экземпляра регистрации, будет отличаться.</span><span class="sxs-lookup"><span data-stu-id="15977-172">When a peer name is registered for more than one node, each <xref:System.Net.PeerToPeer.PeerNameRegistration> is distinct and the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property defined on each registration instance will be different.</span></span> <span data-ttu-id="15977-173">Кроме того, если <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> объект зарегистрирован в нескольких единицах <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>, каждая регистрация является отдельной, а коллекция конечных точек обычно будет отличаться для каждого экземпляра.</span><span class="sxs-lookup"><span data-stu-id="15977-173">Also, when a <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> is registered into more than one <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>, each registration is distinct and the collection of endpoints will usually be different for each instance.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="15977-174">Список конечных точек, с которыми будет обмениваться данными этот одноранговый узел, не совпадает со списком конечных точек, по которым известно это одноранговое имя, которое хранится по-другому.</span><span class="sxs-lookup"><span data-stu-id="15977-174">The list of endpoints with which this peer will communicate is not the same as the list of endpoints by which this peer name is known, which is stored differently.</span></span></para></block>
        <altmember cref="T:System.Net.IPEndPointCollection" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerNameRegistration.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="15977-175">Содержит сериализуемые данные, связанные с объектом <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</span><span class="sxs-lookup"><span data-stu-id="15977-175">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></param>
        <param name="context"><span data-ttu-id="15977-176">Содержит назначение сериализованного потока, связанного с объектом <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</span><span class="sxs-lookup"><span data-stu-id="15977-176">Contains destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></param>
        <summary><span data-ttu-id="15977-177">Заполняет объект сведений о сериализации данными, необходимыми для сериализации экземпляра <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</span><span class="sxs-lookup"><span data-stu-id="15977-177">Populates a serialization information object with the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRegistered">
      <MemberSignature Language="C#" Value="public bool IsRegistered ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsRegistered() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered" />
      <MemberSignature Language="VB.NET" Value="Public Function IsRegistered () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsRegistered();" />
      <MemberSignature Language="F#" Value="member this.IsRegistered : unit -&gt; bool" Usage="peerNameRegistration.IsRegistered " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15977-178">Получает или задает значение, которое указывает, зарегистрировано ли имя однорангового узла, заданное свойством <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />, в конкретном облаке <see cref="T:System.Net.PeerToPeer.Cloud" /> на ведущем узле.</span><span class="sxs-lookup"><span data-stu-id="15977-178">Gets or sets whether the peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is registered with a specific <see cref="T:System.Net.PeerToPeer.Cloud" /> on a host.</span></span></summary>
        <returns><span data-ttu-id="15977-179">Если значение равно <see langword="true" />, то имя однорангового узла зарегистрировано в облаке <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> для ведущего узла одноранговой сети.</span><span class="sxs-lookup"><span data-stu-id="15977-179">If <see langword="true" />, the peer name is registered with a <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> for the peer host.</span></span> <span data-ttu-id="15977-180">Если значение равно <see langword="false" />, то можно запустить процесс регистрации с помощью метода <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</span><span class="sxs-lookup"><span data-stu-id="15977-180">If <see langword="false" />, then the registration process can be started with <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="15977-181">Объект, который уже был удален, зарегистрировать нельзя.</span><span class="sxs-lookup"><span data-stu-id="15977-181">An object that has been disposed already cannot be registered.</span></span></exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameResolver" />
      </Docs>
    </Member>
    <Member MemberName="PeerName">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerName PeerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerName PeerName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberSignature Language="VB.NET" Value="Public Property PeerName As PeerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerName ^ PeerName { System::Net::PeerToPeer::PeerName ^ get(); void set(System::Net::PeerToPeer::PeerName ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PeerName : System.Net.PeerToPeer.PeerName with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15977-182">Получает или задает имя однорангового узла, регистрируемое в облаке одноранговых узелов.</span><span class="sxs-lookup"><span data-stu-id="15977-182">Gets or sets the peer name to register with a peer cloud.</span></span></summary>
        <value><span data-ttu-id="15977-183">Объект типа <see cref="T:System.Net.PeerToPeer.PeerName" />, содержащий значения, связанные с данным объектом <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</span><span class="sxs-lookup"><span data-stu-id="15977-183">An object of type <see cref="T:System.Net.PeerToPeer.PeerName" /> that contains values associated with this <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span> <span data-ttu-id="15977-184">Если явно не задано иное, значением всех свойств ссылочных типов по умолчанию является <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15977-184">Unless explicitly specified, the default value for all properties is <see langword="null" /> for reference types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15977-185">Имя однорангового узла можно зарегистрировать для нескольких узлов. Каждый <xref:System.Net.PeerToPeer.PeerNameRegistration> экземпляр является отдельным.</span><span class="sxs-lookup"><span data-stu-id="15977-185">A peer name can be registered for more than one node; each <xref:System.Net.PeerToPeer.PeerNameRegistration> instance is distinct.</span></span> <span data-ttu-id="15977-186">Свойство <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> , связанное с каждым <xref:System.Net.PeerToPeer.PeerName> соответствующим экземпляром, отличается.</span><span class="sxs-lookup"><span data-stu-id="15977-186">The <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property associated with each corresponding <xref:System.Net.PeerToPeer.PeerName> instance is different.</span></span> <span data-ttu-id="15977-187">Кроме того, можно зарегистрировать имя однорангового узла для нескольких облаков, к которым подключен узел; Каждая из этих регистраций является отдельной.</span><span class="sxs-lookup"><span data-stu-id="15977-187">Also, it is possible to register a peer name for more than one cloud that the node is connected to; each of these registrations is distinct.</span></span> <span data-ttu-id="15977-188">Имя однорангового <xref:System.Net.IPEndPointCollection> узла будет отличаться в каждом из этих экземпляров.</span><span class="sxs-lookup"><span data-stu-id="15977-188">The peer name's <xref:System.Net.IPEndPointCollection> will be different in each of these instances.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15977-189">Возвращает или задает номер порта [протокола TCP/IP](https://go.microsoft.com/fwlink?LinkID=98458), который используется одноранговым узелом, регистрируемым в объекте <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</span><span class="sxs-lookup"><span data-stu-id="15977-189">Gets or sets the [TCP/IP](https://go.microsoft.com/fwlink?LinkID=98458) port number used by the peer being registered into the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <value><span data-ttu-id="15977-190">Целое число, указывающее номер TCP-порта для конечной точки <see cref="T:System.Net.IPEndPoint" />.</span><span class="sxs-lookup"><span data-stu-id="15977-190">An integer value indicating the TCP port number of the <see cref="T:System.Net.IPEndPoint" />.</span></span> <span data-ttu-id="15977-191">Если значение не задано явно, свойство имеет значение по умолчанию — нуль (0).</span><span class="sxs-lookup"><span data-stu-id="15977-191">Unless explicitly specified, the default value for this property is zero (0).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15977-192">Порт по умолчанию используется <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> методом только в том случае, если не указаны конечные точки.</span><span class="sxs-lookup"><span data-stu-id="15977-192">The default port is used by the <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method only when no endpoints are specified.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="15977-193">Заданное значение номера порта меньше нуля.</span><span class="sxs-lookup"><span data-stu-id="15977-193">The specified port value is less than zero.</span></span>  <span data-ttu-id="15977-194">Значения номеров портов должны быть больше или равны нулю и меньше 65 535 (0xFFFF).</span><span class="sxs-lookup"><span data-stu-id="15977-194">Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="peerNameRegistration.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15977-195">Регистрирует <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> в объекте <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />.</span><span class="sxs-lookup"><span data-stu-id="15977-195">Registers the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> into the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />.</span></span> <span data-ttu-id="15977-196">Если параметр <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /> не указан, автоматический выбор адресов используется со значением порта, указанным в свойстве <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />.</span><span class="sxs-lookup"><span data-stu-id="15977-196">If no <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /> is specified, automatic address selection is used with the port value specified by the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15977-197">Метод регистрирует имя однорангового узла, указанное <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> в свойстве, со всеми исходными адресами <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> и указанным в конструкторе.</span><span class="sxs-lookup"><span data-stu-id="15977-197">The method registers the peer name specified in the <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> property with all source addresses and the <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> specified in the constructor.</span></span> <span data-ttu-id="15977-198">Порт по умолчанию используется этим методом только в том случае, если не указаны конечные точки.</span><span class="sxs-lookup"><span data-stu-id="15977-198">The default port is used by this method only when no endpoints are specified.</span></span>  
  
 <span data-ttu-id="15977-199"><xref:System.Net.PeerToPeer.Cloud.Available> <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> <xref:System.Net.PeerToPeer.Cloud.Name%2A> <xref:System.Net.PeerToPeer.Cloud.Scope%2A>Если свойство имеет `null`значение, этот метод регистрирует имя однорангового узла, указанное в свойстве, с помощью поля, которое инициализирует значения по умолчанию для, и <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span><span class="sxs-lookup"><span data-stu-id="15977-199">If the <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> property is `null`, this method registers the peer name specified in the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property using the <xref:System.Net.PeerToPeer.Cloud.Available> field, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="15977-200">После запуска <xref:System.Net.PeerToPeer.PeerNameRegistration> <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> объекта метод используется для его отмены.</span><span class="sxs-lookup"><span data-stu-id="15977-200">After a <xref:System.Net.PeerToPeer.PeerNameRegistration> object has been started, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> method is used to stop it.</span></span>  
  
 <span data-ttu-id="15977-201">Чтобы обновить регистрацию, <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A> необходимо использовать метод.</span><span class="sxs-lookup"><span data-stu-id="15977-201">To update a registration, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A> method must be used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="15977-202">В следующем примере кода создается <xref:System.Net.PeerToPeer.PeerName> и регистрируется вместе с указанными метаданными.</span><span class="sxs-lookup"><span data-stu-id="15977-202">The following code example creates a <xref:System.Net.PeerToPeer.PeerName> and registers it along with the metadata specified.</span></span>  
  
 [!code-csharp[NCLPNRPRegisterPeerName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPRegisterPeerName/CS/RegisterPeerName.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15977-203">Свойству <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> задано значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15977-203">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="15977-204">Для этого объекта ранее вызывался метод Dispose().</span><span class="sxs-lookup"><span data-stu-id="15977-204">This object had Dispose() called on it previously.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="15977-205">- Указанный элемент <see cref="T:System.Net.PeerToPeer.PeerName" /> уже зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="15977-205">-   The <see cref="T:System.Net.PeerToPeer.PeerName" /> specified has already been registered.</span></span> <span data-ttu-id="15977-206">Чтобы обновить регистрацию, необходимо использовать метод <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />.</span><span class="sxs-lookup"><span data-stu-id="15977-206">The <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> method must be used to update a registration.</span></span>  
  
<span data-ttu-id="15977-207">- Удаленный одноранговый узел не является владельцем <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> для указанного узла <see cref="T:System.Net.PeerToPeer.PeerName" />.</span><span class="sxs-lookup"><span data-stu-id="15977-207">-   The remote peer does not own the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> for the <see cref="T:System.Net.PeerToPeer.PeerName" /> specified.</span></span>  
  
<span data-ttu-id="15977-208">- Один из параметров (<see cref="T:System.Net.PeerToPeer.PeerName" /> или <see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" />) не указан. Необходимо указать по крайней мере один из них.</span><span class="sxs-lookup"><span data-stu-id="15977-208">-   Either the <see cref="T:System.Net.PeerToPeer.PeerName" /> or the <see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /> is not specified; at least one needs to be provided.</span></span>  
  
<span data-ttu-id="15977-209">- Сообщение или элементы данных являются недопустимыми.</span><span class="sxs-lookup"><span data-stu-id="15977-209">-   The message or data elements are invalid.</span></span> <span data-ttu-id="15977-210">Параметр <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /> не задан, и большой двоичный объект данных или <see cref="T:System.Net.IPEndPoint" /> не указан.</span><span class="sxs-lookup"><span data-stu-id="15977-210">Or, <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /> is not set and no data blob or <see cref="T:System.Net.IPEndPoint" /> is specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="peerNameRegistration.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15977-211">Отменяет регистрацию имени однорангового узла в свойстве <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> из всех облаков, в которых выполнена регистрация.</span><span class="sxs-lookup"><span data-stu-id="15977-211">Unregisters the peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property from all the clouds in which it was registered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15977-212">После остановки процесса регистрации состояние объекта регистрации равно состоянию непосредственно после создания конструктором без параметров.</span><span class="sxs-lookup"><span data-stu-id="15977-212">After the registration process has been stopped, the registration object's state is equal to the state directly after being constructed by the parameterless constructor.</span></span> <span data-ttu-id="15977-213">В этом состоянии предполагается, что все его свойства не имеют значения.</span><span class="sxs-lookup"><span data-stu-id="15977-213">In this state, all of its properties are assumed to have no value.</span></span> <span data-ttu-id="15977-214"><xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> Метод можно использовать для его перезапуска.</span><span class="sxs-lookup"><span data-stu-id="15977-214">The <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method may be used to restart it.</span></span>  
  
 <span data-ttu-id="15977-215">Возможно наличие нескольких объектов регистрации для одного и того же имени однорангового узла.</span><span class="sxs-lookup"><span data-stu-id="15977-215">It is possible to have multiple registration objects for the same peer name.</span></span>  <span data-ttu-id="15977-216">В таком случае, если имя однорангового узла защищено, каждый экземпляр будет представлять регистрацию в другом облаке PNRP.</span><span class="sxs-lookup"><span data-stu-id="15977-216">In such a case, if the peer name is secured, each instance will represent a registration in a different PNRP cloud.</span></span>  <span data-ttu-id="15977-217">Однако если имя однорангового узла не защищено, оно может быть зарегистрировано в одном и том же облаке несколько раз.</span><span class="sxs-lookup"><span data-stu-id="15977-217">However, if the peer name is not secured, it can be registered in the same cloud multiple times.</span></span>  
  
 <span data-ttu-id="15977-218">Если этот экземпляр уже остановлен, вызов этого метода не оказывает никакого влияния.</span><span class="sxs-lookup"><span data-stu-id="15977-218">If this instance is already stopped, calling this method has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="15977-219">Свойство <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> еще не зарегистрировано.</span><span class="sxs-lookup"><span data-stu-id="15977-219">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property has not yet been registered.</span></span> <span data-ttu-id="15977-220">Это происходит, когда объект <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> создается с помощью пустого конструктора.</span><span class="sxs-lookup"><span data-stu-id="15977-220">This occurs when a <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object is constructed using the empty constructor.</span></span> <span data-ttu-id="15977-221">Свойство <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> должно быть заполнено в этом экземпляре до вызова <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</span><span class="sxs-lookup"><span data-stu-id="15977-221">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property must be populated in this instance prior to calling <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="15977-222">Для этого объекта ранее вызывался метод Dispose().</span><span class="sxs-lookup"><span data-stu-id="15977-222">This object had Dispose() called on it previously.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="15977-223">Содержит сериализуемые данные, связанные с экземпляром <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</span><span class="sxs-lookup"><span data-stu-id="15977-223">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span></span></param>
        <param name="context"><span data-ttu-id="15977-224">Содержит назначение сериализованного потока, связанного с экземпляром <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</span><span class="sxs-lookup"><span data-stu-id="15977-224">Contains the destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span></span></param>
        <summary><span data-ttu-id="15977-225">Реализует интерфейс <see cref="T:System.Runtime.Serialization.ISerializable" /> и возвращает данные, необходимые для сериализации экземпляра <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</span><span class="sxs-lookup"><span data-stu-id="15977-225">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; unit" Usage="peerNameRegistration.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="15977-226">Обновляет <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> для узла, зарегистрированного в определенном объекте <see cref="T:System.Net.PeerToPeer.Cloud" />.</span><span class="sxs-lookup"><span data-stu-id="15977-226">Updates the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> for a node registered with a specific <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span> <span data-ttu-id="15977-227">Обновление выполняется на основе сведений, указанных в свойствах.</span><span class="sxs-lookup"><span data-stu-id="15977-227">Update is performed using the information specified in the properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15977-228">Все сведения, зарегистрированные в облаке для этого <xref:System.Net.PeerToPeer.PeerName> до вызова, полностью отбрасываются.</span><span class="sxs-lookup"><span data-stu-id="15977-228">All information registered in cloud(s) for this <xref:System.Net.PeerToPeer.PeerName> prior to the call is completely discarded.</span></span>  <span data-ttu-id="15977-229">Новые данные не объединяются с существующей регистрацией.</span><span class="sxs-lookup"><span data-stu-id="15977-229">The new data is not combined with the existing registration.</span></span>  <span data-ttu-id="15977-230">Чтобы обновить <xref:System.Net.PeerToPeer.PeerNameRegistration>, сначала обновите свойства этого экземпляра, а затем вызовите этот метод.</span><span class="sxs-lookup"><span data-stu-id="15977-230">To update a <xref:System.Net.PeerToPeer.PeerNameRegistration>, first update the properties on this instance and then call this method.</span></span>  
  
 <span data-ttu-id="15977-231"><xref:System.Net.PeerToPeer.PeerNameRecord> После регистрации <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A>  свойство не может быть обновлено.</span><span class="sxs-lookup"><span data-stu-id="15977-231">After a <xref:System.Net.PeerToPeer.PeerNameRecord> is registered, the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property cannot be updated.</span></span>  <span data-ttu-id="15977-232">Все остальные поля в записи могут быть обновлены.</span><span class="sxs-lookup"><span data-stu-id="15977-232">All other fields in the record may be updated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="15977-233">Свойству <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> задано значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15977-233">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="15977-234">- Свойство <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> еще не зарегистрировано.</span><span class="sxs-lookup"><span data-stu-id="15977-234">-   The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property has not yet been registered.</span></span> <span data-ttu-id="15977-235">Нельзя вызывать метод <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />, пока имя однорангового узла, указанное в свойстве <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />, зарегистрировано в одном или нескольких облаках.</span><span class="sxs-lookup"><span data-stu-id="15977-235">The <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> method cannot be called until the peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is registered in one or more clouds.</span></span>  
  
<span data-ttu-id="15977-236">- Имя однорангового узла, указанное в свойстве <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />, изменилось со времени регистрации соответствующего элемента <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />.</span><span class="sxs-lookup"><span data-stu-id="15977-236">-   The peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property has changed since the corresponding <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> was registered.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="15977-237">Невозможно зарегистрировать удаленный объект.</span><span class="sxs-lookup"><span data-stu-id="15977-237">An object that has been disposed cannot be registered.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="15977-238">Для свойства <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> задано значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="15977-238">A <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> property is set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UseAutoEndPointSelection">
      <MemberSignature Language="C#" Value="public bool UseAutoEndPointSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAutoEndPointSelection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAutoEndPointSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAutoEndPointSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseAutoEndPointSelection : bool with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="15977-239">Получает или задает значение, указывающее, требуется ли использовать автоматический выбор конечных точек при обходе сетки одноранговых узелов или облака <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />.</span><span class="sxs-lookup"><span data-stu-id="15977-239">Gets or sets a value that specifies whether to use automatic endpoint selection when traversing a peer mesh or <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />.</span></span></summary>
        <value><span data-ttu-id="15977-240"><see langword="true" />, если требуется использовать автоматический выбор конечных точек; <see langword="false" />, если для определения конечных точек используется другой метод.</span><span class="sxs-lookup"><span data-stu-id="15977-240"><see langword="true" /> if automatic endpoint selection is to be used; <see langword="false" /> if some other method will be used to determine an endpoint.</span></span> <span data-ttu-id="15977-241">Значение по умолчанию — <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="15977-241">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="15977-242">Если используется автоматический выбор конечных точек (для `true`этого свойства задано значение) без указания сведений о конечной точке до начала <xref:System.Net.PeerToPeer.PeerNameRegistration>, система выбирает отдельные конечные точки и публикует их вместе с соответствующим именем однорангового узла во всех доступных облака.</span><span class="sxs-lookup"><span data-stu-id="15977-242">When auto endpoint selection is used (this property is set to `true`) with no endpoint information specified prior to the start of a <xref:System.Net.PeerToPeer.PeerNameRegistration>, the system chooses individual endpoints and publishes them with the associated peer name into all available clouds.</span></span>  <span data-ttu-id="15977-243">Если порт не указан, автоматический выбор в качестве значения <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>выбирает нуль.</span><span class="sxs-lookup"><span data-stu-id="15977-243">If the port is not specified, auto selection chooses zero as the <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>.</span></span>  
  
 <span data-ttu-id="15977-244">Если задано `false`значение, автоматическое выделение, как описано выше, не выполняется.</span><span class="sxs-lookup"><span data-stu-id="15977-244">When set to `false`, auto selection as described above is not performed.</span></span>  <span data-ttu-id="15977-245">Это позволяет процессу регистрации опубликовать имя однорангового узла вместе с BLOB-объектом данных (как указано в <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> свойстве).</span><span class="sxs-lookup"><span data-stu-id="15977-245">This enables the registration process to publish a peer name along with a data blob (as specified by the <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> property).</span></span> <span data-ttu-id="15977-246">С именем не связаны конечные точки.</span><span class="sxs-lookup"><span data-stu-id="15977-246">No endpoints are associated with the name.</span></span>  
  
 <span data-ttu-id="15977-247">Если используется метод регистрации, который автоматически выбирает адреса для регистрации, то не существует метода для определения адресов, для которых <xref:System.Net.PeerToPeer.PeerName> был зарегистрирован объект.</span><span class="sxs-lookup"><span data-stu-id="15977-247">If a registration method is used that automatically selects the addresses to register, there is no method to determine what addresses for which the <xref:System.Net.PeerToPeer.PeerName> object was registered.</span></span>  <span data-ttu-id="15977-248">Это значит, <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> что свойство не будет обновлено для отражения выбранных адресов.</span><span class="sxs-lookup"><span data-stu-id="15977-248">That is, the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property will not be updated to reflect the addresses selected.</span></span>  
  
 <span data-ttu-id="15977-249">Обновление этого свойства после начала регистрации имени однорангового узла не оказывает никакого воздействия.</span><span class="sxs-lookup"><span data-stu-id="15977-249">Updating this property after peer name registration has started has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
