<Type Name="MemberInfoExtensions" FullName="System.Reflection.MemberInfoExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="762d12b6ee6b9502f2c49abb0387b40e9752ba5e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69276243" /></Metadata><TypeSignature Language="C#" Value="public static class MemberInfoExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MemberInfoExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.MemberInfoExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module MemberInfoExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemberInfoExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type MemberInfoExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetMetadataToken">
      <MemberSignature Language="C#" Value="public static int GetMetadataToken (this System.Reflection.MemberInfo member);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetMetadataToken(class System.Reflection.MemberInfo member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MemberInfoExtensions.GetMetadataToken(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMetadataToken (member As MemberInfo) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int GetMetadataToken(System::Reflection::MemberInfo ^ member);" />
      <MemberSignature Language="F#" Value="static member GetMetadataToken : System.Reflection.MemberInfo -&gt; int" Usage="System.Reflection.MemberInfoExtensions.GetMetadataToken member" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" RefType="this" />
      </Parameters>
      <Docs>
        <param name="member">Элемент, из которого извлекается маркер, в виде reftype.</param>
        <summary>Возвращает маркер метаданных для заданного элемента, если он доступен.</summary>
        <returns>Целое число, представляющее маркер метаданных. Возвращенный токен никогда не равен nil. Если недоступен, выдается исключение.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

Этот метод создает исключение, если маркер метаданных недоступен для указанного элемента. Чтобы определить, <xref:System.Reflection.MemberInfoExtensions.HasMetadataToken%2A> доступен ли маркер метаданных, перед вызовом этого метода можно вызвать метод.
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Маркер метаданных недоступен.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasMetadataToken">
      <MemberSignature Language="C#" Value="public static bool HasMetadataToken (this System.Reflection.MemberInfo member);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasMetadataToken(class System.Reflection.MemberInfo member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MemberInfoExtensions.HasMetadataToken(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasMetadataToken (member As MemberInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool HasMetadataToken(System::Reflection::MemberInfo ^ member);" />
      <MemberSignature Language="F#" Value="static member HasMetadataToken : System.Reflection.MemberInfo -&gt; bool" Usage="System.Reflection.MemberInfoExtensions.HasMetadataToken member" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" RefType="this" />
      </Parameters>
      <Docs>
        <param name="member">Анализируемый элемент в виде reftype.</param>
        <summary>Возвращает значение, указывающее, доступен ли маркер метаданных для указанного элемента.</summary>
        <returns>Значение <see langword="true" />, если для данного элемента доступен маркер метаданных; в противном случае —значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<xref:System.Reflection.MemberInfoExtensions.GetMetadataToken%2A>создает исключение, если маркер метаданных недоступен для указанного элемента. Поэтому используйте этот метод, чтобы определить, доступен ли маркер метаданных перед вызовом метода <xref:System.Reflection.MemberInfoExtensions.GetMetadataToken%2A>. 
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
