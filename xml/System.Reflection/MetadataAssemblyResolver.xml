<Type Name="MetadataAssemblyResolver" FullName="System.Reflection.MetadataAssemblyResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="14ba347ba4a880965bed6d0c890fa4a6a87610d6" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75096186" /></Metadata><TypeSignature Language="C#" Value="public abstract class MetadataAssemblyResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetadataAssemblyResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.MetadataAssemblyResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetadataAssemblyResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataAssemblyResolver abstract" />
  <TypeSignature Language="F#" Value="type MetadataAssemblyResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.MetadataLoadContext</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет базовый класс для алгоритмов привязки, используемых <see cref="T:System.Reflection.MetadataLoadContext" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MetadataAssemblyResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MetadataAssemblyResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MetadataAssemblyResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.MetadataLoadContext</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует экземпляр <see cref="T:System.Reflection.MetadataAssemblyResolver" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.Assembly Resolve (System.Reflection.MetadataLoadContext context, System.Reflection.AssemblyName assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly Resolve(class System.Reflection.MetadataLoadContext context, class System.Reflection.AssemblyName assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MetadataAssemblyResolver.Resolve(System.Reflection.MetadataLoadContext,System.Reflection.AssemblyName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::Assembly ^ Resolve(System::Reflection::MetadataLoadContext ^ context, System::Reflection::AssemblyName ^ assemblyName);" />
      <MemberSignature Language="F#" Value="abstract member Resolve : System.Reflection.MetadataLoadContext * System.Reflection.AssemblyName -&gt; System.Reflection.Assembly" Usage="metadataAssemblyResolver.Resolve (context, assemblyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.MetadataLoadContext</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Reflection.MetadataLoadContext" />
        <Parameter Name="assemblyName" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="context">Объект контекста загрузки метаданных, представляющий замкнутую совокупность объектов <see cref="T:System.Type" />, загруженных только для проверки.</param>
        <param name="assemblyName">Имя сборки.</param>
        <summary>Возвращает сборку из заданного имени сборки.</summary>
        <returns>Сборка для предоставленного значения <paramref name="assemblyName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Привязка имени сборки к сборке происходит, когда вызывается <xref:System.Reflection.MetadataLoadContext.LoadFromAssemblyName%2A> или если тип из одной сборки имеет зависимость от другой сборки. Обработчик, переопределяющий `Resolve`, должен использовать <xref:System.Reflection.MetadataLoadContext.LoadFromStream%2A?displayProperty=nameWithType>, <xref:System.Reflection.MetadataLoadContext.LoadFromAssemblyPath%2A?displayProperty=nameWithType> или <xref:System.Reflection.MetadataLoadContext.LoadFromByteArray%2A?displayProperty=nameWithType>, чтобы загрузить запрашиваемую сборку и вернуть ее.

Чтобы указать, что не удалось найти сборку, обработчик должен возвращать `null`, а не создавать исключение. Возврат `null` фиксирует сбой, чтобы будущие попытки загрузить это имя завершились ошибкой без повторного вызова обработчика.

Если обработчик создает исключение, исключение передается в приложение, вызвавшее операцию, вызвавшую привязку. <xref:System.Reflection.MetadataLoadContext> не будет перехватывать его, и привязка не будет выполнена.

Как правило, обработчик не вызывается более одного раза для одного и того же имени, если только два потока не загружают одну и ту же сборку. Даже в этом случае один результат будет выдаваться и атомарным образом привязан к имени.

<xref:System.Reflection.MetadataLoadContext> намеренно не выполняет совпадение ref-DEF на возвращаемой сборке, так как то, что составляет сопоставление ref-DEF, является политикой. Это также разновидность произвольного ограничения, которую <xref:System.Reflection.MetadataLoadContext> стремится избегать.

<xref:System.Reflection.MetadataLoadContext> не может использовать сборки из других контекстов загрузки метаданных или других поставщиков типов (таких как собственная система отражения базовой среды выполнения). Если обработчик возвращает такую сборку, <xref:System.Reflection.MetadataLoadContext> создает исключение <xref:System.IO.FileLoadException>.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
