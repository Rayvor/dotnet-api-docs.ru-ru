<Type Name="CustomAttributeTypedArgument" FullName="System.Reflection.CustomAttributeTypedArgument">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2cfa56ce37e1d8dfd6a9e06be63f981ef3effee8" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69353299" /></Metadata><TypeSignature Language="C#" Value="public struct CustomAttributeTypedArgument" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit CustomAttributeTypedArgument extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeTypedArgument" />
  <TypeSignature Language="VB.NET" Value="Public Structure CustomAttributeTypedArgument" />
  <TypeSignature Language="C++ CLI" Value="public value class CustomAttributeTypedArgument" />
  <TypeSignature Language="F#" Value="type CustomAttributeTypedArgument = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8f829-101">Представляет аргумент пользовательского атрибута в контексте, предназначенном только для отражения, или элемент аргумента-массива.</span><span class="sxs-lookup"><span data-stu-id="8f829-101">Represents an argument of a custom attribute in the reflection-only context, or an element of an array argument.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f829-102">Код, который проверяется в контексте, предназначенном только для отражения, не может быть выполнен, поэтому не всегда можно исследовать пользовательские атрибуты, создавая их экземпляры, а затем изучая их свойства, используя такие <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>методы <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, как, и т. д. .</span><span class="sxs-lookup"><span data-stu-id="8f829-102">Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, and so on.</span></span> <span data-ttu-id="8f829-103">Если код самого типа атрибута загружается в контекст, предназначенный только для отражения, он не может быть выполнен.</span><span class="sxs-lookup"><span data-stu-id="8f829-103">If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</span></span>  
  
 <span data-ttu-id="8f829-104"><xref:System.Reflection.CustomAttributeNamedArgument> Структура используется<xref:System.Reflection.CustomAttributeData> классом для предоставления доступа к типу и значению позиционированного аргумента, указанного для экземпляра настраиваемого атрибута, без выполнения конструктора атрибута.</span><span class="sxs-lookup"><span data-stu-id="8f829-104">The <xref:System.Reflection.CustomAttributeNamedArgument> structure is used by the <xref:System.Reflection.CustomAttributeData> class to provide access to the type and value of a positional argument specified for a custom attribute instance, without executing the attribute constructor.</span></span> <span data-ttu-id="8f829-105">Он также предоставляет доступ к типу и значению именованного аргумента, не выполняя код соответствующего свойства пользовательского типа атрибута.</span><span class="sxs-lookup"><span data-stu-id="8f829-105">It also provides access to the type and value of a named argument without executing the code of the corresponding property of the custom attribute type.</span></span>  
  
 <span data-ttu-id="8f829-106">Типы и значения всех позиционированных и именованных аргументов экземпляра атрибута предоставляются <xref:System.Reflection.CustomAttributeTypedArgument> структурами.</span><span class="sxs-lookup"><span data-stu-id="8f829-106">The types and values of all the positional and named arguments of an attribute instance are provided by <xref:System.Reflection.CustomAttributeTypedArgument> structures.</span></span> <span data-ttu-id="8f829-107">Атрибуты позиционирования, <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A?displayProperty=nameWithType> возвращаемые свойством, непосредственно <xref:System.Reflection.CustomAttributeTypedArgument> представлены структурами, но <xref:System.Reflection.CustomAttributeData.NamedArguments%2A?displayProperty=nameWithType> именованные аргументы, возвращаемые свойством, представлены <xref:System.Reflection.CustomAttributeNamedArgument> структурами; для получения <xref:System.Reflection.CustomAttributeTypedArgument> Structure для именованного аргумента используйте <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="8f829-107">The positional attributes returned by the <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A?displayProperty=nameWithType> property are directly represented by <xref:System.Reflection.CustomAttributeTypedArgument> structures, but the named arguments returned by the <xref:System.Reflection.CustomAttributeData.NamedArguments%2A?displayProperty=nameWithType> property are represented by <xref:System.Reflection.CustomAttributeNamedArgument> structures; to get the <xref:System.Reflection.CustomAttributeTypedArgument> structure for a named argument, use the <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="8f829-108">Если аргумент <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> является массивом значений, свойство <xref:System.Reflection.CustomAttributeTypedArgument> объекта, представляющего <xref:System.Reflection.CustomAttributeTypedArgument> аргумент, возвращает универсальный <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> объект объектов.</span><span class="sxs-lookup"><span data-stu-id="8f829-108">If an argument is an array of values, the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property of the <xref:System.Reflection.CustomAttributeTypedArgument> that represents the argument returns a generic <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Reflection.CustomAttributeTypedArgument> objects.</span></span> <span data-ttu-id="8f829-109">Каждый <xref:System.Reflection.CustomAttributeTypedArgument> объект в коллекции представляет соответствующий элемент массива.</span><span class="sxs-lookup"><span data-stu-id="8f829-109">Each <xref:System.Reflection.CustomAttributeTypedArgument> object in the collection represents the corresponding element of the array.</span></span>  
  
 <span data-ttu-id="8f829-110">Чтобы создать экземпляры <xref:System.Reflection.CustomAttributeData> класса, `static` <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> используйте метод Factory.</span><span class="sxs-lookup"><span data-stu-id="8f829-110">To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static`<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f829-111">В следующем примере определяется пользовательский атрибут с четырьмя конструкторами и четырьмя свойствами.</span><span class="sxs-lookup"><span data-stu-id="8f829-111">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="8f829-112">Два свойства доступны только для чтения и задаются с помощью позиционированных параметров конструкторов.</span><span class="sxs-lookup"><span data-stu-id="8f829-112">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="8f829-113">Другие два свойства доступны для чтения и записи и могут быть заданы только с помощью именованных аргументов.</span><span class="sxs-lookup"><span data-stu-id="8f829-113">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="8f829-114">Одно свойство позиционирования — это массив строк, а одно именованное свойство — массив целых чисел.</span><span class="sxs-lookup"><span data-stu-id="8f829-114">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="8f829-115">Данный атрибут применяется к сборке, к объявленному в ней типу, к методу типа и к параметру этого метода.</span><span class="sxs-lookup"><span data-stu-id="8f829-115">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="8f829-116">В этих случаях используются различные конструкторы.</span><span class="sxs-lookup"><span data-stu-id="8f829-116">Different constructors are used for these cases.</span></span> <span data-ttu-id="8f829-117">При выполнении сборка загружается в контекст только для отражения и отображает пользовательские атрибуты.</span><span class="sxs-lookup"><span data-stu-id="8f829-117">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="8f829-118">Атрибут, применяемый к типу, демонстрирует свойства массива с как с помощью позиционированных, так и с именованными аргументами.</span><span class="sxs-lookup"><span data-stu-id="8f829-118">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Reflection.CustomAttributeData" />
    <altmember cref="T:System.Reflection.CustomAttributeNamedArgument" />
    <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8f829-119">Инициализирует новый экземпляр класса <see cref="T:System.Reflection.CustomAttributeTypedArgument" />.</span><span class="sxs-lookup"><span data-stu-id="8f829-119">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeTypedArgument (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeTypedArgument(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Reflection.CustomAttributeTypedArgument : obj -&gt; System.Reflection.CustomAttributeTypedArgument" Usage="new System.Reflection.CustomAttributeTypedArgument value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8f829-120">Значение аргумента настраиваемого атрибута.</span><span class="sxs-lookup"><span data-stu-id="8f829-120">The value of the custom attribute argument.</span></span></param>
        <summary><span data-ttu-id="8f829-121">Инициализирует новый экземпляр класса <see cref="T:System.Reflection.CustomAttributeTypedArgument" />, используя заданное значение.</span><span class="sxs-lookup"><span data-stu-id="8f829-121">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> class with the specified value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f829-122">Параметр не может быть `null` для этого конструктора, так как тип аргумента `value`выводится из типа. `value`</span><span class="sxs-lookup"><span data-stu-id="8f829-122">The `value` parameter cannot be `null` for this constructor, because the argument type is inferred from the type of `value`.</span></span> <span data-ttu-id="8f829-123">Чтобы указать `null` значение, <xref:System.Reflection.CustomAttributeTypedArgument.%23ctor%28System.Type%2CSystem.Object%29> используйте конструктор.</span><span class="sxs-lookup"><span data-stu-id="8f829-123">To specify a `null` value, use the <xref:System.Reflection.CustomAttributeTypedArgument.%23ctor%28System.Type%2CSystem.Object%29> constructor.</span></span>  
  
 <span data-ttu-id="8f829-124">Этот конструктор предназначен для использования наследниками <xref:System.Reflection.CustomAttributeTypedArgument> класса.</span><span class="sxs-lookup"><span data-stu-id="8f829-124">This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeTypedArgument> class.</span></span> <span data-ttu-id="8f829-125">Он не предназначен для использования в коде приложения.</span><span class="sxs-lookup"><span data-stu-id="8f829-125">It is not intended for use in application code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8f829-126"><paramref name="value" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8f829-126"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeTypedArgument (Type argumentType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type argumentType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (argumentType As Type, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeTypedArgument(Type ^ argumentType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Reflection.CustomAttributeTypedArgument : Type * obj -&gt; System.Reflection.CustomAttributeTypedArgument" Usage="new System.Reflection.CustomAttributeTypedArgument (argumentType, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="argumentType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="argumentType"><span data-ttu-id="8f829-127">Тип аргумента настраиваемого атрибута.</span><span class="sxs-lookup"><span data-stu-id="8f829-127">The type of the custom attribute argument.</span></span></param>
        <param name="value"><span data-ttu-id="8f829-128">Значение аргумента настраиваемого атрибута.</span><span class="sxs-lookup"><span data-stu-id="8f829-128">The value of the custom attribute argument.</span></span></param>
        <summary><span data-ttu-id="8f829-129">Инициализирует новый экземпляр класса <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> заданным типом и значением.</span><span class="sxs-lookup"><span data-stu-id="8f829-129">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> class with the specified type and value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f829-130">Этот конструктор предназначен для использования наследниками <xref:System.Reflection.CustomAttributeTypedArgument> класса.</span><span class="sxs-lookup"><span data-stu-id="8f829-130">This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeTypedArgument> class.</span></span> <span data-ttu-id="8f829-131">Он не предназначен для использования в коде приложения.</span><span class="sxs-lookup"><span data-stu-id="8f829-131">It is not intended for use in application code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8f829-132">Свойство <paramref name="argumentType" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8f829-132"><paramref name="argumentType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ArgumentType">
      <MemberSignature Language="C#" Value="public Type ArgumentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ArgumentType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgumentType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ArgumentType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ArgumentType : Type" Usage="System.Reflection.CustomAttributeTypedArgument.ArgumentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f829-133">Получает тип аргумента или элемента аргумента-массива.</span><span class="sxs-lookup"><span data-stu-id="8f829-133">Gets the type of the argument or of the array argument element.</span></span></summary>
        <value><span data-ttu-id="8f829-134">Объект <see cref="T:System.Type" />, представляющий тип аргумента или элемента массива.</span><span class="sxs-lookup"><span data-stu-id="8f829-134">A <see cref="T:System.Type" /> object representing the type of the argument or of the array element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f829-135">Для простых аргументов или элементов аргументов массива это свойство определяет фактический тип значения, возвращаемого <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> свойством.</span><span class="sxs-lookup"><span data-stu-id="8f829-135">For simple arguments or for elements of array arguments, this property identifies the actual type of the value returned by the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property.</span></span> <span data-ttu-id="8f829-136">Для аргументов массива это свойство возвращает тип массива, но <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> свойство возвращает значение `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` в Visual Basic), в котором каждый элемент коллекции представляет соответствующий элемент аргумента массива.</span><span class="sxs-lookup"><span data-stu-id="8f829-136">For array arguments, this property returns the array type, but the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property returns a `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` in Visual Basic) in which each element of the collection represents the corresponding element of the array argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f829-137">В следующем примере определяется пользовательский атрибут с четырьмя конструкторами и четырьмя свойствами.</span><span class="sxs-lookup"><span data-stu-id="8f829-137">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="8f829-138">Два свойства доступны только для чтения и задаются с помощью позиционированных параметров конструкторов.</span><span class="sxs-lookup"><span data-stu-id="8f829-138">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="8f829-139">Другие два свойства доступны для чтения и записи и могут быть заданы только с помощью именованных аргументов.</span><span class="sxs-lookup"><span data-stu-id="8f829-139">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="8f829-140">Одно свойство позиционирования — это массив строк, а одно именованное свойство — массив целых чисел.</span><span class="sxs-lookup"><span data-stu-id="8f829-140">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="8f829-141">Данный атрибут применяется к сборке, к объявленному в ней типу, к методу типа и к параметру этого метода.</span><span class="sxs-lookup"><span data-stu-id="8f829-141">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="8f829-142">В этих случаях используются различные конструкторы.</span><span class="sxs-lookup"><span data-stu-id="8f829-142">Different constructors are used for these cases.</span></span> <span data-ttu-id="8f829-143">При выполнении сборка загружается в контекст только для отражения и отображает пользовательские атрибуты.</span><span class="sxs-lookup"><span data-stu-id="8f829-143">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="8f829-144">Атрибут, применяемый к типу, демонстрирует свойства массива с как с помощью позиционированных, так и с именованными аргументами.</span><span class="sxs-lookup"><span data-stu-id="8f829-144">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="8f829-145"><xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> Свойство используется `ShowValueOrArray` в методе, который отображает данные настраиваемых атрибутов для отображения типов атрибутов.</span><span class="sxs-lookup"><span data-stu-id="8f829-145">The <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> property is used in the `ShowValueOrArray` method that displays custom attribute data, to display the types of attributes.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeTypedArgument.Value" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="customAttributeTypedArgument.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8f829-146">Другой объект, подлежащий сравнению.</span><span class="sxs-lookup"><span data-stu-id="8f829-146">Another object to compare to.</span></span></param>
        <summary><span data-ttu-id="8f829-147">Показывает, равен ли этот экземпляр заданному объекту.</span><span class="sxs-lookup"><span data-stu-id="8f829-147">Indicates whether this instance and a specified object are equal.</span></span></summary>
        <returns><span data-ttu-id="8f829-148">Значение <see langword="true" />, если <paramref name="obj" /> и данный экземпляр относятся к одному типу и представляют одинаковые значения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8f829-148"><see langword="true" /> if <paramref name="obj" /> and this instance are the same type and represent the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="customAttributeTypedArgument.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8f829-149">Возвращает хэш-код данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="8f829-149">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="8f829-150">32-разрядное целое число со знаком, являющееся хэш-кодом для данного экземпляра.</span><span class="sxs-lookup"><span data-stu-id="8f829-150">A 32-bit signed integer that is the hash code for this instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.CustomAttributeTypedArgument left, System.Reflection.CustomAttributeTypedArgument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Reflection.CustomAttributeTypedArgument left, valuetype System.Reflection.CustomAttributeTypedArgument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.op_Equality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CustomAttributeTypedArgument, right As CustomAttributeTypedArgument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::CustomAttributeTypedArgument left, System::Reflection::CustomAttributeTypedArgument right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Reflection.CustomAttributeTypedArgument * System.Reflection.CustomAttributeTypedArgument -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.CustomAttributeTypedArgument" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="right" Type="System.Reflection.CustomAttributeTypedArgument" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8f829-151">Структура <see cref="T:System.Reflection.CustomAttributeTypedArgument" />, которая находится слева от оператора равенства.</span><span class="sxs-lookup"><span data-stu-id="8f829-151">The <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structure to the left of the equality operator.</span></span></param>
        <param name="right"><span data-ttu-id="8f829-152">Структура <see cref="T:System.Reflection.CustomAttributeTypedArgument" />, которая находится справа от оператора равенства.</span><span class="sxs-lookup"><span data-stu-id="8f829-152">The <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structure to the right of the equality operator.</span></span></param>
        <summary><span data-ttu-id="8f829-153">Проверяет равенство двух структур <see cref="T:System.Reflection.CustomAttributeTypedArgument" />.</span><span class="sxs-lookup"><span data-stu-id="8f829-153">Tests whether two <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structures are equivalent.</span></span></summary>
        <returns><span data-ttu-id="8f829-154"><see langword="true" />, если обе структуры <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> равны; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8f829-154"><see langword="true" /> if the two <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structures are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="8f829-155">Эквивалентным методом для этого оператора является <xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8f829-155">The equivalent method for this operator is <xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.CustomAttributeTypedArgument left, System.Reflection.CustomAttributeTypedArgument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Reflection.CustomAttributeTypedArgument left, valuetype System.Reflection.CustomAttributeTypedArgument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.op_Inequality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CustomAttributeTypedArgument, right As CustomAttributeTypedArgument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::CustomAttributeTypedArgument left, System::Reflection::CustomAttributeTypedArgument right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Reflection.CustomAttributeTypedArgument * System.Reflection.CustomAttributeTypedArgument -&gt; bool" Usage="System.Reflection.CustomAttributeTypedArgument.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.CustomAttributeTypedArgument" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="right" Type="System.Reflection.CustomAttributeTypedArgument" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8f829-156">Структура <see cref="T:System.Reflection.CustomAttributeTypedArgument" />, которая находится слева от оператора неравенства.</span><span class="sxs-lookup"><span data-stu-id="8f829-156">The <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structure to the left of the inequality operator.</span></span></param>
        <param name="right"><span data-ttu-id="8f829-157">Структура <see cref="T:System.Reflection.CustomAttributeTypedArgument" />, которая находится справа от оператора неравенства.</span><span class="sxs-lookup"><span data-stu-id="8f829-157">The <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structure to the right of the inequality operator.</span></span></param>
        <summary><span data-ttu-id="8f829-158">Проверяет, различны ли две структуры <see cref="T:System.Reflection.CustomAttributeTypedArgument" />.</span><span class="sxs-lookup"><span data-stu-id="8f829-158">Tests whether two <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structures are different.</span></span></summary>
        <returns><span data-ttu-id="8f829-159"><see langword="true" />, если две структуры <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> различаются; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8f829-159"><see langword="true" /> if the two <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structures are different; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="8f829-160">Эквивалентным методом для этого оператора является <xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="8f829-160">The equivalent method for this operator is <xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="customAttributeTypedArgument.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8f829-161">Возвращает строку, состоящую из имени аргумента, знака равенства и строкового представления значения аргумента.</span><span class="sxs-lookup"><span data-stu-id="8f829-161">Returns a string consisting of the argument name, the equal sign, and a string representation of the argument value.</span></span></summary>
        <returns><span data-ttu-id="8f829-162">Строка, состоящая из имени аргумента, знака равенства и строкового представления значения этого аргумента.</span><span class="sxs-lookup"><span data-stu-id="8f829-162">A string consisting of the argument name, the equal sign, and a string representation of the argument value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeTypedArgument.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Reflection.CustomAttributeTypedArgument.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f829-163">Получает значение аргумента для простого аргумента или элемента аргумента-массива; получает коллекцию значений для аргумента-массива.</span><span class="sxs-lookup"><span data-stu-id="8f829-163">Gets the value of the argument for a simple argument or for an element of an array argument; gets a collection of values for an array argument.</span></span></summary>
        <value><span data-ttu-id="8f829-164">Объект, представляющий значение аргумента или элемента, или универсальная коллекция <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> объектов <see cref="T:System.Reflection.CustomAttributeTypedArgument" />, которая представляет значения аргумента типа массива.</span><span class="sxs-lookup"><span data-stu-id="8f829-164">An object that represents the value of the argument or element, or a generic <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> objects that represent the values of an array-type argument.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f829-165">Если объект <xref:System.Reflection.CustomAttributeTypedArgument> представляет аргумент массива, это свойство возвращает значение `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="8f829-165">If the <xref:System.Reflection.CustomAttributeTypedArgument> represents an array argument, this property returns a `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` in Visual Basic).</span></span> <span data-ttu-id="8f829-166">Каждый элемент коллекции представляет соответствующий элемент аргумента массива.</span><span class="sxs-lookup"><span data-stu-id="8f829-166">Each element of the collection represents the corresponding element of the array argument.</span></span>  
  
 <span data-ttu-id="8f829-167">Тип значения можно получить с помощью <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="8f829-167">The type of the value can be obtained by using the <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> property.</span></span> <span data-ttu-id="8f829-168"><xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A>Возвращает фактический тип значения, возвращаемого <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> свойством для простых аргументов или для элементов аргументов массива.</span><span class="sxs-lookup"><span data-stu-id="8f829-168"><xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> gets the actual type of the value returned by the <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property for simple arguments or for elements of array arguments.</span></span> <span data-ttu-id="8f829-169">Он возвращает тип массива для аргументов массива.</span><span class="sxs-lookup"><span data-stu-id="8f829-169">It returns the array type for array arguments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8f829-170">В следующем примере определяется пользовательский атрибут с четырьмя конструкторами и четырьмя свойствами.</span><span class="sxs-lookup"><span data-stu-id="8f829-170">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="8f829-171">Два свойства доступны только для чтения и задаются с помощью позиционированных параметров конструкторов.</span><span class="sxs-lookup"><span data-stu-id="8f829-171">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="8f829-172">Другие два свойства доступны для чтения и записи и могут быть заданы только с помощью именованных аргументов.</span><span class="sxs-lookup"><span data-stu-id="8f829-172">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="8f829-173">Одно свойство позиционирования — это массив строк, а одно именованное свойство — массив целых чисел.</span><span class="sxs-lookup"><span data-stu-id="8f829-173">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="8f829-174">Данный атрибут применяется к сборке, к объявленному в ней типу, к методу типа и к параметру этого метода.</span><span class="sxs-lookup"><span data-stu-id="8f829-174">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="8f829-175">В этих случаях используются различные конструкторы.</span><span class="sxs-lookup"><span data-stu-id="8f829-175">Different constructors are used for these cases.</span></span> <span data-ttu-id="8f829-176">При выполнении сборка загружается в контекст только для отражения и отображает пользовательские атрибуты.</span><span class="sxs-lookup"><span data-stu-id="8f829-176">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="8f829-177">Атрибут, применяемый к типу, демонстрирует свойства массива с как с помощью позиционированных, так и с именованными аргументами.</span><span class="sxs-lookup"><span data-stu-id="8f829-177">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="8f829-178"><xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> Свойство используется `ShowValueOrArray` в методе, который отображает данные настраиваемых атрибутов для отображения значений атрибутов.</span><span class="sxs-lookup"><span data-stu-id="8f829-178">The <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> property is used in the `ShowValueOrArray` method that displays custom attribute data, to display the values of attributes.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 <span data-ttu-id="8f829-179"><xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> &#124; <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A></span><span class="sxs-lookup"><span data-stu-id="8f829-179"><xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> &#124; <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A></span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
