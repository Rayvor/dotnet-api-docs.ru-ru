<Type Name="ObfuscationAttribute" FullName="System.Reflection.ObfuscationAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="70b90a5310a84c9c1373569a70e33fd7d2494ce7" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70324487" /></Metadata><TypeSignature Language="C#" Value="public sealed class ObfuscationAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObfuscationAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.ObfuscationAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObfuscationAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObfuscationAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ObfuscationAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.1;netstandard-2.0;netcore-2.2;netstandard-2.1;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Delegate | System.AttributeTargets.Enum | System.AttributeTargets.Event | System.AttributeTargets.Field | System.AttributeTargets.Interface | System.AttributeTargets.Method | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.Struct, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Указывает средствам запутывания, что следует предпринять заданные действия для сборки, типа или члена.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Атрибуты <xref:System.Reflection.ObfuscationAttribute> и<xref:System.Reflection.ObfuscateAssemblyAttribute> позволяют авторам сборок закомментировать свои двоичные файлы, чтобы средства запутывания могли правильно обрабатывать их с минимальной внешней конфигурацией.  
  
> [!IMPORTANT]
>  Применение этого атрибута не приводит к автоматической маскировке сущности кода, к которой она применяется. Применение атрибута является альтернативой созданию файла конфигурации для средства запутывания. То есть он просто предоставляет инструкции для средства запутывания. Корпорация Майкрософт рекомендует поставщикам средств запутывания следовать описанной здесь семантике. Однако нет никакой гарантии, что конкретный инструмент следует рекомендациям корпорации Майкрософт.  
  
 Атрибут имеет строковое <xref:System.Reflection.ObfuscationAttribute.Feature%2A>свойство. <xref:System.Reflection.ObfuscationAttribute> Средства запутывания могут сопоставлять строковые значения этого свойства с реализуемыми ими функциями, желательно с помощью XML-файла конфигурации, к которому пользователи могут обращаться. Компонент <xref:System.Reflection.ObfuscationAttribute> определяет две строки компонентов: "default" и "ALL". Строка "default" должна сопоставляться с функциями запутывания по умолчанию средства, а "все" должно соответствовать полному набору функций запутывания, поддерживаемых средством. Значение <xref:System.Reflection.ObfuscationAttribute.Feature%2A> свойства по умолчанию — "все", что позволяет использовать полный набор функций запутывания.  
  
 При применении к сборке <xref:System.Reflection.ObfuscationAttribute> также применяется ко всем типам в сборке. Если свойство не задано или имеет `true`значение, атрибут применяется также ко всем элементам. <xref:System.Reflection.ObfuscationAttribute.ApplyToMembers%2A> <xref:System.Reflection.ObfuscationAttribute>не указывает, является ли сборка общедоступной или закрытой. Чтобы указать, является ли сборка общедоступной или закрытой <xref:System.Reflection.ObfuscateAssemblyAttribute> , используйте атрибут.  
  
 При применении к классам и структурам <xref:System.Reflection.ObfuscationAttribute> также применяется ко всем элементам типа, <xref:System.Reflection.ObfuscationAttribute.ApplyToMembers%2A> если свойство не задано `true`, или имеет значение.  
  
 При применении к методам, параметрам, полям и свойствам атрибут влияет только на сущность, к которой он применяется.  
  
   
  
## Examples  
 В следующем примере кода показана открытая сборка с двумя типами: `Type1` и `Type2`. Сборка помечена для запутывания с <xref:System.Reflection.ObfuscateAssemblyAttribute>, которая помечает сборку как общедоступную (то есть <xref:System.Reflection.ObfuscateAssemblyAttribute.AssemblyIsPrivate%2A> свойство имеет `false`значение).  
  
 `Type1`помечен для запутывания, так как сборка помечена для запутывания. Один член `Type1` исключен из запутывания, <xref:System.Reflection.ObfuscationAttribute.Exclude%2A> использующий свойство.  
  
 `Type2`исключен из запутывания, но его члены помечены для маскировки, так как <xref:System.Reflection.ObfuscationAttribute.ApplyToMembers%2A> свойство имеет `false`значение.  
  
 Метод объекта `Type2` помечается `"default"` значением<xref:System.Reflection.ObfuscationAttribute.Feature%2A>Свойства. `MethodA` `false` Необходимо указать `MethodA` <xref:System.Reflection.ObfuscationAttribute.Exclude%2A> `true`для свойства, чтобы избежать исключения из запутывания, так как значение по умолчанию для свойства —. <xref:System.Reflection.ObfuscationAttribute.Exclude%2A> Средство запутывания не должно удалять атрибут после маскировки, поскольку <xref:System.Reflection.ObfuscationAttribute.StripAfterObfuscation%2A> свойство имеет `false`значение. Все остальные атрибуты в этом примере кода удаляются после запутывания, поскольку <xref:System.Reflection.ObfuscationAttribute.StripAfterObfuscation%2A> свойство не задано, и поэтому по умолчанию `true`имеет значение.  
  
 Пример кода включает код для вывода атрибутов и их свойств. Вы также можете проверить атрибуты, открыв библиотеку DLL с помощью [Ildasm. exe](~/docs/framework/tools/ildasm-exe-il-disassembler.md).  
  
 [!code-csharp[ObfuscationAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/ObfuscationAttribute/cs/source.cs#1)]
 [!code-vb[ObfuscationAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObfuscationAttribute/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Reflection.ObfuscateAssemblyAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObfuscationAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ObfuscationAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObfuscationAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Reflection.ObfuscationAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Reflection.ObfuscationAttribute>не указывает, является ли сборка общедоступной или закрытой. Чтобы указать, является ли сборка общедоступной или закрытой, используйте <xref:System.Reflection.ObfuscateAssemblyAttribute>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyToMembers">
      <MemberSignature Language="C#" Value="public bool ApplyToMembers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyToMembers" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ObfuscationAttribute.ApplyToMembers" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyToMembers As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyToMembers { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ApplyToMembers : bool with get, set" Usage="System.Reflection.ObfuscationAttribute.ApplyToMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение <see cref="T:System.Boolean" />, которое указывает, должен ли атрибут определенного типа быть применен к членам этого типа.</summary>
        <value>Значение <see langword="true" />, если атрибут должен применяться к членам соответствующего типа; в обратном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение этого свойства игнорируется, если атрибут применяется к элементу.  
  
> [!IMPORTANT]
>  Применение этого атрибута не приводит к автоматической маскировке сущности кода, к которой она применяется. Применение атрибута является альтернативой созданию файла конфигурации для средства запутывания. То есть он просто предоставляет инструкции для средства запутывания. Корпорация Майкрософт рекомендует поставщикам средств запутывания следовать описанной здесь семантике. Однако нет никакой гарантии, что конкретный инструмент следует рекомендациям корпорации Майкрософт.  
  
   
  
## Examples  
 В следующем примере кода показан тип, исключенный из запутывания, но исключение не применяется к его членам, так как <xref:System.Reflection.ObfuscationAttribute.ApplyToMembers%2A> свойство имеет `false`значение.  
  
 Этот код является частью более крупного примера, который может быть скомпилирован и выполнен. См. класс <xref:System.Reflection.ObfuscationAttribute>.  
  
 [!code-csharp[ObfuscationAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR/ObfuscationAttribute/cs/source.cs#2)]
 [!code-vb[ObfuscationAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObfuscationAttribute/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exclude">
      <MemberSignature Language="C#" Value="public bool Exclude { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exclude" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ObfuscationAttribute.Exclude" />
      <MemberSignature Language="VB.NET" Value="Public Property Exclude As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Exclude { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Exclude : bool with get, set" Usage="System.Reflection.ObfuscationAttribute.Exclude" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение <see cref="T:System.Boolean" />, указывающее, должно ли средство запутывания исключить тип или член из операции запутывания.</summary>
        <value>Значение <see langword="true" />, если тип или член, к которому применяется этот атрибут, должен быть исключен из операции запутывания; в обратном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Применение этого атрибута не приводит к автоматической маскировке сущности кода, к которой она применяется. Применение атрибута является альтернативой созданию файла конфигурации для средства запутывания. То есть он просто предоставляет инструкции для средства запутывания. Корпорация Майкрософт рекомендует поставщикам средств запутывания следовать описанной здесь семантике. Однако нет никакой гарантии, что конкретный инструмент следует рекомендациям корпорации Майкрософт.  
  
   
  
## Examples  
 В следующем примере кода показан тип, который помечен для исключения из запутывания. Указывать <xref:System.Reflection.ObfuscationAttribute.Exclude%2A> свойство не обязательно, так как оно по умолчанию `true`имеет значение, но явное указание этого свойства делает намерение понятным. <xref:System.Reflection.ObfuscationAttribute.ApplyToMembers%2A> Имеет`false`значение, чтобы исключение из запутывания не применялось к членам класса. Это значит, что имя класса является видимым, но элементы скрыты.  
  
 Метод помечается значением `"default"` <xref:System.Reflection.ObfuscationAttribute.Feature%2A> свойства. `MethodA` `false` Необходимо указать `MethodA` <xref:System.Reflection.ObfuscationAttribute.Exclude%2A> `true`для свойства, чтобы избежать исключения из запутывания, так как значение по умолчанию для свойства —. <xref:System.Reflection.ObfuscationAttribute.Exclude%2A> <xref:System.Reflection.ObfuscationAttribute.StripAfterObfuscation%2A> Свойство заключается`false` в том, что средство запутывания не будет удалять атрибут после запутывания.  
  
 Этот код является частью более крупного примера, который может быть скомпилирован и выполнен. См. класс <xref:System.Reflection.ObfuscationAttribute>.  
  
 [!code-csharp[ObfuscationAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR/ObfuscationAttribute/cs/source.cs#4)]
 [!code-vb[ObfuscationAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObfuscationAttribute/vb/source.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Feature">
      <MemberSignature Language="C#" Value="public string Feature { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Feature" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ObfuscationAttribute.Feature" />
      <MemberSignature Language="VB.NET" Value="Public Property Feature As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Feature { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Feature : string with get, set" Usage="System.Reflection.ObfuscationAttribute.Feature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строковое значение, которое распознается средством запутывания и определяет параметры обработки.</summary>
        <value>Строковое значение, которое распознается средством запутывания и определяет параметры обработки. По умолчанию установлено значение "all".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение, передаваемое этому свойству, зависит от используемого средства запутывания. Рекомендуется, чтобы поставщики средств запутывания поддерживали по крайней мере "по умолчанию" и "все". Поставщики могут использовать эти параметры совместно с XML-файлом конфигурации.  
  
> [!IMPORTANT]
>  Применение этого атрибута не приводит к автоматической маскировке сущности кода, к которой она применяется. Применение атрибута является альтернативой созданию файла конфигурации для средства запутывания. То есть он просто предоставляет инструкции для средства запутывания. Корпорация Майкрософт рекомендует поставщикам средств запутывания следовать описанной здесь семантике. Однако нет никакой гарантии, что конкретный инструмент следует рекомендациям корпорации Майкрософт.  
  
   
  
## Examples  
 В следующем примере кода показан метод, помеченный значением `"default"` <xref:System.Reflection.ObfuscationAttribute.Feature%2A> для свойства. `false` Необходимо указать `MethodA` <xref:System.Reflection.ObfuscationAttribute.Exclude%2A> `true`для свойства, чтобы избежать исключения из запутывания, так как значение по умолчанию для свойства —. <xref:System.Reflection.ObfuscationAttribute.Exclude%2A> <xref:System.Reflection.ObfuscationAttribute.StripAfterObfuscation%2A> Свойство заключается`false` в том, что средство запутывания не будет удалять атрибут после запутывания.  
  
 Этот код является частью более крупного примера, который может быть скомпилирован и выполнен. См. класс <xref:System.Reflection.ObfuscationAttribute>.  
  
 [!code-csharp[ObfuscationAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR/ObfuscationAttribute/cs/source.cs#3)]
 [!code-vb[ObfuscationAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObfuscationAttribute/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StripAfterObfuscation">
      <MemberSignature Language="C#" Value="public bool StripAfterObfuscation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StripAfterObfuscation" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ObfuscationAttribute.StripAfterObfuscation" />
      <MemberSignature Language="VB.NET" Value="Public Property StripAfterObfuscation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StripAfterObfuscation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StripAfterObfuscation : bool with get, set" Usage="System.Reflection.ObfuscationAttribute.StripAfterObfuscation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение <see cref="T:System.Boolean" />, указывающее, должно и средство запутывания удалить данный атрибут по окончании его обработки.</summary>
        <value>Значение <see langword="true" />, если средство запутывания должно удалять атрибут после обработки; в обратном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Не следует удалять атрибуты, если ваша библиотека будет включена в состав другого приложения и замаскирована как часть этого приложения.  
  
> [!IMPORTANT]
>  Применение этого атрибута не приводит к автоматической маскировке сущности кода, к которой она применяется. Применение атрибута является альтернативой созданию файла конфигурации для средства запутывания. То есть он просто предоставляет инструкции для средства запутывания. Корпорация Майкрософт рекомендует поставщикам средств запутывания следовать описанной здесь семантике. Однако нет никакой гарантии, что конкретный инструмент следует рекомендациям корпорации Майкрософт.  
  
   
  
## Examples  
 В следующем примере кода показано <xref:System.Reflection.ObfuscationAttribute> , свойство которого <xref:System.Reflection.ObfuscationAttribute.StripAfterObfuscation%2A> имеет `false` значение, так что средство запутывания не будет удалять атрибут после запутывания. `false` Необходимо указать `MethodA` <xref:System.Reflection.ObfuscationAttribute.Exclude%2A> `true`для свойства, чтобы избежать исключения из запутывания, так как значение по умолчанию для свойства —. <xref:System.Reflection.ObfuscationAttribute.Exclude%2A>  
  
 Этот код является частью более крупного примера, который может быть скомпилирован и выполнен. См. класс <xref:System.Reflection.ObfuscationAttribute>.  
  
 [!code-csharp[ObfuscationAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR/ObfuscationAttribute/cs/source.cs#4)]
 [!code-vb[ObfuscationAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ObfuscationAttribute/vb/source.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
