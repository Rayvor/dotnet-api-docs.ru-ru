<Type Name="RuntimeReflectionExtensions" FullName="System.Reflection.RuntimeReflectionExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fb58ca0ea7cf9864d8a420e0c0de9654220cb01e" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67248817" /></Metadata><TypeSignature Language="C#" Value="public static class RuntimeReflectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RuntimeReflectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.RuntimeReflectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module RuntimeReflectionExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class RuntimeReflectionExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type RuntimeReflectionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b0a5a-101">Предоставляет методы, которые получают сведения о типах во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-101">Provides methods that retrieve information about types at run time.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetMethodInfo">
      <MemberSignature Language="C#" Value="public static System.Reflection.MethodInfo GetMethodInfo (this Delegate del);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MethodInfo GetMethodInfo(class System.Delegate del) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMethodInfo (del As Delegate) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::MethodInfo ^ GetMethodInfo(Delegate ^ del);" />
      <MemberSignature Language="F#" Value="static member GetMethodInfo : Delegate -&gt; System.Reflection.MethodInfo" Usage="System.Reflection.RuntimeReflectionExtensions.GetMethodInfo del" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="del" Type="System.Delegate" RefType="this" />
      </Parameters>
      <Docs>
        <param name="del"><span data-ttu-id="b0a5a-102">Проверяемый делегат.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-102">The delegate to examine.</span></span></param>
        <summary><span data-ttu-id="b0a5a-103">Получает объект, представляющий метод, представленный указанным делегатом.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-103">Gets an object that represents the method represented by the specified delegate.</span></span></summary>
        <returns><span data-ttu-id="b0a5a-104">Объект, представляющий метод.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-104">An object that represents the method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b0a5a-105"><paramref name="del" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-105"><paramref name="del" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="b0a5a-106">Вызывающий объект не имеет доступа к методу, представленному делегатом (например, если метод является закрытым).</span><span class="sxs-lookup"><span data-stu-id="b0a5a-106">The caller does not have access to the method represented by the delegate (for example, if the method is private).</span></span></exception>
        <altmember cref="P:System.Delegate.Method" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeBaseDefinition">
      <MemberSignature Language="C#" Value="public static System.Reflection.MethodInfo GetRuntimeBaseDefinition (this System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MethodInfo GetRuntimeBaseDefinition(class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRuntimeBaseDefinition (method As MethodInfo) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::MethodInfo ^ GetRuntimeBaseDefinition(System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeBaseDefinition : System.Reflection.MethodInfo -&gt; System.Reflection.MethodInfo" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" RefType="this" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="b0a5a-107">Метод для извлечения сведений.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-107">The method to retrieve information about.</span></span></param>
        <summary><span data-ttu-id="b0a5a-108">Извлекает объект, представляющий указанный метода в прямом или косвенном базовом классе, где он был первоначально объявлен.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-108">Retrieves an object that represents the specified method on the direct or indirect base class where the method was first declared.</span></span></summary>
        <returns><span data-ttu-id="b0a5a-109">Объект, представляющий первичное объявление указанного метода в базовом классе.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-109">An object that represents the specified method's initial declaration on a base class.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b0a5a-110"><paramref name="method" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-110"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Reflection.MethodInfo.GetBaseDefinition" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeEvent">
      <MemberSignature Language="C#" Value="public static System.Reflection.EventInfo GetRuntimeEvent (this Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.EventInfo GetRuntimeEvent(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::EventInfo ^ GetRuntimeEvent(Type ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeEvent : Type * string -&gt; System.Reflection.EventInfo" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b0a5a-111">Тип, содержащий событие.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-111">The type that contains the event.</span></span></param>
        <param name="name"><span data-ttu-id="b0a5a-112">Имя события.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-112">The name of the event.</span></span></param>
        <summary><span data-ttu-id="b0a5a-113">Получает объект, представляющий указанное событие.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-113">Retrieves an object that represents the specified event.</span></span></summary>
        <returns><span data-ttu-id="b0a5a-114">Объект, представляющий указанное событие, или значение <see langword="null" />, если событие не найдено.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-114">An object that represents the specified event, or <see langword="null" /> if the event is not found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b0a5a-115"><paramref name="type" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-115"><paramref name="type" /> is <see langword="null" />.</span></span>

<span data-ttu-id="b0a5a-116">-или-</span><span class="sxs-lookup"><span data-stu-id="b0a5a-116">-or-</span></span>

<span data-ttu-id="b0a5a-117"><paramref name="name" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-117"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.GetEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeEvents">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Reflection.EventInfo&gt; GetRuntimeEvents (this Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.EventInfo&gt; GetRuntimeEvents(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::Reflection::EventInfo ^&gt; ^ GetRuntimeEvents(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeEvents : Type -&gt; seq&lt;System.Reflection.EventInfo&gt;" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.EventInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b0a5a-118">Тип, содержащий события.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-118">The type that contains the events.</span></span></param>
        <summary><span data-ttu-id="b0a5a-119">Извлекает коллекцию, представляющую все события, определенные в указанном типе.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-119">Retrieves a collection that represents all the events defined on a specified type.</span></span></summary>
        <returns><span data-ttu-id="b0a5a-120">Коллекция событий заданного типа.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-120">A collection of events for the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0a5a-121">Этот метод возвращает все события, определенные для указанного типа, включая унаследованные, не являющийся открытым, экземпляр и статических событий.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-121">This method returns all events defined on the specified type, including inherited, non-public, instance, and static events.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b0a5a-122"><paramref name="type" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-122"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.GetEvents(System.Reflection.BindingFlags)" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeField">
      <MemberSignature Language="C#" Value="public static System.Reflection.FieldInfo GetRuntimeField (this Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.FieldInfo GetRuntimeField(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::FieldInfo ^ GetRuntimeField(Type ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeField : Type * string -&gt; System.Reflection.FieldInfo" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeField (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b0a5a-123">Тип, содержащий поле.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-123">The type that contains the field.</span></span></param>
        <param name="name"><span data-ttu-id="b0a5a-124">Имя поля.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-124">The name of the field.</span></span></param>
        <summary><span data-ttu-id="b0a5a-125">Извлекает объект , который представляет указанное поле.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-125">Retrieves an object that represents a specified field.</span></span></summary>
        <returns><span data-ttu-id="b0a5a-126">Объект, представляющий указанное поле, или значение <see langword="null" />, если поле не найдено.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-126">An object that represents the specified field, or <see langword="null" /> if the field is not found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b0a5a-127"><paramref name="type" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-127"><paramref name="type" /> is <see langword="null" />.</span></span>

<span data-ttu-id="b0a5a-128">-или-</span><span class="sxs-lookup"><span data-stu-id="b0a5a-128">-or-</span></span>

<span data-ttu-id="b0a5a-129"><paramref name="name" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-129"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.GetField(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeFields">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Reflection.FieldInfo&gt; GetRuntimeFields (this Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.FieldInfo&gt; GetRuntimeFields(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::Reflection::FieldInfo ^&gt; ^ GetRuntimeFields(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeFields : Type -&gt; seq&lt;System.Reflection.FieldInfo&gt;" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.FieldInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b0a5a-130">Тип, содержащий поля.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-130">The type that contains the fields.</span></span></param>
        <summary><span data-ttu-id="b0a5a-131">Извлекает коллекцию, представляющую все поля, определенные в указанном типе.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-131">Retrieves a collection that represents all the fields defined on a specified type.</span></span></summary>
        <returns><span data-ttu-id="b0a5a-132">Коллекция полей заданного типа.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-132">A collection of fields for the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0a5a-133">Этот метод возвращает все поля, определенные для указанного типа, включая унаследованные, не являющийся открытым, экземпляр и статические поля.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-133">This method returns all fields that are defined on the specified type, including inherited, non-public, instance, and static fields.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b0a5a-134"><paramref name="type" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-134"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.GetFields(System.Reflection.BindingFlags)" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeInterfaceMap">
      <MemberSignature Language="C#" Value="public static System.Reflection.InterfaceMapping GetRuntimeInterfaceMap (this System.Reflection.TypeInfo typeInfo, Type interfaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Reflection.InterfaceMapping GetRuntimeInterfaceMap(class System.Reflection.TypeInfo typeInfo, class System.Type interfaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Reflection.TypeInfo,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::InterfaceMapping GetRuntimeInterfaceMap(System::Reflection::TypeInfo ^ typeInfo, Type ^ interfaceType);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeInterfaceMap : System.Reflection.TypeInfo * Type -&gt; System.Reflection.InterfaceMapping" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap (typeInfo, interfaceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.InterfaceMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeInfo" Type="System.Reflection.TypeInfo" RefType="this" />
        <Parameter Name="interfaceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeInfo"><span data-ttu-id="b0a5a-135">Тип, для которого требуется извлечь сопоставление.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-135">The type to retrieve a mapping for.</span></span></param>
        <param name="interfaceType"><span data-ttu-id="b0a5a-136">Интерфейс, для которого требуется извлечь сопоставление.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-136">The interface to retrieve a mapping for.</span></span></param>
        <summary><span data-ttu-id="b0a5a-137">Возвращает сопоставление интерфейса для заданного типа и указанного интерфейса.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-137">Returns an interface mapping for the specified type and the specified interface.</span></span></summary>
        <returns><span data-ttu-id="b0a5a-138">Объект, представляющий сопоставление интерфейса для указанного интерфейса и типа.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-138">An object that represents the interface mapping for the specified interface and type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b0a5a-139"><paramref name="typeInfo" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-139"><paramref name="typeInfo" /> is <see langword="null" />.</span></span>
        
<span data-ttu-id="b0a5a-140">-или-</span><span class="sxs-lookup"><span data-stu-id="b0a5a-140">-or-</span></span>

<span data-ttu-id="b0a5a-141"><paramref name="interfaceType" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-141"><paramref name="interfaceType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b0a5a-142"><paramref name="interfaceType" /> не реализуется в <paramref name="typeInfo" />.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-142"><paramref name="interfaceType" /> is not implemented by <paramref name="typeInfo" />.</span></span>

<span data-ttu-id="b0a5a-143">-или-</span><span class="sxs-lookup"><span data-stu-id="b0a5a-143">-or-</span></span>

<span data-ttu-id="b0a5a-144"><paramref name="interfaceType" /> не ссылается на интерфейс.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-144"><paramref name="interfaceType" /> does not refer to an interface.</span></span>

<span data-ttu-id="b0a5a-145">-или-</span><span class="sxs-lookup"><span data-stu-id="b0a5a-145">-or-</span></span>

<span data-ttu-id="b0a5a-146"><paramref name="typeInfo" /> либо <paramref name="interfaceType" /> представляет собой открытый универсальный тип.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-146"><paramref name="typeInfo" /> or <paramref name="interfaceType" /> is an open generic type.</span></span>

<span data-ttu-id="b0a5a-147">-или-</span><span class="sxs-lookup"><span data-stu-id="b0a5a-147">-or-</span></span>

<span data-ttu-id="b0a5a-148"><paramref name="interfaceType" /> является универсальным интерфейсом, а <paramref name="typeInfo" /> является типом массива.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-148"><paramref name="interfaceType" /> is a generic interface, and <paramref name="typeInfo" /> is an array type.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b0a5a-149"><paramref name="typeInfo" /> представляет параметр универсального типа.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-149"><paramref name="typeInfo" /> represents a generic type parameter.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b0a5a-150"><paramref name="typeInfo" /> является экземпляром <see cref="T:System.Reflection.Emit.TypeBuilder" />, метод <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> которого еще не был вызван.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-150"><paramref name="typeInfo" /> is a <see cref="T:System.Reflection.Emit.TypeBuilder" /> instance whose <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> method has not yet been called.</span></span>

<span data-ttu-id="b0a5a-151">-или-</span><span class="sxs-lookup"><span data-stu-id="b0a5a-151">-or-</span></span>

<span data-ttu-id="b0a5a-152">Вызванный метод не поддерживается в базовом классе.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-152">The invoked method is not supported in the base class.</span></span> <span data-ttu-id="b0a5a-153">Реализацию должны обеспечивать производные классы.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-153">Derived classes must provide an implementation.</span></span></exception>
        <altmember cref="M:System.Type.GetInterfaceMap(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeMethod">
      <MemberSignature Language="C#" Value="public static System.Reflection.MethodInfo GetRuntimeMethod (this Type type, string name, Type[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MethodInfo GetRuntimeMethod(class System.Type type, string name, class System.Type[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.Type,System.String,System.Type[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::MethodInfo ^ GetRuntimeMethod(Type ^ type, System::String ^ name, cli::array &lt;Type ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeMethod : Type * string * Type[] -&gt; System.Reflection.MethodInfo" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod (type, name, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parameters" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b0a5a-154">Тип, содержащий метод.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-154">The type that contains the method.</span></span></param>
        <param name="name"><span data-ttu-id="b0a5a-155">Имя метода.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-155">The name of the method.</span></span></param>
        <param name="parameters"><span data-ttu-id="b0a5a-156">Массив, содержащий параметры метода.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-156">An array that contains the method's parameters.</span></span></param>
        <summary><span data-ttu-id="b0a5a-157">Извлекает объект, который представляет указанный метод.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-157">Retrieves an object that represents a specified method.</span></span></summary>
        <returns><span data-ttu-id="b0a5a-158">Объект, представляющий указанный метод, или значение <see langword="null" />, если метод не найден.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-158">An object that represents the specified method, or <see langword="null" /> if the method is not found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b0a5a-159"><paramref name="type" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-159"><paramref name="type" /> is <see langword="null" />.</span></span>

<span data-ttu-id="b0a5a-160">-или-</span><span class="sxs-lookup"><span data-stu-id="b0a5a-160">-or-</span></span>

<span data-ttu-id="b0a5a-161"><paramref name="name" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-161"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.AmbiguousMatchException"><span data-ttu-id="b0a5a-162">Найдено несколько методов с указанным именем.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-162">More than one method is found with the specified name.</span></span></exception>
        <altmember cref="M:System.Type.GetMethod(System.String,System.Type[])" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeMethods">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Reflection.MethodInfo&gt; GetRuntimeMethods (this Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.MethodInfo&gt; GetRuntimeMethods(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::Reflection::MethodInfo ^&gt; ^ GetRuntimeMethods(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeMethods : Type -&gt; seq&lt;System.Reflection.MethodInfo&gt;" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.MethodInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b0a5a-163">Тип, содержащий методы.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-163">The type that contains the methods.</span></span></param>
        <summary><span data-ttu-id="b0a5a-164">Извлекает коллекцию, представляющую все методы, определенные в указанном типе.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-164">Retrieves a collection that represents all methods defined on a specified type.</span></span></summary>
        <returns><span data-ttu-id="b0a5a-165">Коллекция методов заданного типа.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-165">A collection of methods for the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0a5a-166">Этот метод возвращает все методы, определенные в указанном типе, включая унаследованные, не являющийся открытым, экземпляр и статических методов.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-166">This method returns all methods defined on the specified type, including inherited, non-public, instance, and static methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b0a5a-167"><paramref name="type" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-167"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.GetMethods(System.Reflection.BindingFlags)" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeProperties">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt; GetRuntimeProperties (this Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.PropertyInfo&gt; GetRuntimeProperties(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::Reflection::PropertyInfo ^&gt; ^ GetRuntimeProperties(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeProperties : Type -&gt; seq&lt;System.Reflection.PropertyInfo&gt;" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b0a5a-168">Тип, содержащий свойства.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-168">The type that contains the properties.</span></span></param>
        <summary><span data-ttu-id="b0a5a-169">Извлекает коллекцию, представляющую все свойства, определенные в указанном типе.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-169">Retrieves a collection that represents all the properties defined on a specified type.</span></span></summary>
        <returns><span data-ttu-id="b0a5a-170">Коллекция свойств для заданного типа.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-170">A collection of properties for the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b0a5a-171">Этот метод возвращает все свойства, определенные для указанного типа, включая унаследованные, не являющийся открытым, экземпляр и статические свойства.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-171">This method returns all properties defined on the specified type, including inherited, non-public, instance, and static properties.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b0a5a-172"><paramref name="type" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-172"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Type.GetProperties(System.Reflection.BindingFlags)" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeProperty">
      <MemberSignature Language="C#" Value="public static System.Reflection.PropertyInfo GetRuntimeProperty (this Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.PropertyInfo GetRuntimeProperty(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::PropertyInfo ^ GetRuntimeProperty(Type ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeProperty : Type * string -&gt; System.Reflection.PropertyInfo" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b0a5a-173">Тип, содержащий свойство.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-173">The type that contains the property.</span></span></param>
        <param name="name"><span data-ttu-id="b0a5a-174">Имя свойства.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-174">The name of the property.</span></span></param>
        <summary><span data-ttu-id="b0a5a-175">Извлекает объект, который представляет указанное свойство.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-175">Retrieves an object that represents a specified property.</span></span></summary>
        <returns><span data-ttu-id="b0a5a-176">Объект, представляющий указанное свойство, или значение <see langword="null" />, если свойство не найдено.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-176">An object that represents the specified property, or <see langword="null" /> if the property is not found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b0a5a-177"><paramref name="type" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-177"><paramref name="type" /> is <see langword="null" />.</span></span>

<span data-ttu-id="b0a5a-178">-или-</span><span class="sxs-lookup"><span data-stu-id="b0a5a-178">-or-</span></span>

<span data-ttu-id="b0a5a-179"><paramref name="name" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-179"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b0a5a-180"><paramref name="type" /> не является объектом <see langword="RuntimeType" />.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-180"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span></exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="b0a5a-181">Обнаружено несколько свойств с запрашиваемым именем.</span><span class="sxs-lookup"><span data-stu-id="b0a5a-181">More than one property with the requested name was found.</span></span></exception>
        <altmember cref="M:System.Type.GetProperty(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>