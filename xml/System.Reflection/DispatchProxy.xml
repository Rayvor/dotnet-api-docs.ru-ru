<Type Name="DispatchProxy" FullName="System.Reflection.DispatchProxy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e41fbb4cb38ff13add1adf513c91b84720f5b876" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="64996682" /></Metadata><TypeSignature Language="C#" Value="public abstract class DispatchProxy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DispatchProxy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.DispatchProxy" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DispatchProxy" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatchProxy abstract" />
  <TypeSignature Language="F#" Value="type DispatchProxy = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.DispatchProxy</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.0.5.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2d555-101">Предоставляет механизм для создания экземпляра прокси-объектов и обработки их диспетчеризации методов.</span><span class="sxs-lookup"><span data-stu-id="2d555-101">Provides a mechanism for instantiating proxy objects and handling their method dispatch.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DispatchProxy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.DispatchProxy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DispatchProxy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.DispatchProxy</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create&lt;T,TProxy&gt;">
      <MemberSignature Language="C#" Value="public static T Create&lt;T,TProxy&gt; () where TProxy : System.Reflection.DispatchProxy;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Create&lt;T, (class System.Reflection.DispatchProxy) TProxy&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.DispatchProxy.Create``2" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T, TProxy) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TProxy&gt;&#xA; where TProxy : System::Reflection::DispatchProxy static T Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; 'T (requires 'Proxy :&gt; System.Reflection.DispatchProxy)" Usage="System.Reflection.DispatchProxy.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.DispatchProxy</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TProxy">
          <Constraints>
            <BaseTypeName>System.Reflection.DispatchProxy</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="2d555-102">Необходимо реализовать интерфейс прокси-сервер.</span><span class="sxs-lookup"><span data-stu-id="2d555-102">The interface the proxy should implement.</span></span></typeparam>
        <typeparam name="TProxy"><span data-ttu-id="2d555-103">Базовый класс для прокси-класса.</span><span class="sxs-lookup"><span data-stu-id="2d555-103">The base class to use for the proxy class.</span></span></typeparam>
        <summary><span data-ttu-id="2d555-104">Создает экземпляр объекта, который является производным от класса <typeparamref name="TProxy" /> и реализует интерфейс <typeparamref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="2d555-104">Creates an object instance that derives from class <typeparamref name="TProxy" /> and implements interface <typeparamref name="T" />.</span></span></summary>
        <returns><span data-ttu-id="2d555-105">Экземпляр объекта, который реализует <typeparamref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="2d555-105">An object instance that implements <typeparamref name="T" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2d555-106"><typeparamref name="T" /> — Это класс или <typeparamref name="TProxy" /> является запечатанным или не имеет конструктора без параметров.</span><span class="sxs-lookup"><span data-stu-id="2d555-106"><typeparamref name="T" /> is a class, or <typeparamref name="TProxy" /> is sealed or does not have a parameterless constructor.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="protected abstract object Invoke (System.Reflection.MethodInfo targetMethod, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object Invoke(class System.Reflection.MethodInfo targetMethod, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.DispatchProxy.Invoke(System.Reflection.MethodInfo,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function Invoke (targetMethod As MethodInfo, args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Object ^ Invoke(System::Reflection::MethodInfo ^ targetMethod, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : System.Reflection.MethodInfo * obj[] -&gt; obj" Usage="dispatchProxy.Invoke (targetMethod, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.DispatchProxy</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetMethod" Type="System.Reflection.MethodInfo" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="targetMethod"><span data-ttu-id="2d555-107">Вызывающий объект вызывается метод.</span><span class="sxs-lookup"><span data-stu-id="2d555-107">The method the caller invoked.</span></span></param>
        <param name="args"><span data-ttu-id="2d555-108">Вызывающий объект аргументы, передаваемые в метод.</span><span class="sxs-lookup"><span data-stu-id="2d555-108">The arguments the caller passed to the method.</span></span></param>
        <summary><span data-ttu-id="2d555-109">Каждый раз, когда вызывается любой метод на созданного прокси-типа.</span><span class="sxs-lookup"><span data-stu-id="2d555-109">Whenever any method on the generated proxy type is called.</span></span> <span data-ttu-id="2d555-110">Метод Rhis будет вызываться для отправки элемента управления.</span><span class="sxs-lookup"><span data-stu-id="2d555-110">Rhis method will be invoked to dispatch control.</span></span></summary>
        <returns><span data-ttu-id="2d555-111">Объект, для возвращения вызывающему объекту, или <see langword="null" /> для методов void.</span><span class="sxs-lookup"><span data-stu-id="2d555-111">The object to return to the caller, or <see langword="null" /> for void methods.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>