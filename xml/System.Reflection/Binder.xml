<Type Name="Binder" FullName="System.Reflection.Binder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6777bc9e3da613a4b8dc84901177d854200a8810" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70324816" /></Metadata><TypeSignature Language="C#" Value="public abstract class Binder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Binder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Binder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Binder" />
  <TypeSignature Language="C++ CLI" Value="public ref class Binder abstract" />
  <TypeSignature Language="F#" Value="type Binder = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDual)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="46162-101">Выбирает член из списка кандидатов и выполняет преобразование типов из действительного типа аргумента к формальному типу аргумента.</span><span class="sxs-lookup"><span data-stu-id="46162-101">Selects a member from a list of candidates, and performs type conversion from actual argument type to formal argument type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46162-102">Реализации класса используются такими методами, как <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>, который выбирает из набора возможных элементов для выполнения на основе набора типов параметров и значений аргументов. <xref:System.Reflection.Binder> <xref:System.Type.GetMethod%2A?displayProperty=nameWithType>, который выбирает метод на основе типов параметров и т. д.</span><span class="sxs-lookup"><span data-stu-id="46162-102">Implementations of the <xref:System.Reflection.Binder> class are used by methods such as <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>, which selects from a set of possible members to execute, based on a set of parameter types and argument values; <xref:System.Type.GetMethod%2A?displayProperty=nameWithType>, which selects a method based on parameter types; and so on.</span></span>  
  
 <span data-ttu-id="46162-103">Реализация <xref:System.Reflection.Binder> по умолчанию класса предоставляется <xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType> свойством.</span><span class="sxs-lookup"><span data-stu-id="46162-103">A default implementation of the <xref:System.Reflection.Binder> class is provided by the <xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="46162-104">В следующем примере реализуются и демонстрируются все члены `Binder` класса.</span><span class="sxs-lookup"><span data-stu-id="46162-104">The following example implements and demonstrates all members of the `Binder` class.</span></span> <span data-ttu-id="46162-105">Метод `CanConvertFrom` Private находит совместимые типы для заданного типа.</span><span class="sxs-lookup"><span data-stu-id="46162-105">The private method `CanConvertFrom` finds compatible types for a given type.</span></span>  
  
 [!code-cpp[Binder_1#1](~/samples/snippets/cpp/VS_Snippets_CLR/Binder_1/CPP/binder.cpp#1)]
 [!code-csharp[Binder_1#1](~/samples/snippets/csharp/VS_Snippets_CLR/Binder_1/CS/binder.cs#1)]
 [!code-vb[Binder_1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Binder_1/VB/binder.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="46162-106">При наследовании из <see cref="T:System.Reflection.Binder" />необходимо переопределить следующие члены: <see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />, <see cref="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)" />, <see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" />, <see cref="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])" /> <see cref="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])" />, и <see cref="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" />.</span><span class="sxs-lookup"><span data-stu-id="46162-106">When you inherit from <see cref="T:System.Reflection.Binder" />, you must override the following members: <see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />, <see cref="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)" />, <see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" />, <see cref="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])" />, <see cref="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])" />, and <see cref="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" />.</span></span></para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Binder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Binder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="46162-107">Инициализирует новый экземпляр класса <see cref="T:System.Reflection.Binder" />.</span><span class="sxs-lookup"><span data-stu-id="46162-107">Initializes a new instance of the <see cref="T:System.Reflection.Binder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46162-108">Этот конструктор вызывается конструкторами производных классов для инициализации состояния в этом типе.</span><span class="sxs-lookup"><span data-stu-id="46162-108">This constructor is called by the constructors of derived classes, to initialize state in this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindToField">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.FieldInfo BindToField (System.Reflection.BindingFlags bindingAttr, System.Reflection.FieldInfo[] match, object value, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo BindToField(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.FieldInfo[] match, object value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BindToField (bindingAttr As BindingFlags, match As FieldInfo(), value As Object, culture As CultureInfo) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::FieldInfo ^ BindToField(System::Reflection::BindingFlags bindingAttr, cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ match, System::Object ^ value, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member BindToField : System.Reflection.BindingFlags * System.Reflection.FieldInfo[] * obj * System.Globalization.CultureInfo -&gt; System.Reflection.FieldInfo" Usage="binder.BindToField (bindingAttr, match, value, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="match" Type="System.Reflection.FieldInfo[]" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="46162-109">Побитовое сочетание значений <see cref="T:System.Reflection.BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="46162-109">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span></span></param>
        <param name="match"><span data-ttu-id="46162-110">Набор полей, которые являются кандидатами для сопоставления.</span><span class="sxs-lookup"><span data-stu-id="46162-110">The set of fields that are candidates for matching.</span></span> <span data-ttu-id="46162-111">Например, если объект <see cref="T:System.Reflection.Binder" /> используется методом <see cref="Overload:System.Type.InvokeMember" />, этот параметр указывает набор полей, определенных в отражении как возможные соответствия, как правило в связи с тем, что они имеют правильное имя члена.</span><span class="sxs-lookup"><span data-stu-id="46162-111">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of fields that reflection has determined to be possible matches, typically because they have the correct member name.</span></span> <span data-ttu-id="46162-112">Реализация по умолчанию, предоставленная свойством <see cref="P:System.Type.DefaultBinder" />, изменяет порядок этого массива.</span><span class="sxs-lookup"><span data-stu-id="46162-112">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span></span></param>
        <param name="value"><span data-ttu-id="46162-113">Значение поля, используемое для нахождения соответствующего поля.</span><span class="sxs-lookup"><span data-stu-id="46162-113">The field value used to locate a matching field.</span></span></param>
        <param name="culture"><span data-ttu-id="46162-114">Экземпляр класса <see cref="T:System.Globalization.CultureInfo" />, который используется для управления приведения типов данных в реализациях связывателя, выполняющих приведение типов.</span><span class="sxs-lookup"><span data-stu-id="46162-114">An instance of <see cref="T:System.Globalization.CultureInfo" /> that is used to control the coercion of data types, in binder implementations that coerce types.</span></span> <span data-ttu-id="46162-115">Если параметр <paramref name="culture" /> имеет значение <see langword="null" />, для текущего потока используется объект <see cref="T:System.Globalization.CultureInfo" />.</span><span class="sxs-lookup"><span data-stu-id="46162-115">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span>  
  
<span data-ttu-id="46162-116">Примечание.   Например, если в реализации связывателя допускается приведение строкового типа к числовому, этот параметр необходим для преобразования значения типа <see langword="String" />, представляющего число 1000, в значение типа <see langword="Double" />, поскольку в разных языках и региональных параметрах значение 1000 представляется по-разному.</span><span class="sxs-lookup"><span data-stu-id="46162-116">Note   For example, if a binder implementation allows coercion of string values to numeric types, this parameter is necessary to convert a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, because 1000 is represented differently by different cultures.</span></span> <span data-ttu-id="46162-117">Связыватель по умолчанию не выполняет подобного преобразования строковых типов.</span><span class="sxs-lookup"><span data-stu-id="46162-117">The default binder does not do such string coercions.</span></span></param>
        <summary><span data-ttu-id="46162-118">Выбирает поле из заданного набора полей с учетом заданных критериев.</span><span class="sxs-lookup"><span data-stu-id="46162-118">Selects a field from the given set of fields, based on the specified criteria.</span></span></summary>
        <returns><span data-ttu-id="46162-119">Соответствующее поле.</span><span class="sxs-lookup"><span data-stu-id="46162-119">The matching field.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46162-120">Если `bindingAttr` не включает <xref:System.Reflection.BindingFlags.SetField?displayProperty=nameWithType>, реализация связывателя <xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType> по умолчанию, предоставляемая, просто возвращает первый `match`элемент.</span><span class="sxs-lookup"><span data-stu-id="46162-120">If `bindingAttr` does not include <xref:System.Reflection.BindingFlags.SetField?displayProperty=nameWithType>, the default binder implementation provided by <xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType> simply returns the first element of `match`.</span></span> <span data-ttu-id="46162-121">Выбор не выполняется.</span><span class="sxs-lookup"><span data-stu-id="46162-121">No selection is done.</span></span>  
  
 <span data-ttu-id="46162-122">Этот метод управляет привязкой, <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>предоставляемой.</span><span class="sxs-lookup"><span data-stu-id="46162-122">This method controls the binding provided by <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="46162-123">В связывателе по умолчанию параметр <paramref name="bindingAttr" /> содержит флаг <see cref="F:System.Reflection.BindingFlags.SetField" />, а параметр <paramref name="match" /> — несколько полей, в равной мере соответствующих параметру <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="46162-123">For the default binder, <paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="match" /> contains multiple fields that are equally good matches for <paramref name="value" />.</span></span> <span data-ttu-id="46162-124">Например, параметр <paramref name="value" /> содержит объект <c>MyClass</c>, который реализует интерфейс <c>IMyClass</c>, а объект <paramref name="match" /> содержит поле типа <c>MyClass</c> и поле типа <c>IMyClass</c>.</span><span class="sxs-lookup"><span data-stu-id="46162-124">For example, <paramref name="value" /> contains a <c>MyClass</c> object that implements the <c>IMyClass</c> interface, and <paramref name="match" /> contains a field of type <c>MyClass</c> and a field of type <c>IMyClass</c>.</span></span></exception>
        <exception cref="T:System.MissingFieldException"><span data-ttu-id="46162-125">В связывателе по умолчанию параметр <paramref name="bindingAttr" /> содержит флаг <see cref="F:System.Reflection.BindingFlags.SetField" />, а параметр <paramref name="match" /> не содержит полей, которые могут принимать значение <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="46162-125">For the default binder, <paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="match" /> contains no fields that can accept <paramref name="value" />.</span></span></exception>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="46162-126">В связывателе по умолчанию параметр <paramref name="bindingAttr" /> содержит флаг <see cref="F:System.Reflection.BindingFlags.SetField" />, а параметр <paramref name="match" /> имеет значение <see langword="null" /> или является пустым массивом.</span><span class="sxs-lookup"><span data-stu-id="46162-126">For the default binder, <paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="match" /> is <see langword="null" /> or an empty array.</span></span>  
  
<span data-ttu-id="46162-127">-или-</span><span class="sxs-lookup"><span data-stu-id="46162-127">-or-</span></span> 
 <span data-ttu-id="46162-128">Параметр <paramref name="bindingAttr" /> содержит флаг <see cref="F:System.Reflection.BindingFlags.SetField" />, а параметр <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="46162-128"><paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
    <Member MemberName="BindToMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodBase BindToMethod (System.Reflection.BindingFlags bindingAttr, System.Reflection.MethodBase[] match, ref object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] names, out object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodBase BindToMethod(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.MethodBase[] match, object[]&amp; args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] names, [out] object&amp; state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BindToMethod (bindingAttr As BindingFlags, match As MethodBase(), ByRef args As Object(), modifiers As ParameterModifier(), culture As CultureInfo, names As String(), ByRef state As Object) As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::MethodBase ^ BindToMethod(System::Reflection::BindingFlags bindingAttr, cli::array &lt;System::Reflection::MethodBase ^&gt; ^ match, cli::array &lt;System::Object ^&gt; ^ % args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ names, [Runtime::InteropServices::Out] System::Object ^ % state);" />
      <MemberSignature Language="F#" Value="abstract member BindToMethod : System.Reflection.BindingFlags * System.Reflection.MethodBase[] * Object[] * System.Reflection.ParameterModifier[] * System.Globalization.CultureInfo * string[] * obj -&gt; System.Reflection.MethodBase" Usage="binder.BindToMethod (bindingAttr, match, args, modifiers, culture, names, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="match" Type="System.Reflection.MethodBase[]" />
        <Parameter Name="args" Type="System.Object[]" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="names" Type="System.String[]" />
        <Parameter Name="state" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="46162-129">Побитовое сочетание значений <see cref="T:System.Reflection.BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="46162-129">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span></span></param>
        <param name="match"><span data-ttu-id="46162-130">Набор методов, являющихся кандидатами для сопоставления.</span><span class="sxs-lookup"><span data-stu-id="46162-130">The set of methods that are candidates for matching.</span></span> <span data-ttu-id="46162-131">Например, если объект <see cref="T:System.Reflection.Binder" /> используется методом <see cref="Overload:System.Type.InvokeMember" />, этот параметр указывает набор методов, определенных в отражении как возможные соответствия, как правило в связи с тем, что они имеют правильное имя члена.</span><span class="sxs-lookup"><span data-stu-id="46162-131">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of methods that reflection has determined to be possible matches, typically because they have the correct member name.</span></span> <span data-ttu-id="46162-132">Реализация по умолчанию, предоставленная свойством <see cref="P:System.Type.DefaultBinder" />, изменяет порядок этого массива.</span><span class="sxs-lookup"><span data-stu-id="46162-132">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span></span></param>
        <param name="args"><span data-ttu-id="46162-133">Переданные аргументы.</span><span class="sxs-lookup"><span data-stu-id="46162-133">The arguments that are passed in.</span></span> <span data-ttu-id="46162-134">Связыватель может изменить порядок аргументов в этом массиве, например связыватель по умолчанию изменяет порядок аргументов в том случае, если этот порядок отличается от порядка по позиции аргументов и определяется параметром <paramref name="names" />.</span><span class="sxs-lookup"><span data-stu-id="46162-134">The binder can change the order of the arguments in this array; for example, the default binder changes the order of arguments if the <paramref name="names" /> parameter is used to specify an order other than positional order.</span></span> <span data-ttu-id="46162-135">Если в реализации связывателя выполняется приведение типов аргументов, могут также изменяться типы и значения аргументов.</span><span class="sxs-lookup"><span data-stu-id="46162-135">If a binder implementation coerces argument types, the types and values of the arguments can be changed as well.</span></span></param>
        <param name="modifiers"><span data-ttu-id="46162-136">Массив модификаторов параметров, позволяющий привязке работать с сигнатурами параметров, в которых были изменены типы.</span><span class="sxs-lookup"><span data-stu-id="46162-136">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span></span> <span data-ttu-id="46162-137">В реализации по умолчанию для связывателя этот параметр не используется.</span><span class="sxs-lookup"><span data-stu-id="46162-137">The default binder implementation does not use this parameter.</span></span></param>
        <param name="culture"><span data-ttu-id="46162-138">Экземпляр класса <see cref="T:System.Globalization.CultureInfo" />, который используется для управления приведения типов данных в реализациях связывателя, выполняющих приведение типов.</span><span class="sxs-lookup"><span data-stu-id="46162-138">An instance of <see cref="T:System.Globalization.CultureInfo" /> that is used to control the coercion of data types, in binder implementations that coerce types.</span></span> <span data-ttu-id="46162-139">Если параметр <paramref name="culture" /> имеет значение <see langword="null" />, для текущего потока используется объект <see cref="T:System.Globalization.CultureInfo" />.</span><span class="sxs-lookup"><span data-stu-id="46162-139">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span>  
  
<span data-ttu-id="46162-140">Примечание.   Например, если в реализации связывателя допускается приведение строкового типа к числовому, этот параметр необходим для преобразования значения типа <see langword="String" />, представляющего число 1000, в значение типа <see langword="Double" />, поскольку в разных языках и региональных параметрах значение 1000 представляется по-разному.</span><span class="sxs-lookup"><span data-stu-id="46162-140">Note   For example, if a binder implementation allows coercion of string values to numeric types, this parameter is necessary to convert a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, because 1000 is represented differently by different cultures.</span></span> <span data-ttu-id="46162-141">Связыватель по умолчанию не выполняет подобного преобразования строковых типов.</span><span class="sxs-lookup"><span data-stu-id="46162-141">The default binder does not do such string coercions.</span></span></param>
        <param name="names"><span data-ttu-id="46162-142">Имена параметров, если они должны учитываться при сопоставлении, либо значение <see langword="null" />, если аргументы должны считаться чисто позиционными.</span><span class="sxs-lookup"><span data-stu-id="46162-142">The parameter names, if parameter names are to be considered when matching, or <see langword="null" /> if arguments are to be treated as purely positional.</span></span> <span data-ttu-id="46162-143">Например, необходимо использовать имена параметров в том случае, если аргументы не передаются в порядке по их позиции.</span><span class="sxs-lookup"><span data-stu-id="46162-143">For example, parameter names must be used if arguments are not supplied in positional order.</span></span></param>
        <param name="state"><span data-ttu-id="46162-144">После возврата из этого метода параметр <paramref name="state" /> содержит предоставленный связывателем объект, который отслеживает изменение порядка аргументов.</span><span class="sxs-lookup"><span data-stu-id="46162-144">After the method returns, <paramref name="state" /> contains a binder-provided object that keeps track of argument reordering.</span></span> <span data-ttu-id="46162-145">Связыватель создает этот объект и является его единственным объектом-получателем.</span><span class="sxs-lookup"><span data-stu-id="46162-145">The binder creates this object, and the binder is the sole consumer of this object.</span></span> <span data-ttu-id="46162-146">Если параметр <paramref name="state" /> не равен <see langword="null" /> в результате возврата из метода <see langword="BindToMethod" />, необходимо передать параметр <paramref name="state" /> в метод <see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" />, чтобы восстановить исходный порядок параметра <paramref name="args" />, например, с целью получить возможность извлекать значения параметров <see langword="ref" /> (в Visual Basic — параметров <see langword="ByRef" />).</span><span class="sxs-lookup"><span data-stu-id="46162-146">If <paramref name="state" /> is not <see langword="null" /> when <see langword="BindToMethod" /> returns, you must pass <paramref name="state" /> to the <see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" /> method if you want to restore <paramref name="args" /> to its original order, for example, so that you can retrieve the values of <see langword="ref" /> parameters (<see langword="ByRef" /> parameters in Visual Basic).</span></span></param>
        <summary><span data-ttu-id="46162-147">Выбирает вызываемый метод из данного набора методов в зависимости от переданных аргументов.</span><span class="sxs-lookup"><span data-stu-id="46162-147">Selects a method to invoke from the given set of methods, based on the supplied arguments.</span></span></summary>
        <returns><span data-ttu-id="46162-148">Соответствующий метод.</span><span class="sxs-lookup"><span data-stu-id="46162-148">The matching method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46162-149">Связыватель по умолчанию учитывает оба параметра, значения и `params` массивы (`ParamArray` массивы в Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="46162-149">The default binder takes into account both parameters that have values and `params` arrays (`ParamArray` arrays in Visual Basic).</span></span> <span data-ttu-id="46162-150">Поэтому совпадение можно найти в случаях, когда `args` и `match` не содержат одинаковое число элементов.</span><span class="sxs-lookup"><span data-stu-id="46162-150">Thus, it is possible to find a match in cases where `args` and `match` do not contain the same number of elements.</span></span>  
  
 <span data-ttu-id="46162-151">Связыватель позволяет клиенту сопоставлять массив аргументов обратно к его исходной форме, если массив аргументов был обработан с помощью <xref:System.Reflection.Binder.BindToMethod%2A>.</span><span class="sxs-lookup"><span data-stu-id="46162-151">The binder enables a client to map the array of arguments back to its original form if the argument array has been manipulated by <xref:System.Reflection.Binder.BindToMethod%2A>.</span></span> <span data-ttu-id="46162-152">Используйте эту возможность повторного сопоставления, чтобы получить аргументы по ссылке при наличии таких аргументов.</span><span class="sxs-lookup"><span data-stu-id="46162-152">Use this remap capability to get back by-reference arguments when such arguments are present.</span></span> <span data-ttu-id="46162-153">При передаче аргументов по имени связыватель переупорядочивает массив аргументов.</span><span class="sxs-lookup"><span data-stu-id="46162-153">When you pass arguments by name, the binder reorders the argument array.</span></span> <span data-ttu-id="46162-154">Параметр отслеживает изменение порядка аргументов, тем самым позволяя <xref:System.Reflection.Binder.ReorderArgumentArray%2A> методу связывателя переупорядочивать массив аргументов в исходную форму. `state`</span><span class="sxs-lookup"><span data-stu-id="46162-154">The `state` parameter keeps track of argument reordering, thus enabling the binder's <xref:System.Reflection.Binder.ReorderArgumentArray%2A> method to reorder the argument array to its original form.</span></span>  
  
 <span data-ttu-id="46162-155"><xref:System.Reflection.Binder.BindToMethod%2A> Метод используется<xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> методом.</span><span class="sxs-lookup"><span data-stu-id="46162-155">The <xref:System.Reflection.Binder.BindToMethod%2A> method is used by the <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="46162-156">В связывателе по умолчанию параметр <paramref name="match" /> содержит несколько методов, которые являются соответствующими значениям параметра <paramref name="args" /> с одинаковой степенью соответствия.</span><span class="sxs-lookup"><span data-stu-id="46162-156">For the default binder, <paramref name="match" /> contains multiple methods that are equally good matches for <paramref name="args" />.</span></span> <span data-ttu-id="46162-157">Например, параметр <paramref name="args" /> содержит объект <c>MyClass</c>, который реализует интерфейс <c>IMyClass</c>, а объект <paramref name="match" /> содержит метод, который принимает объект <c>MyClass</c> и метод, который принимает объект <c>IMyClass</c>.</span><span class="sxs-lookup"><span data-stu-id="46162-157">For example, <paramref name="args" /> contains a <c>MyClass</c> object that implements the <c>IMyClass</c> interface, and <paramref name="match" /> contains a method that takes <c>MyClass</c> and a method that takes <c>IMyClass</c>.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="46162-158">В связывателе по умолчанию параметр <paramref name="match" /> не содержит методов, которые могут принимать аргументы, переданные в параметре <paramref name="args" />.</span><span class="sxs-lookup"><span data-stu-id="46162-158">For the default binder, <paramref name="match" /> contains no methods that can accept the arguments supplied in <paramref name="args" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46162-159">В связывателе по умолчанию параметр <paramref name="match" /> имеет значение <see langword="null" /> или является пустым массивом.</span><span class="sxs-lookup"><span data-stu-id="46162-159">For the default binder, <paramref name="match" /> is <see langword="null" /> or an empty array.</span></span></exception>
        <altmember cref="T:System.Reflection.MethodBase" />
      </Docs>
    </Member>
    <Member MemberName="CanChangeType">
      <MemberSignature Language="C#" Value="public virtual bool CanChangeType (object value, Type type, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanChangeType(object value, class System.Type type, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.CanChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanChangeType(System::Object ^ value, Type ^ type, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member CanChangeType : obj * Type * System.Globalization.CultureInfo -&gt; bool&#xA;override this.CanChangeType : obj * Type * System.Globalization.CultureInfo -&gt; bool" Usage="binder.CanChangeType (value, type, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="xamarinios-10.8" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="xamarinios-10.8" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="2" FrameworkAlternate="xamarinios-10.8" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="type">To be added.</param>
        <param name="culture">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public abstract object ChangeType (object value, Type type, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChangeType(object value, class System.Type type, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ChangeType(System::Object ^ value, Type ^ type, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member ChangeType : obj * Type * System.Globalization.CultureInfo -&gt; obj" Usage="binder.ChangeType (value, type, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="46162-160">Объект, для которого должен быть изменен параметр <see langword="Type" />.</span><span class="sxs-lookup"><span data-stu-id="46162-160">The object to change into a new <see langword="Type" />.</span></span></param>
        <param name="type"><span data-ttu-id="46162-161">Новый параметр <see langword="Type" />, к которому будет приведен параметр <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="46162-161">The new <see langword="Type" /> that <paramref name="value" /> will become.</span></span></param>
        <param name="culture"><span data-ttu-id="46162-162">Экземпляр объекта <see cref="T:System.Globalization.CultureInfo" />, используемый для управления приведением типов данных.</span><span class="sxs-lookup"><span data-stu-id="46162-162">An instance of <see cref="T:System.Globalization.CultureInfo" /> that is used to control the coercion of data types.</span></span> <span data-ttu-id="46162-163">Если параметр <paramref name="culture" /> имеет значение <see langword="null" />, для текущего потока используется объект <see cref="T:System.Globalization.CultureInfo" />.</span><span class="sxs-lookup"><span data-stu-id="46162-163">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span>  
  
<span data-ttu-id="46162-164">Примечание.  Например, этот параметр необходим для преобразования значения типа <see langword="String" />, представляющего число 1000, в значение типа <see langword="Double" />, поскольку в разных языках и региональных параметрах значение 1000 представляется по-разному.</span><span class="sxs-lookup"><span data-stu-id="46162-164">Note   For example, this parameter is necessary to convert a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, because 1000 is represented differently by different cultures.</span></span></param>
        <summary><span data-ttu-id="46162-165">Меняет тип заданного <see langword="Object" /> на заданный <see langword="Type" />.</span><span class="sxs-lookup"><span data-stu-id="46162-165">Changes the type of the given <see langword="Object" /> to the given <see langword="Type" />.</span></span></summary>
        <returns><span data-ttu-id="46162-166">Объект, содержащий заданное значение в качестве нового типа.</span><span class="sxs-lookup"><span data-stu-id="46162-166">An object that contains the given value as the new type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46162-167">Отражение моделирует правила специальных возможностей системы общих типов.</span><span class="sxs-lookup"><span data-stu-id="46162-167">Reflection models the accessibility rules of the common type system.</span></span> <span data-ttu-id="46162-168">Например, если вызывающий объект находится в той же сборке, вызывающему объекту не требуются специальные разрешения для внутренних членов.</span><span class="sxs-lookup"><span data-stu-id="46162-168">For example, if the caller is in the same assembly, the caller does not need special permissions for internal members.</span></span> <span data-ttu-id="46162-169">В противном случае вызывающему объекту требуется <xref:System.Security.Permissions.ReflectionPermission>.</span><span class="sxs-lookup"><span data-stu-id="46162-169">Otherwise, the caller needs <xref:System.Security.Permissions.ReflectionPermission>.</span></span> <span data-ttu-id="46162-170">Это согласуется с поиском защищенных, закрытых и других элементов.</span><span class="sxs-lookup"><span data-stu-id="46162-170">This is consistent with lookup of members that are protected, private, and so on.</span></span>  
  
 <span data-ttu-id="46162-171">Основным принципом является то `ChangeType` , что следует выполнять только расширяющее преобразование, которое никогда не теряет данные.</span><span class="sxs-lookup"><span data-stu-id="46162-171">The general principle is that `ChangeType` should perform only widening coercions, which never lose data.</span></span> <span data-ttu-id="46162-172">Примером расширяющего приведения является приведение значения, которое является 32-битным целым числом со знаком, к значению, которое является 64-битным целым числом со знаком.</span><span class="sxs-lookup"><span data-stu-id="46162-172">An example of a widening coercion is coercing a value that is a 32-bit signed integer to a value that is a 64-bit signed integer.</span></span> <span data-ttu-id="46162-173">Это отличается от сужающего приведения, что может привести к потере данных.</span><span class="sxs-lookup"><span data-stu-id="46162-173">This is distinguished from a narrowing coercion, which may lose data.</span></span> <span data-ttu-id="46162-174">Примером сужающего приведения является преобразование 64-битового целого числа со знаком в 32-разрядное целое число со знаком.</span><span class="sxs-lookup"><span data-stu-id="46162-174">An example of a narrowing coercion is coercing a 64-bit signed integer to a 32-bit signed integer.</span></span>  
  
 <span data-ttu-id="46162-175">В следующей таблице перечислены преобразования, выполняемые по умолчанию `ChangeType`.</span><span class="sxs-lookup"><span data-stu-id="46162-175">The following table lists the coercions performed by the default `ChangeType`.</span></span>  
  
|<span data-ttu-id="46162-176">Тип исходного значения</span><span class="sxs-lookup"><span data-stu-id="46162-176">Source type</span></span>|<span data-ttu-id="46162-177">Тип результирующего значения</span><span class="sxs-lookup"><span data-stu-id="46162-177">Target type</span></span>|  
|-----------------|-----------------|  
|<span data-ttu-id="46162-178">Любой тип</span><span class="sxs-lookup"><span data-stu-id="46162-178">Any type</span></span>|<span data-ttu-id="46162-179">Его базовый тип.</span><span class="sxs-lookup"><span data-stu-id="46162-179">Its base type.</span></span>|  
|<span data-ttu-id="46162-180">Любой тип</span><span class="sxs-lookup"><span data-stu-id="46162-180">Any type</span></span>|<span data-ttu-id="46162-181">Интерфейс, который он реализует.</span><span class="sxs-lookup"><span data-stu-id="46162-181">The interface it implements.</span></span>|  
|<span data-ttu-id="46162-182">Char</span><span class="sxs-lookup"><span data-stu-id="46162-182">Char</span></span>|<span data-ttu-id="46162-183">UInt16, UInt32, Int32, UInt64, Int64, Single, Double</span><span class="sxs-lookup"><span data-stu-id="46162-183">UInt16, UInt32, Int32, UInt64, Int64, Single, Double</span></span>|  
|<span data-ttu-id="46162-184">Byte</span><span class="sxs-lookup"><span data-stu-id="46162-184">Byte</span></span>|<span data-ttu-id="46162-185">Char, UInt16, Int16, UInt32, Int32, UInt64, Int64, Single, Double</span><span class="sxs-lookup"><span data-stu-id="46162-185">Char, UInt16, Int16, UInt32, Int32, UInt64, Int64, Single, Double</span></span>|  
|<span data-ttu-id="46162-186">SByte</span><span class="sxs-lookup"><span data-stu-id="46162-186">SByte</span></span>|<span data-ttu-id="46162-187">Int16, Int32, Int64, Single, Double</span><span class="sxs-lookup"><span data-stu-id="46162-187">Int16, Int32, Int64, Single, Double</span></span>|  
|<span data-ttu-id="46162-188">UInt16</span><span class="sxs-lookup"><span data-stu-id="46162-188">UInt16</span></span>|<span data-ttu-id="46162-189">UInt32, Int32, UInt64, Int64, Single, Double</span><span class="sxs-lookup"><span data-stu-id="46162-189">UInt32, Int32, UInt64, Int64, Single, Double</span></span>|  
|<span data-ttu-id="46162-190">Int16</span><span class="sxs-lookup"><span data-stu-id="46162-190">Int16</span></span>|<span data-ttu-id="46162-191">Int32, Int64, Single, Double</span><span class="sxs-lookup"><span data-stu-id="46162-191">Int32, Int64, Single, Double</span></span>|  
|<span data-ttu-id="46162-192">UInt32</span><span class="sxs-lookup"><span data-stu-id="46162-192">UInt32</span></span>|<span data-ttu-id="46162-193">UInt64, Int64, Single, Double</span><span class="sxs-lookup"><span data-stu-id="46162-193">UInt64, Int64, Single, Double</span></span>|  
|<span data-ttu-id="46162-194">Int32</span><span class="sxs-lookup"><span data-stu-id="46162-194">Int32</span></span>|<span data-ttu-id="46162-195">Int64, Single, Double</span><span class="sxs-lookup"><span data-stu-id="46162-195">Int64, Single, Double</span></span>|  
|<span data-ttu-id="46162-196">UInt64</span><span class="sxs-lookup"><span data-stu-id="46162-196">UInt64</span></span>|<span data-ttu-id="46162-197">Single, Double</span><span class="sxs-lookup"><span data-stu-id="46162-197">Single, Double</span></span>|  
|<span data-ttu-id="46162-198">Int64</span><span class="sxs-lookup"><span data-stu-id="46162-198">Int64</span></span>|<span data-ttu-id="46162-199">Single, Double</span><span class="sxs-lookup"><span data-stu-id="46162-199">Single, Double</span></span>|  
|<span data-ttu-id="46162-200">Single</span><span class="sxs-lookup"><span data-stu-id="46162-200">Single</span></span>|<span data-ttu-id="46162-201">Double</span><span class="sxs-lookup"><span data-stu-id="46162-201">Double</span></span>|  
|<span data-ttu-id="46162-202">Не является ссылкой</span><span class="sxs-lookup"><span data-stu-id="46162-202">Non-reference</span></span>|<span data-ttu-id="46162-203">По ссылке.</span><span class="sxs-lookup"><span data-stu-id="46162-203">By-reference.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReorderArgumentArray">
      <MemberSignature Language="C#" Value="public abstract void ReorderArgumentArray (ref object[] args, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReorderArgumentArray(object[]&amp; args, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ReorderArgumentArray (ByRef args As Object(), state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ReorderArgumentArray(cli::array &lt;System::Object ^&gt; ^ % args, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member ReorderArgumentArray : Object[] * obj -&gt; unit" Usage="binder.ReorderArgumentArray (args, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Object[]" RefType="ref" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="46162-204">Фактически переданные аргументы.</span><span class="sxs-lookup"><span data-stu-id="46162-204">The actual arguments that are passed in.</span></span> <span data-ttu-id="46162-205">Допускается изменение как типов, так и значений этих аргументов.</span><span class="sxs-lookup"><span data-stu-id="46162-205">Both the types and values of the arguments can be changed.</span></span></param>
        <param name="state"><span data-ttu-id="46162-206">Объект, предоставленный связывателем и отслеживающий изменение порядка аргументов.</span><span class="sxs-lookup"><span data-stu-id="46162-206">A binder-provided object that keeps track of argument reordering.</span></span></param>
        <summary><span data-ttu-id="46162-207">При возвращении из <see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" /> приводит аргумент <paramref name="args" /> к виду, в котором он был передан из <see langword="BindToMethod" />.</span><span class="sxs-lookup"><span data-stu-id="46162-207">Upon returning from <see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />, restores the <paramref name="args" /> argument to what it was when it came from <see langword="BindToMethod" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46162-208">Среда CLR вызывает этот метод, если `state` не `null` после возврата из `BindToMethod`.</span><span class="sxs-lookup"><span data-stu-id="46162-208">The common language runtime calls this method if `state` is not `null` after a return from `BindToMethod`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodBase SelectMethod (System.Reflection.BindingFlags bindingAttr, System.Reflection.MethodBase[] match, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodBase SelectMethod(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.MethodBase[] match, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SelectMethod (bindingAttr As BindingFlags, match As MethodBase(), types As Type(), modifiers As ParameterModifier()) As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::MethodBase ^ SelectMethod(System::Reflection::BindingFlags bindingAttr, cli::array &lt;System::Reflection::MethodBase ^&gt; ^ match, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member SelectMethod : System.Reflection.BindingFlags * System.Reflection.MethodBase[] * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.MethodBase" Usage="binder.SelectMethod (bindingAttr, match, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="match" Type="System.Reflection.MethodBase[]" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="46162-209">Побитовое сочетание значений <see cref="T:System.Reflection.BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="46162-209">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span></span></param>
        <param name="match"><span data-ttu-id="46162-210">Набор методов, являющихся кандидатами для сопоставления.</span><span class="sxs-lookup"><span data-stu-id="46162-210">The set of methods that are candidates for matching.</span></span> <span data-ttu-id="46162-211">Например, если объект <see cref="T:System.Reflection.Binder" /> используется методом <see cref="Overload:System.Type.InvokeMember" />, этот параметр указывает набор методов, определенных в отражении как возможные соответствия, как правило в связи с тем, что они имеют правильное имя члена.</span><span class="sxs-lookup"><span data-stu-id="46162-211">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of methods that reflection has determined to be possible matches, typically because they have the correct member name.</span></span> <span data-ttu-id="46162-212">Реализация по умолчанию, предоставленная свойством <see cref="P:System.Type.DefaultBinder" />, изменяет порядок этого массива.</span><span class="sxs-lookup"><span data-stu-id="46162-212">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span></span></param>
        <param name="types"><span data-ttu-id="46162-213">Типы параметров, используемые для нахождения соответствующего метода.</span><span class="sxs-lookup"><span data-stu-id="46162-213">The parameter types used to locate a matching method.</span></span></param>
        <param name="modifiers"><span data-ttu-id="46162-214">Массив модификаторов параметров, позволяющий привязке работать с сигнатурами параметров, в которых были изменены типы.</span><span class="sxs-lookup"><span data-stu-id="46162-214">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span></span></param>
        <summary><span data-ttu-id="46162-215">В зависимости от типа аргумента выбирает вызываемый метод из данного набора методов.</span><span class="sxs-lookup"><span data-stu-id="46162-215">Selects a method from the given set of methods, based on the argument type.</span></span></summary>
        <returns><span data-ttu-id="46162-216">Соответствующий метод, если таковой обнаружен; в обратном случае — значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="46162-216">The matching method, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46162-217">Этот метод должен возвращать `null` значение, если ни один из методов не соответствует критериям.</span><span class="sxs-lookup"><span data-stu-id="46162-217">This method should return `null` if no method matches the criteria.</span></span> <span data-ttu-id="46162-218">Этот метод управляет выбором, предоставленным `GetConstructor` методами и `GetMethod` в `Type`.</span><span class="sxs-lookup"><span data-stu-id="46162-218">This method controls the selection provided by the `GetConstructor` and `GetMethod` methods on `Type`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="46162-219">В связывателе по умолчанию параметр <paramref name="match" /> содержит несколько методов, которые являются соответствующими значениям типов параметров, определенных параметром <paramref name="types" />, с одинаковой степенью соответствия.</span><span class="sxs-lookup"><span data-stu-id="46162-219">For the default binder, <paramref name="match" /> contains multiple methods that are equally good matches for the parameter types described by <paramref name="types" />.</span></span> <span data-ttu-id="46162-220">Например, массив в параметре <paramref name="types" /> содержит объект <see cref="T:System.Type" /> для <c>MyClass</c>, а массив в параметре <paramref name="match" /> содержит метод, который принимает базовый класс объектов <c>MyClass</c>, а также метод, который принимает интерфейс, реализуемый классом <c>MyClass</c>.</span><span class="sxs-lookup"><span data-stu-id="46162-220">For example, the array in <paramref name="types" /> contains a <see cref="T:System.Type" /> object for <c>MyClass</c> and the array in <paramref name="match" /> contains a method that takes a base class of <c>MyClass</c> and a method that takes an interface that <c>MyClass</c> implements.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46162-221">В связывателе по умолчанию параметр <paramref name="match" /> имеет значение <see langword="null" /> или является пустым массивом.</span><span class="sxs-lookup"><span data-stu-id="46162-221">For the default binder, <paramref name="match" /> is <see langword="null" /> or an empty array.</span></span>  
  
<span data-ttu-id="46162-222">-или-</span><span class="sxs-lookup"><span data-stu-id="46162-222">-or-</span></span> 
<span data-ttu-id="46162-223">Тип элемента параметра <paramref name="types" /> является производным от типа <see cref="T:System.Type" />, но не типом <see langword="RuntimeType" />.</span><span class="sxs-lookup"><span data-stu-id="46162-223">An element of <paramref name="types" /> derives from <see cref="T:System.Type" />, but is not of type <see langword="RuntimeType" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SelectProperty">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.PropertyInfo SelectProperty (System.Reflection.BindingFlags bindingAttr, System.Reflection.PropertyInfo[] match, Type returnType, Type[] indexes, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo SelectProperty(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.PropertyInfo[] match, class System.Type returnType, class System.Type[] indexes, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SelectProperty (bindingAttr As BindingFlags, match As PropertyInfo(), returnType As Type, indexes As Type(), modifiers As ParameterModifier()) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::PropertyInfo ^ SelectProperty(System::Reflection::BindingFlags bindingAttr, cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ match, Type ^ returnType, cli::array &lt;Type ^&gt; ^ indexes, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member SelectProperty : System.Reflection.BindingFlags * System.Reflection.PropertyInfo[] * Type * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.PropertyInfo" Usage="binder.SelectProperty (bindingAttr, match, returnType, indexes, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="match" Type="System.Reflection.PropertyInfo[]" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="indexes" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="46162-224">Побитовое сочетание значений <see cref="T:System.Reflection.BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="46162-224">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span></span></param>
        <param name="match"><span data-ttu-id="46162-225">Набор свойств, являющихся кандидатами для сопоставления.</span><span class="sxs-lookup"><span data-stu-id="46162-225">The set of properties that are candidates for matching.</span></span> <span data-ttu-id="46162-226">Например, если объект <see cref="T:System.Reflection.Binder" /> используется методом <see cref="Overload:System.Type.InvokeMember" />, этот параметр указывает набор свойств, определенных в отражении как возможные соответствия, как правило в связи с тем, что они имеют правильное имя члена.</span><span class="sxs-lookup"><span data-stu-id="46162-226">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of properties that reflection has determined to be possible matches, typically because they have the correct member name.</span></span> <span data-ttu-id="46162-227">Реализация по умолчанию, предоставленная свойством <see cref="P:System.Type.DefaultBinder" />, изменяет порядок этого массива.</span><span class="sxs-lookup"><span data-stu-id="46162-227">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span></span></param>
        <param name="returnType"><span data-ttu-id="46162-228">Возвращаемое значение, которым должно обладать соответствующее свойство.</span><span class="sxs-lookup"><span data-stu-id="46162-228">The return value the matching property must have.</span></span></param>
        <param name="indexes"><span data-ttu-id="46162-229">Типы индексов свойства, поиск которого выполняется.</span><span class="sxs-lookup"><span data-stu-id="46162-229">The index types of the property being searched for.</span></span> <span data-ttu-id="46162-230">Используется для свойств индекса, например указателя для класса.</span><span class="sxs-lookup"><span data-stu-id="46162-230">Used for index properties such as the indexer for a class.</span></span></param>
        <param name="modifiers"><span data-ttu-id="46162-231">Массив модификаторов параметров, позволяющий привязке работать с сигнатурами параметров, в которых были изменены типы.</span><span class="sxs-lookup"><span data-stu-id="46162-231">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span></span></param>
        <summary><span data-ttu-id="46162-232">Выбирает свойство из заданного набора свойств в зависимости от заданных критериев.</span><span class="sxs-lookup"><span data-stu-id="46162-232">Selects a property from the given set of properties, based on the specified criteria.</span></span></summary>
        <returns><span data-ttu-id="46162-233">Соответствующее свойство.</span><span class="sxs-lookup"><span data-stu-id="46162-233">The matching property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46162-234">Этот метод управляет выбором, предоставленным `GetProperty` методом для. `Type`</span><span class="sxs-lookup"><span data-stu-id="46162-234">This method controls the selection provided by the `GetProperty` method on `Type`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="46162-235">В связывателе по умолчанию параметр <paramref name="match" /> содержит несколько свойств, которые одинаково хорошо соответствуют значениям параметров <paramref name="returnType" /> и <paramref name="indexes" />.</span><span class="sxs-lookup"><span data-stu-id="46162-235">For the default binder, <paramref name="match" /> contains multiple properties that are equally good matches for <paramref name="returnType" /> and <paramref name="indexes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="46162-236">В связывателе по умолчанию параметр <paramref name="match" /> имеет значение <see langword="null" /> или является пустым массивом.</span><span class="sxs-lookup"><span data-stu-id="46162-236">For the default binder, <paramref name="match" /> is <see langword="null" /> or an empty array.</span></span></exception>
        <altmember cref="T:System.Reflection.PropertyInfo" />
      </Docs>
    </Member>
  </Members>
</Type>
