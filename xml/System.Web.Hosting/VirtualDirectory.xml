<Type Name="VirtualDirectory" FullName="System.Web.Hosting.VirtualDirectory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1002583061ed87b4df852e7c333294866e2ee7c0" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70498330" /></Metadata><TypeSignature Language="C#" Value="public abstract class VirtualDirectory : System.Web.Hosting.VirtualFileBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VirtualDirectory extends System.Web.Hosting.VirtualFileBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.VirtualDirectory" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class VirtualDirectory&#xA;Inherits VirtualFileBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualDirectory abstract : System::Web::Hosting::VirtualFileBase" />
  <TypeSignature Language="F#" Value="type VirtualDirectory = class&#xA;    inherit VirtualFileBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Hosting.VirtualFileBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представление объекта каталога в виртуальном файле или пространстве ресурса.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualDirectory> Класс является базовым классом для объектов, представляющих каталоги в виртуальной файловой системе. Как правило, для каждого <xref:System.Web.Hosting.VirtualDirectory> <xref:System.Web.Hosting.VirtualPathProvider> потомка класса в веб-приложении реализуется потомок класса.  
  
   
  
## Examples  
 В следующем примере кода показана <xref:System.Web.Hosting.VirtualDirectory> реализация класса, возвращающая сведения о виртуальном <xref:System.Data.DataSet> каталоге, хранящиеся в объекте. Этот код работает с примерами кода для <xref:System.Web.Hosting.VirtualPathProvider> классов и <xref:System.Web.Hosting.VirtualFile> , чтобы предоставить виртуальные ресурсы из хранилища данных <xref:System.Data.DataSet> , которое загружается в объект. Полные инструкции по компиляции и запуску примера см. в разделе "пример" <xref:System.Web.Hosting.VirtualPathProvider> раздела Обзор класса.  
  
 Этот пример состоит из <xref:System.Web.Hosting.VirtualDirectory> двух частей: реализации класса и XML-файла данных, используемого для заполнения <xref:System.Data.DataSet> объекта.  
  
 Первый пример кода является реализацией <xref:System.Web.Hosting.VirtualDirectory> класса. В конструкторе он использует метод для пользовательского <xref:System.Web.Hosting.VirtualPathProvider> объекта, чтобы <xref:System.Data.DataSet> вернуть объект. Затем он выполняет поиск <xref:System.Data.DataSet> объекта, чтобы получить сведения о каталоге, связанные с указанным виртуальным путем.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#30](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SampleVirtualDirectory.cs#30)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#30](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SampleVirtualDirectory.vb#30)]  
  
 Вторым примером является XML-файл данных, используемый для заполнения <xref:System.Data.DataSet> объекта, возвращаемого пользовательским <xref:System.Web.Hosting.VirtualPathProvider> объектом. Эти XML-данные используются для демонстрации использования <xref:System.Web.Hosting.VirtualPathProvider>классов, <xref:System.Web.Hosting.VirtualFile>и <xref:System.Web.Hosting.VirtualDirectory> для получения данных из внешних данных и не предназначены для представления рабочего хранилища данных.  
  
```  
<?xml version="1.0" encoding="utf-8" ?>  
  <resource type="dir"   
    path="/vrDir"   
    parentPath=""   
    content="">  
    <resource type="file"   
      path="/vrDir/Level1FileA.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileA." >  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level1FileB.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileB.">  
    </resource>  
    <resource type="dir"   
      path="/vrDir/Level2DirA"   
      parentPath="/vrDir"   
      content="">  
        <resource type="file"   
          path="/vrDir/Level2DirA/Level2FileA.vrf"   
          parentPath="/vrDir/Level2DirA"   
          content="This is the content of file Level2FileA." >  
        </resource>  
        <resource type="file"   
          path="/vrDir/Level2DirA/Level2FileB.vrf"  
          parentPath="/vrDir/Level2DirA"   
          content="This is the content of file Level2FileB.">  
        </resource>  
    </resource>  
    <resource type="dir"   
      path="/vrDir/Level2DirB"   
      parentPath="/vrDir"   
      content="">  
      <resource type="file"   
        path="/vrDir/Level2DirB/Level2FileA.vrf"   
        parentPath="/vrDir/Level2DirB"   
        content="This is the content of file Level2FileA." >  
      </resource>  
      <resource type="file"   
        path="/vrDir/Level2DirB/Level2FileB.vrf"  
        parentPath="/vrDir/Level2DirB"   
        content="This is the content of file Level2FileB.">  
       </resource>  
    </resource>  
  </resource>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>При наследовании от <see cref="T:System.Web.Hosting.VirtualDirectory" /> класса <see cref="T:System.Collections.IEnumerable" /> необходимо <see cref="P:System.Web.Hosting.VirtualDirectory.Children" />переопределить свойства, и <see cref="P:System.Web.Hosting.VirtualDirectory.Files" /> , чтобы <see cref="P:System.Web.Hosting.VirtualDirectory.Directories" />возвращался объект, реализующий интерфейс.  
  
Если структура виртуального каталога содержит от умеренного до большого количества виртуальных ресурсов, следует позаботиться о том, чтобы при перечислении виртуального каталога использовалось минимальное количество системных ресурсов, вызвав <see cref="P:System.Web.Hosting.VirtualDirectory.Directories" />метод <see cref="P:System.Web.Hosting.VirtualDirectory.Children" />, или <see cref="P:System.Web.Hosting.VirtualDirectory.Files" />свойства.</para></block>
    <altmember cref="T:System.Web.Hosting.VirtualFile" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VirtualDirectory (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualDirectory.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; VirtualDirectory(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="new System.Web.Hosting.VirtualDirectory : string -&gt; System.Web.Hosting.VirtualDirectory" Usage="new System.Web.Hosting.VirtualDirectory virtualPath" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Виртуальный путь к ресурсу, представленному данным экземпляром.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.Hosting.VirtualDirectory" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Следующий пример кода является реализацией <xref:System.Web.Hosting.VirtualDirectory.%23ctor%2A> конструктора, который получает сведения о виртуальном файле <xref:System.Data.DataSet> из объекта, предоставленного пользовательским <xref:System.Web.Hosting.VirtualPathProvider> объектом. Он включает `GetData` метод, используемый для заполнения <xref:System.Web.Hosting.VirtualDirectory> экземпляра. Полный код, необходимый для выполнения примера, см. в разделе "пример" <xref:System.Web.Hosting.VirtualDirectory> раздела Обзор класса.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#31](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SampleVirtualDirectory.cs#31)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#31](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SampleVirtualDirectory.vb#31)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public abstract System.Collections.IEnumerable Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable Children" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualDirectory.Children" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Children As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::IEnumerable ^ Children { System::Collections::IEnumerable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Children : System.Collections.IEnumerable" Usage="System.Web.Hosting.VirtualDirectory.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получение списка файлов и подкаталогов, содержащихся в виртуальном каталоге.</summary>
        <value>Объект, реализующий интерфейс <see cref="T:System.Collections.IEnumerable" />, содержащий объекты <see cref="T:System.Web.Hosting.VirtualFile" /> и <see cref="T:System.Web.Hosting.VirtualDirectory" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство содержит объекты <xref:System.Web.Hosting.VirtualDirectory>  и, представляющие файлы и каталоги, содержащиеся в этом виртуальном каталоге. <xref:System.Web.Hosting.VirtualFile> <xref:System.Web.Hosting.VirtualDirectory.Children%2A> Чтобы получить только <xref:System.Web.Hosting.VirtualFile> объекты, <xref:System.Web.Hosting.VirtualDirectory.Files%2A> используйте свойство. Чтобы получить только <xref:System.Web.Hosting.VirtualDirectory> объекты, <xref:System.Web.Hosting.VirtualDirectory.Directories%2A> используйте свойство.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Если структура виртуального каталога содержит от среднего до большого количества виртуальных ресурсов, следует позаботиться о минимальном потреблении системных ресурсов путем перечисления виртуального каталога.</para></block>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
    <Member MemberName="Directories">
      <MemberSignature Language="C#" Value="public abstract System.Collections.IEnumerable Directories { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable Directories" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualDirectory.Directories" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Directories As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::IEnumerable ^ Directories { System::Collections::IEnumerable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Directories : System.Collections.IEnumerable" Usage="System.Web.Hosting.VirtualDirectory.Directories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получение списка всех подкаталогов, находящихся в данном каталоге.</summary>
        <value>Объект, реализующий интерфейс <see cref="T:System.Collections.IEnumerable" />, содержащий объекты <see cref="T:System.Web.Hosting.VirtualDirectory" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualDirectory.Directories%2A> Свойство содержит <xref:System.Web.Hosting.VirtualDirectory>  объекты, представляющие каталоги, содержащиеся в этом виртуальном каталоге. Чтобы получить <xref:System.Web.Hosting.VirtualFile> объекты, <xref:System.Web.Hosting.VirtualDirectory.Files%2A> используйте свойство. Чтобы получить оба <xref:System.Web.Hosting.VirtualFile> объекта <xref:System.Web.Hosting.VirtualDirectory> и, используйте <xref:System.Web.Hosting.VirtualDirectory.Children%2A> свойство.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Если структура виртуального каталога содержит от среднего до большого количества виртуальных ресурсов, следует позаботиться о минимальном потреблении системных ресурсов путем перечисления виртуального каталога.</para></block>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
    <Member MemberName="Files">
      <MemberSignature Language="C#" Value="public abstract System.Collections.IEnumerable Files { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable Files" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualDirectory.Files" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Files As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::IEnumerable ^ Files { System::Collections::IEnumerable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Files : System.Collections.IEnumerable" Usage="System.Web.Hosting.VirtualDirectory.Files" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получение списка всех файлов, находящихся в данном каталоге.</summary>
        <value>Объект, реализующий интерфейс <see cref="T:System.Collections.IEnumerable" />, содержащий объекты <see cref="T:System.Web.Hosting.VirtualFile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Hosting.VirtualDirectory.Files%2A> Свойство содержит <xref:System.Web.Hosting.VirtualFile>  объекты, представляющие файлы, содержащиеся в этом виртуальном каталоге. Чтобы получить <xref:System.Web.Hosting.VirtualDirectory> объекты, <xref:System.Web.Hosting.VirtualDirectory.Directories%2A> используйте свойство. Чтобы получить оба <xref:System.Web.Hosting.VirtualFile> объекта <xref:System.Web.Hosting.VirtualDirectory> и, используйте <xref:System.Web.Hosting.VirtualDirectory.Children%2A> свойство.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Если структура виртуального каталога содержит от умеренного до большого количества виртуальных ресурсов, следует позаботиться о том, чтобы ограничить количество системных ресурсов, потребляемых при перечислении виртуального каталога.</para></block>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
    <Member MemberName="IsDirectory">
      <MemberSignature Language="C#" Value="public override bool IsDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualDirectory.IsDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDirectory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDirectory { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirectory : bool" Usage="System.Web.Hosting.VirtualDirectory.IsDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получение значения, указывающего на виртуальный ресурс, который необходимо рассматривать как каталог.</summary>
        <value>Всегда <see langword="true" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
      </Docs>
    </Member>
  </Members>
</Type>
