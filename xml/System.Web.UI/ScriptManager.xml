<Type Name="ScriptManager" FullName="System.Web.UI.ScriptManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8b1534efa09fa19430aaa1c97410a4b6882b73ec" /><Meta Name="ms.sourcegitcommit" Value="9a6da88bd5455e8274257ca7ad259b42f1de114f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/22/2019" /><Meta Name="ms.locfileid" Value="66008194" /></Metadata><TypeSignature Language="C#" Value="public class ScriptManager : System.Web.UI.Control, System.Web.UI.IPostBackDataHandler, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ScriptManager extends System.Web.UI.Control implements class System.Web.UI.IPostBackDataHandler, class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ScriptManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ScriptManager&#xA;Inherits Control&#xA;Implements IPostBackDataHandler, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScriptManager : System::Web::UI::Control, System::Web::UI::IPostBackDataHandler, System::Web::UI::IPostBackEventHandler" />
  <TypeSignature Language="F#" Value="type ScriptManager = class&#xA;    inherit Control&#xA;    interface IPostBackDataHandler&#xA;    interface IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Scripts")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.ScriptManagerDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(EmbeddedResourceFinder), "System.Web.Resources.ScriptManager.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.ScriptManagerDesigner, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", System.ComponentModel.ToolboxItemFilterType.Require)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Управляет библиотекой скриптов AJAX для ASP.NET и файлами скриптов, частичной отрисовкой страниц и созданием прокси-класса клиента для веб-служб и служб приложений.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В этом разделе.  
  
-   [Введение](#introduction)  
  
-   [Частичная отрисовка страницы](#partial_page_rendering)  
  
-   [С помощью элемента управления ScriptManager с главными страницами, пользовательские элементы управления и других дочерних компонентов](#using_the_scriptmanager_control_with_master_pages__user_controls__and_other_child_components)  
  
-   [Управление скриптами и регистрация](#script_management_and_registration)  
  
-   [Ссылки веб-службы](#web_service_references)  
  
-   [Локализация](#localization)  
  
-   [Обработка ошибок](#error_handling)  
  
-   [Декларативный синтаксис](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Вступление  
 <xref:System.Web.UI.ScriptManager> Элемент управления является основным для возможностей Ajax в ASP.NET. Элемент управления управляет всеми ресурсами ASP.NET Ajax на странице. Сюда входят загрузка библиотеки Microsoft Ajax-скриптов в браузере и координация частичных обновлений, которые включаются с помощью <xref:System.Web.UI.UpdatePanel> элементов управления. Кроме того <xref:System.Web.UI.ScriptManager> управления позволяет выполнять следующее:  
  
-   Зарегистрируйте скрипт, совместимый с частичного обновления страницы. Чтобы управлять зависимостями между скриптом и основной библиотеки, любой сценарий, который вы регистрируете загружается после скрипта библиотеки Microsoft Ajax.  
  
-   Укажите того выпуска или отладки скриптов отправляются в браузер.  
  
-   Предоставлять доступ к методам веб-службы из сценария путем регистрации веб-служб с <xref:System.Web.UI.ScriptManager> элемента управления.  
  
-   Предоставить доступ для проверки подлинности, ролей и профиля ASP.NET службы приложений из клиентского скрипта, регистрируя эти службы с <xref:System.Web.UI.ScriptManager> элемента управления.  
  
-   Отображение конкретного языка ECMAScript (JavaScript),, и [строка](https://msdn.microsoft.com/library/517a1992-3295-484e-9b9c-07ebfd8fe4db) функции в браузере.  
  
-   Доступ к ресурсы локализации для файлов внедренных скриптов или автономные файлы сценария с помощью <xref:System.Web.UI.ScriptReferenceBase.ResourceUICultures%2A> свойство <xref:System.Web.UI.ScriptReference> элемента управления.  
  
-   Зарегистрировать серверные элементы управления, которые реализуют <xref:System.Web.UI.IExtenderControl> или <xref:System.Web.UI.IScriptControl> взаимодействует с <xref:System.Web.UI.ScriptManager> управления позволит сценария, необходимых клиентских компонентов и поведения.  
  
<a name="partial_page_rendering"></a>   
## <a name="partial-page-rendering"></a>Частичная отрисовка страницы  
 Возможность поддержки частичной отрисовки страницы ASP.NET осуществляется по следующим параметрам:  
  
-   <xref:System.Web.UI.ScriptManager> Элемента управления <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> свойство должно быть `true` (значение по умолчанию).  
  
-   Должен существовать по крайней мере один <xref:System.Web.UI.UpdatePanel> управления на этой странице.  
  
-   <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> Свойство должно быть `true` (значение по умолчанию). Если <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> свойство не задано явным образом, его значение зависит от возможностей браузера.  
  
 Можно переопределить значение <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> свойство во время выполнения во время или до страницы <xref:System.Web.UI.Control.Init> событий. Если попытаться изменить это свойство после страницы <xref:System.Web.UI.Control.Init> возникло событие, <xref:System.InvalidOperationException> возникает исключение.  
  
 Если поддерживается частичная отрисовка страницы, <xref:System.Web.UI.ScriptManager> управления предоставляет сценарий для реализации асинхронных обратных вызовов и выполнения частичного обновления страницы. Области страницы, чтобы обновить обозначаются с помощью <xref:System.Web.UI.UpdatePanel> элементов управления. <xref:System.Web.UI.ScriptManager> Элемент управления обрабатывает асинхронную обратную передачу и обновляет только области страницы, которые должны быть обновлены. Дополнительные сведения о частичной отрисовке страницы, см. в разделе [Общие сведения об отрисовке частичных страниц](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49). Дополнительные сведения об условиях, которые вызывают обновление, см. в разделе [Обзор элемента управления UpdatePanel](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a).  
  
<a name="using_the_scriptmanager_control_with_master_pages__user_controls__and_other_child_components"></a>   
## <a name="using-the-scriptmanager-control-with-master-pages-user-controls-and-other-child-components"></a>С помощью элемента управления ScriptManager с главными страницами, пользовательские элементы управления и других дочерних компонентов  
 Страница может содержать только один <xref:System.Web.UI.ScriptManager> элемента управления в его иерархии. Для регистрации служб и сценариев для вложенных страниц, пользовательские элементы управления или компоненты при уже имеет родительскую страницу <xref:System.Web.UI.ScriptManager> управления, используйте <xref:System.Web.UI.ScriptManagerProxy> элемента управления. Дополнительные сведения см. в разделе [использование элемента управления UpdatePanel с главными страницами](https://msdn.microsoft.com/library/b1c974d5-a6b2-4bb3-a3cc-61dd9dc0e1d6)  
  
<a name="script_management_and_registration"></a>   
## <a name="script-management-and-registration"></a>Управление скриптами и регистрация  
 <xref:System.Web.UI.ScriptManager> Управления позволяет зарегистрировать скрипт, который затем отображается как часть страницы. <xref:System.Web.UI.ScriptManager> Методы регистрации элемента управления можно разбить на три категории:  
  
-   Методы регистрации, что скрипт зависимостей в библиотеке Microsoft Ajax.  
  
-   Методы регистрации, не зависящие от библиотеки Microsoft Ajax, но совместимыми с <xref:System.Web.UI.UpdatePanel> элементов управления.  
  
-   Методы регистрации, которые поддерживают работа с <xref:System.Web.UI.UpdatePanel> элементов управления.  
  
 Дополнительные сведения о том, как создать и использовать скрипт технологии Ajax в ASP.NET см. в разделе [Создание пользовательского клиентского скрипта с помощью библиотеки Microsoft Ajax](https://msdn.microsoft.com/library/285e3a65-b42e-42c5-952d-baf184057899).  
  
### <a name="registering-script-that-is-dependent-on-the-microsoft-ajax-library"></a>Регистрация скрипта, который зависит от библиотеки Microsoft Ajax  
 Можно использовать следующие методы для регистрации файлов скриптов способом, который гарантирует, что поддерживаются все зависимости библиотеки Microsoft Ajax.  
  
|Метод|Определение|  
|------------|----------------|  
|<xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A>|Регистрирует серверный элемент управления, который реализует <xref:System.Web.UI.IScriptControl> интерфейс, который используется для определения [Sys.Component](https://msdn.microsoft.com/library/6fba3595-e425-4e48-b4e9-fc16a0272381) клиентского объекта. <xref:System.Web.UI.ScriptManager> Элемент управления отображает скрипт, поддерживающий клиентского объекта.|  
|<xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A>|Регистрирует серверный элемент управления, который реализует <xref:System.Web.UI.IExtenderControl> интерфейс, который используется для определения [Sys.Component](https://msdn.microsoft.com/library/6fba3595-e425-4e48-b4e9-fc16a0272381) клиентского объекта. <xref:System.Web.UI.ScriptManager> Элемент управления отображает скрипт, поддерживающий клиентского объекта.|  
  
### <a name="registering-partial-page-update-compatible-scripts"></a>Регистрация сценариев, совместимых с частичного обновления страницы  
 Можно использовать следующие методы для регистрации файлов скриптов, которые не зависят от библиотеки Microsoft Ajax, но совместимыми с <xref:System.Web.UI.UpdatePanel> элементов управления. Эти методы соответствуют подобных методов <xref:System.Web.UI.ClientScriptManager> элемента управления. Если вы являетесь скрипт отрисовки для использования внутри <xref:System.Web.UI.UpdatePanel> управления, убедитесь, что вызывать методы из <xref:System.Web.UI.ScriptManager> элемента управления.  
  
|Метод|Определение|  
|------------|----------------|  
|<xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A>|Добавляет значение в массив JavaScript. Если массив не существует, он создается.|  
|<xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A>|Выполняет визуализацию `script` элемент после открытия страницы `<form>` тега. Он указывается как строковый параметр.|  
|<xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A>|Выполняет визуализацию `script` элемент после открытия страницы `<form>` тега. Содержимое скрипта указывается путем задания `src` атрибут URL-адрес, указывающий на файл скрипта.|  
|<xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A>|Выполняет визуализацию `script` элемент после открытия страницы `<form>` тега. Содержимое сценария определяется именем ресурса в сборке. `src` Атрибут автоматически заполняется URL-адрес с помощью вызова обработчика HTTP, возвращает именованный скрипт из сборки.|  
|<xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A>|Выполняет визуализацию пару атрибут пользовательское имя/значение (expando) в разметке для указанного элемента управления.|  
|<xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A>|Отображает скрытое поле.|  
|<xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A>|Регистрирует скрипт, который выполняется в ответ на `form` элемента `submit` событий. `onSubmit` Атрибут ссылается на указанный скрипт.|  
|<xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A>|Выполняет визуализацию стартовый блок скрипта непосредственно перед закрывающим страницы `</form>` тега. Скрипт для подготовки к просмотру задается как строковый параметр.|  
  
 При регистрации методов, указываются тип или пару ключей для данного сценария. Если сценарий с одной и той же парой ключ/типа уже зарегистрирован, не регистрируется новый скрипт. Аналогично, если регистрация скрипта с парой имя/ресурс типа, уже существует, `script` элемент, ссылающийся на ресурс повторно не добавляется. При регистрации атрибута expando ранее зарегистрированный атрибута, создается исключение. Разрешается повторная регистрация значений массива.  
  
 При вызове <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> или <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> метод, исключить регистрацию встраиваемые функции при выполнении скрипта. Вместо этого следует Регистрируйте скрипт, который содержит определения функций, таких как обработчики событий или пользовательских классов для приложения.  
  
### <a name="registration-methods-for-updatepanel-controls"></a>Методы регистрации для элементов управления UpdatePanel  
 Можно использовать следующие методы для настройки частичного обновления страницы при использовании <xref:System.Web.UI.UpdatePanel> элементов управления.  
  
|Метод|Определение|  
|------------|----------------|  
|<xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>|Регистрирует элемент управления в качестве триггера асинхронных обратных передач.|  
|<xref:System.Web.UI.ScriptManager.RegisterDataItem%2A>|Посылает пользовательские данные элементу управления во время частичной отрисовки страницы.|  
|<xref:System.Web.UI.ScriptManager.RegisterDispose%2A>|Регистрирует скрипт удаления для элемента управления, который находится внутри <xref:System.Web.UI.UpdatePanel> элемента управления. Скрипт выполняется, когда элемент управления <xref:System.Web.UI.UpdatePanel> изменяется или удаляется. Метод dispose используется для клиентских компонентов, которые являются частью библиотеки Microsoft Ajax и которые должны освобождать ресурсы, когда компонент больше не используется.|  
|<xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A>|Регистрирует элемент управления как триггер для полной обратной передачи. Этот метод используется для элементов управления внутри <xref:System.Web.UI.UpdatePanel> элемент управления, в противном случае выполняет асинхронные обратные передачи.|  
  
<a name="web_service_references"></a>   
## <a name="web-service-references"></a>Ссылки веб-службы  
 Можно зарегистрировать веб-служба для вызова из клиентского скрипта, создав <xref:System.Web.UI.ServiceReference> объекта и добавления его в <xref:System.Web.UI.ScriptManager.Services%2A> коллекцию <xref:System.Web.UI.ScriptManager> элемента управления. ASP.NET создает объект прокси клиента для каждого <xref:System.Web.UI.ServiceReference> объекта в <xref:System.Web.UI.ScriptManager.Services%2A> коллекции. Можно программно добавить <xref:System.Web.UI.ServiceReference> объектов <xref:System.Web.UI.ScriptManager.Services%2A> коллекции для регистрации веб-служб во время выполнения.  
  
 Дополнительные сведения о том, как получить доступ к веб-служб в скрипте см. в разделе [предоставление доступа к веб-службы для клиентского сценария в ASP.NET AJAX](https://msdn.microsoft.com/library/fe3f6e9e-0acd-44c9-bf0f-0a8598fc13b8) и [вызова веб-служб из клиентского сценария в ASP.NET AJAX](https://msdn.microsoft.com/library/fc06c224-f01a-45be-94af-bd71afbc07b0).  
  
<a name="localization"></a>   
## <a name="localization"></a>Локализация  
 <xref:System.Web.UI.ScriptManager> Создает элемент управления ссылки в отображаемой странице, указывающие на подходящие локализованные файлы скриптов, которые являются либо файлами скриптов, внедренных в сборки или файлы автономного сценария.  
  
 Когда <xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A> свойству `true`, <xref:System.Web.UI.ScriptManager> элемент управления извлекает локализованные ресурсы (например, локализованные строки) для текущего языка и региональных параметров, если они существуют. <xref:System.Web.UI.ScriptManager> Элемент управления предоставляет следующие функциональные возможности для использования локализованных ресурсов:  
  
-   **Файлы, которые внедряются в сборку скриптов**. <xref:System.Web.UI.ScriptManager> Управления определяет, какой сценарий региональных региональным параметрам или резервный файл для отправки в браузер. Это делается с помощью конкретного языка и региональных параметров <xref:System.Resources.NeutralResourcesLanguageAttribute> атрибут сборки, ресурсы, упакованные в сборке и языка и региональных параметров пользовательского интерфейса браузера (если таковые имеются).  
  
-   **Автономные файлы сценария**. <xref:System.Web.UI.ScriptManager> Управления определяет список языков и региональных параметров пользовательского интерфейса, которые поддерживаются с помощью <xref:System.Web.UI.ScriptReferenceBase.ResourceUICultures%2A> свойство <xref:System.Web.UI.ScriptReference> объекта.  
  
-   **В режиме отладки**. <xref:System.Web.UI.ScriptManager> Управления пытается передать файл скрипта конкретного языка и региональных параметров, который содержит отладочные данные. Например, если страница находится в режиме отладки и имеет значение текущего языка и региональных параметров en-MX, элемент управления передает файл скрипта, такие как имя `scriptname`.en-MX.debug.js, если файл существует. Если файл не существует, файл отладки для соответствующей резервному языку подготавливается к просмотру  
  
 Дополнительные сведения о локализации ресурсов см. в разделе [ресурсы локализации для Общие сведения о компоненте библиотеки](https://msdn.microsoft.com/library/e6b15435-57c1-4dd1-9bd3-5d4c509685bb).  
  
<a name="error_handling"></a>   
## <a name="error-handling"></a>Обработка ошибок  
 При возникновении ошибки страницы во время асинхронных обратных вызовов, <xref:System.Web.UI.ScriptManager.AsyncPostBackError> события. Зависит от того, в котором ошибки на сервере отправляются клиенту <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> свойства <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> свойства и пользовательские ошибки раздел файла Web.config. Обратной передачи из элемента управления, который является триггером для [ элемента управления](https://msdn.microsoft.com/library/e15e7ffb-e4b2-4a89-b99e-16624a5861d0).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Декларативный синтаксис  
  
```  
<asp:ScriptManager  
    AllowCustomErrorsRedirect="True|False"  
    AsyncPostBackErrorMessage="string"  
    AsyncPostBackTimeout="integer"  
    AuthenticationService-Path="uri"  
    EnablePageMethods="True|False"  
    EnablePartialRendering="True|False"  
    EnableScriptGlobalization="True|False"  
    EnableScriptLocalization="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    LoadScriptsBeforeUI="True|False"  
    OnAsyncPostBackError="AsyncPostBackError event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnResolveScriptReference="ResolveScriptReference event handler"  
    OnUnload="Unload event handler"  
    ProfileService-LoadProperties="string"  
    ProfileService-Path="uri"  
    RoleService-LoadRoles="True|False"  
    RoleService-Path="uri"  
    runat="server"  
    ScriptMode="Auto|Inherit|Debug|Release"  
    ScriptPath="string"  
    SkinID="string"  
    SupportsPartialRendering="True|False"  
    Visible="True|False"  
>  
        <AuthenticationService  
            Path="uri"  
        />  
        <ProfileService  
            LoadProperties="string"  
            Path="uri"  
        />  
        <RoleService  
            LoadRoles="True|False"  
            Path="uri"  
        />  
        <Scripts>  
            <asp:ScriptReference  
                Assembly="string"  
                IgnoreScriptPath="True|False"  
                Name="string"  
                NotifyScriptLoaded="True|False"  
                Path="string"  
                ResourceUICultures="string"  
                ScriptMode="Auto|Debug|Inherit|Release"  
            />  
        </Scripts>  
        <Services>  
            <asp:ServiceReference  
                InlineScript="True|False"  
                Path="string"  
            />  
        </Services>  
</asp:ScriptManager>  
```  
  
   
  
## Examples  
 В следующих примерах показаны различные сценарии использования <xref:System.Web.UI.ScriptManager> элемента управления.  
  
 **Включение частичного обновления страницы**  
  
 В следующем примере показано, как использовать <xref:System.Web.UI.ScriptManager> элемента управления, чтобы включить частичные обновления. В этом примере <xref:System.Web.UI.WebControls.Calendar> и <xref:System.Web.UI.WebControls.DropDownList> управления находятся внутри <xref:System.Web.UI.UpdatePanel> элемента управления. По умолчанию значение <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> свойство <xref:System.Web.UI.UpdatePanelUpdateMode.Always>, а для параметра <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> свойство `true`. Таким образом дочерние элементы управления панели вызывают асинхронную обратную передачу.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample1CS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample1VB.aspx#1)]  
  
 **Обработка ошибок частичного обновления страницы и регистрации сценария**  
  
 Приведенный ниже показано, как пользовательские обработки ошибки во время частичного обновления страницы. По умолчанию при возникновении ошибки во время частичного обновления страницы, отображается окно сообщения JavaScript. В этом примере показано, как использовать настраиваемую обработку с помощью обработчика ошибок <xref:System.Web.UI.ScriptManager.AsyncPostBackError> событий и установив <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> свойство в обработчике событий. Можно также задать <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> свойство, чтобы указать, как используется в разделе пользовательских ошибок файла Web.config при возникновении ошибки во время частичного обновления страницы. В этом примере значение по умолчанию <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> используется свойство. Это означает, что если файл содержит файл Web.config [customErrors](https://msdn.microsoft.com/library/6c3b53ec-00df-4967-b0fb-351c02867650) элемент, этот элемент определяет способ отображения ошибок. Дополнительные сведения см. в разделе [customErrors (схема параметров ASP.NET) элемент](https://msdn.microsoft.com/library/288c32e2-df1f-4548-abda-de6b4cb989a6).  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.OnAsyncPostBackError#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.OnAsyncPostBackError/CS/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.OnAsyncPostBackError#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.OnAsyncPostBackError/VB/default.aspx#1)]  
  
 **Глобализация дату и время, которые отображаются в браузере**  
  
 В следующем примере показано, как задать <xref:System.Web.UI.ScriptManager.EnableScriptGlobalization%2A> свойства таким образом, клиентский скрипт может отображаться конкретного языка и региональных параметров даты и времени в браузере. В примере `Culture` атрибут [@ Page](https://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) указана директива `auto`. Таким образом первый язык, указанный в параметрах браузера определяет язык и региональные параметры пользовательского интерфейса для страницы. Дополнительные сведения см. в разделе [Практическое руководство. Задайте язык и региональные параметры пользовательского интерфейса для глобализации веб-страниц ASP.NET](https://msdn.microsoft.com/library/76091f86-f967-4687-a40f-de87bd8cc9a0).  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.EnableScriptGlobalization#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.EnableScriptGlobalization/CS/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.EnableScriptGlobalization#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.EnableScriptGlobalization/VB/default.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ScriptManagerProxy" />
    <altmember cref="T:System.Web.UI.UpdatePanel" />
    <altmember cref="T:System.Web.UI.ClientScriptManager" />
    <altmember cref="T:System.Web.UI.ScriptMode" />
    <altmember cref="T:System.Web.UI.ScriptReference" />
    <altmember cref="T:System.Web.UI.ServiceReference" />
    <related type="Article" href="https://msdn.microsoft.com/library/fceeb3c5-c59f-46a9-af4f-b0d7155a1efc">Класс Sys.WebForms.PageRequestManager</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.ScriptManager" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор инициализирует внутренние поля, используемые <xref:System.Web.UI.ScriptManager> управления для отслеживания страниц, управления и сведения о развертывании.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddHistoryPoint">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Создает точку предыдущего состояния и добавляет ее в стек журнала браузера.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эти перегрузки метода позволяют определить состояние сервера и, при необходимости, название записи журнала в браузере. При создании точки предыдущего сериализованные и зашифрованные данные добавляются к URL-адрес веб-страницы и запись добавляется в стек журнала браузера. Данные о состоянии можно использовать для повторного создания страницы при возникновении события навигации любые последующие сервера. Дополнительные сведения см. в разделе [управление браузера журнал с помощью серверных элементов управления](https://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddHistoryPoint">
      <MemberSignature Language="C#" Value="public void AddHistoryPoint (System.Collections.Specialized.NameValueCollection state, string title);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHistoryPoint(class System.Collections.Specialized.NameValueCollection state, string title) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.AddHistoryPoint(System.Collections.Specialized.NameValueCollection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHistoryPoint (state As NameValueCollection, title As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHistoryPoint(System::Collections::Specialized::NameValueCollection ^ state, System::String ^ title);" />
      <MemberSignature Language="F#" Value="member this.AddHistoryPoint : System.Collections.Specialized.NameValueCollection * string -&gt; unit" Usage="scriptManager.AddHistoryPoint (state, title)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="title" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="state">Коллекция пар "ключ-значение", содержащих данные состояния.</param>
        <param name="title">Текст, который будет добавлен в стек журнала браузера в качестве названия состояния.</param>
        <summary>Создает точку предыдущего состояния и добавляет ее в стек журнала браузера, используя указанную коллекцию данных состояния и название состояния.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод позволяет создавать точку предыдущего, если вы хотите сохранить несколько пар ключ значение для данные о состоянии. При создании точки предыдущего сериализованные и зашифрованные данные добавляются к URL-адрес веб-страницы и запись добавляется в стек журнала браузера. Если `title` параметр `null`, заголовок веб-страницы используется в качестве заголовка записи состояния в стек журнала.  
  
 Данные о состоянии можно использовать для повторного создания страницы при возникновении события навигации любые последующие сервера. Дополнительные сведения см. в разделе [управление браузера журнал с помощью серверных элементов управления](https://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHistoryPoint">
      <MemberSignature Language="C#" Value="public void AddHistoryPoint (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHistoryPoint(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.AddHistoryPoint(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHistoryPoint (key As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHistoryPoint(System::String ^ key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddHistoryPoint : string * string -&gt; unit" Usage="scriptManager.AddHistoryPoint (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Ключ из пары "ключ-значение", определяющей состояние веб-страницы.</param>
        <param name="value">Значение из пары "ключ-значение", определяющей состояние веб-страницы.</param>
        <summary>Создает точку предыдущего состояния и добавляет ее в стек журнала браузера, используя указанный ключ состояния и его значение.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод позволяет создавать точку предыдущего, если необходимо сохранить значение, определяющее состояние. При создании точки предыдущего сериализованные и зашифрованные данные добавляются к URL-адрес веб-страницы и запись добавляется в стек журнала браузера. Заголовок веб-страницы используется в качестве заголовка записи состояния в стек журнала.  
  
 Данные о состоянии можно использовать для повторного создания страницы при возникновении события навигации любые последующие сервера. Дополнительные сведения см. в разделе [управление браузера журнал с помощью серверных элементов управления](https://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHistoryPoint">
      <MemberSignature Language="C#" Value="public void AddHistoryPoint (string key, string value, string title);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHistoryPoint(string key, string value, string title) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.AddHistoryPoint(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHistoryPoint (key As String, value As String, title As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHistoryPoint(System::String ^ key, System::String ^ value, System::String ^ title);" />
      <MemberSignature Language="F#" Value="member this.AddHistoryPoint : string * string * string -&gt; unit" Usage="scriptManager.AddHistoryPoint (key, value, title)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="title" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Ключ из пары "ключ-значение", определяющей состояние веб-страницы.</param>
        <param name="value">Значение из пары "ключ-значение", определяющей состояние веб-страницы.</param>
        <param name="title">Текст, который будет добавлен в стек журнала браузера в качестве названия состояния.</param>
        <summary>Создает точку предыдущего состояния и добавляет ее в стек журнала браузера, используя указанный ключ состояния, значение состояния и название состояния.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод можно используйте для создания точки предыдущего, если вы хотите сохранить значение, определяющее состояние и название состояния. При создании точки предыдущего сериализованные и зашифрованные данные добавляются к URL-адрес веб-страницы и запись добавляется в стек журнала браузера. Если `title` параметр `null`, заголовок веб-страницы используется в качестве заголовка записи состояния в стек журнала.  
  
 Данные о состоянии можно использовать для повторного создания страницы при возникновении события навигации любые последующие сервера. Дополнительные сведения см. в разделе [управление браузера журнал с помощью серверных элементов управления](https://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AjaxFrameworkAssembly">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Assembly AjaxFrameworkAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly AjaxFrameworkAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.AjaxFrameworkAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AjaxFrameworkAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ AjaxFrameworkAssembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AjaxFrameworkAssembly : System.Reflection.Assembly" Usage="System.Web.UI.ScriptManager.AjaxFrameworkAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает сборку платформы AJAX, компоненты которой используются на странице.</summary>
        <value>Сборка платформы AJAX.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AjaxFrameworkMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.AjaxFrameworkMode AjaxFrameworkMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.AjaxFrameworkMode AjaxFrameworkMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.AjaxFrameworkMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AjaxFrameworkMode As AjaxFrameworkMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::AjaxFrameworkMode AjaxFrameworkMode { System::Web::UI::AjaxFrameworkMode get(); void set(System::Web::UI::AjaxFrameworkMode value); };" />
      <MemberSignature Language="F#" Value="member this.AjaxFrameworkMode : System.Web.UI.AjaxFrameworkMode with get, set" Usage="System.Web.UI.ScriptManager.AjaxFrameworkMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AjaxFrameworkMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, определяющее способ включения в клиент клиентских скриптов клиентской библиотеки Microsoft Ajax.</summary>
        <value>Значение перечисления <see cref="T:System.Web.UI.AjaxFrameworkMode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.ScriptManager.AjaxFrameworkMode%2A> свойство, чтобы включить все Microsoft Ajax файлы сценариев, чтобы отключить все файлы скрипта Microsoft Ajax или явным образом включить конкретные файлы сценариев.  
  
   
  
## Examples  
 В следующем примере показано, как задать <xref:System.Web.UI.ScriptManager.AjaxFrameworkMode%2A> свойства `Explicit` чтобы указать, что сценарии можно задать явным образом.  
  
```  
<asp:ScriptManager ID="sm1" AjaxFrameworkMode="Explicit" runat="server">   
<Scripts>   
    <asp:ScriptReference Name="MicrosoftAjaxCore.js" />   
    <asp:ScriptReference Name="MicrosoftAjaxComponentModel.js" />    
    <asp:ScriptReference Name="MicrosoftAjaxSerialization.js" />   
    <asp:ScriptReference Name="MicrosoftAjaxNetwork.js" />       
</Scripts>   
</asp:ScriptManager>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.AjaxFrameworkMode" />
      </Docs>
    </Member>
    <Member MemberName="AllowCustomErrorsRedirect">
      <MemberSignature Language="C#" Value="public bool AllowCustomErrorsRedirect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCustomErrorsRedirect" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowCustomErrorsRedirect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowCustomErrorsRedirect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowCustomErrorsRedirect : bool with get, set" Usage="System.Web.UI.ScriptManager.AllowCustomErrorsRedirect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или устанавливает значение, определяющее, используется ли пользовательский раздел ошибок файла Web.config при возникновении ошибки в асинхронной обратной передаче.</summary>
        <value><see langword="true" />, если пользовательские параметры ошибок в файле Web.config используются для определения поведения при ошибке во время асинхронной обратной передачи; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ScriptManager.AsyncPostBackError> Событие возникает при ошибке страницы во время асинхронных обратных вызовов. Как ошибки на сервере, отправляются клиенту зависит от <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> свойства <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> свойства и пользовательские ошибки раздел файла Web.config.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="AsyncPostBackError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.AsyncPostBackErrorEventArgs&gt; AsyncPostBackError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.AsyncPostBackErrorEventArgs&gt; AsyncPostBackError" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.ScriptManager.AsyncPostBackError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AsyncPostBackError As EventHandler(Of AsyncPostBackErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::AsyncPostBackErrorEventArgs ^&gt; ^ AsyncPostBackError;" />
      <MemberSignature Language="F#" Value="member this.AsyncPostBackError : EventHandler&lt;System.Web.UI.AsyncPostBackErrorEventArgs&gt; " Usage="member this.AsyncPostBackError : System.EventHandler&lt;System.Web.UI.AsyncPostBackErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.AsyncPostBackErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при ошибке страницы во время асинхронной обратной передачи.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ScriptManager.AsyncPostBackError> Событие возникает при ошибке страницы во время асинхронных обратных вызовов. Как ошибки на сервере, отправляются клиенту зависит от <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> свойства <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> свойства и пользовательские ошибки раздел файла Web.config.  
  
   
  
## Examples  
 В следующем примере показано, как обрабатывать <xref:System.Web.UI.ScriptManager.AsyncPostBackError> событие <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> свойства (который отправляется клиенту) сообщение об ошибке исключения сервера.  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.AsyncPostBackErrorMessage/CS/ScriptManager_AsyncPostBackErrorMessageCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.AsyncPostBackErrorMessage/VB/ScriptManager_AsyncPostBackErrorMessageVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ScriptManager.OnAsyncPostBackError(System.Web.UI.AsyncPostBackErrorEventArgs)" />
        <altmember cref="P:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="AsyncPostBackErrorMessage">
      <MemberSignature Language="C#" Value="public string AsyncPostBackErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AsyncPostBackErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncPostBackErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AsyncPostBackErrorMessage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncPostBackErrorMessage : string with get, set" Usage="System.Web.UI.ScriptManager.AsyncPostBackErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или устанавливает сообщение об ошибке, посылаемое клиенту, когда во время асинхронной обратной передачи возникает необработанное исключение сервера.</summary>
        <value>Сообщение об ошибке. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ScriptManager.AsyncPostBackError> Событие возникает при ошибке страницы во время асинхронных обратных вызовов. Как ошибки на сервере, отправляются клиенту зависит от <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> свойства <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> свойства и пользовательские ошибки раздел файла Web.config.  
  
   
  
## Examples  
 В следующем примере показано, как обрабатывать <xref:System.Web.UI.ScriptManager.AsyncPostBackError> событие <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> свойства (который отправляется клиенту) сообщение об ошибке исключения сервера.  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.AsyncPostBackErrorMessage/CS/ScriptManager_AsyncPostBackErrorMessageCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.AsyncPostBackErrorMessage/VB/ScriptManager_AsyncPostBackErrorMessageVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.ScriptManager.AsyncPostBackError" />
      </Docs>
    </Member>
    <Member MemberName="AsyncPostBackSourceElementID">
      <MemberSignature Language="C#" Value="public string AsyncPostBackSourceElementID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AsyncPostBackSourceElementID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.AsyncPostBackSourceElementID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncPostBackSourceElementID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AsyncPostBackSourceElementID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncPostBackSourceElementID : string" Usage="System.Web.UI.ScriptManager.AsyncPostBackSourceElementID" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IScriptManagerInternal.AsyncPostBackSourceElementID</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает уникальный идентификатор элемента управления, вызвавшего асинхронную обратную передачу.</summary>
        <value>Идентификатор элемента управления, если он имеет идентификатор; в противном случае — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ScriptManager.AsyncPostBackSourceElementID%2A> Свойство содержит значение идентификатор элемента управления, вызвавшего асинхронную обратную передачу, может принимать одно из следующих:  
  
-   Обратной передачи из элемента управления, находящегося внутри <xref:System.Web.UI.UpdatePanel> свойство <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> свойству `true` (по умолчанию).  
  
-   Обратной передачи из элемента управления, который является триггером для <xref:System.Web.UI.UpdatePanel> элемента управления.  
  
-   Обратной передачи из элемента управления, который регистрируется путем вызова <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> метод <xref:System.Web.UI.ScriptManager> элемента управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="AsyncPostBackTimeout">
      <MemberSignature Language="C#" Value="public int AsyncPostBackTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AsyncPostBackTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.AsyncPostBackTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncPostBackTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AsyncPostBackTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncPostBackTimeout : int with get, set" Usage="System.Web.UI.ScriptManager.AsyncPostBackTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(90)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или устанавливает значение, указывающее время, в секундах, перед тайм-аутом асинхронной обратной передачи, если отклик не получен.</summary>
        <value>Целое число, представляющее тайм-аут в секундах. Значение по умолчанию — 90 секунд.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationService">
      <MemberSignature Language="C#" Value="public System.Web.UI.AuthenticationServiceManager AuthenticationService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.AuthenticationServiceManager AuthenticationService" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.AuthenticationService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationService As AuthenticationServiceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::AuthenticationServiceManager ^ AuthenticationService { System::Web::UI::AuthenticationServiceManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationService : System.Web.UI.AuthenticationServiceManager" Usage="System.Web.UI.ScriptManager.AuthenticationService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AuthenticationServiceManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Web.UI.AuthenticationServiceManager" />, связанный с текущим экземпляром <see cref="T:System.Web.UI.ScriptManager" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.AuthenticationServiceManager" /> для текущего экземпляра <see cref="T:System.Web.UI.ScriptManager" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.AuthenticationServiceManager> Службу проверки подлинности, который регистрируется с помощью страницы представляет объект, который возвращается этим свойством. Служба проверки подлинности могут быть определены в <xref:System.Web.UI.ScriptManager> управления или связанным <xref:System.Web.UI.ScriptManagerProxy> элемента управления.  
  
 Можно использовать службу проверки подлинности ASP.NET или использовать пользовательскую службу проверки подлинности. Можно добавить пользовательскую службу в разметке, включив `AuthenticationService` элемент внутри `asp:ScriptManager` элемента на странице, как показано в следующем примере.  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <AuthenticationService Path="MyAuthenticationService.asmx" />  
</asp:ScriptManager>  
```  
  
 Можно также программным способом настроить <xref:System.Web.UI.AuthenticationServiceManager> объекта. С помощью службы регистрируются <xref:System.Web.UI.ScriptManager> элемента управления во время страницы <xref:System.Web.UI.Control.PreRender> жизненного цикла рабочей области.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientNavigateHandler">
      <MemberSignature Language="C#" Value="public string ClientNavigateHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientNavigateHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.ClientNavigateHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientNavigateHandler As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClientNavigateHandler { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientNavigateHandler : string with get, set" Usage="System.Web.UI.ScriptManager.ClientNavigateHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя метода, в котором на стороне клиента обрабатывается событие <see href="https://msdn.microsoft.com/library/79ac04af-18b4-4106-9ab7-9cb10fbd0b93">Sys.Application.navigate</see>.</summary>
        <value>Имя метода, который обрабатывает [Sys.Application.navigate](https://msdn.microsoft.com/library/79ac04af-18b4-4106-9ab7-9cb10fbd0b93) событий на стороне клиента.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompositeScript">
      <MemberSignature Language="C#" Value="public System.Web.UI.CompositeScriptReference CompositeScript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.CompositeScriptReference CompositeScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.CompositeScript" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompositeScript As CompositeScriptReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::CompositeScriptReference ^ CompositeScript { System::Web::UI::CompositeScriptReference ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompositeScript : System.Web.UI.CompositeScriptReference" Usage="System.Web.UI.ScriptManager.CompositeScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.CompositeScriptReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает ссылку на составной скрипт, поддерживающий веб-страницу.</summary>
        <value>Ссылка на составной скрипт.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения см. в разделе [объединение клиентских скриптов в составной скрипт](https://msdn.microsoft.com/library/d0f608d0-b4c8-4795-990b-ede68c1239b3).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyPageUrl">
      <MemberSignature Language="C#" Value="public virtual string EmptyPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EmptyPageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyPageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyPageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyPageUrl : string with get, set" Usage="System.Web.UI.ScriptManager.EmptyPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor(typeof(System.Web.UI.Design.UrlEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает URL-адрес пустой веб-страницы.</summary>
        <value>URL-адрес, используемый в том случае, если целевая веб-страница пуста.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ScriptManager.EmptyPageUrl%2A> Свойство поддерживает журнал обозревателя Ajax.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCdn">
      <MemberSignature Language="C#" Value="public bool EnableCdn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCdn" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnableCdn" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCdn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableCdn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCdn : bool with get, set" Usage="System.Web.UI.ScriptManager.EnableCdn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет, загружает ли текущая страница ссылки на клиентские скрипты из путей CDN (Content Delivery Network, сеть доставки содержимого).</summary>
        <value>Значение <see langword="true" />, если ссылки на клиентские скрипты загружаются из путей CDN; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство не задано `true` при выборе <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> для `true` уже.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCdnFallback">
      <MemberSignature Language="C#" Value="public bool EnableCdnFallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCdnFallback" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnableCdnFallback" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableCdnFallback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableCdnFallback { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCdnFallback : bool with get, set" Usage="System.Web.UI.ScriptManager.EnableCdnFallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Разрешает загружать локальную копию скрипта в случае, если сеть доставки содержимого (CDN) недоступна.</summary>
        <value>Значение <see langword="true" />, если резервная CDN доступна; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableHistory">
      <MemberSignature Language="C#" Value="public bool EnableHistory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableHistory" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnableHistory" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableHistory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableHistory { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableHistory : bool with get, set" Usage="System.Web.UI.ScriptManager.EnableHistory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, поддерживает ли веб-страница управление точками предыдущих состояний.</summary>
        <value>Значение <see langword="true" />, если веб-страница поддерживает добавление точек предыдущих состояний в стек журнала браузера, в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.ScriptManager.EnableHistory%2A> свойство, чтобы включить журнал управления на веб-странице.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePageMethods">
      <MemberSignature Language="C#" Value="public bool EnablePageMethods { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePageMethods" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnablePageMethods" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePageMethods As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePageMethods { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePageMethods : bool with get, set" Usage="System.Web.UI.ScriptManager.EnablePageMethods" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или устанавливает значение, указывающее, могут ли общие статические методы страницы на странице ASP.NET вызываться из клиентского скрипта.</summary>
        <value><see langword="true" />, если статические методы страницы на странице ASP.NET могут вызываться из клиентского скрипта как веб-методы; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно добавить статические методы страницы на страницу ASP.NET и пометить их как веб-методы. Затем эти методы можно вызывать из сценария, как будто они являются частью веб-службы, но без создания отдельного ASMX-файла. Чтобы создать веб-методов, на странице, импортируйте <xref:System.Web.Services> пространства имен и добавьте <xref:System.Web.Services.WebMethodAttribute> атрибут каждый статический метод, который требуется предоставить. Методы должны быть помечены как открытые.  
  
 Дополнительные сведения см. в разделе [предоставление доступа к веб-службы для клиентского сценария в ASP.NET AJAX](https://msdn.microsoft.com/library/fe3f6e9e-0acd-44c9-bf0f-0a8598fc13b8).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePartialRendering">
      <MemberSignature Language="C#" Value="public bool EnablePartialRendering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePartialRendering" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePartialRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePartialRendering { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePartialRendering : bool with get, set" Usage="System.Web.UI.ScriptManager.EnablePartialRendering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или устанавливает значение, разрешающее частичную отрисовку страницы, которая, в свою очередь, позволяет обновлять области страницы по отдельности, используя элементы управления <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <value><see langword="true" />, если частичная отрисовка разрешена и полная отрисовка страницы запрещена; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Даже если <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> свойство `true`, может не произойти в частичной отрисовке страницы. Браузер может не поддерживать частичная отрисовка страницы, или <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> свойству `false`.  
  
 Можно переопределить значение <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> свойство во время выполнения во время или до страницы <xref:System.Web.UI.Control.Init> событий. Если попытаться изменить это свойство после страницы <xref:System.Web.UI.Control.Init> возникло событие, <xref:System.InvalidOperationException> возникает исключение.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" /> устанавливается после возникновения события <see cref="E:System.Web.UI.Control.Init" /> страницы.</exception>
        <altmember cref="T:System.Web.UI.UpdatePanel" />
        <altmember cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" />
      </Docs>
    </Member>
    <Member MemberName="EnableScriptGlobalization">
      <MemberSignature Language="C#" Value="public bool EnableScriptGlobalization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableScriptGlobalization" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnableScriptGlobalization" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableScriptGlobalization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableScriptGlobalization { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableScriptGlobalization : bool with get, set" Usage="System.Web.UI.ScriptManager.EnableScriptGlobalization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или устанавливает значение, указывающее, будет ли элемент управления <see cref="T:System.Web.UI.ScriptManager" /> предоставлять скрипт, поддерживающий правила синтаксического анализа и форматирования, специфичные для языка и региональных параметров.</summary>
        <value>Значение <see langword="true" />, если соответствующая языку и региональным параметрам информация может отображаться; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При <xref:System.Web.UI.ScriptManager.EnableScriptGlobalization%2A> свойству `true`, глобальных функций ECMAScript (JavaScript), такие как `Date.localeFormat` сведения о методе отображения конкретного языка и региональных параметров. Можно задать язык и региональные параметры, в браузере, в серверном коде или в файле конфигурации веб сайта.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/69b34e6d-d590-4d03-a763-b7ae54b47d74">Локализация дату с помощью клиентского скрипта</related>
      </Docs>
    </Member>
    <Member MemberName="EnableScriptLocalization">
      <MemberSignature Language="C#" Value="public bool EnableScriptLocalization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableScriptLocalization" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnableScriptLocalization" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableScriptLocalization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableScriptLocalization { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableScriptLocalization : bool with get, set" Usage="System.Web.UI.ScriptManager.EnableScriptLocalization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, предоставляет ли элемент управления <see cref="T:System.Web.UI.ScriptManager" /> локализованные версии файлов скриптов.</summary>
        <value>Значение <see langword="true" />, если будут предоставлены локализованные файлы скриптов; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A> свойству `true`, <xref:System.Web.UI.ScriptManager> объект извлечет файлы скрипта для текущего языка и региональных параметров, если они существуют. Например страница может указывать файл скрипта с именем CustomScript.js. Если задано значение языка и региональных параметров fr-CA, <xref:System.Web.UI.ScriptManager> будет пытаться получить файл скрипта, который называется CustomScript.fr CA.js.  
  
> [!NOTE]
>  Для предотвращения файл скрипта рендеринга два раза <xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A> свойство не должно изменяться во время асинхронной обратной передачи.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/e6b15435-57c1-4dd1-9bd3-5d4c509685bb">Локализация ресурсов для Общие сведения о компоненте библиотеки</related>
      </Docs>
    </Member>
    <Member MemberName="EnableSecureHistoryState">
      <MemberSignature Language="C#" Value="public bool EnableSecureHistoryState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSecureHistoryState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.EnableSecureHistoryState" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSecureHistoryState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSecureHistoryState { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableSecureHistoryState : bool with get, set" Usage="System.Web.UI.ScriptManager.EnableSecureHistoryState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, необходимо ли шифровать строку предыдущего состояния.</summary>
        <value>Значение <see langword="true" />, если строка предыдущего состояния должна быть зашифрована, в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  Это свойство следует ***никогда не*** присвоить `false` на рабочем веб-узле.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public static System.Web.UI.ScriptManager GetCurrent (System.Web.UI.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.ScriptManager GetCurrent(class System.Web.UI.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetCurrent(System.Web.UI.Page)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::ScriptManager ^ GetCurrent(System::Web::UI::Page ^ page);" />
      <MemberSignature Language="F#" Value="static member GetCurrent : System.Web.UI.Page -&gt; System.Web.UI.ScriptManager" Usage="System.Web.UI.ScriptManager.GetCurrent page" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ScriptManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
      </Parameters>
      <Docs>
        <param name="page">Экземпляр страницы, используемый для извлечения <see cref="T:System.Web.UI.ScriptManager" />.</param>
        <summary>Возвращает экземпляр <see cref="T:System.Web.UI.ScriptManager" /> для конкретного объекта <see cref="T:System.Web.UI.Page" />.</summary>
        <returns>Текущий экземпляр <see cref="T:System.Web.UI.ScriptManager" /> выбранного объекта <see cref="T:System.Web.UI.Page" /> или <see langword="null" />, если нет определенных экземпляров.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот статический метод для определения ли <xref:System.Web.UI.ScriptManager> элемент управления находится на странице, или для доступа к свойствам и методам <xref:System.Web.UI.ScriptManager> управления, если вы не знаете его идентификатор.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="page" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredArrayDeclarations">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt; GetRegisteredArrayDeclarations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.UI.RegisteredArrayDeclaration&gt; GetRegisteredArrayDeclarations() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetRegisteredArrayDeclarations" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegisteredArrayDeclarations () As ReadOnlyCollection(Of RegisteredArrayDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::UI::RegisteredArrayDeclaration ^&gt; ^ GetRegisteredArrayDeclarations();" />
      <MemberSignature Language="F#" Value="member this.GetRegisteredArrayDeclarations : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;" Usage="scriptManager.GetRegisteredArrayDeclarations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredArrayDeclaration&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает коллекцию только для чтения объявлений массива ECMAScript (JavaScript), которые были ранее зарегистрированы с объектом <see cref="T:System.Web.UI.Page" />.</summary>
        <returns>Универсальная коллекция, содержащая объявления массива.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Web.UI.ScriptManager.RegisterArrayDeclaration" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredClientScriptBlocks">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt; GetRegisteredClientScriptBlocks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.UI.RegisteredScript&gt; GetRegisteredClientScriptBlocks() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetRegisteredClientScriptBlocks" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegisteredClientScriptBlocks () As ReadOnlyCollection(Of RegisteredScript)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::UI::RegisteredScript ^&gt; ^ GetRegisteredClientScriptBlocks();" />
      <MemberSignature Language="F#" Value="member this.GetRegisteredClientScriptBlocks : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;" Usage="scriptManager.GetRegisteredClientScriptBlocks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает коллекцию только для чтения блоков клиентского скрипта, которые были прежде зарегистрированы с помощью элемента управления <see cref="T:System.Web.UI.ScriptManager" />.</summary>
        <returns>Универсальная коллекция, содержащая блоки клиентских скриптов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Блоков клиентского скрипта зарегистрировано <xref:System.Web.UI.ScriptManager> элемент управления для использования с элементом управления, который находится внутри <xref:System.Web.UI.UpdatePanel> элемента управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ScriptManager.RegisterClientScriptBlock" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredDisposeScripts">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt; GetRegisteredDisposeScripts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.UI.RegisteredDisposeScript&gt; GetRegisteredDisposeScripts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetRegisteredDisposeScripts" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegisteredDisposeScripts () As ReadOnlyCollection(Of RegisteredDisposeScript)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::UI::RegisteredDisposeScript ^&gt; ^ GetRegisteredDisposeScripts();" />
      <MemberSignature Language="F#" Value="member this.GetRegisteredDisposeScripts : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;" Usage="scriptManager.GetRegisteredDisposeScripts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredDisposeScript&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает коллекцию только для чтения скриптов <see langword="dispose" />, которые были прежде зарегистрированы с объектом <see cref="T:System.Web.UI.Page" />.</summary>
        <returns>Универсальная коллекция, содержащая скрипты <see langword="dispose" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект `dispose` выполняется сценарий, когда <xref:System.Web.UI.UpdatePanel> управления обновляется или удаляется.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterDispose(System.Web.UI.Control,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredExpandoAttributes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt; GetRegisteredExpandoAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.UI.RegisteredExpandoAttribute&gt; GetRegisteredExpandoAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetRegisteredExpandoAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegisteredExpandoAttributes () As ReadOnlyCollection(Of RegisteredExpandoAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::UI::RegisteredExpandoAttribute ^&gt; ^ GetRegisteredExpandoAttributes();" />
      <MemberSignature Language="F#" Value="member this.GetRegisteredExpandoAttributes : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;" Usage="scriptManager.GetRegisteredExpandoAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredExpandoAttribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает коллекцию только для чтения пользовательских (expando) атрибутов, которые были прежде зарегистрированы с объектом <see cref="T:System.Web.UI.Page" />.</summary>
        <returns>Универсальная коллекция, содержащая пользовательские атрибуты.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Настраиваемый атрибут — это пара имя/значение, могут быть прочитаны и заданы клиентским сценарием.  
  
   
  
## Examples  
 <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A>  
  
 <xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A>  
  
 <xref:System.Web.UI.RegisteredExpandoAttribute>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredHiddenFields">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt; GetRegisteredHiddenFields ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.UI.RegisteredHiddenField&gt; GetRegisteredHiddenFields() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetRegisteredHiddenFields" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegisteredHiddenFields () As ReadOnlyCollection(Of RegisteredHiddenField)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::UI::RegisteredHiddenField ^&gt; ^ GetRegisteredHiddenFields();" />
      <MemberSignature Language="F#" Value="member this.GetRegisteredHiddenFields : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;" Usage="scriptManager.GetRegisteredHiddenFields " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredHiddenField&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает коллекцию только для чтения скрытых полей, которые были прежде зарегистрированы с объектом <see cref="T:System.Web.UI.Page" />.</summary>
        <returns>Универсальная коллекция, содержащая скрытые поля.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.RegisteredHiddenField" />
        <altmember cref="Overload:System.Web.UI.ScriptManager.RegisterHiddenField" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredOnSubmitStatements">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt; GetRegisteredOnSubmitStatements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.UI.RegisteredScript&gt; GetRegisteredOnSubmitStatements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetRegisteredOnSubmitStatements" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegisteredOnSubmitStatements () As ReadOnlyCollection(Of RegisteredScript)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::UI::RegisteredScript ^&gt; ^ GetRegisteredOnSubmitStatements();" />
      <MemberSignature Language="F#" Value="member this.GetRegisteredOnSubmitStatements : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;" Usage="scriptManager.GetRegisteredOnSubmitStatements " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает коллекцию только для чтения операторов <see langword="onsubmit" />, которые были прежде зарегистрированы с объектом <see cref="T:System.Web.UI.Page" />.</summary>
        <returns>Универсальная коллекция, содержащая операторы <see langword="onsubmit" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `onsubmit` Инструкция является ECMAScript (JavaScript), который выполняется при отправке формы.  
  
   
  
## Examples  
 <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A>  
  
 <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegisteredStartupScripts">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt; GetRegisteredStartupScripts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.UI.RegisteredScript&gt; GetRegisteredStartupScripts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetRegisteredStartupScripts" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegisteredStartupScripts () As ReadOnlyCollection(Of RegisteredScript)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::UI::RegisteredScript ^&gt; ^ GetRegisteredStartupScripts();" />
      <MemberSignature Language="F#" Value="member this.GetRegisteredStartupScripts : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;" Usage="scriptManager.GetRegisteredStartupScripts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.UI.RegisteredScript&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает коллекцию только для чтения стартовых скриптов, которые были прежде зарегистрированы с объектом <see cref="T:System.Web.UI.Page" />.</summary>
        <returns>Универсальная коллекция, содержащая стартовые скрипты.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Сценарий запуска — клиентский скрипт, который связан с элементом управления, который выполняется при запуске элемента управления.  
  
   
  
## Examples  
 <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A>  
  
 <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>  
  
 <xref:System.Web.UI.ScriptManager.GetRegisteredStartupScripts%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStateString">
      <MemberSignature Language="C#" Value="public string GetStateString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetStateString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.GetStateString" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStateString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetStateString();" />
      <MemberSignature Language="F#" Value="member this.GetStateString : unit -&gt; string" Usage="scriptManager.GetStateString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает строку, которая содержит пары "ключ-значение", представляющие состояние веб-страницы.</summary>
        <returns>Строка, содержащая пары ключ-значение, представляющие состояние веб-страницы.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDebuggingEnabled">
      <MemberSignature Language="C#" Value="public bool IsDebuggingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDebuggingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.IsDebuggingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDebuggingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDebuggingEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDebuggingEnabled : bool" Usage="System.Web.UI.ScriptManager.IsDebuggingEnabled" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IScriptManager.IsDebuggingEnabled</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, будет ли предоставлена отладочная версия библиотек клиентских скриптов.</summary>
        <value>Значение <see langword="true" />, если текущий запрос выполняется в режиме отладки; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A> Возвращает `false` когда верно одно из следующих условий:  
  
-   В [развертывания](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms228298(v%3dvs.100)) элемент файла конфигурации, `retail` атрибут имеет значение `true`. Это значение переопределяет все остальные параметры.  
  
-   <xref:System.Web.UI.ScriptManager.ScriptMode%2A> Свойству `Auto` или `Inherit`, и отладка не включена в `compilation` раздел файла Web.config корневой каталог приложения.  
  
-   Свойству <xref:System.Web.UI.ScriptManager.ScriptMode%2A> задано значение `Release`.  
  
    > [!NOTE]
    >  `debug` Атрибут [@ Page](https://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) директива не влияет на приложения с поддержкой Ajax ASP.NET. <xref:System.Web.UI.ScriptManager> Элемент управления использует только параметры в файле Web.config и в его <xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A> и <xref:System.Web.UI.ScriptManager.ScriptMode%2A> свойства, чтобы определить, следует ли отображать отладочных сценариях.  
  
 Дополнительные сведения см. в разделе [отладка и трассировка Ajax Applications Overview](https://msdn.microsoft.com/library/92684ea0-7bb4-4a34-9203-3aa6394ce375).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpContext.IsDebuggingEnabled" />
      </Docs>
    </Member>
    <Member MemberName="IsInAsyncPostBack">
      <MemberSignature Language="C#" Value="public bool IsInAsyncPostBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInAsyncPostBack" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.IsInAsyncPostBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInAsyncPostBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInAsyncPostBack { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInAsyncPostBack : bool" Usage="System.Web.UI.ScriptManager.IsInAsyncPostBack" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IScriptManager.IsInAsyncPostBack</InterfaceMember>
        <InterfaceMember>P:System.Web.UI.IScriptManagerInternal.IsInAsyncPostBack</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, которое указывает, выполняется ли текущая обратная передача в режиме частичной отрисовки.</summary>
        <value>Значение <see langword="true" />, если текущая обратная передача выполняется в режиме частичной отрисовки; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> свойство в сочетании с <xref:System.Web.UI.Page.IsPostBack%2A> свойство для различения загрузки начальной страницы, обновления части страницы и полное обновление в <xref:System.Web.UI.Control.Load>, <xref:System.Web.UI.Page.InitComplete>, или <xref:System.Web.UI.Control.PreRender> события.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
      </Docs>
    </Member>
    <Member MemberName="IsNavigating">
      <MemberSignature Language="C#" Value="public bool IsNavigating { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNavigating" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.IsNavigating" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNavigating As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNavigating { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNavigating : bool" Usage="System.Web.UI.ScriptManager.IsNavigating" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, обрабатывается ли в текущий момент событие <see cref="E:System.Web.UI.ScriptManager.Navigate" />.</summary>
        <value>Значение <see langword="true" />, если состояние <see cref="E:System.Web.UI.ScriptManager.Navigate" /> обрабатывается, в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.ScriptManager.IsNavigating%2A> свойства, чтобы определить ли <xref:System.Web.UI.ScriptManager.Navigate> события.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberSignature Language="F#" Value="abstract member LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool&#xA;override this.LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool" Usage="scriptManager.LoadPostData (postDataKey, postCollection)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Идентификатор ключа элемента управления.</param>
        <param name="postCollection">Коллекция всех входящих данных обратной передачи.</param>
        <summary>Считывает данные формы, отправленные из браузера на сервер, и определяет источник асинхронной обратной передачи.</summary>
        <returns><see langword="true" />, если состояние элемента управления <see cref="T:System.Web.UI.ScriptManager" /> изменилось в результате обратной передачи; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ScriptManager.LoadPostData%2A> Метод в основном используется разработчиками элементов управления для расширения функциональных возможностей <xref:System.Web.UI.ScriptManager> элемента управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
      </Docs>
    </Member>
    <Member MemberName="LoadScriptsBeforeUI">
      <MemberSignature Language="C#" Value="public bool LoadScriptsBeforeUI { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LoadScriptsBeforeUI" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.LoadScriptsBeforeUI" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadScriptsBeforeUI As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LoadScriptsBeforeUI { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LoadScriptsBeforeUI : bool with get, set" Usage="System.Web.UI.ScriptManager.LoadScriptsBeforeUI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или устанавливает значение, определяющее, загружаются ли шрифты до или после загрузки разметки для элементов пользовательского интерфейса страницы.</summary>
        <value><see langword="true" />, если скрипты загружаются до загрузки разметки для элементов пользовательского интерфейса страницы; <see langword="false" />, если скрипты загружаются после. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> Свойство определяет, каким образом скриптов в <xref:System.Web.UI.ScriptManager.Scripts%2A> коллекции загружаются относительно разметка страницы пользовательского интерфейса.  
  
 Когда <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> свойство `true`, `script` элемент отображается до загрузки разметки пользовательского интерфейса страницы. В этом случае если определенные элементы пользовательского интерфейса в скриптах, пользовательский Интерфейс будет полностью функциональной при загрузке. Тем не менее если сценарий получает доступ к элементам пользовательского интерфейса в разметке, для которой экземпляры еще не были созданы, может возникнуть ошибка. Чтобы убедиться в том, что элементы пользовательского интерфейса были загружены, прежде чем доступ к ним, обработайте `load` событие `Sys.Application` класс.  
  
 Когда <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> свойство `false`, `script` элемент отображается после подготовки к просмотру разметку страницы пользовательского интерфейса. В этом случае пользовательский Интерфейс загружается гораздо быстрей, но может не быть полнофункциональным, если скрипты, которые определяют дополнительные элементы пользовательского интерфейса, еще не были загружены.  
  
 Это свойство не задано `true` при выборе <xref:System.Web.UI.ScriptManager.EnableCdn%2A> для `true` уже.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ScriptManager.Scripts" />
        <altmember cref="T:System.Web.UI.ScriptReference" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.HistoryEventArgs&gt; Navigate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.HistoryEventArgs&gt; Navigate" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.ScriptManager.Navigate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigate As EventHandler(Of HistoryEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::HistoryEventArgs ^&gt; ^ Navigate;" />
      <MemberSignature Language="F#" Value="member this.Navigate : EventHandler&lt;System.Web.UI.HistoryEventArgs&gt; " Usage="member this.Navigate : System.EventHandler&lt;System.Web.UI.HistoryEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.HistoryEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при нажатии пользователем в браузере кнопки **Назад** или **Вперед**.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда пользователь щелкает обозревателя **обратно** кнопки, браузер переходит к ранее просмотренным URL-адреса, которые могут включать URL-адреса, которые содержат данные о состоянии точку предыдущего состояния. Если код клиента на веб-странице обнаруживает, что URL-адрес содержит данные журнала о состоянии, оно отправляет запрос к странице сервера. Это действует как событие обратной передачи и <xref:System.Web.UI.ScriptManagerProxy> серверный элемент управления вызывает `Navigate` событий. Можно обработать это событие и повторно создать страницу при необходимости веб-приложения, используя данные о состоянии, передается с событием.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAsyncPostBackError">
      <MemberSignature Language="C#" Value="protected internal virtual void OnAsyncPostBackError (System.Web.UI.AsyncPostBackErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnAsyncPostBackError(class System.Web.UI.AsyncPostBackErrorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.OnAsyncPostBackError(System.Web.UI.AsyncPostBackErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnAsyncPostBackError (e As AsyncPostBackErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnAsyncPostBackError(System::Web::UI::AsyncPostBackErrorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAsyncPostBackError : System.Web.UI.AsyncPostBackErrorEventArgs -&gt; unit&#xA;override this.OnAsyncPostBackError : System.Web.UI.AsyncPostBackErrorEventArgs -&gt; unit" Usage="scriptManager.OnAsyncPostBackError e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.AsyncPostBackErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Данные события ошибки.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.ScriptManager.AsyncPostBackError" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ScriptManager.AsyncPostBackError> Событие возникает при ошибке страницы во время асинхронных обратных вызовов. Как ошибки на сервере, отправляются клиенту зависит от <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> свойства <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> свойства и пользовательские ошибки раздел файла Web.config.  
  
   
  
## Examples  
 В следующем примере показано, как обрабатывать <xref:System.Web.UI.ScriptManager.AsyncPostBackError> событие <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> свойства (который отправляется клиенту) сообщение об ошибке исключения сервера.  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.AsyncPostBackErrorMessage/CS/ScriptManager_AsyncPostBackErrorMessageCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.AsyncPostBackErrorMessage/VB/ScriptManager_AsyncPostBackErrorMessageVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.ScriptManager.AsyncPostBackError" />
        <altmember cref="P:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="scriptManager.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Данные события.</param>
        <summary>Инициирует событие <see cref="E:System.Web.UI.Control.Init" /> и гарантирует, что на странице существует только один элемент управления <see cref="T:System.Web.UI.ScriptManager" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">На странице присутствует несколько экземпляров элемента управления <see cref="T:System.Web.UI.ScriptManager" />.</exception>
        <block subset="none" type="overrides"><para>При переопределении этого метода, вызвать базовый <see cref="M:System.Web.UI.ScriptManager.OnInit(System.EventArgs)" /> метод, файлы скриптов правильно обрабатываются для частичной отрисовке страницы.</para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Общие сведения о жизненном цикле страницы ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="scriptManager.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Данные события.</param>
        <summary>Инициирует событие <see cref="E:System.Web.UI.Control.PreRender" /> и регистрирует файлы скриптов и службы для частичных обновлений страниц.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Сведения о модели DOM, см. в разделе [спецификации объектной модели документа (DOM) уровня 1](https://go.microsoft.com/fwlink/?LinkId=73305) веб-сайте консорциума World Wide Web (W3C).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Браузер, выполнивший запрос на частичную визуализацию страницы, не поддерживает по меньшей мере модель DOM уровня 1.0.</exception>
        <block subset="none" type="overrides"><para>При переопределении этого метода, вызвать базовый <see cref="M:System.Web.UI.ScriptManager.OnPreRender(System.EventArgs)" /> метод, скрипт блоки и службы правильно обрабатываются для частичной отрисовке страницы.</para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">Общие сведения о жизненном цикле страницы ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="OnResolveCompositeScriptReference">
      <MemberSignature Language="C#" Value="protected virtual void OnResolveCompositeScriptReference (System.Web.UI.CompositeScriptReferenceEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResolveCompositeScriptReference(class System.Web.UI.CompositeScriptReferenceEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.OnResolveCompositeScriptReference(System.Web.UI.CompositeScriptReferenceEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResolveCompositeScriptReference (e As CompositeScriptReferenceEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResolveCompositeScriptReference(System::Web::UI::CompositeScriptReferenceEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnResolveCompositeScriptReference : System.Web.UI.CompositeScriptReferenceEventArgs -&gt; unit&#xA;override this.OnResolveCompositeScriptReference : System.Web.UI.CompositeScriptReferenceEventArgs -&gt; unit" Usage="scriptManager.OnResolveCompositeScriptReference e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.CompositeScriptReferenceEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект, представляющий ссылку на составной скрипт.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.ScriptManager.ResolveCompositeScriptReference" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveScriptReference">
      <MemberSignature Language="C#" Value="protected virtual void OnResolveScriptReference (System.Web.UI.ScriptReferenceEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResolveScriptReference(class System.Web.UI.ScriptReferenceEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.OnResolveScriptReference(System.Web.UI.ScriptReferenceEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResolveScriptReference (e As ScriptReferenceEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResolveScriptReference(System::Web::UI::ScriptReferenceEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnResolveScriptReference : System.Web.UI.ScriptReferenceEventArgs -&gt; unit&#xA;override this.OnResolveScriptReference : System.Web.UI.ScriptReferenceEventArgs -&gt; unit" Usage="scriptManager.OnResolveScriptReference e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.ScriptReferenceEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект, представляющий текущий скрипт.</param>
        <summary>Инициирует событие <see cref="E:System.Web.UI.ScriptManager.ResolveScriptReference" /> для каждой ссылки на скрипт, управляемый элементом управления <see cref="T:System.Web.UI.ScriptManager" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается <xref:System.Web.UI.ScriptManager.OnPreRender%2A> обработчик событий, один раз для каждого <xref:System.Web.UI.ScriptReference> в <xref:System.Web.UI.ScriptManager.Scripts%2A> коллекции.  
  
 <xref:System.Web.UI.ScriptManager.ResolveScriptReference> Событие возникает после повторяющихся скрипт операции были разрешены.  
  
 Переопределите этот метод, чтобы изменить поведение отдельных блоков сценария при обратной передаче или во время частичного обновления страницы.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProfileService">
      <MemberSignature Language="C#" Value="public System.Web.UI.ProfileServiceManager ProfileService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ProfileServiceManager ProfileService" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.ProfileService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProfileService As ProfileServiceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ProfileServiceManager ^ ProfileService { System::Web::UI::ProfileServiceManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProfileService : System.Web.UI.ProfileServiceManager" Usage="System.Web.UI.ScriptManager.ProfileService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ProfileServiceManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Web.UI.ProfileServiceManager" />, связанный с текущим экземпляром <see cref="T:System.Web.UI.ScriptManager" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.ProfileServiceManager" /> для текущего экземпляра <see cref="T:System.Web.UI.ScriptManager" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ProfileServiceManager> Службе профиля, который регистрируется с помощью страницы представляет объект, который возвращается этим свойством. Служба профилей могут быть определены в <xref:System.Web.UI.ScriptManager> управления или связанным <xref:System.Web.UI.ScriptManagerProxy> элемента управления.  
  
 Можно использовать службу профилей ASP.NET или использовать пользовательскую службу профилей. Можно добавить пользовательскую службу в разметке, включив `ProfileService` элемент внутри `asp:ScriptManager` элемента на странице, как показано в следующем примере.  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <ProfileService LoadProperties="propertyA,propertyB"  
    Path="MyProfileService.asmx" />  
</asp:ScriptManager>  
```  
  
 Можно также программным способом настроить <xref:System.Web.UI.ProfileServiceManager> объекта. С помощью службы регистрируются <xref:System.Web.UI.ScriptManager> элемента управления во время страницы <xref:System.Web.UI.Control.PreRender> жизненного цикла рабочей области.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="scriptManager.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Строка, которая содержит пары "ключ-значение", представляющие предыдущее состояние веб-страницы.</param>
        <summary>Обрабатывает событие обратной передачи, порожденное элементом управления <see cref="T:System.Web.UI.ScriptManager" />, и загружает предыдущее состояние веб-страницы.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberSignature Language="F#" Value="abstract member RaisePostDataChangedEvent : unit -&gt; unit&#xA;override this.RaisePostDataChangedEvent : unit -&gt; unit" Usage="scriptManager.RaisePostDataChangedEvent " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Вызывает событие для элемента управления <see cref="T:System.Web.UI.ScriptManager" />, когда он выполняет обратную передачу на сервер.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ScriptManager.RaisePostDataChangedEvent%2A> Метод в основном используется разработчиками элементов управления для расширения функциональных возможностей <xref:System.Web.UI.ScriptManager> элемента управления. Для реализации по умолчанию <xref:System.Web.UI.ScriptManager> элемента управления, события не возникают.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterArrayDeclaration">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Регистрирует объявление массива ECMAScript (JavaScript) с помощью элемента управления <see cref="T:System.Web.UI.ScriptManager" /> для использования с элементом управления, находящимся внутри элемента управления <see cref="T:System.Web.UI.UpdatePanel" />, и добавляет массив к странице.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterArrayDeclaration">
      <MemberSignature Language="C#" Value="public static void RegisterArrayDeclaration (System.Web.UI.Control control, string arrayName, string arrayValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterArrayDeclaration(class System.Web.UI.Control control, string arrayName, string arrayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Control,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterArrayDeclaration(System::Web::UI::Control ^ control, System::String ^ arrayName, System::String ^ arrayValue);" />
      <MemberSignature Language="F#" Value="static member RegisterArrayDeclaration : System.Web.UI.Control * string * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterArrayDeclaration (control, arrayName, arrayValue)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterArrayDeclaration(System.Web.UI.Control,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="arrayName" Type="System.String" />
        <Parameter Name="arrayValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">Элемент управления, регистрирующий массив.</param>
        <param name="arrayName">Имя регистрируемого массива.</param>
        <param name="arrayValue">Значение или значения массива для регистрации.</param>
        <summary>Регистрирует объявление массива ECMAScript (JavaScript) с помощью элемента управления <see cref="T:System.Web.UI.ScriptManager" /> для использования с элементом управления, находящимся внутри элемента управления <see cref="T:System.Web.UI.UpdatePanel" />, и добавляет массив к странице.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Использовании <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> метода для регистрации в массиве сценария клиента, который совместим с частичной отрисовке страницы, который не зависит от библиотеки Microsoft Ajax. Этот метод регистрирует массив при `control` представляет элемент управления, который находится внутри <xref:System.Web.UI.UpdatePanel> элемента управления, которая обновляется. Чтобы зарегистрировать каждый раз при асинхронной обратной передаче массив, используйте <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%28System.Web.UI.Page%2CSystem.String%2CSystem.String%29> перегрузку этого метода.  
  
 Если вы хотите зарегистрировать массив, не относящихся к частичного обновления страницы и если вы хотите зарегистрировать массиве только один раз во время начальной отрисовки страницы, используйте <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> метод <xref:System.Web.UI.ClientScriptManager> класса. Можно получить ссылку на <xref:System.Web.UI.ClientScriptManager> объекта из <xref:System.Web.UI.Page.ClientScript%2A> свойства страницы.  
  
 <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> Метод определяет, справедливо ли массив с именем, который указан в `arrayName` параметра уже зарегистрировано. Если таким образом, метод добавляет значения, указанные в `arrayValue`. Так как на основе массива для регистрации <xref:System.Collections.ArrayList> класс, дубликаты разрешены. Если зарегистрированный массив с именем в `arrayName` не существует, создается массив и значения в `arrayValue` добавлением к нему.  
  
 Чтобы включить строковые литералы в массиве, используйте одинарные кавычки (') или экранировать двойные кавычки (\\«) в `arrayValue`.  
  
 Обратите внимание на то, что JavaScript обрабатывает запятую (,) в качестве разделителя в массиве. Можно указать несколько значений массива путем передачи строки с разделителями запятыми в `arrayValue`. Разделение двух элементов с разделителями в `arrayValue` эквивалентно вызову <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> метод два раза: один раз для каждого элемента.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="arrayName" /> — <see langword="null" />.</exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Page,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterArrayDeclaration">
      <MemberSignature Language="C#" Value="public static void RegisterArrayDeclaration (System.Web.UI.Page page, string arrayName, string arrayValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterArrayDeclaration(class System.Web.UI.Page page, string arrayName, string arrayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Page,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterArrayDeclaration(System::Web::UI::Page ^ page, System::String ^ arrayName, System::String ^ arrayValue);" />
      <MemberSignature Language="F#" Value="static member RegisterArrayDeclaration : System.Web.UI.Page * string * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterArrayDeclaration (page, arrayName, arrayValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="arrayName" Type="System.String" />
        <Parameter Name="arrayValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="page">Объект страницы, регистрирующий массив.</param>
        <param name="arrayName">Имя регистрируемого массива.</param>
        <param name="arrayValue">Значение или значения массива для регистрации.</param>
        <summary>Регистрирует объявление массива ECMAScript (JavaScript) с помощью элемента управления <see cref="T:System.Web.UI.ScriptManager" /> для использования с элементом управления, находящимся внутри элемента управления <see cref="T:System.Web.UI.UpdatePanel" />, и добавляет массив к странице.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Использовании <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> метода для регистрации в массиве сценария клиента, который совместим с частичной отрисовке страницы, который не зависит от библиотеки Microsoft Ajax. Этот метод регистрирует массив при каждой асинхронной обратной передаче. Регистрируемый массива для элемента управления, который находится внутри <xref:System.Web.UI.UpdatePanel> управления позволит массива регистрируется только в том случае, если панель обновляется, используйте <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%28System.Web.UI.Control%2CSystem.String%2CSystem.String%29> перегрузку этого метода.  
  
 Если вы хотите зарегистрировать массив, не относящихся к частичного обновления страницы и если вы хотите зарегистрировать массиве только один раз во время начальной отрисовки страницы, используйте <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> метод <xref:System.Web.UI.ClientScriptManager> класса. Можно получить ссылку на <xref:System.Web.UI.ClientScriptManager> объекта из <xref:System.Web.UI.Page.ClientScript%2A> свойства страницы.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="arrayName" /> — <see langword="null" />.</exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Control,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterAsyncPostBackControl">
      <MemberSignature Language="C#" Value="public void RegisterAsyncPostBackControl (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterAsyncPostBackControl(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterAsyncPostBackControl(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member RegisterAsyncPostBackControl : System.Web.UI.Control -&gt; unit&#xA;override this.RegisterAsyncPostBackControl : System.Web.UI.Control -&gt; unit" Usage="scriptManager.RegisterAsyncPostBackControl control" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManagerInternal.RegisterAsyncPostBackControl(System.Web.UI.Control)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">Элемент управления, регистрируемый для асинхронных обратных передач.</param>
        <summary>Регистрирует элемент управления в качестве триггера асинхронных обратных передач.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> Метод позволяет зарегистрировать элемент управления как триггеры, чтобы они выполнять асинхронную обратную передачу вместо синхронной. При <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> свойство <xref:System.Web.UI.UpdatePanel> игнорируется `true` (это значение по умолчанию), обратная передача элементов управления внутри <xref:System.Web.UI.UpdatePanel> управления автоматически регистрируются как элементы управления асинхронной обратной передачи.  
  
 Используйте <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> метод, чтобы зарегистрировать элементы управления вне <xref:System.Web.UI.UpdatePanel> управления в качестве триггеров для асинхронную обратную передачу и потенциально обновить содержимое панели обновления. Чтобы обновить <xref:System.Web.UI.UpdatePanel> управления программными средствами, вызовите <xref:System.Web.UI.UpdatePanel.Update%2A> метод.  
  
 Триггер можно добавить декларативно с помощью `Triggers` элемент <xref:System.Web.UI.UpdatePanel> элемента управления. В Visual Studio с помощью конструктора **коллекции UpdatePanelTrigger** диалоговое окно.  
  
   
  
## Examples  
 В следующем примере показан вызов <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> метод, чтобы зарегистрировать <xref:System.Web.UI.WebControls.Button> управления таким образом, обновление <xref:System.Web.UI.UpdatePanel> содержимого элемента управления. <xref:System.Web.UI.WebControls.Button> Управления не находится внутри <xref:System.Web.UI.UpdatePanel> элемента управления. Отображаются две кнопки: `Button1` и `Button2`. `Button1` обновляет содержимое панели и `Button2` обновляет всю страницу.  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.RegisterAsyncPostBackControl#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterAsyncPostBackControl/CS/ScriptManager1CS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.RegisterAsyncPostBackControl#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterAsyncPostBackControl/VB/ScriptManager1VB.aspx#1)]  
  
 В следующем примере показан вызов <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> метод для регистрации пользователя управления таким образом, обновление <xref:System.Web.UI.UpdatePanel> содержимого элемента управления. В первом примере на странице с помощью пользовательского элемента управления. Во втором примере показан пользовательский элемент управления.  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.RegisterAsyncPostBackControl#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterAsyncPostBackControl/CS/ScriptManager2CS.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.RegisterAsyncPostBackControl#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterAsyncPostBackControl/VB/ScriptManager2VB.aspx#2)]  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="control" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Страница регистрируется как элемент управления асинхронной обратной передачи.
-или-

Зарегистрированный элемент управления не реализует интерфейсов <see cref="T:System.Web.UI.INamingContainer" />, <see cref="T:System.Web.UI.IPostBackDataHandler" /> или <see cref="T:System.Web.UI.IPostBackEventHandler" />.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.Triggers" />
        <altmember cref="M:System.Web.UI.UpdatePanel.Update" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptBlock">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Регистрирует блок клиентского скрипта с помощью элемента управления <see cref="T:System.Web.UI.ScriptManager" /> для использования с элементом управления, находящимся внутри элемента управления <see cref="T:System.Web.UI.UpdatePanel" />, и добавляет блок скрипта к странице.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public static void RegisterClientScriptBlock (System.Web.UI.Control control, Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClientScriptBlock(class System.Web.UI.Control control, class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClientScriptBlock(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberSignature Language="F#" Value="static member RegisterClientScriptBlock : System.Web.UI.Control * Type * string * string * bool -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterClientScriptBlock (control, type, key, script, addScriptTags)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">Элемент управления, регистрирующий блок клиентского скрипта.</param>
        <param name="type">Тип блока клиентского скрипта. Этот параметр обычно задается с оператором <see langword="typeof" /> (C#) или <see langword="GetType" /> (Visual Basic) для извлечения типа элемента управления, регистрирующего скрипт.</param>
        <param name="key">Уникальный идентификатор для блока скрипта.</param>
        <param name="script">Скрипт.</param>
        <param name="addScriptTags"><see langword="true" /> для заключения блока скрипта в теги <see langword="&lt;script&gt;" /> и <see langword="&lt;/script&gt;" />; в противном случае — <see langword="false" />.</param>
        <summary>Регистрирует блок клиентского скрипта с помощью элемента управления <see cref="T:System.Web.UI.ScriptManager" /> для использования с элементом управления, находящимся внутри элемента управления <see cref="T:System.Web.UI.UpdatePanel" />, и добавляет блок скрипта к странице.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Использовании <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A> метод, чтобы зарегистрировать блок клиентского скрипта, совместимый с частичной отрисовке страницы, который не зависит от библиотеки Microsoft Ajax. Блоки клиентских скриптов, которые зарегистрированы с помощью этого метода отправляются на страницу только тогда, когда `control` представляет элемент управления, который находится внутри <xref:System.Web.UI.UpdatePanel> элемента управления, которая обновляется. Чтобы зарегистрировать каждый раз при асинхронной обратной передаче блок сценария, используйте <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> перегрузку этого метода.  
  
 Если вы хотите зарегистрировать блок скрипта, который не относятся к частичного обновления страницы и если вы хотите зарегистрировать только один раз во время начальной отрисовки страницы, блок сценария используйте <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> метод <xref:System.Web.UI.ClientScriptManager> класса. Можно получить ссылку на <xref:System.Web.UI.ClientScriptManager> объекта из <xref:System.Web.UI.Page.ClientScript%2A> свойства страницы.  
  
 Если `addScriptTags` — `true`, <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A> добавляет метод `<script>` блок скрипта в теги. Передайте `false` Если вы хотите создать `<script>` теги самостоятельно, например если требуется установить атрибуты для определенного `<script>` теги. Если `addScriptTags` — `false` и `script` параметр содержит несколько блоков скриптов, создается исключение.  
  
 <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A> Метод добавляет блок скрипта к странице после открывающего `<form>` тега. Блоки скриптов не обязательно будут выводиться в том же порядке, в котором они зарегистрированы. Если важен порядок блоков сценария, объедините блоки сценариев в одну строку (например, с помощью <xref:System.Text.StringBuilder> объекта), а затем зарегистрировать их как блок скрипта для одного клиента.  
  
   
  
## Examples  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.RegisterClientScriptBlock#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterClientScriptBlock/CS/ScriptManager_RegisterClientScriptBlockCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.RegisterClientScriptBlock#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterClientScriptBlock/vb/ScriptManager_RegisterClientScriptBlockVB.aspx#1)]  
  
 [!code-xml[System.Web.UI.ScriptManager.RegisterClientScriptBlock#2](~/samples/snippets/common/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterClientScriptBlock/Common/App_Data/Contacts.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Тип <paramref name="type" /> блока клиентского скрипта равен <see langword="null" />.  
  
-или- 
Элемент управления, регистрирующий блок скрипта, — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Элемент управления, регистрирующий блок скрипта, не найден в дереве элементов управления страницы.</exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public static void RegisterClientScriptBlock (System.Web.UI.Page page, Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClientScriptBlock(class System.Web.UI.Page page, class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClientScriptBlock(System::Web::UI::Page ^ page, Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberSignature Language="F#" Value="static member RegisterClientScriptBlock : System.Web.UI.Page * Type * string * string * bool -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterClientScriptBlock (page, type, key, script, addScriptTags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="page">Объект страницы, регистрирующий блок клиентского скрипта.</param>
        <param name="type">Тип блока клиентского скрипта. Этот параметр обычно задается с оператором <see langword="typeof" /> (C#) или <see langword="GetType" /> (Visual Basic) для извлечения типа элемента управления, регистрирующего скрипт.</param>
        <param name="key">Уникальный идентификатор для блока скрипта.</param>
        <param name="script">Скрипт для регистрации.</param>
        <param name="addScriptTags"><see langword="true" /> для заключения блока скрипта в теги <see langword="&lt;script&gt;" /> и <see langword="&lt;/script&gt;" />; в противном случае — <see langword="false" />.</param>
        <summary>Регистрирует блок клиентского скрипта с помощью элемента управления <see cref="T:System.Web.UI.ScriptManager" /> для использования с элементом управления, находящимся внутри элемента управления <see cref="T:System.Web.UI.UpdatePanel" />, и добавляет блок скрипта к странице.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При регистрации блок скрипта с помощью этого метода, он подготавливается к просмотру каждый раз при асинхронной обратной передаче. Регистрируемый блок скрипта для элемента управления, который находится внутри <xref:System.Web.UI.UpdatePanel> управления, чтобы скрипт регистрируется только тогда, когда <xref:System.Web.UI.UpdatePanel> элемент управления будет обновлен, используйте <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> перегрузку этого метода.  
  
 Если вы хотите зарегистрировать блок скрипта, который не относятся к частичного обновления страницы и если вы хотите зарегистрировать только один раз во время начальной отрисовки страницы, блок сценария используйте <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> метод <xref:System.Web.UI.ClientScriptManager> класса. Можно получить ссылку на <xref:System.Web.UI.ClientScriptManager> объекта из <xref:System.Web.UI.Page.ClientScript%2A> свойства страницы.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Тип <paramref name="type" /> блока скрипта равен <see langword="null" />.  
  
-или- 
Страница, регистрирующая блок скрипта, равен <see langword="null" />.</exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptInclude">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Регистрирует файл клиентского скрипта с помощью элемента управления <see cref="T:System.Web.UI.ScriptManager" /> для использования с элементом управления, находящимся внутри элемента управления <see cref="T:System.Web.UI.UpdatePanel" />, и затем добавляет ссылку на файл скрипта к странице.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public static void RegisterClientScriptInclude (System.Web.UI.Control control, Type type, string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClientScriptInclude(class System.Web.UI.Control control, class System.Type type, string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Control,System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClientScriptInclude(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ url);" />
      <MemberSignature Language="F#" Value="static member RegisterClientScriptInclude : System.Web.UI.Control * Type * string * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterClientScriptInclude (control, type, key, url)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterClientScriptInclude(System.Web.UI.Control,System.Type,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">Элемент управления, регистрирующий файл клиентского скрипта.</param>
        <param name="type">Тип файла клиентского скрипта. Этот параметр обычно задается с оператором typeof (C#) или GetType (Visual Basic) для извлечения типа элемента управления, регистрирующего скрипт.</param>
        <param name="key">Уникальный идентификатор файла скрипта.</param>
        <param name="url">URL-адрес файла скрипта.</param>
        <summary>Регистрирует файл клиентского скрипта с помощью элемента управления <see cref="T:System.Web.UI.ScriptManager" /> для использования с элементом управления, находящимся внутри элемента управления <see cref="T:System.Web.UI.UpdatePanel" />, и затем добавляет ссылку на файл скрипта к странице.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Использовании <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> метод, чтобы зарегистрировать файл скрипта клиента для страницы или часть страницы, которая участвует в частичных обновлений страницы. Файлы клиентских скриптов, которые зарегистрированы с помощью этого метода отправляются на страницу только тогда, когда `control` представляет элемент управления, который находится внутри <xref:System.Web.UI.UpdatePanel> элемента управления, которая обновляется. Чтобы зарегистрировать файл сценария, каждый раз при асинхронной обратной передаче, используйте <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%29> перегрузку этого метода.  
  
 Если вы хотите зарегистрировать блок скрипта, который не относятся к частичного обновления страницы и если вы хотите зарегистрировать только один раз во время начальной отрисовки страницы, блок сценария используйте <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> метод <xref:System.Web.UI.ClientScriptManager> класса. Можно получить ссылку на <xref:System.Web.UI.ClientScriptManager> объекта из <xref:System.Web.UI.Page.ClientScript%2A> свойства страницы.  
  
 <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> Метод регистрирует файл клиентского скрипта на странице, обработав `script` , открывающий тег содержит элемент `src` атрибута. `url` Параметр используется для задания `src` атрибута. Чтобы разрешать URL-адреса, используйте <xref:System.Web.UI.Control.ResolveClientUrl%2A> метод. Этот метод использует контекст URL-адрес, он вызывается для разрешить путь.  
  
 Как <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> и <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> методы отрисовки файлы скриптов в браузере. Если сценарий с тот же тип и ключ (для файла скрипта) или же тип и имя ресурса (для встроенного ресурса) уже готовится к просмотру, скрипт не передается заново.  
  
   
  
## Examples  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.RegisterClientScriptInclude#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterClientScriptInclude/CS/ScriptManager_RegisterClientScriptIncludeCS.aspx#1)]  
  
 [!code-javascript[System.Web.UI.ScriptManager.RegisterClientScriptInclude#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterClientScriptInclude/CS/scripts/script_alertdiv.js#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Тип <paramref name="type" /> файла клиентского скрипта равен <see langword="null" />.  
  
-или- 
Элемент управления, регистрирующий файл скрипта, равен <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Элемент управления, регистрирующий файл скрипта, не найден в дереве элементов управления страницы.  
  
-или- 
 <paramref name="url" /> — <see langword="null" />.  
  
-или- 
 Параметр <paramref name="url" /> пуст.</exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Page,System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public static void RegisterClientScriptInclude (System.Web.UI.Page page, Type type, string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClientScriptInclude(class System.Web.UI.Page page, class System.Type type, string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Page,System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClientScriptInclude(System::Web::UI::Page ^ page, Type ^ type, System::String ^ key, System::String ^ url);" />
      <MemberSignature Language="F#" Value="static member RegisterClientScriptInclude : System.Web.UI.Page * Type * string * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterClientScriptInclude (page, type, key, url)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="page">Объект страницы, регистрирующий файл клиентского скрипта.</param>
        <param name="type">Тип файла клиентского скрипта. Этот параметр обычно задается с оператором typeof (C#) или GetType (Visual Basic) для извлечения типа элемента управления, регистрирующего скрипт.</param>
        <param name="key">Уникальный идентификатор файла скрипта.</param>
        <param name="url">URL-адрес файла скрипта.</param>
        <summary>Регистрирует клиентский скрипт с помощью элемента управления <see cref="T:System.Web.UI.ScriptManager" /> при каждой асинхронной обратной передаче, и затем добавляет ссылку на файл скрипта к странице.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Регистрируя файл скрипта с помощью этого метода, скрипт воспроизводится при каждой асинхронной обратной передаче. Для регистрации файла скрипта для элемента управления, который находится внутри <xref:System.Web.UI.UpdatePanel> управления, чтобы скрипт регистрируется только тогда, когда <xref:System.Web.UI.UpdatePanel> элемент управления будет обновлен, используйте <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%29> перегрузку этого метода.  
  
 Если вы хотите зарегистрировать блок скрипта, который не относятся к частичного обновления страницы и если вы хотите зарегистрировать только один раз во время начальной отрисовки страницы, блок сценария используйте <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> метод <xref:System.Web.UI.ClientScriptManager> класса. Можно получить ссылку на <xref:System.Web.UI.ClientScriptManager> объекта из <xref:System.Web.UI.Page.ClientScript%2A> свойства страницы.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Тип <paramref name="type" /> файла клиентского скрипта равен <see langword="null" />.  
  
-или- 
Страница, регистрирующая файл скрипта, равна <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="url" /> — <see langword="null" />.  
  
-или- 
 Параметр <paramref name="url" /> пуст.</exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptResource">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Регистрирует встроенный в сборку клиентский скрипт с помощью элемента управления <see cref="T:System.Web.UI.ScriptManager" /> для использования с элементом управления, участвующем в частичной отрисовке страницы.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptResource">
      <MemberSignature Language="C#" Value="public static void RegisterClientScriptResource (System.Web.UI.Control control, Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClientScriptResource(class System.Web.UI.Control control, class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Control,System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClientScriptResource(System::Web::UI::Control ^ control, Type ^ type, System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="static member RegisterClientScriptResource : System.Web.UI.Control * Type * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterClientScriptResource (control, type, resourceName)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterClientScriptResource(System.Web.UI.Control,System.Type,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">Элемент управления, регистрирующий скрипт.</param>
        <param name="type">Тип клиентского скрипта. Этот параметр обычно задается с оператором typeof (C#) или GetType (Visual Basic) для извлечения типа элемента управления, регистрирующего скрипт.</param>
        <param name="resourceName">Идентификатор ресурса.</param>
        <summary>Регистрирует встроенный в сборку клиентский скрипт с помощью элемента управления <see cref="T:System.Web.UI.ScriptManager" /> для использования с элементом управления, участвующем в частичной отрисовке страницы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Использовании <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> метод, чтобы зарегистрировать скрипт, который совместим с частичной отрисовке страницы, который не зависит от библиотеки Microsoft Ajax. Ресурсы скрипта, зарегистрированные с помощью этого метода, регистрируются только тогда, когда `control` представляет элемент управления, который находится внутри <xref:System.Web.UI.UpdatePanel> обновляемого элемента управления. Чтобы зарегистрировать скрипт, каждый раз при асинхронной обратной передаче, используйте <xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> перегрузку этого метода.  
  
 Если вы хотите зарегистрировать блок скрипта, который не относятся к частичного обновления страницы и если вы хотите зарегистрировать только один раз во время начальной отрисовки страницы, блок сценария используйте <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> метод <xref:System.Web.UI.ClientScriptManager> класса. Можно получить ссылку на <xref:System.Web.UI.ClientScriptManager> объекта из <xref:System.Web.UI.Page.ClientScript%2A> свойства страницы.  
  
 <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> Метод используется, если для доступа к ресурсам из сборок посредством обработчика HTTP. Этот метод включает содержимое URL-адрес ресурса в `script` элемент.  
  
 Как <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> и <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> метод нагрузки в сценарии в браузер. Если сценарий с тот же тип и ключ (для файла скрипта) или же тип и имя ресурса (для встроенного ресурса) уже загружен, скрипт не будет перезагружен.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Тип <paramref name="type" /> клиентского ресурса равен <see langword="null" />.  
  
-или- 
Элемент управления, регистрирующий скрипт, равен <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Элемент управления, регистрирующий скрипт, не найден в дереве элементов управления страницы.</exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Page,System.Type,System.String)" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptResource">
      <MemberSignature Language="C#" Value="public static void RegisterClientScriptResource (System.Web.UI.Page page, Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterClientScriptResource(class System.Web.UI.Page page, class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Page,System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterClientScriptResource(System::Web::UI::Page ^ page, Type ^ type, System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="static member RegisterClientScriptResource : System.Web.UI.Page * Type * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterClientScriptResource (page, type, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="page">Объект страницы, регистрирующий скрипт.</param>
        <param name="type">Тип клиентского скрипта. Этот параметр обычно задается с оператором typeof (C#) или GetType (Visual Basic) для извлечения типа элемента управления, регистрирующего скрипт.</param>
        <param name="resourceName">Идентификатор ресурса.</param>
        <summary>Регистрирует встроенный в сборку клиентский скрипт с помощью элемента управления <see cref="T:System.Web.UI.ScriptManager" /> при каждой асинхронной обратной передаче.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Регистрируя файл скрипта с помощью этого метода, скрипт воспроизводится при каждой асинхронной обратной передаче. Для регистрации скрипта для элемента управления, который находится внутри <xref:System.Web.UI.UpdatePanel> управления, чтобы скрипт регистрируется только тогда, когда <xref:System.Web.UI.UpdatePanel> элемент управления будет обновлен, используйте <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%29> перегрузку этого метода.  
  
 Если вы хотите зарегистрировать блок скрипта, который не относятся к частичного обновления страницы и если вы хотите зарегистрировать только один раз во время начальной отрисовки страницы, блок сценария используйте <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> метод <xref:System.Web.UI.ClientScriptManager> класса. Можно получить ссылку на <xref:System.Web.UI.ClientScriptManager> объекта из <xref:System.Web.UI.Page.ClientScript%2A> свойства страницы.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Тип <paramref name="type" /> клиентского ресурса равен <see langword="null" />.  
  
-или- 
Страница, регистрирующая скрипт, равна <see langword="null" />.</exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Control,System.Type,System.String)" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterDataItem">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Посылает пользовательские данные элементу управления во время частичной отрисовки страницы.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterDataItem">
      <MemberSignature Language="C#" Value="public void RegisterDataItem (System.Web.UI.Control control, string dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterDataItem(class System.Web.UI.Control control, string dataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterDataItem(System::Web::UI::Control ^ control, System::String ^ dataItem);" />
      <MemberSignature Language="F#" Value="member this.RegisterDataItem : System.Web.UI.Control * string -&gt; unit" Usage="scriptManager.RegisterDataItem (control, dataItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="dataItem" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">Элемент управления, получающий данные.</param>
        <param name="dataItem">Данные, посланные элементу управления.</param>
        <summary>Посылает пользовательские данные элементу управления во время частичной отрисовки страницы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> метод для отправки данных с сервера клиенту во время асинхронных обратных вызовов, независимо от того, является ли элемент управления, получающий данные внутри <xref:System.Web.UI.UpdatePanel> элемента управления.  
  
 <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> Метод может вызываться только во время асинхронной обратной передачи. Чтобы определить, является ли асинхронной обратной передачи, используйте <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> свойство. Этот метод вызывает перегрузку, принимающую параметр с именем `isJsonSerialized` , имеет значение `false`. Когда `isJsonSerialized` параметр имеет значение `false`, строки не сериализуется как JavaScript Object Notation (JSON). Дополнительные сведения о формате JSON, см. в разделе [введение в JSON](https://go.microsoft.com/fwlink/?LinkId=77297) веб-сайта.  
  
 Элементы данных, зарегистрированные в <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> метод может осуществляться из клиентского скрипта во время `pageLoading`, `pageLoaded`, и `endRequest` события `PageRequestManager` объекта. При обработке этих событий, пользовательские данные передаются в объект аргумента события. Например, если создать обработчик для `pageLoading` событий, пользовательские данные передаются в `PageLoadingEventArgs` класс, предоставляющий свойство.  
  
   
  
## Examples  
 В следующем примере показано, как отправлять данные в двух <xref:System.Web.UI.WebControls.Label> элементов управления на странице во время асинхронной обратной передачи. <xref:System.Web.UI.WebControls.Label> Элементы управления не внутри <xref:System.Web.UI.UpdatePanel> элемента управления.  
  
> [!NOTE]
>  Данные, отправляемые в этом примере приведен исключительно для иллюстрации. В реальном приложении, можно использовать <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> метод для отправки пользовательских данных с сервера.  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.RegisterDataItem#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterDataItem/CS/ScriptManagerRegisterDataItemCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.RegisterDataItem#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterDataItem/VB/ScriptManagerRegisterDataItemVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="control" /> — <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Метод <see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)" /> вызывается во время обратной передачи.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="dataItem" /> уже зарегистрирован для элемента управления <paramref name="control" />.</exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterDataItem">
      <MemberSignature Language="C#" Value="public void RegisterDataItem (System.Web.UI.Control control, string dataItem, bool isJsonSerialized);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterDataItem(class System.Web.UI.Control control, string dataItem, bool isJsonSerialized) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterDataItem(System::Web::UI::Control ^ control, System::String ^ dataItem, bool isJsonSerialized);" />
      <MemberSignature Language="F#" Value="member this.RegisterDataItem : System.Web.UI.Control * string * bool -&gt; unit" Usage="scriptManager.RegisterDataItem (control, dataItem, isJsonSerialized)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="dataItem" Type="System.String" />
        <Parameter Name="isJsonSerialized" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">Элемент управления страницы, получающий данные.</param>
        <param name="dataItem">Данные, посланные элементу управления.</param>
        <param name="isJsonSerialized"><see langword="true" /> для указания, что элемент данных <paramref name="dataItem" /> сериализован как JSON; в противном случае ─ <see langword="false" />.</param>
        <summary>Посылает пользовательские данные элементу управления во время частичной отрисовки страницы и указывает, имеют ли данные формат JavaScript Object Notation (JSON).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Использовании <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> метод для отправки данных с сервера клиенту во время асинхронных обратных вызовов, независимо от того, является ли элемент управления, получающий данные внутри <xref:System.Web.UI.UpdatePanel> элемента управления.  
  
 Если `dataItem` параметр, который вы зарегистрируетесь для `control` не сериализован как JSON, задайте `isJsonSerialized` параметр `false`. Это позволяет избежать потребность в использовании `eval` функции для каждой строки, который отправляется клиенту. Дополнительные сведения о формате JSON, см. в разделе [введение в JSON](https://go.microsoft.com/fwlink/?LinkId=77297) веб-сайта.  
  
 <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> Метод может вызываться только во время асинхронной обратной передачи. Чтобы определить, является ли асинхронной обратной передачи, используйте <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> свойство.  
  
 Элементы данных, зарегистрированные с помощью <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> метод может осуществляться из клиентского скрипта во время `pageLoading`, `pageLoaded`, и `endRequest` события `PageRequestManager` объекта. При обработке этих событий, пользовательские данные передаются в объект аргумента события. Например, если создать обработчик для `pageLoading` событий, пользовательские данные передаются в `PageLoadingEventArgs` класс, предоставляющий свойство.  
  
   
  
## Examples  
 В следующем примере показано, как отправлять данные в двух <xref:System.Web.UI.WebControls.Label> элементов управления на странице во время асинхронной обратной передачи. <xref:System.Web.UI.WebControls.Label> Элементы управления не внутри <xref:System.Web.UI.UpdatePanel> элемента управления. В этом примере показано перегрузка, которая не принимает `isJsonSerialized` параметра. В противном случае процедура получения `dataItems` свойство `PageLoadingEventArgs` объект является тем же, как если бы вы не использовали эту перегрузку.  
  
> [!NOTE]
>  Данные, отправляемые в этом примере приведен исключительно для иллюстрации. В реальном приложении, можно использовать <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> метод для отправки пользовательских данных с сервера. Например, можно использовать элемент данных на отправку сведений о том, следует ли скрывать или отображать элементы, не являющиеся изнутри клиента <xref:System.Web.UI.UpdatePanel> элемента управления.  
  
 [!code-aspx-csharp[System.Web.UI.ScriptManager.RegisterDataItem#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterDataItem/CS/ScriptManagerRegisterDataItemCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptManager.RegisterDataItem#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterDataItem/VB/ScriptManagerRegisterDataItemVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="control" /> — <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Метод <see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)" /> вызывается во время обратной передачи.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="dataItem" /> уже зарегистрирован для элемента управления <paramref name="control" />.</exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterDispose">
      <MemberSignature Language="C#" Value="public void RegisterDispose (System.Web.UI.Control control, string disposeScript);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterDispose(class System.Web.UI.Control control, string disposeScript) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterDispose(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterDispose(System::Web::UI::Control ^ control, System::String ^ disposeScript);" />
      <MemberSignature Language="F#" Value="member this.RegisterDispose : System.Web.UI.Control * string -&gt; unit" Usage="scriptManager.RegisterDispose (control, disposeScript)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterDispose(System.Web.UI.Control,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="disposeScript" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">Элемент управления, для которого предназначен скрипт <see langword="dispose" />.</param>
        <param name="disposeScript">Скрипт <see langword="dispose" />.</param>
        <summary>Регистрирует скрипт <see langword="dispose" /> для элемента управления, находящегося внутри элемента управления <see cref="T:System.Web.UI.UpdatePanel" />. Скрипт выполняется, когда элемент управления <see cref="T:System.Web.UI.UpdatePanel" /> изменяется или удаляется.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> метод, чтобы зарегистрировать `dispose` скрипты для элементов управления, которые находятся внутри <xref:System.Web.UI.UpdatePanel> элемента управления. Во время асинхронных обратных вызовов <xref:System.Web.UI.UpdatePanel> элементы управления можно обновить, удалена или создана. Когда обновляется или удаляется, любой панели `dispose` скрипты, зарегистрированные для элементов управления, которые находятся внутри <xref:System.Web.UI.UpdatePanel> вызываются. В сценариях разработки типичная страница, у вас нет для вызова <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> метод.  
  
 <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> Метод предназначен для использования разработчиками элементов управления для регистрации скрипта или создавать элементы управления, которые наследуют <xref:System.Web.UI.IScriptControl> интерфейс. Например, можно использовать `dispose` скрипта при разработке клиентского элемента управления с помощью композиции. В элементе управления, реализовать <xref:System.Web.UI.IScriptControl> и отображать отдельные элементы управления. Вы регистрируете `dispose` метод любого элемента, который не соответствует определенному клиентом компоненту например `Sys.TextBox`. Если пользовательский элемент управления объединяет элементы, соответствующие клиентские компоненты в библиотеке Microsoft Ajax, у вас нет регистрируемый `dispose` скрипт, так как `dispose` вызывается автоматически. Таким образом, использовать <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> метод для клиентских компонентов, которые являются частью библиотеки Microsoft Ajax и которые должны освобождать ресурсы, когда компонент больше не используется.  
  
 <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> Метод может вызываться несколько раз для элемента управления. Сценарии можно объединять. Порядок удаления скриптов совпадает с порядком, в котором их регистрации.  
  
 Если вы зарегистрируетесь в программе `dispose` скрипта для элемента управления, который не находится в <xref:System.Web.UI.UpdatePanel> элемента управления, возникает исключение. `dispose` Сценарий вызывается между `pageLoading` и `pageLoaded` события `PageRequestManager` класса.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="control" /> — <see langword="null" />.  
  
-или- 
 <paramref name="disposeScript" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Элемент управления <paramref name="control" /> не найден на странице.  
  
-или- 
 Элемент управления <paramref name="control" /> не находится внутри элемента управления <see cref="T:System.Web.UI.UpdatePanel" />.</exception>
        <altmember cref="T:System.Web.UI.IScriptControl" />
      </Docs>
    </Member>
    <Member MemberName="RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="public static void RegisterExpandoAttribute (System.Web.UI.Control control, string controlId, string attributeName, string attributeValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterExpandoAttribute(class System.Web.UI.Control control, string controlId, string attributeName, string attributeValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterExpandoAttribute(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterExpandoAttribute(System::Web::UI::Control ^ control, System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue, bool encode);" />
      <MemberSignature Language="F#" Value="static member RegisterExpandoAttribute : System.Web.UI.Control * string * string * string * bool -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterExpandoAttribute (control, controlId, attributeName, attributeValue, encode)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterExpandoAttribute(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">Элемент управления, регистрирующий атрибут expando.</param>
        <param name="controlId">Элемент управления, содержащий пользовательский атрибут на странице.</param>
        <param name="attributeName">Имя регистрируемого пользовательского атрибута.</param>
        <param name="attributeValue">Значение пользовательского атрибута.</param>
        <param name="encode"><see langword="true" /> для кодирования регистрируемого пользовательского атрибута; в противном случае — <see langword="false" />.</param>
        <summary>Регистрирует пару "имя-значение" с помощью элемента управления <see cref="T:System.Web.UI.ScriptManager" /> как пользовательский (expando) атрибут указанного элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Использовании <xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A> метод, чтобы зарегистрировать пользовательский (expando) свойства для элемента управления, совместимый с частичной отрисовке страницы, который не зависит от библиотеки Microsoft Ajax.  
  
 <xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A> Метод регистрирует пару имя значение в качестве настраиваемого атрибута для указанного элемента управления. Свойству динамически из ECMAScript (JavaScript) для сохранения совместимости разметки отображаемых элементов управления XHTML. Задайте `encode` для `true` при наличии в escape-знаки в значении динамические свойства.  
  
 Если элемент управления, в которую будут добавлены динамические свойства не найден, возникает ошибка в сценарии.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="control" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Элемент управления <paramref name="control" /> не найден в дереве элементов управления страницы.  
  
-или- 
 <paramref name="controlId" /> — <see langword="null" />.  
  
-или- 
 Параметр <paramref name="controlId" /> пуст.  
  
-или- 
 <paramref name="attributeName" /> — <see langword="null" />.  
  
-или- 
 Параметр <paramref name="attributeName" /> пуст.  
  
-или- 
 Параметр <paramref name="attributeName" /> уже зарегистрирован.</exception>
        <altmember cref="T:System.Web.UI.ClientScriptManager" />
      </Docs>
    </Member>
    <Member MemberName="RegisterExtenderControl&lt;TExtenderControl&gt;">
      <MemberSignature Language="C#" Value="public void RegisterExtenderControl&lt;TExtenderControl&gt; (TExtenderControl extenderControl, System.Web.UI.Control targetControl) where TExtenderControl : System.Web.UI.Control, System.Web.UI.IExtenderControl;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterExtenderControl&lt;(class System.Web.UI.Control, class System.Web.UI.IExtenderControl) TExtenderControl&gt;(!!TExtenderControl extenderControl, class System.Web.UI.Control targetControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterExtenderControl``1(``0,System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterExtenderControl(Of TExtenderControl As {Control, IExtenderControl}) (extenderControl As TExtenderControl, targetControl As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TExtenderControl&gt;&#xA; where TExtenderControl : System::Web::UI::Control, System::Web::UI::IExtenderControl virtual void RegisterExtenderControl(TExtenderControl extenderControl, System::Web::UI::Control ^ targetControl);" />
      <MemberSignature Language="F#" Value="abstract member RegisterExtenderControl : 'ExtenderControl * System.Web.UI.Control -&gt; unit (requires 'ExtenderControl :&gt; System.Web.UI.Control and 'ExtenderControl :&gt; System.Web.UI.IExtenderControl)&#xA;override this.RegisterExtenderControl : 'ExtenderControl * System.Web.UI.Control -&gt; unit (requires 'ExtenderControl :&gt; System.Web.UI.Control and 'ExtenderControl :&gt; System.Web.UI.IExtenderControl)" Usage="scriptManager.RegisterExtenderControl (extenderControl, targetControl)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManagerInternal.RegisterExtenderControl``1(``0,System.Web.UI.Control)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TExtenderControl">
          <Constraints>
            <BaseTypeName>System.Web.UI.Control</BaseTypeName>
            <InterfaceName>System.Web.UI.IExtenderControl</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="extenderControl" Type="TExtenderControl" />
        <Parameter Name="targetControl" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <typeparam name="TExtenderControl">Элемент управления, реализующий интерфейс <see cref="T:System.Web.UI.IExtenderControl" />.</typeparam>
        <param name="extenderControl">Регистрируемый управляющий элемент-расширитель.</param>
        <param name="targetControl">Элемент управления скрипта, расширяемый элементом управления-расширителем.</param>
        <summary>Регистрирует элемент управления-расширитель с помощью текущего экземпляра <see cref="T:System.Web.UI.ScriptManager" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод является главным образом для использования разработчиками элементов управления. Вызовите <xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A> метода из пользовательского элемента управления расширителя Ajax для ASP.NET во время его `onInit` обработчик событий для регистрации этого элемента управления на странице. Расширяющий элемент управления ASP.NET Ajax должны быть зарегистрированы для участия в частичной отрисовке страницы.  
  
 <xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A> Метод добавляет элемент управления заданного расширителя во внутренний список, расширяющие элементы управления и элементов управления сценария целевой, они расширяют. Этот список обрабатываемых во время <xref:System.Web.UI.Control.PreRender> событий.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="extenderControl" /> — <see langword="null" />.  
  
-или- 
 <paramref name="targetControl" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterHiddenField">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Регистрирует скрытое поле.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterHiddenField">
      <MemberSignature Language="C#" Value="public static void RegisterHiddenField (System.Web.UI.Control control, string hiddenFieldName, string hiddenFieldInitialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterHiddenField(class System.Web.UI.Control control, string hiddenFieldName, string hiddenFieldInitialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Control,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterHiddenField(System::Web::UI::Control ^ control, System::String ^ hiddenFieldName, System::String ^ hiddenFieldInitialValue);" />
      <MemberSignature Language="F#" Value="static member RegisterHiddenField : System.Web.UI.Control * string * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterHiddenField (control, hiddenFieldName, hiddenFieldInitialValue)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterHiddenField(System.Web.UI.Control,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="hiddenFieldName" Type="System.String" />
        <Parameter Name="hiddenFieldInitialValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">Возвращает элемент управления, который регистрировал скрытое поле.</param>
        <param name="hiddenFieldName">Имя регистрируемого скрытого поля.</param>
        <param name="hiddenFieldInitialValue">Первоначальное значение скрытого поля.</param>
        <summary>Регистрирует скрытое поле с помощью элемента управления <see cref="T:System.Web.UI.ScriptManager" /> для элемента управления, находящегося внутри элемента управления <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Использовании <xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A> метод, чтобы зарегистрировать скрытым полем, которое совместимо с частичной отрисовке страницы, который не зависит от библиотеки Microsoft Ajax. Этот метод регистрирует скрытое поле, когда элемент управления, регистрирующий поле находится внутри <xref:System.Web.UI.UpdatePanel> элемента управления, которая обновляется. Чтобы зарегистрировать скрытое поле каждый раз при асинхронной обратной передаче, используйте <xref:System.Web.UI.ScriptManager.RegisterHiddenField%28System.Web.UI.Page%2CSystem.String%2CSystem.String%29> перегрузку этого метода.  
  
 Если вы хотите регистрировать скрытое поле, не относящиеся к частичного обновления страницы и если вы хотите зарегистрировать скрытое поле только один раз во время начальной отрисовки страницы, используйте <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> метод <xref:System.Web.UI.ClientScriptManager> класса. Можно получить ссылку на <xref:System.Web.UI.ClientScriptManager> объекта из <xref:System.Web.UI.Page.ClientScript%2A> свойства страницы.  
  
 <xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A> Метод создает скрытый `input` элементов на подготовленной странице HTML.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="control" /> — <see langword="null" />.  
  
-или- 
 <paramref name="hiddenFieldName" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Элемент управления <paramref name="control" /> не найден в дереве элементов управления страницы.</exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Page,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterHiddenField">
      <MemberSignature Language="C#" Value="public static void RegisterHiddenField (System.Web.UI.Page page, string hiddenFieldName, string hiddenFieldInitialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterHiddenField(class System.Web.UI.Page page, string hiddenFieldName, string hiddenFieldInitialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Page,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterHiddenField(System::Web::UI::Page ^ page, System::String ^ hiddenFieldName, System::String ^ hiddenFieldInitialValue);" />
      <MemberSignature Language="F#" Value="static member RegisterHiddenField : System.Web.UI.Page * string * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterHiddenField (page, hiddenFieldName, hiddenFieldInitialValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="hiddenFieldName" Type="System.String" />
        <Parameter Name="hiddenFieldInitialValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="page">Возвращает объект страницы, регистрирующий скрытое поле.</param>
        <param name="hiddenFieldName">Имя регистрируемого скрытого поля.</param>
        <param name="hiddenFieldInitialValue">Первоначальное значение скрытого поля.</param>
        <summary>Регистрирует скрытое поле с помощью элемента управления <see cref="T:System.Web.UI.ScriptManager" /> во время каждой асинхронной обратной передачи.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Использовании <xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A> метод, чтобы зарегистрировать скрытым полем, которое совместимо с частичной отрисовке страницы, который не зависит от библиотеки Microsoft Ajax. Этот метод регистрирует скрытое поле при каждой асинхронной обратной передаче. Регистрируемого скрытого поля для элемента управления, который находится внутри <xref:System.Web.UI.UpdatePanel> управления, чтобы поле зарегистрирован только в том случае, если панель обновляется, используйте <xref:System.Web.UI.ScriptManager.RegisterHiddenField%28System.Web.UI.Control%2CSystem.String%2CSystem.String%29> перегрузку этого метода.  
  
 Если вы хотите регистрировать скрытое поле, не относящиеся к частичного обновления страницы и если вы хотите зарегистрировать скрытое поле только один раз во время начальной отрисовки страницы, используйте <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> метод <xref:System.Web.UI.ClientScriptManager> класса. Можно получить ссылку на <xref:System.Web.UI.ClientScriptManager> объекта из <xref:System.Web.UI.Page.ClientScript%2A> свойства страницы.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="page" /> — <see langword="null" />.  
  
-или- 
 <paramref name="hiddenFieldName" /> — <see langword="null" />.</exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Control,System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterNamedClientScriptResource">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Регистрирует встроенный в сборку клиентский скрипт по имени ресурса с помощью элемента управления <see cref="T:System.Web.UI.ScriptManager" /> для использования с элементом управления, участвующем в частичной отрисовке страницы.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterNamedClientScriptResource">
      <MemberSignature Language="C#" Value="public static void RegisterNamedClientScriptResource (System.Web.UI.Control control, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterNamedClientScriptResource(class System.Web.UI.Control control, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterNamedClientScriptResource(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterNamedClientScriptResource(System::Web::UI::Control ^ control, System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="static member RegisterNamedClientScriptResource : System.Web.UI.Control * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterNamedClientScriptResource (control, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="resourceName" Type="System.String" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="control">Элемент управления, регистрирующий скрипт.</param>
        <param name="resourceName">Идентификатор ресурса.</param>
        <summary>Регистрирует встроенный в сборку клиентский скрипт по имени ресурса с помощью элемента управления <see cref="T:System.Web.UI.ScriptManager" /> для использования с элементом управления, участвующем в частичной отрисовке страницы.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterNamedClientScriptResource">
      <MemberSignature Language="C#" Value="public static void RegisterNamedClientScriptResource (System.Web.UI.Page page, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterNamedClientScriptResource(class System.Web.UI.Page page, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterNamedClientScriptResource(System.Web.UI.Page,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterNamedClientScriptResource(System::Web::UI::Page ^ page, System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="static member RegisterNamedClientScriptResource : System.Web.UI.Page * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterNamedClientScriptResource (page, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="resourceName" Type="System.String" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="page">Объект страницы, регистрирующий скрипт.</param>
        <param name="resourceName">Идентификатор ресурса.</param>
        <summary>Регистрирует встроенный в сборку клиентский скрипт по имени ресурса с помощью элемента управления <see cref="T:System.Web.UI.ScriptManager" /> для использования с элементом управления, участвующем в частичной отрисовке страницы.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterOnSubmitStatement">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Регистрирует код ECMAScript (JavaScript), выполняемый при отправке формы.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterOnSubmitStatement">
      <MemberSignature Language="C#" Value="public static void RegisterOnSubmitStatement (System.Web.UI.Control control, Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterOnSubmitStatement(class System.Web.UI.Control control, class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Control,System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterOnSubmitStatement(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberSignature Language="F#" Value="static member RegisterOnSubmitStatement : System.Web.UI.Control * Type * string * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterOnSubmitStatement (control, type, key, script)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterOnSubmitStatement(System.Web.UI.Control,System.Type,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">Элемент управления, регистрирующий оператор <see langword="onsubmit" />.</param>
        <param name="type">Тип оператора клиентского скрипта. Этот параметр обычно задается с оператором typeof (C#) или GetType (Visual Basic) для извлечения типа элемента управления, регистрирующего скрипт.</param>
        <param name="key">Уникальный идентификатор оператора скрипта.</param>
        <param name="script">Скрипт для регистрации.</param>
        <summary>Регистрирует код ECMAScript (JavaScript) с помощью элемента управления <see cref="T:System.Web.UI.ScriptManager" /> для элемента управления, используемого элементом управления <see cref="T:System.Web.UI.UpdatePanel" />, выполняемым при отправке формы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A> Добавляет сценария, выполняемого перед отправкой формы, который позволяет изменять отправки или отменить его.  
  
 Использовании <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A> для отрисовки `onsubmit` инструкцию, которая совместима с частичной отрисовки страницы и имеет без зависимостей библиотеки Microsoft Ajax. Код JavaScript, который регистрируется с помощью этого метода отправляется на страницу, только в том случае, если элемент управления, регистрирующий оператор находится внутри <xref:System.Web.UI.UpdatePanel> элемента управления, которая обновляется. Чтобы зарегистрировать код каждой асинхронной обратной передачи, используйте <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%29> перегрузку этого метода.  
  
 Если вы хотите зарегистрировать код JavaScript, не относящихся к частичного обновления страницы и если вы хотите зарегистрировать в коде только один раз во время начальной отрисовки страницы, используйте <xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> метод <xref:System.Web.UI.ClientScriptManager> класса. Можно получить ссылку на <xref:System.Web.UI.ClientScriptManager> объекта из <xref:System.Web.UI.Page.ClientScript%2A> свойства страницы.  
  
 *Сценарий* параметр <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A> метод может содержать нескольких команд сценария, которые разделяются точкой с запятой (;).  
  
 Дополнительные сведения о HTML-формы и `onsubmit` событий, см. в разделе [World Wide Web Consortium (W3C) веб-сайт](https://go.microsoft.com/fwlink/?linkid=37125).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="control" /> — <see langword="null" />.  
  
-или- 
 <paramref name="type" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Элемент управления <paramref name="control" /> не найден в дереве элементов управления страницы.</exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Page,System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterOnSubmitStatement">
      <MemberSignature Language="C#" Value="public static void RegisterOnSubmitStatement (System.Web.UI.Page page, Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterOnSubmitStatement(class System.Web.UI.Page page, class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Page,System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterOnSubmitStatement(System::Web::UI::Page ^ page, Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberSignature Language="F#" Value="static member RegisterOnSubmitStatement : System.Web.UI.Page * Type * string * string -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterOnSubmitStatement (page, type, key, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="page">Объект страницы, регистрирующий оператор <see langword="onsubmit" />.</param>
        <param name="type">Тип оператора клиентского скрипта. Этот параметр обычно задается с оператором typeof (C#) или GetType (Visual Basic) для извлечения типа элемента управления, регистрирующего скрипт.</param>
        <param name="key">Уникальный идентификатор оператора скрипта.</param>
        <param name="script">Скрипт для регистрации.</param>
        <summary>Регистрирует код ECMAScript (JavaScript) с помощью элемента управления <see cref="T:System.Web.UI.ScriptManager" /> для элемента управления, используемого элементом управления <see cref="T:System.Web.UI.UpdatePanel" />, выполняемым при отправке формы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Регистрация кода JavaScript с помощью этого метода вызывает включение сценария при каждой асинхронной обратной передаче.  
  
> [!NOTE]
>  Код из любой ранее асинхронные обратные передачи не удаляется. Новые асинхронные обратные передачи добавления кода к существующему коду для `onsubmit` инструкции.  
  
 Для регистрации кода для элемента управления, который находится внутри <xref:System.Web.UI.UpdatePanel> управления таким образом, чтобы код регистрируется только тогда, когда <xref:System.Web.UI.UpdatePanel> элемент управления будет обновлен, используйте <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%29> перегрузку этого метода.  
  
 Если вы хотите зарегистрировать код JavaScript, не относящихся к частичного обновления страницы и если вы хотите зарегистрировать в коде только один раз во время начальной отрисовки страницы, используйте <xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> метод <xref:System.Web.UI.ClientScriptManager> класса. Можно получить ссылку на <xref:System.Web.UI.ClientScriptManager> объекта из <xref:System.Web.UI.Page.ClientScript%2A> свойства страницы.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="page" /> — <see langword="null" />.  
  
-или- 
 <paramref name="type" /> — <see langword="null" />.</exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Control,System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterPostBackControl">
      <MemberSignature Language="C#" Value="public void RegisterPostBackControl (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterPostBackControl(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterPostBackControl(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterPostBackControl(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member RegisterPostBackControl : System.Web.UI.Control -&gt; unit&#xA;override this.RegisterPostBackControl : System.Web.UI.Control -&gt; unit" Usage="scriptManager.RegisterPostBackControl control" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterPostBackControl(System.Web.UI.Control)</InterfaceMember>
        <InterfaceMember>M:System.Web.UI.IScriptManagerInternal.RegisterPostBackControl(System.Web.UI.Control)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">Элемент управления для регистрации обратной передачи.</param>
        <summary>Регистрирует элемент управления в качестве триггера обратной передачи. Этот метод используется для настройки элементов управления обратной передачи, находящихся внутри элемента управления <see cref="T:System.Web.UI.UpdatePanel" />, который в противном случае выполняет асинхронные обратные передачи.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A> метод, чтобы зарегистрировать элементы управления обратной передачи внутри <xref:System.Web.UI.UpdatePanel> управления как триггеры. Обновление элементов управления, которые зарегистрированы с помощью этого метода всю страницу вместо обновления только <xref:System.Web.UI.UpdatePanel> содержимого элемента управления. Регистрация элемента управления обратной передачи с помощью этого метода за пределами <xref:System.Web.UI.UpdatePanel> элемент управления имеет не влияет, поскольку по умолчанию эти элементы управления не выполняют асинхронных обратных вызовов.  
  
 Триггер можно добавить декларативно с помощью `Triggers` элемент <xref:System.Web.UI.UpdatePanel> элемента управления. В Visual Studio с помощью конструктора **коллекции UpdatePanelTrigger** диалоговое окно.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.Triggers" />
      </Docs>
    </Member>
    <Member MemberName="RegisterScriptControl&lt;TScriptControl&gt;">
      <MemberSignature Language="C#" Value="public void RegisterScriptControl&lt;TScriptControl&gt; (TScriptControl scriptControl) where TScriptControl : System.Web.UI.Control, System.Web.UI.IScriptControl;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterScriptControl&lt;(class System.Web.UI.Control, class System.Web.UI.IScriptControl) TScriptControl&gt;(!!TScriptControl scriptControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterScriptControl``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterScriptControl(Of TScriptControl As {Control, IScriptControl}) (scriptControl As TScriptControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TScriptControl&gt;&#xA; where TScriptControl : System::Web::UI::Control, System::Web::UI::IScriptControl virtual void RegisterScriptControl(TScriptControl scriptControl);" />
      <MemberSignature Language="F#" Value="abstract member RegisterScriptControl : 'ScriptControl -&gt; unit (requires 'ScriptControl :&gt; System.Web.UI.Control and 'ScriptControl :&gt; System.Web.UI.IScriptControl)&#xA;override this.RegisterScriptControl : 'ScriptControl -&gt; unit (requires 'ScriptControl :&gt; System.Web.UI.Control and 'ScriptControl :&gt; System.Web.UI.IScriptControl)" Usage="scriptManager.RegisterScriptControl scriptControl" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManagerInternal.RegisterScriptControl``1(``0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TScriptControl">
          <Constraints>
            <BaseTypeName>System.Web.UI.Control</BaseTypeName>
            <InterfaceName>System.Web.UI.IScriptControl</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="scriptControl" Type="TScriptControl" />
      </Parameters>
      <Docs>
        <typeparam name="TScriptControl">Элемент управления, реализующий интерфейс <see cref="T:System.Web.UI.IScriptControl" />.</typeparam>
        <param name="scriptControl">Регистрируемый элемент управления скрипта.</param>
        <summary>Регистрирует элемент управления скрипта с помощью текущего экземпляра <see cref="T:System.Web.UI.ScriptManager" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод является главным образом для использования разработчиками элементов управления. Вызовите <xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A> метода из пользовательского элемента управления ASP.NET Ajax скрипта во время его `onInit` обработчик событий для регистрации этого элемента управления на странице. Элемент управления ASP.NET Ajax сценария должны быть зарегистрированы для участия в частичной отрисовке страницы.  
  
 <xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A> Метод добавляет элемент управления заданного расширителя во внутренний список элементов управления сценария, обрабатываемых во время <xref:System.Web.UI.Control.PreRender> событий.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="scriptControl" /> — <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterScriptDescriptors">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Предписывает элементу управления <see cref="T:System.Web.UI.ScriptManager" /> осуществить обратный вызов класса <see cref="T:System.Web.UI.ScriptControl" /> или <see cref="T:System.Web.UI.ExtenderControl" /> для возвращения скриптов, поддерживающих клиентский объект, который представляет клиентский элемент управления, компонент или поведение.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterScriptDescriptors">
      <MemberSignature Language="C#" Value="public void RegisterScriptDescriptors (System.Web.UI.IExtenderControl extenderControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterScriptDescriptors(class System.Web.UI.IExtenderControl extenderControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IExtenderControl)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterScriptDescriptors (extenderControl As IExtenderControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterScriptDescriptors(System::Web::UI::IExtenderControl ^ extenderControl);" />
      <MemberSignature Language="F#" Value="abstract member RegisterScriptDescriptors : System.Web.UI.IExtenderControl -&gt; unit&#xA;override this.RegisterScriptDescriptors : System.Web.UI.IExtenderControl -&gt; unit" Usage="scriptManager.RegisterScriptDescriptors extenderControl" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManagerInternal.RegisterScriptDescriptors(System.Web.UI.IExtenderControl)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extenderControl" Type="System.Web.UI.IExtenderControl" />
      </Parameters>
      <Docs>
        <param name="extenderControl">Элемент управления-расширитель, для которого были зарегистрированы дескрипторы скрипта.</param>
        <summary>Осуществляет обратный вызов класса <see cref="T:System.Web.UI.ExtenderControl" /> для возвращения скриптов экземпляра, которые должны использоваться для поддержки клиентского объекта, представляющего клиентский элемент управления, компонент или поведение.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ExtenderControl> Вызываемый классом <xref:System.Web.UI.ScriptManager.RegisterScriptDescriptors%2A> метод в его <xref:System.Web.UI.Control.Render%2A> метод.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Если вы наследуете от <see cref="T:System.Web.UI.ExtenderControl" /> класса и переопределить <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> метод, но не следует вызывать метод базового класса, необходимо вызвать <see cref="M:System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IExtenderControl)" /> метод. Это позволяет <see cref="T:System.Web.UI.ScriptManager" /> управления для подготовки к просмотру сценарии экземпляра, поддерживающие клиентский объект, представляющий элемент управления.</para></block>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterExtenderControl``1(``0,System.Web.UI.Control)" />
        <altmember cref="T:System.Web.UI.ScriptDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="RegisterScriptDescriptors">
      <MemberSignature Language="C#" Value="public void RegisterScriptDescriptors (System.Web.UI.IScriptControl scriptControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterScriptDescriptors(class System.Web.UI.IScriptControl scriptControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IScriptControl)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterScriptDescriptors (scriptControl As IScriptControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterScriptDescriptors(System::Web::UI::IScriptControl ^ scriptControl);" />
      <MemberSignature Language="F#" Value="abstract member RegisterScriptDescriptors : System.Web.UI.IScriptControl -&gt; unit&#xA;override this.RegisterScriptDescriptors : System.Web.UI.IScriptControl -&gt; unit" Usage="scriptManager.RegisterScriptDescriptors scriptControl" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManagerInternal.RegisterScriptDescriptors(System.Web.UI.IScriptControl)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptControl" Type="System.Web.UI.IScriptControl" />
      </Parameters>
      <Docs>
        <param name="scriptControl">Элемент управления скрипта, для которого будут зарегистрированы дескрипторы скрипта.</param>
        <summary>Осуществляет вызов класса <see cref="T:System.Web.UI.ScriptControl" /> для возврата скриптов экземпляра, которые должны использоваться для поддержки клиентского объекта, представляющего клиентский элемент управления, компонент или поведение.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ScriptControl> Вызываемый классом <xref:System.Web.UI.ScriptManager.RegisterScriptDescriptors%2A> метод во время его <xref:System.Web.UI.Control.Render%2A> событий.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Если вы наследуете от <see cref="T:System.Web.UI.ScriptControl" /> класса и переопределить <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> метод, но не следует вызывать метод базового класса, необходимо вызвать <see cref="M:System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IScriptControl)" /> метод. Это позволяет <see cref="T:System.Web.UI.ScriptManager" /> управления для подготовки к просмотру сценарии экземпляра, поддерживающие клиентский объект, представляющий элемент управления.</para></block>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterScriptControl``1(``0)" />
        <altmember cref="T:System.Web.UI.ScriptDescriptor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterStartupScript">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Регистрирует стартовый блок скрипта с помощью элемента управления <see cref="T:System.Web.UI.ScriptManager" /> и добавляет блок скрипта к странице.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public static void RegisterStartupScript (System.Web.UI.Control control, Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterStartupScript(class System.Web.UI.Control control, class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterStartupScript(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberSignature Language="F#" Value="static member RegisterStartupScript : System.Web.UI.Control * Type * string * string * bool -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterStartupScript (control, type, key, script, addScriptTags)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterStartupScript(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">Элемент управления, регистрирующий блок клиентского скрипта.</param>
        <param name="type">Тип блока клиентского скрипта. Этот параметр обычно задается с оператором typeof (C#) или GetType (Visual Basic) для извлечения типа элемента управления, регистрирующего скрипт.</param>
        <param name="key">Уникальный идентификатор для блока скрипта.</param>
        <param name="script">Скрипт для регистрации.</param>
        <param name="addScriptTags"><see langword="true" /> для заключения блока скрипта в теги <see langword="&lt;script&gt;" /> и <see langword="&lt;/script&gt;" />; в противном случае — <see langword="false" />.</param>
        <summary>Регистрирует стартовый блок скрипта для элемента управления, находящегося внутри <see cref="T:System.Web.UI.UpdatePanel" />, используя элемент управления <see cref="T:System.Web.UI.ScriptManager" />, и добавляет блок скрипта к странице.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Использовании <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A> метод, чтобы зарегистрировать стартовый блок скрипта для страницы, которая совместима с частичной отрисовке страницы, который не зависит от библиотеки Microsoft Ajax. Блоки скриптов запуска, которые зарегистрированы с помощью этого метода отправляются на страницу, только в том случае, если элемент управления, регистрирующий блок находится внутри <xref:System.Web.UI.UpdatePanel> элемента управления, которая обновляется. Чтобы зарегистрировать каждый раз при асинхронной обратной передаче стартовый блок скрипта, используйте <xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> перегрузку этого метода.  
  
 Если вы хотите зарегистрировать, не относящихся к частичного обновления страницы и если вы хотите зарегистрировать сценарий только один раз во время начальной отрисовки страницы, используйте сценарий запуска <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> метод <xref:System.Web.UI.ClientScriptManager> класса. Можно получить ссылку на <xref:System.Web.UI.ClientScriptManager> объекта из <xref:System.Web.UI.Page.ClientScript%2A> свойства страницы.  
  
 Блок скрипта, которая визуализируется <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A> завершении загрузки страницы, но до страницы клиента выполняется метод `onload` события. Блоки скриптов запуска находятся в нижней части отображаемой страницы ASP.NET непосредственно перед `</form>` тега.  
  
 Блоки скриптов запуска, которые зарегистрированы с помощью <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A> , не обязательно будут выходные данные в том же порядке, в котором они зарегистрированы. Если важен порядок блоков скрипта запуска, использовать <xref:System.Text.StringBuilder> для сбора сценариев в одну строку, а затем зарегистрировать их все как один запускаемый сценарий.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="control" /> — <see langword="null" />.  
  
-или- 
 <paramref name="type" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Элемент управления <paramref name="control" /> не найден в дереве элементов управления страницы.</exception>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public static void RegisterStartupScript (System.Web.UI.Page page, Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterStartupScript(class System.Web.UI.Page page, class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterStartupScript(System::Web::UI::Page ^ page, Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberSignature Language="F#" Value="static member RegisterStartupScript : System.Web.UI.Page * Type * string * string * bool -&gt; unit" Usage="System.Web.UI.ScriptManager.RegisterStartupScript (page, type, key, script, addScriptTags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="page">Объект страницы, регистрирующий блок клиентского скрипта.</param>
        <param name="type">Тип блока клиентского скрипта. Этот параметр обычно задается с оператором typeof (C#) или GetType (Visual Basic) для извлечения типа элемента управления, регистрирующего скрипт.</param>
        <param name="key">Уникальный идентификатор для блока скрипта.</param>
        <param name="script">Скрипт для регистрации.</param>
        <param name="addScriptTags"><see langword="true" /> для заключения блока скрипта в теги <see langword="&lt;script&gt;" /> и <see langword="&lt;/script&gt;" />; в противном случае — <see langword="false" />.</param>
        <summary>Регистрирует стартовый блок скрипта для каждой асинхронной обратной передачи с помощью элемента управления <see cref="T:System.Web.UI.ScriptManager" /> и добавляет блок скрипта к странице.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод позволяет зарегистрировать стартовый блок скрипта, включенные при каждой асинхронной обратной передаче. Регистрируемый блок скрипта для элемента управления, который находится внутри <xref:System.Web.UI.UpdatePanel> управления, чтобы блок скрипта зарегистрирован только тогда, когда <xref:System.Web.UI.UpdatePanel> элемент управления будет обновлен, используйте <xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> перегрузку этого метода.  
  
 Если вы хотите зарегистрировать, не относящихся к частичного обновления страницы и если вы хотите зарегистрировать сценарий только один раз во время начальной отрисовки страницы, используйте сценарий запуска <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> метод <xref:System.Web.UI.ClientScriptManager> класса. Можно получить ссылку на <xref:System.Web.UI.ClientScriptManager> объекта из <xref:System.Web.UI.Page.ClientScript%2A> свойства страницы.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="scriptManager.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект, получающий содержимое элемента управления, для записи на страницу.</param>
        <summary>Выполняет отрисовку содержимое элемента управления <see cref="T:System.Web.UI.ScriptManager" /> в браузере, используя указанный объект <see cref="T:System.Web.UI.HtmlTextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод используется разработчиками элементов управления для расширения <xref:System.Web.UI.ScriptManager> элемента управления.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При переопределении этого метода, вызвать базовый <see cref="M:System.Web.UI.ScriptManager.Render(System.Web.UI.HtmlTextWriter)" /> метод таким образом, чтобы клиентского скрипта, который определяет `Sys.WebForms.PageRequestManager` класса отображается на странице.</para></block>
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="ResolveCompositeScriptReference">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.CompositeScriptReferenceEventArgs&gt; ResolveCompositeScriptReference;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.CompositeScriptReferenceEventArgs&gt; ResolveCompositeScriptReference" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.ScriptManager.ResolveCompositeScriptReference" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveCompositeScriptReference As EventHandler(Of CompositeScriptReferenceEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::CompositeScriptReferenceEventArgs ^&gt; ^ ResolveCompositeScriptReference;" />
      <MemberSignature Language="F#" Value="member this.ResolveCompositeScriptReference : EventHandler&lt;System.Web.UI.CompositeScriptReferenceEventArgs&gt; " Usage="member this.ResolveCompositeScriptReference : System.EventHandler&lt;System.Web.UI.CompositeScriptReferenceEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.CompositeScriptReferenceEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, когда составной скрипт регистрируется с помощью элемента управления <see cref="T:System.Web.UI.ScriptManager" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveScriptReference">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.ScriptReferenceEventArgs&gt; ResolveScriptReference;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.ScriptReferenceEventArgs&gt; ResolveScriptReference" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.ScriptManager.ResolveScriptReference" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveScriptReference As EventHandler(Of ScriptReferenceEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::ScriptReferenceEventArgs ^&gt; ^ ResolveScriptReference;" />
      <MemberSignature Language="F#" Value="member this.ResolveScriptReference : EventHandler&lt;System.Web.UI.ScriptReferenceEventArgs&gt; " Usage="member this.ResolveScriptReference : System.EventHandler&lt;System.Web.UI.ScriptReferenceEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.ScriptReferenceEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, когда элемент коллекции <see cref="P:System.Web.UI.ScriptManager.Scripts" /> регистрируется с помощью элемента управления <see cref="T:System.Web.UI.ScriptManager" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие возникает один раз для каждого члена <xref:System.Web.UI.ScriptManager.Scripts%2A> коллекции во время страницы <xref:System.Web.UI.Control.PreRender> событий. Используйте это событие для любых обновлений перед его подготовкой к просмотру на страницу.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleService">
      <MemberSignature Language="C#" Value="public System.Web.UI.RoleServiceManager RoleService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.RoleServiceManager RoleService" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.RoleService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoleService As RoleServiceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::RoleServiceManager ^ RoleService { System::Web::UI::RoleServiceManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RoleService : System.Web.UI.RoleServiceManager" Usage="System.Web.UI.ScriptManager.RoleService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.RoleServiceManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Web.UI.RoleServiceManager" />, связанный с текущим экземпляром <see cref="T:System.Web.UI.ScriptManager" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.RoleServiceManager" /> для текущего экземпляра <see cref="T:System.Web.UI.ScriptManager" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.RoleServiceManager> Службу роли, который регистрируется с помощью страницы представляет объект, который возвращается этим свойством. Служба роли могут определяться в <xref:System.Web.UI.ScriptManager> управления или связанным <xref:System.Web.UI.ScriptManagerProxy> элемента управления. Можно использовать службу роли ASP.NET или использовать пользовательскую службу роли. Можно добавить пользовательскую службу в разметке, включив `RoleService` элемент внутри `asp:ScriptManager` элемента на странице, как показано в следующем примере:  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <RoleService Path="MyRoleService.asmx" LoadRoles="True" />  
</asp:ScriptManager>  
```  
  
 Можно также программным способом настроить <xref:System.Web.UI.RoleServiceManager> объекта. С помощью службы регистрируются <xref:System.Web.UI.ScriptManager> элемента управления во время страницы <xref:System.Web.UI.Control.PreRender> жизненного цикла рабочей области.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ScriptMode ScriptMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ScriptMode ScriptMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.ScriptMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptMode As ScriptMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ScriptMode ScriptMode { System::Web::UI::ScriptMode get(); void set(System::Web::UI::ScriptMode value); };" />
      <MemberSignature Language="F#" Value="member this.ScriptMode : System.Web.UI.ScriptMode with get, set" Usage="System.Web.UI.ScriptManager.ScriptMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ScriptMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или устанавливает значение, указывающее, какая версия библиотек клиентских скриптов предоставляется: отладочная или версия для выпуска.</summary>
        <value>Значение перечисления, указывающее текущий режим. Значение по умолчанию — <see cref="F:System.Web.UI.ScriptMode.Auto" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ScriptManager.ScriptMode%2A> Свойство указывает, является ли <xref:System.Web.UI.ScriptManager> управления следует подготовить к просмотру отладки или версии библиотек клиентских сценариев. Это значение может быть заменен значения, заданные в файле конфигурации, а также в директиве page.  
  
 В следующей таблице перечислены допустимые значения для этого свойства.  
  
|Значение|Определение|  
|-----------|----------------|  
|<xref:System.Web.UI.ScriptMode.Auto>|Отладочные версии библиотеки используются на веб-странице клиентского скрипта при `retail` атрибут [развертывания](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms228298(v%3dvs.100)) элемента конфигурации присваивается `false`. В противном случае используются версии библиотек клиентских сценариев.|  
|<xref:System.Web.UI.ScriptMode.Inherit>|При применении к <xref:System.Web.UI.ScriptManager.ScriptMode%2A> свойство <xref:System.Web.UI.ScriptManager> объекта, это значение совпадает со значением <xref:System.Web.UI.ScriptMode.Auto>.|  
|<xref:System.Web.UI.ScriptMode.Debug>|Отладочные версии библиотек используется в веб-страницы, если клиентский скрипт `retail` атрибут [развертывания](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms228298(v%3dvs.100)) элемента конфигурации присваивается `true`.|  
|<xref:System.Web.UI.ScriptMode.Release>|Версия библиотек клиентских скриптов используется в веб-страницы, если `retail` атрибут [развертывания](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms228298(v%3dvs.100)) элемента конфигурации присваивается `false`.|  
  
> [!NOTE]
>  `debug` Атрибут [@ Page](https://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) директива не влияет на приложения с поддержкой Ajax ASP.NET. <xref:System.Web.UI.ScriptManager> Элемент управления использует только параметры в файле Web.config и в его <xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A> и <xref:System.Web.UI.ScriptManager.ScriptMode%2A> свойства, чтобы определить, следует ли отображать отладочных сценариях.  
  
 Дополнительные сведения см. в разделе [отладка и трассировка Ajax Applications Overview](https://msdn.microsoft.com/library/92684ea0-7bb4-4a34-9203-3aa6394ce375).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение свойства <see cref="P:System.Web.UI.ScriptManager.ScriptMode" /> не равно ни одному из значений <see cref="T:System.Web.UI.ScriptMode" />.</exception>
        <altmember cref="T:System.Web.UI.ScriptMode" />
      </Docs>
    </Member>
    <Member MemberName="ScriptPath">
      <MemberSignature Language="C#" Value="public string ScriptPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScriptPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.ScriptPath" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScriptPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScriptPath : string with get, set" Usage="System.Web.UI.ScriptManager.ScriptPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This property is obsolete. Set the Path property on each individual ScriptReference instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает корневой путь расположения, используемого для построения пути к ASP.NET с функциональностью AJAX и пользовательским файлам скриптов.</summary>
        <value>Место хранения файлов скриптов. По умолчанию значение содержит пустую строку (""), интерпретируемую как относительный путь.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ScriptManager.ScriptPath%2A> Свойство позволяет указать является абсолютным, относительным, или URL-адрес относительно приложения для всех сценариев блокирует на странице. Это включает пользовательские и сторонние скрипт блоки, зарегистрированные с текущим <xref:System.Web.UI.ScriptManager> экземпляра. <xref:System.Web.UI.ScriptManager.ScriptPath%2A> Свойство обычно задается декларативно, как атрибуты элемента `ScriptManager` элемент на странице, но его можно также задать в коде.  
  
 Если `path` атрибут или <xref:System.Web.UI.ScriptReferenceBase.Path%2A> задано для <xref:System.Web.UI.ScriptReference> объекта в <xref:System.Web.UI.ScriptManager.Scripts%2A> переопределяет значение пути коллекции, <xref:System.Web.UI.ScriptManager.ScriptPath%2A> значение для этого <xref:System.Web.UI.ScriptReference> экземпляра.  
  
 Если не <xref:System.Web.UI.ScriptReferenceBase.Path%2A> значение указано, <xref:System.Web.UI.ScriptManager> управления указана папка, которая определяется <xref:System.Web.UI.ScriptManager.ScriptPath%2A> ссылается на свойство и разрешает скрипт с их <xref:System.Web.UI.ScriptReference.Name%2A> или <xref:System.Web.UI.ScriptReference.Assembly%2A> свойства.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptResourceMapping">
      <MemberSignature Language="C#" Value="public static System.Web.UI.ScriptResourceMapping ScriptResourceMapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.UI.ScriptResourceMapping ScriptResourceMapping" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.ScriptResourceMapping" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ScriptResourceMapping As ScriptResourceMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::UI::ScriptResourceMapping ^ ScriptResourceMapping { System::Web::UI::ScriptResourceMapping ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ScriptResourceMapping : System.Web.UI.ScriptResourceMapping" Usage="System.Web.UI.ScriptManager.ScriptResourceMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ScriptResourceMapping</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект <see cref="T:System.Web.UI.ScriptResourceMapping" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.ScriptResourceMapping" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Статический <xref:System.Web.UI.ScriptManager.ScriptResourceMapping%2A> возвращает <xref:System.Web.UI.ScriptResourceMapping> объект, который может содержать коллекцию сопоставлений, определяющих расположение ресурса скрипта (перенаправлением скриптов). Этот набор сопоставлений может быть сопоставлен на основе имен или пары "имя/сборки", и он может указывать на <xref:System.Web.UI.ScriptResourceDefinition> объекта.  
  
   
  
## Examples  
 Ниже показано, как добавить <xref:System.Web.UI.ScriptResourceDefinition> объект, который позволяет ссылаться на <xref:System.Web.UI.ScriptManager> объекта. Добавьте следующий код в файл Global.asax в `Application_Start` событий.  
  
```csharp  
ScriptResourceDefinition myScriptResDef = new ScriptResourceDefinition();  
myScriptResDef.Path = "~/Scripts/jquery-1.4.2.min.js";  
myScriptResDef.DebugPath = "~/Scripts/jquery-1.4.2.js";  
myScriptResDef.CdnPath = "http://ajax.microsoft.com/ajax/jQuery/jquery-1.4.2.min.js";  
myScriptResDef.CdnDebugPath = "http://ajax.microsoft.com/ajax/jQuery/jquery-1.4.2.js";  
ScriptManager.ScriptResourceMapping.AddDefinition("jquery", null, myScriptResDef);  
```  
  
```vb  
Dim myScriptResDef As New ScriptResourceDefinition()  
myScriptResDef.Path = "~/Scripts/jquery-1.4.2.min.js"  
myScriptResDef.DebugPath = "~/Scripts/jquery-1.4.2.js"  
myScriptResDef.CdnPath = "http://ajax.microsoft.com/ajax/jQuery/jquery-1.4.2.min.js"  
myScriptResDef.CdnDebugPath = "http://ajax.microsoft.com/ajax/jQuery/jquery-1.4.2.js"  
ScriptManager.ScriptResourceMapping.AddDefinition("jquery", Nothing, myScriptResDef)  
```  
  
 В разметке страницы веб-форм ASP.NET (ASPX-файл), добавьте следующую разметку внутри `form` элемента и прежде, чем любые элементы или код, который использует сценарий jQuery.  
  
```  
<asp:ScriptManager ID="sm1" runat="server">  
  <Scripts>  
    <asp:ScriptReference Name="jquery"/>  
  </Scripts>  
</asp:ScriptManager>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scripts">
      <MemberSignature Language="C#" Value="public System.Web.UI.ScriptReferenceCollection Scripts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ScriptReferenceCollection Scripts" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.Scripts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scripts As ScriptReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ScriptReferenceCollection ^ Scripts { System::Web::UI::ScriptReferenceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scripts : System.Web.UI.ScriptReferenceCollection" Usage="System.Web.UI.ScriptManager.Scripts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.CollectionEditorBase, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.CollectionEditorBase, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ScriptReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Web.UI.ScriptReferenceCollection" />, содержащий объекты <see cref="T:System.Web.UI.ScriptReference" />, каждый из которых представляет файл скрипта, предоставленный клиенту.</summary>
        <value>Объект <see cref="T:System.Web.UI.ScriptReferenceCollection" /> экземпляра <see cref="T:System.Web.UI.ScriptManager" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ScriptReferenceCollection> Объект, возвращаемый этим свойством является коллекцией <xref:System.Web.UI.ScriptReference> объектов, каждый из которых представляет файл скрипта. Коллекция включает ссылки на файлы сценариев, необходимых для обеспечения функциональности Ajax ASP.NET, а также к пользовательским файлам скриптов. Можно определить пользовательские файлы скриптов для подготовки к просмотру в <xref:System.Web.UI.ScriptManager> управления или связанным <xref:System.Web.UI.ScriptManagerProxy> элемента управления.  
  
 Файлы скриптов можно добавить в коллекцию в разметке, добавив `asp:ScriptReference` элементы `Scripts` узел внутри `asp:ScriptManager` элемента на странице, как показано в следующем примере.  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <Scripts>  
    <asp:ScriptReference Name="Script.js" />  
  </Scripts>  
</asp:ScriptManager>  
```  
  
 Можно также добавить <xref:System.Web.UI.ScriptReference> объект <xref:System.Web.UI.ScriptManager.Scripts%2A> коллекции программно с помощью <xref:System.Collections.ObjectModel.Collection%601.Add%2A> метод <xref:System.Web.UI.ScriptReferenceCollection> класса.  
  
 <xref:System.Web.UI.ScriptManager> Управления регистрирует файлы скрипта во время управления <xref:System.Web.UI.Control.PreRender> событий.  
  
 <xref:System.Web.UI.ScriptManager.Scripts%2A> Коллекция не содержит основных скриптов библиотеки Microsoft Ajax. Скрипты в основной библиотеки визуализируются автоматически. они не должны быть зарегистрированы с <xref:System.Web.UI.ScriptManager> элемента управления. Тем не менее, если вы хотите переопределить основной сценарий или любой сценарий элемента управления и подставить другую версию сценария, можно добавить версии <xref:System.Web.UI.ScriptManager.Scripts%2A> коллекции.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Services">
      <MemberSignature Language="C#" Value="public System.Web.UI.ServiceReferenceCollection Services { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ServiceReferenceCollection Services" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.Services" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Services As ServiceReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ServiceReferenceCollection ^ Services { System::Web::UI::ServiceReferenceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Services : System.Web.UI.ServiceReferenceCollection" Usage="System.Web.UI.ScriptManager.Services" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ServiceReferenceCollectionEditor, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.CollectionEditorBase, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ServiceReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Web.UI.ServiceReferenceCollection" />, содержащий объект <see cref="T:System.Web.UI.ServiceReference" /> для каждой веб-службы, предоставляемой ASP.NET на клиенте для обеспечения функциональности AJAX.</summary>
        <value>Объект <see cref="T:System.Web.UI.ServiceReferenceCollection" /> для текущего экземпляра <see cref="T:System.Web.UI.ScriptManager" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ServiceReferenceCollection> Объект, возвращаемый этим свойством является коллекцией <xref:System.Web.UI.ServiceReference> объектов, каждый из которых представляет веб-службы, зарегистрированной <xref:System.Web.UI.ScriptManager> элемента управления. Можно определить служб в <xref:System.Web.UI.ScriptManager> управления или связанным <xref:System.Web.UI.ScriptManagerProxy> элемента управления.  
  
 Службы можно добавить в коллекцию в разметке, добавив `asp:ServiceReference` элемент `Services` элемент внутри `asp:ScriptManager` экземпляра на странице, как показано в следующем примере.  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <Services>  
    <asp:ServiceReference Path="Service.asmx" />  
  </Services>  
</asp:ScriptManager>  
```  
  
 Можно также программно добавить <xref:System.Web.UI.ServiceReference> объект <xref:System.Web.UI.ScriptManager.Services%2A> коллекции с помощью <xref:System.Collections.ObjectModel.Collection%601.Add%2A> метод <xref:System.Web.UI.ServiceReferenceCollection> класса.  
  
 С помощью службы регистрируются <xref:System.Web.UI.ScriptManager> во время страницы <xref:System.Web.UI.Control.PreRender> жизненного цикла рабочей области.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFocus">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Устанавливает фокус ввода браузера на указанном элементе управления.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public void SetFocus (string clientID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFocus(string clientID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.SetFocus(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFocus (clientID As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFocus(System::String ^ clientID);" />
      <MemberSignature Language="F#" Value="member this.SetFocus : string -&gt; unit" Usage="scriptManager.SetFocus clientID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientID">Идентификатор элемента управления, получающего фокус ввода.</param>
        <summary>Устанавливает фокус ввода браузера на элементе управления, указанном идентификатором.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ScriptManager.SetFocus%2A> Метод работает подобно <xref:System.Web.UI.Page.SetFocus%2A> метод <xref:System.Web.UI.Page> класса. Оба метода сделать элемент управления с указанным Идентификатором активный элемент управления на веб-странице. <xref:System.Web.UI.ScriptManager.SetFocus%2A> Метод <xref:System.Web.UI.ScriptManager> класс используется для установки фокуса во время асинхронной обратной передачи. Во время обратной передачи и при первом отображении страницы <xref:System.Web.UI.ScriptManager.SetFocus%2A> вызовы методов <xref:System.Web.UI.Page.SetFocus%2A> метод <xref:System.Web.UI.Page> класса.  
  
 При наличии нескольких вызовов <xref:System.Web.UI.ScriptManager.SetFocus%2A> метода, элемент управления в последнем вызове получает фокус.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.String)" />
        <altmember cref="M:System.Web.UI.ScriptManager.SetFocus(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public void SetFocus (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFocus(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.SetFocus(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFocus(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.SetFocus : System.Web.UI.Control -&gt; unit" Usage="scriptManager.SetFocus control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">Элемент управления, получающий фокус ввода.</param>
        <summary>Устанавливает фокус ввода браузера на указанном элементе управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ScriptManager.SetFocus%2A> Метод работает подобно <xref:System.Web.UI.Page.SetFocus%2A> метод <xref:System.Web.UI.Page> класса. Оба метода делают указанный элемент управления активным элементом управления на веб-странице. <xref:System.Web.UI.ScriptManager.SetFocus%2A> Метод <xref:System.Web.UI.ScriptManager> класс используется для установки фокуса во время асинхронной обратной передачи. Во время обратной передачи и при первом отображении страницы <xref:System.Web.UI.ScriptManager.SetFocus%2A> вызовы методов <xref:System.Web.UI.Page.SetFocus%2A> метод <xref:System.Web.UI.Page> класса.  
  
 При наличии нескольких вызовов <xref:System.Web.UI.ScriptManager.SetFocus%2A> метода, элемент управления, указанный в последнем вызове получает фокус.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.ScriptManager.SetFocus(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SupportsPartialRendering">
      <MemberSignature Language="C#" Value="public bool SupportsPartialRendering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsPartialRendering" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.SupportsPartialRendering" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportsPartialRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsPartialRendering { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SupportsPartialRendering : bool with get, set" Usage="System.Web.UI.ScriptManager.SupportsPartialRendering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, показывающее, поддерживает ли клиент частичную отрисовку страницы.</summary>
        <value><see langword="true" />, если клиент поддерживает частичную отрисовку страницы; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> свойству `false`, <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> возвращает `false`.  
  
 Проверка по умолчанию, чтобы определить, поддерживается ли частичная отрисовка страницы возвращает `true` если выполняются следующие условия:  
  
-   <xref:System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion%2A> Значение свойства должно быть больше или равно 1,0.  
  
-   <xref:System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion%2A> Значение свойства должно быть больше или равно 1,0.  
  
-   <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> Должно быть присвоено значение свойства `true`.  
  
 Когда <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> явно установлено свойство, эти проверки не используются.  
  
 Разработчики элементов управления следует использовать <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> свойства, чтобы определить, должен ли они поддерживать частичная отрисовка страницы.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" /> установлено в <see langword="false" />, а свойство <see cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" /> установлено в <see langword="true" />.  
  
-или- 
Свойство <see cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" /> было установлено после события <see cref="E:System.Web.UI.Control.Init" />.</exception>
        <altmember cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Ключ-идентификатор элемента управления.</param>
        <param name="postCollection">Коллекция всех входящих отправленных данных.</param>
        <summary>Описание этого члена см. в разделе <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />.</summary>
        <returns><see langword="true" />, если состояние элемента управления <see cref="T:System.Web.UI.ScriptManager" /> изменилось в результате обратной передачи; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Web.UI.ScriptManager> приведен к типу интерфейса <xref:System.Web.UI.IPostBackDataHandler>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
        <altmember cref="M:System.Web.UI.ScriptManager.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Web.UI.ScriptManager> приведен к типу интерфейса <xref:System.Web.UI.IPostBackDataHandler>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
        <altmember cref="M:System.Web.UI.ScriptManager.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Строка, которая содержит пары "ключ-значение", представляющие предыдущее состояние веб-страницы.</param>
        <summary>Позволяет элементу управления <see cref="T:System.Web.UI.ScriptManager" /> обрабатывать событие обратной передачи и загружать предыдущее состояние веб-страницы.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.IsSecureConnection">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IScriptManager.IsSecureConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IScriptManager.IsSecureConnection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#IsSecureConnection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSecureConnection As Boolean Implements IScriptManager.IsSecureConnection" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IScriptManager::IsSecureConnection { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IScriptManager.IsSecureConnection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IScriptManager.IsSecureConnection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterArrayDeclaration">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterArrayDeclaration (System.Web.UI.Control control, string arrayName, string arrayValue);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterArrayDeclaration(class System.Web.UI.Control control, string arrayName, string arrayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterArrayDeclaration(System.Web.UI.Control,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterArrayDeclaration(System::Web::UI::Control ^ control, System::String ^ arrayName, System::String ^ arrayValue) = System::Web::UI::IScriptManager::RegisterArrayDeclaration;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterArrayDeclaration(System.Web.UI.Control,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="arrayName" Type="System.String" />
        <Parameter Name="arrayValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="arrayName">To be added.</param>
        <param name="arrayValue">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterClientScriptBlock (System.Web.UI.Control control, Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterClientScriptBlock(class System.Web.UI.Control control, class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterClientScriptBlock(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags) = System::Web::UI::IScriptManager::RegisterClientScriptBlock;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="type">To be added.</param>
        <param name="key">To be added.</param>
        <param name="script">To be added.</param>
        <param name="addScriptTags">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterClientScriptInclude (System.Web.UI.Control control, Type type, string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterClientScriptInclude(class System.Web.UI.Control control, class System.Type type, string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterClientScriptInclude(System.Web.UI.Control,System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterClientScriptInclude(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ url) = System::Web::UI::IScriptManager::RegisterClientScriptInclude;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterClientScriptInclude(System.Web.UI.Control,System.Type,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="type">To be added.</param>
        <param name="key">To be added.</param>
        <param name="url">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterClientScriptResource">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterClientScriptResource (System.Web.UI.Control control, Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterClientScriptResource(class System.Web.UI.Control control, class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterClientScriptResource(System.Web.UI.Control,System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterClientScriptResource(System::Web::UI::Control ^ control, Type ^ type, System::String ^ resourceName) = System::Web::UI::IScriptManager::RegisterClientScriptResource;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterClientScriptResource(System.Web.UI.Control,System.Type,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="type">To be added.</param>
        <param name="resourceName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterDispose">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterDispose (System.Web.UI.Control control, string disposeScript);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterDispose(class System.Web.UI.Control control, string disposeScript) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterDispose(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterDispose(System::Web::UI::Control ^ control, System::String ^ disposeScript) = System::Web::UI::IScriptManager::RegisterDispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterDispose(System.Web.UI.Control,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="disposeScript" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="disposeScript">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterExpandoAttribute (System.Web.UI.Control control, string controlId, string attributeName, string attributeValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterExpandoAttribute(class System.Web.UI.Control control, string controlId, string attributeName, string attributeValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterExpandoAttribute(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterExpandoAttribute(System::Web::UI::Control ^ control, System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue, bool encode) = System::Web::UI::IScriptManager::RegisterExpandoAttribute;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterExpandoAttribute(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="controlId">To be added.</param>
        <param name="attributeName">To be added.</param>
        <param name="attributeValue">To be added.</param>
        <param name="encode">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterHiddenField">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterHiddenField (System.Web.UI.Control control, string hiddenFieldName, string hiddenFieldValue);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterHiddenField(class System.Web.UI.Control control, string hiddenFieldName, string hiddenFieldValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterHiddenField(System.Web.UI.Control,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterHiddenField(System::Web::UI::Control ^ control, System::String ^ hiddenFieldName, System::String ^ hiddenFieldValue) = System::Web::UI::IScriptManager::RegisterHiddenField;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterHiddenField(System.Web.UI.Control,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="hiddenFieldName" Type="System.String" />
        <Parameter Name="hiddenFieldValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="hiddenFieldName">To be added.</param>
        <param name="hiddenFieldValue">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterOnSubmitStatement">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterOnSubmitStatement (System.Web.UI.Control control, Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterOnSubmitStatement(class System.Web.UI.Control control, class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterOnSubmitStatement(System.Web.UI.Control,System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterOnSubmitStatement(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ script) = System::Web::UI::IScriptManager::RegisterOnSubmitStatement;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterOnSubmitStatement(System.Web.UI.Control,System.Type,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="type">To be added.</param>
        <param name="key">To be added.</param>
        <param name="script">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterPostBackControl">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterPostBackControl (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterPostBackControl(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterPostBackControl(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterPostBackControl(System::Web::UI::Control ^ control) = System::Web::UI::IScriptManager::RegisterPostBackControl;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterPostBackControl(System.Web.UI.Control)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.RegisterStartupScript">
      <MemberSignature Language="C#" Value="void IScriptManager.RegisterStartupScript (System.Web.UI.Control control, Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.RegisterStartupScript(class System.Web.UI.Control control, class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#RegisterStartupScript(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.RegisterStartupScript(System::Web::UI::Control ^ control, Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags) = System::Web::UI::IScriptManager::RegisterStartupScript;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.RegisterStartupScript(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <param name="type">To be added.</param>
        <param name="key">To be added.</param>
        <param name="script">To be added.</param>
        <param name="addScriptTags">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptManager.SetFocusInternal">
      <MemberSignature Language="C#" Value="void IScriptManager.SetFocusInternal (string clientID);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IScriptManager.SetFocusInternal(string clientID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManager.System#Web#UI#IScriptManager#SetFocusInternal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetFocusInternal (clientID As String) Implements IScriptManager.SetFocusInternal" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IScriptManager.SetFocusInternal(System::String ^ clientID) = System::Web::UI::IScriptManager::SetFocusInternal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptManager.SetFocusInternal(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clientID">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManager.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.ScriptManager.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Переопределяет свойство <see cref="P:System.Web.UI.Control.Visible" />, унаследованное от базового класса <see cref="T:System.Web.UI.Control" />, чтобы предотвратить установку этого значения.</summary>
        <value>Значение <see langword="true" /> во всех случаях.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.Visible%2A> Переопределяется в <xref:System.Web.UI.ScriptManager> класса, чтобы не допустить установки этого значения. Объект <xref:System.NotImplementedException> ошибка возникает, если этому свойству присваивается значение.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Значение, назначенное свойству <see cref="P:System.Web.UI.ScriptManager.Visible" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>