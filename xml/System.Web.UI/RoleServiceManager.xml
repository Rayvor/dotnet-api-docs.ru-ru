<Type Name="RoleServiceManager" FullName="System.Web.UI.RoleServiceManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2ad56e9e380106f5d6e81c2b13ff6a0770e97db6" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69397133" /></Metadata><TypeSignature Language="C#" Value="public class RoleServiceManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RoleServiceManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.RoleServiceManager" />
  <TypeSignature Language="VB.NET" Value="Public Class RoleServiceManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoleServiceManager" />
  <TypeSignature Language="F#" Value="type RoleServiceManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Path")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Настраивает расположение пользовательской реализации службы роли.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс соответствует <xref:System.Web.UI.ScriptManager.RoleService%2A> свойству элемента управления <xref:System.Web.UI.ScriptManagerProxy>или. <xref:System.Web.UI.ScriptManager> <xref:System.Web.UI.RoleServiceManager>  
  
 Веб-служба роли используется приложениями с поддержкой AJAX для получения сведений о ролях для текущего пользователя, прошедшего проверку подлинности, с помощью асинхронного вызова веб-службы. Можно использовать <xref:System.Web.UI.RoleServiceManager> для предоставления пути к альтернативной реализации веб-службы роли вместо использования встроенной веб-службы.  
  
 Чтобы использовать службу роли в приложении, необходимо включить ее в файле конфигурации и объявить на странице. При использовании встроенной веб-службы роли ее необходимо включить, но не нужно явно объявлять диспетчер службы роли на странице.  
  
 Чтобы создать пользовательскую службу роли, необходимо реализовать веб-службу с двумя методами: `GetRolesForCurrentUser` и. `IsCurrentUserInRole` Эти методы должны иметь ту же сигнатуру, что и соответствующие методы встроенной веб-службы роли.  
  
 В следующем примере показана базовая структура класса, которая должна быть реализована в классе пользовательской роли веб-службы.  
  
  
  
 Чтобы использовать пользовательскую веб-службу роли, можно добавить службу декларативно в разметке, поместив `RoleService` элемент <xref:System.Web.UI.ScriptManager> внутри элемента управления, как показано в следующем примере.  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <RoleService Path="MyRoleService.asmx" LoadRoles="true" />  
</asp:ScriptManager>  
```  
  
 Можно также программно задать <xref:System.Web.UI.RoleServiceManager.Path%2A> свойство, чтобы использовать пользовательскую веб-службу роли.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.ScriptingRoleServiceSection" />
    <related type="Article" href="https://msdn.microsoft.com/library/8290e543-7eff-47a4-aace-681f3c07229b">Веб-службы в ASP.NET AJAX</related>
    <related type="Article" href="https://msdn.microsoft.com/library/280f6ad9-ba1a-4fc9-b0cc-22e39e54a82d">Использование сведений о ролях с ASP.NET AJAX</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoleServiceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.RoleServiceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoleServiceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.RoleServiceManager" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadRoles">
      <MemberSignature Language="C#" Value="public bool LoadRoles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LoadRoles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.RoleServiceManager.LoadRoles" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadRoles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LoadRoles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LoadRoles : bool with get, set" Usage="System.Web.UI.RoleServiceManager.LoadRoles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, определяющее, должен ли быть получен список ролей для пользователя, находящегося в данный момент в системе.</summary>
        <value>Значение <see langword="true" />, если должен быть получен список ролей, в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если свойство имеет `true`значение, список <xref:System.Web.UI.RoleServiceManager> ролей извлекается классом с помощью <xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=nameWithType> метода. <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> Затем список сериализуется в разметку страницы.  
  
> [!NOTE]
>  Если <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> имеет `true`значение, все роли, к которым принадлежит текущий пользователь, прошедшем проверку подлинности, отправляются в браузер. Так как пользователи потенциально могут видеть сведения о ролях, это может быть проблемой безопасности.  
  
 Свойство может быть задано <xref:System.Web.UI.ScriptManager> в элементе управления или в связанном <xref:System.Web.UI.ScriptManagerProxy> элементе управления. <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> Если <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> `true` для экземпляра прокси установлено значение, список ролей извлекается и добавляется на страницу. Если <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> имеет `false`значение, роли не добавляются в разметку страницы. В этом случае можно использовать метод для хранения сведений о ролях в памяти в браузере.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ScriptManager" />
        <altmember cref="T:System.Web.UI.ScriptManagerProxy" />
        <altmember cref="M:System.Web.Security.Roles.GetRolesForUser" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.RoleServiceManager.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.UI.RoleServiceManager.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает путь для службы роли.</summary>
        <value>Путь для пользовательской веб-службы роли.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если свойство не задано, возвращается <xref:System.String.Empty?displayProperty=nameWithType>значение. <xref:System.Web.UI.RoleServiceManager.Path%2A> В этом случае ASP.NET использует встроенную веб-службу проверки подлинности, которая соответствует следующему внутреннему пути по умолчанию: ~/Ролессервице.СВК. Такое же поведение возникает, если задана <xref:System.Web.UI.RoleServiceManager.Path%2A> пустая строка или значение. `null`  
  
 <xref:System.Web.UI.RoleServiceManager.Path%2A>может быть указан в <xref:System.Web.UI.ScriptManager> элементе управления или в связанном <xref:System.Web.UI.ScriptManagerProxy> элементе управления. Если <xref:System.Web.UI.RoleServiceManager.Path%2A> задается <xref:System.Web.UI.ScriptManagerProxy> на уровне, выполняются следующие условия.  
  
-   Если в иерархии элементов управления имеется несколько объектов-посредников <xref:System.Web.UI.RoleServiceManager.Path%2A> , не обязательно устанавливать их для каждого экземпляра прокси-сервера.  
  
-   Если <xref:System.Web.UI.RoleServiceManager.Path%2A> явно задано для прокси-объекта, значение должно быть одинаковым для всех других прокси-объектов, для которых задано это свойство. Если для разных прокси-объектов заданы разные пути в иерархии элементов управления, <xref:System.ArgumentException> создается исключение.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Более одного уникального пути задано в иерархии элементов управления.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
