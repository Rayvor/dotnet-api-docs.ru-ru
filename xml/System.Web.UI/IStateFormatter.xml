<Type Name="IStateFormatter" FullName="System.Web.UI.IStateFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="32c1d4ec9b46d2296ee75697e2018a9d5513c5ba" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69388063" /></Metadata><TypeSignature Language="C#" Value="public interface IStateFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStateFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IStateFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStateFormatter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStateFormatter" />
  <TypeSignature Language="F#" Value="type IStateFormatter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Определяет методы, реализуемые типом для сериализации и десериализации графы объекта.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Интерфейс определяет методы, которые тип может реализовать для сериализации и десериализации состояния, которое поддерживает серверный веб-элемент управления ASP.NET <xref:System.Web.UI.Control.ViewState%2A> в его свойстве. <xref:System.Web.UI.IStateFormatter> Эта инфраструктура используется классами, производными от <xref:System.Web.UI.PageStatePersister> класса, для поддержания состояния страницы ASP.NET между запросами. По умолчанию состояние страницы ASP.NET сериализуется и десериализуется экземпляром <xref:System.Web.UI.ObjectStateFormatter> класса, однако разработчики сайтов и адаптеров могут <xref:System.Web.UI.IStateFormatter> реализовать интерфейс на своих собственных типах для выполнения этой работы.  
  
 Дополнительные сведения об управлении состоянием веб-сервера и состоянии представления см. в разделе [ASP.NET State Management Overview](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)) and [dynamic Web Server Controls and View State](https://msdn.microsoft.com/library/c1ea6a66-3307-4c98-8187-cad462e1c027).  
  
   
  
## Examples  
 В следующем примере кода показано, как создать <xref:System.Web.UI.PageStatePersister> объект, сохраняющий представление и состояние элемента управления в потоке на веб-сервере. Класс демонстрирует переопределение методов <xref:System.Web.UI.PageStatePersister.Save%2A> идляизвлеченияисохранениясведенийосостояниистраницы.<xref:System.Web.UI.PageStatePersister.Load%2A> `StreamPageStatePersister` Эти методы используют интерфейс <xref:System.Web.UI.IStateFormatter> , наследуемый <xref:System.Web.UI.PageStatePersister> от класса, для сериализации и десериализации состояния представления. Этот пример кода является частью большого примера, <xref:System.Web.UI.PageStatePersister> приведенного для класса.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_2/CS/textfilepagestatepersister.cs#1)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_2/VB/textfilepagestatepersister.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.PageStatePersister" />
    <altmember cref="T:System.Web.UI.LosFormatter" />
    <altmember cref="T:System.Web.UI.ObjectStateFormatter" />
  </Docs>
  <Members>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (string serializedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(string serializedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IStateFormatter.Deserialize(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (serializedState As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::String ^ serializedState);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : string -&gt; obj" Usage="iStateFormatter.Deserialize serializedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializedState" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serializedState">Строка, которая десериализуется в инициализированный объект с использованием класса <see cref="T:System.Web.UI.IStateFormatter" />.</param>
        <summary>Выполняет десериализацию графы состояния объекта из его сериализованной формы строки.</summary>
        <returns>Объект, представляющий состояние серверного элемента управления ASP.NET.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод, чтобы воспроизводить объект состояния для страницы ASP.NET или серверного элемента управления, сериализованного <xref:System.Web.UI.IStateFormatter.Serialize%2A> с помощью метода. <xref:System.Web.UI.IStateFormatter.Deserialize%2A>  
  
   
  
## Examples  
 В следующем примере кода показано, <xref:System.Web.UI.IStateFormatter.Deserialize%2A> как метод загружает сведения о состоянии представления. Метод класса использует <xref:System.Web.UI.IStateFormatter> интерфейс<xref:System.Web.UI.PageStatePersister> , наследуемый от класса, для десериализации состояния представления. `StreamPageStatePersister` <xref:System.Web.UI.PageStatePersister.Load%2A> Этот пример кода является частью большого примера, <xref:System.Web.UI.IStateFormatter> предоставляемого для интерфейса.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_2/CS/textfilepagestatepersister.cs#2)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_2/VB/textfilepagestatepersister.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public string Serialize (object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Serialize(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IStateFormatter.Serialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Serialize (state As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Serialize(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : obj -&gt; string" Usage="iStateFormatter.Serialize state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Объект, представляющий состояние просмотра элемента управления веб-сервера для сериализации в форму строки.</param>
        <summary>Выполняет сериализацию состояния элемента управления ASP.NET веб-сервера в форму строки.</summary>
        <returns>Строка, представляющая состояние просмотра элемента управления веб-сервера.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IStateFormatter.Serialize%2A> Используйте метод для преобразования графа состояния объекта в форму строки. Восстанавливает объект состояния из строки с помощью <xref:System.Web.UI.IStateFormatter.Deserialize%2A> метода.  
  
   
  
## Examples  
 В следующем примере кода показано, как <xref:System.Web.UI.IStateFormatter.Serialize%2A> метод сохраняет сведения о состоянии представления в файл. Метод класса использует <xref:System.Web.UI.IStateFormatter> интерфейс<xref:System.Web.UI.PageStatePersister> , наследуемый от класса, для сериализации состояния представления. `StreamPageStatePersister` <xref:System.Web.UI.PageStatePersister.Save%2A> Этот пример кода является частью большого примера, <xref:System.Web.UI.IStateFormatter> предоставляемого для интерфейса.  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_2/CS/textfilepagestatepersister.cs#3)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_2/VB/textfilepagestatepersister.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
