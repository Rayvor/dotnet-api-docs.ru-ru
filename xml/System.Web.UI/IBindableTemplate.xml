<Type Name="IBindableTemplate" FullName="System.Web.UI.IBindableTemplate">
  <Metadata><Meta Name="ms.openlocfilehash" Value="404e57c4b8538315580af86b0c6bad658086f30b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69388393" /></Metadata><TypeSignature Language="C#" Value="public interface IBindableTemplate : System.Web.UI.ITemplate" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBindableTemplate implements class System.Web.UI.ITemplate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IBindableTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBindableTemplate&#xA;Implements ITemplate" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBindableTemplate : System::Web::UI::ITemplate" />
  <TypeSignature Language="F#" Value="type IBindableTemplate = interface&#xA;    interface ITemplate" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ITemplate</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Предоставляет способ для ASP.NET элементов управления, связанных с данными, таких как <see cref="T:System.Web.UI.WebControls.DetailsView" /> и <see cref="T:System.Web.UI.WebControls.FormView" />, автоматически привязываться к ASP.NET элементам управления источниками данных внутри разделов шаблонного содержимого.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.SqlDataSource> <xref:System.Web.UI.WebControls.ObjectDataSource> Интерфейс предоставляет способ для ASP.NET элементов управления, связанных с данными, таких как, и, для привязки к данным, предоставляемым элементом управления источника данных ASP.NET, например или, если <xref:System.Web.UI.IBindableTemplate> элемент управления с привязкой к данным включает шаблонное содержимое.  
  
> [!NOTE]
>  Разработчики страниц не реализуют <xref:System.Web.UI.IBindableTemplate> интерфейс. Разработчики, создающие пользовательские элементы управления с привязкой к данным <xref:System.Web.UI.IBindableTemplate> , могут манипулировать объектами <xref:System.Web.UI.WebControls.GridView.ExtractRowValues%2A> в реализациях <xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A> методов и, но не <xref:System.Web.UI.IBindableTemplate> реализуют собственные объекты.  
  
 Элементы управления с привязкой к <xref:System.Web.UI.WebControls.GridView> данным, как правило, знают о своих дочерних деревьях элементов управления и, следовательно, могут привязывать к ним значения, извлекать значения из них и передавать эти значения между элементом управления с привязкой к данным и элементом управления источником данных при каждом возникновении привязки данных. . Однако, когда разработчик страницы определяет шаблонное содержимое для элемента управления с привязкой к данным, дочерние элементы управления внутри шаблона не видимы для родительского элемента управления с привязкой к данным: родительский элемент может визуализировать дочернее содержимое (поскольку элементы управления эффективно отображают сами себя). но не может извлекать значения этих дочерних элементов управления для передачи в связанную операцию обновления, вставки или удаления элемента управления источника данных. В сценариях привязки данных шаблонное содержимое непрозрачно для родительского элемента управления с привязкой к данным. Синтаксис позволяет элементу управления с привязкой к данным извлекать значения из элемента управления, привязанного к данным <xref:System.Web.UI.IBindableTemplate> внутри экземпляра. `Bind`  
  
 Привязка данных может быть односторонним или двусторонним. (Эти направления привязки определяются <xref:System.ComponentModel.BindingDirection> перечислением.) Односторонняя привязка данных — это любая привязка данных, выполняемая в исходящем направлении, от элемента управления источником данных до элемента управления с привязкой к данным. Например, любой сценарий чтения данных включает одностороннюю привязку данных. Для односторонней привязки данных можно использовать односторонний синтаксис привязки данных (`<%# Eval("fieldname") %>`) в шаблонном содержимом и не нужно использовать двусторонний синтаксис привязки данных ASP.NET. Двусторонняя привязка данных описывает привязку данных в входящем направлении, от привязанного к данным элемента управления к элементу управления источника данных. Сценарии автоматического редактирования, вставки и удаления с помощью ASP.NET, привязанных к данным и элементы управления источниками данных, являются двусторонними сценариями привязки данных. В этих сценариях используются двусторонние выражения привязки данных (`<%# Bind("fieldname") %>`). <xref:System.Web.UI.IBindableTemplate> Интерфейс и инфраструктура ASP.NET поддерживают автоматическую, декларативную, двустороннюю привязку данных между элементами управления источниками данных ASP.NET и шаблонным содержимым. Дополнительные сведения о выражениях и синтаксисе привязки данных ASP.NET см. в статье Общие сведения о привязке [к базам](https://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742) данных и [выражениям привязки данных](https://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a).  
  
 Шаблонное содержимое для элементов управления с привязкой к данным чаще всего определяется декларативно. В следующей таблице описаны процессы, наиболее часто используемые для привязки шаблонных данных к элементам управления с привязкой к данным.  
  
|Элемент управления с привязкой к данным|Процесс|  
|-------------------------|-------------|  
|<xref:System.Web.UI.WebControls.DetailsView>|Привязанный к данным элемент управления привязан к данным с помощью `DataSourceID` свойства элемента управления источника данных, а шаблонное содержимое определяется <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>в <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> свойстве или <xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> .|  
|<xref:System.Web.UI.WebControls.GridView>|Привязанный к данным элемент управления привязан к данным с помощью `DataSourceID` свойства элемента управления источника данных, а шаблонное содержимое определяется <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> в свойстве или <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> . <xref:System.Web.UI.WebControls.GridView> Элемент управления не поддерживает операцию вставки.|  
|<xref:System.Web.UI.WebControls.FormView>|Привязанный к данным элемент управления привязан к данным с помощью `DataSourceID` свойства, а шаблонное содержимое определяется <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>в свойстве, <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>, или <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> , или в <xref:System.Web.UI.WebControls.TemplateField> объекте.|  
  
 Элементы управления <xref:System.Web.UI.WebControls.Repeater> и не поддерживают автоматические сценарии двусторонней привязки данных. <xref:System.Web.UI.WebControls.DataList>  
  
 ASP.NET неявно создает <xref:System.Web.UI.IBindableTemplate> объект, когда шаблонное содержимое, привязанное к элементу управления источника данных ASP.NET в шаблоне, анализируется. В частности, средство синтаксического анализа ASP.NET создает экземпляр <xref:System.Web.UI.CompiledBindableTemplateBuilder> класса, когда он анализирует шаблонное содержимое, использующее синтаксис привязки данных ASP.NET, и содержит ASP.NET веб-серверные элементы управления, поддерживающие привязку данных. Эти элементы управления ASP.NET Server помечены <xref:System.ComponentModel.BindableAttribute> атрибутом.  
  
 Интерфейс определяет один метод, <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A>. <xref:System.Web.UI.IBindableTemplate> Этот метод определен для двусторонней привязки данных, поэтому элемент управления с привязкой к данным может автоматически извлекать пары "имя-значение" из шаблонного содержимого и передавать их в элемент управления источника данных во время выполнения. Чтобы автоматическая привязка данных была выполнена, имена полей, извлеченные из шаблона содержимого <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A> методом, должны совпадать с именами параметров в связанном элементе управления источника данных. Разработчики элементов управления вызывают <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A> метод явным образом только в своих реализациях <xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A> или в каком-либо другом аналогичном методе пользовательского элемента управления с привязкой к данным.  
  
   
  
## Examples  
 В следующем примере кода показано, как <xref:System.Web.UI.WebControls.FormView> элемент управления может декларативно определять шаблонное содержимое, выполнять привязку к данным <xref:System.Web.UI.WebControls.SqlDataSource> , предоставляемым элементом управления, а также отображать и изменять существующие записи. Средство синтаксического анализа ASP.NET анализирует содержимое шаблона и создает <xref:System.Web.UI.IBindableTemplate> объект во время выполнения, который может привязывать значения <xref:System.Web.UI.WebControls.SqlDataSource> из элемента управления к областям привязки данных, определенным в шаблоне, с помощью одностороннего ASP.NET-синтаксиса привязки данных (`<%# Eval("fieldname") %>`) и синтаксис двухсторонней привязки данных (`<%# Bind("fieldname") %>`).  
  
> [!IMPORTANT]
>  Этот элемент управления имеет текстовое поле, которое принимает вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormView#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormView/CS/formvieweditcs.aspx#1)]
 [!code-aspx-vb[FormView#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormView/VB/formvieweditvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ITemplate" />
    <altmember cref="T:System.Web.UI.CompiledBindableTemplateBuilder" />
    <altmember cref="T:System.Web.UI.ExtractTemplateValuesMethod" />
    <altmember cref="T:System.ComponentModel.BindableAttribute" />
    <altmember cref="T:System.ComponentModel.BindingDirection" />
  </Docs>
  <Members>
    <Member MemberName="ExtractValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary ExtractValues (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.IOrderedDictionary ExtractValues(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExtractValues (container As Control) As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Specialized::IOrderedDictionary ^ ExtractValues(System::Web::UI::Control ^ container);" />
      <MemberSignature Language="F#" Value="abstract member ExtractValues : System.Web.UI.Control -&gt; System.Collections.Specialized.IOrderedDictionary" Usage="iBindableTemplate.ExtractValues container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">Объект <see cref="T:System.Web.UI.Control" />, из которого извлекаются пары "имя—значение" и передаются элементом управления, связанным с данными, в элемент управления источника связанных данных при помощи скриптов двусторонней привязки данных.</param>
        <summary>При реализации классом извлекает внутри шаблонного содержимого набор пар "имя-значение" для значений, связанных с помощью синтаксиса двухсторонней привязки ASP.NET.</summary>
        <returns><see cref="T:System.Collections.Specialized.IOrderedDictionary" /> пар "имя-значение". В этих парах имя представляет собой имя элемента управления внутри шаблонного содержимого, а значением является текущее значение свойства, связанное с помощью синтаксиса двухсторонней привязки данных ASP.NET.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" /> Метод должен соответствовать следующим правилам. 
— Если для данного поля существует более одной привязки, то используется последняя обнаруженная привязка.  
  
— Для ссылки на идентификатор элемента управления в <see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" /> методе элемент управления также должен иметь свойство идентификатора, определяемое пользователем во время синтаксического анализа. Если идентификатор не существует, это приводит к ошибке синтаксического анализа.  
  
— ASP.NET синтаксис привязки данных допустим только в <see cref="T:System.Web.UI.ITemplate" /> свойстве или <see cref="T:System.Web.UI.IBindableTemplate" /> элемента управления с привязкой к данным.</para></block>
        <altmember cref="T:System.Web.UI.CompiledBindableTemplateBuilder" />
        <altmember cref="T:System.Web.UI.ExtractTemplateValuesMethod" />
      </Docs>
    </Member>
  </Members>
</Type>
