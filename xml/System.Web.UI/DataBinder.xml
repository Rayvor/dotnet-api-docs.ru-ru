<Type Name="DataBinder" FullName="System.Web.UI.DataBinder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="44f3ff65ecd7bf2e0d604559c49ab4ce590f3a42" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70413750" /></Metadata><TypeSignature Language="C#" Value="public sealed class DataBinder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataBinder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataBinder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataBinder" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataBinder sealed" />
  <TypeSignature Language="F#" Value="type DataBinder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет поддержку для конструкторов быстрой разработки приложений (RAD) в формировании и синтаксическом анализе выражений привязки данных. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перегруженный статический <xref:System.Web.UI.DataBinder.Eval%2A> метод этого класса можно использовать в синтаксисе привязки данных на веб-странице ASP.NET. Это обеспечивает более простой синтаксис для работы, чем стандартная привязка данных. Однако, поскольку `DataBinder.Eval` обеспечивает автоматическое преобразование типов, это может привести к снижению производительности.  
  
 Дополнительные сведения о привязке данных, выражениях и синтаксисе ASP.NET см. в статье Общие сведения о привязке [к базам](https://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742) данных и [выражениям привязки данных](https://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a).  
  
 Начиная с .NET Framework 4,5, можно использовать привязку модели для упрощения некоторых задач, которые были выполнены с помощью привязки данных в более ранних версиях. Серию руководств по использованию привязки модели с веб-формами см. в разделе [Привязка модели и веб-формы](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
   
  
## Examples  
 В <xref:System.Web.UI.DataBinder.GetPropertyValue%2A> следующем примере статический метод используется для заполнения полей <xref:System.Web.UI.WebControls.Repeater> элемента управления с помощью <xref:System.Collections.ArrayList> `Product` объекта. <xref:System.Web.UI.DataBinder.Eval%2A> Метод можно применить с тем же синтаксисом, но он не будет выполняться так быстро.  
  
 В этом примере используется пользовательский `Product` класс, предоставляющий строковое `Model` свойство и числовое `UnitPrice` свойство.  
  
 [!code-aspx-csharp[System.Web.UI.DataBinder#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.DataBinder/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.DataBinder#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.DataBinder/VB/Default.aspx#1)]  
  
 Следующий код является пользовательским `Product` классом. Этот код следует включать в отдельный файл класса в каталоге App_Code, например Product.cs или Product. vb.  
  
 [!code-csharp[System.Web.UI.DataBinder#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.DataBinder/CS/App_Code/Product.cs#2)]
 [!code-vb[System.Web.UI.DataBinder#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.DataBinder/VB/App_Code/Product.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.XPathBinder" />
    <altmember cref="T:System.Web.UI.IBindableTemplate" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataBinder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataBinder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.DataBinder" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public static bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinder.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCaching : bool with get, set" Usage="System.Web.UI.DataBinder.EnableCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, включено ли кэширование данных во время выполнения.</summary>
        <value>Значение <see langword="true" />, если кэширование включено для класса <see cref="T:System.Web.UI.DataBinder" />; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Eval">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Использует отражение для разбора и обработки выражений привязки данных с объектом во время исполнения программы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Начиная с .NET Framework 4,5, можно использовать привязку модели для упрощения некоторых задач, которые были выполнены с помощью привязки данных в более ранних версиях. Серию руководств по использованию привязки модели с веб-формами см. в разделе [Привязка модели и веб-формы](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Eval">
      <MemberSignature Language="C#" Value="public static object Eval (object container, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Eval(object container, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.Eval(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Eval (container As Object, expression As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Eval(System::Object ^ container, System::String ^ expression);" />
      <MemberSignature Language="F#" Value="static member Eval : obj * string -&gt; obj" Usage="System.Web.UI.DataBinder.Eval (container, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">Ссылка на объект, для которого будет разбираться выражение. Это должен быть действительный идентификатор объекта на языке, определенном для страницы.</param>
        <param name="expression">Путь перехода от объекта <paramref name="container" /> к значению общедоступного свойства, которое должно быть помещено в свойство привязанного элемента управления. Значение должно быть строкой имен свойств или полей, разделенных точками, например <c>Tables[0].DefaultView.[0].Price</c> в C# или <c>Tables(0).DefaultView.(0).Price</c> в Visual Basic.</param>
        <summary>Обрабатывает выражения привязки данных во время исполнения программы.</summary>
        <returns>Экземпляр <see cref="T:System.Object" />, являющийся результатом вычисления выражения привязки данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение `expression` параметра должно быть равно открытому свойству.  
  
 Этот метод автоматически вызывается при создании привязок данных в конструкторе быстрой разработки приложений (RAD), таком как Visual Studio. Его также можно использовать декларативно, чтобы упростить приведение к текстовой строке. Для этого используется `<%#  %>` синтаксис выражения, используемый в стандартной привязке данных ASP.NET.  
  
 Этот метод особенно полезен при привязке данных к элементам управления, которые находятся в шаблонном списке.  
  
> [!NOTE]
>  Поскольку этот метод выполняет вычисление с поздним связыванием, используя отражение во время выполнения, это может значительно снизить производительность по сравнению со стандартным синтаксисом привязки данных ASP.NET.  
  
 Для любого из веб-элементов управления "список" <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>таких <xref:System.Web.UI.WebControls.DataList>как, <xref:System.Web.UI.WebControls.Repeater>, `container` или, `Container.DataItem`должен быть. При привязке к странице `container` должна быть. `Page`  
  
 Начиная с .NET Framework 4,5, можно использовать привязку модели для упрощения некоторых задач, которые были выполнены с помощью привязки данных в более ранних версиях. Серию руководств по использованию привязки модели с веб-формами см. в разделе [Привязка модели и веб-формы](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
   
  
## Examples  
 В следующих примерах показано, `Eval` как использовать метод для привязки данных к <xref:System.Web.UI.WebControls.Repeater> элементу управления. Для этого требуется класс данных Product.  
  
 [!code-csharp[System.Web.UI.DataBinder.Eval#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/product.cs#1)]
 [!code-vb[System.Web.UI.DataBinder.Eval#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/product.vb#1)]  
  
 Файл кода программной части загружает тестовые данные и привязывает эти данные <xref:System.Web.UI.WebControls.Repeater> к элементу управления.  
  
 [!code-csharp[System.Web.UI.DataBinder.Eval#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts.aspx.cs#2)]
 [!code-vb[System.Web.UI.DataBinder.Eval#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts.aspx.vb#2)]  
  
 В декларативном синтаксисе для <xref:System.Web.UI.WebControls.Repeater> элемента управления <xref:System.Web.UI.DataBinder.Eval%2A> используется метод с `Container.DataItem` для `container` параметра.  
  
 [!code-aspx-csharp[System.Web.UI.DataBinder.Eval#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts3.aspx#3)]
 [!code-aspx-vb[System.Web.UI.DataBinder.Eval#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts3.aspx#3)]  
  
 Или можно вызвать `Eval` функцию и не `container` включать параметр.  
  
 [!code-aspx-csharp[System.Web.UI.DataBinder.Eval#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts4.aspx#4)]
 [!code-aspx-vb[System.Web.UI.DataBinder.Eval#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts4.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="expression" /> представляет собой значение <see langword="null" /> или пустую строку после усечения.</exception>
        <altmember cref="M:System.Web.UI.Control.DataBind" />
        <altmember cref="T:System.Web.UI.DataBinding" />
        <altmember cref="T:System.Web.UI.XPathBinder" />
        <altmember cref="T:System.Web.UI.IBindableTemplate" />
      </Docs>
    </Member>
    <Member MemberName="Eval">
      <MemberSignature Language="C#" Value="public static string Eval (object container, string expression, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Eval(object container, string expression, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.Eval(System.Object,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Eval (container As Object, expression As String, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Eval(System::Object ^ container, System::String ^ expression, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member Eval : obj * string * string -&gt; string" Usage="System.Web.UI.DataBinder.Eval (container, expression, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">Ссылка на объект, для которого будет разбираться выражение. Это должен быть действительный идентификатор объекта на языке, определенном для страницы.</param>
        <param name="expression">Путь перехода от объекта <paramref name="container" /> к значению общедоступного свойства, которое должно быть помещено в свойство привязанного элемента управления. Значение должно быть строкой имен свойств или полей, разделенных точками, например <c>Tables[0].DefaultView.[0].Price</c> в C# или <c>Tables(0).DefaultView.(0).Price</c> в Visual Basic.</param>
        <param name="format">Строка формата платформы .NET Framework (подобно используемым методом <see cref="M:System.String.Format(System.String,System.Object)" />), которая преобразует экземпляр <see cref="T:System.Object" />, возвращенный выражением привязки данных, в объект <see cref="T:System.String" />.</param>
        <summary>Обрабатывает выражения привязки данных во время выполнения и представляет результат в виде строки.</summary>
        <returns>Объект <see cref="T:System.String" />, полученный в результате вычисления выражения привязки данных и преобразования в строковый тип.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение `expression` должно оцениваться как открытое свойство.  
  
 Дополнительные сведения о строках формата в .NET Framework см. в разделе [Типы форматирования](~/docs/standard/base-types/formatting-types.md).  
  
 Этот метод автоматически вызывается при создании привязок данных в конструкторе быстрой разработки приложений (RAD), таком как Visual Studio. Его также можно использовать декларативно для преобразования <xref:System.Object> результата выражения <xref:System.String>привязки данных в.  Чтобы использовать метод декларативно, используйте `<%#   %>` синтаксис выражения, который используется в стандартной привязке данных ASP.NET.  
  
 Этот метод особенно полезен при привязке данных к элементам управления, которые находятся в шаблонном списке.  
  
> [!NOTE]
>  Поскольку этот метод выполняет вычисление с поздним связыванием, используя отражение во время выполнения, это может значительно снизить производительность по сравнению со стандартным синтаксисом привязки данных ASP.NET. Используйте этот метод внимательно, особенно если форматирование строки не требуется.  
  
 Для любого из веб-элементов управления "список" <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>таких <xref:System.Web.UI.WebControls.DataList>как, <xref:System.Web.UI.WebControls.Repeater>, `container` или, `Container.DataItem`должен быть. При привязке к странице `container` должна быть. `Page`  
  
 Начиная с .NET Framework 4,5, можно использовать привязку модели для упрощения некоторых задач, которые были выполнены с помощью привязки данных в более ранних версиях. Серию руководств по использованию привязки модели с веб-формами см. в разделе [Привязка модели и веб-формы](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
   
  
## Examples  
 В следующих примерах показано, `Eval` как использовать метод для привязки данных к <xref:System.Web.UI.WebControls.Repeater> элементу управления. Для этого требуется класс данных Product.  
  
 [!code-csharp[System.Web.UI.DataBinder.Eval#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/product.cs#1)]
 [!code-vb[System.Web.UI.DataBinder.Eval#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/product.vb#1)]  
  
 Файл кода программной части загружает тестовые данные и привязывает эти данные <xref:System.Web.UI.WebControls.Repeater> к элементу управления.  
  
 [!code-csharp[System.Web.UI.DataBinder.Eval#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts.aspx.cs#2)]
 [!code-vb[System.Web.UI.DataBinder.Eval#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts.aspx.vb#2)]  
  
 В декларативном синтаксисе для <xref:System.Web.UI.WebControls.Repeater> элемента управления <xref:System.Web.UI.DataBinder.Eval%2A> используется метод с `Container.DataItem` для `container` параметра.  
  
 [!code-aspx-csharp[System.Web.UI.DataBinder.Eval#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts3.aspx#3)]
 [!code-aspx-vb[System.Web.UI.DataBinder.Eval#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts3.aspx#3)]  
  
 Или можно вызвать `Eval` функцию и не `container` включать параметр.  
  
 [!code-aspx-csharp[System.Web.UI.DataBinder.Eval#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts4.aspx#4)]
 [!code-aspx-vb[System.Web.UI.DataBinder.Eval#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts4.aspx#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.XPathBinder" />
        <altmember cref="T:System.Web.UI.IBindableTemplate" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Типы форматирования в .NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataItem">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает объявляемый элемент данных объекта.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataItem">
      <MemberSignature Language="C#" Value="public static object GetDataItem (object container);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetDataItem(object container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetDataItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataItem (container As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetDataItem(System::Object ^ container);" />
      <MemberSignature Language="F#" Value="static member GetDataItem : obj -&gt; obj" Usage="System.Web.UI.DataBinder.GetDataItem container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="container">Ссылка на объект, для которого будет разбираться выражение. Это должен быть действительный идентификатор объекта на языке, определенном для страницы.</param>
        <summary>Возвращает объявляемый элемент данных объекта.</summary>
        <returns>Объект, который представляет объявляемый элемент данных контейнера. Возвращает значение <see langword="null" />, если не найден элемент данных, или контейнер имеет значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывает <xref:System.Web.UI.DataBinder.GetDataItem%28System.Object%2CSystem.Boolean%40%29> метод, игнорируя его `foundDataItem` параметр при возврате результата.  
  
 Элемент данных объекта идентифицируется одним из двух способов. Если объект контейнера реализует <xref:System.Web.UI.IDataItemContainer> интерфейс <xref:System.Web.UI.IDataItemContainer.DataItem%2A> , свойство определяет элемент данных и возвращается его значение. В противном случае метод пытается разрешить и вернуть свойство контейнера с именем DataItem.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
      </Docs>
    </Member>
    <Member MemberName="GetDataItem">
      <MemberSignature Language="C#" Value="public static object GetDataItem (object container, out bool foundDataItem);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetDataItem(object container, [out] bool&amp; foundDataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetDataItem(System.Object,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataItem (container As Object, ByRef foundDataItem As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetDataItem(System::Object ^ container, [Runtime::InteropServices::Out] bool % foundDataItem);" />
      <MemberSignature Language="F#" Value="static member GetDataItem : obj *  -&gt; obj" Usage="System.Web.UI.DataBinder.GetDataItem (container, foundDataItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="foundDataItem" Type="System.Boolean" RefType="out" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="container">Ссылка на объект, для которого будет разбираться выражение. Это должен быть действительный идентификатор объекта на языке, определенном для страницы.</param>
        <param name="foundDataItem">Логическая величина, которая показывает, был ли успешно разрешен и возвращен элемент данных. Этот параметр передается неинициализированным.</param>
        <summary>Возвращает объявляемый элемент данных объекта, обозначающий успешное выполнение или сбой.</summary>
        <returns>Объект, который представляет объявляемый элемент данных контейнера. Возвращает значение <see langword="null" />, если не найден элемент данных, или контейнер имеет значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Элемент данных объекта определяется двумя способами. Если объект контейнера реализует <xref:System.Web.UI.IDataItemContainer> интерфейс <xref:System.Web.UI.IDataItemContainer.DataItem%2A> , свойство определяет элемент данных и возвращается. В противном случае метод пытается разрешить и вернуть свойство контейнера с именем DataItem.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetIndexedPropertyValue">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает значение индексированного свойства.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetIndexedPropertyValue">
      <MemberSignature Language="C#" Value="public static object GetIndexedPropertyValue (object container, string expr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetIndexedPropertyValue(object container, string expr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIndexedPropertyValue (container As Object, expr As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetIndexedPropertyValue(System::Object ^ container, System::String ^ expr);" />
      <MemberSignature Language="F#" Value="static member GetIndexedPropertyValue : obj * string -&gt; obj" Usage="System.Web.UI.DataBinder.GetIndexedPropertyValue (container, expr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="expr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">Ссылка на объект, для которого будет разбираться выражение <paramref name="expr" />. Это должен быть действительный идентификатор объекта на языке, определенном для страницы.</param>
        <param name="expr">Путь перехода от объекта <paramref name="container" /> к значению общедоступного свойства, которое должно быть помещено в свойство привязанного элемента управления. Значение должно быть строкой имен свойств или полей, разделенных точками, например <c>Tables[0].DefaultView.[0].Price</c> в C# или <c>Tables(0).DefaultView.(0).Price</c> в Visual Basic.</param>
        <summary>Возвращает значение свойства указанного контейнера и путь перемещения.</summary>
        <returns>Объект, являющийся результатом обработки выражений привязки данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение `expr` должно оцениваться как открытое свойство.  
  
 Для любого из веб-элементов управления "список" <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>таких <xref:System.Web.UI.WebControls.DataList>как, <xref:System.Web.UI.WebControls.Repeater>, `container` или, `Container.DataItem`должен быть. При привязке к странице `container` должна быть. `Page`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="container" /> имеет значение <see langword="null" />.  
  
-или- 
 Параметр <paramref name="expr" /> имеет значение <see langword="null" /> или равен пустой строке ("").</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="expr" /> не является допустимым индексированным выражением.  
  
-или- 
 Параметр <paramref name="expr" /> не поддерживает индексированный доступ.</exception>
        <altmember cref="Overload:System.Web.UI.DataBinder.GetPropertyValue" />
      </Docs>
    </Member>
    <Member MemberName="GetIndexedPropertyValue">
      <MemberSignature Language="C#" Value="public static string GetIndexedPropertyValue (object container, string propName, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetIndexedPropertyValue(object container, string propName, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIndexedPropertyValue (container As Object, propName As String, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetIndexedPropertyValue(System::Object ^ container, System::String ^ propName, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member GetIndexedPropertyValue : obj * string * string -&gt; string" Usage="System.Web.UI.DataBinder.GetIndexedPropertyValue (container, propName, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="propName" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">Ссылка на объект, для которого будет разбираться выражение. Это должен быть действительный идентификатор объекта на языке, определенном для страницы.</param>
        <param name="propName">Имя свойства, содержащего извлекаемое значение.</param>
        <param name="format">Строка, определяющая формат отображения результата.</param>
        <summary>Возвращает значение указанного свойства заданного контейнера и форматирует результат.</summary>
        <returns>Значение указанного свойства в формате, определенном параметром <paramref name="format" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод вызывает <xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A> метод `format` , <xref:System.String.Format%2A?displayProperty=nameWithType>  а затем использует метод для форматирования результата, как указано в параметре. <xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A> Строка формата .NET Framework (аналогичная используемой <xref:System.String.Format%2A?displayProperty=nameWithType>) <xref:System.Object> преобразует экземпляр, возвращаемый выражением привязки данных, в <xref:System.String> объект.  
  
 Исключения, вызываемые для <xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A> метода, применяются и <xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A> к методу.  
  
   
  
## Examples  
 В следующем примере кода показано, как декларативно <xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A> использовать метод для привязки к индексированному значению.  
  
 [!code-aspx-csharp[Classic DataBinder.Eval Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataBinder.Eval Example/CS/sourcecs.aspx#2)]
 [!code-aspx-vb[Classic DataBinder.Eval Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataBinder.Eval Example/VB/sourcevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.DataBinder.GetPropertyValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPropertyValue">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает значение свойства.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public static object GetPropertyValue (object container, string propName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetPropertyValue(object container, string propName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValue (container As Object, propName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetPropertyValue(System::Object ^ container, System::String ^ propName);" />
      <MemberSignature Language="F#" Value="static member GetPropertyValue : obj * string -&gt; obj" Usage="System.Web.UI.DataBinder.GetPropertyValue (container, propName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="propName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">Объект, содержащий свойство.</param>
        <param name="propName">Имя свойства, содержащего извлекаемое значение.</param>
        <summary>Возвращает значение указанного свойства заданного объекта.</summary>
        <returns>Значение заданного свойства.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataBinder.GetPropertyValue%2A> Метод используется для получения значения свойства в объекте.  
  
   
  
## Examples  
 В примере <xref:System.Web.UI.DataBinder> демонстрируется использование этого метода.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="container" /> имеет значение <see langword="null" />.  
  
- или - 
 Параметр <paramref name="propName" /> имеет значение <see langword="null" /> или равен пустой строке ("").</exception>
        <exception cref="T:System.Web.HttpException">Объект в параметре <paramref name="container" /> не имеет свойства, указанного параметром <paramref name="propName" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public static string GetPropertyValue (object container, string propName, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyValue(object container, string propName, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValue (container As Object, propName As String, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPropertyValue(System::Object ^ container, System::String ^ propName, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member GetPropertyValue : obj * string * string -&gt; string" Usage="System.Web.UI.DataBinder.GetPropertyValue (container, propName, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="propName" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">Объект, содержащий свойство.</param>
        <param name="propName">Имя свойства, содержащего извлекаемое значение.</param>
        <param name="format">Строка, определяющая формат отображения результата.</param>
        <summary>Возвращает значение указанного свойства заданного объекта и форматирует результат.</summary>
        <returns>Значение указанного свойства в формате, определенном параметром <paramref name="format" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта версия <xref:System.Web.UI.DataBinder.GetPropertyValue%2A> метода используется для извлечения и форматирования значения свойства в объекте.  
  
   
  
## Examples  
 В примере <xref:System.Web.UI.DataBinder> демонстрируется использование этого метода.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="container" /> — <see langword="null" />.  
  
- или - 
 Параметр <paramref name="propName" /> имеет значение <see langword="null" /> или равен пустой строке ("").</exception>
        <exception cref="T:System.Web.HttpException">Объект в параметре <paramref name="container" /> не имеет свойства, указанного параметром <paramref name="propName" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsBindableType">
      <MemberSignature Language="C#" Value="public static bool IsBindableType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsBindableType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.IsBindableType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsBindableType(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member IsBindableType : Type -&gt; bool" Usage="System.Web.UI.DataBinder.IsBindableType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="type"><see cref="T:System.Type" />, представляющий тип данных для проверки.</param>
        <summary>Определяет, можно ли привязать указанный тип данных.</summary>
        <returns>Значение <see langword="true" /> для типов, которые могут быть автоматически привязанными данными в элементах управления; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
