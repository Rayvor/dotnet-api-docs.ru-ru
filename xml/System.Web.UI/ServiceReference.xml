<Type Name="ServiceReference" FullName="System.Web.UI.ServiceReference">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eb7ef2b132a3fc8eddb52d4d04e980948780c37f" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73398336" /></Metadata><TypeSignature Language="C#" Value="public class ServiceReference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceReference extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ServiceReference" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceReference" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceReference" />
  <TypeSignature Language="F#" Value="type ServiceReference = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Path")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Регистрирует веб-службу для использования на странице.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для вызова методов веб-службы из ECMAScript (JavaScript) необходимо включить ссылку на службу на странице ASP.NET и применить атрибут <xref:System.Web.Script.Services.ScriptServiceAttribute> к определению класса веб-службы. Если включить ссылку на службу в веб-службу в <xref:System.Web.UI.ScriptManager> или <xref:System.Web.UI.ScriptManagerProxy> элементе управления на странице ASP.NET, то объекты JavaScript будут создаваться в браузере.  
  
 Прокси-объекты будут использоваться для следующих задач:  
  
-   Выполнение асинхронных запросов в JavaScript к методам веб-служб,  
  
-   Инициализирует экземпляры прокси-серверов для серверных типов данных, в частности для использования в качестве входных параметров для вызова Web Methods.  
  
> [!NOTE]
>  Элемент управления <xref:System.Web.UI.ServiceReference> может использоваться только для служб в том же домене.  
  
 Расположение веб-службы можно определить декларативно, добавив элемент `<asp:ServiceReference>` в элемент `<Services>` внутри элемента `<asp:ScriptManager>` на странице, а затем установив его атрибут <xref:System.Web.UI.ServiceReference.Path%2A>, как показано в следующем примере.  
  
```  
<asp:ScriptManager runat="server" ID="scriptManager">  
  <Services>  
    <asp:ServiceReference Path="~/WebServices/SimpleWebService.asmx" />  
  </Services>  
</asp:ScriptManager>  
```  
  
 Можно использовать свойство <xref:System.Web.UI.ServiceReference.InlineScript%2A>, чтобы указать, включается ли скрипт формирования прокси-сервера в страницу в виде встроенного блока скрипта или получается по отдельному запросу.  
  
 Можно также программно добавить <xref:System.Web.UI.ServiceReference> объект через коллекцию <xref:System.Web.UI.ScriptManager.Services%2A?displayProperty=nameWithType> или <xref:System.Web.UI.ScriptManagerProxy.Services%2A?displayProperty=nameWithType> с помощью метода <xref:System.Collections.ObjectModel.Collection%601.Add%2A> класса <xref:System.Web.UI.ServiceReferenceCollection>.  
  
   
  
## Examples  
 В следующем примере показано, как добавить ссылку на веб-службу в разметке страницы для вызова методов веб-службы из скрипта.  
  
 [!code-aspx-csharp[System.Web.Script.Services.ScriptMethodAttribute#5](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Services.ScriptMethodAttribute/CS/Default.aspx#5)]
 [!code-aspx-vb[System.Web.Script.Services.ScriptMethodAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Services.ScriptMethodAttribute/VB/Default.aspx#5)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/8290e543-7eff-47a4-aace-681f3c07229b">Веб-службы в ASP.NET AJAX</related>
    <related type="Article" href="https://msdn.microsoft.com/library/fc06c224-f01a-45be-94af-bd71afbc07b0">Вызов веб-служб из клиентского скрипта в ASP.NET AJAX</related>
    <related type="Article" href="https://msdn.microsoft.com/library/fe3f6e9e-0acd-44c9-bf0f-0a8598fc13b8">Предоставление веб-служб клиентскому сценарию в ASP.NET AJAX</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.ServiceReference" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ServiceReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.ServiceReference" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceReference (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ServiceReference.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceReference(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ServiceReference : string -&gt; System.Web.UI.ServiceReference" Usage="new System.Web.UI.ServiceReference path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Расположение веб-службы.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.ServiceReference" /> с указанным путем.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProxyScript">
      <MemberSignature Language="C#" Value="protected internal virtual string GetProxyScript (System.Web.UI.ScriptManager scriptManager, System.Web.UI.Control containingControl);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetProxyScript(class System.Web.UI.ScriptManager scriptManager, class System.Web.UI.Control containingControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ServiceReference.GetProxyScript(System.Web.UI.ScriptManager,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetProxyScript(System::Web::UI::ScriptManager ^ scriptManager, System::Web::UI::Control ^ containingControl);" />
      <MemberSignature Language="F#" Value="abstract member GetProxyScript : System.Web.UI.ScriptManager * System.Web.UI.Control -&gt; string&#xA;override this.GetProxyScript : System.Web.UI.ScriptManager * System.Web.UI.Control -&gt; string" Usage="serviceReference.GetProxyScript (scriptManager, containingControl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="containingControl" Type="System.Web.UI.Control" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="scriptManager">Элемент управления <see cref="T:System.Web.UI.ScriptManager" /> на странице.</param>
        <param name="containingControl">Объект <see cref="T:System.Web.UI.Control" />.</param>
        <summary>Предоставляет скрипт прокси из производного объекта <see cref="T:System.Web.UI.ServiceReference" />, который можно переопределить как настраиваемый.</summary>
        <returns>Скрипт прокси.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Параметр `containingControl` — это объект <xref:System.Web.UI.ScriptManager> или <xref:System.Web.UI.ScriptManagerProxy> объект, для которого определен объект <xref:System.Web.UI.ServiceReference>. Его следует использовать в качестве основания для относительных разрешений URL-адресов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProxyUrl">
      <MemberSignature Language="C#" Value="protected internal virtual string GetProxyUrl (System.Web.UI.ScriptManager scriptManager, System.Web.UI.Control containingControl);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetProxyUrl(class System.Web.UI.ScriptManager scriptManager, class System.Web.UI.Control containingControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ServiceReference.GetProxyUrl(System.Web.UI.ScriptManager,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetProxyUrl(System::Web::UI::ScriptManager ^ scriptManager, System::Web::UI::Control ^ containingControl);" />
      <MemberSignature Language="F#" Value="abstract member GetProxyUrl : System.Web.UI.ScriptManager * System.Web.UI.Control -&gt; string&#xA;override this.GetProxyUrl : System.Web.UI.ScriptManager * System.Web.UI.Control -&gt; string" Usage="serviceReference.GetProxyUrl (scriptManager, containingControl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="containingControl" Type="System.Web.UI.Control" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="scriptManager">Элемент управления <see cref="T:System.Web.UI.ScriptManager" /> на странице.</param>
        <param name="containingControl">Объект <see cref="T:System.Web.UI.Control" />.</param>
        <summary>Предоставляет URL прокси из производного объекта <see cref="T:System.Web.UI.ServiceReference" />, который можно переопределить как настраиваемый.</summary>
        <returns>URL-адрес прокси.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Параметр `containingControl` — объект <xref:System.Web.UI.ScriptManager> или <xref:System.Web.UI.ScriptManagerProxy> объект, для которого определен объект <xref:System.Web.UI.ServiceReference>, который должен использоваться в качестве основания для относительного разрешения URL-адресов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InlineScript">
      <MemberSignature Language="C#" Value="public bool InlineScript { get; set; }" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InlineScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ServiceReference.InlineScript" />
      <MemberSignature Language="VB.NET" Value="Public Property InlineScript As Boolean" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InlineScript { bool get(); void set(bool value); };" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.InlineScript : bool with get, set" Usage="System.Web.UI.ServiceReference.InlineScript" />
      <MemberSignature Language="C#" Value="public virtual bool InlineScript { get; set; }" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InlineScript As Boolean" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool InlineScript { bool get(); void set(bool value); };" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, которое указывает, включается ли скрипт формирования прокси в страницу в качестве встроенного блока скрипта, или получается по отдельному запросу.</summary>
        <value>Значение <see langword="true" />, если скрипт формирования прокси включается в страницу в качестве встроенного блока скрипта; значение <see langword="false" />, если скрипт формирования прокси получается по отдельному запросу. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если свойство <xref:System.Web.UI.ServiceReference.InlineScript%2A> не объявлено, значение по умолчанию — `false`.  
  
 Если <xref:System.Web.UI.ServiceReference.InlineScript%2A> имеет значение `false`, скрипт для создания прокси-серверов ECMAScript (JavaScript) загружается в виде отдельного файла скрипта путем дополнительного запроса к серверу. При использовании кэширования браузера этот параметр полезен, если несколько веб-страниц используют одну и ту же ссылку на службу.  
  
 Если <xref:System.Web.UI.ServiceReference.InlineScript%2A> имеет значение `true`, скрипт создания прокси-сервера включается в качестве встроенного блока скрипта на странице. Это может повысить производительность сервера за счет сокращения числа сетевых запросов, особенно если на странице много ссылок на службы, а другие страницы не ссылаются на одни и те же службы. Кроме того, для свойства <xref:System.Web.UI.ServiceReference.Path%2A> необходимо задать относительный путь, если <xref:System.Web.UI.ServiceReference.InlineScript%2A> имеет значение `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ServiceReference.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.UI.ServiceReference.Path" />
      <MemberSignature Language="C#" Value="public virtual string Path { get; set; }" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Path As String" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает путь для веб-службы, на которую указывает ссылка.</summary>
        <value>Путь для веб-службы, на которую указывает ссылка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Web.UI.ServiceReference.Path%2A> может указывать только на локальные веб-службы. Иными словами, это свойство может указывать только на веб-службы в том же домене, что и веб-приложение ASP.NET с поддержкой AJAX. <xref:System.Web.UI.ServiceReference.Path%2A> может быть относительным, относительным или абсолютным путем к приложению.  
  
 Если свойство <xref:System.Web.UI.ServiceReference.InlineScript%2A> имеет значение `true`, необходимо использовать относительный путь, указывающий на то же веб-приложение, что и страница, содержащая экземпляр <xref:System.Web.UI.ServiceReference>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ServiceReference.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="serviceReference.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает строку, которая представляет значение свойства <see cref="P:System.Web.UI.ServiceReference.Path" /> или имя типа.</summary>
        <returns>Значение свойства <see cref="P:System.Web.UI.ServiceReference.Path" />, если оно определено, в противном случае — значение свойства <see cref="P:System.Reflection.MemberInfo.Name" /> для класса.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
