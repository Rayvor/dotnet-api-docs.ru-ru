<Type Name="ITemplate" FullName="System.Web.UI.ITemplate">
  <Metadata><Meta Name="ms.openlocfilehash" Value="440df8404140c61e13448ef212ed8227d41ee382" /><Meta Name="ms.sourcegitcommit" Value="0528148687f8b0e0a3d0f550431a777fbe5346bc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/25/2019" /><Meta Name="ms.locfileid" Value="64441670" /></Metadata><TypeSignature Language="C#" Value="public interface ITemplate" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITemplate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ITemplate" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITemplate" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITemplate" />
  <TypeSignature Language="F#" Value="type ITemplate = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Определяет поведение при заполнении шаблонного ASP.NET серверного элемента управления с дочерними элементами управления. Дочерние элементы управления представляют встроенные шаблоны, определенные на странице.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот интерфейс используется пользовательских серверных элементов управления, но не реализуется ими. Он всегда реализуется ASP.NET.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется простой шаблонный серверный элемент управления, который использует <xref:System.Web.UI.ITemplate> интерфейс для создания свойства шаблона.  
  
 [!code-csharp[Classic ITemplate Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ITemplate Example/CS/source.cs#1)]
 [!code-vb[Classic ITemplate Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ITemplate Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Control" />
  </Docs>
  <Members>
    <Member MemberName="InstantiateIn">
      <MemberSignature Language="C#" Value="public void InstantiateIn (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InstantiateIn(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InstantiateIn (container As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InstantiateIn(System::Web::UI::Control ^ container);" />
      <MemberSignature Language="F#" Value="abstract member InstantiateIn : System.Web.UI.Control -&gt; unit" Usage="iTemplate.InstantiateIn container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">Объект <see cref="T:System.Web.UI.Control" />, содержащий экземпляры элементов управления из встроенного шаблона.</param>
        <summary>При реализации каким-либо классом определяет объект <see cref="T:System.Web.UI.Control" />, которому принадлежат дочерние элементы управления и шаблоны. В свою очередь, эти дочерние элементы управления определяются в пределах встроенного шаблона.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При разработке шаблонных серверных элементов управления, не нужно реализовывать этот метод; .NET Framework предоставляет реализацию для вас.  
  
   
  
## Examples  
 [!code-csharp[ITemplate_Interface#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ITemplate_Interface/CS/itemplate.cs#2)]
 [!code-vb[ITemplate_Interface#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ITemplate_Interface/VB/itemplate.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
  </Members>
</Type>