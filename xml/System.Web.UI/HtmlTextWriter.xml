<Type Name="HtmlTextWriter" FullName="System.Web.UI.HtmlTextWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7da547f5d372a4396dad80320a068d3c370e4d5a" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73398383" /></Metadata><TypeSignature Language="C#" Value="public class HtmlTextWriter : System.IO.TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi HtmlTextWriter extends System.IO.TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlTextWriter&#xA;Inherits TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlTextWriter : System::IO::TextWriter" />
  <TypeSignature Language="F#" Value="type HtmlTextWriter = class&#xA;    inherit TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Записывает знаки разметки и текста в исходящий поток серверного элемента управления ASP.NET. Этот класс содержит возможности форматирования, которые используются серверными элементами управления ASP.NET при отрисовке разметки для клиентов.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс <xref:System.Web.UI.HtmlTextWriter> используется для отображения HTML 4,0 в браузерах для настольных систем. <xref:System.Web.UI.HtmlTextWriter> является также базовым классом для всех средств записи разметки в пространстве имен <xref:System.Web.UI>, включая классы <xref:System.Web.UI.ChtmlTextWriter>, <xref:System.Web.UI.Html32TextWriter>и <xref:System.Web.UI.XhtmlTextWriter>. Эти классы используются для записи элементов, атрибутов и сведений о стиле и макете для различных типов разметки. Кроме того, эти классы используются классами адаптеров страниц и элементов управления, связанными с каждым языком разметки.  
  
 В большинстве случаев ASP.NET автоматически использует соответствующий модуль записи для запрашивающего устройства. Однако если вы создаете пользовательский модуль записи текста или хотите указать конкретный модуль записи для отображения страницы для конкретного устройства, необходимо подключить модуль записи к странице в разделе `controlAdapters` файла приложения. browser.  
  
   
  
## Examples  
 В следующем примере кода показано, как переопределить метод <xref:System.Web.UI.Control.Render%2A> пользовательского элемента управления, производного от класса <xref:System.Web.UI.Control>. В примере кода показано, как использовать различные методы, свойства и поля <xref:System.Web.UI.HtmlTextWriter>.  
  
 [!code-csharp[MarkupTextWriter_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#1)]
 [!code-vb[MarkupTextWriter_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.TextWriter" />
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
    <altmember cref="T:System.Web.UI.Adapters.PageAdapter" />
    <altmember cref="T:System.Web.UI.ChtmlTextWriter" />
    <altmember cref="T:System.Web.UI.Html32TextWriter" />
    <altmember cref="T:System.Web.UI.XhtmlTextWriter" />
    <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.HtmlTextWriter" />.</summary>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextWriter (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTextWriter(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlTextWriter : System.IO.TextWriter -&gt; System.Web.UI.HtmlTextWriter" Usage="new System.Web.UI.HtmlTextWriter writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Экземпляр <see cref="T:System.IO.TextWriter" />, визуализирующий содержимое разметки.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.HtmlTextWriter" />, использующего строку табуляции по умолчанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перегрузка <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> конструктора <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> использует константу <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> при необходимости отступа строки. Он вызывает перегрузку <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> для инициализации нового экземпляра.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать конструктор <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> для создания пользовательского объекта <xref:System.Web.UI.HtmlTextWriter> с именем `StyledLabelHtmlWriter.`, когда пользовательский класс `MyPage`, производный от класса <xref:System.Web.UI.Page>, запрашивается браузером клиента. Он использует класс `StyledLabelHtmlWriter` для подготовки содержимого к выходному потоку.  
  
 [!code-cpp[HtmlTextWriter_Methods3#10](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#10)]
 [!code-csharp[HtmlTextWriter_Methods3#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#10)]
 [!code-vb[HtmlTextWriter_Methods3#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextWriter (System.IO.TextWriter writer, string tabString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string tabString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, tabString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTextWriter(System::IO::TextWriter ^ writer, System::String ^ tabString);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlTextWriter : System.IO.TextWriter * string -&gt; System.Web.UI.HtmlTextWriter" Usage="new System.Web.UI.HtmlTextWriter (writer, tabString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="tabString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.IO.TextWriter" /> отображает содержимое разметки.</param>
        <param name="tabString">Строка, используемая для отображения отступа строки.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.HtmlTextWriter" /> заданным символом строки табуляции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перегрузка <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> конструктора <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> использует `tabString` при необходимости отступа строки. Он вызывает <xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType> базовый конструктор для инициализации нового экземпляра.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать конструктор <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> для создания пользовательского объекта <xref:System.Web.UI.HtmlTextWriter> с именем `StyledLabelHtmlWriter.`, когда пользовательский класс `MyPage`, производный от класса <xref:System.Web.UI.Page>, запрашивается браузером клиента. Он использует класс `StyledLabelHtmlWriter` для подготовки содержимого к выходному потоку.  
  
 [!code-cpp[HtmlTextWriter_Methods3#10](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#10)]
 [!code-csharp[HtmlTextWriter_Methods3#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#10)]
 [!code-vb[HtmlTextWriter_Methods3#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет указанные атрибут и значение разметки в открывающий тег элемента, создаваемого объектом <see cref="T:System.Web.UI.HtmlTextWriter" /> с последующим вызовом метода <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : string * string -&gt; unit&#xA;override this.AddAttribute : string * string -&gt; unit" Usage="htmlTextWriter.AddAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Строка, содержащая имя атрибута для добавления.</param>
        <param name="value">Строка, содержащая значение для назначения атрибуту.</param>
        <summary>Добавляет указанные атрибут и значение разметки в открывающий тег элемента, создаваемого объектом <see cref="T:System.Web.UI.HtmlTextWriter" /> с последующим вызовом метода <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте перегрузку <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> метода <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29>, если атрибут не является одним из <xref:System.Web.UI.HtmlTextWriterAttribute> значений или если атрибут неизвестен до времени выполнения.  
  
 Для экземпляра любого заданного элемента разметки класс <xref:System.Web.UI.HtmlTextWriter> поддерживает список атрибутов для этого элемента. При вызове метода <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> все атрибуты, добавленные методом <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>, подготавливаются к открывающему тегу элемента. Затем список атрибутов удаляется из объекта <xref:System.Web.UI.HtmlTextWriter>.  
  
 Шаблон кода для визуализации элементов разметки выглядит следующим образом:  
  
-   Для добавления атрибутов к элементу используется метод <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>.  
  
-   Воспользуйтесь методом <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>.  
  
-   При необходимости можно использовать другие методы для отображения содержимого, найденного между открывающим и закрывающим тегами элемента.  
  
-   Воспользуйтесь методом <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как вызвать метод <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> перед вызовом метода <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>. Код вызывает две различные перегрузки <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> и две различные перегрузки <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> перед вызовом метода <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> для визуализации элемента `<span>` в поток вывода. Метод <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> используется для определения пользовательского атрибута с именем `CustomAttribute` и пользовательского значения с именем `CustomAttributeValue` для элемента `<span>`, отображаемого этим кодом.  
  
 [!code-csharp[MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#2)]
 [!code-vb[MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(valuetype System.Web.UI.HtmlTextWriterAttribute key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (key As HtmlTextWriterAttribute, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::Web::UI::HtmlTextWriterAttribute key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string -&gt; unit&#xA;override this.AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string -&gt; unit" Usage="htmlTextWriter.AddAttribute (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><see cref="T:System.Web.UI.HtmlTextWriterAttribute" />, представляющий атрибут разметки для добавления в исходящий поток.</param>
        <param name="value">Строка, содержащая значение для назначения атрибуту.</param>
        <summary>Добавляет атрибут разметки и значение атрибута в открывающий тег элемента, создаваемого объектом <see cref="T:System.Web.UI.HtmlTextWriter" /> с последующим вызовом метода <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте перегрузку <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> метода <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> для отрисовки стандартного атрибута разметки.  
  
 Для экземпляра любого заданного элемента разметки класс <xref:System.Web.UI.HtmlTextWriter> поддерживает список атрибутов для этого элемента. При вызове метода <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> все атрибуты, добавленные методом <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>, подготавливаются к открывающему тегу элемента. Затем список атрибутов удаляется из <xref:System.Web.UI.HtmlTextWriter>.  
  
 Шаблон кода для визуализации элементов разметки выглядит следующим образом:  
  
-   Для добавления атрибутов к элементу используется метод <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>.  
  
-   Воспользуйтесь методом <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>.  
  
-   При необходимости можно использовать другие методы для отображения содержимого, найденного между открывающим и закрывающим тегами элемента.  
  
-   Воспользуйтесь методом <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать перегрузку <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> метода <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29>, чтобы добавить атрибут `Onclick` к элементу разметки, а затем присвоить его значение следующему коду ECMAScript:  
  
```  
alert('Hello');  
```  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#1)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#1)]
 [!code-vb[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (string name, string value, bool fEndode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(string name, string value, bool fEndode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (name As String, value As String, fEndode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value, bool fEndode);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : string * string * bool -&gt; unit&#xA;override this.AddAttribute : string * string * bool -&gt; unit" Usage="htmlTextWriter.AddAttribute (name, value, fEndode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEndode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">Строка, содержащая имя атрибута для добавления.</param>
        <param name="value">Строка, содержащая значение для назначения атрибуту.</param>
        <param name="fEndode"><see langword="true" /> для кодирования атрибута и его значения; в противном случае — значение <see langword="false" />.</param>
        <summary>Добавляет указанные атрибут разметки и значение в открывающий тег элемента, создаваемого объектом <see cref="T:System.Web.UI.HtmlTextWriter" /> с последующим вызовом метода <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />, с дополнительным кодированием.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте перегрузку <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> метода <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29>, если атрибут не является одним из <xref:System.Web.UI.HtmlTextWriterAttribute> значений, или если атрибут неизвестен до времени выполнения и не требуется кодирование.  
  
 Для экземпляра любого заданного элемента разметки класс <xref:System.Web.UI.HtmlTextWriter> поддерживает список атрибутов для этого элемента. При вызове метода <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> все атрибуты, добавленные методом <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>, подготавливаются к открывающему тегу элемента. Затем список атрибутов удаляется из объекта <xref:System.Web.UI.HtmlTextWriter>.  
  
 Используйте метод <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> с параметром `fEncode`, для которого задано значение `true`, если атрибут может содержать кавычки ("), знак" меньше "(<) или амперсанд (&). Вызов метода будет кодировать атрибут в соответствии с требованиями запрашивающего устройства. Можно задать для `fEncode` значение `false`, если известно, что ни один из этих символов не будет создан, или если известно, что атрибут уже закодирован.  
 
Если тип атрибута — `Style`, значение не будет закодировано, даже если `fEndode` `true`. Убедитесь, что значение стиля соответствует CSS и не содержит вредоносный код.
  
 Шаблон кода для визуализации элементов разметки выглядит следующим образом:  
  
-   Для добавления атрибутов к элементу используется метод <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>.  
  
-   Воспользуйтесь методом <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>.  
  
-   При необходимости можно использовать другие методы для отображения содержимого, найденного между открывающим и закрывающим тегами элемента.  
  
-   Воспользуйтесь методом <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать перегрузку <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> метода <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29>, чтобы гарантировать, что пользовательский атрибут с именем `myattribute`и его значением не кодируются для элемента `<img>`.  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="protected virtual void AddAttribute (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddAttribute(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddAttribute (name As String, value As String, key As HtmlTextWriterAttribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; unit&#xA;override this.AddAttribute : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; unit" Usage="htmlTextWriter.AddAttribute (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">Строка, содержащая имя атрибута для добавления.</param>
        <param name="value">Строка, содержащая значение для назначения атрибуту.</param>
        <param name="key"><see cref="T:System.Web.UI.HtmlTextWriterAttribute" />, представляющий атрибут.</param>
        <summary>Добавляет указанные атрибут разметки и значение вместе со значением перечисления <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> в открывающий тег элемента, создаваемого объектом <see cref="T:System.Web.UI.HtmlTextWriter" />, с последующим вызовом метода <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте перегрузку <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> метода <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29> только при наследовании от класса <xref:System.Web.UI.HtmlTextWriter>. Он позволяет создавать новые пары `name` и `key` для атрибутов.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(valuetype System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (key As HtmlTextWriterAttribute, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::Web::UI::HtmlTextWriterAttribute key, System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string * bool -&gt; unit&#xA;override this.AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string * bool -&gt; unit" Usage="htmlTextWriter.AddAttribute (key, value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key"><see cref="T:System.Web.UI.HtmlTextWriterAttribute" />, представляющий атрибут разметки для добавления в исходящий поток.</param>
        <param name="value">Строка, содержащая значение для назначения атрибуту.</param>
        <param name="fEncode"><see langword="true" /> для кодирования атрибута и его значения; в противном случае — значение <see langword="false" />.</param>
        <summary>Добавляет атрибут разметки и значение атрибута в открывающий тег элемента, создаваемого объектом <see cref="T:System.Web.UI.HtmlTextWriter" /> с последующим вызовом метода <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />, с дополнительным кодированием.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте перегрузку <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> метода <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> для отображения стандартного атрибута разметки с необязательной кодировкой.  
  
 Для экземпляра любого заданного элемента разметки класс <xref:System.Web.UI.HtmlTextWriter> поддерживает список атрибутов для этого элемента. При вызове метода <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> все атрибуты, добавленные <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>, подготавливаются к открывающему тегу элемента. Затем список атрибутов удаляется из объекта <xref:System.Web.UI.HtmlTextWriter>.  
  
 Используйте метод <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> с параметром `fEncode`, для которого задано значение `true`, если атрибут может содержать кавычки ("), знак" меньше "(<) или амперсанд (&). Вызов метода будет кодировать атрибут в соответствии с требованиями запрашивающего устройства. Можно задать для `fEncode` значение `false`, если известно, что ни один из этих символов не будет создан, или если известно, что атрибут уже закодирован.  
 
 Если тип атрибута — `Style`, значение не будет закодировано, даже если `fEncode` `true`. Убедитесь, что значение стиля соответствует CSS и не содержит вредоносный код.

  
 Шаблон кода для визуализации элементов разметки выглядит следующим образом:  
  
-   Для добавления атрибутов к элементу используется метод <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>.  
  
-   Воспользуйтесь методом <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>.  
  
-   При необходимости можно использовать другие методы для отображения содержимого, найденного между открывающим и закрывающим тегами элемента.  
  
-   Воспользуйтесь методом <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29>, чтобы гарантировать, что строковое значение, присваиваемое атрибуту `Alt` для элемента `<img>`, кодируется для запрашивающего устройства.  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddStyleAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет атрибут стиля разметки в открывающий тег элемента, создаваемого объектом <see cref="T:System.Web.UI.HtmlTextWriter" /> с последующим вызовом метода <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</summary>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </MemberGroup>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddStyleAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddStyleAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddStyleAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddStyleAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddStyleAttribute : string * string -&gt; unit&#xA;override this.AddStyleAttribute : string * string -&gt; unit" Usage="htmlTextWriter.AddStyleAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Строка, содержащая стиль атрибута для добавления.</param>
        <param name="value">Строка, содержащая значение для назначения атрибуту.</param>
        <summary>Добавляет указанный атрибут стиля разметки и значение атрибута в открывающий тег разметки, созданный последующим вызовом метода <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте перегрузку <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> метода <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29>, если стиль не является членом перечисления <xref:System.Web.UI.HtmlTextWriterStyle> или неизвестен до времени выполнения.  
  
 Класс <xref:System.Web.UI.HtmlTextWriter> содержит список стилей для отображаемых элементов разметки. При вызове метода <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> все стили, добавленные методом <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>, подготавливаются к открывающему тегу элемента. Затем список стилей удаляется.  
  
 Шаблон кода для визуализации элементов разметки выглядит следующим образом:  
  
-   Используйте метод <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>, чтобы добавить к элементу атрибуты стиля.  
  
-   Воспользуйтесь методом <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>.  
  
-   При необходимости можно использовать другие методы для отображения содержимого, найденного между открывающим и закрывающим тегами элемента.  
  
-   Воспользуйтесь методом <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать перегрузку <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> метода <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> для отображения `font-size` и `color` атрибутов стиля элемента `<p>`. В этом примере кода используется класс <xref:System.Web.UI.HtmlTextWriter> для отрисовки содержимого элемента управления.  
  
 [!code-cpp[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/CPP/htmltextwriter_addstyleattribute.cpp#1)]
 [!code-csharp[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/CS/htmltextwriter_addstyleattribute.cs#1)]
 [!code-vb[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/VB/htmltextwriter_addstyleattribute.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddStyleAttribute (System.Web.UI.HtmlTextWriterStyle key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddStyleAttribute(valuetype System.Web.UI.HtmlTextWriterStyle key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddStyleAttribute (key As HtmlTextWriterStyle, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddStyleAttribute(System::Web::UI::HtmlTextWriterStyle key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddStyleAttribute : System.Web.UI.HtmlTextWriterStyle * string -&gt; unit&#xA;override this.AddStyleAttribute : System.Web.UI.HtmlTextWriterStyle * string -&gt; unit" Usage="htmlTextWriter.AddStyleAttribute (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><see cref="T:System.Web.UI.HtmlTextWriterStyle" />, представляющий атрибут стиля для добавления в исходящий поток.</param>
        <param name="value">Строка, содержащая значение для назначения атрибуту.</param>
        <summary>Добавляет атрибут стиля разметки, связанный с указанным значением <see cref="T:System.Web.UI.HtmlTextWriterStyle" />, и значение атрибута в открывающий тег разметки, созданный последующим вызовом метода <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте перегрузку <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> метода <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29>, если стиль является членом перечисления <xref:System.Web.UI.HtmlTextWriterStyle> и известен до времени выполнения.  
  
 Класс <xref:System.Web.UI.HtmlTextWriter> содержит список стилей для отображаемых элементов разметки. При вызове метода <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> все стили, добавленные методом <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>, подготавливаются к открывающему тегу элемента. Затем список стилей удаляется.  
  
 Шаблон кода для визуализации элементов разметки выглядит следующим образом:  
  
-   Используйте метод <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>, чтобы добавить к элементу атрибуты стиля.  
  
-   Воспользуйтесь методом <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>.  
  
-   При необходимости можно использовать другие методы для отображения содержимого, найденного между открывающим и закрывающим тегами элемента.  
  
-   Воспользуйтесь методом <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать часть переопределения метода <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> в классе, производном от класса <xref:System.Web.UI.HtmlTextWriter>. Код проверяет, выполняется ли визуализация элемента `<Label>`. В этом случае вызывается метод <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A>, чтобы проверить, был ли определен атрибут стиля `Color` для элемента `<Label>`. Если атрибут `Color` не определен, код вызывает эту перегрузку метода <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>, чтобы добавить атрибут `Color` к атрибуту Style, а затем присвоить ему значение `red`.  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="protected virtual void AddStyleAttribute (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddStyleAttribute(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddStyleAttribute (name As String, value As String, key As HtmlTextWriterStyle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddStyleAttribute(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="abstract member AddStyleAttribute : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; unit&#xA;override this.AddStyleAttribute : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; unit" Usage="htmlTextWriter.AddStyleAttribute (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">Строка, содержащая атрибут стиля для добавления.</param>
        <param name="value">Строка, содержащая значение для назначения атрибуту.</param>
        <param name="key"><see cref="T:System.Web.UI.HtmlTextWriterStyle" />, представляющий атрибут стиля для добавления.</param>
        <summary>Добавляет указанный атрибут стиля разметки и значение атрибута вместе со значением перечисления <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> в открывающий тег разметки, созданный последующим вызовом метода <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте перегрузку <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> метода <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29> только при наследовании от класса <xref:System.Web.UI.HtmlTextWriter>. Он позволяет создавать новые пары `name` и `value` для атрибутов <xref:System.Web.UI.HtmlTextWriterStyle>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="BeginRender">
      <MemberSignature Language="C#" Value="public virtual void BeginRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.BeginRender" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginRender ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginRender();" />
      <MemberSignature Language="F#" Value="abstract member BeginRender : unit -&gt; unit&#xA;override this.BeginRender : unit -&gt; unit" Usage="htmlTextWriter.BeginRender " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Оповещает объект <see cref="T:System.Web.UI.HtmlTextWriter" /> или объект производного класса, что элемент управления скоро будет отображен.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация класса <xref:System.Web.UI.HtmlTextWriter> метода <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> не имеет функциональности. Необходимо переопределить метод <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> в классе, производном от <xref:System.Web.UI.HtmlTextWriter>, чтобы обеспечить собственные функции отрисовки. Например, в языке разметки, который может потребовать, чтобы элементы `<p>` были визуализированы непосредственно перед элементом управления, но там, где требуется элемент `<p>`, было определено ранее, можно использовать переопределение <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="htmlTextWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Закрывает объект <see cref="T:System.Web.UI.HtmlTextWriter" /> и высвобождает все системные ресурсы с ним связанные.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта реализация метода <xref:System.Web.UI.HtmlTextWriter.Close%2A> вызывает метод <xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType> Base.  
  
 После вызова метода <xref:System.Web.UI.HtmlTextWriter.Close%2A> любые операции с объектом <xref:System.Web.UI.HtmlTextWriter> могут вызывать исключения, так как все его ресурсы были освобождены.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.IO.TextWriter.Close" />
        <altmember cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="DefaultTabString">
      <MemberSignature Language="C#" Value="public const string DefaultTabString;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultTabString" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultTabString As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultTabString;" />
      <MemberSignature Language="F#" Value="val mutable DefaultTabString : string" Usage="System.Web.UI.HtmlTextWriter.DefaultTabString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет собой один знак табуляции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Единственная вкладка представлена символом ASCII 9.  
  
   
  
## Examples  
 В следующем примере кода показано, как создать конструктор, который принимает объект <xref:System.IO.TextWriter> в качестве параметра и передает <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> поле в качестве аргумента параметра во вторую версию конструктора. При вызове этого конструктора из кода поле <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> определяет политику отступов для экземпляра средства записи разметки, используемого страницей или адаптером.  
  
 [!code-csharp[MarkupTextWriter_Methods3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#1)]
 [!code-vb[MarkupTextWriter_Methods3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="DoubleQuoteChar">
      <MemberSignature Language="C#" Value="public const char DoubleQuoteChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char DoubleQuoteChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Const DoubleQuoteChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char DoubleQuoteChar;" />
      <MemberSignature Language="F#" Value="val mutable DoubleQuoteChar : char" Usage="System.Web.UI.HtmlTextWriter.DoubleQuoteChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет знак кавычки (").</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поле <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> используется методом <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> для закрытия атрибута.  
  
   
  
## Examples  
 В следующем примере кода показано, как визуализировать `border` атрибут для элемента `<table>`. Код вызывает метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> для отображения атрибута и его значения и использует метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> для отрисовки полей <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> и <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar>.  
  
 Этот пример кода отображает следующую разметку:  
  
 `border="1"`  
  
 [!code-csharp[MarkupTextWriter_Constants#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#6)]
 [!code-vb[MarkupTextWriter_Constants#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.Write" />
        <altmember cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="EncodeAttributeValue">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Кодирует значение атрибута указанной разметки на основе требований к объекту <see cref="T:System.Web.HttpRequest" /> в текущем контексте.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncodeAttributeValue">
      <MemberSignature Language="C#" Value="protected string EncodeAttributeValue (string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string EncodeAttributeValue(string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EncodeAttributeValue (value As String, fEncode As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ EncodeAttributeValue(System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="member this.EncodeAttributeValue : string * bool -&gt; string" Usage="htmlTextWriter.EncodeAttributeValue (value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">Строка, которая содержит значение атрибута для кодирования.</param>
        <param name="fEncode"><see langword="true" /> — кодирует значение атрибута. В противном случае — <see langword="false" />.</param>
        <summary>Кодирует значение атрибута указанной разметки на основе требований к объекту <see cref="T:System.Web.HttpRequest" /> в текущем контексте.</summary>
        <returns>Строка, которая содержит закодированное значение атрибута. <see langword="null" />, если <paramref name="value" /> является пустым, или незакодированное значение атрибута, если <paramref name="fEncode" /> имеет значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте перегрузку <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> метода <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29>, если атрибут не является значением перечисления <xref:System.Web.UI.HtmlTextWriterAttribute> или неизвестен до времени выполнения.  
  
 Метод <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> удаляет двойные кавычки ("), амперсанды (&) и символы" меньше "(<), чтобы недопустимые теги не создавались независимо от входных данных. Фактическая кодировка выполняется методом <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как вызвать метод <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> в качестве параметра в вызове метода <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>, а затем кодирует значение атрибута стиля `color:blue`.  
  
 [!code-cpp[HtmlTextWriter_Methods#5](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#5)]
 [!code-csharp[HtmlTextWriter_Methods#5](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#5)]
 [!code-vb[HtmlTextWriter_Methods#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="EncodeAttributeValue">
      <MemberSignature Language="C#" Value="protected virtual string EncodeAttributeValue (System.Web.UI.HtmlTextWriterAttribute attrKey, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string EncodeAttributeValue(valuetype System.Web.UI.HtmlTextWriterAttribute attrKey, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EncodeAttributeValue (attrKey As HtmlTextWriterAttribute, value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ EncodeAttributeValue(System::Web::UI::HtmlTextWriterAttribute attrKey, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member EncodeAttributeValue : System.Web.UI.HtmlTextWriterAttribute * string -&gt; string&#xA;override this.EncodeAttributeValue : System.Web.UI.HtmlTextWriterAttribute * string -&gt; string" Usage="htmlTextWriter.EncodeAttributeValue (attrKey, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrKey" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attrKey"><see cref="T:System.Web.UI.HtmlTextWriterAttribute" />, представляющий атрибут разметки.</param>
        <param name="value">Строка, которая содержит значение атрибута для кодирования.</param>
        <summary>Кодирует значение атрибута указанной разметки на основе требований к объекту <see cref="T:System.Web.HttpRequest" /> в текущем контексте.</summary>
        <returns>Строка, содержащая значение закодированного атрибута.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> удаляет двойные кавычки ("), амперсанды (&) и символы" меньше "(<), чтобы недопустимые теги не создавались независимо от входных данных. Фактическая кодировка выполняется методом <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="EncodeUrl">
      <MemberSignature Language="C#" Value="protected string EncodeUrl (string url);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string EncodeUrl(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EncodeUrl (url As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ EncodeUrl(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.EncodeUrl : string -&gt; string" Usage="htmlTextWriter.EncodeUrl url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">Строка, содержащая URL-адрес для кодирования.</param>
        <summary>Осуществляет минимальную кодировку URL путем преобразования пробелов в указанном URL-адресе в строку "%20".</summary>
        <returns>Строка, содержащая закодированный URL-адрес.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Кодирование URL-адреса символа состоит из символа процента (%), за которым следует двузначное шестнадцатеричное представление (без учета регистра) кодовой точки ISO-Latin для символа. Шестнадцатеричное представление пробела — 20.  
  
   
  
## Examples  
 В следующем примере кода показано, как вызвать метод <xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A> для преобразования любых пробелов в URL-адресе, переданном в качестве параметра в вызове метода <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>.  
  
 [!code-cpp[HtmlTextWriter_Methods#6](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#6)]
 [!code-csharp[HtmlTextWriter_Methods#6](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#6)]
 [!code-vb[HtmlTextWriter_Methods#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.UrlPathEncode(System.String)" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.Web.UI.HtmlTextWriter.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает кодировку, используемую объектом <see cref="T:System.Web.UI.HtmlTextWriter" />, для записи содержимого на страницу.</summary>
        <value><see cref="T:System.Text.Encoding" /> в которой записывается разметка на страницу.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> получает свое значение из базового <xref:System.IO.TextWriter> объекта.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать свойство <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> для записи типа кодировки, которую пользовательский элемент управления использует для отрисовки текста на странице, содержащей его.  
  
 [!code-cpp[HtmlTextWriter_Properties#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CPP/htmltextwriter_properties1.cpp#2)]
 [!code-csharp[HtmlTextWriter_Properties#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CS/htmltextwriter_properties1.cs#2)]
 [!code-vb[HtmlTextWriter_Properties#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Properties/VB/htmltextwriter_properties1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="EndRender">
      <MemberSignature Language="C#" Value="public virtual void EndRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EndRender" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndRender ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndRender();" />
      <MemberSignature Language="F#" Value="abstract member EndRender : unit -&gt; unit&#xA;override this.EndRender : unit -&gt; unit" Usage="htmlTextWriter.EndRender " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Оповещает объект <see cref="T:System.Web.UI.HtmlTextWriter" /> или объект производного класса, что элемент управления завершил отрисовку. Этот метод используется для закрытия любых элементов разметки, открытых в методе <see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация класса <xref:System.Web.UI.HtmlTextWriter> метода <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> не имеет функциональности. Необходимо переопределить <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> в классе, производном от класса <xref:System.Web.UI.HtmlTextWriter>, чтобы обеспечить собственные функции отрисовки.  
  
 Можно использовать метод <xref:System.Web.UI.HtmlTextWriter.EndRender%2A>, чтобы закрыть все элементы разметки, открытые в методе <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.BeginRender" />
      </Docs>
    </Member>
    <Member MemberName="EndTagLeftChars">
      <MemberSignature Language="C#" Value="public const string EndTagLeftChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EndTagLeftChars" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars" />
      <MemberSignature Language="VB.NET" Value="Public Const EndTagLeftChars As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EndTagLeftChars;" />
      <MemberSignature Language="F#" Value="val mutable EndTagLeftChars : string" Usage="System.Web.UI.HtmlTextWriter.EndTagLeftChars" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет открывающую угловую скобку и символ косой черты (&lt;/) для закрывающего тега элемента разметки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поле <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> используется методом <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> для создания закрывающих тегов элемента разметки.  
  
   
  
## Examples  
 В следующем примере кода показано, как визуализировать закрывающий тег элемента разметки `<table>`, используя <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> и поля <xref:System.Web.UI.HtmlTextWriter.TagRightChar> в качестве значений параметров в вызовах метода <xref:System.Web.UI.HtmlTextWriter.Write%2A>.  
  
 Этот пример кода отображает следующую разметку:  
  
 `</table>`  
  
 [!code-csharp[MarkupTextWriter_Constants#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#4)]
 [!code-vb[MarkupTextWriter_Constants#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="EnterStyle">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Записывает открывающий тег элемента разметки, содержащий атрибуты, реализующие форматирование варианта разметки и знака указанного стиля.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnterStyle">
      <MemberSignature Language="C#" Value="public virtual void EnterStyle (System.Web.UI.WebControls.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStyle(class System.Web.UI.WebControls.Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnterStyle(System::Web::UI::WebControls::Style ^ style);" />
      <MemberSignature Language="F#" Value="abstract member EnterStyle : System.Web.UI.WebControls.Style -&gt; unit&#xA;override this.EnterStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="htmlTextWriter.EnterStyle style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="style"><see cref="T:System.Web.UI.WebControls.Style" />, указывающий вариант разметки и форматирование для применения к блоку разметки.</param>
        <summary>Записывает открывающий тег элемента <see langword="&lt;span&gt;" />, содержащего атрибуты, реализующие форматирование варианта разметки и знаков указанного стиля.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> для применения стилей, таких как цвет фона или ширина границы, к блоку разметки.  
  
 Методы <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> и <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> позволяют адаптеру устройства или элементу управления создавать разметку, использующую форматирование символов указанного стиля. Используйте то же значение для `style` в методе <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>, который используется в соответствующем методе <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>.  
  
 Перегрузка <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> метода <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> визуализирует открывающий тег элемента `<span>`. Затем этот метод добавляет необходимые атрибуты и атрибуты стиля в открывающий тег элемента `<span>` для вывода параметров, заданных объектом <xref:System.Web.UI.WebControls.Style>. Если требуется отобразить другой элемент разметки для включения атрибутов и атрибутов стиля, используйте перегрузку <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать пользовательский класс с именем `TextSample`, производный от класса <xref:System.Web.UI.WebControls.WebControl>, который использует метод <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> для применения стиля <xref:System.Web.UI.WebControls.Style.ForeColor%2A> к текстовой строке.  
  
 Метод <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> визуализирует `<span style="color:Navy;">`HTML. Вызов метода <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> закрывает элемент `<span>` после отрисовки текста.  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.ExitStyle" />
      </Docs>
    </Member>
    <Member MemberName="EnterStyle">
      <MemberSignature Language="C#" Value="public virtual void EnterStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStyle(class System.Web.UI.WebControls.Style style, valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnterStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberSignature Language="F#" Value="abstract member EnterStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit&#xA;override this.EnterStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="htmlTextWriter.EnterStyle (style, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="style"><see cref="T:System.Web.UI.WebControls.Style" />, указывающий вариант разметки и форматирование для применения к блоку разметки.</param>
        <param name="tag"><see cref="T:System.Web.UI.HtmlTextWriterTag" />, указывающий открывающий тег элемента разметки, который будет содержать объект стиля, указанный в <paramref name="style" />.</param>
        <summary>Записывает открывающий тег элемента разметки, содержащий атрибуты, реализующие форматирование варианта разметки и знака указанного стиля.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> для применения стилей, таких как цвет фона или ширина границы, к блоку разметки.  
  
 Методы <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> и <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> позволяют адаптеру устройства или элементу управления создавать разметку, использующую форматирование символов указанного стиля. Используйте то же значение для `style` в методе <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>, который используется в соответствующем методе <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>.  
  
 Перегрузка <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> метода <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> визуализирует открывающий тег элемента, указанного параметром `tag`. Затем метод <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> добавляет необходимые атрибуты и атрибуты стиля в открывающий тег элемента для вывода параметров, заданных объектом <xref:System.Web.UI.WebControls.Style>. Используйте перегрузку <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> для отображения открывающего тега элемента `<span>`.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать пользовательский класс с именем `TextSample`, производный от класса <xref:System.Web.UI.WebControls.WebControl>, который использует метод <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> для применения стиля <xref:System.Web.UI.WebControls.Style.ForeColor%2A> к текстовой строке.  
  
 Метод <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> визуализирует`<span style="color:Navy;">`HTML. Вызов метода <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> закрывает элемент `<span>` после отрисовки текста.  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.ExitStyle" />
      </Docs>
    </Member>
    <Member MemberName="EqualsChar">
      <MemberSignature Language="C#" Value="public const char EqualsChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char EqualsChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EqualsChar" />
      <MemberSignature Language="VB.NET" Value="Public Const EqualsChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char EqualsChar;" />
      <MemberSignature Language="F#" Value="val mutable EqualsChar : char" Usage="System.Web.UI.HtmlTextWriter.EqualsChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет знак равенства (<see langword="=" />).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При создании открывающего разделителя значения атрибута может потребоваться использовать <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> поле вместо поля <xref:System.Web.UI.HtmlTextWriter.EqualsChar>.  
  
   
  
## Examples  
 В следующем примере кода показано, как визуализировать атрибут `src` и часть его значения для элемента `<img>`. Код использует поле <xref:System.Web.UI.HtmlTextWriter.EqualsChar> в вызове метода <xref:System.Web.UI.HtmlTextWriter.Write%2A>, чтобы отобразить знак равенства (=) между атрибутом `src` и его значением.  
  
 Этот пример кода отображает следующую разметку:  
  
 `src="/images/`  
  
 [!code-csharp[MarkupTextWriter_Constants#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#10)]
 [!code-vb[MarkupTextWriter_Constants#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      </Docs>
    </Member>
    <Member MemberName="EqualsDoubleQuoteString">
      <MemberSignature Language="C#" Value="public const string EqualsDoubleQuoteString;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EqualsDoubleQuoteString" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      <MemberSignature Language="VB.NET" Value="Public Const EqualsDoubleQuoteString As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EqualsDoubleQuoteString;" />
      <MemberSignature Language="F#" Value="val mutable EqualsDoubleQuoteString : string" Usage="System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет вместе знак равенства (=) и знак двойных кавычек (") в строке (=").</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> поле используется методами <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> и <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> для создания открывающего разделителя значений атрибутов.  
  
   
  
## Examples  
 В следующем примере кода показано, как визуализировать `border` атрибут для элемента `<table>`. Код вызывает метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> для отображения атрибута и его значения и использует метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> для отрисовки полей <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> и <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar>.  
  
 Этот пример кода отображает следующую разметку:  
  
 `border="1"`  
  
 [!code-csharp[MarkupTextWriter_Constants#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#6)]
 [!code-vb[MarkupTextWriter_Constants#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ExitStyle">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Записывает закрывающий тег элемента разметки для завершения форматирования указанного варианта разметки и знаков.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExitStyle">
      <MemberSignature Language="C#" Value="public virtual void ExitStyle (System.Web.UI.WebControls.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStyle(class System.Web.UI.WebControls.Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExitStyle(System::Web::UI::WebControls::Style ^ style);" />
      <MemberSignature Language="F#" Value="abstract member ExitStyle : System.Web.UI.WebControls.Style -&gt; unit&#xA;override this.ExitStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="htmlTextWriter.ExitStyle style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="style"><see cref="T:System.Web.UI.WebControls.Style" />, указывающий вариант разметки и форматирование, которые должны быть закрыты.</param>
        <summary>Записывает закрывающий тег элемента разметки <see langword="&lt;span&gt;" /> для завершения форматирования указанного варианта разметки и знаков.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> перегрузка метода <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29> визуализирует закрывающий тег элемента `<span>` после закрывающего тега элемента управления, закрывая элемент, Открытый соответствующим вызовом <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>.  
  
 Методы <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> и <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> позволяют адаптеру устройства или элементу управления создавать разметку, которая начинается и завершает блок, используя форматирование символов указанного стиля. Используйте то же значение для `style` в методе <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>, который используется в соответствующем методе <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать пользовательский класс с именем `TextSample`, производный от класса <xref:System.Web.UI.WebControls.WebControl>, который использует метод <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> для применения стиля <xref:System.Web.UI.WebControls.Style.ForeColor%2A> к текстовой строке.  
  
 Метод <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> визуализирует `<span style="color:Navy;">`HTML. Вызов метода <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> закрывает элемент `<span>` после отрисовки текста.  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="ExitStyle">
      <MemberSignature Language="C#" Value="public virtual void ExitStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStyle(class System.Web.UI.WebControls.Style style, valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExitStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberSignature Language="F#" Value="abstract member ExitStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit&#xA;override this.ExitStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="htmlTextWriter.ExitStyle (style, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="style">Параметр <see cref="T:System.Web.UI.WebControls.Style" />, указывающий, что этот макет и форматирование больше не применяются к выходному тексту.</param>
        <param name="tag">Параметр <see cref="T:System.Web.UI.HtmlTextWriterTag" />, указывающий закрывающий тег элемента разметки, который содержит атрибуты, отвечающие за применение заданного стиля. Он должен соответствовать ключу, переданному в соответствующий вызов <see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" />.</param>
        <summary>Записывает закрывающий тег указанного элемента разметки, чтобы завершить выбранный макет и форматирование символов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перегрузка <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> метода <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> визуализирует закрывающий тег элемента, указанного в `tag` после закрывающего тега элемента управления, закрывая элемент, Открытый соответствующим вызовом метода <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>.  
  
 Методы <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> и <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> позволяют адаптеру устройства или элементу управления создавать разметку, которая начинается и завершает блок, используя форматирование символов указанного стиля. Используйте то же значение для `style` в методе <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>, который используется в соответствующем методе <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать пользовательский класс с именем `TextSample`, производный от класса <xref:System.Web.UI.WebControls.WebControl>, который использует метод <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> для применения стиля <xref:System.Web.UI.WebControls.Style.ForeColor%2A> к текстовой строке.  
  
 Метод <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> визуализирует `<span style="color:Navy;">`HTML. Вызов метода <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> закрывает элемент `<span>` после отрисовки текста.  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="FilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void FilterAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FilterAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.FilterAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub FilterAttributes ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void FilterAttributes();" />
      <MemberSignature Language="F#" Value="abstract member FilterAttributes : unit -&gt; unit&#xA;override this.FilterAttributes : unit -&gt; unit" Usage="htmlTextWriter.FilterAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет все атрибуты разметки и стиля со всех свойств страницы или элемента управления веб-сервера.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> вызывается перед отрисовкой атрибутов в элементе разметки. В свою очередь, метод <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> вызывает методы <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> и <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> для каждого отображаемого атрибута и стиля.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать пользовательский класс, производный от класса <xref:System.Web.UI.HtmlTextWriter>, который переопределяет метод <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>. При вызове переопределение <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> проверяет, визуализирует ли модуль записи текста какие `<label>` или `<a>` элементы:  
  
-   Если элемент `<label>` готовится к просмотру, метод <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> проверяет, отображается ли атрибут `style` в элементе, и, если нет, создает атрибут `style` и присваивает ему значение `color: blue`.  
  
-   Если выполняется визуализация элемента `<a>`, метод <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> определяет, включен ли атрибут `href` и, если нет, добавляет `href` в URL-адрес http://www.cohowinery.com.  
  
 [!code-cpp[HtmlTextWriter_Methods#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#4)]
 [!code-vb[HtmlTextWriter_Methods#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="htmlTextWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Очищает все буферы для текущего объекта <see cref="T:System.Web.UI.HtmlTextWriter" /> и вызывает запись всех данных буфера в исходящий поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация класса <xref:System.Web.UI.HtmlTextWriter> метода <xref:System.Web.UI.HtmlTextWriter.Flush%2A> просто вызывает метод <xref:System.IO.TextWriter.Flush%2A> Base.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterAttribute GetAttributeKey (string attrName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Web.UI.HtmlTextWriterAttribute GetAttributeKey(string attrName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetAttributeKey (attrName As String) As HtmlTextWriterAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::UI::HtmlTextWriterAttribute GetAttributeKey(System::String ^ attrName);" />
      <MemberSignature Language="F#" Value="member this.GetAttributeKey : string -&gt; System.Web.UI.HtmlTextWriterAttribute" Usage="htmlTextWriter.GetAttributeKey attrName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attrName">Строка, содержащая атрибут, для которого необходимо получить <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />.</param>
        <summary>Получает соответствующее значение перечисления <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> для указанного атрибута.</summary>
        <returns>Значение перечисления <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> для указанного атрибута; в противном случае — неверное значение <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />, если атрибут не является элементом перечисления.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `attrName` является `null` или пустой строкой ("") или не может быть найден в таблице имен атрибутов, возвращается значение-1, введенное в объект <xref:System.Web.UI.HtmlTextWriterAttribute>.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать класс, производный от класса <xref:System.Web.UI.HtmlTextWriter>, который переопределяет метод <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>. Переопределение проверяет, равно ли `tagKey` полю <xref:System.Web.UI.HtmlTextWriterTag.Font>, что означает, что будет визуализирован элемент `<font>` разметки. Если это так, то переопределение вызывает метод <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A>, чтобы определить, содержит ли элемент `<font>` атрибут <xref:System.Web.UI.HtmlTextWriterAttribute.Size>. Если <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> возвращает `false`, то метод <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> вызывает метод <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A>, который определяет <xref:System.Web.UI.HtmlTextWriterAttribute.Size> и присваивает ему значение `30pt`.  
  
 [!code-cpp[HtmlTextWriter_Methods#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#3)]
 [!code-vb[HtmlTextWriter_Methods#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.IsAttributeDefined" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeName">
      <MemberSignature Language="C#" Value="protected string GetAttributeName (System.Web.UI.HtmlTextWriterAttribute attrKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetAttributeName(valuetype System.Web.UI.HtmlTextWriterAttribute attrKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetAttributeName (attrKey As HtmlTextWriterAttribute) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetAttributeName(System::Web::UI::HtmlTextWriterAttribute attrKey);" />
      <MemberSignature Language="F#" Value="member this.GetAttributeName : System.Web.UI.HtmlTextWriterAttribute -&gt; string" Usage="htmlTextWriter.GetAttributeName attrKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrKey" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="attrKey"><see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> для которого требуется получить имя атрибута разметки.</param>
        <summary>Получает имя атрибута разметки, связанного с указанным значением <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />.</summary>
        <returns>Строка, содержащая имя атрибута разметки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> возвращает пустую строку (""), если `attrKey` не является допустимым значением <xref:System.Web.UI.HtmlTextWriterAttribute>.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> для преобразования значения перечисления <xref:System.Web.UI.HtmlTextWriterAttribute.Size> в имя строки.  
  
 [!code-cpp[HtmlTextWriter_Methods3#6](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#6)]
 [!code-csharp[HtmlTextWriter_Methods3#6](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#6)]
 [!code-vb[HtmlTextWriter_Methods3#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetStyleKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterStyle GetStyleKey (string styleName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Web.UI.HtmlTextWriterStyle GetStyleKey(string styleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetStyleKey (styleName As String) As HtmlTextWriterStyle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::UI::HtmlTextWriterStyle GetStyleKey(System::String ^ styleName);" />
      <MemberSignature Language="F#" Value="member this.GetStyleKey : string -&gt; System.Web.UI.HtmlTextWriterStyle" Usage="htmlTextWriter.GetStyleKey styleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="styleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="styleName">Атрибут стиля, для которого необходимо получить <see cref="T:System.Web.UI.HtmlTextWriterStyle" />.</param>
        <summary>Получает значение перечисления <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> для указанного стиля.</summary>
        <returns>Значение перечисления <see cref="T:System.Web.UI.HtmlTextWriterStyle" />, соответствующее <paramref name="styleName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> возвращает значение-1, типизированное как значение <xref:System.Web.UI.HtmlTextWriterStyle>, если `styleName` не соответствует какому-либо значению перечисления <xref:System.Web.UI.HtmlTextWriterStyle>.  
  
   
  
## Examples  
 В следующем примере кода показано, как переопределить метод <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> в классе, производном от класса <xref:System.Web.UI.HtmlTextWriter>. Переопределение <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> определяет, будет ли отображаться разметка `<label>`, и, если это так, проверяет элемент на наличие атрибута <xref:System.Web.UI.HtmlTextWriterStyle.Color>. Если атрибут <xref:System.Web.UI.HtmlTextWriterStyle.Color> не определен, метод <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> используется в качестве первого параметра в вызове метода <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>, чтобы добавить атрибут <xref:System.Web.UI.HtmlTextWriterStyle.Color> в элемент `<label>` разметки и установить для атрибута <xref:System.Web.UI.HtmlTextWriterStyle.Color> значение `red`.  
  
 [!code-cpp[HtmlTextWriter_Methods#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#1)]
 [!code-vb[HtmlTextWriter_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetStyleName">
      <MemberSignature Language="C#" Value="protected string GetStyleName (System.Web.UI.HtmlTextWriterStyle styleKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetStyleName(valuetype System.Web.UI.HtmlTextWriterStyle styleKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetStyleName (styleKey As HtmlTextWriterStyle) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetStyleName(System::Web::UI::HtmlTextWriterStyle styleKey);" />
      <MemberSignature Language="F#" Value="member this.GetStyleName : System.Web.UI.HtmlTextWriterStyle -&gt; string" Usage="htmlTextWriter.GetStyleName styleKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="styleKey" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="styleKey"><see cref="T:System.Web.UI.HtmlTextWriterStyle" /> для которого предназначено получаемое имя атрибута стиля разметки.</param>
        <summary>Получает имя стиля атрибута разметки, связанного с указанным значением перечисления <see cref="T:System.Web.UI.HtmlTextWriterStyle" />.</summary>
        <returns>Имя атрибута стиля, связанное со значением перечисления <see cref="T:System.Web.UI.HtmlTextWriterStyle" />, указанным в <paramref name="styleKey" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `styleKey` не является допустимым <xref:System.Web.UI.HtmlTextWriterStyle> объектом, метод <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> возвращает пустую строку ("").  
  
   
  
## Examples  
 В следующем примере кода показано, как проверить, выполняется ли визуализация элемента `<label>`. Если это так, он проверяет, определен ли для элемента атрибут стиля <xref:System.Web.UI.HtmlTextWriterStyle.Color>. Если атрибут не определен, вызывается метод <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> и метод <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> преобразует член перечисления <xref:System.Web.UI.HtmlTextWriterStyle.Color> в строковое представление для передачи в метод <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>.  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetTagKey">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.HtmlTextWriterTag GetTagKey (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Web.UI.HtmlTextWriterTag GetTagKey(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTagKey (tagName As String) As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::HtmlTextWriterTag GetTagKey(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member GetTagKey : string -&gt; System.Web.UI.HtmlTextWriterTag&#xA;override this.GetTagKey : string -&gt; System.Web.UI.HtmlTextWriterTag" Usage="htmlTextWriter.GetTagKey tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">Элемент разметки, для которого требуется получить <see cref="T:System.Web.UI.HtmlTextWriterTag" />.</param>
        <summary>Получает значение перечисления <see cref="T:System.Web.UI.HtmlTextWriterTag" />, связанное с указанным элементом разметки.</summary>
        <returns>Значение перечисления <see cref="T:System.Web.UI.HtmlTextWriterTag" />; в противном случае, если <paramref name="tagName" /> не связан с конкретным значением <see cref="T:System.Web.UI.HtmlTextWriterTag" />, <see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `tagName` имеет `null`, пустую строку ("") или не удается найти в таблице имен тегов разметки, метод <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> возвращает поле <xref:System.Web.UI.HtmlTextWriterTag.Unknown>.  
  
   
  
## Examples  
 В следующем примере кода показано, как переопределить перегрузку метода <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, который принимает в качестве параметра строку. Строка передается в метод <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A>, который преобразует его в соответствующий член перечисления <xref:System.Web.UI.HtmlTextWriterTag>, а затем передает его в <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>ую перегрузку, которая принимает значение перечисления <xref:System.Web.UI.HtmlTextWriterTag> в качестве параметра.  
  
 [!code-cpp[HtmlTextWriter_Methods3#8](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#8)]
 [!code-csharp[HtmlTextWriter_Methods3#8](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#8)]
 [!code-vb[HtmlTextWriter_Methods3#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="GetTagName">
      <MemberSignature Language="C#" Value="protected virtual string GetTagName (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetTagName(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTagName (tagKey As HtmlTextWriterTag) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetTagName(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="F#" Value="abstract member GetTagName : System.Web.UI.HtmlTextWriterTag -&gt; string&#xA;override this.GetTagName : System.Web.UI.HtmlTextWriterTag -&gt; string" Usage="htmlTextWriter.GetTagName tagKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey"><see cref="T:System.Web.UI.HtmlTextWriterTag" />, который необходимо получить для элемента разметки.</param>
        <summary>Получает элемент разметки, связанный с указанным значением перечисления <see cref="T:System.Web.UI.HtmlTextWriterTag" />.</summary>
        <returns>Строка, представляющая элемент разметки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `tagKey` не является допустимым <xref:System.Web.UI.HtmlTextWriterTag> значением, метод <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> возвращает пустую строку ("").  
  
   
  
## Examples  
 В следующем примере кода показано, как закрыть элемент `<font>` с помощью метода <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>. Метод <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> вызывает метод <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> для преобразования значения <xref:System.Web.UI.HtmlTextWriterTag.Font> в строку.  
  
 [!code-cpp[HtmlTextWriter_Methods3#7](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#7)]
 [!code-csharp[HtmlTextWriter_Methods3#7](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#7)]
 [!code-vb[HtmlTextWriter_Methods3#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public int Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Indent : int with get, set" Usage="System.Web.UI.HtmlTextWriter.Indent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает количество позиций табуляции для задания отступа начала каждой строки разметки.</summary>
        <value>Количество позиций табуляции для отступа каждой строки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Отступ выполняется путем записи строки, заданной параметром `tabString` конструктора <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29>, сколько раз указано в свойстве <xref:System.Web.UI.HtmlTextWriter.Indent%2A>.  
  
 Если для свойства <xref:System.Web.UI.HtmlTextWriter.Indent%2A> задано отрицательное значение, перед сохранением оно изменяется на 0.  
  
   
  
## Examples  
 В следующем примере кода показано, как увеличить значение, присвоенное свойству <xref:System.Web.UI.HtmlTextWriter.Indent%2A>, когда атрибуты были добавлены в открывающий тег элемента `<span>` и был вызван метод <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>. Это увеличивает отступ для любой разметки, отображаемой внутри элемента `<span>`.  
  
 [!code-csharp[MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#2)]
 [!code-vb[MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OutputTabs" />
      </Docs>
    </Member>
    <Member MemberName="InnerWriter">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter InnerWriter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter InnerWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.InnerWriter" />
      <MemberSignature Language="VB.NET" Value="Public Property InnerWriter As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ InnerWriter { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerWriter : System.IO.TextWriter with get, set" Usage="System.Web.UI.HtmlTextWriter.InnerWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает модуль записи текста, записывающий внутреннее содержание элемента разметки.</summary>
        <value><see cref="T:System.IO.TextWriter" />, записывающий внутреннее содержание разметки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Внутреннее содержимое разметки — это текст, найденный между открывающим и закрывающим тегами элемента языка разметки.  
  
 Если для свойства <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> задан объект <xref:System.IO.TextWriter>, являющийся экземпляром класса <xref:System.Web.HttpWriter>, этот факт отмечается и сохраняется отдельная ссылка.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать пользовательский веб-серверный элемент управления, производный от класса <xref:System.Web.UI.WebControls.WebControl>, который переопределяет метод <xref:System.Web.UI.Control.Render%2A>. Для записи элемента `<font>` используется класс <xref:System.Web.UI.HtmlTextWriter>. После записи открывающего тега элемента он использует свойство <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> для записи строки `"<br> The time on the server:"` и объединяет эту строку со значением свойства <xref:System.DateTime.Now%2A?displayProperty=nameWithType>.  
  
 [!code-cpp[HtmlTextWriter_Properties#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CPP/htmltextwriter_properties1.cpp#3)]
 [!code-csharp[HtmlTextWriter_Properties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CS/htmltextwriter_properties1.cs#3)]
 [!code-vb[HtmlTextWriter_Properties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Properties/VB/htmltextwriter_properties1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpWriter" />
        <altmember cref="T:System.Web.UI.WebControls.WebControl" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAttributeDefined">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Определяет, визуализируются ли указанный атрибут разметки и его значение во время следующего вызова метод <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsAttributeDefined(valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsAttributeDefined (key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsAttributeDefined(System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="member this.IsAttributeDefined : System.Web.UI.HtmlTextWriterAttribute -&gt; bool" Usage="htmlTextWriter.IsAttributeDefined key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="key"><see cref="T:System.Web.UI.HtmlTextWriterAttribute" />, связанный с атрибутом разметки.</param>
        <summary>Определяет, визуализируются ли указанный атрибут разметки и его значение во время следующего вызова метод <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</summary>
        <returns><see langword="true" /> если атрибут визуализируется во время следующего вызова метода <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы получить значение, присваиваемое объекту <xref:System.Web.UI.HtmlTextWriterAttribute>, используйте перегрузку <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29>, а не эту.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать переопределение метода <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> в классе, который наследуется от класса <xref:System.Web.UI.HtmlTextWriter>. Переопределение <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> проверяет, будет ли визуализирован элемент разметки `<font>`. Если это так, то переопределение вызывает метод <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A>, чтобы проверить, содержит ли элемент `<font>` атрибут <xref:System.Web.UI.HtmlTextWriterAttribute.Size>. В противном случае метод <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> вызывает метод <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A>, который определяет атрибут <xref:System.Web.UI.HtmlTextWriterAttribute.Size> и задает для него значение `30pt`.  
  
 [!code-cpp[HtmlTextWriter_Methods#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#3)]
 [!code-vb[HtmlTextWriter_Methods#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key, out string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsAttributeDefined(valuetype System.Web.UI.HtmlTextWriterAttribute key, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsAttributeDefined (key As HtmlTextWriterAttribute, ByRef value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsAttributeDefined(System::Web::UI::HtmlTextWriterAttribute key, [Runtime::InteropServices::Out] System::String ^ % value);" />
      <MemberSignature Language="F#" Value="member this.IsAttributeDefined : System.Web.UI.HtmlTextWriterAttribute * string -&gt; bool" Usage="htmlTextWriter.IsAttributeDefined (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><see cref="T:System.Web.UI.HtmlTextWriterAttribute" />, связанный с атрибутом разметки.</param>
        <param name="value">Значение, назначенное атрибуту.</param>
        <summary>Определяет, визуализируются ли указанный атрибут разметки и его значение во время следующего вызова метод <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</summary>
        <returns><see langword="true" /> если атрибут визуализируется во время следующего вызова метода <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если метод <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> возвращает `true`, значение, присваиваемое объекту <xref:System.Web.UI.HtmlTextWriterAttribute>, возвращается в параметре `value`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStyleAttributeDefined">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Определяет, визуализируется ли указанный атрибут стиля разметки во время следующего вызова метода <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStyleAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsStyleAttributeDefined(valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsStyleAttributeDefined (key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsStyleAttributeDefined(System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="member this.IsStyleAttributeDefined : System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="htmlTextWriter.IsStyleAttributeDefined key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="key"><see cref="T:System.Web.UI.HtmlTextWriterStyle" />, связанный с атрибутом.</param>
        <summary>Определяет, визуализируется ли атрибут стиля разметки во время следующего вызова метода <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</summary>
        <returns><see langword="true" /> если атрибут будет визуализируется во время следующего вызова метода <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы получить значение, которое будет отображено с указанным атрибутом Style, используйте перегрузку <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29> метода <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как проверить, выполняется ли визуализация элемента `<label>`. Если это так, то метод <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> проверяет, определен ли для элемента атрибут стиля <xref:System.Web.UI.HtmlTextWriterStyle.Color>. Если атрибут <xref:System.Web.UI.HtmlTextWriterStyle.Color> не определен, метод <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> определяет атрибут <xref:System.Web.UI.HtmlTextWriterStyle.Color> и присваивает ему значение `red`.  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsStyleAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key, out string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsStyleAttributeDefined(valuetype System.Web.UI.HtmlTextWriterStyle key, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsStyleAttributeDefined (key As HtmlTextWriterStyle, ByRef value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsStyleAttributeDefined(System::Web::UI::HtmlTextWriterStyle key, [Runtime::InteropServices::Out] System::String ^ % value);" />
      <MemberSignature Language="F#" Value="member this.IsStyleAttributeDefined : System.Web.UI.HtmlTextWriterStyle * string -&gt; bool" Usage="htmlTextWriter.IsStyleAttributeDefined (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
        <Parameter Name="value" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><see cref="T:System.Web.UI.HtmlTextWriterStyle" />, связанный с атрибутом.</param>
        <param name="value">Значение, назначенное атрибуту стиля.</param>
        <summary>Определяет, визуализируются ли указанный атрибут стиля разметки и его значение во время следующего вызова метода <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</summary>
        <returns><see langword="true" /> если атрибут и его значение будут визуализироваться во время следующего вызова метода <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если метод <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> возвращает `true`, значение, присваиваемое атрибуту <xref:System.Web.UI.HtmlTextWriterStyle>, возвращается в параметре `value`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsValidFormAttribute">
      <MemberSignature Language="C#" Value="public virtual bool IsValidFormAttribute (string attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidFormAttribute(string attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValidFormAttribute (attribute As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValidFormAttribute(System::String ^ attribute);" />
      <MemberSignature Language="F#" Value="abstract member IsValidFormAttribute : string -&gt; bool&#xA;override this.IsValidFormAttribute : string -&gt; bool" Usage="htmlTextWriter.IsValidFormAttribute attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="attribute">Строка, содержащая имя атрибута для проверки.</param>
        <summary>Проверьте атрибут для того, чтобы удостовериться в том, что он может быть отображен в открывающем теге элемента разметки <see langword="&lt;form&gt;" />.</summary>
        <returns>Всегда <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация класса <xref:System.Web.UI.HtmlTextWriter> метода <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> возвращает `true` для всех атрибутов. Переопределите <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A>, чтобы ограничить атрибуты, которые могут быть отображены в открывающем теге элемента `<form>`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Переопределите метод <see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />, чтобы он возвращал <see langword="true" /> только для тех атрибутов, которые можно включать в элемент <see langword="&lt;form&gt;" /> разметки, для которой предназначен класс, производный от класса <see cref="T:System.Web.UI.HtmlTextWriter" />.</para></block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="NewLine">
      <MemberSignature Language="C#" Value="public override string NewLine { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLine" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.NewLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property NewLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NewLine { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewLine : string with get, set" Usage="System.Web.UI.HtmlTextWriter.NewLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или назначает знак завершения строки, используемый объектом <see cref="T:System.Web.UI.HtmlTextWriter" />.</summary>
        <value>Знак завершения строки, используемый текущим <see cref="T:System.Web.UI.HtmlTextWriter" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка признака конца строки по умолчанию — это символ возврата каретки, за которым следует символ перевода строки ("\r\n").  
  
 Строка признака конца строки записывается в выходной поток всякий раз, когда вызывается один из методов <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>. Если свойство <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> имеет значение `null`, используется символ новой строки по умолчанию.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать пользовательский класс, производный от класса <xref:System.Web.UI.HtmlTextWriter>, который переопределяет метод <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>. При вызове переопределение <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> проверяет, визуализирует ли модуль записи текста какие `<label>` или `<a>` элементы. В этом случае метод <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> определяет, определен ли для метки атрибут style. Если стиль не определен, метод <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> устанавливает значение по умолчанию для атрибута `style:color` синим цветом. Затем метод <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> использует свойство <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> для вставки разрыва строки в тег разметки и записывает любые другие определенные атрибуты.  
  
 [!code-cpp[HtmlTextWriter_Methods#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#4)]
 [!code-vb[HtmlTextWriter_Methods#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.IO.TextWriter.NewLine" />
      </Docs>
    </Member>
    <Member MemberName="OnAttributeRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnAttributeRender (name As String, value As String, key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="abstract member OnAttributeRender : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; bool&#xA;override this.OnAttributeRender : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; bool" Usage="htmlTextWriter.OnAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">Строка, содержащая имя атрибута для визуализации.</param>
        <param name="value">Строка, содержащая значение назначенное атрибуту.</param>
        <param name="key"><see cref="T:System.Web.UI.HtmlTextWriterAttribute" />, связанный с атрибутом разметки.</param>
        <summary>Определяет, могут ли быть визуализированы указанные атрибут разметки и его значение текущему элемент разметки.</summary>
        <returns>Всегда <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация класса <xref:System.Web.UI.HtmlTextWriter> метода <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> всегда возвращает `true`. Переопределение <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> может определить, будет ли отображаться на странице атрибут.  
  
   
  
## Examples  
 В следующем примере кода показано, как переопределить метод <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A>. Если <xref:System.Web.UI.HtmlTextWriterAttribute.Size>ный атрибут отображается, но значение <xref:System.Web.UI.HtmlTextWriterAttribute.Size> не `30pt`, то переопределение <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> вызывает метод <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>, чтобы добавить атрибут <xref:System.Web.UI.HtmlTextWriterAttribute.Size> и задать для него значение `30pt`.  
  
 [!code-csharp[MarkupTextWriter_Methods3#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#5)]
 [!code-vb[MarkupTextWriter_Methods3#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Если вы наследуете от класса <see cref="T:System.Web.UI.HtmlTextWriter" />, то можете переопределить метод <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />, чтобы он возвращал <see langword="false" />, чтобы не допустить отрисовку атрибута, визуализации в определенном элементе или подготовки к просмотру для конкретной разметки. Например, если не требуется, чтобы объект, производный от <see cref="T:System.Web.UI.HtmlTextWriter" />, отображал атрибут <see langword="bgcolor" /> для <see langword="&lt;table&gt;" /> элементов, можно переопределить <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> и возвращать <see langword="false" />, когда <paramref name="name" /> передает <see langword="bgcolor" />, а значение свойства <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> — @no__ t_8_ .<see langword="table" /></para></block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleAttributeRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnStyleAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnStyleAttributeRender (name As String, value As String, key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnStyleAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="abstract member OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool&#xA;override this.OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="htmlTextWriter.OnStyleAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">Строка, содержащая имя стиля атрибута для визуализации.</param>
        <param name="value">Строка, содержащая значение назначенное атрибуту стиля.</param>
        <param name="key"><see cref="T:System.Web.UI.HtmlTextWriterStyle" />, связанный со стилем атрибута.</param>
        <summary>Определяет, могут ли быть визуализированы указанные атрибут стиля разметки и его значение текущему элемент разметки.</summary>
        <returns>Всегда <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация класса <xref:System.Web.UI.HtmlTextWriter> метода <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> всегда возвращает `true`. Переопределение <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> может определить, будет ли отображаться на странице атрибут стиля.  
  
   
  
## Examples  
 В следующем примере кода показано, как переопределить метод <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A>. Если атрибут стиля <xref:System.Web.UI.HtmlTextWriterStyle.Color> отрисовывается, но значение <xref:System.Web.UI.HtmlTextWriterStyle.Color> не `purple`, то переопределение <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> использует метод <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>, чтобы установить для <xref:System.Web.UI.HtmlTextWriterStyle.Color> атрибута `purple`.  
  
 [!code-csharp[MarkupTextWriter_Methods3#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#6)]
 [!code-vb[MarkupTextWriter_Methods3#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Если вы наследуете от класса <see cref="T:System.Web.UI.HtmlTextWriter" />, то можете переопределить метод <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />, чтобы он возвращал <see langword="false" />, чтобы атрибут стиля не отображался вообще, подготавливается к просмотру в определенном элементе или визуализирован для конкретного языка разметки. Например, если не требуется, чтобы объект, производный от <see cref="T:System.Web.UI.HtmlTextWriter" />, отображал атрибут <see langword="color" />ного стиля к элементу <see langword="&lt;p&gt;" />, можно переопределить <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> и вернуть <see langword="false" />, когда <paramref name="name" /> проходит <see langword="color" /> и <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> значение свойства — <see langword="p" />.</para></block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="OnTagRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnTagRender (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnTagRender(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnTagRender (name As String, key As HtmlTextWriterTag) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnTagRender(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberSignature Language="F#" Value="abstract member OnTagRender : string * System.Web.UI.HtmlTextWriterTag -&gt; bool&#xA;override this.OnTagRender : string * System.Web.UI.HtmlTextWriterTag -&gt; bool" Usage="htmlTextWriter.OnTagRender (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name">Строка, содержащая имя элемента для визуализации.</param>
        <param name="key"><see cref="T:System.Web.UI.HtmlTextWriterTag" />, связанный с элементом.</param>
        <summary>Определяет будет ли указанный элемент разметки визуализирован запрашиваемой странице.</summary>
        <returns>Всегда <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация класса <xref:System.Web.UI.HtmlTextWriter> метода <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> всегда возвращает `true`. Переопределение <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> может определить, будет ли элемент отображаться на странице.  
  
   
  
## Examples  
 В следующем примере кода показано, как переопределить метод <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A>. Если элемент <xref:System.Web.UI.HtmlTextWriterTag.Font> готовится к просмотру, <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> переопределение использует метод <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A>, чтобы определить, выполняется ли визуализация атрибута <xref:System.Web.UI.HtmlTextWriterAttribute.Size>. В противном случае используется метод <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> для создания <xref:System.Web.UI.HtmlTextWriterAttribute.Size> атрибута и присвоения ему значения `20pt`.  
  
 [!code-csharp[MarkupTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#4)]
 [!code-vb[MarkupTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>При наследовании от класса <see cref="T:System.Web.UI.HtmlTextWriter" /> можно переопределить метод <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />, чтобы он возвращал <see langword="false" />, чтобы предотвратить визуализацию элемента разметки на всех языках или на определенном языке разметки. Например, если не требуется, чтобы объект, производный от <see cref="T:System.Web.UI.HtmlTextWriter" />, отображал элемент <see langword="&lt;font&gt;" />, можно переопределить метод <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />, чтобы возвратить <see langword="false" /> при запросе страницы, содержащей элемент <see langword="&lt;font&gt;" />.</para></block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="OutputTabs">
      <MemberSignature Language="C#" Value="protected virtual void OutputTabs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputTabs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OutputTabs" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputTabs ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputTabs();" />
      <MemberSignature Language="F#" Value="abstract member OutputTabs : unit -&gt; unit&#xA;override this.OutputTabs : unit -&gt; unit" Usage="htmlTextWriter.OutputTabs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Записывает набор строк табуляции, представляющих уровень отступа для строки знаков разметки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> использует свойство <xref:System.Web.UI.HtmlTextWriter.Indent%2A>, чтобы определить количество строк табуляции для записи, чтобы получить нужный отступ.  
  
 Строка табуляции указывается с помощью конструктора <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A>. Если строка табуляции не указана, используется <xref:System.Web.UI.HtmlTextWriter.DefaultTabString>ная константа (`\t`).  
  
   
  
## Examples  
 В следующем примере кода показано, как переопределить метод <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> в классе, производном от класса <xref:System.Web.UI.HtmlTextWriter>. Переопределение <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> всегда использует константу <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> для выполнения отступа.  
  
 [!code-cpp[HtmlTextWriter_Methods#7](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#7)]
 [!code-csharp[HtmlTextWriter_Methods#7](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#7)]
 [!code-vb[HtmlTextWriter_Methods#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.Indent" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </Member>
    <Member MemberName="PopEndTag">
      <MemberSignature Language="C#" Value="protected string PopEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string PopEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.PopEndTag" />
      <MemberSignature Language="VB.NET" Value="Protected Function PopEndTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ PopEndTag();" />
      <MemberSignature Language="F#" Value="member this.PopEndTag : unit -&gt; string" Usage="htmlTextWriter.PopEndTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет недавно сохраненный элемент разметки из списка визуализированных элементов.</summary>
        <returns><see cref="T:System.String" />, содержащий недавно визуализированный элемент разметки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Элементы добавляются в список визуализированных элементов разметки методом <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>. Метод <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> удаляет элементы разметки из списка, вызывая метод <xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Список визуализированных элементов пуст.</exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PushEndTag">
      <MemberSignature Language="C#" Value="protected void PushEndTag (string endTag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PushEndTag(string endTag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PushEndTag (endTag As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PushEndTag(System::String ^ endTag);" />
      <MemberSignature Language="F#" Value="member this.PushEndTag : string -&gt; unit" Usage="htmlTextWriter.PushEndTag endTag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endTag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="endTag">Закрывающий тег элемента разметки.</param>
        <summary>Сохраняет указанный элемент разметки для использования позже при генерации закрывающего тега для элемента разметки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Элементы добавляются в список отображаемых элементов разметки, когда метод <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> вызывает метод <xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A>. Метод <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> удаляет элементы разметки из списка после отрисовки закрывающего тега для элемента.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.PopEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RegisterAttribute">
      <MemberSignature Language="C#" Value="protected static void RegisterAttribute (string name, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterAttribute(string name, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterAttribute (name As String, key As HtmlTextWriterAttribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterAttribute(System::String ^ name, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="static member RegisterAttribute : string * System.Web.UI.HtmlTextWriterAttribute -&gt; unit" Usage="System.Web.UI.HtmlTextWriter.RegisterAttribute (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">Строка, содержащая имя атрибута разметки для регистрации.</param>
        <param name="key"><see cref="T:System.Web.UI.HtmlTextWriterAttribute" />, соответствующий имени атрибута.</param>
        <summary>Регистрирует атрибуты разметки литералы или динамически генерируемые, из исходного файла, чтобы они были правильно визуализированы запрашивающему клиенту.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Предопределенные атрибуты языка разметки HTML регистрируются вызовами метода <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> при создании первого объекта <xref:System.Web.UI.HtmlTextWriter>. Динамические атрибуты могут быть зарегистрированы с помощью метода <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> в другое время.  
  
 Таблица регистрации, используемая методом <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A>, `static`, поэтому регистрация атрибутов применяется ко всем <xref:System.Web.UI.HtmlTextWriter>ым объектам на главном компьютере.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStyle">
      <MemberSignature Language="C#" Value="protected static void RegisterStyle (string name, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterStyle(string name, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterStyle (name As String, key As HtmlTextWriterStyle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterStyle(System::String ^ name, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="static member RegisterStyle : string * System.Web.UI.HtmlTextWriterStyle -&gt; unit" Usage="System.Web.UI.HtmlTextWriter.RegisterStyle (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">Строка, передаваемая из исходного файла, указывающего имя стиля.</param>
        <param name="key"><see cref="T:System.Web.UI.HtmlTextWriterStyle" />, соответствующий указанному стилю.</param>
        <summary>Регистрирует свойства стиля разметки литералы или динамически генерируемые, из исходного файла, чтобы они были правильно визуализированы запрашивающему клиенту.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Предварительно определенные атрибуты каскадной таблицы стилей (CSS) языка разметки HTML регистрируются вызовами метода <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> при создании первого объекта <xref:System.Web.UI.HtmlTextWriter>. Атрибуты динамического стиля могут быть зарегистрированы с помощью метода <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> в другое время.  
  
 Таблица регистрации, используемая методом <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A>, `static`, поэтому регистрация атрибутов применяется ко всем <xref:System.Web.UI.HtmlTextWriter>ым объектам на главном компьютере.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="RegisterTag">
      <MemberSignature Language="C#" Value="protected static void RegisterTag (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterTag(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterTag (name As String, key As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterTag(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberSignature Language="F#" Value="static member RegisterTag : string * System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="System.Web.UI.HtmlTextWriter.RegisterTag (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name">Строка, содержащая HTML тег.</param>
        <param name="key"><see cref="T:System.Web.UI.HtmlTextWriterTag" />, указывающий элемент для визуализации.</param>
        <summary>Регистрирует атрибуты разметки, литералы или динамически генерируемые, из исходного файла, так чтобы они были правильно визуализированы запрашивающему клиенту.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Стандартные теги разметки языка HTML регистрируются вызовами метода <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> при создании первого объекта <xref:System.Web.UI.HtmlTextWriter>. Теги динамической разметки можно зарегистрировать с помощью метода <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> в другое время.  
  
 Таблица регистрации, используемая методом <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A>, `static`, поэтому регистрация тегов применяется ко всем <xref:System.Web.UI.HtmlTextWriter>ым объектам на главном компьютере.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterContent">
      <MemberSignature Language="C#" Value="protected virtual string RenderAfterContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderAfterContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderAfterContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderAfterContent();" />
      <MemberSignature Language="F#" Value="abstract member RenderAfterContent : unit -&gt; string&#xA;override this.RenderAfterContent : unit -&gt; string" Usage="htmlTextWriter.RenderAfterContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Записывает любой текст или пространство после содержимого и перед закрывающим тегом элемента разметки в исходящий поток разметки.</summary>
        <returns>Строка, содержащая пространство или текст для записи после содержимого элемента.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> может быть полезен, если требуется вставить дочерние элементы в текущий элемент разметки.  
  
   
  
## Examples  
 В следующем примере кода показано, как переопределить метод <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> в классе, производном от класса <xref:System.Web.UI.HtmlTextWriter>, чтобы определить, выполняется ли визуализация элемента `<label>`. В этом случае <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> переопределяет вставляет закрывающий тег элемента `<font>` непосредственно перед закрывающим тегом элемента `<label>`. Если выполняется визуализация элемента, отличного от `<label>`, используется базовый метод <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A>.  
  
 [!code-cpp[HtmlTextWriter_Methods1#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#3)]
 [!code-vb[HtmlTextWriter_Methods1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Реализация класса <see cref="T:System.Web.UI.HtmlTextWriter" /> метода <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> возвращает <see langword="null" />. Переопределите <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" />, если нужно записать текст или пространство после содержимого элемента, но перед закрывающим тегом.</para></block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterTag">
      <MemberSignature Language="C#" Value="protected virtual string RenderAfterTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderAfterTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderAfterTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderAfterTag();" />
      <MemberSignature Language="F#" Value="abstract member RenderAfterTag : unit -&gt; string&#xA;override this.RenderAfterTag : unit -&gt; string" Usage="htmlTextWriter.RenderAfterTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Записывает любое пространство или текст после закрывающего тега элемента разметки.</summary>
        <returns>Пространство или текст, предназначенные для записи после закрывающего тега элемента.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> может быть полезен, если требуется отобразить дополнительные закрывающие теги после тега элемента.  
  
   
  
## Examples  
 В следующем примере кода показано, как переопределить метод <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A>, чтобы определить, является ли класс, производный от класса <xref:System.Web.UI.HtmlTextWriter>, отрисовкой элемента `<label>`. В этом случае <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> переопределяет вставляет закрывающий тег элемента `<font>` непосредственно после элемента `<label>`. Если это не элемент `<label>`, используется метод <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> Base.  
  
 [!code-cpp[HtmlTextWriter_Methods4#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#2)]
 [!code-vb[HtmlTextWriter_Methods4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Реализация класса <see cref="T:System.Web.UI.HtmlTextWriter" /> метода <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> возвращает <see langword="null" />. Переопределите <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" />, если нужно записать текст или пространство после закрывающего тега элемента.</para></block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeContent">
      <MemberSignature Language="C#" Value="protected virtual string RenderBeforeContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderBeforeContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderBeforeContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderBeforeContent();" />
      <MemberSignature Language="F#" Value="abstract member RenderBeforeContent : unit -&gt; string&#xA;override this.RenderBeforeContent : unit -&gt; string" Usage="htmlTextWriter.RenderBeforeContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Записывает любой текст или пространство перед содержимым и после открывающего тега элемента разметки.</summary>
        <returns>Пространство или текст, предназначенные для записи перед содержимым элемента. Если не переопределен, <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> возвращает <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> может быть полезен, если необходимо вставить дочерние элементы в текущий элемент разметки перед внутренней разметкой.  
  
   
  
## Examples  
 В следующем примере кода показано, как переопределить метод <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A>, чтобы определить, будет ли класс, производный от класса <xref:System.Web.UI.HtmlTextWriter>, подготовиться к отрисовке элемента `<label>`. Если это так, <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> переопределяет вставляет открывающий тег элемента `<font>` сразу после открывающего тега элемента `<label>`. Если это не элемент `<label>`, используется метод <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> Base.  
  
 [!code-cpp[HtmlTextWriter_Methods1#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#2)]
 [!code-vb[HtmlTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Реализация класса <see cref="T:System.Web.UI.HtmlTextWriter" /> метода <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> возвращает <see langword="null" />. Переопределите <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" />, если нужно записать текст или промежутки после открывающего тега, но перед содержимым элемента.</para></block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeTag">
      <MemberSignature Language="C#" Value="protected virtual string RenderBeforeTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderBeforeTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderBeforeTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderBeforeTag();" />
      <MemberSignature Language="F#" Value="abstract member RenderBeforeTag : unit -&gt; string&#xA;override this.RenderBeforeTag : unit -&gt; string" Usage="htmlTextWriter.RenderBeforeTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Записывает любое пространство или текст перед открывающим тегом элемента разметки.</summary>
        <returns>Текст или пространство, предназначенные для записи перед открывающим тегом элемента разметки. Если не переопределен, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> может быть полезен, если требуется отобразить дополнительные открывающие теги перед открывающим тегом предполагаемого элемента.  
  
   
  
## Examples  
 В следующем примере кода показано, как переопределить метод <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A>, чтобы определить, будет ли класс, производный от класса <xref:System.Web.UI.HtmlTextWriter>, подготовиться к отрисовке элемента `<label>`. Если это так, <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> переопределяет вставляет открывающий тег элемента `<font>` непосредственно перед элементом `<label>`. Если элемент `<label>` не готовится к просмотру, используется базовый метод <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A>.  
  
 [!code-cpp[HtmlTextWriter_Methods4#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#1)]
 [!code-vb[HtmlTextWriter_Methods4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Реализация класса <see cref="T:System.Web.UI.HtmlTextWriter" /> метода <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> возвращает <see langword="null" />. Переопределите <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" />, если нужно записать текст или промежуток перед открывающим тегом элемента.</para></block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderBeginTag">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Записывает открывающий тег элемента разметки в исходящий поток.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginTag : string -&gt; unit&#xA;override this.RenderBeginTag : string -&gt; unit" Usage="htmlTextWriter.RenderBeginTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">Строка, содержащая имя элемента разметки, для которого необходимо выполнить прорисовку открывающего тега.</param>
        <summary>Записывает открывающий тег указанного элемента разметки в выходной поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте переопределение <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> метода <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29>, если элемент разметки не является одним из значений перечисления <xref:System.Web.UI.HtmlTextWriterTag>.  
  
 Чтобы создать элемент разметки с помощью метода <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, сначала нужно вызвать методы <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> и <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>, чтобы указать атрибуты элемента или атрибуты стиля, которые должны отображаться в открывающем теге элемента. После создания внутренней разметки вызовите метод <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>, чтобы создать закрывающий тег.  
  
   
  
## Examples  
 В следующем примере кода показано, как вызвать метод <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> в пользовательском элементе управления, чтобы отобразить открывающий тег нестандартного элемента `MyTag`. Затем в примере кода вызывается метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> для отрисовки внутренней разметки, а затем вызывается метод <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>, чтобы закрыть элемент.  
  
 Этот пример кода создает следующую разметку:  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (tagKey As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginTag : System.Web.UI.HtmlTextWriterTag -&gt; unit&#xA;override this.RenderBeginTag : System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="htmlTextWriter.RenderBeginTag tagKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey">Одно из значений <see cref="T:System.Web.UI.HtmlTextWriterTag" />, определяющих открывающий тег элемента разметки, предназначенного для визуализации.</param>
        <summary>Записывает в исходящий поток открывающий тег элемента разметки, связанного с указанным значением перечисления <see cref="T:System.Web.UI.HtmlTextWriterTag" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте перегрузку <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> метода <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29>, если элемент разметки имеет известный тип, который является одним из значений перечисления <xref:System.Web.UI.HtmlTextWriterTag>.  
  
 Чтобы создать элемент разметки с помощью метода <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, сначала нужно вызвать методы <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> и <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>, чтобы указать атрибуты элемента или атрибуты стиля, которые должны отображаться в открывающем теге элемента. После создания внутренней разметки вызовите метод <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>, чтобы создать закрывающий тег.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> для вывода открывающего тега элемента `<img>`. Атрибуты, которые добавляются в элемент методом <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>, будут находиться в открывающем теге `<img>`. Для создания закрывающего тега используется метод <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>.  
  
 Этот пример кода создает следующую разметку:  
  
 `<img alt="Encoding &quot;Required&quot;" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public virtual void RenderEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndTag ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndTag();" />
      <MemberSignature Language="F#" Value="abstract member RenderEndTag : unit -&gt; unit&#xA;override this.RenderEndTag : unit -&gt; unit" Usage="htmlTextWriter.RenderEndTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Записывает закрывающий тег элемента разметки в исходящий поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите метод <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> после вызова перегрузки <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> и после отрисовки всего содержимого между открывающим и закрывающим тегами (внутренняя разметка) элемента.  
  
   
  
## Examples  
 В следующем примере кода показано, как вызвать метод <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> после метода <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, создающего открывающий тег, и метода <xref:System.Web.UI.HtmlTextWriter.Write%2A>, который визуализирует внутреннюю разметку между открывающим и закрывающим тегами пользовательского элемента `MyTag` был вызван.  
  
 Этот пример кода создает следующую разметку:  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="SelfClosingChars">
      <MemberSignature Language="C#" Value="public const string SelfClosingChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelfClosingChars" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SelfClosingChars" />
      <MemberSignature Language="VB.NET" Value="Public Const SelfClosingChars As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelfClosingChars;" />
      <MemberSignature Language="F#" Value="val mutable SelfClosingChars : string" Usage="System.Web.UI.HtmlTextWriter.SelfClosingChars" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет пробел и самозакрывающийся знак косой черты (/) тега разметки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поле <xref:System.Web.UI.HtmlTextWriter.SelfClosingChars> используется в элементах разметки, которые являются самозакрывающимися. Например:  
  
 `<input type="submit" value="go"  />`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SelfClosingTagEnd">
      <MemberSignature Language="C#" Value="public const string SelfClosingTagEnd;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelfClosingTagEnd" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
      <MemberSignature Language="VB.NET" Value="Public Const SelfClosingTagEnd As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelfClosingTagEnd;" />
      <MemberSignature Language="F#" Value="val mutable SelfClosingTagEnd : string" Usage="System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет закрывающий знак косой черты и закрывающую угловую скобку (/&gt;) самозакрывающегося элемента разметки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поле <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> используется методом <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> при создании самозакрывающихся элементов разметки.  
  
   
  
## Examples  
 В следующем примере кода показано, как визуализировать значение пользовательского `FileName` свойства, за которым следует кавычка и символы, представленные полем <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd>. В примере кода вызывается метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> и передается поле <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> в качестве аргумента параметра для закрытия элемента.  
  
 Этот пример кода визуализирует значение свойства `FileName`, а затем следующую разметку:  
  
 `" />`  
  
 [!code-csharp[MarkupTextWriter_Constants#11](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#11)]
 [!code-vb[MarkupTextWriter_Constants#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="SemicolonChar">
      <MemberSignature Language="C#" Value="public const char SemicolonChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SemicolonChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SemicolonChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SemicolonChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SemicolonChar;" />
      <MemberSignature Language="F#" Value="val mutable SemicolonChar : char" Usage="System.Web.UI.HtmlTextWriter.SemicolonChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет точку с запятой (;).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Передайте поле <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> в качестве аргумента параметра в вызове метода <xref:System.Web.UI.HtmlTextWriter.Write%2A>, если требуется отобразить точку с запятой из пользовательского элемента управления или адаптера.  
  
   
  
## Examples  
 В следующем примере кода показано, как вручную отобразить ряд стилей в элементе разметки. В примере кода используется метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> для отрисовки `font-size` и `border-style` атрибутов стиля. Поле <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> используется в качестве параметра метода <xref:System.Web.UI.HtmlTextWriter.Write%2A> для отделения значения атрибута `font-size` от начала атрибута `border-style`.  
  
 Этот пример кода отображает следующую разметку:  
  
 `style="font-size:12pt;border-style:ridge"`  
  
 [!code-csharp[MarkupTextWriter_Constants#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simplebutton.cs#7)]
 [!code-vb[MarkupTextWriter_Constants#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simplebutton.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.Write(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SingleQuoteChar">
      <MemberSignature Language="C#" Value="public const char SingleQuoteChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SingleQuoteChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SingleQuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SingleQuoteChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SingleQuoteChar;" />
      <MemberSignature Language="F#" Value="val mutable SingleQuoteChar : char" Usage="System.Web.UI.HtmlTextWriter.SingleQuoteChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет апостроф (').</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте поле <xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar>, когда необходимо отобразить апостроф.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SlashChar">
      <MemberSignature Language="C#" Value="public const char SlashChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SlashChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SlashChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SlashChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SlashChar;" />
      <MemberSignature Language="F#" Value="val mutable SlashChar : char" Usage="System.Web.UI.HtmlTextWriter.SlashChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет знак косой черты (/).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте поле <xref:System.Web.UI.HtmlTextWriter.SlashChar> для отображения знаков косой черты при записи URL-адреса. Метод <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> использует поле <xref:System.Web.UI.HtmlTextWriter.SlashChar> при записи закрывающего тега элемента разметки.  
  
   
  
## Examples  
 В следующем примере кода показано, как вручную отобразить атрибут `src` элемента `<img>`. В примере кода используется метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> с полем <xref:System.Web.UI.HtmlTextWriter.SlashChar> в качестве параметра для отображения знаков косой черты в пути, который применяется к атрибуту `src`.  
  
 Этот пример кода отображает следующую разметку:  
  
 `src="/images/`  
  
 [!code-csharp[MarkupTextWriter_Constants#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#10)]
 [!code-vb[MarkupTextWriter_Constants#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SpaceChar">
      <MemberSignature Language="C#" Value="public const char SpaceChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SpaceChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SpaceChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SpaceChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SpaceChar;" />
      <MemberSignature Language="F#" Value="val mutable SpaceChar : char" Usage="System.Web.UI.HtmlTextWriter.SpaceChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет знак ( ) пробела.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.SpaceChar> поле используется методами <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> и <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> при записи разделителей между элементами и атрибутами.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере показано, как создать массив символов. Во втором демонстрируется использование массива.  
  
 В этих примерах кода создается следующая разметка:  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 В следующем примере кода показано, как создать массив <xref:System.Char>, содержащий поле <xref:System.Web.UI.HtmlTextWriter.SpaceChar>.  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 В следующем примере кода показано, как использовать массив, созданный в предыдущем примере кода, в качестве параметра при вызове метода <xref:System.Web.UI.HtmlTextWriter.Write%2A>.  
  
 [!code-csharp[MarkupTextWriter_Methods2#12](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#12)]
 [!code-vb[MarkupTextWriter_Methods2#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="StyleEqualsChar">
      <MemberSignature Language="C#" Value="public const char StyleEqualsChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char StyleEqualsChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar" />
      <MemberSignature Language="VB.NET" Value="Public Const StyleEqualsChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char StyleEqualsChar;" />
      <MemberSignature Language="F#" Value="val mutable StyleEqualsChar : char" Usage="System.Web.UI.HtmlTextWriter.StyleEqualsChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет знак равенства стиля (<see langword=":" />) для задания атрибутам стиля равенства значениям.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поле <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> используется методом <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> для разделения имен и значений стилей.  
  
   
  
## Examples  
 В следующем примере кода показано, как вывести атрибут `FontWeight` и значение `bold` в открывающий тег элемента. В примере кода используется метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> с полем <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> в качестве параметра для отрисовки символа, который задает значение для каждого атрибута стиля.  
  
 Этот пример кода отображает следующую разметку:  
  
 `FontWeight:"bold"`  
  
 [!code-csharp[MarkupTextWriter_Constants#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#5)]
 [!code-vb[MarkupTextWriter_Constants#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterTag TagKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); void set(System::Web::UI::HtmlTextWriterTag value); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag with get, set" Usage="System.Web.UI.HtmlTextWriter.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение <see cref="T:System.Web.UI.HtmlTextWriterTag" /> для указанного элемента разметки.</summary>
        <value>Элемент разметки с визуализированным открывающим тегом.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> используется только для классов, наследующих от класса <xref:System.Web.UI.HtmlTextWriter>. Следует считывать или задавать свойство <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> только в вызове метода <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>; Это единственный момент, когда для него задано последовательное значение.  
  
   
  
## Examples  
 В следующем примере кода показана переопределенная версия метода <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> в классе, производном от класса <xref:System.Web.UI.HtmlTextWriter>. Он использует значение свойства <xref:System.Web.UI.HtmlTextWriter.TagKey%2A>, чтобы определить, будет ли серверный элемент управления, использующий пользовательский объект <xref:System.Web.UI.HtmlTextWriter>, подготовится к просмотру элемента `<label>` разметки. Если это так, то для изменения форматирования текста элемента `<label>` возвращается элемент `<font>` с атрибутом `color`, имеющим значение `red`.  
  
 [!code-cpp[HtmlTextWriter_Methods1#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#2)]
 [!code-vb[HtmlTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Не удается установить значение свойства.</exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.TagName" />
      </Docs>
    </Member>
    <Member MemberName="TagLeftChar">
      <MemberSignature Language="C#" Value="public const char TagLeftChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char TagLeftChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.TagLeftChar" />
      <MemberSignature Language="VB.NET" Value="Public Const TagLeftChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char TagLeftChar;" />
      <MemberSignature Language="F#" Value="val mutable TagLeftChar : char" Usage="System.Web.UI.HtmlTextWriter.TagLeftChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет открывающую угловую скобку (&lt;) тега разметки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> поле используется методами <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>и <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> при написании тегов разметки.  
  
   
  
## Examples  
 В следующем примере кода показано, как отобразить первый символ открывающего тега элемента `<table>` с именем элемента. В примере кода используется метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> с полем <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> в качестве параметра.  
  
 Этот пример кода отображает следующую разметку:  
  
 `<table`  
  
 [!code-csharp[MarkupTextWriter_Constants#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#9)]
 [!code-vb[MarkupTextWriter_Constants#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="protected string TagName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.TagName" />
      <MemberSignature Language="VB.NET" Value="Protected Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ TagName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TagName : string with get, set" Usage="System.Web.UI.HtmlTextWriter.TagName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя тега визуализируемого элемента разметки.</summary>
        <value>Имя тега визуализируемого элемента разметки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Web.UI.HtmlTextWriter.TagName%2A> используется только для классов, наследующих от класса <xref:System.Web.UI.HtmlTextWriter>. Следует считывать или задавать свойство <xref:System.Web.UI.HtmlTextWriter.TagName%2A> только в вызовах метода <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>; Это единственный момент, когда для него задано последовательное значение.  
  
   
  
## Examples  
 В следующем примере кода показана переопределенная версия метода <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> в классе, производном от класса <xref:System.Web.UI.HtmlTextWriter>. В примере кода проверяется, является ли отображаемый элемент `<label>`ным, вызывая метод <xref:System.String.Compare%2A?displayProperty=nameWithType>, а затем передаем значение свойства <xref:System.Web.UI.HtmlTextWriter.TagName%2A> и строку, `"label"`в качестве аргументов параметра. Если элемент `<label>` готовится к просмотру, открывающий тег элемента `<font>` с атрибутом `color`, установленным в `red`, отображается перед открывающим тегом элемента `<label>`. Если отображаемый элемент не является `<label>`ным, вызывается версия метода <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> базового класса.  
  
 [!code-cpp[HtmlTextWriter_Methods4#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#1)]
 [!code-vb[HtmlTextWriter_Methods4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TagRightChar">
      <MemberSignature Language="C#" Value="public const char TagRightChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char TagRightChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.TagRightChar" />
      <MemberSignature Language="VB.NET" Value="Public Const TagRightChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char TagRightChar;" />
      <MemberSignature Language="F#" Value="val mutable TagRightChar : char" Usage="System.Web.UI.HtmlTextWriter.TagRightChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет закрывающую угловую скобку (&gt;) тега разметки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.TagRightChar> поле используется методами <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>и <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> при записи тегов разметки.  
  
   
  
## Examples  
 В следующем примере кода показано, как визуализировать закрывающий тег элемента `<table>`, выполнив вызовы перегрузок метода <xref:System.Web.UI.HtmlTextWriter.Write%2A>. Чтобы отобразить последний символ тега, в примере кода используется метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> с полем <xref:System.Web.UI.HtmlTextWriter.TagRightChar> в качестве параметра.  
  
 Этот пример кода отображает следующую разметку:  
  
 `</table>`  
  
 [!code-csharp[MarkupTextWriter_Constants#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#4)]
 [!code-vb[MarkupTextWriter_Constants#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Записывает указанный тип данных в исходящий поток вместе с любым требующимся пространством вкладки.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(bool value);" />
      <MemberSignature Language="F#" Value="override this.Write : bool -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Boolean" /> для записи в исходящий поток.</param>
        <summary>Записывает текстовое представление логического значения в исходящий поток вместе с любым требуемым пространством табуляции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> создает все ожидающие вкладки, а затем вызывает метод <xref:System.IO.TextWriter.Write%2A> Base.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(char value);" />
      <MemberSignature Language="F#" Value="override this.Write : char -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">Символ в кодировке Юникод для записи в исходящий поток.</param>
        <summary>Записывает текстовое представление символа в кодировке Юникод в исходящий поток вместе с любым требуемым пространством табуляции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> создает все ожидающие вкладки, а затем вызывает метод <xref:System.IO.TextWriter.Write%2A> Base.  
  
   
  
## Examples  
 В следующем примере кода показано использование метода <xref:System.Web.UI.HtmlTextWriter.Write%2A> для завершения открывающего тега элемента `<img>` с помощью <xref:System.Web.UI.HtmlTextWriter.TagRightChar> константы.  
  
 Этот пример кода отображает следующую разметку:  
  
 `<img alt="A custom image">`  
  
 `</img>`  
  
 [!code-csharp[MarkupTextWriter_Samples1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#5)]
 [!code-vb[MarkupTextWriter_Samples1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="override this.Write : char[] -&gt; unit" Usage="htmlTextWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">Массив символов в кодировке Юникод для записи в исходящий поток.</param>
        <summary>Записывает текстовое представление массива символов в кодировке Юникод в исходящий поток вместе с любым требуемым пространством табуляции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> создает все ожидающие вкладки, а затем вызывает метод <xref:System.IO.TextWriter.Write%2A> Base.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере показано, как создать массив символов. Во втором демонстрируется использование массива.  
  
 В этих примерах кода создается следующая разметка:  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 В следующем примере кода показано, как создать массив символов, `hello world`. В массив входит поле <xref:System.Web.UI.HtmlTextWriter.SpaceChar>, которое создает пробел между двумя словами.  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> для визуализации `hello world` массива символов, созданного в предыдущем примере кода, на страницу, когда элемент управления, содержащий этот пример кода, включается в страницу.  
  
 [!code-csharp[MarkupTextWriter_Methods2#12](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#12)]
 [!code-vb[MarkupTextWriter_Methods2#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(double value);" />
      <MemberSignature Language="F#" Value="override this.Write : double -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">Число двойной точности с плавающей запятой, записываемое в исходящий поток.</param>
        <summary>Записывает текстовое представление числа с плавающей запятой в исходящий поток вместе с любым требуемым пространством табуляции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> создает все ожидающие вкладки, а затем вызывает метод <xref:System.IO.TextWriter.Write%2A> Base.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> для визуализации значения поля <xref:System.Double.MaxValue?displayProperty=nameWithType>.  
  
 Этот пример кода создает следующую разметку:  
  
 `<label>`  
  
 `1.79769313486232E+308`  
  
 `</label>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#7)]
 [!code-vb[MarkupTextWriter_Methods1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(int value);" />
      <MemberSignature Language="F#" Value="override this.Write : int -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">32-разрядное целое число со знаком для записи в исходящий поток.</param>
        <summary>Записывает текстовое представление 32-разрядного знакового целого числа в исходящий поток вместе со всеми необходимыми пробелами табуляции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> создает все ожидающие вкладки, а затем вызывает метод <xref:System.IO.TextWriter.Write%2A> Base.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(long value);" />
      <MemberSignature Language="F#" Value="override this.Write : int64 -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">64-разрядное целое число со знаком для записи в исходящий поток.</param>
        <summary>Записывает текстовое представление 64-разрядного целого числа со знаком в исходящий поток вместе со всеми необходимыми пробелами табуляции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> создает все ожидающие вкладки, а затем вызывает метод <xref:System.IO.TextWriter.Write%2A> Base.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Write : obj -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Объект для записи в исходящий поток.</param>
        <summary>Записывает текстовое представление объекта в исходящий поток вместе с любым требуемым пространством табуляции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> создает все ожидающие вкладки, а затем вызывает метод <xref:System.IO.TextWriter.Write%2A> Base.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> для визуализации значения свойства <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.  
  
 Этот пример кода создает следующую разметку:  
  
 `This is a rendered CultureInfo object.`  
  
 `<bold>`  
  
 Значение свойства <xref:System.Globalization.CultureInfo.CurrentCulture%2A>:  
  
 `</bold>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#8)]
 [!code-vb[MarkupTextWriter_Methods1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(float value);" />
      <MemberSignature Language="F#" Value="override this.Write : single -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">Число с плавающей запятой (одинарная точность) для записи в исходящий поток.</param>
        <summary>Записывает текстовое представление числа с плавающей запятой (одинарная точность) в исходящий поток вместе с любым требуемым пространством табуляции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> создает все ожидающие вкладки, а затем вызывает метод <xref:System.IO.TextWriter.Write%2A> Base.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> для визуализации значения поля <xref:System.Single.Epsilon?displayProperty=nameWithType>, которое является наименьшим возможным значением структуры <xref:System.Single>.  
  
 Этот пример кода создает следующую разметку:  
  
 `<b>`  
  
 `1.401298E-45`  
  
 `</b>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#10)]
 [!code-vb[MarkupTextWriter_Methods1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ s);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="htmlTextWriter.Write s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">Строка для записи в исходящий поток.</param>
        <summary>Записывает указанную строку в исходящий поток вместе с любым требующимся пространством вкладки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> создает все ожидающие вкладки, а затем вызывает метод <xref:System.IO.TextWriter.Write%2A> Base.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> для отображения строки между открывающим и закрывающим тегами пользовательского элемента разметки.  
  
 Этот пример кода создает следующую разметку:  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="override this.Write : string * obj -&gt; unit" Usage="htmlTextWriter.Write (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Строка, содержащая ноль или другие элементы формата.</param>
        <param name="arg0">Объект для форматирования.</param>
        <summary>Записывает строку табуляции и форматированную строку в исходящий поток с помощью той же семантики, что и метод <see cref="M:System.String.Format(System.String,System.Object)" /> вместе с любым требующимся пространством табуляции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> создает все ожидающие вкладки, а затем вызывает метод <xref:System.IO.TextWriter.Write%2A> Base.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> для отображения форматированной строки со значением свойства <xref:System.Globalization.CultureInfo.CurrentCulture%2A>.  
  
 [!code-csharp[MarkupTextWriter_Methods1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#5)]
 [!code-vb[MarkupTextWriter_Methods1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="override this.Write : string * obj[] -&gt; unit" Usage="htmlTextWriter.Write (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-1.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">Строка, содержащая ноль или другие элементы формата.</param>
        <param name="arg">Массив объекта для форматирования.</param>
        <summary>Записывает форматированную строку, содержащую текстовое представление двух объектов массива в исходящий поток вместе с любым требуемым пространством табуляции. Этот метод использует ту же семантику, что и метод <see cref="M:System.String.Format(System.String,System.Object[])" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> создает все ожидающие вкладки, а затем вызывает метод <xref:System.IO.TextWriter.Write%2A> Base.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере показано, как визуализировать форматированную строку и содержимое массива. Во втором примере показано, как объявить массив.  
  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> для отображения форматированной строки и содержимого массива объектов с именем `curPriceTime`. Вызов метода визуализирует второй элемент массива перед отрисовкой первого элемента.  
  
 [!code-csharp[MarkupTextWriter_Methods2#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#9)]
 [!code-vb[MarkupTextWriter_Methods2#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#9)]  
  
 В следующем примере кода демонстрируется объявление массива объектов `curPriceTime`.  
  
 [!code-csharp[MarkupTextWriter_Methods2#14](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#14)]
 [!code-vb[MarkupTextWriter_Methods2#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : char[] * int * int -&gt; unit" Usage="htmlTextWriter.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Массив символов для записи текста в исходящий поток.</param>
        <param name="index">Расположение индекса в массиве откуда начинается запись.</param>
        <param name="count">Количество символов для записи в исходящий поток.</param>
        <summary>Записывает текстовое представление подмассива символов в кодировке Юникод в исходящий поток вместе с любым требуемым пространством табуляции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> создает все ожидающие вкладки, а затем вызывает метод <xref:System.IO.TextWriter.Write%2A> Base.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере показано, как создать массив символов. Во втором демонстрируется использование массива.  
  
 В этих примерах кода создается следующая разметка:  
  
 `<label>`  
  
 `hello`  
  
 `</label>`  
  
 В следующем примере кода показано, как создать массив символов, `hello world`. В массив входит поле <xref:System.Web.UI.HtmlTextWriter.SpaceChar>, которое создает пробел между двумя словами.  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 В следующей части примера кода используются параметры `index` и `count` метода <xref:System.Web.UI.HtmlTextWriter.Write%2A> для отрисовки первых пяти символов массива, созданного в предыдущем примере.  
  
 [!code-csharp[MarkupTextWriter_Methods2#11](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#11)]
 [!code-vb[MarkupTextWriter_Methods2#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="override this.Write : string * obj * obj -&gt; unit" Usage="htmlTextWriter.Write (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Строка, содержащая ноль или другие элементы формата.</param>
        <param name="arg0">Объект для форматирования.</param>
        <param name="arg1">Объект для форматирования.</param>
        <summary>Записывает форматированную строку, содержащую текстовое представление двух объектов в исходящий поток вместе с любым требуемым пространством табуляции. Этот метод использует ту же семантику, что и метод <see cref="M:System.String.Format(System.String,System.Object,System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> создает все ожидающие вкладки, а затем вызывает метод <xref:System.IO.TextWriter.Write%2A> Base.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.HtmlTextWriter.Write%2A> для отображения форматированной строки и значений свойств <xref:System.Globalization.CultureInfo.CurrentCulture%2A> и <xref:System.DateTime.Today%2A>.  
  
 [!code-csharp[MarkupTextWriter_Methods1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#6)]
 [!code-vb[MarkupTextWriter_Methods1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object,System.Object)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Записывает атрибут разметки и его значение в исходящий поток.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttribute : string * string -&gt; unit&#xA;override this.WriteAttribute : string * string -&gt; unit" Usage="htmlTextWriter.WriteAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Атрибут, записываемый в исходящий поток.</param>
        <param name="value">Значение, назначенное атрибуту.</param>
        <summary>Записывает указанный атрибут и значение разметки в исходящий поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> для записи атрибутов разметки и их значений без кодирования. Метод <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> записывает значение атрибута, заключенное в двойные кавычки ("). Если `value` `null`, метод <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> записывает только имя атрибута.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется визуализация элемента `<img>`, в котором вызываются обе перегрузки метода <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>. В примере кода используется следующий процесс:  
  
-   Вызывает метод <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>, который отображает открывающие символы элемента.  
  
-   Вызывает перегрузку <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29>, которая записывает атрибут `alt` и его значение в элемент `<img>`.  
  
-   Вызывает перегрузку <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> для отображения настраиваемого атрибута `myattribute` со значением `No "encoding" required`, а затем задает для `fEncode` значение `false`.  
  
-   Закрывает открывающий тег элемента, а затем вызывает метод <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>, чтобы закрыть элемент `<img>`.  
  
 Этот пример кода создает следующую разметку:  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>В производных классах можно переопределить метод <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />, чтобы определить пользовательские правила для записи атрибутов и их значений. Например, можно написать код, который позволял <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> методу записывать атрибут с пустым значением.</para></block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteAttribute (string name, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttribute(string name, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttribute (name As String, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttribute(System::String ^ name, System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttribute : string * string * bool -&gt; unit&#xA;override this.WriteAttribute : string * string * bool -&gt; unit" Usage="htmlTextWriter.WriteAttribute (name, value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">Атрибут разметки для записи в поток вывода.</param>
        <param name="value">Значение, назначенное атрибуту.</param>
        <param name="fEncode">Значение <see langword="true" /> для кодирования атрибута и назначенного значения; в противном случае — значение <see langword="false" />.</param>
        <summary>Записывает указанные атрибут и значение разметки в поток вывода и, если указано, записывает закодированное значение.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> для записи атрибутов разметки и их значений с кодировкой или без нее. Метод <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> использует метод <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> для кодирования.  
  
 Метод <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> записывает значение атрибута, заключенное в двойные кавычки ("). Если `value` `null`, метод <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> записывает только имя атрибута.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется визуализация элемента `<img>`, в котором вызываются обе перегрузки метода <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>. В примере кода используется следующий процесс:  
  
-   Вызывает метод <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>, который отображает открывающие символы элемента.  
  
-   Вызывает перегрузку <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29>, которая записывает атрибут `alt` и его значение в элемент `<img>`.  
  
-   Вызывает перегрузку <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> для отображения настраиваемого атрибута `myattribute` со значением `No "encoding" required`, а затем задает для `fEncode` значение `false`.  
  
-   Закрывает открывающий тег элемента, а затем вызывает метод <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>, чтобы закрыть элемент `<img>`.  
  
 Этот пример кода создает следующую разметку:  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>В производных классах можно переопределить метод <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />, чтобы определить пользовательские правила для записи атрибутов и их значений. Например, можно написать код, который позволял <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> методу записывать атрибут с пустым значением.</para></block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBeginTag">
      <MemberSignature Language="C#" Value="public virtual void WriteBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBeginTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member WriteBeginTag : string -&gt; unit&#xA;override this.WriteBeginTag : string -&gt; unit" Usage="htmlTextWriter.WriteBeginTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">Элемент разметки, открывающий тег которого предназначен для записи.</param>
        <summary>Записывает любой пробел табуляции и открывающий тег указанного элемента разметки в исходящий поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> не записывает закрывающую угловую скобку (>) открывающего тега элемента разметки. Это позволяет записывать атрибуты разметки в открывающий тег элемента. Используйте константу <xref:System.Web.UI.HtmlTextWriter.TagRightChar>, чтобы закрыть открывающий тег при вызове метода <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>. При написании закрывающих элементов разметки используйте метод <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> с константой <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd>.  
  
 Метод <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> используется пользовательскими серверными элементами управления, которые не допускают сопоставление тегов или атрибутов и отображают элементы разметки таким же образом для каждого запроса.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется визуализация элемента `<img>`, в котором вызываются обе перегрузки метода <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>. В примере кода используется следующий процесс:  
  
-   Вызывает метод <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>, который отображает открывающие символы элемента.  
  
-   Вызывает перегрузку <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29>, которая записывает атрибут `alt` и его значение в элемент `<img>`.  
  
-   Вызывает перегрузку <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> для отображения настраиваемого атрибута `myattribute` со значением `No "encoding" required`, а затем задает для `fEncode` значение `false`.  
  
-   Закрывает открывающий тег элемента, а затем вызывает метод <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>, чтобы закрыть элемент `<img>`.  
  
 Этот пример кода создает следующую разметку:  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.TagRightChar" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBreak">
      <MemberSignature Language="C#" Value="public virtual void WriteBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteBreak" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBreak ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBreak();" />
      <MemberSignature Language="F#" Value="abstract member WriteBreak : unit -&gt; unit&#xA;override this.WriteBreak : unit -&gt; unit" Usage="htmlTextWriter.WriteBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Записывает элемент разметки <see langword="&lt;br /&gt;" /> в исходящий поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> для отображения разрывов строк в разметке пользовательского элемента управления или адаптера. Метод <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> записывает пробел между `br` и `/` для улучшения совместимости HTML.  
  
   
  
## Examples  
 В следующем примере кода показано, как вызвать метод <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> для записи `<br />`ного элемента в запрашивающий браузер после того, как метод <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> запишет закодированную `&lt;custID&gt; &amp; &lt;invoice#&gt;` разметку.  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#2)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedText">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteEncodedText : string -&gt; unit&#xA;override this.WriteEncodedText : string -&gt; unit" Usage="htmlTextWriter.WriteEncodedText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">Текстовая строка для кодирования и записи в поток вывода.</param>
        <summary>Кодирует указанный текст для запрашивающего устройства и записывает его в поток вывода.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A>, если строка содержит угловые скобки (\< или >) или амперсанд (&).  
  
 Метод <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> использует метод <xref:System.Web.HttpUtility.HtmlEncode%2A> для выполнения кодирования, а также преобразует символ Юникода `00A0` в `&nbsp;`.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> для записи закодированного `&lt;custID&gt; &amp; &lt;invoice#&gt;` разметки в поток вывода. Метод <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> записывает `<br />`.  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#2)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="text" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBreak" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedUrl">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedUrl (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedUrl(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedUrl (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedUrl(System::String ^ url);" />
      <MemberSignature Language="F#" Value="abstract member WriteEncodedUrl : string -&gt; unit&#xA;override this.WriteEncodedUrl : string -&gt; unit" Usage="htmlTextWriter.WriteEncodedUrl url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="url">Строка URL-адреса для кодирования и записи в поток вывода.</param>
        <summary>Кодирует указанный URL-адрес и затем записывает его в поток вывода. URL-адрес может включать параметры.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> кодирует строку в параметре `url` в соответствии со спецификацией для кодировки URL-адреса. Параметры, следующие за разделителем вопросительного знака (?), не кодируются.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A>, который создает следующие выходные данные:  
  
 `http://localhost/Sample%20Folder/Sample%20%2b%20File.txt`  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#3)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedUrlParameter">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedUrlParameter (string urlText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedUrlParameter(string urlText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedUrlParameter (urlText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedUrlParameter(System::String ^ urlText);" />
      <MemberSignature Language="F#" Value="abstract member WriteEncodedUrlParameter : string -&gt; unit&#xA;override this.WriteEncodedUrlParameter : string -&gt; unit" Usage="htmlTextWriter.WriteEncodedUrlParameter urlText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlText" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="urlText">Строка параметра URL для кодирования и записи в исходящий поток.</param>
        <summary>Кодирует указанный параметр URL для запрашивающего устройства, а затем записывает его в исходящий поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пробелы в части параметра URL-адреса кодируются знаками плюса (+), а знаки равенства (=) кодируются как `%3d`.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A>, который создает следующие выходные данные:  
  
 `ID%3dCity+State`  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#4)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEndTag">
      <MemberSignature Language="C#" Value="public virtual void WriteEndTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEndTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEndTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member WriteEndTag : string -&gt; unit&#xA;override this.WriteEndTag : string -&gt; unit" Usage="htmlTextWriter.WriteEndTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">Элемент, для которого записывается закрывающий тег.</param>
        <summary>Записывает любой пробел табуляции и закрывающий тег указанного элемента разметки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В отличие от метода <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>, метод <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> не имеет логики, чтобы конечный тег элемента соответствовал соответствующему открывающему тегу.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется визуализация элемента `<img>`. В примере кода используется следующий процесс:  
  
-   Вызывает метод <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> для отображения открывающих символов элемента.  
  
-   Вызывает две перегрузки метода <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> для записи атрибутов в элемент `<img>`.  
  
-   Вызывает метод <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>, чтобы закрыть элемент `<img>`.  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteFullBeginTag">
      <MemberSignature Language="C#" Value="public virtual void WriteFullBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteFullBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteFullBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteFullBeginTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member WriteFullBeginTag : string -&gt; unit&#xA;override this.WriteFullBeginTag : string -&gt; unit" Usage="htmlTextWriter.WriteFullBeginTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">Элемент для записи в исходящий поток.</param>
        <summary>Записывает любой пробел табуляции и открывающий тег указанного элемента разметки в исходящий поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> автоматически записывает закрывающую угловую скобку (>) открывающего тега элемента, в отличие от метода <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>, который не записывает закрывающую угловую скобку. Используйте <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> для элементов разметки, которые не имеют атрибутов.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Записывает данные в исходящий поток <see cref="T:System.Web.UI.HtmlTextWriter" />, как указано параметрами перегрузки, следующими за признаком конца строки. Все версии данного метода записывают любой требуемый пробел табуляции в исходящий поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка признака конца строки по умолчанию — это возврат каретки, за которым следует символ перевода строки ("\r\n"). Базовый метод <xref:System.IO.TextWriter.WriteLine%2A> используется для записи параметра `value`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine();" />
      <MemberSignature Language="F#" Value="override this.WriteLine : unit -&gt; unit" Usage="htmlTextWriter.WriteLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Записывает признак конца строки в исходящий поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка признака конца строки по умолчанию — это возврат каретки, за которым следует символ перевода строки ("\r\n"). Для получения дополнительной информации см. <xref:System.IO.TextWriter.WriteLine%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> для вставки строки после отрисовки элемента `<img>`.  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(bool value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : bool -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">Логическое значение для записи в исходящий поток.</param>
        <summary>Записывает в исходящий поток любой требуемый пробел табуляции и текстовое представление логического значения, за которым следует признак конца строки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка признака конца строки по умолчанию — это возврат каретки, за которым следует символ перевода строки ("\r\n"). Базовый метод <xref:System.IO.TextWriter.WriteLine%2A> используется для записи параметра `value`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(char value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : char -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">Символ для записи в исходящий поток.</param>
        <summary>Записывает в исходящий поток любой требуемый пробел табуляции и символ Юникода, за которым следует признак конца строки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка признака конца строки по умолчанию — это возврат каретки, за которым следует символ перевода строки ("\r\n"). Базовый метод <xref:System.IO.TextWriter.WriteLine%2A> используется для записи параметра `value`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : char[] -&gt; unit" Usage="htmlTextWriter.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">Массив символов для записи в исходящий поток.</param>
        <summary>Записывает в исходящий поток любой требуемый пробел табуляции и массив символов Юникода, за которым следует признак конца строки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка признака конца строки по умолчанию — это возврат каретки, за которым следует символ перевода строки ("\r\n"). Базовый метод <xref:System.IO.TextWriter.WriteLine%2A> используется для записи параметра `value`.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере показано, как создать массив. Во втором демонстрируется использование этого массива.  
  
 В этих примерах кода создается следующая разметка:  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 В следующем примере кода показано, как создать массив символов, `hello world`. В массив входит поле <xref:System.Web.UI.HtmlTextWriter.SpaceChar>, которое создает пробел между двумя словами.  
  
 [!code-csharp[MarkupTextWriter_Methods2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#6)]
 [!code-vb[MarkupTextWriter_Methods2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#6)]  
  
 В следующем примере кода выполняется визуализация `hello world` массива символов, созданного в предыдущем примере, с помощью метода <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>.  
  
 [!code-csharp[MarkupTextWriter_Methods2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#5)]
 [!code-vb[MarkupTextWriter_Methods2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(double value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : double -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">Число двойной точности с плавающей запятой, записываемое в исходящий поток.</param>
        <summary>Записывает в исходящий поток любой требуемый пробел табуляции и текстовое представление числа двойной точности с плавающей запятой, за которым следует признак конца строки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка признака конца строки по умолчанию — это возврат каретки, за которым следует символ перевода строки ("\r\n"). Базовый метод <xref:System.IO.TextWriter.WriteLine%2A> используется для записи параметра `value`.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> для визуализации значения поля <xref:System.Double.MaxValue?displayProperty=nameWithType>.  
  
 Этот пример кода создает следующую разметку:  
  
 `<label>`  
  
 `1.79769313486232E+308`  
  
 `</label>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#3)]
 [!code-vb[MarkupTextWriter_Methods1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(int value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : int -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">32-разрядное целое число со знаком для записи в исходящий поток.</param>
        <summary>Записывает в исходящий поток все требуемые пробелы табуляции и текстовое представление 32-разрядного знакового целого числа, за которым следует признак конца строки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка признака конца строки по умолчанию — это возврат каретки, за которым следует символ перевода строки ("\r\n"). Базовый метод <xref:System.IO.TextWriter.WriteLine%2A> используется для записи параметра `value`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(long value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : int64 -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">64-разрядное целое число со знаком для записи в исходящий поток.</param>
        <summary>Записывает в исходящий поток все требуемые пробелы табуляции и текстовое представление 64-разрядного целого числа со знаком, за которым следует признак конца строки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка признака конца строки по умолчанию — это возврат каретки, за которым следует символ перевода строки ("\r\n"). Базовый метод <xref:System.IO.TextWriter.WriteLine%2A> используется для записи параметра `value`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : obj -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Объект для записи в исходящий поток.</param>
        <summary>Записывает в исходящий поток любой требуемый пробел табуляции и текстовое представление объекта, за которым следует признак конца строки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка признака конца строки по умолчанию — это возврат каретки, за которым следует символ перевода строки ("\r\n"). Базовый метод <xref:System.IO.TextWriter.WriteLine%2A> используется для записи параметра `value`.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> для отображения значения свойства <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> в элементе управления.  
  
 [!code-csharp[MarkupTextWriter_Methods1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#4)]
 [!code-vb[MarkupTextWriter_Methods1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(float value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : single -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">Число одинарной точности с плавающей запятой, записываемое в исходящий поток.</param>
        <summary>Записывает в исходящий поток любой требуемый пробел табуляции и текстовое представление числа одинарной точности с плавающей запятой, за которым следует признак конца строки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка признака конца строки по умолчанию — это возврат каретки, за которым следует символ перевода строки ("\r\n"). Базовый метод <xref:System.IO.TextWriter.WriteLine%2A> используется для записи параметра `value`.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> для визуализации значения поля <xref:System.Single.Epsilon?displayProperty=nameWithType>, которое является наименьшим возможным значением структуры <xref:System.Single>.  
  
 Этот пример кода создает следующую разметку:  
  
 `<b>`  
  
 `1.401298E-45`  
  
 `</b>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#9)]
 [!code-vb[MarkupTextWriter_Methods1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ s);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="htmlTextWriter.WriteLine s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">Строка для записи в исходящий поток.</param>
        <summary>Записывает в исходящий поток любой требуемый пробел табуляции и текстовую строку, за которой следует признак конца строки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка признака конца строки по умолчанию — это возврат каретки, за которым следует символ перевода строки ("\r\n"). Базовый метод <xref:System.IO.TextWriter.WriteLine%2A> используется для записи параметра `value`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : uint32 -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">Целое число без знака длиной 4 байта, записываемое в исходящий поток.</param>
        <summary>Записывает в исходящий поток любой требуемый пробел табуляции и текстовое представление 4-разрядного целого числа без знака, за которым следует признак конца строки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка признака конца строки по умолчанию — это возврат каретки, за которым следует символ перевода строки ("\r\n"). Базовый метод <xref:System.IO.TextWriter.WriteLine%2A> используется для записи параметра `value`.  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string * obj -&gt; unit" Usage="htmlTextWriter.WriteLine (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Строка, содержащая ноль или более элементов формата.</param>
        <param name="arg0">Объект для форматирования.</param>
        <summary>Записывает в исходящий поток любой требуемый пробел табуляции и форматированную строку, содержащую текстовое представление объекта, за которым следует признак конца строки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка признака конца строки по умолчанию — это возврат каретки, за которым следует символ перевода строки ("\r\n"). Метод <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> использует ту же семантику, что и метод <xref:System.String.Format%28System.String%2CSystem.Object%29>. Базовый метод <xref:System.IO.TextWriter.WriteLine%2A> используется для записи параметра `value`.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> для отображения форматированной строки со значением свойства <xref:System.Globalization.CultureInfo.CurrentCulture%2A>.  
  
 [!code-csharp[MarkupTextWriter_Methods1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#1)]
 [!code-vb[MarkupTextWriter_Methods1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string * obj[] -&gt; unit" Usage="htmlTextWriter.WriteLine (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-1.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">Строка, содержащая ноль или более элементов формата.</param>
        <param name="arg">Массив объекта для форматирования.</param>
        <summary>Записывает в исходящий поток любой требуемый пробел табуляции и форматированную строку, содержащую текстовое представление массива объекта, за которым следует признак конца строки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка признака конца строки по умолчанию — это возврат каретки, за которым следует символ перевода строки ("\r\n"). Метод <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> использует ту же семантику, что и метод <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29>. Базовый метод <xref:System.IO.TextWriter.WriteLine%2A> используется для записи метода `value`.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере показано, как отобразить строку и массив в поток вывода. Во втором примере показано, как объявить массив.  
  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> для визуализации форматированной строки и содержимого массива объектов в поток вывода.  
  
 [!code-csharp[MarkupTextWriter_Methods2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#2)]
 [!code-vb[MarkupTextWriter_Methods2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#2)]  
  
 В следующем примере кода показано, как объявить массив объектов, который был визуализирован в предыдущем примере кода.  
  
 [!code-csharp[MarkupTextWriter_Methods2#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#7)]
 [!code-vb[MarkupTextWriter_Methods2#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : char[] * int * int -&gt; unit" Usage="htmlTextWriter.WriteLine (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Массив символов для записи текста в исходящий поток.</param>
        <param name="index">Индекс в массиве знаков, с которого начинается запись.</param>
        <param name="count">Количество символов в массиве для записи в исходящий поток.</param>
        <summary>Записывает в исходящий поток любой требуемый пробел табуляции и подмассив символов Юникода, за которым следует признак конца строки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка признака конца строки по умолчанию — это возврат каретки, за которым следует символ перевода строки ("\r\n"). Базовый метод <xref:System.IO.TextWriter.WriteLine%2A> используется для записи параметра `value`.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере показано, как создать массив символов. Во втором демонстрируется использование массива.  
  
 В этих примерах кода создается следующая разметка:  
  
 `<label>`  
  
 `hello`  
  
 `</label>`  
  
 В следующем примере кода показано, как создать массив символов, `hello world`. В массив входит поле <xref:System.Web.UI.HtmlTextWriter.SpaceChar>, которое создает пробел между двумя словами.  
  
 [!code-csharp[MarkupTextWriter_Methods2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#6)]
 [!code-vb[MarkupTextWriter_Methods2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#6)]  
  
 В следующем примере кода используются параметры `index` и `count` метода <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> для отрисовки первых пяти символов массива, созданного в предыдущем примере кода.  
  
 [!code-csharp[MarkupTextWriter_Methods2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#4)]
 [!code-vb[MarkupTextWriter_Methods2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string * obj * obj -&gt; unit" Usage="htmlTextWriter.WriteLine (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Строка, содержащая ноль или более элементов формата.</param>
        <param name="arg0">Объект для форматирования.</param>
        <param name="arg1">Объект для форматирования.</param>
        <summary>Записывает в исходящий поток любой требуемый пробел табуляции и форматированную строку, содержащую текстовое представление двух объектов, за которым следует признак конца строки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка признака конца строки по умолчанию — это возврат каретки, за которым следует символ перевода строки ("\r\n"). Метод <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> использует ту же семантику, что и метод <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29>. Базовый метод <xref:System.IO.TextWriter.WriteLine%2A> используется для записи параметра `value`.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> для отображения форматированной строки и значений свойства <xref:System.Globalization.CultureInfo.CurrentCulture%2A> и свойства <xref:System.DateTime.Today%2A>.  
  
 [!code-csharp[MarkupTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#2)]
 [!code-vb[MarkupTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineNoTabs">
      <MemberSignature Language="C#" Value="public void WriteLineNoTabs (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteLineNoTabs(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLineNoTabs (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteLineNoTabs(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.WriteLineNoTabs : string -&gt; unit" Usage="htmlTextWriter.WriteLineNoTabs s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">Строка для записи в исходящий поток.</param>
        <summary>Записывает в исходящий поток строку, за которой следует признак конца строки. Этот метод игнорирует любой указанный пробел табуляции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A> метод, а не метод <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>, если не нужно выполнять горизонтальное отображение строк табуляции `s`.  
  
 Строка признака конца строки по умолчанию — это возврат каретки, за которым следует символ перевода строки ("\r\n"). Базовый метод <xref:System.IO.TextWriter.WriteLine%2A> используется для записи параметра `value`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStyleAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Записывает атрибут стиля и его значение в исходящий поток.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteStyleAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStyleAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteStyleAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteStyleAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteStyleAttribute : string * string -&gt; unit&#xA;override this.WriteStyleAttribute : string * string -&gt; unit" Usage="htmlTextWriter.WriteStyleAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Атрибут стиля, записываемый в исходящий поток.</param>
        <param name="value">Значение, назначенное атрибуту стиля.</param>
        <summary>Записывает указанный атрибут стиля в исходящий поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> записывает атрибут style в следующем виде:  
  
 `name` `=` `value` `;`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.Write" />
      </Docs>
    </Member>
    <Member MemberName="WriteStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteStyleAttribute (string name, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStyleAttribute(string name, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteStyleAttribute (name As String, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteStyleAttribute(System::String ^ name, System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="abstract member WriteStyleAttribute : string * string * bool -&gt; unit&#xA;override this.WriteStyleAttribute : string * string * bool -&gt; unit" Usage="htmlTextWriter.WriteStyleAttribute (name, value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">Атрибут стиля, записываемый в исходящий поток.</param>
        <param name="value">Значение, назначенное атрибуту стиля.</param>
        <param name="fEncode"><see langword="true" /> для кодирования атрибута стиля и назначенного ему значения; в противном случае — значение <see langword="false" />.</param>
        <summary>Записывает указанный атрибут стиля и значение в исходящий поток и, если указано, кодирует значение.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> записывает атрибут style в следующем виде:  
  
 `name` `=` `value` `;`  
  
 Для кодирования параметра `value` используется метод <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.Write" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteUrlEncodedString">
      <MemberSignature Language="C#" Value="protected void WriteUrlEncodedString (string text, bool argument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteUrlEncodedString(string text, bool argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteUrlEncodedString (text As String, argument As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteUrlEncodedString(System::String ^ text, bool argument);" />
      <MemberSignature Language="F#" Value="member this.WriteUrlEncodedString : string * bool -&gt; unit" Usage="htmlTextWriter.WriteUrlEncodedString (text, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="argument" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">Строка для кодирования и записи в исходящий поток.</param>
        <param name="argument"><see langword="true" /> для кодирования строки в качестве части раздела параметра URL; <see langword="false" /> для кодирования строки в качестве части раздела пути URL.</param>
        <summary>Записывает указанную строку, кодируя ее по требованиям URL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> кодирует символы, которые могут считаться разделителями URL-адресов (в зависимости от значения параметра `argument`), в строки формы `%xx`, если код ASCII меньше 128; в противном случае `%uxxxx`, где `x` является шестнадцатеричной цифрой.  
  
 Методы <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> и <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> используют метод <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> в качестве служебного метода.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
