<Type Name="IHierarchyData" FullName="System.Web.UI.IHierarchyData">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c25eae624341b1a216e0d0bcb63719a92df0df86" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70566895" /></Metadata><TypeSignature Language="C#" Value="public interface IHierarchyData" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IHierarchyData" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IHierarchyData" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHierarchyData" />
  <TypeSignature Language="C++ CLI" Value="public interface class IHierarchyData" />
  <TypeSignature Language="F#" Value="type IHierarchyData = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Показывает узел иерархической структуры данных, включая объект узла и некоторые свойства, описывающие характеристики узла. Объект, реализующий интерфейс <see cref="T:System.Web.UI.IHierarchyData" />, может содержаться в коллекции <see cref="T:System.Web.UI.IHierarchicalEnumerable" />, и используется элементами управления навигации узла ASP.NET и источника данных.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IHierarchyData> Интерфейс реализуется классами, представляющими узлы иерархической структуры, и следит за иерархическими связями с их родительскими и дочерними узлами. Классы, реализующие <xref:System.Web.UI.IHierarchyData> интерфейс, могут содержаться в коллекциях <xref:System.Web.UI.IHierarchicalEnumerable> , реализующих интерфейс.  
  
   
  
## Examples  
 В следующем примере кода показано, как реализовать <xref:System.Web.UI.IHierarchyData> интерфейс с классом, который заключает объект в <xref:System.IO.FileSystemInfo> оболочку. Класс является хорошим примером иерархического узла данных, <xref:System.Web.UI.IHierarchyData> который представляет интерфейс для элементов управления ASP.NET иерархическими источниками данных. <xref:System.IO.FileSystemInfo> Этот пример кода является частью большого примера, <xref:System.Web.UI.HierarchicalDataSourceControl> приведенного для класса.  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#5)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#5)]  
  
 В следующем примере кода демонстрируется рекурсивный перебор <xref:System.Web.UI.IHierarchicalEnumerable> коллекции, <xref:System.Web.UI.IHierarchyData> извлечение элемента <xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A> из перечислителя с помощью метода и выполнение базовой работы с элементом данных.  
  
 [!code-aspx-csharp[System.Web.UI.IHierarchyData_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/CS/ihd_1.aspx#1)]
 [!code-aspx-vb[System.Web.UI.IHierarchyData_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/VB/ihd_1.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IHierarchicalEnumerable" />
    <altmember cref="T:System.Web.SiteMapNode" />
  </Docs>
  <Members>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public System.Web.UI.IHierarchicalEnumerable GetChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.IHierarchicalEnumerable GetChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IHierarchyData.GetChildren" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildren () As IHierarchicalEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::IHierarchicalEnumerable ^ GetChildren();" />
      <MemberSignature Language="F#" Value="abstract member GetChildren : unit -&gt; System.Web.UI.IHierarchicalEnumerable" Usage="iHierarchyData.GetChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IHierarchicalEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает объект перечисления, представляющий все дочерние узлы текущего иерархического узла.</summary>
        <returns>Коллекция <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> дочерних узелов текущего иерархического узла.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать <xref:System.Web.UI.IHierarchyData.HasChildren%2A> свойство, чтобы определить, <xref:System.Web.UI.IHierarchyData> имеет ли узел дочерние узлы.  
  
   
  
## Examples  
 В следующем примере кода показано, как проверить <xref:System.Web.UI.IHierarchyData.HasChildren%2A> свойство, чтобы определить, имеет ли текущий узел иерархических данных дочерние узлы, и получить их <xref:System.Web.UI.IHierarchyData.GetChildren%2A> с помощью метода. Этот пример кода является частью большого примера, <xref:System.Web.UI.IHierarchyData> предоставляемого для интерфейса.  
  
 [!code-csharp[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/CS/ihd_1.aspx.cs#2)]
 [!code-vb[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/VB/ihd_1.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IHierarchyData.HasChildren" />
      </Docs>
    </Member>
    <Member MemberName="GetParent">
      <MemberSignature Language="C#" Value="public System.Web.UI.IHierarchyData GetParent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.IHierarchyData GetParent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IHierarchyData.GetParent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParent () As IHierarchyData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::IHierarchyData ^ GetParent();" />
      <MemberSignature Language="F#" Value="abstract member GetParent : unit -&gt; System.Web.UI.IHierarchyData" Usage="iHierarchyData.GetParent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IHierarchyData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Web.UI.IHierarchyData" />, представляющий родительский узел текущего иерархического узла.</summary>
        <returns>Объект <see cref="T:System.Web.UI.IHierarchyData" />, представляющий родительский узел текущего иерархического узла.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Интерфейс не определяет удобное свойство хаспарент, поэтому вызывающие объекты должны проверить возвращаемое значение <xref:System.Web.UI.IHierarchyData.GetParent%2A> метода `null` , чтобы определить, является ли текущий <xref:System.Web.UI.IHierarchyData> узел корневым узлом иерархических данных. <xref:System.Web.UI.IHierarchyData> структура, к которой принадлежит узел.  
  
   
  
## Examples  
 В следующем примере кода показано, как реализовать <xref:System.Web.UI.IHierarchyData.GetParent%2A> метод в классе, который <xref:System.Web.UI.IHierarchyData> реализует интерфейс. Класс создает оболочку для <xref:System.IO.FileSystemInfo> объекта, и <xref:System.Web.UI.IHierarchyData.GetParent%2A> реализация метода проверяет тип <xref:System.IO.FileSystemInfo> объекта и возвращает соответствующий родительский объект на основе типа. `FileSystemHierarchyData` Этот пример кода является частью большого примера, предоставляемого для <xref:System.Web.UI.IHierarchyData> интерфейса <xref:System.Web.UI.HierarchicalDataSourceControl> и класса.  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#10)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IHierarchyData.GetChildren" />
        <altmember cref="P:System.Web.UI.IHierarchyData.HasChildren" />
      </Docs>
    </Member>
    <Member MemberName="HasChildren">
      <MemberSignature Language="C#" Value="public bool HasChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildren" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.IHierarchyData.HasChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChildren As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChildren { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChildren : bool" Usage="System.Web.UI.IHierarchyData.HasChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Показывает, имеет ли иерархический узел данных, представляемый объектом <see cref="T:System.Web.UI.IHierarchyData" />, какие либо дочерние узлы.</summary>
        <value><see langword="true" />, если текущий узел имеет дочерние узлы; в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство является удобным свойством, которое позволяет вызывающим объектам избегать проверки возвращаемого значения <xref:System.Web.UI.IHierarchyData.GetChildren%2A> метода для  `null` .  <xref:System.Web.UI.IHierarchyData.HasChildren%2A> Если свойство возвращает `true`, вызовите <xref:System.Web.UI.IHierarchyData.GetChildren%2A> метод, чтобы получить <xref:System.Web.UI.IHierarchicalEnumerable> коллекцию дочерних узлов. <xref:System.Web.UI.IHierarchyData.HasChildren%2A>  
  
   
  
## Examples  
 В следующем примере кода показано, как иерархический элемент управления с привязкой данных <xref:System.Web.UI.IHierarchyData> ASP.NET использует объект в рекурсивном методе привязки данных. Элементы в <xref:System.Web.UI.IHierarchicalEnumerable> коллекции перечисляются, а для <xref:System.Web.UI.IHierarchyData> каждого <xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A> объекта извлекается с помощью метода. Наконец, <xref:System.Web.UI.IHierarchyData.HasChildren%2A> свойство проверяется, чтобы определить, следует ли выполнять рекурсию. Этот пример кода является частью большого примера, <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> приведенного для класса.  
  
 [!code-csharp[Samples.AspNet.GeneologyTree#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/CS/geneologytree.cs#5)]
 [!code-vb[Samples.AspNet.GeneologyTree#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/VB/geneologytree.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IHierarchyData.GetChildren" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.IHierarchyData.Item" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Item : obj" Usage="System.Web.UI.IHierarchyData.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает иерархический узел данных, представляемый объектом <see cref="T:System.Web.UI.IHierarchyData" />.</summary>
        <value>Объект <see cref="T:System.Object" /> иерархического узла данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Хотя многие классы, представляющие иерархические узлы данных, такие <xref:System.Web.SiteMapNode> как класс, <xref:System.Web.UI.IHierarchyData> реализуют интерфейс напрямую, другие классы действуют только как оболочка для класса, который не реализует интерфейс. Свойство предоставляется для таких ситуаций проектирования, когда бизнес-объекты функционально эквивалентны <xref:System.Web.UI.IHierarchyData> объекту, но не могут быть легко переработаны. <xref:System.Web.UI.IHierarchyData.Item%2A>  
  
   
  
## Examples  
 В следующем примере кода показано, как получить <xref:System.Web.UI.IHierarchyData> доступ к свойствам, проверить тип <xref:System.Web.UI.IHierarchyData> объекта с помощью <xref:System.Web.UI.IHierarchyData.Type%2A> свойства и привести объект для выполнения дополнительных операций, характерных для конкретного типа. Этот пример кода является частью большого примера, <xref:System.Web.UI.IHierarchyData> предоставляемого для интерфейса.  
  
 [!code-csharp[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/CS/ihd_1.aspx.cs#2)]
 [!code-vb[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/VB/ihd_1.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IHierarchyData.Type" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.IHierarchyData.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.Web.UI.IHierarchyData.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает иерархический путь к узлу.</summary>
        <value>Объект <see cref="T:System.String" />, определяющий относительный иерархический путь к текущему узлу.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство может быть передано <xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A> методу для получения <xref:System.Web.UI.HierarchicalDataSourceView> объекта, соответствующего узлу, указанному параметром  <xref:System.Web.UI.IHierarchyData.Path%2A> .  <xref:System.Web.UI.IHierarchyData.Path%2A>  
  
> [!CAUTION]
>  <xref:System.Web.UI.IHierarchyData.Path%2A> Свойство не должно содержать конфиденциальные сведения о среде размещения, так как оно может быть визуализировано клиенту в элементе управления с привязкой к данным.  
  
   
  
## Examples  
 В следующем примере кода показано, как реализовать <xref:System.Web.UI.IHierarchyData.Path%2A> свойство в классе, который <xref:System.Web.UI.IHierarchyData> реализует интерфейс. Класс создает оболочку для <xref:System.IO.FileSystemInfo> объекта, а <xref:System.Web.UI.IHierarchyData.Path%2A> реализация свойства возвращает путь файловой системы. `FileSystemHierarchyData` Этот пример кода является частью большого примера, предоставляемого для <xref:System.Web.UI.IHierarchyData> интерфейса <xref:System.Web.UI.HierarchicalDataSourceControl> и класса.  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#7)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.SiteMapNode.Url" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.IHierarchyData.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : string" Usage="System.Web.UI.IHierarchyData.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает имя типа объекта <see cref="T:System.Object" />, содержащегося в свойстве <see cref="P:System.Web.UI.IHierarchyData.Item" />.</summary>
        <value>Имя типа объекта, представляемого объектом <see cref="T:System.Web.UI.IHierarchyData" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство не возвращает объект, <xref:System.Type?displayProperty=nameWithType> представленный в <xref:System.Web.UI.IHierarchyData> объекте. <xref:System.Web.UI.IHierarchyData.Type%2A> Он возвращает имя, используемое элементами управления с привязкой к данным для различения элементов в иерархии, имеющих различные привязываемые свойства.  
  
   
  
## Examples  
 В следующем примере кода показано, как записать <xref:System.Web.UI.IHierarchyData> базовые свойства <xref:System.Web.HttpResponse> в поток, а затем <xref:System.Web.UI.IHierarchyData> проверить тип объекта с помощью <xref:System.Web.UI.IHierarchyData.Type%2A> свойства и привести объект для выполнения дополнительных операций, характерных для конкретного типа. Этот пример кода является частью большого примера, <xref:System.Web.UI.IHierarchyData> предоставляемого для интерфейса.  
  
 [!code-csharp[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/CS/ihd_1.aspx.cs#2)]
 [!code-vb[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/VB/ihd_1.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IHierarchyData.Item" />
      </Docs>
    </Member>
  </Members>
</Type>
