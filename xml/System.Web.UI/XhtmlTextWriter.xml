<Type Name="XhtmlTextWriter" FullName="System.Web.UI.XhtmlTextWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4ed5666c41e14a8c09a19fb6d3a1f051af6117c5" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69386406" /></Metadata><TypeSignature Language="C#" Value="public class XhtmlTextWriter : System.Web.UI.HtmlTextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XhtmlTextWriter extends System.Web.UI.HtmlTextWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.XhtmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XhtmlTextWriter&#xA;Inherits HtmlTextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XhtmlTextWriter : System::Web::UI::HtmlTextWriter" />
  <TypeSignature Language="F#" Value="type XhtmlTextWriter = class&#xA;    inherit HtmlTextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlTextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Записывает специфические XHTML-знаки, включая все модификации модулей XHTML, являющихся производными от XHTML, в поток вывода для ASP.NET серверного элемента управления для мобильных устройств. Для обеспечения пользовательской отрисовки XHTML для страниц ASP.NET и серверных элементов управления, следует переопределить класс <see cref="T:System.Web.UI.XhtmlTextWriter" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XHTML — это язык разметки, совместимый с XML, основанный на HTML 4,1, который позволяет создавать веб-сайты, подходящие для нескольких типов устройств. Она объединяет простоту использования, предоставляемую HTML, с рекомендациями по строгим элементам, предоставляемыми XML, для создания языка разметки с широким диапазоном параметров формата и стиля, а также с ограниченной неоднозначностью тегов разметки. <xref:System.Web.UI.XhtmlTextWriter> Класс предоставляет возможности форматирования, которые ASP.NET серверные элементы управления при подготовке к просмотру содержимого XHTML клиентам. Можно использовать <xref:System.Web.UI.XhtmlTextWriter.SetDocType%2A> метод, чтобы указать тип XHTML, отображаемый модулем записи текста. Поддерживаемые типы документов определяются в <xref:System.Web.UI.XhtmlMobileDocType> перечислении.  
  
 <xref:System.Web.UI.XhtmlTextWriter> Класс подготавливает к просмотру два набора атрибутов для элементов. Один набор — это набор общих атрибутов, которые указываются в <xref:System.Web.UI.XhtmlTextWriter.CommonAttributes%2A> свойстве. Второй набор — это коллекция атрибутов, зависящих от элемента, в соответствии со <xref:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes%2A> ссылкой в свойстве. Дополнительные сведения об отображаемых элементах и стилях см. в статье спецификация модульного XHTML на [веб-сайте консорциум W3C (W3C)](https://go.microsoft.com/fwlink/?linkid=37125).  
  
 Члены <xref:System.Web.UI.XhtmlTextWriter> класса и все производные классы можно использовать для создания пользовательских модулей записи текста для использования в пользовательских адаптерах страниц XHTML или адаптеров классов. Можно также создавать производные классы, которые переопределяют стандартное поведение <xref:System.Web.UI.XhtmlTextWriter> класса.  
  
 По умолчанию при работе с браузерами, поддерживающими HTML 4,0, страницы и элементы управления ASP.NET отображают разметку, совместимую со стандартом XHTML 1,1. Дополнительные сведения см. [в статье стандарты XHTML в Visual Studio и ASP.NET](https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97).  
  
 Выводятся данные XHTML, <xref:System.Web.UI.HtmlTextWriter> если не настроена ASP.NET специально для отображения разметки XHTML. Дополнительные сведения см. в [разделе NIB: Практическое руководство. Настройка отрисовки XHTML на веб-](https://msdn.microsoft.com/library/42483a54-f1ae-44e1-88e6-4370f8690149)сайтах ASP.NET.  
  
   
  
## Examples  
 Пример кода в этом разделе содержит четыре части. В первом примере показано, как создать производный класс. Во втором примере кода показано, как создать пользовательский элемент управления. В третьем примере кода показано, как использовать пользовательский элемент управления. Четвертый пример кода содержит код, необходимый для запуска пользовательского элемента управления.  
  
 В следующем примере кода показано, как создать пользовательский класс, производный от <xref:System.Web.UI.XhtmlTextWriter> класса. Он имеет два конструктора, которые являются стандартными для всех классов, напрямую или косвенно наследуемых от <xref:System.Web.UI.HtmlTextWriter> класса. Первый конструктор принимает <xref:System.IO.TextWriter> объект в качестве параметра и вызывает второй конструктор, передавая следующие два значения параметров:  
  
-   Экземпляр класса <xref:System.IO.TextWriter>.  
  
-   Значение <xref:System.Web.UI.HtmlTextWriter.DefaultTabString?displayProperty=nameWithType> свойства, определяющее отступ строки по умолчанию, используемый модулем записи текста XHTML.  
  
 В этом примере кода также показано, как переопределить <xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A> методы <xref:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender%2A> и для фильтрации размера текста и стиля цвета соответственно. Кроме того, он <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> переопределяет <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> методы и для записи текстовой строки до и после отрисовки элемента управления.  
  
 [!code-csharp[System.Web.UI.XhtmlTextWriter_Sample2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/CS/customxhtmltextwriter.cs#1)]
 [!code-vb[System.Web.UI.XhtmlTextWriter_Sample2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/VB/customxhtmltextwriter.vb#1)]  
  
 В следующем примере кода показано, как создать пользовательский <xref:System.Web.UI.WebControls.Label> элемент управления с именем `TestLabel` и настраиваемый адаптер `XhtmlTestLabelAdapter` с именем, который визуализирует содержимое элемента управления как XHTML.  
  
 [!code-csharp[System.Web.UI.XhtmlTextWriter_Sample1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.XhtmlTextWriter_Sample1/cs/xhtmltextlabel.cs#1)]
 [!code-vb[System.Web.UI.XhtmlTextWriter_Sample1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.XhtmlTextWriter_Sample1/VB/xhtmltestlabel.vb#1)]  
  
 В следующем примере кода показано, как использовать пользовательский элемент управления `TestLabel` на веб-странице ASP.NET.  
  
 [!code-aspx-csharp[System.Web.UI.XhtmlTextWriter_Sample1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.XhtmlTextWriter_Sample1/cs/xhtmltextlabel.aspx#4)]
 [!code-aspx-vb[System.Web.UI.XhtmlTextWriter_Sample1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.XhtmlTextWriter_Sample1/VB/xhtmltestlabel.aspx#4)]  
  
 Чтобы использовать пользовательский элемент управления в предыдущем примере кода, добавьте следующий `<controlAdapters>` элемент в один из двух файлов. Его можно добавить в соответствующий файл на уровне компьютера в подкаталоге для конкретного браузера в качестве вложенной папки каталога конфигурации .NET Framework. Кроме того, его можно добавить в пользовательский файл браузера в каталоге App_Browsers в корневом каталоге веб-приложения.  
  
```  
<controlAdapters>  
   <adapter controlType="AspNet.Samples.TestLabel"  
   adapterType="AspNet.Samples.XhtmlTestLabelAdapter" />  
</controlAdapters>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ChtmlTextWriter" />
    <related type="Article" href="https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97">Соответствие ASP.NET и XHTML</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.XhtmlTextWriter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XhtmlTextWriter (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XhtmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XhtmlTextWriter(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.XhtmlTextWriter : System.IO.TextWriter -&gt; System.Web.UI.XhtmlTextWriter" Usage="new System.Web.UI.XhtmlTextWriter writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Экземпляр <see cref="T:System.IO.TextWriter" /> отображает содержимое XHTML.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.XhtmlTextWriter" />, использующий линейный отступ, определенный в поле <see cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />. Чтобы не изменять установленный по умолчанию линейный отступ, необходимо использовать конструктор <see cref="M:System.Web.UI.XhtmlTextWriter.#ctor(System.IO.TextWriter)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.XhtmlTextWriter.%23ctor%2A> Конструктор, <xref:System.IO.TextWriter> принимающий объект в качестве параметра, вызывает второй конструктор, передавая два значения параметров:  
  
-   Экземпляр класса <xref:System.IO.TextWriter>.  
  
-   Строковое значение, заданное в <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> поле, определяющее шаг табуляции, используемый модулем записи текста XHTML.  
  
   
  
## Examples  
 В следующем примере кода показано, как создать два конструктора, которые являются стандартными для всех классов, прямо или косвенно наследуемых от <xref:System.Web.UI.HtmlTextWriter> класса, для пользовательского класса, производного <xref:System.Web.UI.XhtmlTextWriter> от класса.  
  
 [!code-csharp[System.Web.UI.XhtmlTextWriter_Sample2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/CS/customxhtmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.XhtmlTextWriter_Sample2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/VB/customxhtmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XhtmlTextWriter (System.IO.TextWriter writer, string tabString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string tabString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XhtmlTextWriter.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, tabString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XhtmlTextWriter(System::IO::TextWriter ^ writer, System::String ^ tabString);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.XhtmlTextWriter : System.IO.TextWriter * string -&gt; System.Web.UI.XhtmlTextWriter" Usage="new System.Web.UI.XhtmlTextWriter (writer, tabString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="tabString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">Экземпляр <see cref="T:System.IO.TextWriter" /> отображает содержимое XHTML.</param>
        <param name="tabString">Строка, используемая для отображения линейного отступа.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.XhtmlTextWriter" /> с указанным отступом строки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как создать два конструктора, которые являются стандартными для всех классов, прямо или косвенно наследуемых от <xref:System.Web.UI.HtmlTextWriter> класса, для пользовательского класса, производного <xref:System.Web.UI.XhtmlTextWriter> от класса.  
  
 [!code-csharp[System.Web.UI.XhtmlTextWriter_Sample2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/CS/customxhtmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.XhtmlTextWriter_Sample2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/VB/customxhtmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRecognizedAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddRecognizedAttribute (string elementName, string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRecognizedAttribute(string elementName, string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XhtmlTextWriter.AddRecognizedAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRecognizedAttribute (elementName As String, attributeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRecognizedAttribute(System::String ^ elementName, System::String ^ attributeName);" />
      <MemberSignature Language="F#" Value="abstract member AddRecognizedAttribute : string * string -&gt; unit&#xA;override this.AddRecognizedAttribute : string * string -&gt; unit" Usage="xhtmlTextWriter.AddRecognizedAttribute (elementName, attributeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">XHTML-элемент, к которому добавляется атрибут.</param>
        <param name="attributeName">Атрибут для добавления.</param>
        <summary>Добавляет атрибут к XHTML-элементу. Коллекция специфичных атрибутов элемента для объекта <see cref="T:System.Web.UI.XhtmlTextWriter" />, на которую ссылается свойство <see cref="P:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.XhtmlTextWriter.AddRecognizedAttribute%2A> Используйте метод, чтобы добавить атрибут к элементу XHTML. После этого добавленный атрибут может быть распознан и визуализирован <xref:System.Web.UI.XhtmlTextWriter> объектом. Чтобы предотвратить визуализацию общего атрибута элемента XHTML средством записи, используйте <xref:System.Web.UI.XhtmlTextWriter.RemoveRecognizedAttribute%2A> метод.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes" />
        <altmember cref="M:System.Web.UI.XhtmlTextWriter.RemoveRecognizedAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CommonAttributes">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable CommonAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable CommonAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.XhtmlTextWriter.CommonAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CommonAttributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Hashtable ^ CommonAttributes { System::Collections::Hashtable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommonAttributes : System.Collections.Hashtable" Usage="System.Web.UI.XhtmlTextWriter.CommonAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Collections.Hashtable" />, содержащий общие атрибуты тегов разметки для объекта <see cref="T:System.Web.UI.XhtmlTextWriter" />.</summary>
        <value>Объект <see cref="T:System.Collections.Hashtable" /> содержит общие атрибуты.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Коллекция содержит атрибуты, разрешенные в элементах XHTML и не подавленные <xref:System.Web.UI.XhtmlTextWriter.SuppressCommonAttributes%2A> в свойстве. <xref:System.Web.UI.XhtmlTextWriter.CommonAttributes%2A> Дополнительные сведения об общих атрибутах см. на [веб-сайте консорциум W3C (W3C)](https://go.microsoft.com/fwlink/?linkid=37125).  
  
 При создании нового экземпляра <xref:System.Web.UI.XhtmlTextWriter> класса инициализируются следующие общие атрибуты:  
  
-   `class`  
  
-   `id`  
  
-   `title`  
  
-   `xml:lang`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.XhtmlTextWriter.SuppressCommonAttributes" />
        <altmember cref="P:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes" />
      </Docs>
    </Member>
    <Member MemberName="ElementSpecificAttributes">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable ElementSpecificAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable ElementSpecificAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ElementSpecificAttributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Hashtable ^ ElementSpecificAttributes { System::Collections::Hashtable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementSpecificAttributes : System.Collections.Hashtable" Usage="System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Collections.Hashtable" />, содержащий специфические атрибуты элементов.</summary>
        <value>Объект <see cref="T:System.Collections.Hashtable" />, содержит специфические атрибуты элементов.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.Web.UI.XhtmlTextWriter.AddRecognizedAttribute%2A> , чтобы добавить распознанные атрибуты в элемент XHTML. Чтобы удалить общие атрибуты элемента XHTML, используйте <xref:System.Web.UI.XhtmlTextWriter.RemoveRecognizedAttribute%2A> метод.  
  
 При создании <xref:System.Web.UI.XhtmlTextWriter> <xref:System.Collections.Hashtable> нового экземпляра класса объект атрибутов конкретного элемента заполняется атрибутами, приведенными в следующей таблице.  
  
|Элемент|Атрибуты|  
|-------------|----------------|  
|`<a>`|`accesskey`, `href`, `charset`, `hreflang`, `rel`, `type`, `rev`, `title`, `tabindex`|  
|`<base>`|`href`|  
|`<blockquote>`|`cite`|  
|`<br>`|`id`, `class`, `title`|  
|`<form>`|`action`, `method`, `enctype`|  
|`<head>`|`xml:lang`|  
|`<html>`|`version`, `xml:lang`, `xmlns`|  
|`<img>`|`src`, `alt`, `width`, `longdesc`, `height`|  
|`<input>`|`size`, `accesskey`, `title`, `name`, `type`, `disabled`, `value`, `src`, `checked`, `maxlength`, `tabindex`|  
|`<label>`|`accesskey`, `for`|  
|`<li>`|`value`|  
|`<link>`|`hreflang`, `rev`, `type`, `charset`, `rel`, `href`, `media`|  
|`<meta>`|`content`, `name`, `xml:lang`, `http-equiv`, `scheme`|  
|`<object>`|`codebase`, `classid`, `data`, `standby`, `name`, `type`, `height`, `archive`, `declare`, `width`, `tabindex`, `codetype`|  
|`<ol>`|`start`|  
|`<optgroup>`|`label`, `disabled`|  
|`<option>`|`selected`, `value`|  
|`<param>`|`id`, `name`, `valuetype`, `value`, `type`|  
|`<pre>`|`xml:space`|  
|`<q>`|`cite`|  
|`<select>`|`name`, `tabindex`, `disabled`, `multiple`, `size`|  
|`<style>`|`xml:lang`, `xml:space`, `type`, `title`, `media`|  
|`<table>`|`width`, `summary`|  
|`<textarea>`|`name`, `cols`, `accesskey`, `tabindex`, `rows`|  
|`<td>`|`headers`, `align`, `rowspan`, `colspan`, `axis`, `scope`, `abbr`, `valign`|  
|`<th>`|`headers`, `align`, `rowspan`, `colspan`, `axis`, `scope`, `abbr`, `valign`|  
|`<title>`|`xml:lang`|  
|`<tr>`|`align`, `valign`|  
  
 Дополнительные сведения об отображаемых элементах и стилях см. в статье спецификация модульного XHTML на [веб-сайте консорциум W3C (W3C)](https://go.microsoft.com/fwlink/?linkid=37125).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.XhtmlTextWriter.CommonAttributes" />
        <altmember cref="P:System.Web.UI.XhtmlTextWriter.SuppressCommonAttributes" />
        <altmember cref="M:System.Web.UI.XhtmlTextWriter.AddRecognizedAttribute(System.String,System.String)" />
        <altmember cref="M:System.Web.UI.XhtmlTextWriter.RemoveRecognizedAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsValidFormAttribute">
      <MemberSignature Language="C#" Value="public override bool IsValidFormAttribute (string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsValidFormAttribute(string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XhtmlTextWriter.IsValidFormAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsValidFormAttribute (attributeName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsValidFormAttribute(System::String ^ attributeName);" />
      <MemberSignature Language="F#" Value="override this.IsValidFormAttribute : string -&gt; bool" Usage="xhtmlTextWriter.IsValidFormAttribute attributeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributeName">Имя атрибута для проверки.</param>
        <summary>Проверяет атрибут XHTML для того, чтобы удостовериться, что он может быть отображен в открывающемся теге элемента <see langword="&lt;form&gt;" />.</summary>
        <returns><see langword="true" />, если атрибут может быть применен к элементу <see langword="&lt;form&gt;" />; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод полезен для условного отображения атрибута в зависимости от того, поддерживается ли он типом документа XHTML запрашивающего устройства.  
  
   
  
## Examples  
 Следующий пример кода является частью более крупного примера, который создает пользовательский <xref:System.Web.UI.WebControls.Label> элемент управления и адаптер, который визуализирует содержимое элемента управления как XHTML.  
  
 В этом примере кода показано, как создать логическую переменную `attTest` с именем и присвоить ей возвращаемое значение, полученное в результате <xref:System.Web.UI.XhtmlTextWriter.IsValidFormAttribute%2A> вызова метода со значением параметра "Style". Если метод возвращает `true`значение, стили, связанные с <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A?displayProperty=nameWithType> элементом управления, подготавливаются к просмотру с помощью методов и. <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A?displayProperty=nameWithType> <xref:System.Web.UI.XhtmlTextWriter.IsValidFormAttribute%2A> Если значение равно `false`, стили не подготавливаются к просмотру. `attTest` Вместо этого на странице отображается текст элемента управления, `<br/>` элемент, отображаемый <xref:System.Web.UI.XhtmlTextWriter.WriteBreak%2A> методом, и текстовая строка, информирующее пользователя о том, что содержимое XHTML элемента управления было отрисовано условно.  
  
 Этот пример кода является частью большого примера, <xref:System.Web.UI.XhtmlTextWriter> приведенного для класса.  
  
 [!code-csharp[System.Web.UI.XhtmlTextWriter_Sample1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.XhtmlTextWriter_Sample1/cs/xhtmltextlabel.cs#3)]
 [!code-vb[System.Web.UI.XhtmlTextWriter_Sample1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.XhtmlTextWriter_Sample1/VB/xhtmltestlabel.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAttributeRender">
      <MemberSignature Language="C#" Value="protected override bool OnAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XhtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnAttributeRender (name As String, value As String, key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="override this.OnAttributeRender : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; bool" Usage="xhtmlTextWriter.OnAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">Отображаемый атрибут XHTML.</param>
        <param name="value">Значение, назначенное атрибуту XHTML.</param>
        <param name="key">Значение перечисления <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />, связанное с атрибутом XHTML.</param>
        <summary>Определяет, может ли определенный атрибут XHTML и его значение отобразиться в текущей разметке элемента.</summary>
        <returns><see langword="true" />, если атрибут отображен на странице; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как переопределить <xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A> метод, чтобы проверить, отображается `size` ли атрибут для любого из элементов, отображаемых этим модулем записи текста. `size` Если атрибут отображается, код проверяет, имеет ли его значение 8 точек. Если это так, <xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A> метод возвращает `true`, позволяя визуализировать атрибут и его значение. Если значение отличается от 8, <xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A> метод возвращает `false`, а атрибут и его значение не подготавливаются к просмотру. Если параметр <xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A> ключа метода не <xref:System.Web.UI.HtmlTextWriterAttribute.Size> соответствует атрибуту, <xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A> то вызывается базовая функциональность <xref:System.Web.UI.XhtmlTextWriter> метода, как определено в классе.  
  
 Этот пример кода является частью большого примера, <xref:System.Web.UI.XhtmlTextWriter> приведенного для класса.  
  
 [!code-csharp[System.Web.UI.XhtmlTextWriter_Sample2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/CS/customxhtmltextwriter.cs#2)]
 [!code-vb[System.Web.UI.XhtmlTextWriter_Sample2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/VB/customxhtmltextwriter.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleAttributeRender">
      <MemberSignature Language="C#" Value="protected override bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnStyleAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnStyleAttributeRender (name As String, value As String, key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnStyleAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="override this.OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="xhtmlTextWriter.OnStyleAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">Отображаемый стиль атрибута XHTML.</param>
        <param name="value">Значение, присвоенное стилю атрибута XHTML.</param>
        <param name="key">Значение перечисления <see cref="T:System.Web.UI.HtmlTextWriterStyle" />, связанное со стилем атрибута XHTML.</param>
        <summary>Определяет, могут ли определенный атрибут XHTML и его значение отобразиться в текущей разметке элемента.</summary>
        <returns><see langword="true" />, если стиль атрибута отображен; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как переопределить <xref:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender%2A> метод, чтобы проверить, визуализируется <xref:System.Web.UI.HtmlTextWriterStyle.Color> ли атрибут для любого из элементов, отображаемых этим модулем записи текста. <xref:System.Web.UI.HtmlTextWriterStyle.Color> Если атрибут отображается, код проверяет, является ли его значение фиолетовым. Если значение является фиолетовым, <xref:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender%2A> метод возвращает `false` , а атрибут и его значение не подготавливаются к просмотру. Если для <xref:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender%2A> `true` атрибута задано любое другое значение, метод возвращает значение, и атрибут и его значения подготавливаются к просмотру. <xref:System.Web.UI.HtmlTextWriterStyle.Color> Если параметр <xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A> ключа метода не <xref:System.Web.UI.HtmlTextWriterStyle.Color> соответствует атрибуту, <xref:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender%2A> то вызывается базовая функциональность <xref:System.Web.UI.XhtmlTextWriter> метода, как определено в классе.  
  
 Этот пример кода является частью большого примера, <xref:System.Web.UI.XhtmlTextWriter> приведенного для класса.  
  
 [!code-csharp[System.Web.UI.XhtmlTextWriter_Sample2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/CS/customxhtmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.XhtmlTextWriter_Sample2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/VB/customxhtmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.XhtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveRecognizedAttribute">
      <MemberSignature Language="C#" Value="public virtual void RemoveRecognizedAttribute (string elementName, string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveRecognizedAttribute(string elementName, string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XhtmlTextWriter.RemoveRecognizedAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveRecognizedAttribute (elementName As String, attributeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveRecognizedAttribute(System::String ^ elementName, System::String ^ attributeName);" />
      <MemberSignature Language="F#" Value="abstract member RemoveRecognizedAttribute : string * string -&gt; unit&#xA;override this.RemoveRecognizedAttribute : string * string -&gt; unit" Usage="xhtmlTextWriter.RemoveRecognizedAttribute (elementName, attributeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">Элемент XHTML для удаления формы атрибута.</param>
        <param name="attributeName">Атрибут для удаления из специфического элемента XHTML.</param>
        <summary>Удаляет атрибут из коллекции элементов <see cref="P:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes" />
        <altmember cref="M:System.Web.UI.XhtmlTextWriter.AddRecognizedAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetDocType">
      <MemberSignature Language="C#" Value="public virtual void SetDocType (System.Web.UI.XhtmlMobileDocType docType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDocType(valuetype System.Web.UI.XhtmlMobileDocType docType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XhtmlTextWriter.SetDocType(System.Web.UI.XhtmlMobileDocType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetDocType (docType As XhtmlMobileDocType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetDocType(System::Web::UI::XhtmlMobileDocType docType);" />
      <MemberSignature Language="F#" Value="abstract member SetDocType : System.Web.UI.XhtmlMobileDocType -&gt; unit&#xA;override this.SetDocType : System.Web.UI.XhtmlMobileDocType -&gt; unit" Usage="xhtmlTextWriter.SetDocType docType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="docType" Type="System.Web.UI.XhtmlMobileDocType" />
      </Parameters>
      <Docs>
        <param name="docType">Одно из значений перечисления <see cref="T:System.Web.UI.XhtmlMobileDocType" />.</param>
        <summary>Определяет тип документа XHML для модуля записи текста, чтобы отобразить его на странице или в элементе управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.XhtmlTextWriter.SetDocType%2A> Используйте метод в пользовательском адаптере страницы, чтобы определить тип XHTML, который должен быть отображен на запрашивающем устройстве. Поддерживаемые типы документов определяются в <xref:System.Web.UI.XhtmlMobileDocType> перечислении.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.XhtmlMobileDocType" />
      </Docs>
    </Member>
    <Member MemberName="SuppressCommonAttributes">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable SuppressCommonAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable SuppressCommonAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.XhtmlTextWriter.SuppressCommonAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property SuppressCommonAttributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Hashtable ^ SuppressCommonAttributes { System::Collections::Hashtable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SuppressCommonAttributes : System.Collections.Hashtable" Usage="System.Web.UI.XhtmlTextWriter.SuppressCommonAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Collections.Hashtable" /> элементов, для которых подавляются атрибуты <see cref="P:System.Web.UI.XhtmlTextWriter.CommonAttributes" />.</summary>
        <value>Элементы <see cref="T:System.Collections.Hashtable" /> содержат коллекцию <see cref="P:System.Web.UI.XhtmlTextWriter.CommonAttributes" />, которые не отображается.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Отключенная коллекция атрибутов включает список элементов XHTML, для которых <xref:System.Web.UI.XhtmlTextWriter.CommonAttributes%2A> атрибуты не подготавливаются.  
  
 При создании <xref:System.Web.UI.XhtmlTextWriter> <xref:System.Web.UI.XhtmlTextWriter.CommonAttributes%2A> нового экземпляра класса объект элементов, для которого подавляются атрибуты, включает: <xref:System.Collections.Hashtable>  
  
-   `base`  
  
-   `meta`  
  
-   `br`  
  
-   `head`  
  
-   `title`  
  
-   `html`  
  
-   `style`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.XhtmlTextWriter.CommonAttributes" />
        <altmember cref="P:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes" />
      </Docs>
    </Member>
    <Member MemberName="WriteBreak">
      <MemberSignature Language="C#" Value="public override void WriteBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XhtmlTextWriter.WriteBreak" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBreak ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBreak();" />
      <MemberSignature Language="F#" Value="override this.WriteBreak : unit -&gt; unit" Usage="xhtmlTextWriter.WriteBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Записывает элемент <see langword="&lt;br/&gt;" /> в поток вывода XHTML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A?displayProperty=nameWithType> , как переопределить наследуемый метод для записи текстовой строки <xref:System.Web.UI.HtmlTextWriter.Write%2A?displayProperty=nameWithType> с помощью метода <xref:System.Web.UI.XhtmlTextWriter.WriteBreak%2A> и `<br/>` элемента с методом.  
  
 [!code-csharp[system.web.ui.xhtmltextwriter_sample2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/CS/customxhtmltextwriter.cs#4)]
 [!code-vb[system.web.ui.xhtmltextwriter_sample2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/VB/customxhtmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
