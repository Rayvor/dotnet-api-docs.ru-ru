<Type Name="IStyleSheet" FullName="System.Web.UI.IStyleSheet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="af087a69dc98f500183b7b045c37dab45be584c7" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69397860" /></Metadata><TypeSignature Language="C#" Value="public interface IStyleSheet" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStyleSheet" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IStyleSheet" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStyleSheet" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStyleSheet" />
  <TypeSignature Language="F#" Value="type IStyleSheet = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Определяет методы, которые необходимо реализовать классу для создания правил стиля.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы, реализующие этот интерфейс, могут использовать его для поддержки создания правил стилей.  
  
 Чтобы настроить способ создания и регистрации каскадных таблиц стилей, необходимо создать класс, реализующий этот интерфейс.  
  
 Класс реализует этот интерфейс для использования методом ASP.NET <xref:System.Web.UI.Page.Header%2A> через свойство. <xref:System.Web.UI.HtmlControls.HtmlHead>  
  
> [!NOTE]
>  Программное добавление или изменение стилей или правил стилей во время асинхронных обратных передач не поддерживается. При добавлении возможностей AJAX на веб-страницу ASP.NET асинхронные обратные передачи обновляют области страницы без обновления всей страницы. Дополнительные сведения см. в [статье Общие сведения о Microsoft AJAX](https://msdn.microsoft.com/library/be84d9b3-b7cd-47d7-8494-be4abfaad9cb).  
  
   
  
## Examples  
 В следующем примере кода используется <xref:System.Web.UI.Page.Header%2A> реализация метода <xref:System.Web.UI.IStyleSheet> , чтобы продемонстрировать программное создание нового правила стиля и регистрацию пользовательского <xref:System.Web.UI.WebControls.Style> объекта.  
  
 В первой части примера создается пользовательский <xref:System.Web.UI.WebControls.Style> `labelStyle`объект, который затем регистрируется для текущего расположения (URL-адреса). Затем метка вызывает метод, `labelStyle` чтобы стиль применялся к `label1` метке. <xref:System.Web.UI.WebControls.WebControl.MergeStyle%2A> `label1`  
  
 Во второй части примера определяется другой пользовательский <xref:System.Web.UI.WebControls.Style> объект, `bodyStyle`и устанавливаются его свойства для создания нового правила стиля.  
  
> [!NOTE]
>  Этот класс предназначен главным образом для разработчиков, желающих создать пользовательскую реализацию. В этом примере демонстрируется реализация, предоставляемая .NET Framework.  
  
 [!code-aspx-csharp[System.Web.UI.IStyleSheet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IStyleSheet/CS/istylesheetcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.IStyleSheet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IStyleSheet/VB/istylesheetvb.aspx#1)]  
  
 Ниже приведен файл кода программной части для веб-страницы в предыдущем примере.  
  
 [!code-csharp[System.Web.UI.IStyleSheet#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IStyleSheet/CS/istylesheetcs.aspx.cs#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Style" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlHead" />
    <related type="Article" href="https://msdn.microsoft.com/library/14adecd2-b688-45ec-b942-4a89183b3f91">Пошаговое руководство. Реализация нового стиля</related>
  </Docs>
  <Members>
    <Member MemberName="CreateStyleRule">
      <MemberSignature Language="C#" Value="public void CreateStyleRule (System.Web.UI.WebControls.Style style, System.Web.UI.IUrlResolutionService urlResolver, string selector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateStyleRule(class System.Web.UI.WebControls.Style style, class System.Web.UI.IUrlResolutionService urlResolver, string selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IStyleSheet.CreateStyleRule(System.Web.UI.WebControls.Style,System.Web.UI.IUrlResolutionService,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateStyleRule(System::Web::UI::WebControls::Style ^ style, System::Web::UI::IUrlResolutionService ^ urlResolver, System::String ^ selector);" />
      <MemberSignature Language="F#" Value="abstract member CreateStyleRule : System.Web.UI.WebControls.Style * System.Web.UI.IUrlResolutionService * string -&gt; unit" Usage="iStyleSheet.CreateStyleRule (style, urlResolver, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="urlResolver" Type="System.Web.UI.IUrlResolutionService" />
        <Parameter Name="selector" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="style">Правило стиля, добавляемое к внедренной таблице стилей.</param>
        <param name="urlResolver">Объект, реализованный с помощью <see cref="T:System.Web.UI.IUrlResolutionService" />, содержащей контекстную информацию для данного положения (URL).</param>
        <param name="selector">Часть HTML-страницы, затронутая стилем.</param>
        <summary>При реализации классом, добавляется новое правило стиля к указанному типу элемента языка документа, или селектору.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IStyleSheet.CreateStyleRule%2A> Метод создает правило стиля для указанного селектора. Для одного и того же селектора можно создать несколько правил стилей.  
  
 Если `urlResolver` параметр имеет `null`значение, используется URL-адрес текущего <xref:System.Web.UI.Page> экземпляра.  
  
> [!NOTE]
>  Программное добавление или изменение стилей или правил стилей во время асинхронных обратных передач не поддерживается. При добавлении возможностей AJAX на веб-страницу ASP.NET асинхронные обратные передачи обновляют области страницы без обновления всей страницы. Дополнительные сведения см. в [статье Общие сведения о Microsoft AJAX](https://msdn.microsoft.com/library/be84d9b3-b7cd-47d7-8494-be4abfaad9cb).  
  
   
  
## Examples  
 В <xref:System.Web.UI.Page.Header%2A> следующем примере кода используется <xref:System.Web.UI.IStyleSheet> реализация для демонстрации `bodyStyle`определения нового <xref:System.Web.UI.WebControls.Style> объекта. Затем `bodyStyle` добавляется к текущему URL-адресу путем вызова <xref:System.Web.UI.IStyleSheet.CreateStyleRule%2A>.  
  
 [!code-aspx-csharp[System.Web.UI.IStyleSheetCreateStyleRule#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IStyleSheetCreateStyleRule/CS/istylesheetcreatestylerulecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.IStyleSheetCreateStyleRule#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IStyleSheetCreateStyleRule/VB/istylesheetcreatestylerulevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterStyle">
      <MemberSignature Language="C#" Value="public void RegisterStyle (System.Web.UI.WebControls.Style style, System.Web.UI.IUrlResolutionService urlResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterStyle(class System.Web.UI.WebControls.Style style, class System.Web.UI.IUrlResolutionService urlResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IStyleSheet.RegisterStyle(System.Web.UI.WebControls.Style,System.Web.UI.IUrlResolutionService)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::IUrlResolutionService ^ urlResolver);" />
      <MemberSignature Language="F#" Value="abstract member RegisterStyle : System.Web.UI.WebControls.Style * System.Web.UI.IUrlResolutionService -&gt; unit" Usage="iStyleSheet.RegisterStyle (style, urlResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="urlResolver" Type="System.Web.UI.IUrlResolutionService" />
      </Parameters>
      <Docs>
        <param name="style">Правило стиля, добавляемое к внедренной таблице стилей.</param>
        <param name="urlResolver">Объект, реализованный с помощью <see cref="T:System.Web.UI.IUrlResolutionService" />, содержащей контекстную информацию для данного положения (URL).</param>
        <summary>При реализации классом добавляется новое правило стиля к внедренной таблице стилей в разделе <see langword="&lt;head&gt;" /> веб-страницы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод добавляет новое правило стиля и <xref:System.Web.UI.WebControls.Style.RegisteredCssClass%2A> имя свойства во внедренную таблицу стилей `<head>` в разделе <xref:System.Web.UI.Page> объекта и связывает правило с автоматически созданным именем стиля. Объект отображается с использованием указанного `urlResolver` параметра. <xref:System.Web.UI.WebControls.Style>  
  
 Если `urlResolver` параметр имеет `null`значение, используется URL-адрес текущего <xref:System.Web.UI.Page> .  
  
 <xref:System.Web.UI.WebControls.Style> Если объект уже зарегистрирован, он не добавляется несколько раз.  
  
> [!NOTE]
>  Добавлять или изменять стили программными средствами во время асинхронных обратных передач не поддерживается. При добавлении возможностей AJAX на веб-страницу ASP.NET асинхронные обратные передачи обновляют области страницы без обновления всей страницы. Дополнительные сведения см. в [статье Общие сведения о Microsoft AJAX](https://msdn.microsoft.com/library/be84d9b3-b7cd-47d7-8494-be4abfaad9cb).  
  
   
  
## Examples  
 В <xref:System.Web.UI.Page.Header%2A> следующем примере кода используется <xref:System.Web.UI.IStyleSheet> реализация для демонстрации создания пользовательского <xref:System.Web.UI.WebControls.Style> объекта, `labelStyle`а затем его регистрации для текущего расположения (URL-адреса). Затем метка вызывает метод, `labelStyle` чтобы стиль применялся к `label1` метке. <xref:System.Web.UI.WebControls.WebControl.MergeStyle%2A> `label1`  
  
 [!code-aspx-csharp[System.Web.UI.IStyleSheetRegisterStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IStyleSheetRegisterStyle/CS/istylesheetregisterstylecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.IStyleSheetRegisterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IStyleSheetRegisterStyle/VB/istylesheetregisterstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
