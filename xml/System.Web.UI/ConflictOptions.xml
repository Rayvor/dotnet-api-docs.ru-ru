<Type Name="ConflictOptions" FullName="System.Web.UI.ConflictOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5858112fb87350d31cb6e005cc12a65b7e51d560" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64016138" /></Metadata><TypeSignature Language="C#" Value="public enum ConflictOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ConflictOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ConflictOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum ConflictOptions" />
  <TypeSignature Language="C++ CLI" Value="public enum class ConflictOptions" />
  <TypeSignature Language="F#" Value="type ConflictOptions = " />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Определяет, как элемент управления источником данных ASP.NET обрабатывает конфликты данных при обновлении или удалении данных.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Управление параллелизмом — это метод, используемый хранилищ данных к элементу управления, как данные считываются и изменившийся в хранилище, когда несколько пользователей получают доступ и управление те же данные. Например один клиент считывает данные и предоставляет его пользователю, пока другой клиент считывает те же данные и представляет его другому пользователю. Если оба пользователя обновить данные и отправляют их в хранилище данных, неожиданный результат может произойти, так как клиенты могут обновлять разные значения для тех же данных. Это считается конфликтом.  
  
 `ConflictDetection` Свойство, которое определено для элементов управления источниками данных ASP.NET используется для определения того, как элемент управления обрабатывает конфликты данных в хранилище базовых данных при базового хранилища данных использует оптимистичный параллелизм и delete или операция обновления выполнить.  
  
 По умолчанию `ConflictDetection` свойству OverwriteChanges, который означает, что элемент управления источником данных перезапишет любые изменения, внесенные в строку данных между элементом управления источником данных сначала считывать данные из строки и время обновления строки. Первичный ключ используется для размещения строки данных, которая будет обновлена или удалена, но не выполняются другие проверки данных. Если элемент управления источником данных настроен для использования параметра CompareAllValues, тем не менее, элемент управления передает исходные данные в `oldValues` коллекции `Update` и `Delete` методов, чтобы можно было написать логику для обновления или удаления данных только в том случае, если Эти значения соответствуют значениям в данный момент в хранилище данных. Совпадающие значения указывают, что данные не изменились со времени считывания.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
    <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
    <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
    <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection" />
  </Docs>
  <Members>
    <Member MemberName="CompareAllValues">
      <MemberSignature Language="C#" Value="CompareAllValues" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ConflictOptions CompareAllValues = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ConflictOptions.CompareAllValues" />
      <MemberSignature Language="VB.NET" Value="CompareAllValues" />
      <MemberSignature Language="C++ CLI" Value="CompareAllValues" />
      <MemberSignature Language="F#" Value="CompareAllValues = 1" Usage="System.Web.UI.ConflictOptions.CompareAllValues" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Элемент управления источником данных использует коллекцию <paramref name="oldValues" /> методов <see langword="Update" /> и <see langword="Delete" /> для определения того, изменялись ли данные другим процессом.</summary>
      </Docs>
    </Member>
    <Member MemberName="OverwriteChanges">
      <MemberSignature Language="C#" Value="OverwriteChanges" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ConflictOptions OverwriteChanges = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ConflictOptions.OverwriteChanges" />
      <MemberSignature Language="VB.NET" Value="OverwriteChanges" />
      <MemberSignature Language="C++ CLI" Value="OverwriteChanges" />
      <MemberSignature Language="F#" Value="OverwriteChanges = 0" Usage="System.Web.UI.ConflictOptions.OverwriteChanges" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Элемент управления источником данных перезаписывает все значения в строке данных собственными значениями для этой строки.</summary>
      </Docs>
    </Member>
  </Members>
</Type>