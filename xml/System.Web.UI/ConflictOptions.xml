<Type Name="ConflictOptions" FullName="System.Web.UI.ConflictOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5858112fb87350d31cb6e005cc12a65b7e51d560" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64016138" /></Metadata><TypeSignature Language="C#" Value="public enum ConflictOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ConflictOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ConflictOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum ConflictOptions" />
  <TypeSignature Language="C++ CLI" Value="public enum class ConflictOptions" />
  <TypeSignature Language="F#" Value="type ConflictOptions = " />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="0a652-101">Определяет, как элемент управления источником данных ASP.NET обрабатывает конфликты данных при обновлении или удалении данных.</span><span class="sxs-lookup"><span data-stu-id="0a652-101">Determines how ASP.NET data source controls handle data conflicts when updating or deleting data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a652-102">Управление параллелизмом — это метод, используемый хранилищ данных к элементу управления, как данные считываются и изменившийся в хранилище, когда несколько пользователей получают доступ и управление те же данные.</span><span class="sxs-lookup"><span data-stu-id="0a652-102">Concurrency control is a technique that data stores use to control how data is read and changed in the store when multiple clients are accessing and manipulating the same data.</span></span> <span data-ttu-id="0a652-103">Например один клиент считывает данные и предоставляет его пользователю, пока другой клиент считывает те же данные и представляет его другому пользователю.</span><span class="sxs-lookup"><span data-stu-id="0a652-103">For example, one client reads data and presents it to a user, while another client reads the same data, and presents it to a different user.</span></span> <span data-ttu-id="0a652-104">Если оба пользователя обновить данные и отправляют их в хранилище данных, неожиданный результат может произойти, так как клиенты могут обновлять разные значения для тех же данных.</span><span class="sxs-lookup"><span data-stu-id="0a652-104">If both users update the data and submit it to the data storage, some unexpected result might occur, because the clients might update different values for the same data.</span></span> <span data-ttu-id="0a652-105">Это считается конфликтом.</span><span class="sxs-lookup"><span data-stu-id="0a652-105">This is considered a conflict.</span></span>  
  
 <span data-ttu-id="0a652-106">`ConflictDetection` Свойство, которое определено для элементов управления источниками данных ASP.NET используется для определения того, как элемент управления обрабатывает конфликты данных в хранилище базовых данных при базового хранилища данных использует оптимистичный параллелизм и delete или операция обновления выполнить.</span><span class="sxs-lookup"><span data-stu-id="0a652-106">The `ConflictDetection` property that is defined for ASP.NET data source controls is used to determine how a control handles data conflicts in the underlying data storage when the underlying data storage is using optimistic concurrency and a delete or update operation is performed.</span></span>  
  
 <span data-ttu-id="0a652-107">По умолчанию `ConflictDetection` свойству OverwriteChanges, который означает, что элемент управления источником данных перезапишет любые изменения, внесенные в строку данных между элементом управления источником данных сначала считывать данные из строки и время обновления строки.</span><span class="sxs-lookup"><span data-stu-id="0a652-107">By default, the `ConflictDetection` property is set to OverwriteChanges, which means the data source control will overwrite any changes made to a data row between the time the data source control first read data from the row and the time that the row is updated.</span></span> <span data-ttu-id="0a652-108">Первичный ключ используется для размещения строки данных, которая будет обновлена или удалена, но не выполняются другие проверки данных.</span><span class="sxs-lookup"><span data-stu-id="0a652-108">The primary key is used for locating the data row that will be updated or deleted, but no other comparison of the data is performed.</span></span> <span data-ttu-id="0a652-109">Если элемент управления источником данных настроен для использования параметра CompareAllValues, тем не менее, элемент управления передает исходные данные в `oldValues` коллекции `Update` и `Delete` методов, чтобы можно было написать логику для обновления или удаления данных только в том случае, если Эти значения соответствуют значениям в данный момент в хранилище данных.</span><span class="sxs-lookup"><span data-stu-id="0a652-109">If the data source control is configured to use the CompareAllValues option, however, the control passes the original data in the `oldValues` collections of the `Update` and `Delete` methods so that you can write logic to update or delete data only if these values match the values currently in the data storage.</span></span> <span data-ttu-id="0a652-110">Совпадающие значения указывают, что данные не изменились со времени считывания.</span><span class="sxs-lookup"><span data-stu-id="0a652-110">The matching values indicate that the data has not changed since the time it was read.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
    <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
    <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
    <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection" />
  </Docs>
  <Members>
    <Member MemberName="CompareAllValues">
      <MemberSignature Language="C#" Value="CompareAllValues" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ConflictOptions CompareAllValues = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ConflictOptions.CompareAllValues" />
      <MemberSignature Language="VB.NET" Value="CompareAllValues" />
      <MemberSignature Language="C++ CLI" Value="CompareAllValues" />
      <MemberSignature Language="F#" Value="CompareAllValues = 1" Usage="System.Web.UI.ConflictOptions.CompareAllValues" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="0a652-111">Элемент управления источником данных использует коллекцию <paramref name="oldValues" /> методов <see langword="Update" /> и <see langword="Delete" /> для определения того, изменялись ли данные другим процессом.</span><span class="sxs-lookup"><span data-stu-id="0a652-111">A data source control uses the <paramref name="oldValues" /> collection of the <see langword="Update" /> and <see langword="Delete" /> methods to determine whether the data has been changed by another process.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="OverwriteChanges">
      <MemberSignature Language="C#" Value="OverwriteChanges" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ConflictOptions OverwriteChanges = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ConflictOptions.OverwriteChanges" />
      <MemberSignature Language="VB.NET" Value="OverwriteChanges" />
      <MemberSignature Language="C++ CLI" Value="OverwriteChanges" />
      <MemberSignature Language="F#" Value="OverwriteChanges = 0" Usage="System.Web.UI.ConflictOptions.OverwriteChanges" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="0a652-112">Элемент управления источником данных перезаписывает все значения в строке данных собственными значениями для этой строки.</span><span class="sxs-lookup"><span data-stu-id="0a652-112">A data source control overwrites all values in a data row with its own values for the row.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>