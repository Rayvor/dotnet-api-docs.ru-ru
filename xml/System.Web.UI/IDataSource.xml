<Type Name="IDataSource" FullName="System.Web.UI.IDataSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="28ca51d3fcd5eb0cc2a433181e378fa047fcb526" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69388257" /></Metadata><TypeSignature Language="C#" Value="public interface IDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataSource" />
  <TypeSignature Language="F#" Value="type IDataSource = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Представляет абстрактный источник данных, к которому привязаны элементы управления, связанные с данными.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET поддерживает архитектуру привязки данных элемента управления, которая позволяет серверным веб-элементам управления осуществлять последовательную привязку к данным. Элементы управления веб-сервера, которые привязаны к данным, называются элементами управления с привязкой к данным, а классы, которые упрощают эту привязку, называются элементами управления источниками данных. Элементы управления источниками данных могут представлять любой источник данных: реляционную базу данных, файл, поток, бизнес-объект и т. д. Элементы управления источниками данных представляют данные единообразно для элементов управления, привязанных к данным, независимо от источника или формата базовых данных.  
  
 <xref:System.Web.UI.IDataSource> Интерфейс реализуется при необходимости реализации собственного пользовательского элемента управления источника данных ASP.NET.  
  
 Любой класс, реализующий <xref:System.Web.UI.IDataSource> интерфейс, является элементом управления источником данных. Интерфейс выступает в качестве основы для всех элементов управления источниками данных ASP.NET и определяет одну из основных концепций архитектуры привязки данных с помощью двух методов <xref:System.Web.UI.IDataSource.GetView%2A> : метода и <xref:System.Web.UI.IDataSource.GetViewNames%2A> метода. <xref:System.Web.UI.IDataSource> Эта концепция состоит в том, что все элементы управления источниками данных поддерживают одно или несколько именованных представлений в своих данных. Объект представления источника данных аналогичен <xref:System.Data.DataView> абстракции <xref:System.Data> в пространстве имен: возможность привязки данных, настраиваемое представление данных для сортировки, фильтрации и других операций с данными, определяемых представлением. По сути, элемент управления источника данных не выполняет никаких действий, кроме получения представлений данных.  
  
 Элемент управления источниками данных может иметь один или несколько связанных объектов представления источников данных. Некоторые элементы управления источниками данных, включая те, которые представляют реляционные <xref:System.Web.UI.WebControls.SqlDataSource> базы <xref:System.Web.UI.WebControls.AccessDataSource>данных, такие как и, поддерживают только одно представление. Другие элементы управления источниками данных, включая иерархические элементы управления <xref:System.Web.UI.WebControls.SiteMapDataSource>источниками данных, такие как, поддерживают множество представлений. Представление источника данных определяет возможности источника данных и поддерживаемых им операций.  
  
 В целом, элементы управления источниками данных <xref:System.Web.UI.IDataSource> реализуют интерфейс, поддерживают одно или несколько именованных представлений данных, которые они представляют, и всегда поддерживают извлечение данных из источника данных, которые они представляют. Элементы управления источниками данных всегда получают данные по запросу, например `DataBind` , когда вызывается для элемента управления с привязкой к данным.  
  
   
  
## Examples  
 В следующем примере кода показано, как класс может реализовать методы, определенные <xref:System.Web.UI.IDataSource> интерфейсом, для предоставления данных элементам управления с привязкой к данным. Элемент управления источника данных в этом примере выступает в качестве источника данных в файле с разделителями-запятыми и может использоваться любым элементом управления с привязкой к данным для вывода данных в файле с разделителями-запятыми. Этот пример кода является частью большого примера, <xref:System.Web.UI.DataSourceControl> приведенного для класса.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
  </Docs>
  <Members>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.IDataSource.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceChanged : EventHandler " Usage="member this.DataSourceChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении элемента управления источниками данных, которое может некоторым образом повлиять на элементы управления, связанные с данными.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IDataSource.DataSourceChanged> Событие возникает, когда свойства привязанного к данным элемента управления или базовых данных изменились каким-либо образом, влияющим на привязки данных между элементом управления с привязкой к данным и его данными. Например, событие вызывается при изменении свойства имени файла, например <xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A> свойства, в элементе управления источниками данных, основанных на файлах.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="abstract member GetView : string -&gt; System.Web.UI.DataSourceView" Usage="iDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Имя извлекаемого представления.</param>
        <summary>Возвращает названное представление источника данных, связанное с элементом управления источника данных.</summary>
        <returns>Возвращает именованный <see cref="T:System.Web.UI.DataSourceView" />, связанный с <see cref="T:System.Web.UI.IDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы элементов управления источниками данных могут поддерживать одно или несколько представлений базовых данных. Эти представления представлены экземплярами класса <xref:System.Web.UI.DataSourceView>. Представление источника данных определяет возможности элемента управления источниками данных и выполняет всю работу, необходимую для получения данных из базового хранилища данных и выполнения таких операций, как сортировка, вставка, удаление и обновление.  
  
 Классы элементов управления источниками данных, <xref:System.Web.UI.IDataSource> реализующие интерфейс <xref:System.Web.UI.IDataSource.GetView%2A> , реализуют метод для возврата строго типизированных объектов представления, связанных с классом.  
  
   
  
## Examples  
 В следующем примере кода показано, как класс элемента управления источника данных, реализующий <xref:System.Web.UI.IDataSource> интерфейс, <xref:System.Web.UI.IDataSource.GetView%2A> реализует метод, возвращая <xref:System.Web.UI.DataSourceView> строго типизированный экземпляр класса. Поскольку элемент управления источниками данных поддерживает только одно представление, он пропускает имя и возвращает представление с именем представления по умолчанию. Этот пример кода является частью большого примера, <xref:System.Web.UI.DataSourceControl> приведенного для класса.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IDataSource.GetViewNames" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="abstract member GetViewNames : unit -&gt; System.Collections.ICollection" Usage="iDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает коллекцию имен, представляющих список объектов представления, связанных с интерфейсом <see cref="T:System.Web.UI.IDataSource" />.</summary>
        <returns>Объект <see cref="T:System.Collections.ICollection" />, содержащий имена представлений, связанных с элементом управления <see cref="T:System.Web.UI.IDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы элементов управления источниками данных могут поддерживать одно или несколько именованных представлений в своих базовых данных. <xref:System.Web.UI.IDataSource.GetViewNames%2A> Метод возвращает коллекцию имен представлений, которые в настоящее время связаны с экземпляром системы управления источниками данных. Вызывающие <xref:System.Web.UI.DataSourceView> объекты могут выполнять итерацию по коллекции имен представлений и извлекать их <xref:System.Web.UI.IDataSource.GetView%2A> с помощью метода.  
  
 Классы элементов управления источниками данных, <xref:System.Web.UI.IDataSource> реализующие интерфейс <xref:System.Web.UI.IDataSource.GetViewNames%2A> , реализуют метод для возвращения коллекции имен, представляющей все объекты представления источников данных, которые в настоящее время связаны с классом элемента управления источника данных.  
  
   
  
## Examples  
 В следующем примере кода показано, как элемент управления источника данных, реализующий <xref:System.Web.UI.IDataSource> интерфейс, <xref:System.Web.UI.IDataSource.GetViewNames%2A> реализует метод, возвращая <xref:System.Collections.ICollection> коллекцию имен. Так как источник данных поддерживает только одно представление, метод возвращает коллекцию одного элемента, используя имя по умолчанию для представления. Этот пример кода является частью большого примера, <xref:System.Web.UI.DataSourceControl> приведенного для класса.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#4)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
  </Members>
</Type>
