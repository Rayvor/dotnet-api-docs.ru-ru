<Type Name="AuthenticatedStream" FullName="System.Net.Security.AuthenticatedStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1ae8c83a8d6307303e0e7e48bf0a6b63ebc52b8c" /><Meta Name="ms.sourcegitcommit" Value="5ebd9691c6f7d50c4730e997fba69e54bdd7cc0c" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/17/2019" /><Meta Name="ms.locfileid" Value="65829941" /></Metadata><TypeSignature Language="C#" Value="public abstract class AuthenticatedStream : System.IO.Stream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AuthenticatedStream extends System.IO.Stream" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AuthenticatedStream&#xA;Inherits Stream" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthenticatedStream abstract : System::IO::Stream" />
  <TypeSignature Language="F#" Value="type AuthenticatedStream = class&#xA;    inherit Stream" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="eb387-101">Предоставляет методы для передачи учетных данных через поток, а также для запроса или выполнения проверки подлинности в клиент-серверных приложениях.</span><span class="sxs-lookup"><span data-stu-id="eb387-101">Provides methods for passing credentials across a stream and requesting or performing authentication for client-server applications.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb387-102">Этот абстрактный класс предоставляет методы и свойства, которые являются общими для потоков с проверкой подлинности.</span><span class="sxs-lookup"><span data-stu-id="eb387-102">This abstract class provides methods and properties that are common to authenticated streams.</span></span>  
  
 <span data-ttu-id="eb387-103">Потоки с проверкой подлинности может обеспечить проверку подлинности, подписывания, данных и служб шифрования, которые могут помочь поддерживать целостности и конфиденциальности данных, передаваемых через <xref:System.Net.Security.AuthenticatedStream.InnerStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="eb387-103">Authenticated streams can provide authentication, data signing, and encryption services that can help maintain the integrity and confidentiality of data transmitted using the <xref:System.Net.Security.AuthenticatedStream.InnerStream%2A>.</span></span>  
  
 <span data-ttu-id="eb387-104">Протокол безопасности, реализуемый класс, производный от <xref:System.Net.Security.AuthenticatedStream> вместе с безопасность протоколов, поддерживаемых на клиент и сервер определит средства безопасности, доступные для приложения.</span><span class="sxs-lookup"><span data-stu-id="eb387-104">The security protocol implemented by a class that derives from <xref:System.Net.Security.AuthenticatedStream> together with the security protocols supported on the client and server will determine the security features that are available to an application.</span></span> <span data-ttu-id="eb387-105"><xref:System.Net.Security.NegotiateStream> И <xref:System.Net.Security.SslStream> классы наследуют от <xref:System.Net.Security.AuthenticatedStream> и реализации протоколов безопасности Negotiate и протокол SSL, соответственно.</span><span class="sxs-lookup"><span data-stu-id="eb387-105">The <xref:System.Net.Security.NegotiateStream> and <xref:System.Net.Security.SslStream> classes inherit from <xref:System.Net.Security.AuthenticatedStream> and implement the Negotiate and Secure Sockets Layer security protocols, respectively.</span></span>  
  
   
  
## Examples  
<span data-ttu-id="eb387-106">В следующем примере показано отображение свойств потока с проверкой подлинности.</span><span class="sxs-lookup"><span data-stu-id="eb387-106">The following example demonstrates displaying the properties of an authenticated stream.</span></span>  
  
[!code-cpp[NclNegoAsyncClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#6)]
[!code-csharp[NclNegoAsyncClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#6)]  
[!code-vb[NclNegoAsyncClient#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNegoasyncClient/VB/client.vb#6)] 

 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="eb387-107">В производном классе необходимо переопределить следующие члены: <see cref="P:System.Net.Security.AuthenticatedStream.IsAuthenticated" />, <see cref="P:System.Net.Security.AuthenticatedStream.IsEncrypted" />, <see cref="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated" />, <see cref="P:System.Net.Security.AuthenticatedStream.IsServer" />, и <see cref="P:System.Net.Security.AuthenticatedStream.IsSigned" />.</span><span class="sxs-lookup"><span data-stu-id="eb387-107">The following members must be overridden in a derived class: <see cref="P:System.Net.Security.AuthenticatedStream.IsAuthenticated" />, <see cref="P:System.Net.Security.AuthenticatedStream.IsEncrypted" />, <see cref="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated" />, <see cref="P:System.Net.Security.AuthenticatedStream.IsServer" />, and <see cref="P:System.Net.Security.AuthenticatedStream.IsSigned" />.</span></span></para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AuthenticatedStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AuthenticatedStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.AuthenticatedStream : System.IO.Stream * bool -&gt; System.Net.Security.AuthenticatedStream" Usage="new System.Net.Security.AuthenticatedStream (innerStream, leaveInnerStreamOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="eb387-108">Объект <see cref="T:System.IO.Stream" />, используемый потоком <see cref="T:System.Net.Security.AuthenticatedStream" /> для отправки и получения данных.</span><span class="sxs-lookup"><span data-stu-id="eb387-108">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.AuthenticatedStream" /> for sending and receiving data.</span></span></param>
        <param name="leaveInnerStreamOpen"><span data-ttu-id="eb387-109">Объект <see cref="T:System.Boolean" /> , указывает ли закрытие данного <see cref="T:System.Net.Security.AuthenticatedStream" /> объекта также закрывает <paramref name="innerStream" />.</span><span class="sxs-lookup"><span data-stu-id="eb387-109">A <see cref="T:System.Boolean" /> that indicates whether closing this <see cref="T:System.Net.Security.AuthenticatedStream" /> object also closes <paramref name="innerStream" />.</span></span></param>
        <summary><span data-ttu-id="eb387-110">Инициализирует новый экземпляр класса <see cref="T:System.Net.Security.AuthenticatedStream" />.</span><span class="sxs-lookup"><span data-stu-id="eb387-110">Initializes a new instance of the <see cref="T:System.Net.Security.AuthenticatedStream" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb387-111">При указании `true` для `leaveStreamOpen` параметра, закрытие <xref:System.Net.Security.AuthenticatedStream> не оказывает влияния на `innerStream` потока.</span><span class="sxs-lookup"><span data-stu-id="eb387-111">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.AuthenticatedStream> has no effect on the `innerStream` stream.</span></span>  
  
 <span data-ttu-id="eb387-112">Этот конструктор предназначен для реализации потоков с проверкой подлинности и могут быть вызваны только классы, которые являются производными от <xref:System.Net.Security.AuthenticatedStream>.</span><span class="sxs-lookup"><span data-stu-id="eb387-112">This constructor is provided for implementers of authenticated streams, and can be called only by classes that are derived from <xref:System.Net.Security.AuthenticatedStream>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eb387-113">Свойство <paramref name="innerStream" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eb387-113"><paramref name="innerStream" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="eb387-114">-или-</span><span class="sxs-lookup"><span data-stu-id="eb387-114">-or-</span></span> 
 <span data-ttu-id="eb387-115"><paramref name="innerStream" /> равно <see cref="F:System.IO.Stream.Null" />.</span><span class="sxs-lookup"><span data-stu-id="eb387-115"><paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.AuthenticatedStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="authenticatedStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="eb387-116">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="eb387-116"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="eb387-117">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Net.Security.AuthenticatedStream" />, а при необходимости освобождает также управляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="eb387-117">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.AuthenticatedStream" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb387-118">Этот метод вызывается открытым `Dispose()` метод и <xref:System.Object.Finalize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="eb387-118">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="eb387-119">`Dispose()` вызывает защищенный `Dispose(Boolean)` метод с `disposing` параметру присвоить `true`.</span><span class="sxs-lookup"><span data-stu-id="eb387-119">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="eb387-120"><xref:System.Object.Finalize%2A> вызывает `Dispose` с `disposing` присвоено `false`.</span><span class="sxs-lookup"><span data-stu-id="eb387-120"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="eb387-121">Когда `disposing` параметр имеет значение true, этот метод освобождает все ресурсы, занятые любыми управляемыми объектами, <xref:System.Net.Security.AuthenticatedStream> ссылки.</span><span class="sxs-lookup"><span data-stu-id="eb387-121">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Security.AuthenticatedStream> references.</span></span> <span data-ttu-id="eb387-122">Этот метод вызывает метод `Dispose()` каждого объекта, на который есть ссылка.</span><span class="sxs-lookup"><span data-stu-id="eb387-122">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="eb387-123">Метод 
            <see langword="Dispose" /> может вызываться несколько раз другими объектами.</span><span class="sxs-lookup"><span data-stu-id="eb387-123">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="eb387-124">При переопределении метода <see langword="Dispose(Boolean)" /> нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="eb387-124">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="eb387-125">Дополнительные сведения о том, как реализовать <see langword="Dispose(Boolean)" />, см. в разделе [реализация метода Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="eb387-125">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="eb387-126">Дополнительные сведения о <see langword="Dispose" /> и <see cref="M:System.Object.Finalize" />, см. в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [переопределение метода Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="eb387-126">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.AuthenticatedStream.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="authenticatedStream.DisposeAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream InnerStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InnerStream" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.AuthenticatedStream.InnerStream" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InnerStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::IO::Stream ^ InnerStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InnerStream : System.IO.Stream" Usage="System.Net.Security.AuthenticatedStream.InnerStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb387-127">Возвращает поток, используемый данным объектом <see cref="T:System.Net.Security.AuthenticatedStream" /> для отправки и получения данных.</span><span class="sxs-lookup"><span data-stu-id="eb387-127">Gets the stream used by this <see cref="T:System.Net.Security.AuthenticatedStream" /> for sending and receiving data.</span></span></summary>
        <value><span data-ttu-id="eb387-128">Объект <see cref="T:System.IO.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="eb387-128">A <see cref="T:System.IO.Stream" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb387-129">Классы, наследующие от <xref:System.Net.Security.AuthenticatedStream> это свойство можно использовать для доступа к потоку, передаваемый <xref:System.Net.Security.AuthenticatedStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29>.</span><span class="sxs-lookup"><span data-stu-id="eb387-129">Classes that inherit from <xref:System.Net.Security.AuthenticatedStream> can use this property to access the stream passed to the <xref:System.Net.Security.AuthenticatedStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public abstract bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.AuthenticatedStream.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Net.Security.AuthenticatedStream.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb387-130">Возвращает значение типа <see cref="T:System.Boolean" />, указывающее, была ли проверка подлинности успешной.</span><span class="sxs-lookup"><span data-stu-id="eb387-130">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span></span></summary>
        <value><span data-ttu-id="eb387-131"><see langword="true" /> Если произошла Успешная проверка подлинности; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eb387-131"><see langword="true" /> if successful authentication occurred; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb387-132">Определенные методы, вызываемые для проверки подлинности в классы, наследующие от <xref:System.Net.Security.AuthenticatedStream>.</span><span class="sxs-lookup"><span data-stu-id="eb387-132">The methods called to perform authentication are defined in the classes that inherit from <xref:System.Net.Security.AuthenticatedStream>.</span></span>  
  
   
  
## Examples  
<span data-ttu-id="eb387-133">В следующем примере показано отображение значения этого свойства.</span><span class="sxs-lookup"><span data-stu-id="eb387-133">The following example demonstrates displaying the value of this property.</span></span>  
  
[!code-cpp[NclNegoAsyncClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#6)]
[!code-csharp[NclNegoAsyncClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#6)]  
[!code-vb[NclNegoAsyncClient#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNegoasyncClient/VB/client.vb#6)] 

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncrypted">
      <MemberSignature Language="C#" Value="public abstract bool IsEncrypted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEncrypted" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.AuthenticatedStream.IsEncrypted" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsEncrypted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsEncrypted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEncrypted : bool" Usage="System.Net.Security.AuthenticatedStream.IsEncrypted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb387-134">Возвращает значение типа <see cref="T:System.Boolean" />, указывающее, являются ли зашифрованными данные, переданные с помощью данного потока <see cref="T:System.Net.Security.AuthenticatedStream" />.</span><span class="sxs-lookup"><span data-stu-id="eb387-134">Gets a <see cref="T:System.Boolean" /> value that indicates whether data sent using this <see cref="T:System.Net.Security.AuthenticatedStream" /> is encrypted.</span></span></summary>
        <value><span data-ttu-id="eb387-135"><see langword="true" /> Если данные шифруются до передачи по сети и расшифровываются при достижении удаленной конечной точки; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eb387-135"><see langword="true" /> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb387-136">Шифрование помогает защитить конфиденциальность данных. а именно это позволяет гарантировать, что время передачи данных, его невозможно расшифровать третьими лицами.</span><span class="sxs-lookup"><span data-stu-id="eb387-136">Encryption helps to protect the privacy of the data; namely, it helps to ensure that while data is in transit, it cannot be deciphered by third parties.</span></span>  
  
   
  
## Examples  
<span data-ttu-id="eb387-137">В следующем примере показано отображение значения этого свойства.</span><span class="sxs-lookup"><span data-stu-id="eb387-137">The following example demonstrates displaying the value of this property.</span></span>  
  
[!code-cpp[NclNegoAsyncClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#6)]
[!code-csharp[NclNegoAsyncClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#6)]  
[!code-vb[NclNegoAsyncClient#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNegoasyncClient/VB/client.vb#6)] 

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public abstract bool IsMutuallyAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutuallyAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsMutuallyAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsMutuallyAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMutuallyAuthenticated : bool" Usage="System.Net.Security.AuthenticatedStream.IsMutuallyAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb387-138">Возвращает значение типа <see cref="T:System.Boolean" />, указывающее, была ли проведена проверка подлинности как для сервера, так и для клиента.</span><span class="sxs-lookup"><span data-stu-id="eb387-138">Gets a <see cref="T:System.Boolean" /> value that indicates whether both server and client have been authenticated.</span></span></summary>
        <value><span data-ttu-id="eb387-139"><see langword="true" /> Если клиент и сервер прошли проверку подлинности; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eb387-139"><see langword="true" /> if the client and server have been authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb387-140">Не все протоколы безопасности поддерживать обоюдную проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="eb387-140">Not all security protocols support mutual authentication.</span></span> <span data-ttu-id="eb387-141">Чтобы определить, поддерживается ли взаимная проверка подлинности, протокол безопасности, реализации в классе, который наследует от <xref:System.Net.Security.AuthenticatedStream>, проверьте в документации по классу.</span><span class="sxs-lookup"><span data-stu-id="eb387-141">To determine whether mutual authentication is supported by the security protocol implemented in a class that inherits from <xref:System.Net.Security.AuthenticatedStream>, check the class documentation.</span></span>  
  
   
  
## Examples  
<span data-ttu-id="eb387-142">В следующем примере показано отображение значения этого свойства.</span><span class="sxs-lookup"><span data-stu-id="eb387-142">The following example demonstrates displaying the value of this property.</span></span>  
  
[!code-cpp[NclNegoAsyncClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#6)]
[!code-csharp[NclNegoAsyncClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#6)]  
[!code-vb[NclNegoAsyncClient#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNegoasyncClient/VB/client.vb#6)] 

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsServer">
      <MemberSignature Language="C#" Value="public abstract bool IsServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.AuthenticatedStream.IsServer" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsServer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsServer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServer : bool" Usage="System.Net.Security.AuthenticatedStream.IsServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb387-143">Возвращает значение типа <see cref="T:System.Boolean" />, указывающее, прошла ли локальная сторона соединения проверку подлинности как сервер.</span><span class="sxs-lookup"><span data-stu-id="eb387-143">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection was authenticated as the server.</span></span></summary>
        <value><span data-ttu-id="eb387-144"><see langword="true" /> Если локальная конечная точка прошла проверку подлинности как серверная сторона соединения клиент сервер с проверкой подлинности; <see langword="false" /> Если локальная конечная точка прошла проверку подлинности как клиент.</span><span class="sxs-lookup"><span data-stu-id="eb387-144"><see langword="true" /> if the local endpoint was authenticated as the server side of a client-server authenticated connection; <see langword="false" /> if the local endpoint was authenticated as the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb387-145">Большинство протоколы безопасности, используемые для проверки подлинности между клиентом и сервером определяют конкретное поведение и требования для передачи учетных данных для проверки подлинности в зависимости от того, являетесь ли вы клиента или сервера.</span><span class="sxs-lookup"><span data-stu-id="eb387-145">Most security protocols used for client-server authentication define specific behavior and requirements for supplying credentials for authentication based on whether you are the client or the server.</span></span>  
  
   
  
## Examples  
<span data-ttu-id="eb387-146">В следующем примере показано отображение значения этого свойства.</span><span class="sxs-lookup"><span data-stu-id="eb387-146">The following example demonstrates displaying the value of this property.</span></span>  
  
[!code-cpp[NclNegoAsyncClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#6)]
[!code-csharp[NclNegoAsyncClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#6)]  
[!code-vb[NclNegoAsyncClient#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNegoasyncClient/VB/client.vb#6)] 

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public abstract bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.AuthenticatedStream.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsSigned { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSigned : bool" Usage="System.Net.Security.AuthenticatedStream.IsSigned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb387-147">Возвращает значение типа <see cref="T:System.Boolean" />, указывающее, подписаны ли данные, отправленные с помощью данного потока.</span><span class="sxs-lookup"><span data-stu-id="eb387-147">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span></span></summary>
        <value><span data-ttu-id="eb387-148"><see langword="true" /> Если данные были подписаны перед передачей; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eb387-148"><see langword="true" /> if the data is signed before being transmitted; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb387-149">Подписывание данных помогает защитить целостность данных. а именно полезно, чтобы получатель мог определить, подверглась ли данные с в процессе передачи.</span><span class="sxs-lookup"><span data-stu-id="eb387-149">Data signing helps to protect the integrity of the data; namely, it helps the recipient determine whether the data has been tampered with while in transit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb387-150">В следующем примере показано отображение значения этого свойства.</span><span class="sxs-lookup"><span data-stu-id="eb387-150">The following example demonstrates displaying the value of this property.</span></span>  
  
[!code-cpp[NclNegoAsyncClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#6)]
[!code-csharp[NclNegoAsyncClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#6)]  
[!code-vb[NclNegoAsyncClient#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNegoasyncClient/VB/client.vb#6)] 
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LeaveInnerStreamOpen">
      <MemberSignature Language="C#" Value="public bool LeaveInnerStreamOpen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LeaveInnerStreamOpen" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LeaveInnerStreamOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LeaveInnerStreamOpen { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.LeaveInnerStreamOpen : bool" Usage="System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eb387-151">Возвращает значение, определяющее, оставлен ли открытым поток, используемый данным объектом <see cref="T:System.Net.Security.AuthenticatedStream" /> для отправки и получения данных.</span><span class="sxs-lookup"><span data-stu-id="eb387-151">Gets whether the stream used by this <see cref="T:System.Net.Security.AuthenticatedStream" /> for sending and receiving data has been left open.</span></span></summary>
        <value><span data-ttu-id="eb387-152"><see langword="true" /> Если внутренний поток был оставлен открытым; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eb387-152"><see langword="true" /> if the inner stream has been left open; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb387-153">Если задано значение `true`, поток, переданный в конструктор этого класса не может быть закрыто, после закрытия экземпляра этого класса.</span><span class="sxs-lookup"><span data-stu-id="eb387-153">When set to `true`, the stream passed to the constructor of this class will not be closed after the instance of this class is closed.</span></span> <span data-ttu-id="eb387-154">Если задано значение `false`, закрыв экземпляр этого класса также будут закрыты подчеркнутые транспортного потока.</span><span class="sxs-lookup"><span data-stu-id="eb387-154">When set to `false`, closing the instance of this class will also close the underlined transport stream.</span></span> <span data-ttu-id="eb387-155">По умолчанию этому свойству присваивается значение `false`.</span><span class="sxs-lookup"><span data-stu-id="eb387-155">The default value of this property is `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>