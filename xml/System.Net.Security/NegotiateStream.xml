<Type Name="NegotiateStream" FullName="System.Net.Security.NegotiateStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c972f803194f696ed3f02190d31c35820e23fe37" /><Meta Name="ms.sourcegitcommit" Value="385ff23cc00fe9aa1c93460c62603b45c2041d0b" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="11/22/2019" /><Meta Name="ms.locfileid" Value="74387060" /></Metadata><TypeSignature Language="C#" Value="public class NegotiateStream : System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NegotiateStream extends System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.NegotiateStream" />
  <TypeSignature Language="VB.NET" Value="Public Class NegotiateStream&#xA;Inherits AuthenticatedStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class NegotiateStream : System::Net::Security::AuthenticatedStream" />
  <TypeSignature Language="F#" Value="type NegotiateStream = class&#xA;    inherit AuthenticatedStream" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Security.AuthenticatedStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="17f1c-101">Provides a stream that uses the Negotiate security protocol to authenticate the client, and optionally the server, in client-server communication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-101">Provides a stream that uses the Negotiate security protocol to authenticate the client, and optionally the server, in client-server communication.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-102">Используйте класс <xref:System.Net.Security.NegotiateStream> для проверки подлинности и защиты данных, передаваемых между клиентом и сервером.</span><span class="sxs-lookup"><span data-stu-id="17f1c-102">Use the <xref:System.Net.Security.NegotiateStream> class for authentication and to help secure information transmitted between a client and a server.</span></span> <span data-ttu-id="17f1c-103">С помощью <xref:System.Net.Security.NegotiateStream>можно выполнить следующие действия.</span><span class="sxs-lookup"><span data-stu-id="17f1c-103">Using <xref:System.Net.Security.NegotiateStream>, you can do the following.</span></span>  
  
-   <span data-ttu-id="17f1c-104">Отправка учетных данных клиента на сервер для олицетворения или делегирования.</span><span class="sxs-lookup"><span data-stu-id="17f1c-104">Send the client's credentials to the server for Impersonation or Delegation.</span></span>  
  
-   <span data-ttu-id="17f1c-105">Запрос проверки подлинности сервера.</span><span class="sxs-lookup"><span data-stu-id="17f1c-105">Request server authentication.</span></span>  
  
-   <span data-ttu-id="17f1c-106">Зашифруйте и/или Подпишите данные перед передачей.</span><span class="sxs-lookup"><span data-stu-id="17f1c-106">Encrypt and/or sign data before transmitting it.</span></span>  
  
 <span data-ttu-id="17f1c-107">Перед передачей информации необходимо выполнить проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-107">Authentication must be performed before transmitting information.</span></span> <span data-ttu-id="17f1c-108">Клиенты запрашивают проверку подлинности с помощью синхронных методов <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, которые блокируются до завершения проверки подлинности, или асинхронных <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> методов, которые не блокируются при ожидании завершения проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-108">Clients request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods, which block until the authentication completes, or the asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods, which do not block while waiting for the authentication to complete.</span></span> <span data-ttu-id="17f1c-109">Серверы запрашивают проверку подлинности с помощью синхронных <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> или асинхронных методов <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-109">Servers request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span> <span data-ttu-id="17f1c-110">Клиент и, при необходимости, сервер проходят проверку подлинности с помощью протокола безопасности Negotiate.</span><span class="sxs-lookup"><span data-stu-id="17f1c-110">The client, and optionally the server, is authenticated using the Negotiate security protocol.</span></span> <span data-ttu-id="17f1c-111">В системах Windows 95/98 используется протокол Windows NT LAN Manager (NTLM), используемый для проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-111">On Windows 95/98 systems, Windows NT LAN Manager (NTLM) is the protocol used for authentication.</span></span> <span data-ttu-id="17f1c-112">На других платформах протокол Kerberos используется для проверки подлинности, если он поддерживается и клиентом, и сервером. в противном случае используется NTLM.</span><span class="sxs-lookup"><span data-stu-id="17f1c-112">On other platforms the Kerberos protocol is used for authentication if both client and server support it; otherwise NTLM is used.</span></span> <span data-ttu-id="17f1c-113">Подробное описание этих протоколов см. в документации по пакету SDK для платформы на сайте MSDN по адресу msdn.microsoft.com/library/.</span><span class="sxs-lookup"><span data-stu-id="17f1c-113">For detailed descriptions of these protocols, see the Platform SDK documentation on MSDN, at msdn.microsoft.com/library/.</span></span> <span data-ttu-id="17f1c-114">Класс <xref:System.Net.Security.NegotiateStream> выполняет проверку подлинности с помощью интерфейса поставщика поддержки безопасности (SSPI).</span><span class="sxs-lookup"><span data-stu-id="17f1c-114">The <xref:System.Net.Security.NegotiateStream> class performs the authentication using the Security Support Provider Interface (SSPI).</span></span>  
  
 <span data-ttu-id="17f1c-115">После выполнения проверки подлинности необходимо проверить свойства <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A>, чтобы определить, какие службы безопасности будут использоваться <xref:System.Net.Security.NegotiateStream> для защиты данных во время передачи.</span><span class="sxs-lookup"><span data-stu-id="17f1c-115">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services will be used by the <xref:System.Net.Security.NegotiateStream> to help secure your data during transmission.</span></span> <span data-ttu-id="17f1c-116">Проверьте свойство <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>, чтобы определить, была ли выполнена взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-116">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span> <span data-ttu-id="17f1c-117">Сведения об удаленном клиенте или сервере можно получить с помощью свойства <xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-117">You can get information about the remote client or server using the <xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A> property.</span></span>  
  
 <span data-ttu-id="17f1c-118">В случае сбоя проверки подлинности вы получите <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-118">If the authentication fails, you will receive an <xref:System.Security.Authentication.AuthenticationException> or a <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="17f1c-119">В этом случае можно повторить попытку проверки подлинности с другими учетными данными.</span><span class="sxs-lookup"><span data-stu-id="17f1c-119">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="17f1c-120">Данные отправляются с помощью синхронных <xref:System.Net.Security.NegotiateStream.Write%2A> или асинхронных методов <xref:System.Net.Security.NegotiateStream.BeginWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-120">You send data using the synchronous <xref:System.Net.Security.NegotiateStream.Write%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginWrite%2A> methods.</span></span> <span data-ttu-id="17f1c-121">Данные поступают с помощью синхронных <xref:System.Net.Security.NegotiateStream.Read%2A> или асинхронных методов <xref:System.Net.Security.NegotiateStream.BeginRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-121">You receive data using the synchronous <xref:System.Net.Security.NegotiateStream.Read%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginRead%2A> methods.</span></span> <span data-ttu-id="17f1c-122">Если службы безопасности, такие как шифрование или подпись, включены, они автоматически применяются к данным <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-122">If security services such as encryption or signing are enabled, these are automatically applied to your data by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="17f1c-123"><xref:System.Net.Security.NegotiateStream> передает данные с помощью потока, указываемого при создании <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-123">The <xref:System.Net.Security.NegotiateStream> transmits data using a stream that you supply when creating the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="17f1c-124">При указании этого базового потока можно указать, будет ли закрыт <xref:System.Net.Security.NegotiateStream> также закрывать базовый поток.</span><span class="sxs-lookup"><span data-stu-id="17f1c-124">When you supply this underlying stream, you have the option to specify whether closing the <xref:System.Net.Security.NegotiateStream> also closes the underlying stream.</span></span>  
  
   
  
## Examples  
<span data-ttu-id="17f1c-125">В следующем примере показана клиентская сторона соединения «клиент-сервер», использующая <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-125">The following example demonstrates the client side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="17f1c-126">Клиент выполняет проверку подлинности и отправляет сообщение на сервер в асинхронном режиме.</span><span class="sxs-lookup"><span data-stu-id="17f1c-126">The client authenticates and sends a message to the server asynchronously.</span></span>  
  
[!code-cpp[NclNegoAsyncClient#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#0)]
[!code-csharp[NclNegoAsyncClient#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#0)]  
[!code-vb[NclNegoAsyncClient#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNegoasyncClient/VB/client.vb#0)] 

<span data-ttu-id="17f1c-127">В следующем примере кода показана серверная часть соединения "клиент-сервер", использующая <xref:System.Net.Security.NegotiateStream> для проверки подлинности клиента и чтения сообщения, отправленного клиентом.</span><span class="sxs-lookup"><span data-stu-id="17f1c-127">The following code example demonstrates the server side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream> to authenticate the client and read a message sent by the client.</span></span>  
  
[!code-cpp[NclNegoAsyncServer#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#0)]
[!code-csharp[NclNegoAsyncServer#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#0)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/8bf0b428-5a21-4299-8d6e-bf8251fd978a"><span data-ttu-id="17f1c-128">Изменения проверки подлинности NTLM для HTTPWebRequest в версии 3,5 SP1</span><span class="sxs-lookup"><span data-stu-id="17f1c-128">Changes to NTLM authentication for HTTPWebRequest in Version 3.5 SP1</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="17f1c-129">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class.</span><span class="sxs-lookup"><span data-stu-id="17f1c-129">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-130">Чтобы запретить <xref:System.Net.Security.NegotiateStream> закрывать предоставленный вами поток, используйте конструктор <xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-130">To prevent the <xref:System.Net.Security.NegotiateStream> from closing the stream that you supply, use the <xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.NegotiateStream : System.IO.Stream -&gt; System.Net.Security.NegotiateStream" Usage="new System.Net.Security.NegotiateStream innerStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="17f1c-131">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span><span class="sxs-lookup"><span data-stu-id="17f1c-131">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span></span></param>
        <summary><span data-ttu-id="17f1c-132">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-132">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="17f1c-133">В следующем примере кода демонстрируется вызов этого конструктора.</span><span class="sxs-lookup"><span data-stu-id="17f1c-133">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#3)]
 [!code-csharp[NclNegoSyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.NegotiateStream : System.IO.Stream * bool -&gt; System.Net.Security.NegotiateStream" Usage="new System.Net.Security.NegotiateStream (innerStream, leaveInnerStreamOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="17f1c-134">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span><span class="sxs-lookup"><span data-stu-id="17f1c-134">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span></span></param>
        <param name="leaveInnerStreamOpen"><span data-ttu-id="17f1c-135"><see langword="true" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> has no effect on <paramref name="innerStream" />; <see langword="false" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> also closes <paramref name="innerStream" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-135"><see langword="true" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> has no effect on <paramref name="innerStream" />; <see langword="false" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> also closes <paramref name="innerStream" />.</span></span></param>
        <summary><span data-ttu-id="17f1c-136">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</span><span class="sxs-lookup"><span data-stu-id="17f1c-136">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-137">При указании `true` для параметра `leaveStreamOpen` закрытие <xref:System.Net.Security.NegotiateStream> не влияет на поток `innerStream`. необходимо явно закрыть `innerStream`, когда она больше не нужна.</span><span class="sxs-lookup"><span data-stu-id="17f1c-137">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.NegotiateStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
   
  
## Examples  
<span data-ttu-id="17f1c-138">В следующем примере демонстрируется вызов этого конструктора.</span><span class="sxs-lookup"><span data-stu-id="17f1c-138">The following example demonstrates calling this constructor.</span></span> <span data-ttu-id="17f1c-139">Этот пример кода является частью большого примера, приведенного для класса <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-139">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
[!code-cpp[NclNegoAsyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#1)]
[!code-csharp[NclNegoAsyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#1)]  
[!code-vb[NclNegoAsyncClient#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNegoasyncClient/VB/client.vb#1)] 

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17f1c-140"><paramref name="innerStream" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-140"><paramref name="innerStream" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="17f1c-141">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-141">-or-</span></span> 
 <span data-ttu-id="17f1c-142"><paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-142"><paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="17f1c-143">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-143">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : unit -&gt; unit&#xA;override this.AuthenticateAsClient : unit -&gt; unit" Usage="negotiateStream.AuthenticateAsClient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17f1c-144">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-144">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-145">Проверка подлинности использует <xref:System.Net.CredentialCache.DefaultCredentials%2A>клиента.</span><span class="sxs-lookup"><span data-stu-id="17f1c-145">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="17f1c-146">Для сервера не указано имя участника-службы (SPN).</span><span class="sxs-lookup"><span data-stu-id="17f1c-146">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="17f1c-147">Уровень олицетворения — <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, уровень безопасности <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>и запрос взаимной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-147">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="17f1c-148">Класс <xref:System.Net.Security.NegotiateStream> создаст имя субъекта-службы, используемое для взаимной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-148">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="17f1c-149">После завершения проверки подлинности необходимо проверить свойства <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A>, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-149">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="17f1c-150">Проверьте свойство <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>, чтобы определить, была ли выполнена взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-150">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="17f1c-151">Если проверка подлинности завершается неудачно, вы получаете <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-151">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="17f1c-152">В этом случае можно повторить попытку проверки подлинности с другими учетными данными.</span><span class="sxs-lookup"><span data-stu-id="17f1c-152">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17f1c-153">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-153">The authentication failed.</span></span> <span data-ttu-id="17f1c-154">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-154">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="17f1c-155">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-155">The authentication failed.</span></span> <span data-ttu-id="17f1c-156">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-156">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17f1c-157">This object has been closed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-157">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-158">Authentication has already occurred.</span><span class="sxs-lookup"><span data-stu-id="17f1c-158">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="17f1c-159">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-159">-or-</span></span>
  
 <span data-ttu-id="17f1c-160">This stream was used previously to attempt authentication as the server.</span><span class="sxs-lookup"><span data-stu-id="17f1c-160">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="17f1c-161">You cannot use the stream to retry authentication as the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-161">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="17f1c-162">для использования явного <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-162">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="17f1c-163">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-163">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * string -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * string -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="17f1c-164">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-164">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="17f1c-165">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span><span class="sxs-lookup"><span data-stu-id="17f1c-165">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <summary><span data-ttu-id="17f1c-166">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-166">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="17f1c-167">The authentication process uses the specified client credential.</span><span class="sxs-lookup"><span data-stu-id="17f1c-167">The authentication process uses the specified client credential.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-168">Уровень олицетворения — <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, уровень безопасности <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>и запрос взаимной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-168">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="17f1c-169">Класс <xref:System.Net.Security.NegotiateStream> создаст имя субъекта-службы, используемое для взаимной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-169">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="17f1c-170">После завершения проверки подлинности необходимо проверить свойства <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A>, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-170">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="17f1c-171">Проверьте свойство <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>, чтобы определить, была ли выполнена взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-171">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17f1c-172">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-172">The authentication failed.</span></span> <span data-ttu-id="17f1c-173">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-173">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="17f1c-174">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-174">The authentication failed.</span></span> <span data-ttu-id="17f1c-175">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-175">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17f1c-176">This object has been closed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-176">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-177">Authentication has already occurred.</span><span class="sxs-lookup"><span data-stu-id="17f1c-177">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="17f1c-178">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-178">-or-</span></span>
  
 <span data-ttu-id="17f1c-179">This stream was used previously to attempt authentication as the server.</span><span class="sxs-lookup"><span data-stu-id="17f1c-179">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="17f1c-180">You cannot use the stream to retry authentication as the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-180">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17f1c-181"><paramref name="targetName" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-181"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="17f1c-182">для использования явного <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-182">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="17f1c-183">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-183">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, binding, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="targetName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="17f1c-184">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-184">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="17f1c-185">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-185">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="17f1c-186">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span><span class="sxs-lookup"><span data-stu-id="17f1c-186">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <summary><span data-ttu-id="17f1c-187">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-187">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="17f1c-188">The authentication process uses the specified client credential and the channel binding.</span><span class="sxs-lookup"><span data-stu-id="17f1c-188">The authentication process uses the specified client credential and the channel binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-189">Уровень олицетворения — <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, уровень безопасности <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>и запрос взаимной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-189">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="17f1c-190">Класс <xref:System.Net.Security.NegotiateStream> создаст имя субъекта-службы, используемое для взаимной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-190">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="17f1c-191"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>, используемый для расширенной защиты, которая передается этому методу в параметре `binding`, будет извлечена приложением из свойства <xref:System.Net.Security.SslStream.TransportContext%2A> в связанном <xref:System.Net.Security.SslStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-191">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="17f1c-192">После завершения проверки подлинности необходимо проверить свойства <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A>, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-192">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="17f1c-193">Проверьте свойство <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>, чтобы определить, была ли выполнена взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-193">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17f1c-194"><paramref name="targetName" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-194"><paramref name="targetName" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="17f1c-195">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-195">-or-</span></span> 
 <span data-ttu-id="17f1c-196"><paramref name="credential" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-196"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17f1c-197">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-197">The authentication failed.</span></span> <span data-ttu-id="17f1c-198">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-198">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="17f1c-199">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-199">The authentication failed.</span></span> <span data-ttu-id="17f1c-200">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-200">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-201">Authentication has already occurred.</span><span class="sxs-lookup"><span data-stu-id="17f1c-201">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="17f1c-202">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-202">-or-</span></span>
  
 <span data-ttu-id="17f1c-203">This stream was used previously to attempt authentication as the server.</span><span class="sxs-lookup"><span data-stu-id="17f1c-203">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="17f1c-204">You cannot use the stream to retry authentication as the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-204">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17f1c-205">This object has been closed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-205">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="17f1c-206">Интегрированная проверка подлинности Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="17f1c-206">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="17f1c-207">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-207">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="17f1c-208">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span><span class="sxs-lookup"><span data-stu-id="17f1c-208">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="17f1c-209">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span><span class="sxs-lookup"><span data-stu-id="17f1c-209">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="17f1c-210">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span><span class="sxs-lookup"><span data-stu-id="17f1c-210">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="17f1c-211">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-211">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="17f1c-212">The authentication process uses the specified credentials and authentication options.</span><span class="sxs-lookup"><span data-stu-id="17f1c-212">The authentication process uses the specified credentials and authentication options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-213">Используйте параметр `requiredProtectionLevel`, чтобы запросить службы безопасности для данных, передаваемых с помощью потока, прошедшего проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-213">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="17f1c-214">Например, чтобы данные были зашифрованы и подписаны, укажите значение <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-214">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="17f1c-215">Успешная проверка подлинности не гарантирует, что запрошенный <xref:System.Net.Security.ProtectionLevel> был предоставлен.</span><span class="sxs-lookup"><span data-stu-id="17f1c-215">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="17f1c-216">Чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>, необходимо проверить свойства <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-216">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="17f1c-217">Если проверка подлинности завершается неудачно, вы получаете <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-217">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="17f1c-218">В этом случае можно повторить попытку проверки подлинности с другими учетными данными.</span><span class="sxs-lookup"><span data-stu-id="17f1c-218">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="17f1c-219"><paramref name="allowedImpersonationLevel" /> is not a valid value.</span><span class="sxs-lookup"><span data-stu-id="17f1c-219"><paramref name="allowedImpersonationLevel" /> is not a valid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17f1c-220"><paramref name="targetName" /> is null.</span><span class="sxs-lookup"><span data-stu-id="17f1c-220"><paramref name="targetName" /> is null.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17f1c-221">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-221">The authentication failed.</span></span> <span data-ttu-id="17f1c-222">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-222">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="17f1c-223">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-223">The authentication failed.</span></span> <span data-ttu-id="17f1c-224">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-224">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17f1c-225">This object has been closed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-225">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-226">Authentication has already occurred.</span><span class="sxs-lookup"><span data-stu-id="17f1c-226">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="17f1c-227">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-227">-or-</span></span>
  
 <span data-ttu-id="17f1c-228">This stream was used previously to attempt authentication as the server.</span><span class="sxs-lookup"><span data-stu-id="17f1c-228">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="17f1c-229">You cannot use the stream to retry authentication as the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-229">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="17f1c-230">для использования явного <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-230">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="17f1c-231">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-231">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="targetName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="17f1c-232">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-232">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="17f1c-233">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-233">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="17f1c-234">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span><span class="sxs-lookup"><span data-stu-id="17f1c-234">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="17f1c-235">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span><span class="sxs-lookup"><span data-stu-id="17f1c-235">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="17f1c-236">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span><span class="sxs-lookup"><span data-stu-id="17f1c-236">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="17f1c-237">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-237">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="17f1c-238">The authentication process uses the specified credential, authentication options, and channel binding.</span><span class="sxs-lookup"><span data-stu-id="17f1c-238">The authentication process uses the specified credential, authentication options, and channel binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-239">Используйте параметр `requiredProtectionLevel`, чтобы запросить службы безопасности для данных, передаваемых с помощью потока, прошедшего проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-239">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="17f1c-240">Например, чтобы данные были зашифрованы и подписаны, укажите значение <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-240">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="17f1c-241">Успешная проверка подлинности не гарантирует, что запрошенный <xref:System.Net.Security.ProtectionLevel> был предоставлен.</span><span class="sxs-lookup"><span data-stu-id="17f1c-241">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="17f1c-242">Чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>, необходимо проверить свойства <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-242">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="17f1c-243"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>, используемый для расширенной защиты, которая передается этому методу в параметре `binding`, будет извлечена приложением из свойства <xref:System.Net.Security.SslStream.TransportContext%2A> в связанном <xref:System.Net.Security.SslStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-243">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="17f1c-244">Если проверка подлинности завершается неудачно, вы получаете <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-244">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="17f1c-245">В этом случае можно повторить попытку проверки подлинности с другими учетными данными.</span><span class="sxs-lookup"><span data-stu-id="17f1c-245">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17f1c-246"><paramref name="targetName" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-246"><paramref name="targetName" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="17f1c-247">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-247">-or-</span></span> 
 <span data-ttu-id="17f1c-248"><paramref name="credential" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-248"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="17f1c-249"><paramref name="allowedImpersonationLevel" /> is not a valid value.</span><span class="sxs-lookup"><span data-stu-id="17f1c-249"><paramref name="allowedImpersonationLevel" /> is not a valid value.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17f1c-250">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-250">The authentication failed.</span></span> <span data-ttu-id="17f1c-251">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-251">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="17f1c-252">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-252">The authentication failed.</span></span> <span data-ttu-id="17f1c-253">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-253">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-254">Authentication has already occurred.</span><span class="sxs-lookup"><span data-stu-id="17f1c-254">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="17f1c-255">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-255">-or-</span></span>
  
 <span data-ttu-id="17f1c-256">This stream was used previously to attempt authentication as the server.</span><span class="sxs-lookup"><span data-stu-id="17f1c-256">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="17f1c-257">You cannot use the stream to retry authentication as the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-257">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17f1c-258">This object has been closed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-258">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="17f1c-259">Интегрированная проверка подлинности Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="17f1c-259">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClientAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="17f1c-260">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-260">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : unit -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17f1c-261">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-261">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="17f1c-262">The task object representing the asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-262">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-263">Проверка подлинности использует <xref:System.Net.CredentialCache.DefaultCredentials%2A>клиента.</span><span class="sxs-lookup"><span data-stu-id="17f1c-263">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="17f1c-264">Для сервера не указано имя участника-службы (SPN).</span><span class="sxs-lookup"><span data-stu-id="17f1c-264">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="17f1c-265">Уровень олицетворения — <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, уровень безопасности <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>и запрос взаимной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-265">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="17f1c-266">Класс <xref:System.Net.Security.NegotiateStream> создаст имя субъекта-службы, используемое для взаимной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-266">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="17f1c-267">После завершения проверки подлинности необходимо проверить свойства <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A>, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-267">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="17f1c-268">Проверьте свойство <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>, чтобы определить, была ли выполнена взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-268">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="17f1c-269">Если проверка подлинности завершается неудачно, вы получаете <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-269">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="17f1c-270">В этом случае можно повторить попытку проверки подлинности с другими учетными данными.</span><span class="sxs-lookup"><span data-stu-id="17f1c-270">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17f1c-271">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-271">The authentication failed.</span></span> <span data-ttu-id="17f1c-272">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-272">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="17f1c-273">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-273">The authentication failed.</span></span> <span data-ttu-id="17f1c-274">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-274">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17f1c-275">This object has been closed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-275">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-276">Authentication has already occurred.</span><span class="sxs-lookup"><span data-stu-id="17f1c-276">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="17f1c-277">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-277">-or-</span></span>
  
 <span data-ttu-id="17f1c-278">This stream was used previously to attempt authentication as the server.</span><span class="sxs-lookup"><span data-stu-id="17f1c-278">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="17f1c-279">You cannot use the stream to retry authentication as the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-279">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="17f1c-280">для использования явного <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-280">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="17f1c-281">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-281">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * string -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="17f1c-282">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-282">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="17f1c-283">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span><span class="sxs-lookup"><span data-stu-id="17f1c-283">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <summary><span data-ttu-id="17f1c-284">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-284">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="17f1c-285">The authentication process uses the specified client credential.</span><span class="sxs-lookup"><span data-stu-id="17f1c-285">The authentication process uses the specified client credential.</span></span></summary>
        <returns><span data-ttu-id="17f1c-286">The task object representing the asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-286">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-287">Уровень олицетворения — <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, уровень безопасности <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>и запрос взаимной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-287">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="17f1c-288">Класс <xref:System.Net.Security.NegotiateStream> создаст имя субъекта-службы, используемое для взаимной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-288">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="17f1c-289">После завершения проверки подлинности необходимо проверить свойства <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A>, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-289">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="17f1c-290">Проверьте свойство <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>, чтобы определить, была ли выполнена взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-290">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17f1c-291">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-291">The authentication failed.</span></span> <span data-ttu-id="17f1c-292">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-292">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="17f1c-293">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-293">The authentication failed.</span></span> <span data-ttu-id="17f1c-294">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-294">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17f1c-295">This object has been closed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-295">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-296">Authentication has already occurred.</span><span class="sxs-lookup"><span data-stu-id="17f1c-296">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="17f1c-297">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-297">-or-</span></span>
  
 <span data-ttu-id="17f1c-298">This stream was used previously to attempt authentication as the server.</span><span class="sxs-lookup"><span data-stu-id="17f1c-298">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="17f1c-299">You cannot use the stream to retry authentication as the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-299">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17f1c-300"><paramref name="targetName" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-300"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="17f1c-301">для использования явного <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-301">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="17f1c-302">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-302">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, binding, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetName" Type="System.String" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="17f1c-303">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-303">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="17f1c-304">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-304">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="17f1c-305">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span><span class="sxs-lookup"><span data-stu-id="17f1c-305">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <summary><span data-ttu-id="17f1c-306">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-306">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="17f1c-307">The authentication process uses the specified client credential and the channel binding.</span><span class="sxs-lookup"><span data-stu-id="17f1c-307">The authentication process uses the specified client credential and the channel binding.</span></span></summary>
        <returns><span data-ttu-id="17f1c-308">The task object representing the asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-308">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-309">Уровень олицетворения — <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, уровень безопасности <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>и запрос взаимной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-309">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="17f1c-310">Класс <xref:System.Net.Security.NegotiateStream> создаст имя субъекта-службы, используемое для взаимной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-310">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="17f1c-311"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>, используемый для расширенной защиты, которая передается этому методу в параметре `binding`, будет извлечена приложением из свойства <xref:System.Net.Security.SslStream.TransportContext%2A> в связанном <xref:System.Net.Security.SslStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-311">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="17f1c-312">После завершения проверки подлинности необходимо проверить свойства <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A>, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-312">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="17f1c-313">Проверьте свойство <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>, чтобы определить, была ли выполнена взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-313">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17f1c-314"><paramref name="targetName" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-314"><paramref name="targetName" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="17f1c-315">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-315">-or-</span></span> 
 <span data-ttu-id="17f1c-316"><paramref name="credential" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-316"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17f1c-317">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-317">The authentication failed.</span></span> <span data-ttu-id="17f1c-318">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-318">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="17f1c-319">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-319">The authentication failed.</span></span> <span data-ttu-id="17f1c-320">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-320">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-321">Authentication has already occurred.</span><span class="sxs-lookup"><span data-stu-id="17f1c-321">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="17f1c-322">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-322">-or-</span></span>
  
 <span data-ttu-id="17f1c-323">This stream was used previously to attempt authentication as the server.</span><span class="sxs-lookup"><span data-stu-id="17f1c-323">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="17f1c-324">You cannot use the stream to retry authentication as the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-324">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17f1c-325">This object has been closed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-325">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="17f1c-326">Интегрированная проверка подлинности Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="17f1c-326">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="17f1c-327">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-327">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="17f1c-328">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span><span class="sxs-lookup"><span data-stu-id="17f1c-328">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="17f1c-329">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span><span class="sxs-lookup"><span data-stu-id="17f1c-329">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="17f1c-330">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span><span class="sxs-lookup"><span data-stu-id="17f1c-330">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="17f1c-331">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-331">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="17f1c-332">The authentication process uses the specified credentials and authentication options.</span><span class="sxs-lookup"><span data-stu-id="17f1c-332">The authentication process uses the specified credentials and authentication options.</span></span></summary>
        <returns><span data-ttu-id="17f1c-333">The task object representing the asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-333">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-334">Используйте параметр `requiredProtectionLevel`, чтобы запросить службы безопасности для данных, передаваемых с помощью потока, прошедшего проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-334">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="17f1c-335">Например, чтобы данные были зашифрованы и подписаны, укажите значение <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-335">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="17f1c-336">Успешная проверка подлинности не гарантирует, что запрошенный <xref:System.Net.Security.ProtectionLevel> был предоставлен.</span><span class="sxs-lookup"><span data-stu-id="17f1c-336">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="17f1c-337">Чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>, необходимо проверить свойства <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-337">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="17f1c-338">Если проверка подлинности завершается неудачно, вы получаете <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-338">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="17f1c-339">В этом случае можно повторить попытку проверки подлинности с другими учетными данными.</span><span class="sxs-lookup"><span data-stu-id="17f1c-339">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="17f1c-340"><paramref name="allowedImpersonationLevel" /> is not a valid value.</span><span class="sxs-lookup"><span data-stu-id="17f1c-340"><paramref name="allowedImpersonationLevel" /> is not a valid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17f1c-341"><paramref name="targetName" /> is null.</span><span class="sxs-lookup"><span data-stu-id="17f1c-341"><paramref name="targetName" /> is null.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17f1c-342">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-342">The authentication failed.</span></span> <span data-ttu-id="17f1c-343">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-343">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="17f1c-344">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-344">The authentication failed.</span></span> <span data-ttu-id="17f1c-345">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-345">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17f1c-346">This object has been closed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-346">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-347">Authentication has already occurred.</span><span class="sxs-lookup"><span data-stu-id="17f1c-347">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="17f1c-348">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-348">-or-</span></span>
  
 <span data-ttu-id="17f1c-349">This stream was used previously to attempt authentication as the server.</span><span class="sxs-lookup"><span data-stu-id="17f1c-349">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="17f1c-350">You cannot use the stream to retry authentication as the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-350">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="17f1c-351">для использования явного <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-351">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="17f1c-352">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-352">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetName" Type="System.String" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="17f1c-353">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-353">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="17f1c-354">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-354">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="17f1c-355">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span><span class="sxs-lookup"><span data-stu-id="17f1c-355">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="17f1c-356">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span><span class="sxs-lookup"><span data-stu-id="17f1c-356">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="17f1c-357">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span><span class="sxs-lookup"><span data-stu-id="17f1c-357">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="17f1c-358">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-358">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="17f1c-359">The authentication process uses the specified credential, authentication options, and channel binding.</span><span class="sxs-lookup"><span data-stu-id="17f1c-359">The authentication process uses the specified credential, authentication options, and channel binding.</span></span></summary>
        <returns><span data-ttu-id="17f1c-360">The task object representing the asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-360">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-361">Используйте параметр `requiredProtectionLevel`, чтобы запросить службы безопасности для данных, передаваемых с помощью потока, прошедшего проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-361">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="17f1c-362">Например, чтобы данные были зашифрованы и подписаны, укажите значение <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-362">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="17f1c-363">Успешная проверка подлинности не гарантирует, что запрошенный <xref:System.Net.Security.ProtectionLevel> был предоставлен.</span><span class="sxs-lookup"><span data-stu-id="17f1c-363">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="17f1c-364">Чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>, необходимо проверить свойства <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-364">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="17f1c-365"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding>, используемый для расширенной защиты, которая передается этому методу в параметре `binding`, будет извлечена приложением из свойства <xref:System.Net.Security.SslStream.TransportContext%2A> в связанном <xref:System.Net.Security.SslStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-365">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="17f1c-366">Если проверка подлинности завершается неудачно, вы получаете <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-366">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="17f1c-367">В этом случае можно повторить попытку проверки подлинности с другими учетными данными.</span><span class="sxs-lookup"><span data-stu-id="17f1c-367">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17f1c-368"><paramref name="targetName" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-368"><paramref name="targetName" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="17f1c-369">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-369">-or-</span></span> 
 <span data-ttu-id="17f1c-370"><paramref name="credential" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-370"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="17f1c-371"><paramref name="allowedImpersonationLevel" /> is not a valid value.</span><span class="sxs-lookup"><span data-stu-id="17f1c-371"><paramref name="allowedImpersonationLevel" /> is not a valid value.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17f1c-372">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-372">The authentication failed.</span></span> <span data-ttu-id="17f1c-373">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-373">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="17f1c-374">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-374">The authentication failed.</span></span> <span data-ttu-id="17f1c-375">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-375">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-376">Authentication has already occurred.</span><span class="sxs-lookup"><span data-stu-id="17f1c-376">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="17f1c-377">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-377">-or-</span></span>
  
 <span data-ttu-id="17f1c-378">This stream was used previously to attempt authentication as the server.</span><span class="sxs-lookup"><span data-stu-id="17f1c-378">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="17f1c-379">You cannot use the stream to retry authentication as the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-379">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17f1c-380">This object has been closed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-380">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="17f1c-381">Интегрированная проверка подлинности Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="17f1c-381">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="17f1c-382">Handles the server side of an authentication for a client-server connection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-382">Handles the server side of an authentication for a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-383">Эти методы блокируются, пока выполняется проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-383">These methods block while the authentication is in progress.</span></span> <span data-ttu-id="17f1c-384">Чтобы предотвратить блокировку приложения во время ожидания завершения проверки подлинности, используйте метод <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-384">To prevent the application from blocking while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : unit -&gt; unit&#xA;override this.AuthenticateAsServer : unit -&gt; unit" Usage="negotiateStream.AuthenticateAsServer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17f1c-385">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-385">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-386">При проверке подлинности используется <xref:System.Net.CredentialCache.DefaultCredentials%2A>сервера.</span><span class="sxs-lookup"><span data-stu-id="17f1c-386">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="17f1c-387">Для сервера не указано имя участника-службы (SPN).</span><span class="sxs-lookup"><span data-stu-id="17f1c-387">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="17f1c-388">Уровень олицетворения — <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, а уровень безопасности — <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-388">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="17f1c-389">После завершения проверки подлинности необходимо проверить свойства <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A>, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-389">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="17f1c-390">Проверьте свойство <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>, чтобы определить, была ли выполнена взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-390">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="17f1c-391">Этот метод блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="17f1c-391">This method blocks until the operation completes.</span></span> <span data-ttu-id="17f1c-392">Чтобы предотвратить блокировку до завершения операции, используйте одну из перегрузок метода <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-392">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="17f1c-393">Если проверка подлинности завершается неудачно, вы получаете <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-393">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="17f1c-394">В этом случае можно повторить попытку проверки подлинности с другими учетными данными.</span><span class="sxs-lookup"><span data-stu-id="17f1c-394">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17f1c-395">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-395">The authentication failed.</span></span> <span data-ttu-id="17f1c-396">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-396">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="17f1c-397">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-397">The authentication failed.</span></span> <span data-ttu-id="17f1c-398">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-398">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17f1c-399">This object has been closed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-399">This object has been closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17f1c-400">Windows 95 and Windows 98 are not supported.</span><span class="sxs-lookup"><span data-stu-id="17f1c-400">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="17f1c-401">для использования явного <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-401">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="17f1c-402">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-402">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (policy As ExtendedProtectionPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; unit" Usage="negotiateStream.AuthenticateAsServer policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="policy"><span data-ttu-id="17f1c-403">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-403">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <summary><span data-ttu-id="17f1c-404">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-404">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="17f1c-405">The authentication process uses the specified extended protection policy.</span><span class="sxs-lookup"><span data-stu-id="17f1c-405">The authentication process uses the specified extended protection policy.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-406">При проверке подлинности используется <xref:System.Net.CredentialCache.DefaultCredentials%2A>сервера.</span><span class="sxs-lookup"><span data-stu-id="17f1c-406">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="17f1c-407">Для сервера не указано имя участника-службы (SPN).</span><span class="sxs-lookup"><span data-stu-id="17f1c-407">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="17f1c-408">Уровень олицетворения — <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, а уровень безопасности — <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-408">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="17f1c-409">Если параметр `policy` имеет значение `null`, используется расширенная политика защиты, в которой для <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> задано значение <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-409">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="17f1c-410">После завершения проверки подлинности необходимо проверить свойства <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A>, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-410">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="17f1c-411">Проверьте свойство <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>, чтобы определить, была ли выполнена взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-411">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="17f1c-412">Этот метод блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="17f1c-412">This method blocks until the operation completes.</span></span> <span data-ttu-id="17f1c-413">Чтобы предотвратить блокировку до завершения операции, используйте одну из перегрузок метода <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-413">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="17f1c-414">Если проверка подлинности завершается неудачно, вы получаете <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-414">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="17f1c-415">В этом случае можно повторить попытку проверки подлинности с другими учетными данными.</span><span class="sxs-lookup"><span data-stu-id="17f1c-415">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17f1c-416">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-416">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17f1c-417">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-417">The authentication failed.</span></span> <span data-ttu-id="17f1c-418">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-418">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="17f1c-419">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-419">The authentication failed.</span></span> <span data-ttu-id="17f1c-420">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-420">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17f1c-421">Windows 95 and Windows 98 are not supported.</span><span class="sxs-lookup"><span data-stu-id="17f1c-421">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17f1c-422">This object has been closed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-422">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="17f1c-423">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-423">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="17f1c-424">Интегрированная проверка подлинности Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="17f1c-424">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsServer (credential, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="17f1c-425">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span><span class="sxs-lookup"><span data-stu-id="17f1c-425">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="17f1c-426">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span><span class="sxs-lookup"><span data-stu-id="17f1c-426">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="17f1c-427">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span><span class="sxs-lookup"><span data-stu-id="17f1c-427">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="17f1c-428">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-428">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="17f1c-429">The authentication process uses the specified server credentials and authentication options.</span><span class="sxs-lookup"><span data-stu-id="17f1c-429">The authentication process uses the specified server credentials and authentication options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-430">После завершения проверки подлинности необходимо проверить свойства <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A>, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-430">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="17f1c-431">Проверьте свойство <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>, чтобы определить, была ли выполнена взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-431">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="17f1c-432">Этот метод блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="17f1c-432">This method blocks until the operation completes.</span></span> <span data-ttu-id="17f1c-433">Чтобы предотвратить блокировку до завершения операции, используйте одну из перегрузок метода <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-433">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="17f1c-434">Если проверка подлинности завершается неудачно, вы получаете <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-434">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="17f1c-435">В этом случае можно повторить попытку проверки подлинности с другими учетными данными.</span><span class="sxs-lookup"><span data-stu-id="17f1c-435">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17f1c-436"><paramref name="credential" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-436"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="17f1c-437"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span><span class="sxs-lookup"><span data-stu-id="17f1c-437"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17f1c-438">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-438">The authentication failed.</span></span> <span data-ttu-id="17f1c-439">You can use this object to try to r-authenticate.</span><span class="sxs-lookup"><span data-stu-id="17f1c-439">You can use this object to try to r-authenticate.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="17f1c-440">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-440">The authentication failed.</span></span> <span data-ttu-id="17f1c-441">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-441">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17f1c-442">This object has been closed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-442">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-443">Authentication has already occurred.</span><span class="sxs-lookup"><span data-stu-id="17f1c-443">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="17f1c-444">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-444">-or-</span></span>
  
 <span data-ttu-id="17f1c-445">This stream was used previously to attempt authentication as the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-445">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="17f1c-446">You cannot use the stream to retry authentication as the server.</span><span class="sxs-lookup"><span data-stu-id="17f1c-446">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17f1c-447">Windows 95 and Windows 98 are not supported.</span><span class="sxs-lookup"><span data-stu-id="17f1c-447">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="17f1c-448">для использования явного <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-448">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="17f1c-449">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-449">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsServer (credential, policy, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="17f1c-450">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-450">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="policy"><span data-ttu-id="17f1c-451">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-451">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="17f1c-452">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span><span class="sxs-lookup"><span data-stu-id="17f1c-452">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="17f1c-453">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span><span class="sxs-lookup"><span data-stu-id="17f1c-453">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="17f1c-454">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-454">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="17f1c-455">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span><span class="sxs-lookup"><span data-stu-id="17f1c-455">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-456">Если параметр `policy` имеет значение `null`, используется расширенная политика защиты, в которой для <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> задано значение <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-456">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="17f1c-457">После завершения проверки подлинности необходимо проверить свойства <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A>, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-457">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="17f1c-458">Проверьте свойство <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>, чтобы определить, была ли выполнена взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-458">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="17f1c-459">Этот метод блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="17f1c-459">This method blocks until the operation completes.</span></span> <span data-ttu-id="17f1c-460">Чтобы предотвратить блокировку до завершения операции, используйте одну из перегрузок метода <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-460">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="17f1c-461">Если проверка подлинности завершается неудачно, вы получаете <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-461">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="17f1c-462">В этом случае можно повторить попытку проверки подлинности с другими учетными данными.</span><span class="sxs-lookup"><span data-stu-id="17f1c-462">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17f1c-463">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-463">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17f1c-464"><paramref name="credential" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-464"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="17f1c-465"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span><span class="sxs-lookup"><span data-stu-id="17f1c-465"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17f1c-466">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-466">The authentication failed.</span></span> <span data-ttu-id="17f1c-467">You can use this object to try to r-authenticate.</span><span class="sxs-lookup"><span data-stu-id="17f1c-467">You can use this object to try to r-authenticate.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="17f1c-468">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-468">The authentication failed.</span></span> <span data-ttu-id="17f1c-469">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-469">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-470">Authentication has already occurred.</span><span class="sxs-lookup"><span data-stu-id="17f1c-470">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="17f1c-471">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-471">-or-</span></span>
  
 <span data-ttu-id="17f1c-472">This stream was used previously to attempt authentication as the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-472">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="17f1c-473">You cannot use the stream to retry authentication as the server.</span><span class="sxs-lookup"><span data-stu-id="17f1c-473">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17f1c-474">Windows 95 and Windows 98 are not supported.</span><span class="sxs-lookup"><span data-stu-id="17f1c-474">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17f1c-475">This object has been closed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-475">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="17f1c-476">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-476">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="17f1c-477">Интегрированная проверка подлинности Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="17f1c-477">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="17f1c-478">Handles the server side of an authentication for a client-server connection as an asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-478">Handles the server side of an authentication for a client-server connection as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : unit -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17f1c-479">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-479">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="17f1c-480">The task object representing the asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-480">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-481">При проверке подлинности используется <xref:System.Net.CredentialCache.DefaultCredentials%2A>сервера.</span><span class="sxs-lookup"><span data-stu-id="17f1c-481">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="17f1c-482">Для сервера не указано имя участника-службы (SPN).</span><span class="sxs-lookup"><span data-stu-id="17f1c-482">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="17f1c-483">Уровень олицетворения — <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, а уровень безопасности — <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-483">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="17f1c-484">После завершения проверки подлинности необходимо проверить свойства <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A>, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-484">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="17f1c-485">Проверьте свойство <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>, чтобы определить, была ли выполнена взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-485">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="17f1c-486">Если проверка подлинности завершается неудачно, вы получаете <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-486">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="17f1c-487">В этом случае можно повторить попытку проверки подлинности с другими учетными данными.</span><span class="sxs-lookup"><span data-stu-id="17f1c-487">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17f1c-488">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-488">The authentication failed.</span></span> <span data-ttu-id="17f1c-489">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-489">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="17f1c-490">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-490">The authentication failed.</span></span> <span data-ttu-id="17f1c-491">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-491">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17f1c-492">This object has been closed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-492">This object has been closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17f1c-493">Windows 95 and Windows 98 are not supported.</span><span class="sxs-lookup"><span data-stu-id="17f1c-493">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="17f1c-494">для использования явного <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-494">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="17f1c-495">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-495">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (policy As ExtendedProtectionPolicy) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="policy"><span data-ttu-id="17f1c-496">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-496">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <summary><span data-ttu-id="17f1c-497">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-497">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="17f1c-498">The authentication process uses the specified extended protection policy.</span><span class="sxs-lookup"><span data-stu-id="17f1c-498">The authentication process uses the specified extended protection policy.</span></span></summary>
        <returns><span data-ttu-id="17f1c-499">The task object representing the asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-499">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-500">При проверке подлинности используется <xref:System.Net.CredentialCache.DefaultCredentials%2A>сервера.</span><span class="sxs-lookup"><span data-stu-id="17f1c-500">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="17f1c-501">Для сервера не указано имя участника-службы (SPN).</span><span class="sxs-lookup"><span data-stu-id="17f1c-501">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="17f1c-502">Уровень олицетворения — <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, а уровень безопасности — <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-502">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="17f1c-503">Если параметр `policy` имеет значение `null`, используется расширенная политика защиты, в которой для <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> задано значение <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-503">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="17f1c-504">После завершения проверки подлинности необходимо проверить свойства <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A>, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-504">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="17f1c-505">Проверьте свойство <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>, чтобы определить, была ли выполнена взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-505">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="17f1c-506">Если проверка подлинности завершается неудачно, вы получаете <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-506">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="17f1c-507">В этом случае можно повторить попытку проверки подлинности с другими учетными данными.</span><span class="sxs-lookup"><span data-stu-id="17f1c-507">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17f1c-508">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-508">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17f1c-509">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-509">The authentication failed.</span></span> <span data-ttu-id="17f1c-510">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-510">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="17f1c-511">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-511">The authentication failed.</span></span> <span data-ttu-id="17f1c-512">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-512">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17f1c-513">Windows 95 and Windows 98 are not supported.</span><span class="sxs-lookup"><span data-stu-id="17f1c-513">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17f1c-514">This object has been closed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-514">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="17f1c-515">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-515">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="17f1c-516">Интегрированная проверка подлинности Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="17f1c-516">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync (credential, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="17f1c-517">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span><span class="sxs-lookup"><span data-stu-id="17f1c-517">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="17f1c-518">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span><span class="sxs-lookup"><span data-stu-id="17f1c-518">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="17f1c-519">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span><span class="sxs-lookup"><span data-stu-id="17f1c-519">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="17f1c-520">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-520">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="17f1c-521">The authentication process uses the specified server credentials and authentication options.</span><span class="sxs-lookup"><span data-stu-id="17f1c-521">The authentication process uses the specified server credentials and authentication options.</span></span></summary>
        <returns><span data-ttu-id="17f1c-522">The task object representing the asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-522">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-523">После завершения проверки подлинности необходимо проверить свойства <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A>, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-523">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="17f1c-524">Проверьте свойство <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>, чтобы определить, была ли выполнена взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-524">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="17f1c-525">Если проверка подлинности завершается неудачно, вы получаете <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-525">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="17f1c-526">В этом случае можно повторить попытку проверки подлинности с другими учетными данными.</span><span class="sxs-lookup"><span data-stu-id="17f1c-526">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17f1c-527"><paramref name="credential" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-527"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="17f1c-528"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span><span class="sxs-lookup"><span data-stu-id="17f1c-528"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17f1c-529">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-529">The authentication failed.</span></span> <span data-ttu-id="17f1c-530">You can use this object to try to r-authenticate.</span><span class="sxs-lookup"><span data-stu-id="17f1c-530">You can use this object to try to r-authenticate.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="17f1c-531">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-531">The authentication failed.</span></span> <span data-ttu-id="17f1c-532">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-532">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17f1c-533">This object has been closed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-533">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-534">Authentication has already occurred.</span><span class="sxs-lookup"><span data-stu-id="17f1c-534">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="17f1c-535">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-535">-or-</span></span>
  
 <span data-ttu-id="17f1c-536">This stream was used previously to attempt authentication as the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-536">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="17f1c-537">You cannot use the stream to retry authentication as the server.</span><span class="sxs-lookup"><span data-stu-id="17f1c-537">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17f1c-538">Windows 95 and Windows 98 are not supported.</span><span class="sxs-lookup"><span data-stu-id="17f1c-538">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="17f1c-539">для использования явного <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-539">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="17f1c-540">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-540">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync (credential, policy, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="17f1c-541">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-541">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="policy"><span data-ttu-id="17f1c-542">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-542">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="17f1c-543">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span><span class="sxs-lookup"><span data-stu-id="17f1c-543">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="17f1c-544">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span><span class="sxs-lookup"><span data-stu-id="17f1c-544">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="17f1c-545">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-545">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="17f1c-546">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span><span class="sxs-lookup"><span data-stu-id="17f1c-546">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span></span></summary>
        <returns><span data-ttu-id="17f1c-547">The task object representing the asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-547">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-548">Если параметр `policy` имеет значение `null`, используется расширенная политика защиты, в которой для <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> задано значение <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-548">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="17f1c-549">После завершения проверки подлинности необходимо проверить свойства <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A>, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-549">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="17f1c-550">Проверьте свойство <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>, чтобы определить, была ли выполнена взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-550">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="17f1c-551">Если проверка подлинности завершается неудачно, вы получаете <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-551">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="17f1c-552">В этом случае можно повторить попытку проверки подлинности с другими учетными данными.</span><span class="sxs-lookup"><span data-stu-id="17f1c-552">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17f1c-553">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-553">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17f1c-554"><paramref name="credential" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-554"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="17f1c-555"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span><span class="sxs-lookup"><span data-stu-id="17f1c-555"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17f1c-556">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-556">The authentication failed.</span></span> <span data-ttu-id="17f1c-557">You can use this object to try to r-authenticate.</span><span class="sxs-lookup"><span data-stu-id="17f1c-557">You can use this object to try to r-authenticate.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="17f1c-558">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-558">The authentication failed.</span></span> <span data-ttu-id="17f1c-559">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-559">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-560">Authentication has already occurred.</span><span class="sxs-lookup"><span data-stu-id="17f1c-560">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="17f1c-561">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-561">-or-</span></span>
  
 <span data-ttu-id="17f1c-562">This stream was used previously to attempt authentication as the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-562">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="17f1c-563">You cannot use the stream to retry authentication as the server.</span><span class="sxs-lookup"><span data-stu-id="17f1c-563">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17f1c-564">Windows 95 and Windows 98 are not supported.</span><span class="sxs-lookup"><span data-stu-id="17f1c-564">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17f1c-565">This object has been closed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-565">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="17f1c-566">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-566">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="17f1c-567">Интегрированная проверка подлинности Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="17f1c-567">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="17f1c-568">Begins an asynchronous operation to authenticate the client side of a client-server connection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-568">Begins an asynchronous operation to authenticate the client side of a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-569">Перегрузки этого метода не блокируются, пока выполняется проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-569">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="17f1c-570">Чтобы заблокировать ожидание завершения проверки подлинности, используйте один из методов <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-570">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncCallback"><span data-ttu-id="17f1c-571">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span><span class="sxs-lookup"><span data-stu-id="17f1c-571">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="17f1c-572">A user-defined object containing information about the operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-572">A user-defined object containing information about the operation.</span></span> <span data-ttu-id="17f1c-573">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span><span class="sxs-lookup"><span data-stu-id="17f1c-573">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="17f1c-574">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-574">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="17f1c-575">This method does not block.</span><span class="sxs-lookup"><span data-stu-id="17f1c-575">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="17f1c-576">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-576">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-577">Проверка подлинности использует <xref:System.Net.CredentialCache.DefaultCredentials%2A>клиента.</span><span class="sxs-lookup"><span data-stu-id="17f1c-577">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="17f1c-578">Для сервера не указано имя участника-службы (SPN).</span><span class="sxs-lookup"><span data-stu-id="17f1c-578">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="17f1c-579">Уровень олицетворения — <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, а уровень безопасности — <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-579">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span> <span data-ttu-id="17f1c-580">Класс <xref:System.Net.Security.NegotiateStream> создаст имя субъекта-службы, используемое для взаимной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-580">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="17f1c-581">Этот метод является асинхронным и не блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="17f1c-581">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="17f1c-582">Чтобы заблокировать блокировку до завершения операции, используйте одну из перегрузок метода <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-582">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="17f1c-583">Асинхронную операцию проверки подлинности необходимо выполнить, вызвав метод <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-583">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="17f1c-584">Как правило, метод вызывается делегатом `asyncCallback`.</span><span class="sxs-lookup"><span data-stu-id="17f1c-584">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="17f1c-585">Подробные сведения об использовании асинхронной модели программирования см. в разделе [асинхронное вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="17f1c-585">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="17f1c-586">Если проверка подлинности завершается неудачно, вы получаете <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-586">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="17f1c-587">В этом случае можно повторить попытку проверки подлинности с другими учетными данными.</span><span class="sxs-lookup"><span data-stu-id="17f1c-587">In this case, you can retry the authentication with a different credential.</span></span>  
  
   
  
## Examples  
<span data-ttu-id="17f1c-588">В следующем примере демонстрируется вызов этого метода для запуска асинхронной проверки подлинности для клиента.</span><span class="sxs-lookup"><span data-stu-id="17f1c-588">The following example demonstrates calling this method to begin an asynchronous authentication for the client.</span></span>  
  
[!code-cpp[NclNegoAsyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#2)]
[!code-csharp[NclNegoAsyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#2)]  
[!code-vb[NclNegoAsyncClient#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNegoasyncClient/VB/client.vb#2)] 

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17f1c-589">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-589">The authentication failed.</span></span> <span data-ttu-id="17f1c-590">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-590">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="17f1c-591">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-591">The authentication failed.</span></span> <span data-ttu-id="17f1c-592">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-592">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17f1c-593">This object has been closed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-593">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-594">Authentication has already occurred.</span><span class="sxs-lookup"><span data-stu-id="17f1c-594">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="17f1c-595">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-595">-or-</span></span>
  
 <span data-ttu-id="17f1c-596">This stream was used previously to attempt authentication as the server.</span><span class="sxs-lookup"><span data-stu-id="17f1c-596">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="17f1c-597">You cannot use the stream to retry authentication as the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-597">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="17f1c-598">для использования явного <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-598">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="17f1c-599">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-599">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, targetName, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="17f1c-600">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-600">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="17f1c-601">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span><span class="sxs-lookup"><span data-stu-id="17f1c-601">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="17f1c-602">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span><span class="sxs-lookup"><span data-stu-id="17f1c-602">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="17f1c-603">A user-defined object containing information about the write operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-603">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="17f1c-604">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span><span class="sxs-lookup"><span data-stu-id="17f1c-604">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="17f1c-605">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-605">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="17f1c-606">The authentication process uses the specified credentials.</span><span class="sxs-lookup"><span data-stu-id="17f1c-606">The authentication process uses the specified credentials.</span></span> <span data-ttu-id="17f1c-607">This method does not block.</span><span class="sxs-lookup"><span data-stu-id="17f1c-607">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="17f1c-608">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-608">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-609">Этот метод является асинхронным и не блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="17f1c-609">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="17f1c-610">Чтобы заблокировать блокировку до завершения операции, используйте одну из перегрузок метода <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-610">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="17f1c-611">Асинхронную операцию проверки подлинности необходимо выполнить, вызвав метод <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-611">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="17f1c-612">Как правило, метод вызывается делегатом `asyncCallback`.</span><span class="sxs-lookup"><span data-stu-id="17f1c-612">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="17f1c-613">Подробные сведения об использовании асинхронной модели программирования см. в разделе [асинхронное вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="17f1c-613">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="17f1c-614">Если проверка подлинности завершается неудачно, вы получаете <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-614">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="17f1c-615">В этом случае можно повторить попытку проверки подлинности с другими учетными данными.</span><span class="sxs-lookup"><span data-stu-id="17f1c-615">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17f1c-616"><paramref name="credential" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-616"><paramref name="credential" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="17f1c-617">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-617">-or-</span></span> 
 <span data-ttu-id="17f1c-618"><paramref name="targetName" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-618"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17f1c-619">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-619">The authentication failed.</span></span> <span data-ttu-id="17f1c-620">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-620">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="17f1c-621">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-621">The authentication failed.</span></span> <span data-ttu-id="17f1c-622">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-622">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17f1c-623">This object has been closed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-623">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-624">Authentication has already occurred.</span><span class="sxs-lookup"><span data-stu-id="17f1c-624">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="17f1c-625">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-625">-or-</span></span>
  
 <span data-ttu-id="17f1c-626">This stream was used previously to attempt authentication as the server.</span><span class="sxs-lookup"><span data-stu-id="17f1c-626">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="17f1c-627">You cannot use the stream to retry authentication as the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-627">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="17f1c-628">для использования явного <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-628">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="17f1c-629">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-629">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, binding, targetName, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="targetName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="17f1c-630">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-630">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="17f1c-631">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-631">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="17f1c-632">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span><span class="sxs-lookup"><span data-stu-id="17f1c-632">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="17f1c-633">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span><span class="sxs-lookup"><span data-stu-id="17f1c-633">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="17f1c-634">A user-defined object containing information about the write operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-634">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="17f1c-635">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span><span class="sxs-lookup"><span data-stu-id="17f1c-635">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="17f1c-636">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-636">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="17f1c-637">The authentication process uses the specified credentials and channel binding.</span><span class="sxs-lookup"><span data-stu-id="17f1c-637">The authentication process uses the specified credentials and channel binding.</span></span> <span data-ttu-id="17f1c-638">This method does not block.</span><span class="sxs-lookup"><span data-stu-id="17f1c-638">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="17f1c-639">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-639">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-640">Этот метод является асинхронным и не блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="17f1c-640">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="17f1c-641">Чтобы заблокировать блокировку до завершения операции, используйте одну из перегрузок метода <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-641">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="17f1c-642">Асинхронную операцию проверки подлинности необходимо выполнить, вызвав метод <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-642">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="17f1c-643">Как правило, метод вызывается делегатом `asyncCallback`.</span><span class="sxs-lookup"><span data-stu-id="17f1c-643">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="17f1c-644">Подробные сведения об использовании асинхронной модели программирования см. в разделе [асинхронное вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="17f1c-644">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="17f1c-645">Если проверка подлинности завершается неудачно, вы получаете <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-645">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="17f1c-646">В этом случае можно повторить попытку проверки подлинности с другими учетными данными.</span><span class="sxs-lookup"><span data-stu-id="17f1c-646">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17f1c-647"><paramref name="credential" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-647"><paramref name="credential" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="17f1c-648">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-648">-or-</span></span> 
 <span data-ttu-id="17f1c-649"><paramref name="targetName" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-649"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17f1c-650">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-650">The authentication failed.</span></span> <span data-ttu-id="17f1c-651">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-651">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="17f1c-652">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-652">The authentication failed.</span></span> <span data-ttu-id="17f1c-653">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-653">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-654">Authentication has already occurred.</span><span class="sxs-lookup"><span data-stu-id="17f1c-654">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="17f1c-655">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-655">-or-</span></span>
  
 <span data-ttu-id="17f1c-656">This stream was used previously to attempt authentication as the server.</span><span class="sxs-lookup"><span data-stu-id="17f1c-656">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="17f1c-657">You cannot use the stream to retry authentication as the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-657">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17f1c-658">This object has been closed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-658">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="17f1c-659">Интегрированная проверка подлинности Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="17f1c-659">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="17f1c-660">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-660">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="17f1c-661">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span><span class="sxs-lookup"><span data-stu-id="17f1c-661">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="17f1c-662">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span><span class="sxs-lookup"><span data-stu-id="17f1c-662">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="17f1c-663">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span><span class="sxs-lookup"><span data-stu-id="17f1c-663">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="17f1c-664">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span><span class="sxs-lookup"><span data-stu-id="17f1c-664">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="17f1c-665">A user-defined object containing information about the write operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-665">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="17f1c-666">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span><span class="sxs-lookup"><span data-stu-id="17f1c-666">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="17f1c-667">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-667">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="17f1c-668">The authentication process uses the specified credentials and authentication options.</span><span class="sxs-lookup"><span data-stu-id="17f1c-668">The authentication process uses the specified credentials and authentication options.</span></span> <span data-ttu-id="17f1c-669">This method does not block.</span><span class="sxs-lookup"><span data-stu-id="17f1c-669">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="17f1c-670">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-670">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-671">Используйте параметр `requiredProtectionLevel`, чтобы запросить службы безопасности для данных, передаваемых с помощью потока, прошедшего проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-671">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="17f1c-672">Например, чтобы данные были зашифрованы и подписаны, укажите значение <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-672">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="17f1c-673">Успешная проверка подлинности не гарантирует, что запрошенный <xref:System.Net.Security.ProtectionLevel> был предоставлен.</span><span class="sxs-lookup"><span data-stu-id="17f1c-673">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="17f1c-674">Чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>, необходимо проверить свойства <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-674">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="17f1c-675">Этот метод является асинхронным и не блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="17f1c-675">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="17f1c-676">Чтобы заблокировать блокировку до завершения операции, используйте одну из перегрузок метода <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-676">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="17f1c-677">Асинхронную операцию проверки подлинности необходимо выполнить, вызвав метод <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-677">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="17f1c-678">Как правило, метод вызывается делегатом `asyncCallback`.</span><span class="sxs-lookup"><span data-stu-id="17f1c-678">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="17f1c-679">Подробные сведения об использовании асинхронной модели программирования см. в разделе [асинхронное вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="17f1c-679">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="17f1c-680">Если проверка подлинности завершается неудачно, вы получаете <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-680">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="17f1c-681">В этом случае можно повторить попытку проверки подлинности с другими учетными данными.</span><span class="sxs-lookup"><span data-stu-id="17f1c-681">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17f1c-682"><paramref name="credential" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-682"><paramref name="credential" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="17f1c-683">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-683">-or-</span></span> 
 <span data-ttu-id="17f1c-684"><paramref name="targetName" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-684"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17f1c-685">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-685">The authentication failed.</span></span> <span data-ttu-id="17f1c-686">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-686">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="17f1c-687">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-687">The authentication failed.</span></span> <span data-ttu-id="17f1c-688">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-688">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17f1c-689">This object has been closed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-689">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-690">Authentication has already occurred.</span><span class="sxs-lookup"><span data-stu-id="17f1c-690">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="17f1c-691">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-691">-or-</span></span>
  
 <span data-ttu-id="17f1c-692">This stream was used previously to attempt authentication as the server.</span><span class="sxs-lookup"><span data-stu-id="17f1c-692">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="17f1c-693">You cannot use the stream to retry authentication as the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-693">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="17f1c-694">для использования явного <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-694">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="17f1c-695">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-695">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="targetName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="17f1c-696">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-696">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="17f1c-697">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-697">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="17f1c-698">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span><span class="sxs-lookup"><span data-stu-id="17f1c-698">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="17f1c-699">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span><span class="sxs-lookup"><span data-stu-id="17f1c-699">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="17f1c-700">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span><span class="sxs-lookup"><span data-stu-id="17f1c-700">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="17f1c-701">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span><span class="sxs-lookup"><span data-stu-id="17f1c-701">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="17f1c-702">A user-defined object containing information about the write operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-702">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="17f1c-703">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span><span class="sxs-lookup"><span data-stu-id="17f1c-703">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="17f1c-704">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-704">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="17f1c-705">The authentication process uses the specified credentials, authentication options, and channel binding.</span><span class="sxs-lookup"><span data-stu-id="17f1c-705">The authentication process uses the specified credentials, authentication options, and channel binding.</span></span> <span data-ttu-id="17f1c-706">This method does not block.</span><span class="sxs-lookup"><span data-stu-id="17f1c-706">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="17f1c-707">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-707">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-708">Используйте параметр `requiredProtectionLevel`, чтобы запросить службы безопасности для данных, передаваемых с помощью потока, прошедшего проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-708">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="17f1c-709">Например, чтобы данные были зашифрованы и подписаны, укажите значение <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-709">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="17f1c-710">Успешная проверка подлинности не гарантирует, что запрошенный <xref:System.Net.Security.ProtectionLevel> был предоставлен.</span><span class="sxs-lookup"><span data-stu-id="17f1c-710">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="17f1c-711">Чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>, необходимо проверить свойства <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-711">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="17f1c-712">Этот метод является асинхронным и не блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="17f1c-712">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="17f1c-713">Чтобы заблокировать блокировку до завершения операции, используйте одну из перегрузок метода <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-713">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="17f1c-714">Асинхронную операцию проверки подлинности необходимо выполнить, вызвав метод <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-714">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="17f1c-715">Как правило, метод вызывается делегатом `asyncCallback`.</span><span class="sxs-lookup"><span data-stu-id="17f1c-715">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="17f1c-716">Подробные сведения об использовании асинхронной модели программирования см. в разделе [асинхронное вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="17f1c-716">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="17f1c-717">Если проверка подлинности завершается неудачно, вы получаете <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-717">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="17f1c-718">В этом случае можно повторить попытку проверки подлинности с другими учетными данными.</span><span class="sxs-lookup"><span data-stu-id="17f1c-718">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17f1c-719"><paramref name="credential" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-719"><paramref name="credential" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="17f1c-720">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-720">-or-</span></span> 
 <span data-ttu-id="17f1c-721"><paramref name="targetName" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-721"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17f1c-722">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-722">The authentication failed.</span></span> <span data-ttu-id="17f1c-723">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-723">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="17f1c-724">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-724">The authentication failed.</span></span> <span data-ttu-id="17f1c-725">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-725">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-726">Authentication has already occurred.</span><span class="sxs-lookup"><span data-stu-id="17f1c-726">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="17f1c-727">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-727">-or-</span></span>
  
 <span data-ttu-id="17f1c-728">This stream was used previously to attempt authentication as the server.</span><span class="sxs-lookup"><span data-stu-id="17f1c-728">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="17f1c-729">You cannot use the stream to retry authentication as the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-729">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17f1c-730">This object has been closed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-730">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="17f1c-731">Интегрированная проверка подлинности Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="17f1c-731">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="17f1c-732">Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-732">Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-733">Перегрузки этого метода не блокируются, пока выполняется проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-733">The overloads of this method do not block while the authentication is in progress.</span></span> <span data-ttu-id="17f1c-734">Чтобы заблокировать ожидание завершения проверки подлинности, используйте метод <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-734">To block while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncCallback"><span data-ttu-id="17f1c-735">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span><span class="sxs-lookup"><span data-stu-id="17f1c-735">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="17f1c-736">A user-defined object containing information about the operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-736">A user-defined object containing information about the operation.</span></span> <span data-ttu-id="17f1c-737">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span><span class="sxs-lookup"><span data-stu-id="17f1c-737">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="17f1c-738">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-738">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="17f1c-739">This method does not block.</span><span class="sxs-lookup"><span data-stu-id="17f1c-739">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="17f1c-740">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-740">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-741">При проверке подлинности используется <xref:System.Net.CredentialCache.DefaultCredentials%2A>сервера.</span><span class="sxs-lookup"><span data-stu-id="17f1c-741">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="17f1c-742">Для сервера не указано имя участника-службы (SPN).</span><span class="sxs-lookup"><span data-stu-id="17f1c-742">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="17f1c-743">Уровень олицетворения — <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, уровень безопасности <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-743">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="17f1c-744">После завершения проверки подлинности необходимо проверить свойства <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A>, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-744">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="17f1c-745">Проверьте свойство <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>, чтобы определить, была ли выполнена взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-745">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="17f1c-746">Чтобы заблокировать блокировку до завершения операции, используйте одну из перегрузок метода <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-746">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="17f1c-747">Если проверка подлинности завершается неудачно, вы получаете <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-747">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="17f1c-748">В этом случае можно повторить попытку проверки подлинности с другими учетными данными.</span><span class="sxs-lookup"><span data-stu-id="17f1c-748">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17f1c-749">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-749">The authentication failed.</span></span> <span data-ttu-id="17f1c-750">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-750">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="17f1c-751">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-751">The authentication failed.</span></span> <span data-ttu-id="17f1c-752">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-752">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17f1c-753">This object has been closed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-753">This object has been closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17f1c-754">Windows 95 and Windows 98 are not supported.</span><span class="sxs-lookup"><span data-stu-id="17f1c-754">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="17f1c-755">для использования явного <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-755">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="17f1c-756">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-756">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (policy, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="policy"><span data-ttu-id="17f1c-757">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-757">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="17f1c-758">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span><span class="sxs-lookup"><span data-stu-id="17f1c-758">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="17f1c-759">A user-defined object containing information about the write operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-759">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="17f1c-760">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span><span class="sxs-lookup"><span data-stu-id="17f1c-760">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="17f1c-761">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-761">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="17f1c-762">The authentication process uses the specified extended protection policy.</span><span class="sxs-lookup"><span data-stu-id="17f1c-762">The authentication process uses the specified extended protection policy.</span></span> <span data-ttu-id="17f1c-763">This method does not block.</span><span class="sxs-lookup"><span data-stu-id="17f1c-763">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="17f1c-764">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-764">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-765">При проверке подлинности используется <xref:System.Net.CredentialCache.DefaultCredentials%2A>сервера.</span><span class="sxs-lookup"><span data-stu-id="17f1c-765">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="17f1c-766">Для сервера не указано имя участника-службы (SPN).</span><span class="sxs-lookup"><span data-stu-id="17f1c-766">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="17f1c-767">Уровень олицетворения — <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, уровень безопасности <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-767">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="17f1c-768">Если параметр `policy` имеет значение `null`, используется расширенная политика защиты, в которой для <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> задано значение <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-768">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="17f1c-769">После завершения проверки подлинности необходимо проверить свойства <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A>, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-769">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="17f1c-770">Проверьте свойство <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>, чтобы определить, была ли выполнена взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-770">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="17f1c-771">Чтобы заблокировать блокировку до завершения операции, используйте одну из перегрузок метода <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-771">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="17f1c-772">Если проверка подлинности завершается неудачно, вы получаете <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-772">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="17f1c-773">В этом случае можно повторить попытку проверки подлинности с другими учетными данными.</span><span class="sxs-lookup"><span data-stu-id="17f1c-773">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17f1c-774">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-774">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17f1c-775">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-775">The authentication failed.</span></span> <span data-ttu-id="17f1c-776">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-776">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="17f1c-777">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-777">The authentication failed.</span></span> <span data-ttu-id="17f1c-778">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-778">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17f1c-779">Windows 95 and Windows 98 are not supported.</span><span class="sxs-lookup"><span data-stu-id="17f1c-779">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17f1c-780">This object has been closed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-780">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="17f1c-781">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-781">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="17f1c-782">Интегрированная проверка подлинности Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="17f1c-782">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (credential, requiredProtectionLevel, requiredImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="17f1c-783">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-783">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="17f1c-784">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span><span class="sxs-lookup"><span data-stu-id="17f1c-784">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="17f1c-785">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span><span class="sxs-lookup"><span data-stu-id="17f1c-785">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="17f1c-786">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span><span class="sxs-lookup"><span data-stu-id="17f1c-786">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="17f1c-787">A user-defined object containing information about the operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-787">A user-defined object containing information about the operation.</span></span> <span data-ttu-id="17f1c-788">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span><span class="sxs-lookup"><span data-stu-id="17f1c-788">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="17f1c-789">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-789">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="17f1c-790">The authentication process uses the specified server credentials and authentication options.</span><span class="sxs-lookup"><span data-stu-id="17f1c-790">The authentication process uses the specified server credentials and authentication options.</span></span> <span data-ttu-id="17f1c-791">This method does not block.</span><span class="sxs-lookup"><span data-stu-id="17f1c-791">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="17f1c-792">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-792">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-793">Используйте параметр `requiredProtectionLevel`, чтобы запросить службы безопасности для данных, передаваемых с помощью потока, прошедшего проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-793">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="17f1c-794">Например, чтобы данные были зашифрованы и подписаны, укажите значение <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-794">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="17f1c-795">Успешная проверка подлинности не гарантирует, что запрошенный <xref:System.Net.Security.ProtectionLevel> был предоставлен.</span><span class="sxs-lookup"><span data-stu-id="17f1c-795">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="17f1c-796">Чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>, необходимо проверить свойства <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-796">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="17f1c-797">Этот метод является асинхронным и не блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="17f1c-797">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="17f1c-798">Чтобы заблокировать блокировку до завершения операции, используйте одну из перегрузок метода <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-798">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="17f1c-799">Асинхронную операцию проверки подлинности необходимо выполнить, вызвав метод <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-799">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="17f1c-800">Как правило, метод вызывается делегатом `asyncCallback`.</span><span class="sxs-lookup"><span data-stu-id="17f1c-800">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="17f1c-801">Подробные сведения об использовании асинхронной модели программирования см. в разделе [асинхронное вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="17f1c-801">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="17f1c-802">Если проверка подлинности завершается неудачно, вы получаете <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-802">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="17f1c-803">В этом случае можно повторить попытку проверки подлинности с другими учетными данными.</span><span class="sxs-lookup"><span data-stu-id="17f1c-803">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17f1c-804"><paramref name="credential" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-804"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="17f1c-805"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span><span class="sxs-lookup"><span data-stu-id="17f1c-805"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17f1c-806">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-806">The authentication failed.</span></span> <span data-ttu-id="17f1c-807">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-807">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="17f1c-808">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-808">The authentication failed.</span></span> <span data-ttu-id="17f1c-809">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-809">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17f1c-810">This object has been closed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-810">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-811">Authentication has already occurred.</span><span class="sxs-lookup"><span data-stu-id="17f1c-811">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="17f1c-812">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-812">-or-</span></span>
  
 <span data-ttu-id="17f1c-813">This stream was used previously to attempt authentication as the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-813">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="17f1c-814">You cannot use the stream to retry authentication as the server.</span><span class="sxs-lookup"><span data-stu-id="17f1c-814">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17f1c-815">Windows 95 and Windows 98 are not supported.</span><span class="sxs-lookup"><span data-stu-id="17f1c-815">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="17f1c-816">для использования явного <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-816">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="17f1c-817">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-817">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (credential, policy, requiredProtectionLevel, requiredImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="17f1c-818">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-818">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="policy"><span data-ttu-id="17f1c-819">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-819">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="17f1c-820">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span><span class="sxs-lookup"><span data-stu-id="17f1c-820">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="17f1c-821">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span><span class="sxs-lookup"><span data-stu-id="17f1c-821">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="17f1c-822">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span><span class="sxs-lookup"><span data-stu-id="17f1c-822">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="17f1c-823">A user-defined object containing information about the write operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-823">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="17f1c-824">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span><span class="sxs-lookup"><span data-stu-id="17f1c-824">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="17f1c-825">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-825">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="17f1c-826">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span><span class="sxs-lookup"><span data-stu-id="17f1c-826">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span></span> <span data-ttu-id="17f1c-827">This method does not block.</span><span class="sxs-lookup"><span data-stu-id="17f1c-827">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="17f1c-828">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-828">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-829">Используйте параметр `requiredProtectionLevel`, чтобы запросить службы безопасности для данных, передаваемых с помощью потока, прошедшего проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-829">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="17f1c-830">Например, чтобы данные были зашифрованы и подписаны, укажите значение <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-830">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="17f1c-831">Успешная проверка подлинности не гарантирует, что запрошенный <xref:System.Net.Security.ProtectionLevel> был предоставлен.</span><span class="sxs-lookup"><span data-stu-id="17f1c-831">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="17f1c-832">Чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>, необходимо проверить свойства <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-832">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="17f1c-833">Если параметр `policy` имеет значение `null`, используется расширенная политика защиты, в которой для <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> задано значение <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-833">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="17f1c-834">Этот метод является асинхронным и не блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="17f1c-834">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="17f1c-835">Чтобы заблокировать блокировку до завершения операции, используйте одну из перегрузок метода <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-835">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="17f1c-836">Асинхронную операцию проверки подлинности необходимо выполнить, вызвав метод <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-836">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="17f1c-837">Как правило, метод вызывается делегатом `asyncCallback`.</span><span class="sxs-lookup"><span data-stu-id="17f1c-837">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="17f1c-838">Подробные сведения об использовании асинхронной модели программирования см. в разделе [асинхронное вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="17f1c-838">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="17f1c-839">Если проверка подлинности завершается неудачно, вы получаете <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-839">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="17f1c-840">В этом случае можно повторить попытку проверки подлинности с другими учетными данными.</span><span class="sxs-lookup"><span data-stu-id="17f1c-840">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17f1c-841">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-841">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17f1c-842"><paramref name="credential" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-842"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="17f1c-843"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span><span class="sxs-lookup"><span data-stu-id="17f1c-843"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17f1c-844">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-844">The authentication failed.</span></span> <span data-ttu-id="17f1c-845">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-845">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="17f1c-846">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-846">The authentication failed.</span></span> <span data-ttu-id="17f1c-847">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-847">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-848">Authentication has already occurred.</span><span class="sxs-lookup"><span data-stu-id="17f1c-848">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="17f1c-849">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-849">-or-</span></span>
  
 <span data-ttu-id="17f1c-850">This stream was used previously to attempt authentication as the client.</span><span class="sxs-lookup"><span data-stu-id="17f1c-850">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="17f1c-851">You cannot use the stream to retry authentication as the server.</span><span class="sxs-lookup"><span data-stu-id="17f1c-851">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17f1c-852">Windows 95 and Windows 98 are not supported.</span><span class="sxs-lookup"><span data-stu-id="17f1c-852">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17f1c-853">This object has been closed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-853">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="17f1c-854">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span><span class="sxs-lookup"><span data-stu-id="17f1c-854">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="17f1c-855">Интегрированная проверка подлинности Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="17f1c-855">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginRead (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="17f1c-856">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span><span class="sxs-lookup"><span data-stu-id="17f1c-856">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="17f1c-857">The zero-based location in <paramref name="buffer" /> at which to begin storing the data read from this stream.</span><span class="sxs-lookup"><span data-stu-id="17f1c-857">The zero-based location in <paramref name="buffer" /> at which to begin storing the data read from this stream.</span></span></param>
        <param name="count"><span data-ttu-id="17f1c-858">The maximum number of bytes to read from the stream.</span><span class="sxs-lookup"><span data-stu-id="17f1c-858">The maximum number of bytes to read from the stream.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="17f1c-859">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete.</span><span class="sxs-lookup"><span data-stu-id="17f1c-859">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="17f1c-860">A user-defined object containing information about the read operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-860">A user-defined object containing information about the read operation.</span></span> <span data-ttu-id="17f1c-861">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span><span class="sxs-lookup"><span data-stu-id="17f1c-861">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="17f1c-862">Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</span><span class="sxs-lookup"><span data-stu-id="17f1c-862">Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</span></span></summary>
        <returns><span data-ttu-id="17f1c-863">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-863">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-864">Если шифрование, подписывание или шифрование и подписывание разрешены, операция чтения считывает данные из базового потока, проверяет целостность данных и расшифровывает их.</span><span class="sxs-lookup"><span data-stu-id="17f1c-864">If encryption, signing, or encryption and signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and decrypts it.</span></span> <span data-ttu-id="17f1c-865">Если службы безопасности, такие как шифрование данных или подписывание, не используются, этот метод запускает асинхронную операцию чтения в базовом потоке.</span><span class="sxs-lookup"><span data-stu-id="17f1c-865">If no security services such as data encryption or signing are in use, this method starts an asynchronous read operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="17f1c-866">Этот метод является асинхронным и не блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="17f1c-866">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="17f1c-867">Для блокировки до завершения операции используйте метод <xref:System.Net.Security.NegotiateStream.Read%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-867">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="17f1c-868">Асинхронная операция чтения должна быть завершена путем вызова метода <xref:System.Net.Security.NegotiateStream.EndRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-868">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndRead%2A> method.</span></span> <span data-ttu-id="17f1c-869">Как правило, метод вызывается делегатом `asyncCallback`.</span><span class="sxs-lookup"><span data-stu-id="17f1c-869">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="17f1c-870">Подробные сведения об использовании асинхронной модели программирования см. в разделе [асинхронное вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="17f1c-870">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="17f1c-871">Класс <xref:System.Net.Security.NegotiateStream> не поддерживает несколько одновременных операций чтения.</span><span class="sxs-lookup"><span data-stu-id="17f1c-871">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous read operations.</span></span> <span data-ttu-id="17f1c-872">При попытке запустить операцию чтения, пока другая операция чтения уже выполняется в том же потоке, будет создано исключение <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-872">If you attempt to start a read operation while another read operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="17f1c-873">Этот метод нельзя вызвать до тех пор, пока не будет выполнена проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-873">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="17f1c-874">Для проверки подлинности вызовите один из методов <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>или <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-874">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f1c-875">В следующем примере кода показано, как запустить асинхронную операцию чтения.</span><span class="sxs-lookup"><span data-stu-id="17f1c-875">The following code example demonstrates starting an asynchronous read operation.</span></span> <span data-ttu-id="17f1c-876">Этот пример кода является частью большого примера, приведенного для класса <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-876">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#1)]
 [!code-csharp[NclNegoAsyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17f1c-877"><paramref name="buffer" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-877"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17f1c-878"><paramref name="offset" /> is less than 0.</span><span class="sxs-lookup"><span data-stu-id="17f1c-878"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="17f1c-879">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-879">-or-</span></span> 
 <span data-ttu-id="17f1c-880"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-880"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="17f1c-881">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-881">-or-</span></span> 
 <span data-ttu-id="17f1c-882"><paramref name="offset" /> plus <paramref name="count" /> is greater than the length of <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-882"><paramref name="offset" /> plus <paramref name="count" /> is greater than the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="17f1c-883">The read operation failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-883">The read operation failed.</span></span>  
  
<span data-ttu-id="17f1c-884">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-884">-or-</span></span>
  
 <span data-ttu-id="17f1c-885">Encryption is in use, but the data could not be decrypted.</span><span class="sxs-lookup"><span data-stu-id="17f1c-885">Encryption is in use, but the data could not be decrypted.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17f1c-886">There is already a read operation in progress.</span><span class="sxs-lookup"><span data-stu-id="17f1c-886">There is already a read operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17f1c-887">This object has been closed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-887">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-888">Authentication has not occurred.</span><span class="sxs-lookup"><span data-stu-id="17f1c-888">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginWrite (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="17f1c-889">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</span><span class="sxs-lookup"><span data-stu-id="17f1c-889">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="17f1c-890">The zero-based location in <paramref name="buffer" /> at which to begin reading bytes to be written to the stream.</span><span class="sxs-lookup"><span data-stu-id="17f1c-890">The zero-based location in <paramref name="buffer" /> at which to begin reading bytes to be written to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="17f1c-891">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-891">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <paramref name="buffer" />.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="17f1c-892">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete.</span><span class="sxs-lookup"><span data-stu-id="17f1c-892">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="17f1c-893">A user-defined object containing information about the write operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-893">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="17f1c-894">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span><span class="sxs-lookup"><span data-stu-id="17f1c-894">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="17f1c-895">Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</span><span class="sxs-lookup"><span data-stu-id="17f1c-895">Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</span></span></summary>
        <returns><span data-ttu-id="17f1c-896">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-896">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-897">Если шифрование, подписывание или шифрование и подпись включены, этот метод считывает данные из буфера, шифрует, подписывает или шифрует и подписывает их, а затем передает их с помощью базового потока.</span><span class="sxs-lookup"><span data-stu-id="17f1c-897">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="17f1c-898">Если службы безопасности, такие как шифрование данных или подписывание, не используются, этот метод запускает асинхронную операцию записи в базовом потоке.</span><span class="sxs-lookup"><span data-stu-id="17f1c-898">If no security services such as data encryption or signing are in use, this method starts an asynchronous write operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="17f1c-899">Этот метод является асинхронным и не блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="17f1c-899">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="17f1c-900">Для блокировки до завершения операции используйте метод <xref:System.Net.Security.NegotiateStream.Read%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-900">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="17f1c-901">Асинхронная операция чтения должна быть завершена путем вызова метода <xref:System.Net.Security.NegotiateStream.EndWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-901">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndWrite%2A> method.</span></span> <span data-ttu-id="17f1c-902">Как правило, метод вызывается делегатом `asyncCallback`.</span><span class="sxs-lookup"><span data-stu-id="17f1c-902">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="17f1c-903">Подробные сведения об использовании асинхронной модели программирования см. в разделе [асинхронное вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="17f1c-903">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="17f1c-904">Класс <xref:System.Net.Security.NegotiateStream> не поддерживает несколько одновременных операций записи.</span><span class="sxs-lookup"><span data-stu-id="17f1c-904">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="17f1c-905">При попытке запустить операцию записи в то время, когда другая операция записи уже выполняется в том же потоке, будет создано исключение <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-905">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="17f1c-906">Этот метод нельзя вызвать до тех пор, пока не будет выполнена проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-906">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="17f1c-907">Для проверки подлинности вызовите один из методов <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>или <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-907">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
<span data-ttu-id="17f1c-908">В следующем примере показано, как начать асинхронную операцию записи.</span><span class="sxs-lookup"><span data-stu-id="17f1c-908">The following example demonstrates beginning an asynchronous write operation.</span></span>  
  
[!code-cpp[NclNegoAsyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#3)]
[!code-csharp[NclNegoAsyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#3)]  
[!code-vb[NclNegoAsyncClient#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNegoasyncClient/VB/client.vb#3)] 

<span data-ttu-id="17f1c-909">При завершении операции вызывается следующий метод.</span><span class="sxs-lookup"><span data-stu-id="17f1c-909">The following method is called when the operation completes.</span></span>  
  
[!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
[!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
[!code-vb[NclNegoAsyncClient#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNegoasyncClient/VB/client.vb#4)] 

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17f1c-910"><paramref name="buffer" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-910"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17f1c-911"><paramref name="offset is less than 0" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-911"><paramref name="offset is less than 0" />.</span></span>  
  
<span data-ttu-id="17f1c-912">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-912">-or-</span></span> 
 <span data-ttu-id="17f1c-913"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-913"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="17f1c-914">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-914">-or-</span></span> 
 <span data-ttu-id="17f1c-915"><paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-915"><paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="17f1c-916">The write operation failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-916">The write operation failed.</span></span>  
  
<span data-ttu-id="17f1c-917">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-917">-or-</span></span>
  
 <span data-ttu-id="17f1c-918">Encryption is in use, but the data could not be encrypted.</span><span class="sxs-lookup"><span data-stu-id="17f1c-918">Encryption is in use, but the data could not be encrypted.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17f1c-919">There is already a write operation in progress.</span><span class="sxs-lookup"><span data-stu-id="17f1c-919">There is already a write operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17f1c-920">This object has been closed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-920">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-921">Authentication has not occurred.</span><span class="sxs-lookup"><span data-stu-id="17f1c-921">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Net.Security.NegotiateStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f1c-922">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</span><span class="sxs-lookup"><span data-stu-id="17f1c-922">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</span></span></summary>
        <value><span data-ttu-id="17f1c-923"><see langword="true" />, если выполнена проверка подлинности и базовый поток доступен для чтения; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-923"><see langword="true" /> if authentication has occurred and the underlying stream is readable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-924">В случае успешной проверки подлинности это свойство возвращает значение, возвращаемое при вызове свойства <xref:System.IO.Stream.CanRead%2A> базового потока.</span><span class="sxs-lookup"><span data-stu-id="17f1c-924">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanRead%2A> property on the underlying stream.</span></span> <span data-ttu-id="17f1c-925">Базовый поток указывается при создании экземпляра класса <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-925">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f1c-926">В следующем примере кода показано, как отобразить значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="17f1c-926">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Net.Security.NegotiateStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f1c-927">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</span><span class="sxs-lookup"><span data-stu-id="17f1c-927">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</span></span></summary>
        <value><span data-ttu-id="17f1c-928">Данное свойство всегда возвращает значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-928">This property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-929">Не следует пытаться задать расположение объекта <xref:System.Net.Security.NegotiateStream> или его базового потока.</span><span class="sxs-lookup"><span data-stu-id="17f1c-929">You should not attempt to set the position of the <xref:System.Net.Security.NegotiateStream> object or its underlying stream.</span></span> <span data-ttu-id="17f1c-930">Базовый поток указывается при создании экземпляра класса <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-930">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f1c-931">В следующем примере кода показано, как отобразить значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="17f1c-931">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Security.NegotiateStream.Position" />
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.Net.Security.NegotiateStream.CanTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f1c-932">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</span><span class="sxs-lookup"><span data-stu-id="17f1c-932">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</span></span></summary>
        <value><span data-ttu-id="17f1c-933"><see langword="true" />, если базовый поток поддерживает тайм-ауты; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-933"><see langword="true" /> if the underlying stream supports time-outs; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-934">Это свойство возвращает значение, возвращаемое при вызове свойства <xref:System.IO.Stream.CanTimeout%2A> базового потока.</span><span class="sxs-lookup"><span data-stu-id="17f1c-934">This property returns the value returned by invoking the <xref:System.IO.Stream.CanTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="17f1c-935">Базовый поток указывается при создании экземпляра класса <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-935">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f1c-936">В следующем примере кода показано, как отобразить значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="17f1c-936">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Net.Security.NegotiateStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f1c-937">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</span><span class="sxs-lookup"><span data-stu-id="17f1c-937">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</span></span></summary>
        <value><span data-ttu-id="17f1c-938"><see langword="true" />, если выполнена проверка подлинности и базовый поток доступен для записи; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-938"><see langword="true" /> if authentication has occurred and the underlying stream is writable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-939">В случае успешной проверки подлинности это свойство возвращает значение, возвращаемое при вызове свойства <xref:System.IO.Stream.CanWrite%2A> базового потока.</span><span class="sxs-lookup"><span data-stu-id="17f1c-939">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanWrite%2A> property on the underlying stream.</span></span> <span data-ttu-id="17f1c-940">Базовый поток указывается при создании экземпляра класса <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-940">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f1c-941">В следующем примере кода показано, как отобразить значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="17f1c-941">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="negotiateStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="17f1c-942"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span><span class="sxs-lookup"><span data-stu-id="17f1c-942"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="17f1c-943">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.NegotiateStream" /> and optionally releases the managed resources.</span><span class="sxs-lookup"><span data-stu-id="17f1c-943">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.NegotiateStream" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-944">Этот метод вызывается методом Public `Dispose()` и методом <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-944">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="17f1c-945">`Dispose()` вызывает защищенный метод `Dispose(Boolean)` с параметром `disposing`, для которого задано значение `true`.</span><span class="sxs-lookup"><span data-stu-id="17f1c-945">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="17f1c-946"><xref:System.Object.Finalize%2A> вызывает `Dispose`, для `disposing` задано значение `false`.</span><span class="sxs-lookup"><span data-stu-id="17f1c-946"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="17f1c-947">Если параметр `disposing` имеет значение true, этот метод освобождает все ресурсы, удерживаемые всеми управляемыми объектами, на которые ссылается этот <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-947">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Security.NegotiateStream> references.</span></span> <span data-ttu-id="17f1c-948">Этот метод вызывает метод `Dispose()` каждого объекта, на который есть ссылка.</span><span class="sxs-lookup"><span data-stu-id="17f1c-948">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="17f1c-949">
            <see langword="Dispose" /> можно вызывать несколько раз другими объектами.</span><span class="sxs-lookup"><span data-stu-id="17f1c-949">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="17f1c-950">При переопределении <see langword="Dispose(Boolean)" /> следует избегать ссылок на объекты, которые ранее были удалены в предыдущем вызове <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-950">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="17f1c-951">Дополнительные сведения о реализации <see langword="Dispose(Boolean)" />см. в разделе [Реализация метода Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="17f1c-951">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="17f1c-952">Дополнительные сведения о <see langword="Dispose" /> и <see cref="M:System.Object.Finalize" />см. в разделе [Очистка неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [Переопределение метода Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="17f1c-952">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="negotiateStream.DisposeAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17f1c-953">Asynchronously releases the unmanaged and managed resources used by the <see cref="T:System.Net.Security.NegotiateStream" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-953">Asynchronously releases the unmanaged and managed resources used by the <see cref="T:System.Net.Security.NegotiateStream" />.</span></span></summary>
        <returns><span data-ttu-id="17f1c-954">A task that represents the asynchronous dispose operation.</span><span class="sxs-lookup"><span data-stu-id="17f1c-954">A task that represents the asynchronous dispose operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-955">Этот метод позволяет выполнять ресурсоемкие операции удаления без блокировки основного потока.</span><span class="sxs-lookup"><span data-stu-id="17f1c-955">This method enables you to perform a resource-intensive dispose operation without blocking the main thread.</span></span> 

 <span data-ttu-id="17f1c-956">Этот метод также удаляет внутренний поток, когда <xref:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen> `false`; в противном случае внутренний поток просто очищается.</span><span class="sxs-lookup"><span data-stu-id="17f1c-956">This method also disposes the inner stream when <xref:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen> is `false`; otherwise, the inner stream is just flushed.</span></span>
 
 <span data-ttu-id="17f1c-957">Вызов `DisposeAsync` позволяет перераспределить ресурсы, используемые <xref:System.Net.Security.NegotiateStream>, для других целей.</span><span class="sxs-lookup"><span data-stu-id="17f1c-957">Calling `DisposeAsync` allows the resources used by the <xref:System.Net.Security.NegotiateStream> to be reallocated for other purposes.</span></span> <span data-ttu-id="17f1c-958">Дополнительные сведения см. в разделе [Очистка неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="17f1c-958">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsClient (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsClient(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsClient : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsClient : IAsyncResult -&gt; unit" Usage="negotiateStream.EndAuthenticateAsClient asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="17f1c-959">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-959">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span></span></param>
        <summary><span data-ttu-id="17f1c-960">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-960">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-961">Если операция не завершена, этот метод блокируется до тех пор, пока он не завершится.</span><span class="sxs-lookup"><span data-stu-id="17f1c-961">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="17f1c-962">После завершения проверки подлинности необходимо проверить свойства <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A>, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-962">When the authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="17f1c-963">Проверьте свойство <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>, чтобы определить, была ли выполнена взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-963">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="17f1c-964">Если проверка подлинности завершается неудачно, вы получаете <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-964">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="17f1c-965">В этом случае можно повторить попытку проверки подлинности с другими учетными данными.</span><span class="sxs-lookup"><span data-stu-id="17f1c-965">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="17f1c-966">Чтобы выполнить эту операцию синхронно, используйте один из методов <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-966">To perform this operation synchronously, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17f1c-967"><paramref name="asyncResult" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-967"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17f1c-968"><paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-968"><paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17f1c-969">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-969">The authentication failed.</span></span> <span data-ttu-id="17f1c-970">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-970">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="17f1c-971">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-971">The authentication failed.</span></span> <span data-ttu-id="17f1c-972">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-972">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-973">There is no pending client authentication to complete.</span><span class="sxs-lookup"><span data-stu-id="17f1c-973">There is no pending client authentication to complete.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsServer(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsServer (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsServer(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsServer : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsServer : IAsyncResult -&gt; unit" Usage="negotiateStream.EndAuthenticateAsServer asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="17f1c-974">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-974">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span></span></param>
        <summary><span data-ttu-id="17f1c-975">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-975">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-976">Если операция не завершена, этот метод блокируется до тех пор, пока он не завершится.</span><span class="sxs-lookup"><span data-stu-id="17f1c-976">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="17f1c-977">После завершения проверки подлинности необходимо проверить свойства <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A>, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-977">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="17f1c-978">Проверьте свойство <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A>, чтобы определить, была ли выполнена взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-978">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="17f1c-979">Если проверка подлинности завершается неудачно, вы получаете <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-979">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="17f1c-980">В этом случае можно повторить попытку проверки подлинности с другими учетными данными.</span><span class="sxs-lookup"><span data-stu-id="17f1c-980">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="17f1c-981">Чтобы выполнить эту операцию синхронно, используйте метод <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-981">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17f1c-982"><paramref name="asyncResult" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-982"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17f1c-983"><paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-983"><paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="17f1c-984">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-984">The authentication failed.</span></span> <span data-ttu-id="17f1c-985">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-985">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="17f1c-986">The authentication failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-986">The authentication failed.</span></span> <span data-ttu-id="17f1c-987">You can use this object to retry the authentication.</span><span class="sxs-lookup"><span data-stu-id="17f1c-987">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-988">There is no pending authentication to complete.</span><span class="sxs-lookup"><span data-stu-id="17f1c-988">There is no pending authentication to complete.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="negotiateStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="17f1c-989">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span><span class="sxs-lookup"><span data-stu-id="17f1c-989">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span></span></param>
        <summary><span data-ttu-id="17f1c-990">Ends an asynchronous read operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-990">Ends an asynchronous read operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="17f1c-991">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span><span class="sxs-lookup"><span data-stu-id="17f1c-991">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-992">Если операция не завершена, этот метод блокируется до тех пор, пока он не завершится.</span><span class="sxs-lookup"><span data-stu-id="17f1c-992">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="17f1c-993">Чтобы выполнить эту операцию синхронно, используйте метод <xref:System.Net.Security.NegotiateStream.Read%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-993">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="17f1c-994">Этот метод нельзя вызвать до тех пор, пока не будет выполнена проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-994">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="17f1c-995">Для проверки подлинности вызовите один из методов <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>или <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-995">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f1c-996">В следующем примере кода показано завершение асинхронной операции чтения.</span><span class="sxs-lookup"><span data-stu-id="17f1c-996">The following code example demonstrates ending an asynchronous read operation.</span></span> <span data-ttu-id="17f1c-997">Пример, демонстрирующий запуск операции, см. в разделе <xref:System.Net.Security.NegotiateStream.BeginRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-997">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginRead%2A>.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#3)]
 [!code-csharp[NclNegoAsyncServer#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17f1c-998"><paramref name="asyncResult" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-998"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17f1c-999">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-999">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-1000">There is no pending read operation to complete.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1000">There is no pending read operation to complete.</span></span>

<span data-ttu-id="17f1c-1001">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-1001">-or-</span></span>

<span data-ttu-id="17f1c-1002">Authentication has not occurred.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1002">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="17f1c-1003">The read operation failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1003">The read operation failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="negotiateStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="17f1c-1004">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span><span class="sxs-lookup"><span data-stu-id="17f1c-1004">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span></span></param>
        <summary><span data-ttu-id="17f1c-1005">Ends an asynchronous write operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1005">Ends an asynchronous write operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-1006">Если операция не завершена, этот метод блокируется до тех пор, пока он не завершится.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1006">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="17f1c-1007">Этот метод нельзя вызвать до тех пор, пока не будет выполнена проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1007">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="17f1c-1008">Для проверки подлинности вызовите один из методов <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>или <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1008">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="17f1c-1009">Чтобы выполнить эту операцию синхронно, используйте метод <xref:System.Net.Security.NegotiateStream.Write%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1009">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
   
  
## Examples  
<span data-ttu-id="17f1c-1010">В следующем примере показан метод, который вызывается для завершения асинхронной операции записи.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1010">The following example demonstrates a method that is called to complete the asynchronous write operation.</span></span> <span data-ttu-id="17f1c-1011">Пример, демонстрирующий запуск операции, см. в разделе <xref:System.Net.Security.NegotiateStream.BeginWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1011">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginWrite%2A>.</span></span>  
  
[!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
[!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
[!code-vb[NclNegoAsyncClient#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNegoasyncClient/VB/client.vb#4)] 

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17f1c-1012"><paramref name="asyncResult" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1012"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17f1c-1013">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1013">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-1014">There is no pending write operation to complete.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1014">There is no pending write operation to complete.</span></span>

<span data-ttu-id="17f1c-1015">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-1015">-or-</span></span>

<span data-ttu-id="17f1c-1016">Authentication has not occurred.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1016">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="17f1c-1017">The write operation failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1017">The write operation failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="negotiateStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17f1c-1018">Causes any buffered data to be written to the underlying device.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1018">Causes any buffered data to be written to the underlying device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-1019">Этот метод вызывает <xref:System.IO.Stream.Flush%2A> в базовом потоке.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1019">This method invokes <xref:System.IO.Stream.Flush%2A> on the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f1c-1020">В следующем примере кода показано, как сбросить поток.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1020">The following code example demonstrates flushing the stream.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.ImpersonationLevel : System.Security.Principal.TokenImpersonationLevel" Usage="System.Net.Security.NegotiateStream.ImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f1c-1021">Gets a value that indicates how the server can use the client's credentials.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1021">Gets a value that indicates how the server can use the client's credentials.</span></span></summary>
        <value><span data-ttu-id="17f1c-1022">Одно из значений <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1022">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-1023">Необходимо успешно пройти проверку подлинности перед вызовом этого метода.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1023">You must successfully authenticate before calling this method.</span></span> <span data-ttu-id="17f1c-1024">Клиенты указывают уровень олицетворения при запросе проверки подлинности путем вызова одного из методов <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> или <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1024">Clients specify the impersonation level when they request authentication by calling one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="17f1c-1025">При проверке подлинности без указания <xref:System.Security.Principal.TokenImpersonationLevel> используется <xref:System.Security.Principal.TokenImpersonationLevel.Identification>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1025">If you authenticate without specifying a <xref:System.Security.Principal.TokenImpersonationLevel> , <xref:System.Security.Principal.TokenImpersonationLevel.Identification> is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f1c-1026">В следующем примере кода показано, как отобразить значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1026">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-1027">Authentication failed or has not occurred.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1027">Authentication failed or has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Net.Security.NegotiateStream.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f1c-1028">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1028">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span></span></summary>
        <value><span data-ttu-id="17f1c-1029"><see langword="true" />, если произошла успешная проверка подлинности; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1029"><see langword="true" /> if successful authentication occurred; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-1030">Клиенты проходят проверку подлинности, вызывая методы <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> или <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1030">Clients authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="17f1c-1031">Серверы проходят проверку подлинности путем вызова методов <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> или <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1031">Servers authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f1c-1032">В следующем примере кода показано, как отобразить значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1032">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncrypted">
      <MemberSignature Language="C#" Value="public override bool IsEncrypted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEncrypted" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsEncrypted" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEncrypted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEncrypted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEncrypted : bool" Usage="System.Net.Security.NegotiateStream.IsEncrypted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f1c-1033">Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.NegotiateStream" /> uses data encryption.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1033">Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.NegotiateStream" /> uses data encryption.</span></span></summary>
        <value><span data-ttu-id="17f1c-1034"><see langword="true" />, если данные шифруются перед передачей по сети и расшифровываются при достижении удаленной конечной точки; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1034"><see langword="true" /> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-1035">Шифрование помогает защитить конфиденциальность данных. а именно, это помогает гарантировать, что при передаче данные не могут быть расшифрованы третьими сторонами.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1035">Encryption helps to protect the privacy of the data; namely, it helps to ensure that while data is in transit it cannot be deciphered by third parties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f1c-1036">В следующем примере кода показано, как отобразить значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1036">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Security.ProtectionLevel" />
      </Docs>
    </Member>
    <Member MemberName="IsMutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsMutuallyAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutuallyAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsMutuallyAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMutuallyAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMutuallyAuthenticated : bool" Usage="System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f1c-1037">Gets a <see cref="T:System.Boolean" /> value that indicates whether both the server and the client have been authenticated.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1037">Gets a <see cref="T:System.Boolean" /> value that indicates whether both the server and the client have been authenticated.</span></span></summary>
        <value><span data-ttu-id="17f1c-1038"><see langword="true" />, если сервер прошел проверку подлинности; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1038"><see langword="true" /> if the server has been authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-1039">Взаимная проверка подлинности задается клиентом, когда клиенту требуется, чтобы сервер предоставил учетные данные для проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1039">Mutual authentication is specified by the client when the client wants the server to provide credentials for authentication.</span></span> <span data-ttu-id="17f1c-1040">По умолчанию клиенты запрашивают взаимную проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1040">By default, clients request mutual authentication.</span></span>  
  
 <span data-ttu-id="17f1c-1041">Протокол Negotiate выбирает NTLM или Kerberos в зависимости от протоколов безопасности, поддерживаемых клиентом и сервером.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1041">The Negotiate protocol selects either NTLM or Kerberos depending on the security protocols supported by the client and server.</span></span> <span data-ttu-id="17f1c-1042">NTLM не поддерживает взаимную проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1042">NTLM does not support mutual authentication.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f1c-1043">В следующем примере кода показано, как отобразить значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1043">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsServer">
      <MemberSignature Language="C#" Value="public override bool IsServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsServer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsServer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServer : bool" Usage="System.Net.Security.NegotiateStream.IsServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f1c-1044">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.NegotiateStream" /> was authenticated as the server.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1044">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.NegotiateStream" /> was authenticated as the server.</span></span></summary>
        <value><span data-ttu-id="17f1c-1045"><see langword="true" />, если локальная конечная точка успешно прошла проверку подлинности в качестве серверной части подключения, прошедшего проверку подлинности; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1045"><see langword="true" /> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-1046">Если проверка подлинности не удалась или не произошла, это свойство возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1046">If authentication failed or did not occur, this property returns `false`.</span></span>  
  
 <span data-ttu-id="17f1c-1047">Для проверки подлинности в качестве сервера вызовите методы <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> или <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1047">To authenticate as the server, call the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f1c-1048">В следующем примере кода показано, как отобразить значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1048">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public override bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSigned { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSigned : bool" Usage="System.Net.Security.NegotiateStream.IsSigned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f1c-1049">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1049">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span></span></summary>
        <value><span data-ttu-id="17f1c-1050"><see langword="true" />, если данные подписываются перед передачей; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1050"><see langword="true" /> if the data is signed before being transmitted; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-1051">Подписывание данных помогает защитить целостность данных. а именно, он помогает получателю определить, были ли данные изменены во время передачи.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1051">Data signing helps to protect the integrity of the data; namely, it helps the recipient determine whether the data has been tampered with while in transit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f1c-1052">В следующем примере кода показано, как отобразить значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1052">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Net.Security.NegotiateStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f1c-1053">Gets the length of the underlying stream.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1053">Gets the length of the underlying stream.</span></span></summary>
        <value><span data-ttu-id="17f1c-1054"><see cref="T:System.Int64" />, указывающий длину базового потока.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1054">A <see cref="T:System.Int64" /> that specifies the length of the underlying stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-1055">Это свойство возвращает значение, возвращаемое при вызове свойства <xref:System.IO.Stream.Length%2A> базового потока.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1055">This property returns the value returned by invoking the <xref:System.IO.Stream.Length%2A> property on the underlying stream.</span></span> <span data-ttu-id="17f1c-1056">Если базовый поток недоступен для поиска, это свойство, как правило, вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1056">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="17f1c-1057">Тип времени выполнения базового потока определяет тип времени выполнения создаваемого исключения.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1057">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f1c-1058">В следующем примере кода показано, как отобразить значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1058">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17f1c-1059">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1059">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Net.Security.NegotiateStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f1c-1060">Gets or sets the current position in the underlying stream.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1060">Gets or sets the current position in the underlying stream.</span></span></summary>
        <value><span data-ttu-id="17f1c-1061"><see cref="T:System.Int64" />, указывающий текущее расположение в базовом потоке.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1061">A <see cref="T:System.Int64" /> that specifies the current position in the underlying stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-1062">Это свойство возвращает значение, возвращаемое при вызове свойства <xref:System.IO.Stream.Position%2A> базового потока.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1062">This property returns the value returned by invoking the <xref:System.IO.Stream.Position%2A> property on the underlying stream.</span></span> <span data-ttu-id="17f1c-1063">Если базовый поток недоступен для поиска, это свойство, как правило, вызывает исключение.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1063">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="17f1c-1064">Тип времени выполнения базового потока определяет тип времени выполнения создаваемого исключения.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1064">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17f1c-1065">Setting this property is not supported.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1065">Setting this property is not supported.</span></span>  
  
<span data-ttu-id="17f1c-1066">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-1066">-or-</span></span> 
<span data-ttu-id="17f1c-1067">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1067">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="negotiateStream.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="17f1c-1068">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1068">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="17f1c-1069">A <see cref="T:System.Int32" /> containing the zero-based location in <paramref name="buffer" /> at which to begin storing the data read from this stream.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1069">A <see cref="T:System.Int32" /> containing the zero-based location in <paramref name="buffer" /> at which to begin storing the data read from this stream.</span></span></param>
        <param name="count"><span data-ttu-id="17f1c-1070">A <see cref="T:System.Int32" /> containing the maximum number of bytes to read from the stream.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1070">A <see cref="T:System.Int32" /> containing the maximum number of bytes to read from the stream.</span></span></param>
        <summary><span data-ttu-id="17f1c-1071">Reads data from this stream and stores it in the specified array.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1071">Reads data from this stream and stores it in the specified array.</span></span></summary>
        <returns><span data-ttu-id="17f1c-1072">An <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1072">An <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span></span> <span data-ttu-id="17f1c-1073">When there is no more data to be read, returns 0.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1073">When there is no more data to be read, returns 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-1074">Метод считывает максимум `count` байт из текущего потока и сохраняет их в `buffer`, начиная с `offset`.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1074">The method reads a maximum of `count` bytes from the current stream and stores them in `buffer` beginning at `offset`.</span></span>  
  
 <span data-ttu-id="17f1c-1075">Этот метод нельзя вызвать до тех пор, пока не будет выполнена проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1075">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="17f1c-1076">Для проверки подлинности вызовите один из методов <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>или <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1076">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="17f1c-1077">Чтобы выполнить эту операцию асинхронно, используйте метод <xref:System.Net.Security.NegotiateStream.BeginRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1077">To perform this operation asynchronously, use the <xref:System.Net.Security.NegotiateStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f1c-1078">В следующем примере кода показано чтение из <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1078">The following code example demonstrates reading from a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncServer/CPP/NclNegoSyncServer.cpp#1)]
 [!code-csharp[NclNegoSyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="17f1c-1079">The read operation failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1079">The read operation failed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-1080">Authentication has not occurred.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1080">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17f1c-1081">A <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> operation is already in progress.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1081">A <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> operation is already in progress.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.Net.Security.NegotiateStream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f1c-1082">Gets or sets the amount of time a read operation blocks waiting for data.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1082">Gets or sets the amount of time a read operation blocks waiting for data.</span></span></summary>
        <value><span data-ttu-id="17f1c-1083"><see cref="T:System.Int32" />, указывающий период времени, по истечении которого операция чтения завершится неудачей.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1083">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a read operation fails.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-1084">Это свойство возвращает значение, возвращаемое при вызове свойства <xref:System.IO.Stream.ReadTimeout%2A> базового потока.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1084">This property returns the value returned by invoking the <xref:System.IO.Stream.ReadTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="17f1c-1085">При задании этого свойства в качестве значения <xref:System.IO.Stream.ReadTimeout%2A> в базовом потоке задается указанное значение.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1085">When you set this property, the <xref:System.IO.Stream.ReadTimeout%2A> value on the underlying stream is set to the specified value.</span></span>  
  
 <span data-ttu-id="17f1c-1086">Если базовый поток является <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.ReadTimeout%2A> находится в миллисекундах и по умолчанию имеет значение <xref:System.Threading.Timeout.Infinite>, то есть время ожидания операций чтения не ограничено.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1086">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.ReadTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that read operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f1c-1087">В следующем примере кода показано, как отобразить значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1087">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteIdentity">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IIdentity RemoteIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity RemoteIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.RemoteIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RemoteIdentity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ RemoteIdentity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteIdentity : System.Security.Principal.IIdentity" Usage="System.Net.Security.NegotiateStream.RemoteIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f1c-1088">Gets information about the identity of the remote party sharing this authenticated stream.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1088">Gets information about the identity of the remote party sharing this authenticated stream.</span></span></summary>
        <value><span data-ttu-id="17f1c-1089">Объект <see cref="T:System.Security.Principal.IIdentity" />, описывающий идентификатор удаленной конечной точки.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1089">An <see cref="T:System.Security.Principal.IIdentity" /> object that describes the identity of the remote endpoint.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-1090">При доступе к клиенту это свойство возвращает <xref:System.Security.Principal.GenericIdentity>, содержащую имя участника-службы (SPN) сервера и используемый протокол проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1090">When accessed by the client, this property returns a <xref:System.Security.Principal.GenericIdentity> containing the Service Principal Name (SPN) of the server and the authentication protocol used.</span></span> <span data-ttu-id="17f1c-1091">При доступе к серверу это свойство возвращает <xref:System.Security.Principal.WindowsIdentity>, описывающую клиент.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1091">When accessed by the server, this property returns a <xref:System.Security.Principal.WindowsIdentity> that describes the client.</span></span> <span data-ttu-id="17f1c-1092">Если <xref:System.Security.Principal.WindowsIdentity> недоступна, сведения о клиенте возвращаются на сервер в <xref:System.Security.Principal.GenericIdentity>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1092">If the <xref:System.Security.Principal.WindowsIdentity> is not available, client information is returned to the server in a <xref:System.Security.Principal.GenericIdentity>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f1c-1093">В следующем примере кода показано, как отобразить значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1093">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#2)]
 [!code-csharp[NclNegoAsyncServer#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-1094">Authentication failed or has not occurred.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1094">Authentication failed or has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="negotiateStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="17f1c-1095">This value is ignored.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1095">This value is ignored.</span></span></param>
        <param name="origin"><span data-ttu-id="17f1c-1096">This value is ignored.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1096">This value is ignored.</span></span></param>
        <summary><span data-ttu-id="17f1c-1097">Throws <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1097">Throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="17f1c-1098">Always throws a <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1098">Always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-1099">Не вызывайте этот метод.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1099">Do not call this method.</span></span> <span data-ttu-id="17f1c-1100">Он наследуется, но не поддерживается <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1100">It is inherited, but is not supported by <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17f1c-1101">Seeking is not supported on <see cref="T:System.Net.Security.NegotiateStream" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1101">Seeking is not supported on <see cref="T:System.Net.Security.NegotiateStream" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="negotiateStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="17f1c-1102">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1102">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</span></span></param>
        <summary><span data-ttu-id="17f1c-1103">Sets the length of the underlying stream.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1103">Sets the length of the underlying stream.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="negotiateStream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="17f1c-1104">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1104">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="17f1c-1105">An <see cref="T:System.Int32" /> containing the zero-based location in <paramref name="buffer" /> at which to begin reading bytes to be written to the stream.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1105">An <see cref="T:System.Int32" /> containing the zero-based location in <paramref name="buffer" /> at which to begin reading bytes to be written to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="17f1c-1106">A <see cref="T:System.Int32" /> containing the number of bytes to read from <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1106">A <see cref="T:System.Int32" /> containing the number of bytes to read from <paramref name="buffer" />.</span></span></param>
        <summary><span data-ttu-id="17f1c-1107">Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1107">Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-1108">Если шифрование, подписывание или шифрование и подпись включены, этот метод считывает данные из буфера, шифрует, подписывает или шифрует и подписывает их, а затем передает их с помощью базового потока.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1108">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="17f1c-1109">Если службы безопасности, такие как шифрование данных или подписывание, не используются, этот метод вызывает <xref:System.IO.Stream.Write%2A> в базовом потоке.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1109">If no security services such as data encryption or signing are in use, this method invokes <xref:System.IO.Stream.Write%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="17f1c-1110">Этот метод блокируется, пока операция записи завершается.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1110">This method blocks while the write operation completes.</span></span> <span data-ttu-id="17f1c-1111">Чтобы предотвратить блокировку во время выполнения операции, используйте метод <xref:System.Net.Security.NegotiateStream.Write%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1111">To prevent blocking while the operation completes, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
 <span data-ttu-id="17f1c-1112">Этот метод нельзя вызвать до тех пор, пока не будет выполнена проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1112">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="17f1c-1113">Для проверки подлинности вызовите один из методов <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>или <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1113">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="17f1c-1114">Класс <xref:System.Net.Security.NegotiateStream> не поддерживает несколько одновременных операций записи.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1114">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="17f1c-1115">При попытке запустить операцию записи в то время, когда другая операция записи уже выполняется в том же потоке, будет создано исключение <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1115">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f1c-1116">В следующем примере кода демонстрируется запись в <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1116">The following code example demonstrates writing to a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17f1c-1117"><paramref name="buffer" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1117"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17f1c-1118"><paramref name="offset is less than 0" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1118"><paramref name="offset is less than 0" />.</span></span>  
  
<span data-ttu-id="17f1c-1119">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-1119">-or-</span></span> 
 <span data-ttu-id="17f1c-1120"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1120"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="17f1c-1121">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-1121">-or-</span></span> 
 <span data-ttu-id="17f1c-1122"><paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1122"><paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="17f1c-1123">The write operation failed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1123">The write operation failed.</span></span>  
  
<span data-ttu-id="17f1c-1124">-or-</span><span class="sxs-lookup"><span data-stu-id="17f1c-1124">-or-</span></span>
  
 <span data-ttu-id="17f1c-1125">Encryption is in use, but the data could not be encrypted.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1125">Encryption is in use, but the data could not be encrypted.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="17f1c-1126">There is already a write operation in progress.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1126">There is already a write operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17f1c-1127">This object has been closed.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1127">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17f1c-1128">Authentication has not occurred.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1128">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.Net.Security.NegotiateStream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17f1c-1129">Gets or sets the amount of time a write operation blocks waiting for data.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1129">Gets or sets the amount of time a write operation blocks waiting for data.</span></span></summary>
        <value><span data-ttu-id="17f1c-1130"><see cref="T:System.Int32" />, указывающий период времени, по истечении которого операция записи завершится неудачей.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1130">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a write operation fails.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17f1c-1131">Это свойство возвращает значение, возвращаемое при вызове свойства <xref:System.IO.Stream.WriteTimeout%2A> базового потока.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1131">This property returns the value returned by invoking the <xref:System.IO.Stream.WriteTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="17f1c-1132">Для операций set указанное значение задает <xref:System.IO.Stream.WriteTimeout%2A> значение в базовом потоке.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1132">For set operations, the specified value sets the <xref:System.IO.Stream.WriteTimeout%2A> value on the underlying stream.</span></span>  
  
 <span data-ttu-id="17f1c-1133">Если базовый поток является <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.WriteTimeout%2A> находится в миллисекундах и по умолчанию имеет значение <xref:System.Threading.Timeout.Infinite>, то есть время ожидания операций записи не ограничено.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1133">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.WriteTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that write operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17f1c-1134">В следующем примере кода показано, как отобразить значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="17f1c-1134">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
