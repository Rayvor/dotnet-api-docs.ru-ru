<Type Name="NegotiateStream" FullName="System.Net.Security.NegotiateStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9576497d90ed0f9e90d734cedc9957a2d7d66942" /><Meta Name="ms.sourcegitcommit" Value="5ebd9691c6f7d50c4730e997fba69e54bdd7cc0c" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="05/17/2019" /><Meta Name="ms.locfileid" Value="65829968" /></Metadata><TypeSignature Language="C#" Value="public class NegotiateStream : System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NegotiateStream extends System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.NegotiateStream" />
  <TypeSignature Language="VB.NET" Value="Public Class NegotiateStream&#xA;Inherits AuthenticatedStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class NegotiateStream : System::Net::Security::AuthenticatedStream" />
  <TypeSignature Language="F#" Value="type NegotiateStream = class&#xA;    inherit AuthenticatedStream" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Security.AuthenticatedStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b88e5-101">Предоставляет поток, который использует протокол безопасности Negotiate для проверки подлинности клиента и при необходимости, сервера в обмен данными между клиентом и сервером.</span><span class="sxs-lookup"><span data-stu-id="b88e5-101">Provides a stream that uses the Negotiate security protocol to authenticate the client, and optionally the server, in client-server communication.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-102">Используйте <xref:System.Net.Security.NegotiateStream> класс для проверки подлинности и защиты данных, передаваемых между клиентом и сервером.</span><span class="sxs-lookup"><span data-stu-id="b88e5-102">Use the <xref:System.Net.Security.NegotiateStream> class for authentication and to help secure information transmitted between a client and a server.</span></span> <span data-ttu-id="b88e5-103">С помощью <xref:System.Net.Security.NegotiateStream>, можно сделать следующее.</span><span class="sxs-lookup"><span data-stu-id="b88e5-103">Using <xref:System.Net.Security.NegotiateStream>, you can do the following.</span></span>  
  
-   <span data-ttu-id="b88e5-104">Отправки учетных данных клиента на сервер для олицетворения или делегирования.</span><span class="sxs-lookup"><span data-stu-id="b88e5-104">Send the client's credentials to the server for Impersonation or Delegation.</span></span>  
  
-   <span data-ttu-id="b88e5-105">Запрос проверки подлинности сервера.</span><span class="sxs-lookup"><span data-stu-id="b88e5-105">Request server authentication.</span></span>  
  
-   <span data-ttu-id="b88e5-106">Шифрование и/или подписать данные перед его передачей.</span><span class="sxs-lookup"><span data-stu-id="b88e5-106">Encrypt and/or sign data before transmitting it.</span></span>  
  
 <span data-ttu-id="b88e5-107">Проверка подлинности должна осуществляться перед передачей данных.</span><span class="sxs-lookup"><span data-stu-id="b88e5-107">Authentication must be performed before transmitting information.</span></span> <span data-ttu-id="b88e5-108">Клиенты запрашивают проверку подлинности с использованием синхронных <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> методы, которые блокируются до завершения проверки подлинности, или асинхронной <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> методы, которые не блокируют при ожидании завершения операции проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-108">Clients request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods, which block until the authentication completes, or the asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods, which do not block while waiting for the authentication to complete.</span></span> <span data-ttu-id="b88e5-109">Серверы запрашивать проверку подлинности, используя синхронный <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> или асинхронным <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="b88e5-109">Servers request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span> <span data-ttu-id="b88e5-110">Клиент и, при необходимости, сервера подлинности с помощью протокол безопасности Negotiate.</span><span class="sxs-lookup"><span data-stu-id="b88e5-110">The client, and optionally the server, is authenticated using the Negotiate security protocol.</span></span> <span data-ttu-id="b88e5-111">В системах Windows 95/98 Windows NT LAN Manager (NTLM) — протокол, используемый для проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-111">On Windows 95/98 systems, Windows NT LAN Manager (NTLM) is the protocol used for authentication.</span></span> <span data-ttu-id="b88e5-112">На других платформах Kerberos протокол используется для проверки подлинности, если клиент и сервер поддерживают в противном случае используется NTLM.</span><span class="sxs-lookup"><span data-stu-id="b88e5-112">On other platforms the Kerberos protocol is used for authentication if both client and server support it; otherwise NTLM is used.</span></span> <span data-ttu-id="b88e5-113">Подробные описания этих протоколов см. в документации Platform SDK в библиотеке MSDN в msdn.microsoft.com/library/.</span><span class="sxs-lookup"><span data-stu-id="b88e5-113">For detailed descriptions of these protocols, see the Platform SDK documentation on MSDN, at msdn.microsoft.com/library/.</span></span> <span data-ttu-id="b88e5-114"><xref:System.Net.Security.NegotiateStream> Класс выполняет проверку подлинности с помощью интерфейса поставщика поддержки безопасности (SSPI).</span><span class="sxs-lookup"><span data-stu-id="b88e5-114">The <xref:System.Net.Security.NegotiateStream> class performs the authentication using the Security Support Provider Interface (SSPI).</span></span>  
  
 <span data-ttu-id="b88e5-115">Если проверка подлинности завершается успешно, необходимо проверить <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A> будет использовать свойства, чтобы определить, какие службы безопасности <xref:System.Net.Security.NegotiateStream> для защиты данных во время передачи.</span><span class="sxs-lookup"><span data-stu-id="b88e5-115">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services will be used by the <xref:System.Net.Security.NegotiateStream> to help secure your data during transmission.</span></span> <span data-ttu-id="b88e5-116">Проверьте <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> свойства, чтобы определить, произошла ли взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-116">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span> <span data-ttu-id="b88e5-117">Вы можете получить информацию о удаленному клиенту или серверу с помощью <xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="b88e5-117">You can get information about the remote client or server using the <xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A> property.</span></span>  
  
 <span data-ttu-id="b88e5-118">При сбое аутентификации, вы получите <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-118">If the authentication fails, you will receive an <xref:System.Security.Authentication.AuthenticationException> or a <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="b88e5-119">В этом случае можно повторить проверку подлинности на другие учетные данные.</span><span class="sxs-lookup"><span data-stu-id="b88e5-119">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="b88e5-120">Отправка данных с помощью синхронного <xref:System.Net.Security.NegotiateStream.Write%2A> или асинхронным <xref:System.Net.Security.NegotiateStream.BeginWrite%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="b88e5-120">You send data using the synchronous <xref:System.Net.Security.NegotiateStream.Write%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginWrite%2A> methods.</span></span> <span data-ttu-id="b88e5-121">Для получения данных, используя синхронный <xref:System.Net.Security.NegotiateStream.Read%2A> или асинхронным <xref:System.Net.Security.NegotiateStream.BeginRead%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="b88e5-121">You receive data using the synchronous <xref:System.Net.Security.NegotiateStream.Read%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginRead%2A> methods.</span></span> <span data-ttu-id="b88e5-122">Если безопасности службы, такие как шифрованию или подписыванию включены, они применяются автоматически к данным по <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-122">If security services such as encryption or signing are enabled, these are automatically applied to your data by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="b88e5-123"><xref:System.Net.Security.NegotiateStream> Передачи данных с помощью потока, который вы указали при создании <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-123">The <xref:System.Net.Security.NegotiateStream> transmits data using a stream that you supply when creating the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="b88e5-124">При указании этого базового потока, у вас есть возможность указать ли закрытие <xref:System.Net.Security.NegotiateStream> также закрывает основной поток.</span><span class="sxs-lookup"><span data-stu-id="b88e5-124">When you supply this underlying stream, you have the option to specify whether closing the <xref:System.Net.Security.NegotiateStream> also closes the underlying stream.</span></span>  
  
   
  
## Examples  
<span data-ttu-id="b88e5-125">В следующем примере демонстрируется клиентская часть соединения клиент сервер, который использует <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-125">The following example demonstrates the client side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="b88e5-126">Клиент проходит проверку подлинности и асинхронно отправляет сообщение на сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-126">The client authenticates and sends a message to the server asynchronously.</span></span>  
  
[!code-cpp[NclNegoAsyncClient#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#0)]
[!code-csharp[NclNegoAsyncClient#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#0)]  
[!code-vb[NclNegoAsyncClient#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNegoasyncClient/VB/client.vb#0)] 

<span data-ttu-id="b88e5-127">В следующем примере кода демонстрируется серверной части соединения клиент сервер, который использует <xref:System.Net.Security.NegotiateStream> для проверки подлинности клиента и чтения сообщений, отправленных клиентом.</span><span class="sxs-lookup"><span data-stu-id="b88e5-127">The following code example demonstrates the server side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream> to authenticate the client and read a message sent by the client.</span></span>  
  
[!code-cpp[NclNegoAsyncServer#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#0)]
[!code-csharp[NclNegoAsyncServer#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#0)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/8bf0b428-5a21-4299-8d6e-bf8251fd978a"><span data-ttu-id="b88e5-128">Изменения в аутентификации NTLM для HTTPWebRequest в версии 3.5 с пакетом обновления 1</span><span class="sxs-lookup"><span data-stu-id="b88e5-128">Changes to NTLM authentication for HTTPWebRequest in Version 3.5 SP1</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b88e5-129">Инициализирует новый экземпляр класса <see cref="T:System.Net.Security.NegotiateStream" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-129">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-130">Чтобы предотвратить <xref:System.Net.Security.NegotiateStream> закрытие потока, который вы указали, используя <xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29> конструктор.</span><span class="sxs-lookup"><span data-stu-id="b88e5-130">To prevent the <xref:System.Net.Security.NegotiateStream> from closing the stream that you supply, use the <xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.NegotiateStream : System.IO.Stream -&gt; System.Net.Security.NegotiateStream" Usage="new System.Net.Security.NegotiateStream innerStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="b88e5-131">Объект <see cref="T:System.IO.Stream" />, используемый потоком <see cref="T:System.Net.Security.NegotiateStream" /> для отправки и получения данных.</span><span class="sxs-lookup"><span data-stu-id="b88e5-131">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span></span></param>
        <summary><span data-ttu-id="b88e5-132">Инициализирует новый экземпляр класса <see cref="T:System.Net.Security.NegotiateStream" /> с использованием указанного объекта <see cref="T:System.IO.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-132">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b88e5-133">В следующем примере кода демонстрируется вызов этого конструктора.</span><span class="sxs-lookup"><span data-stu-id="b88e5-133">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#3)]
 [!code-csharp[NclNegoSyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.NegotiateStream : System.IO.Stream * bool -&gt; System.Net.Security.NegotiateStream" Usage="new System.Net.Security.NegotiateStream (innerStream, leaveInnerStreamOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="b88e5-134">Объект <see cref="T:System.IO.Stream" />, используемый потоком <see cref="T:System.Net.Security.NegotiateStream" /> для отправки и получения данных.</span><span class="sxs-lookup"><span data-stu-id="b88e5-134">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span></span></param>
        <param name="leaveInnerStreamOpen"><span data-ttu-id="b88e5-135"><see langword="true" /> Чтобы указать, что закрытие этого потока <see cref="T:System.Net.Security.NegotiateStream" /> не оказывает влияния на <paramref name="innerStream" />; <see langword="false" /> для указания, что закрытие этого потока <see cref="T:System.Net.Security.NegotiateStream" /> также закрывает <paramref name="innerStream" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-135"><see langword="true" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> has no effect on <paramref name="innerStream" />; <see langword="false" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> also closes <paramref name="innerStream" />.</span></span></param>
        <summary><span data-ttu-id="b88e5-136">Инициализирует новый экземпляр класса <see cref="T:System.Net.Security.NegotiateStream" /> класса, используя указанный <see cref="T:System.IO.Stream" /> и поведение потока при закрытии.</span><span class="sxs-lookup"><span data-stu-id="b88e5-136">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-137">При указании `true` для `leaveStreamOpen` параметра, закрытие <xref:System.Net.Security.NegotiateStream> не оказывает влияния на `innerStream` потоковую передачу; необходимо явно закрыть `innerStream` когда больше не он вам нужен.</span><span class="sxs-lookup"><span data-stu-id="b88e5-137">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.NegotiateStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
   
  
## Examples  
<span data-ttu-id="b88e5-138">Ниже приведен пример вызова этого конструктора.</span><span class="sxs-lookup"><span data-stu-id="b88e5-138">The following example demonstrates calling this constructor.</span></span> <span data-ttu-id="b88e5-139">Данный пример кода является частью большего примера для <xref:System.Net.Security.NegotiateStream> класса.</span><span class="sxs-lookup"><span data-stu-id="b88e5-139">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
[!code-cpp[NclNegoAsyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#1)]
[!code-csharp[NclNegoAsyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#1)]  
[!code-vb[NclNegoAsyncClient#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNegoasyncClient/VB/client.vb#1)] 

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b88e5-140">Свойство <paramref name="innerStream" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-140"><paramref name="innerStream" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b88e5-141">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-141">-or-</span></span> 
 <span data-ttu-id="b88e5-142"><paramref name="innerStream" /> равно <see cref="F:System.IO.Stream.Null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-142"><paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b88e5-143">Вызывается клиентами для проверки подлинности клиента и при необходимости, сервера в соединении клиент сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-143">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : unit -&gt; unit&#xA;override this.AuthenticateAsClient : unit -&gt; unit" Usage="negotiateStream.AuthenticateAsClient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b88e5-144">Вызывается клиентами для проверки подлинности клиента и при необходимости, сервера в соединении клиент сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-144">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-145">Проверка подлинности использует клиента <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-145">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="b88e5-146">Нет службы имя участника (SPN), указанную для сервера.</span><span class="sxs-lookup"><span data-stu-id="b88e5-146">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="b88e5-147">Уровень олицетворения равен <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, уровень безопасности при <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, и запрашивается взаимной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-147">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="b88e5-148"><xref:System.Net.Security.NegotiateStream> Класса создают SPN, которые используются для взаимной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-148">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="b88e5-149">Если проверка подлинности завершается успешно, необходимо проверить <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A> свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-149">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="b88e5-150">Проверьте <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> свойства, чтобы определить, произошла ли взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-150">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="b88e5-151">При сбое аутентификации, вы получите <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-151">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="b88e5-152">В этом случае можно повторить проверку подлинности на другие учетные данные.</span><span class="sxs-lookup"><span data-stu-id="b88e5-152">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="b88e5-153">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-153">The authentication failed.</span></span> <span data-ttu-id="b88e5-154">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-154">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="b88e5-155">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-155">The authentication failed.</span></span> <span data-ttu-id="b88e5-156">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-156">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b88e5-157">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="b88e5-157">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-158">Проверка подлинности уже выполнена.</span><span class="sxs-lookup"><span data-stu-id="b88e5-158">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="b88e5-159">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-159">-or-</span></span> 
<span data-ttu-id="b88e5-160">Этот поток уже использовался ранее при попытке проверки подлинности, что и сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-160">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="b88e5-161">Этот поток нельзя использовать для повторной проверки подлинности клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-161">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b88e5-162">Чтобы использовать явный <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-162">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="b88e5-163">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-163">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * string -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * string -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="b88e5-164"><see cref="T:System.Net.NetworkCredential" /> , Используемый для установления идентификации клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-164">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="b88e5-165">Службы имя участника (SPN), однозначно определяющее сервер для проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-165">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <summary><span data-ttu-id="b88e5-166">Вызывается клиентами для проверки подлинности клиента и при необходимости, сервера в соединении клиент сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-166">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="b88e5-167">Процесс проверки подлинности использует заданные учетные данные клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-167">The authentication process uses the specified client credential.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-168">Уровень олицетворения равен <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, уровень безопасности при <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, и запрашивается взаимной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-168">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="b88e5-169"><xref:System.Net.Security.NegotiateStream> Класса создают SPN, которые используются для взаимной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-169">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="b88e5-170">Если проверка подлинности завершается успешно, необходимо проверить <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A> свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-170">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="b88e5-171">Проверьте <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> свойства, чтобы определить, произошла ли взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-171">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="b88e5-172">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-172">The authentication failed.</span></span> <span data-ttu-id="b88e5-173">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-173">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="b88e5-174">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-174">The authentication failed.</span></span> <span data-ttu-id="b88e5-175">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-175">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b88e5-176">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="b88e5-176">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-177">Проверка подлинности уже выполнена.</span><span class="sxs-lookup"><span data-stu-id="b88e5-177">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="b88e5-178">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-178">-or-</span></span> 
<span data-ttu-id="b88e5-179">Этот поток уже использовался ранее при попытке проверки подлинности, что и сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-179">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="b88e5-180">Этот поток нельзя использовать для повторной проверки подлинности клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-180">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b88e5-181">Свойство <paramref name="targetName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-181"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b88e5-182">Чтобы использовать явный <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-182">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="b88e5-183">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-183">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, binding, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="targetName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="b88e5-184"><see cref="T:System.Net.NetworkCredential" /> , Используемый для установления идентификации клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-184">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="b88e5-185"><see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> , Используемый для расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="b88e5-185">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="b88e5-186">Службы имя участника (SPN), однозначно определяющее сервер для проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-186">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <summary><span data-ttu-id="b88e5-187">Вызывается клиентами для проверки подлинности клиента и при необходимости, сервера в соединении клиент сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-187">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="b88e5-188">Процесс проверки подлинности использует заданные учетные данные клиента и привязку канала.</span><span class="sxs-lookup"><span data-stu-id="b88e5-188">The authentication process uses the specified client credential and the channel binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-189">Уровень олицетворения равен <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, уровень безопасности при <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, и запрашивается взаимной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-189">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="b88e5-190"><xref:System.Net.Security.NegotiateStream> Класса создают SPN, которые используются для взаимной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-190">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="b88e5-191"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> Для расширенной защиты, который передается этому методу в `binding` параметр будет вызываться из приложения <xref:System.Net.Security.SslStream.TransportContext%2A> свойства в связанном <xref:System.Net.Security.SslStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-191">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="b88e5-192">Если проверка подлинности завершается успешно, необходимо проверить <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A> свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-192">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="b88e5-193">Проверьте <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> свойства, чтобы определить, произошла ли взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-193">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b88e5-194">Свойство <paramref name="targetName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-194"><paramref name="targetName" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b88e5-195">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-195">-or-</span></span> 
 <span data-ttu-id="b88e5-196">Свойство <paramref name="credential" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-196"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="b88e5-197">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-197">The authentication failed.</span></span> <span data-ttu-id="b88e5-198">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-198">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="b88e5-199">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-199">The authentication failed.</span></span> <span data-ttu-id="b88e5-200">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-200">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-201">Проверка подлинности уже выполнена.</span><span class="sxs-lookup"><span data-stu-id="b88e5-201">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="b88e5-202">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-202">-or-</span></span> 
<span data-ttu-id="b88e5-203">Этот поток уже использовался ранее при попытке проверки подлинности, что и сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-203">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="b88e5-204">Этот поток нельзя использовать для повторной проверки подлинности клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-204">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b88e5-205">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="b88e5-205">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="b88e5-206">Встроенная аутентификация Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="b88e5-206">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="b88e5-207"><see cref="T:System.Net.NetworkCredential" /> , Используемый для установления идентификации клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-207">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="b88e5-208">Службы имя участника (SPN), однозначно определяющее сервер для проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-208">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="b88e5-209">Один из <see cref="T:System.Net.Security.ProtectionLevel" /> значений, указывающее службы безопасности для потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-209">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="b88e5-210">Один из <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> значений, указывающее, как сервер может использовать учетные данные клиента для доступа к ресурсам.</span><span class="sxs-lookup"><span data-stu-id="b88e5-210">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="b88e5-211">Вызывается клиентами для проверки подлинности клиента и при необходимости, сервера в соединении клиент сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-211">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="b88e5-212">Процесс проверки подлинности использует заданные учетные данные и параметры проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-212">The authentication process uses the specified credentials and authentication options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-213">Используйте `requiredProtectionLevel` параметр для запроса служб безопасности для данных, передаваемых через поток с проверкой подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-213">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="b88e5-214">Например, чтобы данные шифруются и подписываются, указать <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> значение.</span><span class="sxs-lookup"><span data-stu-id="b88e5-214">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="b88e5-215">Успешная проверка подлинности не гарантирует, что запрошенный <xref:System.Net.Security.ProtectionLevel> было предоставлено.</span><span class="sxs-lookup"><span data-stu-id="b88e5-215">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="b88e5-216">Необходимо проверить <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A> свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-216">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="b88e5-217">При сбое аутентификации, вы получите <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-217">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="b88e5-218">В этом случае можно повторить проверку подлинности на другие учетные данные.</span><span class="sxs-lookup"><span data-stu-id="b88e5-218">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b88e5-219"><paramref name="allowedImpersonationLevel" /> не является допустимым значением.</span><span class="sxs-lookup"><span data-stu-id="b88e5-219"><paramref name="allowedImpersonationLevel" /> is not a valid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b88e5-220">Параметр <paramref name="targetName" /> имеет значение null.</span><span class="sxs-lookup"><span data-stu-id="b88e5-220"><paramref name="targetName" /> is null.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="b88e5-221">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-221">The authentication failed.</span></span> <span data-ttu-id="b88e5-222">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-222">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="b88e5-223">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-223">The authentication failed.</span></span> <span data-ttu-id="b88e5-224">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-224">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b88e5-225">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="b88e5-225">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-226">Проверка подлинности уже выполнена.</span><span class="sxs-lookup"><span data-stu-id="b88e5-226">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="b88e5-227">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-227">-or-</span></span> 
<span data-ttu-id="b88e5-228">Этот поток уже использовался ранее при попытке проверки подлинности, что и сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-228">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="b88e5-229">Этот поток нельзя использовать для повторной проверки подлинности клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-229">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b88e5-230">Чтобы использовать явный <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-230">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="b88e5-231">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-231">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="targetName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="b88e5-232"><see cref="T:System.Net.NetworkCredential" /> , Используемый для установления идентификации клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-232">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="b88e5-233"><see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> , Используемый для расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="b88e5-233">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="b88e5-234">Службы имя участника (SPN), однозначно определяющее сервер для проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-234">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="b88e5-235">Один из <see cref="T:System.Net.Security.ProtectionLevel" /> значений, указывающее службы безопасности для потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-235">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="b88e5-236">Один из <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> значений, указывающее, как сервер может использовать учетные данные клиента для доступа к ресурсам.</span><span class="sxs-lookup"><span data-stu-id="b88e5-236">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="b88e5-237">Вызывается клиентами для проверки подлинности клиента и при необходимости, сервера в соединении клиент сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-237">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="b88e5-238">Процесс проверки подлинности использует указанные учетные данные, параметры проверки подлинности и привязку канала.</span><span class="sxs-lookup"><span data-stu-id="b88e5-238">The authentication process uses the specified credential, authentication options, and channel binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-239">Используйте `requiredProtectionLevel` параметр для запроса служб безопасности для данных, передаваемых через поток с проверкой подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-239">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="b88e5-240">Например, чтобы данные шифруются и подписываются, указать <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> значение.</span><span class="sxs-lookup"><span data-stu-id="b88e5-240">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="b88e5-241">Успешная проверка подлинности не гарантирует, что запрошенный <xref:System.Net.Security.ProtectionLevel> было предоставлено.</span><span class="sxs-lookup"><span data-stu-id="b88e5-241">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="b88e5-242">Необходимо проверить <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A> свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-242">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="b88e5-243"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> Для расширенной защиты, который передается этому методу в `binding` параметр будет вызываться из приложения <xref:System.Net.Security.SslStream.TransportContext%2A> свойства в связанном <xref:System.Net.Security.SslStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-243">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="b88e5-244">При сбое аутентификации, вы получите <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-244">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="b88e5-245">В этом случае можно повторить проверку подлинности на другие учетные данные.</span><span class="sxs-lookup"><span data-stu-id="b88e5-245">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b88e5-246">Свойство <paramref name="targetName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-246"><paramref name="targetName" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b88e5-247">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-247">-or-</span></span> 
 <span data-ttu-id="b88e5-248">Свойство <paramref name="credential" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-248"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b88e5-249"><paramref name="allowedImpersonationLevel" /> не является допустимым значением.</span><span class="sxs-lookup"><span data-stu-id="b88e5-249"><paramref name="allowedImpersonationLevel" /> is not a valid value.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="b88e5-250">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-250">The authentication failed.</span></span> <span data-ttu-id="b88e5-251">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-251">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="b88e5-252">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-252">The authentication failed.</span></span> <span data-ttu-id="b88e5-253">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-253">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-254">Проверка подлинности уже выполнена.</span><span class="sxs-lookup"><span data-stu-id="b88e5-254">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="b88e5-255">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-255">-or-</span></span> 
<span data-ttu-id="b88e5-256">Этот поток уже использовался ранее при попытке проверки подлинности, что и сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-256">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="b88e5-257">Этот поток нельзя использовать для повторной проверки подлинности клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-257">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b88e5-258">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="b88e5-258">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="b88e5-259">Встроенная аутентификация Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="b88e5-259">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClientAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b88e5-260">Вызывается клиентами для проверки подлинности клиента и при необходимости, сервера в соединении клиент сервер как асинхронная операция.</span><span class="sxs-lookup"><span data-stu-id="b88e5-260">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : unit -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b88e5-261">Вызывается клиентами для проверки подлинности клиента и при необходимости, сервера в соединении клиент сервер как асинхронная операция.</span><span class="sxs-lookup"><span data-stu-id="b88e5-261">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="b88e5-262">Объект задачи, представляющий асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="b88e5-262">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-263">Проверка подлинности использует клиента <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-263">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="b88e5-264">Нет службы имя участника (SPN), указанную для сервера.</span><span class="sxs-lookup"><span data-stu-id="b88e5-264">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="b88e5-265">Уровень олицетворения равен <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, уровень безопасности при <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, и запрашивается взаимной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-265">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="b88e5-266"><xref:System.Net.Security.NegotiateStream> Класса создают SPN, которые используются для взаимной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-266">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="b88e5-267">Если проверка подлинности завершается успешно, необходимо проверить <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A> свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-267">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="b88e5-268">Проверьте <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> свойства, чтобы определить, произошла ли взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-268">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="b88e5-269">При сбое аутентификации, вы получите <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-269">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="b88e5-270">В этом случае можно повторить проверку подлинности на другие учетные данные.</span><span class="sxs-lookup"><span data-stu-id="b88e5-270">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="b88e5-271">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-271">The authentication failed.</span></span> <span data-ttu-id="b88e5-272">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-272">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="b88e5-273">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-273">The authentication failed.</span></span> <span data-ttu-id="b88e5-274">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-274">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b88e5-275">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="b88e5-275">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-276">Проверка подлинности уже выполнена.</span><span class="sxs-lookup"><span data-stu-id="b88e5-276">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="b88e5-277">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-277">-or-</span></span> 
<span data-ttu-id="b88e5-278">Этот поток уже использовался ранее при попытке проверки подлинности, что и сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-278">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="b88e5-279">Этот поток нельзя использовать для повторной проверки подлинности клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-279">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b88e5-280">Чтобы использовать явный <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-280">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="b88e5-281">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-281">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * string -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="b88e5-282"><see cref="T:System.Net.NetworkCredential" /> , Используемый для установления идентификации клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-282">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="b88e5-283">Службы имя участника (SPN), однозначно определяющее сервер для проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-283">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <summary><span data-ttu-id="b88e5-284">Вызывается клиентами для проверки подлинности клиента и при необходимости, сервера в соединении клиент сервер как асинхронная операция.</span><span class="sxs-lookup"><span data-stu-id="b88e5-284">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="b88e5-285">Процесс проверки подлинности использует заданные учетные данные клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-285">The authentication process uses the specified client credential.</span></span></summary>
        <returns><span data-ttu-id="b88e5-286">Объект задачи, представляющий асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="b88e5-286">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-287">Уровень олицетворения равен <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, уровень безопасности при <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, и запрашивается взаимной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-287">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="b88e5-288"><xref:System.Net.Security.NegotiateStream> Класса создают SPN, которые используются для взаимной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-288">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="b88e5-289">Если проверка подлинности завершается успешно, необходимо проверить <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A> свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-289">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="b88e5-290">Проверьте <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> свойства, чтобы определить, произошла ли взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-290">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="b88e5-291">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-291">The authentication failed.</span></span> <span data-ttu-id="b88e5-292">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-292">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="b88e5-293">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-293">The authentication failed.</span></span> <span data-ttu-id="b88e5-294">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-294">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b88e5-295">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="b88e5-295">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-296">Проверка подлинности уже выполнена.</span><span class="sxs-lookup"><span data-stu-id="b88e5-296">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="b88e5-297">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-297">-or-</span></span> 
<span data-ttu-id="b88e5-298">Этот поток уже использовался ранее при попытке проверки подлинности, что и сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-298">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="b88e5-299">Этот поток нельзя использовать для повторной проверки подлинности клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-299">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b88e5-300">Свойство <paramref name="targetName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-300"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b88e5-301">Чтобы использовать явный <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-301">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="b88e5-302">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-302">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, binding, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetName" Type="System.String" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="b88e5-303"><see cref="T:System.Net.NetworkCredential" /> , Используемый для установления идентификации клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-303">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="b88e5-304"><see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> , Используемый для расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="b88e5-304">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="b88e5-305">Службы имя участника (SPN), однозначно определяющее сервер для проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-305">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <summary><span data-ttu-id="b88e5-306">Вызывается клиентами для проверки подлинности клиента и при необходимости, сервера в соединении клиент сервер как асинхронная операция.</span><span class="sxs-lookup"><span data-stu-id="b88e5-306">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="b88e5-307">Процесс проверки подлинности использует заданные учетные данные клиента и привязку канала.</span><span class="sxs-lookup"><span data-stu-id="b88e5-307">The authentication process uses the specified client credential and the channel binding.</span></span></summary>
        <returns><span data-ttu-id="b88e5-308">Объект задачи, представляющий асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="b88e5-308">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-309">Уровень олицетворения равен <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, уровень безопасности при <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, и запрашивается взаимной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-309">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="b88e5-310"><xref:System.Net.Security.NegotiateStream> Класса создают SPN, которые используются для взаимной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-310">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="b88e5-311"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> Для расширенной защиты, который передается этому методу в `binding` параметр будет вызываться из приложения <xref:System.Net.Security.SslStream.TransportContext%2A> свойства в связанном <xref:System.Net.Security.SslStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-311">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="b88e5-312">Если проверка подлинности завершается успешно, необходимо проверить <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A> свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-312">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="b88e5-313">Проверьте <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> свойства, чтобы определить, произошла ли взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-313">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b88e5-314">Свойство <paramref name="targetName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-314"><paramref name="targetName" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b88e5-315">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-315">-or-</span></span> 
 <span data-ttu-id="b88e5-316">Свойство <paramref name="credential" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-316"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="b88e5-317">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-317">The authentication failed.</span></span> <span data-ttu-id="b88e5-318">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-318">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="b88e5-319">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-319">The authentication failed.</span></span> <span data-ttu-id="b88e5-320">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-320">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-321">Проверка подлинности уже выполнена.</span><span class="sxs-lookup"><span data-stu-id="b88e5-321">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="b88e5-322">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-322">-or-</span></span> 
<span data-ttu-id="b88e5-323">Этот поток уже использовался ранее при попытке проверки подлинности, что и сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-323">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="b88e5-324">Этот поток нельзя использовать для повторной проверки подлинности клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-324">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b88e5-325">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="b88e5-325">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="b88e5-326">Встроенная аутентификация Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="b88e5-326">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="b88e5-327"><see cref="T:System.Net.NetworkCredential" /> , Используемый для установления идентификации клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-327">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="b88e5-328">Службы имя участника (SPN), однозначно определяющее сервер для проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-328">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="b88e5-329">Один из <see cref="T:System.Net.Security.ProtectionLevel" /> значений, указывающее службы безопасности для потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-329">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="b88e5-330">Один из <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> значений, указывающее, как сервер может использовать учетные данные клиента для доступа к ресурсам.</span><span class="sxs-lookup"><span data-stu-id="b88e5-330">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="b88e5-331">Вызывается клиентами для проверки подлинности клиента и при необходимости, сервера в соединении клиент сервер как асинхронная операция.</span><span class="sxs-lookup"><span data-stu-id="b88e5-331">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="b88e5-332">Процесс проверки подлинности использует заданные учетные данные и параметры проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-332">The authentication process uses the specified credentials and authentication options.</span></span></summary>
        <returns><span data-ttu-id="b88e5-333">Объект задачи, представляющий асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="b88e5-333">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-334">Используйте `requiredProtectionLevel` параметр для запроса служб безопасности для данных, передаваемых через поток с проверкой подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-334">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="b88e5-335">Например, чтобы данные шифруются и подписываются, указать <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> значение.</span><span class="sxs-lookup"><span data-stu-id="b88e5-335">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="b88e5-336">Успешная проверка подлинности не гарантирует, что запрошенный <xref:System.Net.Security.ProtectionLevel> было предоставлено.</span><span class="sxs-lookup"><span data-stu-id="b88e5-336">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="b88e5-337">Необходимо проверить <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A> свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-337">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="b88e5-338">При сбое аутентификации, вы получите <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-338">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="b88e5-339">В этом случае можно повторить проверку подлинности на другие учетные данные.</span><span class="sxs-lookup"><span data-stu-id="b88e5-339">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b88e5-340"><paramref name="allowedImpersonationLevel" /> не является допустимым значением.</span><span class="sxs-lookup"><span data-stu-id="b88e5-340"><paramref name="allowedImpersonationLevel" /> is not a valid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b88e5-341">Параметр <paramref name="targetName" /> имеет значение null.</span><span class="sxs-lookup"><span data-stu-id="b88e5-341"><paramref name="targetName" /> is null.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="b88e5-342">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-342">The authentication failed.</span></span> <span data-ttu-id="b88e5-343">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-343">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="b88e5-344">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-344">The authentication failed.</span></span> <span data-ttu-id="b88e5-345">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-345">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b88e5-346">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="b88e5-346">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-347">Проверка подлинности уже выполнена.</span><span class="sxs-lookup"><span data-stu-id="b88e5-347">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="b88e5-348">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-348">-or-</span></span> 
<span data-ttu-id="b88e5-349">Этот поток уже использовался ранее при попытке проверки подлинности, что и сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-349">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="b88e5-350">Этот поток нельзя использовать для повторной проверки подлинности клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-350">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b88e5-351">Чтобы использовать явный <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-351">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="b88e5-352">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-352">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetName" Type="System.String" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="b88e5-353"><see cref="T:System.Net.NetworkCredential" /> , Используемый для установления идентификации клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-353">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="b88e5-354"><see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> , Используемый для расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="b88e5-354">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="b88e5-355">Службы имя участника (SPN), однозначно определяющее сервер для проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-355">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="b88e5-356">Один из <see cref="T:System.Net.Security.ProtectionLevel" /> значений, указывающее службы безопасности для потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-356">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="b88e5-357">Один из <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> значений, указывающее, как сервер может использовать учетные данные клиента для доступа к ресурсам.</span><span class="sxs-lookup"><span data-stu-id="b88e5-357">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="b88e5-358">Вызывается клиентами для проверки подлинности клиента и при необходимости, сервера в соединении клиент сервер как асинхронная операция.</span><span class="sxs-lookup"><span data-stu-id="b88e5-358">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="b88e5-359">Процесс проверки подлинности использует указанные учетные данные, параметры проверки подлинности и привязку канала.</span><span class="sxs-lookup"><span data-stu-id="b88e5-359">The authentication process uses the specified credential, authentication options, and channel binding.</span></span></summary>
        <returns><span data-ttu-id="b88e5-360">Объект задачи, представляющий асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="b88e5-360">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-361">Используйте `requiredProtectionLevel` параметр для запроса служб безопасности для данных, передаваемых через поток с проверкой подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-361">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="b88e5-362">Например, чтобы данные шифруются и подписываются, указать <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> значение.</span><span class="sxs-lookup"><span data-stu-id="b88e5-362">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="b88e5-363">Успешная проверка подлинности не гарантирует, что запрошенный <xref:System.Net.Security.ProtectionLevel> было предоставлено.</span><span class="sxs-lookup"><span data-stu-id="b88e5-363">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="b88e5-364">Необходимо проверить <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A> свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-364">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="b88e5-365"><xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> Для расширенной защиты, который передается этому методу в `binding` параметр будет вызываться из приложения <xref:System.Net.Security.SslStream.TransportContext%2A> свойства в связанном <xref:System.Net.Security.SslStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-365">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="b88e5-366">При сбое аутентификации, вы получите <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-366">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="b88e5-367">В этом случае можно повторить проверку подлинности на другие учетные данные.</span><span class="sxs-lookup"><span data-stu-id="b88e5-367">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b88e5-368">Свойство <paramref name="targetName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-368"><paramref name="targetName" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b88e5-369">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-369">-or-</span></span> 
 <span data-ttu-id="b88e5-370">Свойство <paramref name="credential" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-370"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b88e5-371"><paramref name="allowedImpersonationLevel" /> не является допустимым значением.</span><span class="sxs-lookup"><span data-stu-id="b88e5-371"><paramref name="allowedImpersonationLevel" /> is not a valid value.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="b88e5-372">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-372">The authentication failed.</span></span> <span data-ttu-id="b88e5-373">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-373">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="b88e5-374">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-374">The authentication failed.</span></span> <span data-ttu-id="b88e5-375">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-375">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-376">Проверка подлинности уже выполнена.</span><span class="sxs-lookup"><span data-stu-id="b88e5-376">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="b88e5-377">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-377">-or-</span></span> 
<span data-ttu-id="b88e5-378">Этот поток уже использовался ранее при попытке проверки подлинности, что и сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-378">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="b88e5-379">Этот поток нельзя использовать для повторной проверки подлинности клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-379">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b88e5-380">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="b88e5-380">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="b88e5-381">Встроенная аутентификация Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="b88e5-381">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b88e5-382">Обрабатывает серверную сторону аутентификации для соединения клиент сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-382">Handles the server side of an authentication for a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-383">Эти методы блокируются во время проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-383">These methods block while the authentication is in progress.</span></span> <span data-ttu-id="b88e5-384">Чтобы предотвратить приложения от блокировки при ожидании завершения операции проверки подлинности, используйте <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="b88e5-384">To prevent the application from blocking while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : unit -&gt; unit&#xA;override this.AuthenticateAsServer : unit -&gt; unit" Usage="negotiateStream.AuthenticateAsServer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b88e5-385">Вызывается серверами для проверки подлинности клиента и при необходимости, сервера в соединении клиент сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-385">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-386">Проверка подлинности использует сервер <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-386">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="b88e5-387">Нет службы имя участника (SPN), указанную для сервера.</span><span class="sxs-lookup"><span data-stu-id="b88e5-387">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="b88e5-388">Уровень олицетворения равен <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, и уровень безопасности при <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-388">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="b88e5-389">Если проверка подлинности завершается успешно, необходимо проверить <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A> свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-389">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="b88e5-390">Проверьте <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> свойства, чтобы определить, произошла ли взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-390">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="b88e5-391">Этот метод блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-391">This method blocks until the operation completes.</span></span> <span data-ttu-id="b88e5-392">Чтобы предотвратить блокировку до завершения операции, используйте один из <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> перегрузок метода.</span><span class="sxs-lookup"><span data-stu-id="b88e5-392">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="b88e5-393">При сбое аутентификации, вы получите <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-393">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="b88e5-394">В этом случае можно повторить проверку подлинности на другие учетные данные.</span><span class="sxs-lookup"><span data-stu-id="b88e5-394">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="b88e5-395">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-395">The authentication failed.</span></span> <span data-ttu-id="b88e5-396">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-396">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="b88e5-397">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-397">The authentication failed.</span></span> <span data-ttu-id="b88e5-398">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-398">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b88e5-399">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="b88e5-399">This object has been closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b88e5-400">Windows 95 и Windows 98 не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="b88e5-400">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b88e5-401">Чтобы использовать явный <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-401">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="b88e5-402">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-402">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (policy As ExtendedProtectionPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; unit" Usage="negotiateStream.AuthenticateAsServer policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="policy"><span data-ttu-id="b88e5-403"><see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> , Используемый для расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="b88e5-403">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <summary><span data-ttu-id="b88e5-404">Вызывается серверами для проверки подлинности клиента и при необходимости, сервера в соединении клиент сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-404">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="b88e5-405">Процесс проверки подлинности использует заданную политику расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="b88e5-405">The authentication process uses the specified extended protection policy.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-406">Проверка подлинности использует сервер <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-406">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="b88e5-407">Нет службы имя участника (SPN), указанную для сервера.</span><span class="sxs-lookup"><span data-stu-id="b88e5-407">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="b88e5-408">Уровень олицетворения равен <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, и уровень безопасности при <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-408">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="b88e5-409">Если `policy` параметр `null`, а затем используется Расширенная политика защиты, который имеет <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> присвоено <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-409">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="b88e5-410">Если проверка подлинности завершается успешно, необходимо проверить <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A> свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-410">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="b88e5-411">Проверьте <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> свойства, чтобы определить, произошла ли взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-411">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="b88e5-412">Этот метод блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-412">This method blocks until the operation completes.</span></span> <span data-ttu-id="b88e5-413">Чтобы предотвратить блокировку до завершения операции, используйте один из <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> перегрузок метода.</span><span class="sxs-lookup"><span data-stu-id="b88e5-413">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="b88e5-414">При сбое аутентификации, вы получите <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-414">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="b88e5-415">В этом случае можно повторить проверку подлинности на другие учетные данные.</span><span class="sxs-lookup"><span data-stu-id="b88e5-415">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b88e5-416"><see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> И <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> политику расширенной защиты, переданной <paramref name="policy" /> оба параметра являются <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-416">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="b88e5-417">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-417">The authentication failed.</span></span> <span data-ttu-id="b88e5-418">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-418">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="b88e5-419">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-419">The authentication failed.</span></span> <span data-ttu-id="b88e5-420">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-420">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b88e5-421">Windows 95 и Windows 98 не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="b88e5-421">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b88e5-422">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="b88e5-422">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b88e5-423"><paramref name="policy" /> Параметра было задано значение <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> на платформу, которая не поддерживает расширенную защиту.</span><span class="sxs-lookup"><span data-stu-id="b88e5-423">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="b88e5-424">Встроенная аутентификация Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="b88e5-424">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsServer (credential, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="b88e5-425"><see cref="T:System.Net.NetworkCredential" /> , Используемый для установления идентификации сервера.</span><span class="sxs-lookup"><span data-stu-id="b88e5-425">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="b88e5-426">Один из <see cref="T:System.Net.Security.ProtectionLevel" /> значений, указывающее службы безопасности для потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-426">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="b88e5-427">Один из <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> значений, указывающее, как сервер может использовать учетные данные клиента для доступа к ресурсам.</span><span class="sxs-lookup"><span data-stu-id="b88e5-427">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="b88e5-428">Вызывается серверами для проверки подлинности клиента и при необходимости, сервера в соединении клиент сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-428">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="b88e5-429">Процесс проверки подлинности использует заданные учетные данные сервера и параметры проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-429">The authentication process uses the specified server credentials and authentication options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-430">Если проверка подлинности завершается успешно, необходимо проверить <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A> свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-430">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="b88e5-431">Проверьте <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> свойства, чтобы определить, произошла ли взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-431">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="b88e5-432">Этот метод блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-432">This method blocks until the operation completes.</span></span> <span data-ttu-id="b88e5-433">Чтобы предотвратить блокировку до завершения операции, используйте один из <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> перегрузок метода.</span><span class="sxs-lookup"><span data-stu-id="b88e5-433">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="b88e5-434">При сбое аутентификации, вы получите <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-434">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="b88e5-435">В этом случае можно повторить проверку подлинности на другие учетные данные.</span><span class="sxs-lookup"><span data-stu-id="b88e5-435">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b88e5-436">Свойство <paramref name="credential" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-436"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b88e5-437"><paramref name="requiredImpersonationLevel" /> должно быть <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, или <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span><span class="sxs-lookup"><span data-stu-id="b88e5-437"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="b88e5-438">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-438">The authentication failed.</span></span> <span data-ttu-id="b88e5-439">Этот объект можно использовать для проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-439">You can use this object to try to r-authenticate.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="b88e5-440">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-440">The authentication failed.</span></span> <span data-ttu-id="b88e5-441">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-441">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b88e5-442">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="b88e5-442">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-443">Проверка подлинности уже выполнена.</span><span class="sxs-lookup"><span data-stu-id="b88e5-443">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="b88e5-444">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-444">-or-</span></span> 
<span data-ttu-id="b88e5-445">Этот поток уже использовался ранее при попытке проверки подлинности как клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-445">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="b88e5-446">Этот поток нельзя использовать для повторной проверки подлинности, что и сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-446">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b88e5-447">Windows 95 и Windows 98 не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="b88e5-447">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b88e5-448">Чтобы использовать явный <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-448">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="b88e5-449">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-449">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsServer (credential, policy, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="b88e5-450"><see cref="T:System.Net.NetworkCredential" /> , Используемый для установления идентификации клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-450">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="policy"><span data-ttu-id="b88e5-451"><see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> , Используемый для расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="b88e5-451">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="b88e5-452">Один из <see cref="T:System.Net.Security.ProtectionLevel" /> значений, указывающее службы безопасности для потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-452">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="b88e5-453">Один из <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> значений, указывающее, как сервер может использовать учетные данные клиента для доступа к ресурсам.</span><span class="sxs-lookup"><span data-stu-id="b88e5-453">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="b88e5-454">Вызывается серверами для проверки подлинности клиента и при необходимости, сервера в соединении клиент сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-454">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="b88e5-455">Процесс проверки подлинности использует заданные учетные данные сервера, параметры проверки подлинности и политику расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="b88e5-455">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-456">Если `policy` параметр `null`, а затем используется Расширенная политика защиты, который имеет <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> присвоено <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-456">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="b88e5-457">Если проверка подлинности завершается успешно, необходимо проверить <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A> свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-457">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="b88e5-458">Проверьте <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> свойства, чтобы определить, произошла ли взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-458">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="b88e5-459">Этот метод блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-459">This method blocks until the operation completes.</span></span> <span data-ttu-id="b88e5-460">Чтобы предотвратить блокировку до завершения операции, используйте один из <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> перегрузок метода.</span><span class="sxs-lookup"><span data-stu-id="b88e5-460">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="b88e5-461">При сбое аутентификации, вы получите <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-461">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="b88e5-462">В этом случае можно повторить проверку подлинности на другие учетные данные.</span><span class="sxs-lookup"><span data-stu-id="b88e5-462">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b88e5-463"><see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> И <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> политику расширенной защиты, переданной <paramref name="policy" /> оба параметра являются <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-463">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b88e5-464">Свойство <paramref name="credential" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-464"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b88e5-465"><paramref name="requiredImpersonationLevel" /> должно быть <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, или <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span><span class="sxs-lookup"><span data-stu-id="b88e5-465"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="b88e5-466">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-466">The authentication failed.</span></span> <span data-ttu-id="b88e5-467">Этот объект можно использовать для проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-467">You can use this object to try to r-authenticate.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="b88e5-468">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-468">The authentication failed.</span></span> <span data-ttu-id="b88e5-469">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-469">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-470">Проверка подлинности уже выполнена.</span><span class="sxs-lookup"><span data-stu-id="b88e5-470">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="b88e5-471">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-471">-or-</span></span> 
<span data-ttu-id="b88e5-472">Этот поток уже использовался ранее при попытке проверки подлинности как клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-472">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="b88e5-473">Этот поток нельзя использовать для повторной проверки подлинности, что и сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-473">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b88e5-474">Windows 95 и Windows 98 не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="b88e5-474">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b88e5-475">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="b88e5-475">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b88e5-476"><paramref name="policy" /> Параметра было задано значение <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> на платформу, которая не поддерживает расширенную защиту.</span><span class="sxs-lookup"><span data-stu-id="b88e5-476">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="b88e5-477">Встроенная аутентификация Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="b88e5-477">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b88e5-478">Обрабатывает серверную сторону аутентификации для соединения клиент сервер как асинхронная операция.</span><span class="sxs-lookup"><span data-stu-id="b88e5-478">Handles the server side of an authentication for a client-server connection as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : unit -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b88e5-479">Вызывается серверами для проверки подлинности клиента и при необходимости, сервера в соединении клиент сервер как асинхронная операция.</span><span class="sxs-lookup"><span data-stu-id="b88e5-479">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="b88e5-480">Объект задачи, представляющий асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="b88e5-480">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-481">Проверка подлинности использует сервер <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-481">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="b88e5-482">Нет службы имя участника (SPN), указанную для сервера.</span><span class="sxs-lookup"><span data-stu-id="b88e5-482">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="b88e5-483">Уровень олицетворения равен <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, и уровень безопасности при <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-483">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="b88e5-484">Если проверка подлинности завершается успешно, необходимо проверить <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A> свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-484">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="b88e5-485">Проверьте <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> свойства, чтобы определить, произошла ли взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-485">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="b88e5-486">При сбое аутентификации, вы получите <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-486">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="b88e5-487">В этом случае можно повторить проверку подлинности на другие учетные данные.</span><span class="sxs-lookup"><span data-stu-id="b88e5-487">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="b88e5-488">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-488">The authentication failed.</span></span> <span data-ttu-id="b88e5-489">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-489">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="b88e5-490">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-490">The authentication failed.</span></span> <span data-ttu-id="b88e5-491">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-491">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b88e5-492">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="b88e5-492">This object has been closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b88e5-493">Windows 95 и Windows 98 не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="b88e5-493">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b88e5-494">Чтобы использовать явный <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-494">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="b88e5-495">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-495">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (policy As ExtendedProtectionPolicy) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="policy"><span data-ttu-id="b88e5-496"><see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> , Используемый для расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="b88e5-496">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <summary><span data-ttu-id="b88e5-497">Вызывается серверами для проверки подлинности клиента и при необходимости, сервера в соединении клиент сервер как асинхронная операция.</span><span class="sxs-lookup"><span data-stu-id="b88e5-497">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="b88e5-498">Процесс проверки подлинности использует заданную политику расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="b88e5-498">The authentication process uses the specified extended protection policy.</span></span></summary>
        <returns><span data-ttu-id="b88e5-499">Объект задачи, представляющий асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="b88e5-499">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-500">Проверка подлинности использует сервер <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-500">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="b88e5-501">Нет службы имя участника (SPN), указанную для сервера.</span><span class="sxs-lookup"><span data-stu-id="b88e5-501">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="b88e5-502">Уровень олицетворения равен <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, и уровень безопасности при <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-502">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="b88e5-503">Если `policy` параметр `null`, а затем используется Расширенная политика защиты, который имеет <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> присвоено <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-503">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="b88e5-504">Если проверка подлинности завершается успешно, необходимо проверить <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A> свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-504">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="b88e5-505">Проверьте <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> свойства, чтобы определить, произошла ли взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-505">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="b88e5-506">При сбое аутентификации, вы получите <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-506">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="b88e5-507">В этом случае можно повторить проверку подлинности на другие учетные данные.</span><span class="sxs-lookup"><span data-stu-id="b88e5-507">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b88e5-508"><see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> И <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> политику расширенной защиты, переданной <paramref name="policy" /> оба параметра являются <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-508">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="b88e5-509">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-509">The authentication failed.</span></span> <span data-ttu-id="b88e5-510">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-510">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="b88e5-511">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-511">The authentication failed.</span></span> <span data-ttu-id="b88e5-512">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-512">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b88e5-513">Windows 95 и Windows 98 не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="b88e5-513">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b88e5-514">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="b88e5-514">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b88e5-515"><paramref name="policy" /> Параметра было задано значение <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> на платформу, которая не поддерживает расширенную защиту.</span><span class="sxs-lookup"><span data-stu-id="b88e5-515">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="b88e5-516">Встроенная аутентификация Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="b88e5-516">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync (credential, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="b88e5-517"><see cref="T:System.Net.NetworkCredential" /> , Используемый для установления идентификации сервера.</span><span class="sxs-lookup"><span data-stu-id="b88e5-517">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="b88e5-518">Один из <see cref="T:System.Net.Security.ProtectionLevel" /> значений, указывающее службы безопасности для потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-518">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="b88e5-519">Один из <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> значений, указывающее, как сервер может использовать учетные данные клиента для доступа к ресурсам.</span><span class="sxs-lookup"><span data-stu-id="b88e5-519">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="b88e5-520">Вызывается серверами для проверки подлинности клиента и при необходимости, сервера в соединении клиент сервер как асинхронная операция.</span><span class="sxs-lookup"><span data-stu-id="b88e5-520">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="b88e5-521">Процесс проверки подлинности использует заданные учетные данные сервера и параметры проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-521">The authentication process uses the specified server credentials and authentication options.</span></span></summary>
        <returns><span data-ttu-id="b88e5-522">Объект задачи, представляющий асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="b88e5-522">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-523">Если проверка подлинности завершается успешно, необходимо проверить <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A> свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-523">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="b88e5-524">Проверьте <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> свойства, чтобы определить, произошла ли взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-524">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="b88e5-525">При сбое аутентификации, вы получите <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-525">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="b88e5-526">В этом случае можно повторить проверку подлинности на другие учетные данные.</span><span class="sxs-lookup"><span data-stu-id="b88e5-526">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b88e5-527">Свойство <paramref name="credential" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-527"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b88e5-528"><paramref name="requiredImpersonationLevel" /> должно быть <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, или <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span><span class="sxs-lookup"><span data-stu-id="b88e5-528"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="b88e5-529">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-529">The authentication failed.</span></span> <span data-ttu-id="b88e5-530">Этот объект можно использовать для проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-530">You can use this object to try to r-authenticate.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="b88e5-531">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-531">The authentication failed.</span></span> <span data-ttu-id="b88e5-532">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-532">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b88e5-533">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="b88e5-533">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-534">Проверка подлинности уже выполнена.</span><span class="sxs-lookup"><span data-stu-id="b88e5-534">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="b88e5-535">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-535">-or-</span></span> 
<span data-ttu-id="b88e5-536">Этот поток уже использовался ранее при попытке проверки подлинности как клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-536">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="b88e5-537">Этот поток нельзя использовать для повторной проверки подлинности, что и сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-537">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b88e5-538">Windows 95 и Windows 98 не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="b88e5-538">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b88e5-539">Чтобы использовать явный <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-539">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="b88e5-540">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-540">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync (credential, policy, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="b88e5-541"><see cref="T:System.Net.NetworkCredential" /> , Используемый для установления идентификации клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-541">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="policy"><span data-ttu-id="b88e5-542"><see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> , Используемый для расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="b88e5-542">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="b88e5-543">Один из <see cref="T:System.Net.Security.ProtectionLevel" /> значений, указывающее службы безопасности для потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-543">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="b88e5-544">Один из <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> значений, указывающее, как сервер может использовать учетные данные клиента для доступа к ресурсам.</span><span class="sxs-lookup"><span data-stu-id="b88e5-544">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="b88e5-545">Вызывается серверами для проверки подлинности клиента и при необходимости, сервера в соединении клиент сервер как асинхронная операция.</span><span class="sxs-lookup"><span data-stu-id="b88e5-545">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="b88e5-546">Процесс проверки подлинности использует заданные учетные данные сервера, параметры проверки подлинности и политику расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="b88e5-546">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span></span></summary>
        <returns><span data-ttu-id="b88e5-547">Объект задачи, представляющий асинхронную операцию.</span><span class="sxs-lookup"><span data-stu-id="b88e5-547">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-548">Если `policy` параметр `null`, а затем используется Расширенная политика защиты, который имеет <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> присвоено <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-548">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="b88e5-549">Если проверка подлинности завершается успешно, необходимо проверить <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A> свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-549">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="b88e5-550">Проверьте <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> свойства, чтобы определить, произошла ли взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-550">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="b88e5-551">При сбое аутентификации, вы получите <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-551">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="b88e5-552">В этом случае можно повторить проверку подлинности на другие учетные данные.</span><span class="sxs-lookup"><span data-stu-id="b88e5-552">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b88e5-553"><see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> И <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> политику расширенной защиты, переданной <paramref name="policy" /> оба параметра являются <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-553">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b88e5-554">Свойство <paramref name="credential" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-554"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b88e5-555"><paramref name="requiredImpersonationLevel" /> должно быть <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, или <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span><span class="sxs-lookup"><span data-stu-id="b88e5-555"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="b88e5-556">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-556">The authentication failed.</span></span> <span data-ttu-id="b88e5-557">Этот объект можно использовать для проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-557">You can use this object to try to r-authenticate.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="b88e5-558">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-558">The authentication failed.</span></span> <span data-ttu-id="b88e5-559">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-559">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-560">Проверка подлинности уже выполнена.</span><span class="sxs-lookup"><span data-stu-id="b88e5-560">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="b88e5-561">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-561">-or-</span></span> 
<span data-ttu-id="b88e5-562">Этот поток уже использовался ранее при попытке проверки подлинности как клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-562">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="b88e5-563">Этот поток нельзя использовать для повторной проверки подлинности, что и сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-563">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b88e5-564">Windows 95 и Windows 98 не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="b88e5-564">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b88e5-565">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="b88e5-565">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b88e5-566"><paramref name="policy" /> Параметра было задано значение <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> на платформу, которая не поддерживает расширенную защиту.</span><span class="sxs-lookup"><span data-stu-id="b88e5-566">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="b88e5-567">Встроенная аутентификация Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="b88e5-567">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b88e5-568">Начинает асинхронную операцию для проверки подлинности клиентской стороны соединения клиент сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-568">Begins an asynchronous operation to authenticate the client side of a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-569">Перегрузки этого метода не блокируют во время проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-569">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="b88e5-570">Чтобы заблокировать при ожидании завершения операции проверки подлинности, используйте один из <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="b88e5-570">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncCallback"><span data-ttu-id="b88e5-571">Делегат <see cref="T:System.AsyncCallback" />, который ссылается на метод, вызываемый после выполнения проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-571">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="b88e5-572">Определяемый пользователем объект, содержащий сведения об операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-572">A user-defined object containing information about the operation.</span></span> <span data-ttu-id="b88e5-573">Этот объект передается делегату <paramref name="asyncCallback" /> после завершения операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-573">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="b88e5-574">Вызывается клиентами для запуска асинхронной операции для проверки подлинности клиента и при необходимости, сервера в соединении клиент сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-574">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="b88e5-575">Этот метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="b88e5-575">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="b88e5-576"><see cref="T:System.IAsyncResult" /> , Указывающий состояние асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-576">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-577">Проверка подлинности использует клиента <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-577">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="b88e5-578">Нет службы имя участника (SPN), указанную для сервера.</span><span class="sxs-lookup"><span data-stu-id="b88e5-578">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="b88e5-579">Уровень олицетворения равен <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, и уровень безопасности при <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-579">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span> <span data-ttu-id="b88e5-580"><xref:System.Net.Security.NegotiateStream> Класса создают SPN, которые используются для взаимной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-580">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="b88e5-581">Этот метод является асинхронным и блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-581">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="b88e5-582">Чтобы заблокировать до завершения операции, используйте один из <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> перегрузок метода.</span><span class="sxs-lookup"><span data-stu-id="b88e5-582">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="b88e5-583">Необходимо выполнить операцию асинхронной проверки подлинности, путем вызова <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="b88e5-583">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="b88e5-584">Как правило, вызывается метод `asyncCallback` делегировать.</span><span class="sxs-lookup"><span data-stu-id="b88e5-584">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="b88e5-585">Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="b88e5-585">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="b88e5-586">При сбое аутентификации, вы получите <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-586">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="b88e5-587">В этом случае можно повторить проверку подлинности на другие учетные данные.</span><span class="sxs-lookup"><span data-stu-id="b88e5-587">In this case, you can retry the authentication with a different credential.</span></span>  
  
   
  
## Examples  
<span data-ttu-id="b88e5-588">В следующем примере выполняется вызов этого метода для начала асинхронной проверки подлинности для клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-588">The following example demonstrates calling this method to begin an asynchronous authentication for the client.</span></span>  
  
[!code-cpp[NclNegoAsyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#2)]
[!code-csharp[NclNegoAsyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#2)]  
[!code-vb[NclNegoAsyncClient#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNegoasyncClient/VB/client.vb#2)] 

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="b88e5-589">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-589">The authentication failed.</span></span> <span data-ttu-id="b88e5-590">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-590">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="b88e5-591">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-591">The authentication failed.</span></span> <span data-ttu-id="b88e5-592">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-592">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b88e5-593">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="b88e5-593">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-594">Проверка подлинности уже выполнена.</span><span class="sxs-lookup"><span data-stu-id="b88e5-594">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="b88e5-595">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-595">-or-</span></span> 
<span data-ttu-id="b88e5-596">Этот поток уже использовался ранее при попытке проверки подлинности, что и сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-596">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="b88e5-597">Этот поток нельзя использовать для повторной проверки подлинности клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-597">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b88e5-598">Чтобы использовать явный <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-598">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="b88e5-599">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-599">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, targetName, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="b88e5-600"><see cref="T:System.Net.NetworkCredential" /> , Используемый для установления идентификации клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-600">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="b88e5-601">Службы имя участника (SPN), однозначно определяющее сервер для проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-601">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="b88e5-602">Делегат <see cref="T:System.AsyncCallback" />, который ссылается на метод, вызываемый после выполнения проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-602">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="b88e5-603">Определяемый пользователем объект, содержащий сведения об операции записи.</span><span class="sxs-lookup"><span data-stu-id="b88e5-603">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="b88e5-604">Этот объект передается делегату <paramref name="asyncCallback" /> после завершения операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-604">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="b88e5-605">Вызывается клиентами для запуска асинхронной операции для проверки подлинности клиента и при необходимости, сервера в соединении клиент сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-605">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="b88e5-606">Процесс проверки подлинности использует заданные учетные данные.</span><span class="sxs-lookup"><span data-stu-id="b88e5-606">The authentication process uses the specified credentials.</span></span> <span data-ttu-id="b88e5-607">Этот метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="b88e5-607">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="b88e5-608"><see cref="T:System.IAsyncResult" /> , Указывающий состояние асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-608">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-609">Этот метод является асинхронным и блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-609">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="b88e5-610">Чтобы заблокировать до завершения операции, используйте один из <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> перегрузок метода.</span><span class="sxs-lookup"><span data-stu-id="b88e5-610">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="b88e5-611">Необходимо выполнить операцию асинхронной проверки подлинности, путем вызова <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="b88e5-611">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="b88e5-612">Как правило, вызывается метод `asyncCallback` делегировать.</span><span class="sxs-lookup"><span data-stu-id="b88e5-612">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="b88e5-613">Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="b88e5-613">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="b88e5-614">При сбое аутентификации, вы получите <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-614">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="b88e5-615">В этом случае можно повторить проверку подлинности на другие учетные данные.</span><span class="sxs-lookup"><span data-stu-id="b88e5-615">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b88e5-616">Свойство <paramref name="credential" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-616"><paramref name="credential" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b88e5-617">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-617">-or-</span></span> 
 <span data-ttu-id="b88e5-618">Свойство <paramref name="targetName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-618"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="b88e5-619">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-619">The authentication failed.</span></span> <span data-ttu-id="b88e5-620">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-620">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="b88e5-621">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-621">The authentication failed.</span></span> <span data-ttu-id="b88e5-622">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-622">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b88e5-623">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="b88e5-623">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-624">Проверка подлинности уже выполнена.</span><span class="sxs-lookup"><span data-stu-id="b88e5-624">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="b88e5-625">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-625">-or-</span></span> 
<span data-ttu-id="b88e5-626">Этот поток уже использовался ранее при попытке проверки подлинности, что и сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-626">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="b88e5-627">Этот поток нельзя использовать для повторной проверки подлинности клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-627">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b88e5-628">Чтобы использовать явный <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-628">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="b88e5-629">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-629">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, binding, targetName, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="targetName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="b88e5-630"><see cref="T:System.Net.NetworkCredential" /> , Используемый для установления идентификации клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-630">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="b88e5-631"><see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> , Используемый для расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="b88e5-631">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="b88e5-632">Службы имя участника (SPN), однозначно определяющее сервер для проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-632">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="b88e5-633">Делегат <see cref="T:System.AsyncCallback" />, который ссылается на метод, вызываемый после выполнения проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-633">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="b88e5-634">Определяемый пользователем объект, содержащий сведения об операции записи.</span><span class="sxs-lookup"><span data-stu-id="b88e5-634">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="b88e5-635">Этот объект передается делегату <paramref name="asyncCallback" /> после завершения операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-635">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="b88e5-636">Вызывается клиентами для запуска асинхронной операции для проверки подлинности клиента и при необходимости, сервера в соединении клиент сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-636">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="b88e5-637">Процесс проверки подлинности использует заданные учетные данные и привязку канала.</span><span class="sxs-lookup"><span data-stu-id="b88e5-637">The authentication process uses the specified credentials and channel binding.</span></span> <span data-ttu-id="b88e5-638">Этот метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="b88e5-638">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="b88e5-639"><see cref="T:System.IAsyncResult" /> , Указывающий состояние асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-639">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-640">Этот метод является асинхронным и блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-640">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="b88e5-641">Чтобы заблокировать до завершения операции, используйте один из <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> перегрузок метода.</span><span class="sxs-lookup"><span data-stu-id="b88e5-641">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="b88e5-642">Необходимо выполнить операцию асинхронной проверки подлинности, путем вызова <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="b88e5-642">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="b88e5-643">Как правило, вызывается метод `asyncCallback` делегировать.</span><span class="sxs-lookup"><span data-stu-id="b88e5-643">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="b88e5-644">Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="b88e5-644">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="b88e5-645">При сбое аутентификации, вы получите <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-645">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="b88e5-646">В этом случае можно повторить проверку подлинности на другие учетные данные.</span><span class="sxs-lookup"><span data-stu-id="b88e5-646">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b88e5-647">Свойство <paramref name="credential" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-647"><paramref name="credential" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b88e5-648">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-648">-or-</span></span> 
 <span data-ttu-id="b88e5-649">Свойство <paramref name="targetName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-649"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="b88e5-650">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-650">The authentication failed.</span></span> <span data-ttu-id="b88e5-651">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-651">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="b88e5-652">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-652">The authentication failed.</span></span> <span data-ttu-id="b88e5-653">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-653">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-654">Проверка подлинности уже выполнена.</span><span class="sxs-lookup"><span data-stu-id="b88e5-654">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="b88e5-655">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-655">-or-</span></span> 
<span data-ttu-id="b88e5-656">Этот поток уже использовался ранее при попытке проверки подлинности, что и сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-656">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="b88e5-657">Этот поток нельзя использовать для повторной проверки подлинности клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-657">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b88e5-658">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="b88e5-658">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="b88e5-659">Встроенная аутентификация Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="b88e5-659">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="b88e5-660"><see cref="T:System.Net.NetworkCredential" /> , Используемый для установления идентификации клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-660">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="b88e5-661">Службы имя участника (SPN), однозначно определяющее сервер для проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-661">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="b88e5-662">Один из <see cref="T:System.Net.Security.ProtectionLevel" /> значений, указывающее службы безопасности для потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-662">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="b88e5-663">Один из <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> значений, указывающее, как сервер может использовать учетные данные клиента для доступа к ресурсам.</span><span class="sxs-lookup"><span data-stu-id="b88e5-663">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="b88e5-664">Делегат <see cref="T:System.AsyncCallback" />, который ссылается на метод, вызываемый после выполнения проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-664">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="b88e5-665">Определяемый пользователем объект, содержащий сведения об операции записи.</span><span class="sxs-lookup"><span data-stu-id="b88e5-665">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="b88e5-666">Этот объект передается делегату <paramref name="asyncCallback" /> после завершения операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-666">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="b88e5-667">Вызывается клиентами для запуска асинхронной операции для проверки подлинности клиента и при необходимости, сервера в соединении клиент сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-667">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="b88e5-668">Процесс проверки подлинности использует заданные учетные данные и параметры проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-668">The authentication process uses the specified credentials and authentication options.</span></span> <span data-ttu-id="b88e5-669">Этот метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="b88e5-669">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="b88e5-670"><see cref="T:System.IAsyncResult" /> , Указывающий состояние асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-670">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-671">Используйте `requiredProtectionLevel` параметр для запроса служб безопасности для данных, передаваемых через поток с проверкой подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-671">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="b88e5-672">Например, чтобы данные шифруются и подписываются, указать <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> значение.</span><span class="sxs-lookup"><span data-stu-id="b88e5-672">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="b88e5-673">Успешная проверка подлинности не гарантирует, что запрошенный <xref:System.Net.Security.ProtectionLevel> было предоставлено.</span><span class="sxs-lookup"><span data-stu-id="b88e5-673">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="b88e5-674">Необходимо проверить <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A> свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-674">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="b88e5-675">Этот метод является асинхронным и блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-675">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="b88e5-676">Чтобы заблокировать до завершения операции, используйте один из <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> перегрузок метода.</span><span class="sxs-lookup"><span data-stu-id="b88e5-676">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="b88e5-677">Необходимо выполнить операцию асинхронной проверки подлинности, путем вызова <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="b88e5-677">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="b88e5-678">Как правило, вызывается метод `asyncCallback` делегировать.</span><span class="sxs-lookup"><span data-stu-id="b88e5-678">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="b88e5-679">Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="b88e5-679">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="b88e5-680">При сбое аутентификации, вы получите <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-680">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="b88e5-681">В этом случае можно повторить проверку подлинности на другие учетные данные.</span><span class="sxs-lookup"><span data-stu-id="b88e5-681">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b88e5-682">Свойство <paramref name="credential" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-682"><paramref name="credential" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b88e5-683">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-683">-or-</span></span> 
 <span data-ttu-id="b88e5-684">Свойство <paramref name="targetName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-684"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="b88e5-685">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-685">The authentication failed.</span></span> <span data-ttu-id="b88e5-686">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-686">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="b88e5-687">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-687">The authentication failed.</span></span> <span data-ttu-id="b88e5-688">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-688">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b88e5-689">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="b88e5-689">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-690">Проверка подлинности уже выполнена.</span><span class="sxs-lookup"><span data-stu-id="b88e5-690">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="b88e5-691">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-691">-or-</span></span> 
<span data-ttu-id="b88e5-692">Этот поток уже использовался ранее при попытке проверки подлинности, что и сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-692">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="b88e5-693">Этот поток нельзя использовать для повторной проверки подлинности клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-693">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b88e5-694">Чтобы использовать явный <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-694">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="b88e5-695">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-695">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="targetName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="b88e5-696"><see cref="T:System.Net.NetworkCredential" /> , Используемый для установления идентификации клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-696">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="b88e5-697"><see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> , Используемый для расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="b88e5-697">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="b88e5-698">Службы имя участника (SPN), однозначно определяющее сервер для проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-698">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="b88e5-699">Один из <see cref="T:System.Net.Security.ProtectionLevel" /> значений, указывающее службы безопасности для потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-699">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="b88e5-700">Один из <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> значений, указывающее, как сервер может использовать учетные данные клиента для доступа к ресурсам.</span><span class="sxs-lookup"><span data-stu-id="b88e5-700">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="b88e5-701">Делегат <see cref="T:System.AsyncCallback" />, который ссылается на метод, вызываемый после выполнения проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-701">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="b88e5-702">Определяемый пользователем объект, содержащий сведения об операции записи.</span><span class="sxs-lookup"><span data-stu-id="b88e5-702">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="b88e5-703">Этот объект передается делегату <paramref name="asyncCallback" /> после завершения операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-703">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="b88e5-704">Вызывается клиентами для запуска асинхронной операции для проверки подлинности клиента и при необходимости, сервера в соединении клиент сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-704">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="b88e5-705">Процесс проверки подлинности использует заданные учетные данные, параметры проверки подлинности и привязку канала.</span><span class="sxs-lookup"><span data-stu-id="b88e5-705">The authentication process uses the specified credentials, authentication options, and channel binding.</span></span> <span data-ttu-id="b88e5-706">Этот метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="b88e5-706">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="b88e5-707"><see cref="T:System.IAsyncResult" /> , Указывающий состояние асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-707">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-708">Используйте `requiredProtectionLevel` параметр для запроса служб безопасности для данных, передаваемых через поток с проверкой подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-708">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="b88e5-709">Например, чтобы данные шифруются и подписываются, указать <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> значение.</span><span class="sxs-lookup"><span data-stu-id="b88e5-709">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="b88e5-710">Успешная проверка подлинности не гарантирует, что запрошенный <xref:System.Net.Security.ProtectionLevel> было предоставлено.</span><span class="sxs-lookup"><span data-stu-id="b88e5-710">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="b88e5-711">Необходимо проверить <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A> свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-711">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="b88e5-712">Этот метод является асинхронным и блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-712">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="b88e5-713">Чтобы заблокировать до завершения операции, используйте один из <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> перегрузок метода.</span><span class="sxs-lookup"><span data-stu-id="b88e5-713">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="b88e5-714">Необходимо выполнить операцию асинхронной проверки подлинности, путем вызова <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="b88e5-714">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="b88e5-715">Как правило, вызывается метод `asyncCallback` делегировать.</span><span class="sxs-lookup"><span data-stu-id="b88e5-715">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="b88e5-716">Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="b88e5-716">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="b88e5-717">При сбое аутентификации, вы получите <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-717">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="b88e5-718">В этом случае можно повторить проверку подлинности на другие учетные данные.</span><span class="sxs-lookup"><span data-stu-id="b88e5-718">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b88e5-719">Свойство <paramref name="credential" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-719"><paramref name="credential" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b88e5-720">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-720">-or-</span></span> 
 <span data-ttu-id="b88e5-721">Свойство <paramref name="targetName" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-721"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="b88e5-722">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-722">The authentication failed.</span></span> <span data-ttu-id="b88e5-723">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-723">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="b88e5-724">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-724">The authentication failed.</span></span> <span data-ttu-id="b88e5-725">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-725">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-726">Проверка подлинности уже выполнена.</span><span class="sxs-lookup"><span data-stu-id="b88e5-726">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="b88e5-727">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-727">-or-</span></span> 
<span data-ttu-id="b88e5-728">Этот поток уже использовался ранее при попытке проверки подлинности, что и сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-728">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="b88e5-729">Этот поток нельзя использовать для повторной проверки подлинности клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-729">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b88e5-730">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="b88e5-730">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="b88e5-731">Встроенная аутентификация Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="b88e5-731">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b88e5-732">Начинает асинхронную операцию для серверной стороны соединения клиент сервер аутентификации.</span><span class="sxs-lookup"><span data-stu-id="b88e5-732">Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-733">Перегрузки этого метода не блокируют проверку подлинности во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="b88e5-733">The overloads of this method do not block while the authentication is in progress.</span></span> <span data-ttu-id="b88e5-734">Чтобы заблокировать при ожидании завершения операции проверки подлинности, использовать <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="b88e5-734">To block while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncCallback"><span data-ttu-id="b88e5-735">Делегат <see cref="T:System.AsyncCallback" />, который ссылается на метод, вызываемый после выполнения проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-735">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="b88e5-736">Определяемый пользователем объект, содержащий сведения об операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-736">A user-defined object containing information about the operation.</span></span> <span data-ttu-id="b88e5-737">Этот объект передается делегату <paramref name="asyncCallback" /> после завершения операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-737">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="b88e5-738">Вызывается серверами для начала асинхронной операции проверки подлинности клиента и при необходимости, сервера в соединении клиент сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-738">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="b88e5-739">Этот метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="b88e5-739">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="b88e5-740"><see cref="T:System.IAsyncResult" /> , Указывающий состояние асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-740">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-741">Проверка подлинности использует сервер <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-741">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="b88e5-742">Нет службы имя участника (SPN), указанную для сервера.</span><span class="sxs-lookup"><span data-stu-id="b88e5-742">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="b88e5-743">Уровень олицетворения равен <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, уровень безопасности при <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-743">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="b88e5-744">Если проверка подлинности завершается успешно, необходимо проверить <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A> свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-744">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="b88e5-745">Проверьте <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> свойства, чтобы определить, произошла ли взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-745">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="b88e5-746">Чтобы заблокировать до завершения операции, используйте один из <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> перегрузок метода.</span><span class="sxs-lookup"><span data-stu-id="b88e5-746">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="b88e5-747">При сбое аутентификации, вы получите <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-747">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="b88e5-748">В этом случае можно повторить проверку подлинности на другие учетные данные.</span><span class="sxs-lookup"><span data-stu-id="b88e5-748">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="b88e5-749">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-749">The authentication failed.</span></span> <span data-ttu-id="b88e5-750">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-750">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="b88e5-751">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-751">The authentication failed.</span></span> <span data-ttu-id="b88e5-752">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-752">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b88e5-753">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="b88e5-753">This object has been closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b88e5-754">Windows 95 и Windows 98 не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="b88e5-754">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b88e5-755">Чтобы использовать явный <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-755">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="b88e5-756">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-756">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (policy, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="policy"><span data-ttu-id="b88e5-757"><see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> , Используемый для расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="b88e5-757">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="b88e5-758">Делегат <see cref="T:System.AsyncCallback" />, который ссылается на метод, вызываемый после выполнения проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-758">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="b88e5-759">Определяемый пользователем объект, содержащий сведения об операции записи.</span><span class="sxs-lookup"><span data-stu-id="b88e5-759">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="b88e5-760">Этот объект передается делегату <paramref name="asyncCallback" /> после завершения операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-760">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="b88e5-761">Вызывается серверами для начала асинхронной операции проверки подлинности клиента и при необходимости, сервера в соединении клиент сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-761">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="b88e5-762">Процесс проверки подлинности использует заданную политику расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="b88e5-762">The authentication process uses the specified extended protection policy.</span></span> <span data-ttu-id="b88e5-763">Этот метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="b88e5-763">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="b88e5-764"><see cref="T:System.IAsyncResult" /> , Указывающий состояние асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-764">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-765">Проверка подлинности использует сервер <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-765">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="b88e5-766">Нет службы имя участника (SPN), указанную для сервера.</span><span class="sxs-lookup"><span data-stu-id="b88e5-766">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="b88e5-767">Уровень олицетворения равен <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, уровень безопасности при <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-767">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="b88e5-768">Если `policy` параметр `null`, а затем используется Расширенная политика защиты, который имеет <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> присвоено <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-768">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="b88e5-769">Если проверка подлинности завершается успешно, необходимо проверить <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A> свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-769">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="b88e5-770">Проверьте <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> свойства, чтобы определить, произошла ли взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-770">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="b88e5-771">Чтобы заблокировать до завершения операции, используйте один из <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> перегрузок метода.</span><span class="sxs-lookup"><span data-stu-id="b88e5-771">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="b88e5-772">При сбое аутентификации, вы получите <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-772">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="b88e5-773">В этом случае можно повторить проверку подлинности на другие учетные данные.</span><span class="sxs-lookup"><span data-stu-id="b88e5-773">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b88e5-774"><see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> И <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> политику расширенной защиты, переданной <paramref name="policy" /> оба параметра являются <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-774">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="b88e5-775">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-775">The authentication failed.</span></span> <span data-ttu-id="b88e5-776">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-776">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="b88e5-777">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-777">The authentication failed.</span></span> <span data-ttu-id="b88e5-778">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-778">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b88e5-779">Windows 95 и Windows 98 не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="b88e5-779">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b88e5-780">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="b88e5-780">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b88e5-781"><paramref name="policy" /> Параметра было задано значение <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> на платформу, которая не поддерживает расширенную защиту.</span><span class="sxs-lookup"><span data-stu-id="b88e5-781">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="b88e5-782">Встроенная аутентификация Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="b88e5-782">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (credential, requiredProtectionLevel, requiredImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="b88e5-783"><see cref="T:System.Net.NetworkCredential" /> , Используемый для установления идентификации клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-783">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="b88e5-784">Один из <see cref="T:System.Net.Security.ProtectionLevel" /> значений, указывающее службы безопасности для потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-784">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="b88e5-785">Один из <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> значений, указывающее, как сервер может использовать учетные данные клиента для доступа к ресурсам.</span><span class="sxs-lookup"><span data-stu-id="b88e5-785">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="b88e5-786">Делегат <see cref="T:System.AsyncCallback" />, который ссылается на метод, вызываемый после выполнения проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-786">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="b88e5-787">Определяемый пользователем объект, содержащий сведения об операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-787">A user-defined object containing information about the operation.</span></span> <span data-ttu-id="b88e5-788">Этот объект передается делегату <paramref name="asyncCallback" /> после завершения операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-788">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="b88e5-789">Вызывается серверами для начала асинхронной операции проверки подлинности клиента и при необходимости, сервера в соединении клиент сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-789">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="b88e5-790">Процесс проверки подлинности использует заданные учетные данные сервера и параметры проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-790">The authentication process uses the specified server credentials and authentication options.</span></span> <span data-ttu-id="b88e5-791">Этот метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="b88e5-791">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="b88e5-792"><see cref="T:System.IAsyncResult" /> , Указывающий состояние асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-792">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-793">Используйте `requiredProtectionLevel` параметр для запроса служб безопасности для данных, передаваемых через поток с проверкой подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-793">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="b88e5-794">Например, чтобы данные шифруются и подписываются, указать <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> значение.</span><span class="sxs-lookup"><span data-stu-id="b88e5-794">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="b88e5-795">Успешная проверка подлинности не гарантирует, что запрошенный <xref:System.Net.Security.ProtectionLevel> было предоставлено.</span><span class="sxs-lookup"><span data-stu-id="b88e5-795">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="b88e5-796">Необходимо проверить <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A> свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-796">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="b88e5-797">Этот метод является асинхронным и блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-797">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="b88e5-798">Чтобы заблокировать до завершения операции, используйте один из <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> перегрузок метода.</span><span class="sxs-lookup"><span data-stu-id="b88e5-798">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="b88e5-799">Необходимо выполнить операцию асинхронной проверки подлинности, путем вызова <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="b88e5-799">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="b88e5-800">Как правило, вызывается метод `asyncCallback` делегировать.</span><span class="sxs-lookup"><span data-stu-id="b88e5-800">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="b88e5-801">Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="b88e5-801">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="b88e5-802">При сбое аутентификации, вы получите <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-802">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="b88e5-803">В этом случае можно повторить проверку подлинности на другие учетные данные.</span><span class="sxs-lookup"><span data-stu-id="b88e5-803">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b88e5-804">Свойство <paramref name="credential" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-804"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b88e5-805"><paramref name="requiredImpersonationLevel" /> должно быть <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, или <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span><span class="sxs-lookup"><span data-stu-id="b88e5-805"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="b88e5-806">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-806">The authentication failed.</span></span> <span data-ttu-id="b88e5-807">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-807">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="b88e5-808">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-808">The authentication failed.</span></span> <span data-ttu-id="b88e5-809">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-809">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b88e5-810">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="b88e5-810">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-811">Проверка подлинности уже выполнена.</span><span class="sxs-lookup"><span data-stu-id="b88e5-811">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="b88e5-812">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-812">-or-</span></span> 
<span data-ttu-id="b88e5-813">Этот поток уже использовался ранее при попытке проверки подлинности как клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-813">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="b88e5-814">Этот поток нельзя использовать для повторной проверки подлинности, что и сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-814">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b88e5-815">Windows 95 и Windows 98 не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="b88e5-815">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b88e5-816">Чтобы использовать явный <see cref="T:System.Net.NetworkCredential" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-816">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="b88e5-817">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-817">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (credential, policy, requiredProtectionLevel, requiredImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="b88e5-818"><see cref="T:System.Net.NetworkCredential" /> , Используемый для установления идентификации клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-818">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="policy"><span data-ttu-id="b88e5-819"><see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> , Используемый для расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="b88e5-819">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="b88e5-820">Один из <see cref="T:System.Net.Security.ProtectionLevel" /> значений, указывающее службы безопасности для потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-820">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="b88e5-821">Один из <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> значений, указывающее, как сервер может использовать учетные данные клиента для доступа к ресурсам.</span><span class="sxs-lookup"><span data-stu-id="b88e5-821">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="b88e5-822">Делегат <see cref="T:System.AsyncCallback" />, который ссылается на метод, вызываемый после выполнения проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-822">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="b88e5-823">Определяемый пользователем объект, содержащий сведения об операции записи.</span><span class="sxs-lookup"><span data-stu-id="b88e5-823">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="b88e5-824">Этот объект передается делегату <paramref name="asyncCallback" /> после завершения операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-824">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="b88e5-825">Вызывается серверами для начала асинхронной операции проверки подлинности клиента и при необходимости, сервера в соединении клиент сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-825">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="b88e5-826">Процесс проверки подлинности использует заданные учетные данные сервера, параметры проверки подлинности и политику расширенной защиты.</span><span class="sxs-lookup"><span data-stu-id="b88e5-826">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span></span> <span data-ttu-id="b88e5-827">Этот метод не блокируется.</span><span class="sxs-lookup"><span data-stu-id="b88e5-827">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="b88e5-828"><see cref="T:System.IAsyncResult" /> , Указывающий состояние асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-828">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-829">Используйте `requiredProtectionLevel` параметр для запроса служб безопасности для данных, передаваемых через поток с проверкой подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-829">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="b88e5-830">Например, чтобы данные шифруются и подписываются, указать <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> значение.</span><span class="sxs-lookup"><span data-stu-id="b88e5-830">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="b88e5-831">Успешная проверка подлинности не гарантирует, что запрошенный <xref:System.Net.Security.ProtectionLevel> было предоставлено.</span><span class="sxs-lookup"><span data-stu-id="b88e5-831">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="b88e5-832">Необходимо проверить <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A> свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-832">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="b88e5-833">Если `policy` параметр `null`, а затем используется Расширенная политика защиты, который имеет <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> присвоено <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-833">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="b88e5-834">Этот метод является асинхронным и блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-834">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="b88e5-835">Чтобы заблокировать до завершения операции, используйте один из <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> перегрузок метода.</span><span class="sxs-lookup"><span data-stu-id="b88e5-835">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="b88e5-836">Необходимо выполнить операцию асинхронной проверки подлинности, путем вызова <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="b88e5-836">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="b88e5-837">Как правило, вызывается метод `asyncCallback` делегировать.</span><span class="sxs-lookup"><span data-stu-id="b88e5-837">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="b88e5-838">Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="b88e5-838">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="b88e5-839">При сбое аутентификации, вы получите <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-839">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="b88e5-840">В этом случае можно повторить проверку подлинности на другие учетные данные.</span><span class="sxs-lookup"><span data-stu-id="b88e5-840">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b88e5-841"><see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> И <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> политику расширенной защиты, переданной <paramref name="policy" /> оба параметра являются <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-841">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b88e5-842">Свойство <paramref name="credential" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-842"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b88e5-843"><paramref name="requiredImpersonationLevel" /> должно быть <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, или <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span><span class="sxs-lookup"><span data-stu-id="b88e5-843"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="b88e5-844">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-844">The authentication failed.</span></span> <span data-ttu-id="b88e5-845">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-845">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="b88e5-846">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-846">The authentication failed.</span></span> <span data-ttu-id="b88e5-847">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-847">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-848">Проверка подлинности уже выполнена.</span><span class="sxs-lookup"><span data-stu-id="b88e5-848">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="b88e5-849">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-849">-or-</span></span> 
<span data-ttu-id="b88e5-850">Этот поток уже использовался ранее при попытке проверки подлинности как клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-850">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="b88e5-851">Этот поток нельзя использовать для повторной проверки подлинности, что и сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-851">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b88e5-852">Windows 95 и Windows 98 не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="b88e5-852">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b88e5-853">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="b88e5-853">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="b88e5-854"><paramref name="policy" /> Параметра было задано значение <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> на платформу, которая не поддерживает расширенную защиту.</span><span class="sxs-lookup"><span data-stu-id="b88e5-854">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="b88e5-855">Встроенная аутентификация Windows с расширенной защитой</span><span class="sxs-lookup"><span data-stu-id="b88e5-855">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginRead (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="b88e5-856">Объект <see cref="T:System.Byte" /> массив, куда помещаются байты, считанные из потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-856">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="b88e5-857">Отсчитываемое от нуля расположение в <paramref name="buffer" /> с которого начинается сохранение данных, считанных из текущего потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-857">The zero-based location in <paramref name="buffer" /> at which to begin storing the data read from this stream.</span></span></param>
        <param name="count"><span data-ttu-id="b88e5-858">Максимальное число байтов, считываемых из потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-858">The maximum number of bytes to read from the stream.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="b88e5-859"><see cref="T:System.AsyncCallback" /> Делегат, ссылающийся на метод, который вызывается после завершения операции чтения.</span><span class="sxs-lookup"><span data-stu-id="b88e5-859">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="b88e5-860">Определяемый пользователем объект, содержащий сведения о данной операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-860">A user-defined object containing information about the read operation.</span></span> <span data-ttu-id="b88e5-861">Этот объект передается делегату <paramref name="asyncCallback" /> после завершения операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-861">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="b88e5-862">Начинает асинхронную операцию чтения, которая считывает данные из потока и сохраняет его в указанном массиве.</span><span class="sxs-lookup"><span data-stu-id="b88e5-862">Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</span></span></summary>
        <returns><span data-ttu-id="b88e5-863"><see cref="T:System.IAsyncResult" /> , Указывающий состояние асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-863">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-864">Если включено шифрование, подписи или шифрования и подписи, операции чтения считывает данные из базового потока, проверяет целостность данных и расшифровывает его.</span><span class="sxs-lookup"><span data-stu-id="b88e5-864">If encryption, signing, or encryption and signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and decrypts it.</span></span> <span data-ttu-id="b88e5-865">Если службы безопасности, такие как шифрование данных или подписывание, используется, этот метод начинает асинхронную операцию чтения базового потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-865">If no security services such as data encryption or signing are in use, this method starts an asynchronous read operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="b88e5-866">Этот метод является асинхронным и блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-866">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="b88e5-867">Чтобы заблокировать до завершения операции, используйте <xref:System.Net.Security.NegotiateStream.Read%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="b88e5-867">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="b88e5-868">Завершите асинхронную операцию чтения, вызвав <xref:System.Net.Security.NegotiateStream.EndRead%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="b88e5-868">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndRead%2A> method.</span></span> <span data-ttu-id="b88e5-869">Как правило, вызывается метод `asyncCallback` делегировать.</span><span class="sxs-lookup"><span data-stu-id="b88e5-869">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="b88e5-870">Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="b88e5-870">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="b88e5-871"><xref:System.Net.Security.NegotiateStream> Класс не поддерживает несколько одновременных операций чтения.</span><span class="sxs-lookup"><span data-stu-id="b88e5-871">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous read operations.</span></span> <span data-ttu-id="b88e5-872">При попытке запустить операцию чтения, во время другой чтения операция уже выполняется в одном потоке, <xref:System.NotSupportedException> будет создано исключение.</span><span class="sxs-lookup"><span data-stu-id="b88e5-872">If you attempt to start a read operation while another read operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="b88e5-873">Этот метод нельзя вызывать, пока вы успешно прошли проверку.</span><span class="sxs-lookup"><span data-stu-id="b88e5-873">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="b88e5-874">Чтобы выполнить аутентификацию, вызовите один из <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, или <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="b88e5-874">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b88e5-875">В следующем примере кода показано, как запускается асинхронную операцию чтения.</span><span class="sxs-lookup"><span data-stu-id="b88e5-875">The following code example demonstrates starting an asynchronous read operation.</span></span> <span data-ttu-id="b88e5-876">Данный пример кода является частью большего примера для <xref:System.Net.Security.NegotiateStream> класса.</span><span class="sxs-lookup"><span data-stu-id="b88e5-876">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#1)]
 [!code-csharp[NclNegoAsyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b88e5-877">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-877"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b88e5-878">Значение параметра <paramref name="offset" /> меньше 0.</span><span class="sxs-lookup"><span data-stu-id="b88e5-878"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="b88e5-879">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-879">-or-</span></span> 
 <span data-ttu-id="b88e5-880">Значение <paramref name="offset" /> превышает длину <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-880"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="b88e5-881">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-881">-or-</span></span> 
 <span data-ttu-id="b88e5-882">Сумма значений <paramref name="offset" /> и <paramref name="count" /> превышает длину массива <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-882"><paramref name="offset" /> plus <paramref name="count" /> is greater than the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b88e5-883">Сбой операции чтения.</span><span class="sxs-lookup"><span data-stu-id="b88e5-883">The read operation failed.</span></span>  
  
<span data-ttu-id="b88e5-884">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-884">-or-</span></span> 
<span data-ttu-id="b88e5-885">Используется шифрование, но не удалось расшифровать данные.</span><span class="sxs-lookup"><span data-stu-id="b88e5-885">Encryption is in use, but the data could not be decrypted.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b88e5-886">Уже существует выполняющаяся операция чтения.</span><span class="sxs-lookup"><span data-stu-id="b88e5-886">There is already a read operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b88e5-887">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="b88e5-887">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-888">Проверка подлинности не выполнена.</span><span class="sxs-lookup"><span data-stu-id="b88e5-888">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginWrite (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="b88e5-889">Объект <see cref="T:System.Byte" /> массив, предоставляющий байты для записи в поток.</span><span class="sxs-lookup"><span data-stu-id="b88e5-889">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="b88e5-890">Расположение (начиная с нуля) в массиве<paramref name="buffer" />, с которого требуется начать считывать байты, предназначенные для записи в поток.</span><span class="sxs-lookup"><span data-stu-id="b88e5-890">The zero-based location in <paramref name="buffer" /> at which to begin reading bytes to be written to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="b88e5-891"><see cref="T:System.Int32" /> Значение, указывающее количество байтов, считываемых из <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-891">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <paramref name="buffer" />.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="b88e5-892"><see cref="T:System.AsyncCallback" /> Делегат, ссылающийся на метод, который вызывается после завершения операции записи.</span><span class="sxs-lookup"><span data-stu-id="b88e5-892">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="b88e5-893">Определяемый пользователем объект, содержащий сведения об операции записи.</span><span class="sxs-lookup"><span data-stu-id="b88e5-893">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="b88e5-894">Этот объект передается делегату <paramref name="asyncCallback" /> после завершения операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-894">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="b88e5-895">Начинает операцию асинхронной записи, которая записывает <see cref="T:System.Byte" />s из указанного буфера в поток.</span><span class="sxs-lookup"><span data-stu-id="b88e5-895">Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</span></span></summary>
        <returns><span data-ttu-id="b88e5-896"><see cref="T:System.IAsyncResult" /> , Указывающий состояние асинхронной операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-896">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-897">Если включено шифрование, подписи или шифрования и подписи, этот метод считывает данные из буфера, зашифровывает, подписывает их, или шифрует и подписывает его и передает их с помощью базового потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-897">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="b88e5-898">Если службы безопасности, такие как шифрование данных или подписывание, используется, этот метод начинает асинхронную операцию записи базового потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-898">If no security services such as data encryption or signing are in use, this method starts an asynchronous write operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="b88e5-899">Этот метод является асинхронным и блокируется до завершения операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-899">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="b88e5-900">Чтобы заблокировать до завершения операции, используйте <xref:System.Net.Security.NegotiateStream.Read%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="b88e5-900">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="b88e5-901">Завершите асинхронную операцию чтения, вызвав <xref:System.Net.Security.NegotiateStream.EndWrite%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="b88e5-901">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndWrite%2A> method.</span></span> <span data-ttu-id="b88e5-902">Как правило, вызывается метод `asyncCallback` делегировать.</span><span class="sxs-lookup"><span data-stu-id="b88e5-902">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="b88e5-903">Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="b88e5-903">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="b88e5-904"><xref:System.Net.Security.NegotiateStream> Класс поддерживает несколько одновременных операции записи.</span><span class="sxs-lookup"><span data-stu-id="b88e5-904">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="b88e5-905">При попытке запустить операцию записи, когда уже выполняется другая операция записи в одном потоке, <xref:System.NotSupportedException> будет создано исключение.</span><span class="sxs-lookup"><span data-stu-id="b88e5-905">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="b88e5-906">Этот метод нельзя вызывать, пока вы успешно прошли проверку.</span><span class="sxs-lookup"><span data-stu-id="b88e5-906">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="b88e5-907">Чтобы выполнить аутентификацию, вызовите один из <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, или <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="b88e5-907">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
<span data-ttu-id="b88e5-908">В следующем примере показано начало операции асинхронной записи.</span><span class="sxs-lookup"><span data-stu-id="b88e5-908">The following example demonstrates beginning an asynchronous write operation.</span></span>  
  
[!code-cpp[NclNegoAsyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#3)]
[!code-csharp[NclNegoAsyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#3)]  
[!code-vb[NclNegoAsyncClient#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNegoasyncClient/VB/client.vb#3)] 

<span data-ttu-id="b88e5-909">Следующий метод вызывается после завершения операции.</span><span class="sxs-lookup"><span data-stu-id="b88e5-909">The following method is called when the operation completes.</span></span>  
  
[!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
[!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
[!code-vb[NclNegoAsyncClient#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNegoasyncClient/VB/client.vb#4)] 

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b88e5-910">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-910"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b88e5-911"><paramref name="offset is less than 0" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-911"><paramref name="offset is less than 0" />.</span></span>  
  
<span data-ttu-id="b88e5-912">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-912">-or-</span></span> 
 <span data-ttu-id="b88e5-913">Значение <paramref name="offset" /> превышает длину <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-913"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="b88e5-914">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-914">-or-</span></span> 
 <span data-ttu-id="b88e5-915"><paramref name="offset" /> плюс количество превышает длину <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-915"><paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b88e5-916">Не удалось выполнить операцию записи.</span><span class="sxs-lookup"><span data-stu-id="b88e5-916">The write operation failed.</span></span>  
  
<span data-ttu-id="b88e5-917">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-917">-or-</span></span> 
<span data-ttu-id="b88e5-918">Используется шифрование, но не удается зашифровать данные.</span><span class="sxs-lookup"><span data-stu-id="b88e5-918">Encryption is in use, but the data could not be encrypted.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b88e5-919">Уже существует выполняющаяся операция записи.</span><span class="sxs-lookup"><span data-stu-id="b88e5-919">There is already a write operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b88e5-920">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="b88e5-920">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-921">Проверка подлинности не выполнена.</span><span class="sxs-lookup"><span data-stu-id="b88e5-921">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Net.Security.NegotiateStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b88e5-922">Возвращает <see cref="T:System.Boolean" /> значение, указывающее, является ли базовый поток для чтения.</span><span class="sxs-lookup"><span data-stu-id="b88e5-922">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</span></span></summary>
        <value><span data-ttu-id="b88e5-923"><see langword="true" /> Если проверка подлинности выполнена, и базовый поток для чтения; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-923"><see langword="true" /> if authentication has occurred and the underlying stream is readable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-924">Если проверка подлинности завершилась успешно, это свойство возвращает значение, возвращаемое вызовом <xref:System.IO.Stream.CanRead%2A> свойства базового потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-924">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanRead%2A> property on the underlying stream.</span></span> <span data-ttu-id="b88e5-925">Основной поток указывается при создании экземпляра <xref:System.Net.Security.NegotiateStream> класса.</span><span class="sxs-lookup"><span data-stu-id="b88e5-925">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b88e5-926">В следующем примере кода демонстрируется отображение значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="b88e5-926">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Net.Security.NegotiateStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b88e5-927">Возвращает <see cref="T:System.Boolean" /> значение, указывающее, допускает ли базовый поток.</span><span class="sxs-lookup"><span data-stu-id="b88e5-927">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</span></span></summary>
        <value><span data-ttu-id="b88e5-928">Данное свойство всегда возвращает значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-928">This property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-929">Не следует пытаться Установка для позиции <xref:System.Net.Security.NegotiateStream> объекта или его базовый поток.</span><span class="sxs-lookup"><span data-stu-id="b88e5-929">You should not attempt to set the position of the <xref:System.Net.Security.NegotiateStream> object or its underlying stream.</span></span> <span data-ttu-id="b88e5-930">Основной поток указывается при создании экземпляра <xref:System.Net.Security.NegotiateStream> класса.</span><span class="sxs-lookup"><span data-stu-id="b88e5-930">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b88e5-931">В следующем примере кода демонстрируется отображение значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="b88e5-931">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Security.NegotiateStream.Position" />
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.Net.Security.NegotiateStream.CanTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b88e5-932">Возвращает <see cref="T:System.Boolean" /> значение, указывающее, поддерживает ли базовый поток значения времени ожидания.</span><span class="sxs-lookup"><span data-stu-id="b88e5-932">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</span></span></summary>
        <value><span data-ttu-id="b88e5-933"><see langword="true" /> Если основной поток поддерживает время ожидания; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-933"><see langword="true" /> if the underlying stream supports time-outs; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-934">Это свойство возвращает значение, возвращаемое вызовом <xref:System.IO.Stream.CanTimeout%2A> свойства базового потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-934">This property returns the value returned by invoking the <xref:System.IO.Stream.CanTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="b88e5-935">Основной поток указывается при создании экземпляра <xref:System.Net.Security.NegotiateStream> класса.</span><span class="sxs-lookup"><span data-stu-id="b88e5-935">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b88e5-936">В следующем примере кода демонстрируется отображение значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="b88e5-936">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Net.Security.NegotiateStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b88e5-937">Возвращает <see cref="T:System.Boolean" /> значение, указывающее, является ли базовый поток для записи.</span><span class="sxs-lookup"><span data-stu-id="b88e5-937">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</span></span></summary>
        <value><span data-ttu-id="b88e5-938"><see langword="true" /> Если проверка подлинности выполнена, и базовый поток разрешена; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-938"><see langword="true" /> if authentication has occurred and the underlying stream is writable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-939">Если проверка подлинности завершилась успешно, это свойство возвращает значение, возвращаемое вызовом <xref:System.IO.Stream.CanWrite%2A> свойства базового потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-939">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanWrite%2A> property on the underlying stream.</span></span> <span data-ttu-id="b88e5-940">Основной поток указывается при создании экземпляра <xref:System.Net.Security.NegotiateStream> класса.</span><span class="sxs-lookup"><span data-stu-id="b88e5-940">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b88e5-941">В следующем примере кода демонстрируется отображение значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="b88e5-941">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="negotiateStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="b88e5-942">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="b88e5-942"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="b88e5-943">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Net.Security.NegotiateStream" />, а при необходимости освобождает также управляемые ресурсы.</span><span class="sxs-lookup"><span data-stu-id="b88e5-943">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.NegotiateStream" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-944">Этот метод вызывается открытым `Dispose()` метод и <xref:System.Object.Finalize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="b88e5-944">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="b88e5-945">`Dispose()` вызывает защищенный `Dispose(Boolean)` метод с `disposing` параметру присвоить `true`.</span><span class="sxs-lookup"><span data-stu-id="b88e5-945">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="b88e5-946"><xref:System.Object.Finalize%2A> вызывает `Dispose` с `disposing` присвоено `false`.</span><span class="sxs-lookup"><span data-stu-id="b88e5-946"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="b88e5-947">Когда `disposing` параметр имеет значение true, этот метод освобождает все ресурсы, занятые любыми управляемыми объектами, <xref:System.Net.Security.NegotiateStream> ссылки.</span><span class="sxs-lookup"><span data-stu-id="b88e5-947">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Security.NegotiateStream> references.</span></span> <span data-ttu-id="b88e5-948">Этот метод вызывает метод `Dispose()` каждого объекта, на который есть ссылка.</span><span class="sxs-lookup"><span data-stu-id="b88e5-948">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b88e5-949">Метод 
            <see langword="Dispose" /> может вызываться несколько раз другими объектами.</span><span class="sxs-lookup"><span data-stu-id="b88e5-949">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="b88e5-950">При переопределении метода <see langword="Dispose(Boolean)" /> нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-950">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="b88e5-951">Дополнительные сведения о том, как реализовать <see langword="Dispose(Boolean)" />, см. в разделе [реализация метода Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="b88e5-951">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="b88e5-952">Дополнительные сведения о <see langword="Dispose" /> и <see cref="M:System.Object.Finalize" />, см. в разделе [очистки неуправляемых ресурсов](~/docs/standard/garbage-collection/unmanaged.md) и [переопределение метода Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="b88e5-952">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="negotiateStream.DisposeAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsClient (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsClient(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsClient : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsClient : IAsyncResult -&gt; unit" Usage="negotiateStream.EndAuthenticateAsClient asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="b88e5-953"><see cref="T:System.IAsyncResult" /> Экземпляр, возвращаемый вызовом <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-953">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span></span></param>
        <summary><span data-ttu-id="b88e5-954">Завершает операцию проверки подлинности ожидающие асинхронный клиент, который был запущен с помощью вызова <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-954">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-955">Если операция не завершена, этот метод блокируется до завершения удаления.</span><span class="sxs-lookup"><span data-stu-id="b88e5-955">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="b88e5-956">При успешной проверке подлинности, необходимо проверить <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A> свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-956">When the authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="b88e5-957">Проверьте <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> свойства, чтобы определить, произошла ли взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-957">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="b88e5-958">При сбое аутентификации, вы получите <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-958">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="b88e5-959">В этом случае можно повторить проверку подлинности на другие учетные данные.</span><span class="sxs-lookup"><span data-stu-id="b88e5-959">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="b88e5-960">Для выполнения этой операции в синхронном режиме, используйте один из <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="b88e5-960">To perform this operation synchronously, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b88e5-961">Свойство <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-961"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b88e5-962"><paramref name="asyncResult" /> не был создан с помощью вызова <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-962"><paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="b88e5-963">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-963">The authentication failed.</span></span> <span data-ttu-id="b88e5-964">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-964">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="b88e5-965">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-965">The authentication failed.</span></span> <span data-ttu-id="b88e5-966">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-966">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-967">Нет проверки подлинности клиента, ожидающих завершения.</span><span class="sxs-lookup"><span data-stu-id="b88e5-967">There is no pending client authentication to complete.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsServer(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsServer (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsServer(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsServer : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsServer : IAsyncResult -&gt; unit" Usage="negotiateStream.EndAuthenticateAsServer asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="b88e5-968"><see cref="T:System.IAsyncResult" /> Экземпляр, возвращаемый вызовом <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-968">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span></span></param>
        <summary><span data-ttu-id="b88e5-969">Завершает операцию проверки подлинности ожидающие асинхронный клиент, который был запущен с помощью вызова <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-969">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-970">Если операция не завершена, этот метод блокируется до завершения удаления.</span><span class="sxs-lookup"><span data-stu-id="b88e5-970">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="b88e5-971">Если проверка подлинности завершается успешно, необходимо проверить <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> и <xref:System.Net.Security.NegotiateStream.IsSigned%2A> свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-971">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="b88e5-972">Проверьте <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> свойства, чтобы определить, произошла ли взаимная проверка подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-972">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="b88e5-973">При сбое аутентификации, вы получите <xref:System.Security.Authentication.AuthenticationException> или <xref:System.Security.Authentication.InvalidCredentialException>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-973">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="b88e5-974">В этом случае можно повторить проверку подлинности на другие учетные данные.</span><span class="sxs-lookup"><span data-stu-id="b88e5-974">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="b88e5-975">Для выполнения этой операции в синхронном режиме, используйте <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="b88e5-975">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b88e5-976">Свойство <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-976"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b88e5-977"><paramref name="asyncResult" /> не был создан с помощью вызова <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-977"><paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="b88e5-978">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-978">The authentication failed.</span></span> <span data-ttu-id="b88e5-979">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-979">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="b88e5-980">Сбой проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-980">The authentication failed.</span></span> <span data-ttu-id="b88e5-981">Этот объект можно использовать для повторной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-981">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-982">Нет ожидающих проверки подлинности для завершения.</span><span class="sxs-lookup"><span data-stu-id="b88e5-982">There is no pending authentication to complete.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="negotiateStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="b88e5-983"><see cref="T:System.IAsyncResult" /> Экземпляр, возвращаемый вызовом <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span><span class="sxs-lookup"><span data-stu-id="b88e5-983">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span></span></param>
        <summary><span data-ttu-id="b88e5-984">Заканчивается асинхронную операцию чтения, запущенную вызовом <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-984">Ends an asynchronous read operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="b88e5-985">Объект <see cref="T:System.Int32" /> , указывающее количество байтов, считанное из базового потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-985">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-986">Если операция не завершена, этот метод блокируется до завершения удаления.</span><span class="sxs-lookup"><span data-stu-id="b88e5-986">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="b88e5-987">Для выполнения этой операции в синхронном режиме, используйте <xref:System.Net.Security.NegotiateStream.Read%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="b88e5-987">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="b88e5-988">Этот метод нельзя вызывать, пока вы успешно прошли проверку.</span><span class="sxs-lookup"><span data-stu-id="b88e5-988">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="b88e5-989">Чтобы выполнить аутентификацию, вызовите один из <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, или <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="b88e5-989">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b88e5-990">В следующем примере кода показано, что завершается асинхронная операция чтения.</span><span class="sxs-lookup"><span data-stu-id="b88e5-990">The following code example demonstrates ending an asynchronous read operation.</span></span> <span data-ttu-id="b88e5-991">Пример, демонстрирующий Запуск операции, см. в разделе <xref:System.Net.Security.NegotiateStream.BeginRead%2A>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-991">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginRead%2A>.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#3)]
 [!code-csharp[NclNegoAsyncServer#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b88e5-992">Свойство <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-992"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b88e5-993">AsyncResult не был создан с помощью вызова <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-993">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-994">Нет без ожидания завершения операции чтения.</span><span class="sxs-lookup"><span data-stu-id="b88e5-994">There is no pending read operation to complete.</span></span>

<span data-ttu-id="b88e5-995">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-995">-or-</span></span>

<span data-ttu-id="b88e5-996">Проверка подлинности не выполнена.</span><span class="sxs-lookup"><span data-stu-id="b88e5-996">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b88e5-997">Сбой операции чтения.</span><span class="sxs-lookup"><span data-stu-id="b88e5-997">The read operation failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="negotiateStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="b88e5-998"><see cref="T:System.IAsyncResult" /> Экземпляр, возвращаемый вызовом <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span><span class="sxs-lookup"><span data-stu-id="b88e5-998">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span></span></param>
        <summary><span data-ttu-id="b88e5-999">Завершает асинхронную операцию записи, запущенную вызовом <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-999">Ends an asynchronous write operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-1000">Если операция не завершена, этот метод блокируется до завершения удаления.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1000">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="b88e5-1001">Этот метод нельзя вызывать, пока вы успешно прошли проверку.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1001">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="b88e5-1002">Чтобы выполнить аутентификацию, вызовите один из <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, или <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1002">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="b88e5-1003">Для выполнения этой операции в синхронном режиме, используйте <xref:System.Net.Security.NegotiateStream.Write%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1003">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
   
  
## Examples  
<span data-ttu-id="b88e5-1004">В следующем примере метод, который вызывается для завершения операции асинхронной записи.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1004">The following example demonstrates a method that is called to complete the asynchronous write operation.</span></span> <span data-ttu-id="b88e5-1005">Пример, демонстрирующий Запуск операции, см. в разделе <xref:System.Net.Security.NegotiateStream.BeginWrite%2A>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1005">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginWrite%2A>.</span></span>  
  
[!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
[!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
[!code-vb[NclNegoAsyncClient#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNegoasyncClient/VB/client.vb#4)] 

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b88e5-1006">Свойство <paramref name="asyncResult" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1006"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b88e5-1007">AsyncResult не был создан с помощью вызова <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1007">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-1008">Нет для завершения операции записи.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1008">There is no pending write operation to complete.</span></span>

<span data-ttu-id="b88e5-1009">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-1009">-or-</span></span>

<span data-ttu-id="b88e5-1010">Проверка подлинности не выполнена.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1010">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b88e5-1011">Не удалось выполнить операцию записи.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1011">The write operation failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="negotiateStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b88e5-1012">Вызывает запись всех буферизованных данных в базовое устройство.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1012">Causes any buffered data to be written to the underlying device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-1013">Этот метод вызывает метод <xref:System.IO.Stream.Flush%2A> базового потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1013">This method invokes <xref:System.IO.Stream.Flush%2A> on the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b88e5-1014">В следующем примере кода демонстрируется сбросе потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1014">The following code example demonstrates flushing the stream.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.ImpersonationLevel : System.Security.Principal.TokenImpersonationLevel" Usage="System.Net.Security.NegotiateStream.ImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b88e5-1015">Получает значение, указывающее, как сервер может использовать учетные данные клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1015">Gets a value that indicates how the server can use the client's credentials.</span></span></summary>
        <value><span data-ttu-id="b88e5-1016">Одно из значений перечисления <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1016">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-1017">Вы должны успешно пройти проверку подлинности перед вызовом этого метода.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1017">You must successfully authenticate before calling this method.</span></span> <span data-ttu-id="b88e5-1018">Клиенты указывать уровень олицетворения при запросе проверки подлинности путем вызова одного из <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> или <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1018">Clients specify the impersonation level when they request authentication by calling one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="b88e5-1019">Если аутентификация без указания <xref:System.Security.Principal.TokenImpersonationLevel> , <xref:System.Security.Principal.TokenImpersonationLevel.Identification> используется.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1019">If you authenticate without specifying a <xref:System.Security.Principal.TokenImpersonationLevel> , <xref:System.Security.Principal.TokenImpersonationLevel.Identification> is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b88e5-1020">В следующем примере кода демонстрируется отображение значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1020">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-1021">Проверка подлинности не удалось, или не выполнялась.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1021">Authentication failed or has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Net.Security.NegotiateStream.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b88e5-1022">Возвращает значение типа <see cref="T:System.Boolean" />, указывающее, была ли проверка подлинности успешной.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1022">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span></span></summary>
        <value><span data-ttu-id="b88e5-1023"><see langword="true" /> Если произошла Успешная проверка подлинности; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1023"><see langword="true" /> if successful authentication occurred; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-1024">Проверка подлинности клиентов путем вызова <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> или <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1024">Clients authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="b88e5-1025">Серверы, проверку подлинности путем вызова <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> или <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1025">Servers authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b88e5-1026">В следующем примере кода демонстрируется отображение значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1026">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncrypted">
      <MemberSignature Language="C#" Value="public override bool IsEncrypted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEncrypted" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsEncrypted" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEncrypted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEncrypted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEncrypted : bool" Usage="System.Net.Security.NegotiateStream.IsEncrypted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b88e5-1027">Получает <see cref="T:System.Boolean" /> значение, указывающее, является ли это <see cref="T:System.Net.Security.NegotiateStream" /> использует шифрование данных.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1027">Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.NegotiateStream" /> uses data encryption.</span></span></summary>
        <value><span data-ttu-id="b88e5-1028"><see langword="true" /> Если данные шифруются до передачи по сети и расшифровываются при достижении удаленной конечной точки; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1028"><see langword="true" /> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-1029">Шифрование помогает защитить конфиденциальность данных. а именно это позволяет гарантировать, что время передачи данных он не могут быть декодированы третьими лицами.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1029">Encryption helps to protect the privacy of the data; namely, it helps to ensure that while data is in transit it cannot be deciphered by third parties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b88e5-1030">В следующем примере кода демонстрируется отображение значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1030">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Security.ProtectionLevel" />
      </Docs>
    </Member>
    <Member MemberName="IsMutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsMutuallyAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutuallyAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsMutuallyAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMutuallyAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMutuallyAuthenticated : bool" Usage="System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b88e5-1031">Возвращает <see cref="T:System.Boolean" /> значение, указывающее, является ли сервер и клиент прошли проверку подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1031">Gets a <see cref="T:System.Boolean" /> value that indicates whether both the server and the client have been authenticated.</span></span></summary>
        <value><span data-ttu-id="b88e5-1032"><see langword="true" /> Если сервер прошел проверку подлинности; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1032"><see langword="true" /> if the server has been authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-1033">Взаимная проверка подлинности указанный клиентом, когда клиенту требуется ввести учетные данные для проверки подлинности сервера.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1033">Mutual authentication is specified by the client when the client wants the server to provide credentials for authentication.</span></span> <span data-ttu-id="b88e5-1034">По умолчанию клиенты запрашивают взаимной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1034">By default, clients request mutual authentication.</span></span>  
  
 <span data-ttu-id="b88e5-1035">Протокол Negotiate выбирает NTLM или Kerberos, в зависимости от протоколов безопасности, поддерживаемых клиентом и сервером.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1035">The Negotiate protocol selects either NTLM or Kerberos depending on the security protocols supported by the client and server.</span></span> <span data-ttu-id="b88e5-1036">NTLM не поддерживает взаимной проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1036">NTLM does not support mutual authentication.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b88e5-1037">В следующем примере кода демонстрируется отображение значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1037">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsServer">
      <MemberSignature Language="C#" Value="public override bool IsServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsServer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsServer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServer : bool" Usage="System.Net.Security.NegotiateStream.IsServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b88e5-1038">Получает <see cref="T:System.Boolean" /> значение, указывающее, является ли локальная сторона соединения, используемые этим <see cref="T:System.Net.Security.NegotiateStream" /> прошла проверку подлинности как сервер.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1038">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.NegotiateStream" /> was authenticated as the server.</span></span></summary>
        <value><span data-ttu-id="b88e5-1039"><see langword="true" /> Если локальная конечная точка успешно прошла проверку подлинности как серверная сторона соединения с проверкой подлинности; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1039"><see langword="true" /> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-1040">Если проверка подлинности не удалось, или не было, это свойство возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1040">If authentication failed or did not occur, this property returns `false`.</span></span>  
  
 <span data-ttu-id="b88e5-1041">Для проверки подлинности как сервера, вызов <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> или <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1041">To authenticate as the server, call the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b88e5-1042">В следующем примере кода демонстрируется отображение значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1042">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public override bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSigned { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSigned : bool" Usage="System.Net.Security.NegotiateStream.IsSigned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b88e5-1043">Возвращает значение типа <see cref="T:System.Boolean" />, указывающее, подписаны ли данные, отправленные с помощью данного потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1043">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span></span></summary>
        <value><span data-ttu-id="b88e5-1044"><see langword="true" /> Если данные были подписаны перед передачей; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1044"><see langword="true" /> if the data is signed before being transmitted; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-1045">Подписывание данных помогает защитить целостность данных. а именно полезно, чтобы получатель мог определить, подверглась ли данные с в процессе передачи.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1045">Data signing helps to protect the integrity of the data; namely, it helps the recipient determine whether the data has been tampered with while in transit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b88e5-1046">В следующем примере кода демонстрируется отображение значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1046">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Net.Security.NegotiateStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b88e5-1047">Возвращает длину данных в базовом потоке.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1047">Gets the length of the underlying stream.</span></span></summary>
        <value><span data-ttu-id="b88e5-1048">Объект <see cref="T:System.Int64" /> , указывающий длину базового потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1048">A <see cref="T:System.Int64" /> that specifies the length of the underlying stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-1049">Это свойство возвращает значение, возвращаемое вызовом <xref:System.IO.Stream.Length%2A> свойства базового потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1049">This property returns the value returned by invoking the <xref:System.IO.Stream.Length%2A> property on the underlying stream.</span></span> <span data-ttu-id="b88e5-1050">Если базовый поток не допускает, это свойство обычно выдает исключение.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1050">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="b88e5-1051">Тип времени выполнения базового потока, определяет тип времени выполнения исключения, возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1051">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b88e5-1052">В следующем примере кода демонстрируется отображение значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1052">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b88e5-1053">Получение значения этого свойства не поддерживается, если в базовый поток <see cref="T:System.Net.Sockets.NetworkStream" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1053">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Net.Security.NegotiateStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b88e5-1054">Возвращает или задает текущую позицию в базовом потоке.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1054">Gets or sets the current position in the underlying stream.</span></span></summary>
        <value><span data-ttu-id="b88e5-1055">Объект <see cref="T:System.Int64" /> , указывающее текущую позицию в базовом потоке.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1055">A <see cref="T:System.Int64" /> that specifies the current position in the underlying stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-1056">Это свойство возвращает значение, возвращаемое вызовом <xref:System.IO.Stream.Position%2A> свойства базового потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1056">This property returns the value returned by invoking the <xref:System.IO.Stream.Position%2A> property on the underlying stream.</span></span> <span data-ttu-id="b88e5-1057">Если базовый поток не допускает, это свойство обычно выдает исключение.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1057">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="b88e5-1058">Тип времени выполнения базового потока, определяет тип времени выполнения исключения, возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1058">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b88e5-1059">Задание этого свойства не поддерживается.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1059">Setting this property is not supported.</span></span>  
  
<span data-ttu-id="b88e5-1060">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-1060">-or-</span></span> 
<span data-ttu-id="b88e5-1061">Получение значения этого свойства не поддерживается, если в базовый поток <see cref="T:System.Net.Sockets.NetworkStream" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1061">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="negotiateStream.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="b88e5-1062">Объект <see cref="T:System.Byte" /> массив, куда помещаются байты, считанные из потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1062">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="b88e5-1063">Объект <see cref="T:System.Int32" /> содержащий отсчитываемое от нуля расположение в <paramref name="buffer" /> с которого начинается сохранение данных, считанных из текущего потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1063">A <see cref="T:System.Int32" /> containing the zero-based location in <paramref name="buffer" /> at which to begin storing the data read from this stream.</span></span></param>
        <param name="count"><span data-ttu-id="b88e5-1064">Объект <see cref="T:System.Int32" /> содержит максимальное число байтов, считываемых из потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1064">A <see cref="T:System.Int32" /> containing the maximum number of bytes to read from the stream.</span></span></param>
        <summary><span data-ttu-id="b88e5-1065">Считывает данные из этого потока и сохраняет его в указанном массиве.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1065">Reads data from this stream and stores it in the specified array.</span></span></summary>
        <returns><span data-ttu-id="b88e5-1066">Объект <see cref="T:System.Int32" /> , указывающее количество байтов, считанное из базового потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1066">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span></span> <span data-ttu-id="b88e5-1067">Если отсутствуют дополнительные данные для чтения, возвращает значение 0.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1067">When there is no more data to be read, returns 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-1068">Метод считывает максимальное количество `count` байтов из текущего потока и сохраняет их в `buffer` начиная `offset`.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1068">The method reads a maximum of `count` bytes from the current stream and stores them in `buffer` beginning at `offset`.</span></span>  
  
 <span data-ttu-id="b88e5-1069">Этот метод нельзя вызывать, пока вы успешно прошли проверку.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1069">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="b88e5-1070">Чтобы выполнить аутентификацию, вызовите один из <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, или <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1070">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="b88e5-1071">Чтобы выполнить эту операцию асинхронно, используйте <xref:System.Net.Security.NegotiateStream.BeginRead%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1071">To perform this operation asynchronously, use the <xref:System.Net.Security.NegotiateStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b88e5-1072">В следующем примере кода демонстрируется чтение из <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1072">The following code example demonstrates reading from a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncServer/CPP/NclNegoSyncServer.cpp#1)]
 [!code-csharp[NclNegoSyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b88e5-1073">Сбой операции чтения.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1073">The read operation failed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-1074">Проверка подлинности не выполнена.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1074">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b88e5-1075">Объект <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> операция уже выполняется.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1075">A <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> operation is already in progress.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.Net.Security.NegotiateStream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b88e5-1076">Возвращает или задает количество времени, операция чтения блокирует ожидание данных.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1076">Gets or sets the amount of time a read operation blocks waiting for data.</span></span></summary>
        <value><span data-ttu-id="b88e5-1077">Объект <see cref="T:System.Int32" /> , указывающий количество времени, по истечении которого происходит сбой операции чтения.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1077">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a read operation fails.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-1078">Это свойство возвращает значение, возвращаемое вызовом <xref:System.IO.Stream.ReadTimeout%2A> свойства базового потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1078">This property returns the value returned by invoking the <xref:System.IO.Stream.ReadTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="b88e5-1079">При задании этого свойства <xref:System.IO.Stream.ReadTimeout%2A> базового потока будет присвоено указанное значение.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1079">When you set this property, the <xref:System.IO.Stream.ReadTimeout%2A> value on the underlying stream is set to the specified value.</span></span>  
  
 <span data-ttu-id="b88e5-1080">Если в базовый поток <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.ReadTimeout%2A> в миллисекундах, имеет значение <xref:System.Threading.Timeout.Infinite> по умолчанию, поэтому прочтен операции не имеют срока действия.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1080">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.ReadTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that read operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b88e5-1081">В следующем примере кода демонстрируется отображение значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1081">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteIdentity">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IIdentity RemoteIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity RemoteIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.RemoteIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RemoteIdentity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ RemoteIdentity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteIdentity : System.Security.Principal.IIdentity" Usage="System.Net.Security.NegotiateStream.RemoteIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b88e5-1082">Получает сведения об идентификации удаленной стороны, использующей этот поток с проверкой подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1082">Gets information about the identity of the remote party sharing this authenticated stream.</span></span></summary>
        <value><span data-ttu-id="b88e5-1083"><see cref="T:System.Security.Principal.IIdentity" /> Объект, описывающий идентификацию удаленной конечной точки.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1083">An <see cref="T:System.Security.Principal.IIdentity" /> object that describes the identity of the remote endpoint.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-1084">Если доступ осуществляется с помощью клиента, это свойство возвращает <xref:System.Security.Principal.GenericIdentity> содержащий имя участника-службы (SPN) сервера и протоколом проверки подлинности.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1084">When accessed by the client, this property returns a <xref:System.Security.Principal.GenericIdentity> containing the Service Principal Name (SPN) of the server and the authentication protocol used.</span></span> <span data-ttu-id="b88e5-1085">Если доступ осуществляется на сервере, это свойство возвращает <xref:System.Security.Principal.WindowsIdentity> , описывающий клиента.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1085">When accessed by the server, this property returns a <xref:System.Security.Principal.WindowsIdentity> that describes the client.</span></span> <span data-ttu-id="b88e5-1086">Если <xref:System.Security.Principal.WindowsIdentity> — нет доступа, сведения о клиенте возвращается на сервер в <xref:System.Security.Principal.GenericIdentity>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1086">If the <xref:System.Security.Principal.WindowsIdentity> is not available, client information is returned to the server in a <xref:System.Security.Principal.GenericIdentity>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b88e5-1087">В следующем примере кода демонстрируется отображение значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1087">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#2)]
 [!code-csharp[NclNegoAsyncServer#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-1088">Проверка подлинности не удалось, или не выполнялась.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1088">Authentication failed or has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="negotiateStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="b88e5-1089">Это значение игнорируется.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1089">This value is ignored.</span></span></param>
        <param name="origin"><span data-ttu-id="b88e5-1090">Это значение игнорируется.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1090">This value is ignored.</span></span></param>
        <summary><span data-ttu-id="b88e5-1091">Создает <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1091">Throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="b88e5-1092">Всегда создает исключение <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1092">Always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-1093">Этот метод не вызывается.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1093">Do not call this method.</span></span> <span data-ttu-id="b88e5-1094">Он наследуется, но не поддерживается <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1094">It is inherited, but is not supported by <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b88e5-1095">Поиск не поддерживается на <see cref="T:System.Net.Security.NegotiateStream" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1095">Seeking is not supported on <see cref="T:System.Net.Security.NegotiateStream" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="negotiateStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b88e5-1096"><see cref="T:System.Int64" /> Значение, указывающее длину потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1096">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</span></span></param>
        <summary><span data-ttu-id="b88e5-1097">Задает длину базового потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1097">Sets the length of the underlying stream.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="negotiateStream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="b88e5-1098">Объект <see cref="T:System.Byte" /> массив, предоставляющий байты для записи в поток.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1098">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="b88e5-1099">Значение <see cref="T:System.Int32" />, содержащее расположение (начиная с нуля) в массиве <paramref name="buffer" />, с которого требуется начать чтение байтов, записываемых в поток.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1099">An <see cref="T:System.Int32" /> containing the zero-based location in <paramref name="buffer" /> at which to begin reading bytes to be written to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="b88e5-1100">Объект <see cref="T:System.Int32" /> содержит количество байтов, считываемых из <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1100">A <see cref="T:System.Int32" /> containing the number of bytes to read from <paramref name="buffer" />.</span></span></param>
        <summary><span data-ttu-id="b88e5-1101">Записывает указанное количество из <see cref="T:System.Byte" />s в основной поток, используя указанный буфер и смещение.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1101">Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-1102">Если включено шифрование, подписи или шифрования и подписи, этот метод считывает данные из буфера, зашифровывает, подписывает их, или шифрует и подписывает его и передает их с помощью базового потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1102">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="b88e5-1103">Если службы безопасности, такие как шифрование данных или подписывание, используется, этот метод вызывает метод <xref:System.IO.Stream.Write%2A> базового потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1103">If no security services such as data encryption or signing are in use, this method invokes <xref:System.IO.Stream.Write%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="b88e5-1104">Этот метод блокируется до завершения операции записи.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1104">This method blocks while the write operation completes.</span></span> <span data-ttu-id="b88e5-1105">Чтобы предотвратить блокировку завершения операции, используйте <xref:System.Net.Security.NegotiateStream.Write%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1105">To prevent blocking while the operation completes, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
 <span data-ttu-id="b88e5-1106">Этот метод нельзя вызывать, пока вы успешно прошли проверку.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1106">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="b88e5-1107">Чтобы выполнить аутентификацию, вызовите один из <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, или <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1107">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="b88e5-1108"><xref:System.Net.Security.NegotiateStream> Класс поддерживает несколько одновременных операции записи.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1108">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="b88e5-1109">При попытке запустить операцию записи, когда уже выполняется другая операция записи в одном потоке, <xref:System.NotSupportedException> будет создано исключение.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1109">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b88e5-1110">В следующем примере кода демонстрируется запись <xref:System.Net.Security.NegotiateStream>.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1110">The following code example demonstrates writing to a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b88e5-1111">Свойство <paramref name="buffer" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1111"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b88e5-1112"><paramref name="offset is less than 0" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1112"><paramref name="offset is less than 0" />.</span></span>  
  
<span data-ttu-id="b88e5-1113">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-1113">-or-</span></span> 
 <span data-ttu-id="b88e5-1114">Значение <paramref name="offset" /> превышает длину <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1114"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="b88e5-1115">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-1115">-or-</span></span> 
 <span data-ttu-id="b88e5-1116"><paramref name="offset" /> плюс количество превышает длину <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1116"><paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b88e5-1117">Не удалось выполнить операцию записи.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1117">The write operation failed.</span></span>  
  
<span data-ttu-id="b88e5-1118">-или-</span><span class="sxs-lookup"><span data-stu-id="b88e5-1118">-or-</span></span> 
<span data-ttu-id="b88e5-1119">Используется шифрование, но не удается зашифровать данные.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1119">Encryption is in use, but the data could not be encrypted.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b88e5-1120">Уже существует выполняющаяся операция записи.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1120">There is already a write operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b88e5-1121">Объект закрыт.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1121">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b88e5-1122">Проверка подлинности не выполнена.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1122">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.Net.Security.NegotiateStream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b88e5-1123">Возвращает или задает количество времени, операция записи блокирует ожидание данных.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1123">Gets or sets the amount of time a write operation blocks waiting for data.</span></span></summary>
        <value><span data-ttu-id="b88e5-1124">Объект <see cref="T:System.Int32" /> , указывающий количество времени, по истечении которого происходит сбой операции записи.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1124">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a write operation fails.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88e5-1125">Это свойство возвращает значение, возвращаемое вызовом <xref:System.IO.Stream.WriteTimeout%2A> свойства базового потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1125">This property returns the value returned by invoking the <xref:System.IO.Stream.WriteTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="b88e5-1126">Для операторов наборов задает указанное значение <xref:System.IO.Stream.WriteTimeout%2A> значение базового потока.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1126">For set operations, the specified value sets the <xref:System.IO.Stream.WriteTimeout%2A> value on the underlying stream.</span></span>  
  
 <span data-ttu-id="b88e5-1127">Если в базовый поток <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.WriteTimeout%2A> в миллисекундах, имеет значение <xref:System.Threading.Timeout.Infinite> по умолчанию, который запись операций не имеют срока действия.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1127">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.WriteTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that write operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b88e5-1128">В следующем примере кода демонстрируется отображение значение этого свойства.</span><span class="sxs-lookup"><span data-stu-id="b88e5-1128">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>