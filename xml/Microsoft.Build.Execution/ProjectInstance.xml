<Type Name="ProjectInstance" FullName="Microsoft.Build.Execution.ProjectInstance">
  <Metadata><Meta Name="ms.openlocfilehash" Value="de6db64647bbab41d662c1137765757fcc9bcba9" /><Meta Name="ms.sourcegitcommit" Value="c573d537afba2d4c1463538f1095f2f155025464" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="10/16/2019" /><Meta Name="ms.locfileid" Value="72405726" /></Metadata><TypeSignature Language="C#" Value="public class ProjectInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Execution.ProjectInstance" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectInstance" />
  <TypeSignature Language="F#" Value="type ProjectInstance = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{FullPath} #Targets={TargetsCount} DefaultTargets={(DefaultTargets == null) ? System.String.Empty : System.String.Join(";", DefaultTargets.ToArray())} ToolsVersion={Toolset.ToolsVersion} InitialTargets={(InitialTargets == null) ? System.String.Empty : System.String.Join(";", InitialTargets.ToArray())} #GlobalProperties={globalProperties.Count} #Properties={properties.Count} #ItemTypes={items.ItemTypes.Count} #Items={items.Count}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1c06b-101">Представляет экземпляр проекта.</span><span class="sxs-lookup"><span data-stu-id="1c06b-101">Represents a project instance.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c06b-102">Экземпляры этого класса являются результатом клонирования проекта.</span><span class="sxs-lookup"><span data-stu-id="1c06b-102">Instances of this class result when a project is cloned.</span></span> <span data-ttu-id="1c06b-103">Конструкторы являются внутренними для того, чтобы требовать от пользователей создавать экземпляры проектов из существующих проектов.</span><span class="sxs-lookup"><span data-stu-id="1c06b-103">Constructors are internal in order to require users to create project instances from existing projects.</span></span>  
  
 <span data-ttu-id="1c06b-104">Новые экземпляры проектов являются неизменяемыми, за исключением того, что к ним можно добавить элементы экземпляра и задать для них свойства экземпляра.</span><span class="sxs-lookup"><span data-stu-id="1c06b-104">New project instances are immutable, except that instance items can be added to them and instance properties set on them.</span></span> <span data-ttu-id="1c06b-105">Экземпляры проекта полезны, поскольку их можно изменять и создавать несколько раз, не нарушая первоначальный проект.</span><span class="sxs-lookup"><span data-stu-id="1c06b-105">Project instances are useful because they can be modified and built several times without disturbing the original project.</span></span>  
  
 <span data-ttu-id="1c06b-106">Ни этот класс, ни любой из его составляющих не могут иметь ссылки на объекты <xref:Microsoft.Build.Construction> или <xref:Microsoft.Build.Evaluation>.</span><span class="sxs-lookup"><span data-stu-id="1c06b-106">Neither this class nor any of its constituents is allowed to have references to <xref:Microsoft.Build.Construction> or <xref:Microsoft.Build.Evaluation> objects.</span></span>  
  
 <span data-ttu-id="1c06b-107">Целевые объекты экземпляров проектов, службы узлов и реестр задач не предоставляются.</span><span class="sxs-lookup"><span data-stu-id="1c06b-107">Project instance targets, host services, and the task registry are not exposed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1c06b-108">Создает новый экземпляр проекта.</span><span class="sxs-lookup"><span data-stu-id="1c06b-108">Creates a new project instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : Microsoft.Build.Construction.ProjectRootElement -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance xml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="1c06b-109">Элемент корневой папки проекта.</span><span class="sxs-lookup"><span data-stu-id="1c06b-109">The project root element.</span></span></param>
        <summary><span data-ttu-id="1c06b-110">Создает новый экземпляр проекта и инициализирует его из заданной корневой папки с помощью коллекции проектов по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1c06b-110">Creates a new project instance and initializes it from the given project root, using the default project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c06b-111">Промежуточный объект <xref:Microsoft.Build.Evaluation.Project> не создан.</span><span class="sxs-lookup"><span data-stu-id="1c06b-111">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="1c06b-112">Это полезно, если проект будет создан, но не отображен или изменен.</span><span class="sxs-lookup"><span data-stu-id="1c06b-112">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance projectFile" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="1c06b-113">Имя файла проекта.</span><span class="sxs-lookup"><span data-stu-id="1c06b-113">The name of the project file.</span></span></param>
        <summary><span data-ttu-id="1c06b-114">Создает новый экземпляр проекта и инициализирует его из заданного файла с помощью коллекции проектов по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1c06b-114">Creates a new project instance and initializes it from the given project file, using the default project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c06b-115">Промежуточный объект <xref:Microsoft.Build.Evaluation.Project> не создан.</span><span class="sxs-lookup"><span data-stu-id="1c06b-115">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="1c06b-116">Это полезно, если проект будет создан, но не отображен или изменен.</span><span class="sxs-lookup"><span data-stu-id="1c06b-116">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (projectFile, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="1c06b-117">Имя файла проекта.</span><span class="sxs-lookup"><span data-stu-id="1c06b-117">The name of the project file.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="1c06b-118">Используемые глобальные свойства.</span><span class="sxs-lookup"><span data-stu-id="1c06b-118">The global properties to use.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="1c06b-119">Версия инструментов.</span><span class="sxs-lookup"><span data-stu-id="1c06b-119">The tools version.</span></span></param>
        <summary><span data-ttu-id="1c06b-120">Создает новый экземпляр проекта и инициализирует его из заданного файла проекта с помощью заданных глобальных свойств, версии инструментов и коллекции проектов по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="1c06b-120">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, and the default project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c06b-121">Промежуточный объект <xref:Microsoft.Build.Evaluation.Project> не создан.</span><span class="sxs-lookup"><span data-stu-id="1c06b-121">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="1c06b-122">Это полезно, если проект будет создан, но не отображен или изменен.</span><span class="sxs-lookup"><span data-stu-id="1c06b-122">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (xml, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="1c06b-123">Элемент корневой папки проекта</span><span class="sxs-lookup"><span data-stu-id="1c06b-123">The project root element</span></span></param>
        <param name="globalProperties"><span data-ttu-id="1c06b-124">Используемые глобальные свойства.</span><span class="sxs-lookup"><span data-stu-id="1c06b-124">The global properties to use.</span></span> <span data-ttu-id="1c06b-125">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1c06b-125">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="1c06b-126">Версия инструментов.</span><span class="sxs-lookup"><span data-stu-id="1c06b-126">The tools version.</span></span> <span data-ttu-id="1c06b-127">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1c06b-127">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="1c06b-128">Коллекция проектов</span><span class="sxs-lookup"><span data-stu-id="1c06b-128">Project collection</span></span></param>
        <summary><span data-ttu-id="1c06b-129">Создает новый экземпляр проекта и инициализирует его из заданной корневой папки проекта с помощью заданных глобальных свойств, версии инструментов и коллекции проектов.</span><span class="sxs-lookup"><span data-stu-id="1c06b-129">Creates a new project instance and initializes it from the given project root, using the given global properties, tools version, and project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c06b-130">Промежуточный объект <xref:Microsoft.Build.Evaluation.Project> не создан.</span><span class="sxs-lookup"><span data-stu-id="1c06b-130">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="1c06b-131">Это полезно, если проект будет создан, но не отображен или изменен.</span><span class="sxs-lookup"><span data-stu-id="1c06b-131">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (projectFile, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="1c06b-132">Имя файла проекта.</span><span class="sxs-lookup"><span data-stu-id="1c06b-132">The name of the project file.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="1c06b-133">Используемые глобальные свойства.</span><span class="sxs-lookup"><span data-stu-id="1c06b-133">The global properties to use.</span></span> <span data-ttu-id="1c06b-134">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1c06b-134">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="1c06b-135">Версия инструментов.</span><span class="sxs-lookup"><span data-stu-id="1c06b-135">The tools version.</span></span> <span data-ttu-id="1c06b-136">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1c06b-136">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="1c06b-137">Коллекция проектов</span><span class="sxs-lookup"><span data-stu-id="1c06b-137">Project collection</span></span></param>
        <summary><span data-ttu-id="1c06b-138">Создает новый экземпляр проекта и инициализирует его из заданного файла проекта с помощью заданных глобальных свойств, версии инструментов и коллекции проектов.</span><span class="sxs-lookup"><span data-stu-id="1c06b-138">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, and project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c06b-139">Промежуточный объект <xref:Microsoft.Build.Evaluation.Project> не создан.</span><span class="sxs-lookup"><span data-stu-id="1c06b-139">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="1c06b-140">Это полезно, если проект будет создан, но не отображен или изменен.</span><span class="sxs-lookup"><span data-stu-id="1c06b-140">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (xml, globalProperties, toolsVersion, subToolsetVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toolsVersion" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="subToolsetVersion" Type="System.String" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="1c06b-141">Элемент корневой папки проекта.</span><span class="sxs-lookup"><span data-stu-id="1c06b-141">The project root element.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="1c06b-142">Используемые глобальные свойства.</span><span class="sxs-lookup"><span data-stu-id="1c06b-142">The global properties to use.</span></span> <span data-ttu-id="1c06b-143">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1c06b-143">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="1c06b-144">Версия инструментов.</span><span class="sxs-lookup"><span data-stu-id="1c06b-144">The tools version.</span></span> <span data-ttu-id="1c06b-145">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1c06b-145">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="1c06b-146">версия поднабора инструментов.</span><span class="sxs-lookup"><span data-stu-id="1c06b-146">The sub toolset version.</span></span> <span data-ttu-id="1c06b-147">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1c06b-147">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="1c06b-148">Коллекция проектов.</span><span class="sxs-lookup"><span data-stu-id="1c06b-148">Project collection.</span></span></param>
        <summary><span data-ttu-id="1c06b-149">Создает новый экземпляр проекта и инициализирует его из заданной корневой папки проекта с помощью заданных глобальных свойств, версии инструментов и коллекции проектов.</span><span class="sxs-lookup"><span data-stu-id="1c06b-149">Creates a new project instance and initializes it from the given project root, using the given global properties, tools version, and project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c06b-150">Промежуточный объект <xref:Microsoft.Build.Evaluation.Project> не создан.</span><span class="sxs-lookup"><span data-stu-id="1c06b-150">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="1c06b-151">Это полезно, если проект будет создан, но не отображен или изменен.</span><span class="sxs-lookup"><span data-stu-id="1c06b-151">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (projectFile, globalProperties, toolsVersion, subToolsetVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toolsVersion" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="subToolsetVersion" Type="System.String" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="1c06b-152">Имя файла проекта.</span><span class="sxs-lookup"><span data-stu-id="1c06b-152">The name of the project file.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="1c06b-153">Используемые глобальные свойства.</span><span class="sxs-lookup"><span data-stu-id="1c06b-153">The global properties to use.</span></span> <span data-ttu-id="1c06b-154">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1c06b-154">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="1c06b-155">Версия инструментов.</span><span class="sxs-lookup"><span data-stu-id="1c06b-155">The tools version.</span></span> <span data-ttu-id="1c06b-156">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1c06b-156">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="1c06b-157">версия поднабора инструментов.</span><span class="sxs-lookup"><span data-stu-id="1c06b-157">The sub toolset version.</span></span> <span data-ttu-id="1c06b-158">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1c06b-158">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="1c06b-159">Коллекция проектов.</span><span class="sxs-lookup"><span data-stu-id="1c06b-159">Project collection.</span></span></param>
        <summary><span data-ttu-id="1c06b-160">Создает новый экземпляр проекта и инициализирует его из заданного файла проекта с помощью заданных глобальных свойств, версии инструментов, версии вложенного набора инструментов и коллекции проектов.</span><span class="sxs-lookup"><span data-stu-id="1c06b-160">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, sub toolset version, and project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c06b-161">Промежуточный объект <xref:Microsoft.Build.Evaluation.Project> не создан.</span><span class="sxs-lookup"><span data-stu-id="1c06b-161">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="1c06b-162">Это полезно, если проект будет создан, но не отображен или изменен.</span><span class="sxs-lookup"><span data-stu-id="1c06b-162">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItem">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1c06b-163">Добавляет элемент без метаданных в проект.</span><span class="sxs-lookup"><span data-stu-id="1c06b-163">Adds an item with no metadata to the project.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectItemInstance AddItem (string itemType, string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectItemInstance AddItem(string itemType, string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, evaluatedInclude As String) As ProjectItemInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectItemInstance ^ AddItem(System::String ^ itemType, System::String ^ evaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string -&gt; Microsoft.Build.Execution.ProjectItemInstance" Usage="projectInstance.AddItem (itemType, evaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectItemInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="1c06b-164">Тип добавляемого элемента.</span><span class="sxs-lookup"><span data-stu-id="1c06b-164">The item type of the item to be added.</span></span></param>
        <param name="evaluatedInclude"><span data-ttu-id="1c06b-165">Оцененный атрибут Include элемента.</span><span class="sxs-lookup"><span data-stu-id="1c06b-165">The evaluated Include attribute of the item.</span></span></param>
        <summary><span data-ttu-id="1c06b-166">Добавляет элемент без метаданных в проект.</span><span class="sxs-lookup"><span data-stu-id="1c06b-166">Adds an item with no metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="1c06b-167">Новый элемент.</span><span class="sxs-lookup"><span data-stu-id="1c06b-167">The new item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c06b-168">Мы не принимаем Прожектитеминстанце, чтобы убедиться, что у нас еще нет того, который уже используется другим Прожектинстанце.</span><span class="sxs-lookup"><span data-stu-id="1c06b-168">We don't take a ProjectItemInstance to make sure we don't have one that's already in use by another ProjectInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectItemInstance AddItem (string itemType, string evaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectItemInstance AddItem(string itemType, string evaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, evaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As ProjectItemInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectItemInstance ^ AddItem(System::String ^ itemType, System::String ^ evaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; Microsoft.Build.Execution.ProjectItemInstance" Usage="projectInstance.AddItem (itemType, evaluatedInclude, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectItemInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="1c06b-169">Тип добавляемого элемента.</span><span class="sxs-lookup"><span data-stu-id="1c06b-169">The item type of the item to be added.</span></span></param>
        <param name="evaluatedInclude"><span data-ttu-id="1c06b-170">Оцененный атрибут Include элемента.</span><span class="sxs-lookup"><span data-stu-id="1c06b-170">The evaluated Include attribute of the item.</span></span></param>
        <param name="metadata"><span data-ttu-id="1c06b-171">Метаданные элемента.</span><span class="sxs-lookup"><span data-stu-id="1c06b-171">The metadata of the item.</span></span></param>
        <summary><span data-ttu-id="1c06b-172">Добавляет элемент с заданными метаданными в проект.</span><span class="sxs-lookup"><span data-stu-id="1c06b-172">Adds an item with the given metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="1c06b-173">Возвратить новый элемент.</span><span class="sxs-lookup"><span data-stu-id="1c06b-173">Return the new item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c06b-174">Мы не принимаем Прожектитеминстанце, чтобы убедиться, что у нас еще нет того, который уже используется другим Прожектинстанце.</span><span class="sxs-lookup"><span data-stu-id="1c06b-174">We don't take a ProjectItemInstance to make sure we don't have one that's already in use by another ProjectInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Build">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1c06b-175">Строит целевые объекты по умолчанию проекта со средствами ведения журнала коллекции проектов.</span><span class="sxs-lookup"><span data-stu-id="1c06b-175">Builds the default targets of the project with loggers of the project collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build();" />
      <MemberSignature Language="F#" Value="member this.Build : unit -&gt; bool" Usage="projectInstance.Build " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1c06b-176">Строит целевые объекты по умолчанию проекта со средствами ведения журнала коллекции проектов.</span><span class="sxs-lookup"><span data-stu-id="1c06b-176">Builds the default targets of the project with loggers of the project collection.</span></span></summary>
        <returns><span data-ttu-id="1c06b-177">Значение <see langword="true" />, если построение выполнено успешно, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1c06b-177"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="projectInstance.Build loggers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="1c06b-178">Средства ведения журнала, которые должны использоваться для построения.</span><span class="sxs-lookup"><span data-stu-id="1c06b-178">The loggers to use for the build.</span></span> <span data-ttu-id="1c06b-179">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1c06b-179">May be null.</span></span></param>
        <summary><span data-ttu-id="1c06b-180">Строит целевые объекты по умолчанию проекта с заданными средствами ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="1c06b-180">Builds the default targets of the project with the given loggers.</span></span></summary>
        <returns><span data-ttu-id="1c06b-181">Значение <see langword="true" />, если построение выполнено успешно, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1c06b-181"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c06b-182">Создает исключение InvalidOperationException, если любое из предоставляемых средств ведения журнала уже присоединено к службе ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="1c06b-182">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="projectInstance.Build (loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="1c06b-183">Средства ведения журнала, которые должны использоваться для построения.</span><span class="sxs-lookup"><span data-stu-id="1c06b-183">The loggers to use for the build.</span></span> <span data-ttu-id="1c06b-184">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1c06b-184">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="1c06b-185">Удаленные средства ведения журнала, которые должны использоваться для построения.</span><span class="sxs-lookup"><span data-stu-id="1c06b-185">The remote loggers to use for the build.</span></span> <span data-ttu-id="1c06b-186">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1c06b-186">May be null.</span></span></param>
        <summary><span data-ttu-id="1c06b-187">Создает целевые объекты по умолчанию проекта с заданными и удаленными средствами ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="1c06b-187">Builds the default targets of the project with the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="1c06b-188">Значение <see langword="true" />, если построение выполнено успешно, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1c06b-188"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c06b-189">Создает исключение InvalidOperationException, если любое из предоставляемых средств ведения журнала уже присоединено к службе ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="1c06b-189">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="projectInstance.Build (target, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="1c06b-190">Целевой объект для построения.</span><span class="sxs-lookup"><span data-stu-id="1c06b-190">The target to build.</span></span> <span data-ttu-id="1c06b-191">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1c06b-191">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="1c06b-192">Средства ведения журнала, которые должны использоваться для построения.</span><span class="sxs-lookup"><span data-stu-id="1c06b-192">The loggers to use for the build.</span></span> <span data-ttu-id="1c06b-193">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1c06b-193">May be null.</span></span></param>
        <summary><span data-ttu-id="1c06b-194">Строит заданный целевой объект проекта с заданными средствами ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="1c06b-194">Builds the given target of the project with the given loggers.</span></span></summary>
        <returns><span data-ttu-id="1c06b-195">Значение <see langword="true" />, если построение выполнено успешно, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1c06b-195"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c06b-196">Создает исключение InvalidOperationException, если любое из предоставляемых средств ведения журнала уже присоединено к службе ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="1c06b-196">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="projectInstance.Build (targets, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="1c06b-197">Конечные объекты сборки.</span><span class="sxs-lookup"><span data-stu-id="1c06b-197">The targets to build.</span></span> <span data-ttu-id="1c06b-198">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1c06b-198">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="1c06b-199">Средства ведения журнала, которые должны использоваться для построения.</span><span class="sxs-lookup"><span data-stu-id="1c06b-199">The loggers to use for the build.</span></span> <span data-ttu-id="1c06b-200">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1c06b-200">May be null.</span></span></param>
        <summary><span data-ttu-id="1c06b-201">Строит заданные целевые объекты проекта с заданными средствами ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="1c06b-201">Builds the given targets of the project with the given loggers.</span></span></summary>
        <returns><span data-ttu-id="1c06b-202">Значение <see langword="true" />, если построение выполнено успешно, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1c06b-202"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c06b-203">Создает исключение InvalidOperationException, если любое из предоставляемых средств ведения журнала уже присоединено к службе ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="1c06b-203">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="projectInstance.Build (target, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="1c06b-204">Целевой объект для построения.</span><span class="sxs-lookup"><span data-stu-id="1c06b-204">The target to build.</span></span> <span data-ttu-id="1c06b-205">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1c06b-205">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="1c06b-206">Средства ведения журнала, которые должны использоваться для построения.</span><span class="sxs-lookup"><span data-stu-id="1c06b-206">The loggers to use for the build.</span></span> <span data-ttu-id="1c06b-207">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1c06b-207">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="1c06b-208">Удаленные средства ведения журнала, которые должны использоваться для построения.</span><span class="sxs-lookup"><span data-stu-id="1c06b-208">The remote loggers to use for the build.</span></span> <span data-ttu-id="1c06b-209">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1c06b-209">May be null.</span></span></param>
        <summary><span data-ttu-id="1c06b-210">Создает целевой объект проекта с заданными и удаленными средствами ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="1c06b-210">Builds the given target of the project with the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="1c06b-211">Значение <see langword="true" />, если построение выполнено успешно, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1c06b-211"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c06b-212">Создает исключение InvalidOperationException, если любое из предоставляемых средств ведения журнала уже присоединено к службе ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="1c06b-212">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, out System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.TargetResult&gt; targetOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, [out] class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.TargetResult&gt;&amp; targetOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), ByRef targetOutputs As IDictionary(Of String, TargetResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::TargetResult ^&gt; ^ % targetOutputs);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * IDictionary -&gt; bool" Usage="projectInstance.Build (targets, loggers, targetOutputs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="targetOutputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.TargetResult&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="1c06b-213">Список целевых объектов для построения.</span><span class="sxs-lookup"><span data-stu-id="1c06b-213">List of targets to build.</span></span> <span data-ttu-id="1c06b-214">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1c06b-214">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="1c06b-215">Нумерованный список средств ведения журнала для использования при построении целевых объектов.</span><span class="sxs-lookup"><span data-stu-id="1c06b-215">Enumerated list of loggers to use for building targets.</span></span></param>
        <param name="targetOutputs"><span data-ttu-id="1c06b-216">Выходные данные построений целевых объектов.</span><span class="sxs-lookup"><span data-stu-id="1c06b-216">Outputs of target builds.</span></span></param>
        <summary><span data-ttu-id="1c06b-217">Строит список целевых объектов с заданными средствами ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="1c06b-217">Build a list of targets with specified loggers.</span></span> <span data-ttu-id="1c06b-218">Целевые объекты могут принимать значение null.</span><span class="sxs-lookup"><span data-stu-id="1c06b-218">Targets may be null.</span></span> <span data-ttu-id="1c06b-219">Средства ведения журнала могут принимать значение null.</span><span class="sxs-lookup"><span data-stu-id="1c06b-219">Loggers may be null.</span></span></summary>
        <returns><span data-ttu-id="1c06b-220">Значение <see langword="true" />, если операция выполнена успешно; в противном случае — значение false.</span><span class="sxs-lookup"><span data-stu-id="1c06b-220"><see langword="true" /> on success, false on failure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c06b-221">Если какое бы то ни было предоставленное средство ведения журнала уже подключено к службе ведения журнала, мы передали исключение InvalidOperationException.</span><span class="sxs-lookup"><span data-stu-id="1c06b-221">If any of the loggers supplied are already attached to the logging service we were passed, throws InvalidOperationException.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="projectInstance.Build (targets, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="1c06b-222">Конечные объекты сборки.</span><span class="sxs-lookup"><span data-stu-id="1c06b-222">The targets to build.</span></span> <span data-ttu-id="1c06b-223">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1c06b-223">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="1c06b-224">Средства ведения журнала, которые должны использоваться для построения.</span><span class="sxs-lookup"><span data-stu-id="1c06b-224">The loggers to use for the build.</span></span> <span data-ttu-id="1c06b-225">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1c06b-225">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="1c06b-226">Удаленные средства ведения журнала, которые должны использоваться для построения.</span><span class="sxs-lookup"><span data-stu-id="1c06b-226">The remote loggers to use for the build.</span></span> <span data-ttu-id="1c06b-227">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1c06b-227">May be null.</span></span></param>
        <summary><span data-ttu-id="1c06b-228">Создает целевой объект проекта с заданными и удаленными средствами ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="1c06b-228">Builds the given targets of the project with the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="1c06b-229">Значение <see langword="true" />, если построение выполнено успешно, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1c06b-229"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c06b-230">Создает исключение InvalidOperationException, если любое из предоставляемых средств ведения журнала уже присоединено к службе ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="1c06b-230">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers, out System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.TargetResult&gt; targetOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers, [out] class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.TargetResult&gt;&amp; targetOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord), ByRef targetOutputs As IDictionary(Of String, TargetResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::TargetResult ^&gt; ^ % targetOutputs);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; * IDictionary -&gt; bool" Usage="projectInstance.Build (targets, loggers, remoteLoggers, targetOutputs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
        <Parameter Name="targetOutputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.TargetResult&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="1c06b-231">Конечные объекты сборки.</span><span class="sxs-lookup"><span data-stu-id="1c06b-231">The targets to build.</span></span> <span data-ttu-id="1c06b-232">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1c06b-232">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="1c06b-233">Средства ведения журнала, которые должны использоваться для построения.</span><span class="sxs-lookup"><span data-stu-id="1c06b-233">The loggers to use for the build.</span></span> <span data-ttu-id="1c06b-234">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1c06b-234">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="1c06b-235">Удаленные средства ведения журнала, которые должны использоваться для построения.</span><span class="sxs-lookup"><span data-stu-id="1c06b-235">The remote loggers to use for the build.</span></span> <span data-ttu-id="1c06b-236">Может принимать значение NULL.</span><span class="sxs-lookup"><span data-stu-id="1c06b-236">May be null.</span></span></param>
        <param name="targetOutputs"><span data-ttu-id="1c06b-237">Выходные данные целевого объекта.</span><span class="sxs-lookup"><span data-stu-id="1c06b-237">The target outputs.</span></span></param>
        <summary><span data-ttu-id="1c06b-238">Строит заданные целевые объекты с заданными выходными данными целевого объекта с заданными и удаленными средствами ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="1c06b-238">Builds the given targets with the given target outputs and with the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="1c06b-239">Значение <see langword="true" />, если построение выполнено успешно, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1c06b-239"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c06b-240">Создает исключение InvalidOperationException, если любое из предоставляемых средств ведения журнала уже присоединено к службе ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="1c06b-240">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeepCopy">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1c06b-241">Создает независимый глубокий клон данного проекта и всех его элементов.</span><span class="sxs-lookup"><span data-stu-id="1c06b-241">Creates an independent, deep clone of this project and everything in it.</span></span> <span data-ttu-id="1c06b-242">Может использоваться для компиляции отдельного файла или сохранения результатов построения между построениями.</span><span class="sxs-lookup"><span data-stu-id="1c06b-242">Useful for compiling a single file or for keeping build results between builds.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeepCopy">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance DeepCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance DeepCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.DeepCopy" />
      <MemberSignature Language="VB.NET" Value="Public Function DeepCopy () As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ DeepCopy();" />
      <MemberSignature Language="F#" Value="member this.DeepCopy : unit -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="projectInstance.DeepCopy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1c06b-243">Создает независимый глубокий клон данного проекта и всех его элементов.</span><span class="sxs-lookup"><span data-stu-id="1c06b-243">Creates an independent, deep clone of this project and everything in it.</span></span> <span data-ttu-id="1c06b-244">Клон имеет такую же изменяемость, и исходный объект.</span><span class="sxs-lookup"><span data-stu-id="1c06b-244">Clone has the same mutability as the original.</span></span> <span data-ttu-id="1c06b-245">Может использоваться для компиляции отдельного файла или сохранения результатов построения между построениями.</span><span class="sxs-lookup"><span data-stu-id="1c06b-245">Useful for compiling a single file or for keeping build results between builds.</span></span></summary>
        <returns><span data-ttu-id="1c06b-246">Создает независимый глубокий клон данного проекта.</span><span class="sxs-lookup"><span data-stu-id="1c06b-246">Creates an independent, deep clone of this project.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeepCopy">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance DeepCopy (bool isImmutable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance DeepCopy(bool isImmutable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.DeepCopy(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeepCopy (isImmutable As Boolean) As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ DeepCopy(bool isImmutable);" />
      <MemberSignature Language="F#" Value="member this.DeepCopy : bool -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="projectInstance.DeepCopy isImmutable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isImmutable" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="isImmutable"><span data-ttu-id="1c06b-247">Флаг, указывающий изменяемость клонирования.</span><span class="sxs-lookup"><span data-stu-id="1c06b-247">Flag indicating clone mutability.</span></span></param>
        <summary><span data-ttu-id="1c06b-248">Создает независимый, глубокий клон данного проекта и всех его элементов с указанной изменяемостью.</span><span class="sxs-lookup"><span data-stu-id="1c06b-248">Creates an independent, deep clone of this project and everything in it, with specified mutability.</span></span> <span data-ttu-id="1c06b-249">Может использоваться для компиляции отдельного файла или сохранения результатов построения между построениями.</span><span class="sxs-lookup"><span data-stu-id="1c06b-249">Useful for compiling a single file or for keeping build results between builds.</span></span></summary>
        <returns><span data-ttu-id="1c06b-250">Независимый глубокий клон данного проекта с указанной изменяемостью.</span><span class="sxs-lookup"><span data-stu-id="1c06b-250">An independent, deep clone of this project, with specified mutability.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTargets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; DefaultTargets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; DefaultTargets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.DefaultTargets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultTargets As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ DefaultTargets { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultTargets : System.Collections.Generic.List&lt;string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.DefaultTargets" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IEvaluatorData`4.DefaultTargets</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1c06b-251">Получает или задает список целевых объектов по умолчанию для данного проекта.</span><span class="sxs-lookup"><span data-stu-id="1c06b-251">Gets or sets the list of default targets for this project.</span></span></summary>
        <value><span data-ttu-id="1c06b-252">Список целевых объектов по умолчанию для этого проекта.</span><span class="sxs-lookup"><span data-stu-id="1c06b-252">The list of default targets for this project.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c06b-253">Целевые объекты по умолчанию создаются, если не заданы явно целевые объекты.</span><span class="sxs-lookup"><span data-stu-id="1c06b-253">Default targets are built if no targets are explicitly specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Directory">
      <MemberSignature Language="C#" Value="public string Directory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Directory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Directory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Directory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Directory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Directory : string" Usage="Microsoft.Build.Execution.ProjectInstance.Directory" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IEvaluatorData`4.Directory</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1c06b-254">Получает корневой каталог проекта.</span><span class="sxs-lookup"><span data-stu-id="1c06b-254">Gets the project root directory.</span></span> <span data-ttu-id="1c06b-255">Используемый для оценки относительных путей и настройки текущего каталога при построении.</span><span class="sxs-lookup"><span data-stu-id="1c06b-255">Used for evaluation of relative paths and setting the current directory during build.</span></span> <span data-ttu-id="1c06b-256">Никогда не имеет значение null: проекты, не загруженные с диска, используют текущий каталог со времени начала построения.</span><span class="sxs-lookup"><span data-stu-id="1c06b-256">Is never null: projects not loaded from disk use the current directory from the time the build started.</span></span></summary>
        <value><span data-ttu-id="1c06b-257">Корневой каталог проекта, который не может иметь значение null.</span><span class="sxs-lookup"><span data-stu-id="1c06b-257">The project root directory, which is never null.</span></span> <span data-ttu-id="1c06b-258">Проекты, не загруженные с диска, возвращают текущий каталог во время начала построения.</span><span class="sxs-lookup"><span data-stu-id="1c06b-258">Projects not loaded from disk return the current directory at the time the build was started.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateCondition">
      <MemberSignature Language="C#" Value="public bool EvaluateCondition (string condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EvaluateCondition(string condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EvaluateCondition (condition As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EvaluateCondition(System::String ^ condition);" />
      <MemberSignature Language="F#" Value="abstract member EvaluateCondition : string -&gt; bool&#xA;override this.EvaluateCondition : string -&gt; bool" Usage="projectInstance.EvaluateCondition condition" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IEvaluatorData`4.EvaluateCondition(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="1c06b-259">Разворачиваемая строка.</span><span class="sxs-lookup"><span data-stu-id="1c06b-259">The string to be expanded.</span></span></param>
        <summary><span data-ttu-id="1c06b-260">Оценивает предоставленную строку как условие, разворачивая элементы и свойства с помощью доступных текущих элементов и свойств с последующей логической оценкой.</span><span class="sxs-lookup"><span data-stu-id="1c06b-260">Evaluates the provided string as a condition by expanding items and properties, using the current items and properties available, then doing a logical evaluation.</span></span></summary>
        <returns><span data-ttu-id="1c06b-261">Значение <see langword="true" />, если значение строки true; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1c06b-261"><see langword="true" /> if the string evaluates to true; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c06b-262">Это полезно для окна интерпретации.</span><span class="sxs-lookup"><span data-stu-id="1c06b-262">This is useful for the immediate window.</span></span>  
  
 <span data-ttu-id="1c06b-263">Не расширяет простые выражения метаданных.</span><span class="sxs-lookup"><span data-stu-id="1c06b-263">Does not expand bare metadata expressions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandString">
      <MemberSignature Language="C#" Value="public string ExpandString (string unexpandedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ExpandString(string unexpandedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.ExpandString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExpandString (unexpandedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ExpandString(System::String ^ unexpandedValue);" />
      <MemberSignature Language="F#" Value="abstract member ExpandString : string -&gt; string&#xA;override this.ExpandString : string -&gt; string" Usage="projectInstance.ExpandString unexpandedValue" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IEvaluatorData`4.ExpandString(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unexpandedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unexpandedValue"><span data-ttu-id="1c06b-264">Разворачиваемая строка.</span><span class="sxs-lookup"><span data-stu-id="1c06b-264">The string to be expanded.</span></span></param>
        <summary><span data-ttu-id="1c06b-265">Оценивает предоставленную строку, разворачивая элементы и свойства с помощью доступных текущих элементов и свойств.</span><span class="sxs-lookup"><span data-stu-id="1c06b-265">Evaluates the provided string by expanding items and properties, using the current items and properties available.</span></span></summary>
        <returns><span data-ttu-id="1c06b-266">Значение развернутой строки.</span><span class="sxs-lookup"><span data-stu-id="1c06b-266">The expanded string value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c06b-267">Это полезно для некоторых узлов или для окна интерпретации отладчика.</span><span class="sxs-lookup"><span data-stu-id="1c06b-267">This is useful for some hosts, or for the debugger immediate window.</span></span>  
  
 <span data-ttu-id="1c06b-268">Не расширяет простые выражения метаданных.</span><span class="sxs-lookup"><span data-stu-id="1c06b-268">Does not expand bare metadata expressions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullPath : string" Usage="Microsoft.Build.Execution.ProjectInstance.FullPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1c06b-269">Получает полный путь к файлу проекта.</span><span class="sxs-lookup"><span data-stu-id="1c06b-269">Gets the full path to the project file.</span></span> <span data-ttu-id="1c06b-270">Используется для ведения журнала.</span><span class="sxs-lookup"><span data-stu-id="1c06b-270">Used for logging.</span></span></summary>
        <value><span data-ttu-id="1c06b-271">Полный путь к файлу проекта или значение <see langword="null" />, если проект никогда не был именован.</span><span class="sxs-lookup"><span data-stu-id="1c06b-271">The full path to the project file, or <see langword="null" /> if the project was never named.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvaluatedItemIncludeEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1c06b-272">Получает вычисленное преобразованное в escape-последовательность значение атрибута Include указанного определения элемента.</span><span class="sxs-lookup"><span data-stu-id="1c06b-272">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Execution.ProjectItemDefinitionInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Execution.ProjectItemDefinitionInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemDefinitionInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Execution::ProjectItemDefinitionInstance ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Execution.ProjectItemDefinitionInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemDefinitionInstance" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="1c06b-273">Определение элемента, которое необходимо оценить и преобразовать в escape-последовательность.</span><span class="sxs-lookup"><span data-stu-id="1c06b-273">The item definition to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="1c06b-274">Получает вычисленное преобразованное в escape-последовательность значение атрибута Include указанного определения элемента.</span><span class="sxs-lookup"><span data-stu-id="1c06b-274">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="1c06b-275">Вычисленное преобразованное в escape-последовательность значение атрибута Include указанного определения элемента.</span><span class="sxs-lookup"><span data-stu-id="1c06b-275">The evaluated, escaped value of the Include attribute of the provided item definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Execution.ProjectItemInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Execution.ProjectItemInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Execution::ProjectItemInstance ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Execution.ProjectItemInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="1c06b-276">Элемент, который необходимо оценить и преобразовать в escape-последовательность.</span><span class="sxs-lookup"><span data-stu-id="1c06b-276">The item to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="1c06b-277">Получает вычисленное преобразованное в escape-последовательность значение атрибута Include указанных элементов.</span><span class="sxs-lookup"><span data-stu-id="1c06b-277">Gets the evaluated, escaped value of the Include attribute of the provided item.</span></span></summary>
        <returns><span data-ttu-id="1c06b-278">Вычисленное преобразованное в escape-последовательность значение атрибута Include указанных элементов.</span><span class="sxs-lookup"><span data-stu-id="1c06b-278">The evaluated, escaped value of the Include attribute of the provided item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; GetItems (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; GetItems(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetItems(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItems (itemType As String) As ICollection(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ GetItems(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.GetItems : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;" Usage="projectInstance.GetItems itemType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IItemProvider`1.GetItems(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="1c06b-279">Тип извлекаемого элемента.</span><span class="sxs-lookup"><span data-stu-id="1c06b-279">The item type of the items to be retrieved.</span></span></param>
        <summary><span data-ttu-id="1c06b-280">Получает все элементы заданного типа в этом проекте.</span><span class="sxs-lookup"><span data-stu-id="1c06b-280">Gets all the items in this project of the specified type.</span></span> <span data-ttu-id="1c06b-281">Этот список доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="1c06b-281">This is a read-only list.</span></span></summary>
        <returns><span data-ttu-id="1c06b-282">Все элементы заданного типа в этом проекте.</span><span class="sxs-lookup"><span data-stu-id="1c06b-282">All the items in this project of the specified type.</span></span> <span data-ttu-id="1c06b-283">При отсутствии таких элементов возвращает пустой список.</span><span class="sxs-lookup"><span data-stu-id="1c06b-283">Returns an empty list if there are none.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsByItemTypeAndEvaluatedInclude">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; GetItemsByItemTypeAndEvaluatedInclude (string itemType, string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; GetItemsByItemTypeAndEvaluatedInclude(string itemType, string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsByItemTypeAndEvaluatedInclude (itemType As String, evaluatedInclude As String) As IEnumerable(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ GetItemsByItemTypeAndEvaluatedInclude(System::String ^ itemType, System::String ^ evaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.GetItemsByItemTypeAndEvaluatedInclude : string * string -&gt; seq&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;" Usage="projectInstance.GetItemsByItemTypeAndEvaluatedInclude (itemType, evaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="evaluatedInclude" Type="System.String" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="1c06b-284">Тип извлекаемого элемента.</span><span class="sxs-lookup"><span data-stu-id="1c06b-284">The item type of the items to be retrieved.</span></span></param>
        <param name="evaluatedInclude"><span data-ttu-id="1c06b-285">Вычисленное значение Include извлекаемого элемента.</span><span class="sxs-lookup"><span data-stu-id="1c06b-285">The evaluated include value of the items to be retrieved</span></span></param>
        <summary><span data-ttu-id="1c06b-286">Получает все элементы заданного типа в этом проекте и вычисленное значение включения.</span><span class="sxs-lookup"><span data-stu-id="1c06b-286">Gets all the items in this project of the specified type and evaluated include value.</span></span> <span data-ttu-id="1c06b-287">Этот список доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="1c06b-287">This is a read-only list.</span></span></summary>
        <returns><span data-ttu-id="1c06b-288">Все элементы заданного типа в этом проекте и вычисленное значение включения.</span><span class="sxs-lookup"><span data-stu-id="1c06b-288">All the items in this project of the specified type and evaluated include value.</span></span> <span data-ttu-id="1c06b-289">При отсутствии таких элементов возвращает пустую коллекцию.</span><span class="sxs-lookup"><span data-stu-id="1c06b-289">Returns an empty collection if there are none.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMetadataValueEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1c06b-290">Получает преобразованное в escape-последовательность значение метаданных с заданным именем указанного определения элемента.</span><span class="sxs-lookup"><span data-stu-id="1c06b-290">Gets the escaped value of the metadatum with the provided name of the provided item definition.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectMetadataInstance metadatum);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectMetadataInstance metadatum) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectMetadataInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (metadatum As ProjectMetadataInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectMetadataInstance ^ metadatum);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Execution.ProjectMetadataInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped metadatum" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadatum" Type="Microsoft.Build.Execution.ProjectMetadataInstance" />
      </Parameters>
      <Docs>
        <param name="metadatum"><span data-ttu-id="1c06b-291">Метаданные, подлежащие преобразованию в escape-последовательность.</span><span class="sxs-lookup"><span data-stu-id="1c06b-291">The metadatum to be escaped.</span></span></param>
        <summary><span data-ttu-id="1c06b-292">Получает преобразованное в escape-последовательность значение указанных метаданных.</span><span class="sxs-lookup"><span data-stu-id="1c06b-292">Gets the escaped value of the provided metadatum.</span></span></summary>
        <returns><span data-ttu-id="1c06b-293">Преобразованное в escape-последовательность значение указанных метаданных.</span><span class="sxs-lookup"><span data-stu-id="1c06b-293">The escaped value of the provided metadatum.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectItemDefinitionInstance item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectItemDefinitionInstance item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemDefinitionInstance, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectItemDefinitionInstance ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Execution.ProjectItemDefinitionInstance * string -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemDefinitionInstance" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="1c06b-294">Определение элемента для получения значения метаданных.</span><span class="sxs-lookup"><span data-stu-id="1c06b-294">The item definition to provide the metadatum value.</span></span></param>
        <param name="name"><span data-ttu-id="1c06b-295">Имя метаданных.</span><span class="sxs-lookup"><span data-stu-id="1c06b-295">The name of the metadatum.</span></span></param>
        <summary><span data-ttu-id="1c06b-296">Получает преобразованное в escape-последовательность значение метаданных с заданным именем указанного определения элемента.</span><span class="sxs-lookup"><span data-stu-id="1c06b-296">Gets the escaped value of the metadatum with the provided name of the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="1c06b-297">Преобразованное в escape-последовательность значение метаданных с заданным именем указанного определения элемента.</span><span class="sxs-lookup"><span data-stu-id="1c06b-297">The escaped value of the metadatum with the provided name of the provided item definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectItemInstance item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectItemInstance item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemInstance,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemInstance, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectItemInstance ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Execution.ProjectItemInstance * string -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="1c06b-298">Элемент для получения значения метаданных.</span><span class="sxs-lookup"><span data-stu-id="1c06b-298">The item to provide the metadatum value.</span></span></param>
        <param name="name"><span data-ttu-id="1c06b-299">Имя метаданных.</span><span class="sxs-lookup"><span data-stu-id="1c06b-299">The name of the metadatum.</span></span></param>
        <summary><span data-ttu-id="1c06b-300">Получает преобразованное в escape-последовательность значение метаданных с заданным именем для указанного элемента.</span><span class="sxs-lookup"><span data-stu-id="1c06b-300">Gets the escaped value of the metadatum with the provided name on the provided item.</span></span></summary>
        <returns><span data-ttu-id="1c06b-301">Преобразованное в escape-последовательность значение метаданных с заданным именем для указанного элемента.</span><span class="sxs-lookup"><span data-stu-id="1c06b-301">The escaped value of the metadatum with the provided name on the provided item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectPropertyInstance GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Execution.ProjectPropertyInstance GetProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String) As ProjectPropertyInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Build::Execution::ProjectPropertyInstance ^ GetProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string -&gt; Microsoft.Build.Execution.ProjectPropertyInstance&#xA;override this.GetProperty : string -&gt; Microsoft.Build.Execution.ProjectPropertyInstance" Usage="projectInstance.GetProperty name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IPropertyProvider`1.GetProperty(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectPropertyInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1c06b-302">Имя свойства, которое необходимо извлечь.</span><span class="sxs-lookup"><span data-stu-id="1c06b-302">The name of the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="1c06b-303">Возвращает свойство с заданным именем.</span><span class="sxs-lookup"><span data-stu-id="1c06b-303">Gets the property with the given name.</span></span></summary>
        <returns><span data-ttu-id="1c06b-304">Свойство с заданным именем или <see langword="null" />, если свойство с таким именем не существует.</span><span class="sxs-lookup"><span data-stu-id="1c06b-304">The property with the given name, or <see langword="null" /> if no property exists with that name.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public string GetPropertyValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPropertyValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPropertyValue(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyValue : string -&gt; string" Usage="projectInstance.GetPropertyValue name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1c06b-305">Имя свойства, значение которого требуется извлечь.</span><span class="sxs-lookup"><span data-stu-id="1c06b-305">The name of the property whose value is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="1c06b-306">Получает значение свойства с заданным именем.</span><span class="sxs-lookup"><span data-stu-id="1c06b-306">Gets the value of the property with the given name.</span></span></summary>
        <returns><span data-ttu-id="1c06b-307">Значение свойства с заданным именем или пустая строка, если свойство с таким именем не существует.</span><span class="sxs-lookup"><span data-stu-id="1c06b-307">The value of the property with the given name, or an empty string if no property exists with that name.</span></span> <span data-ttu-id="1c06b-308">Возвращаемое значение не имеет последовательностей escape-символов.</span><span class="sxs-lookup"><span data-stu-id="1c06b-308">The value returned has no escaped character sequences.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c06b-309">Этот метод не различает свойство со значением пустой строки и без свойства с заданным именем.</span><span class="sxs-lookup"><span data-stu-id="1c06b-309">This method does not distinguish between a property with a value of empty string and no property with the given name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetPropertyValueEscaped (Microsoft.Build.Execution.ProjectPropertyInstance property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyValueEscaped(class Microsoft.Build.Execution.ProjectPropertyInstance property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(Microsoft.Build.Execution.ProjectPropertyInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValueEscaped (property As ProjectPropertyInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPropertyValueEscaped(Microsoft::Build::Execution::ProjectPropertyInstance ^ property);" />
      <MemberSignature Language="F#" Value="static member GetPropertyValueEscaped : Microsoft.Build.Execution.ProjectPropertyInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Execution.ProjectPropertyInstance" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="1c06b-310">Свойство, подлежащее преобразованию в escape-последовательность.</span><span class="sxs-lookup"><span data-stu-id="1c06b-310">The property to be escaped.</span></span></param>
        <summary><span data-ttu-id="1c06b-311">Получает преобразованное в escape-последовательность значение указанного свойства.</span><span class="sxs-lookup"><span data-stu-id="1c06b-311">Gets the escaped value of the provided property.</span></span></summary>
        <returns><span data-ttu-id="1c06b-312">Преобразованное в escape-последовательность значение указанного свойства.</span><span class="sxs-lookup"><span data-stu-id="1c06b-312">The escaped value of the provided property.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GlobalProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GlobalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalProperties As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GlobalProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalProperties : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1c06b-313">Получает словарь глобальных свойств, использованный для оценки данного проекта, если таковой имеется.</span><span class="sxs-lookup"><span data-stu-id="1c06b-313">Gets the dictionary of global properties this project was evaluated with, if any.</span></span></summary>
        <value><span data-ttu-id="1c06b-314">Словарь глобальных свойств, с которыми был оценен этот проект.</span><span class="sxs-lookup"><span data-stu-id="1c06b-314">The dictionary of global properties this project was evaluated with.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c06b-315">Коллекция, доступная только для чтения.</span><span class="sxs-lookup"><span data-stu-id="1c06b-315">Read only collection.</span></span>  
  
 <span data-ttu-id="1c06b-316">Обходят ссылки проекта.</span><span class="sxs-lookup"><span data-stu-id="1c06b-316">Traverses project references.</span></span>  
  
 <span data-ttu-id="1c06b-317">Это общедоступный метод получения, который преобразует в недоступный только для чтения недоставленный IDictionary @ no__t-0string, строковый >.</span><span class="sxs-lookup"><span data-stu-id="1c06b-317">This is the publicly exposed getter, that translates into a read-only dead IDictionary\<string, string>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialTargets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; InitialTargets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; InitialTargets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.InitialTargets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InitialTargets As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ InitialTargets { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InitialTargets : System.Collections.Generic.List&lt;string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.InitialTargets" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IEvaluatorData`4.InitialTargets</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1c06b-318">Получает список начальных целевых объектов для проекта и всех его импортов преимущественно в глубину.</span><span class="sxs-lookup"><span data-stu-id="1c06b-318">Gets the list of initial targets for the project and all its imports, depth-first.</span></span> <span data-ttu-id="1c06b-319">Данные целевые объекты строятся перед любыми другими.</span><span class="sxs-lookup"><span data-stu-id="1c06b-319">These targets are built before any other targets.</span></span></summary>
        <value><span data-ttu-id="1c06b-320">Список начальных целевых объектов для проекта и всех его импортов, глубина — первый.</span><span class="sxs-lookup"><span data-stu-id="1c06b-320">The list of initial targets for the project and all its imports, depth-first.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImmutable">
      <MemberSignature Language="C#" Value="public bool IsImmutable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImmutable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.IsImmutable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImmutable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImmutable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsImmutable : bool" Usage="Microsoft.Build.Execution.ProjectInstance.IsImmutable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1c06b-321">Возвращает значение, указывающее, является ли экземпляр проекта неизменяемым.</span><span class="sxs-lookup"><span data-stu-id="1c06b-321">Gets a value that indicates whether the project instance is immutable.</span></span> <span data-ttu-id="1c06b-322">Этот флаг задан постоянно, когда создается экземпляр.</span><span class="sxs-lookup"><span data-stu-id="1c06b-322">This flag is set permanently when the instance is created.</span></span></summary>
        <value><span data-ttu-id="1c06b-323"><see langword="true" />, если экземпляр проекта является неизменяемым; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1c06b-323"><see langword="true" /> if the project instance is immutable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt; ItemDefinitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt; ItemDefinitions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ItemDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemDefinitions As IDictionary(Of String, ProjectItemDefinitionInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectItemDefinitionInstance ^&gt; ^ ItemDefinitions { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectItemDefinitionInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemDefinitions : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.ItemDefinitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1c06b-324">Получает словарь определений элементов проекта, предназначенный только для чтения, ключом которого является тип элемента.</span><span class="sxs-lookup"><span data-stu-id="1c06b-324">Gets a read-only dictionary of the item definitions in the project, keyed by item type.</span></span></summary>
        <value><span data-ttu-id="1c06b-325">Словарь только для чтения определений элементов в проекте, ключом которого является тип элемента.</span><span class="sxs-lookup"><span data-stu-id="1c06b-325">A read-only dictionary of the item definitions in the project, keyed by item type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ICollection(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ Items { System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1c06b-326">Получает все элементы в этом проекте.</span><span class="sxs-lookup"><span data-stu-id="1c06b-326">Gets all items in this project.</span></span></summary>
        <value><span data-ttu-id="1c06b-327">Все элементы в этом проекте.</span><span class="sxs-lookup"><span data-stu-id="1c06b-327">All items in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; ItemTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; ItemTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ItemTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemTypes As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ ItemTypes { System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemTypes : System.Collections.Generic.ICollection&lt;string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.ItemTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1c06b-328">Получает все типы элементов в этом проекте.</span><span class="sxs-lookup"><span data-stu-id="1c06b-328">Gets all item types in this project.</span></span></summary>
        <value><span data-ttu-id="1c06b-329">Все типы элементов в этом проекте.</span><span class="sxs-lookup"><span data-stu-id="1c06b-329">All item types in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectFileLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ProjectFileLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ProjectFileLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectFileLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ProjectFileLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectFileLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1c06b-330">Получает расположение самого исходного файла.</span><span class="sxs-lookup"><span data-stu-id="1c06b-330">Gets the location of the originating file itself.</span></span> <span data-ttu-id="1c06b-331">Никогда не равно NULL.</span><span class="sxs-lookup"><span data-stu-id="1c06b-331">Never null.</span></span></summary>
        <value><span data-ttu-id="1c06b-332">Расположение исходного файла.</span><span class="sxs-lookup"><span data-stu-id="1c06b-332">The location of the originating file.</span></span> <span data-ttu-id="1c06b-333">Никогда не возвращает <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1c06b-333">Never returns <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectPropertyInstance&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As ICollection(Of ProjectPropertyInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectPropertyInstance ^&gt; ^ Properties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectPropertyInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1c06b-334">Получает все свойства в этом проекте.</span><span class="sxs-lookup"><span data-stu-id="1c06b-334">Gets all properties in this project.</span></span></summary>
        <value><span data-ttu-id="1c06b-335">Все свойства в этом проекте.</span><span class="sxs-lookup"><span data-stu-id="1c06b-335">All properties in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public bool RemoveItem (Microsoft.Build.Execution.ProjectItemInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveItem(class Microsoft.Build.Execution.ProjectItemInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.RemoveItem(Microsoft.Build.Execution.ProjectItemInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveItem (item As ProjectItemInstance) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveItem(Microsoft::Build::Execution::ProjectItemInstance ^ item);" />
      <MemberSignature Language="F#" Value="member this.RemoveItem : Microsoft.Build.Execution.ProjectItemInstance -&gt; bool" Usage="projectInstance.RemoveItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="1c06b-336">Удаляемый элемент.</span><span class="sxs-lookup"><span data-stu-id="1c06b-336">The item to be removed.</span></span></param>
        <summary><span data-ttu-id="1c06b-337">При наличии элемента удаляет его из проекта.</span><span class="sxs-lookup"><span data-stu-id="1c06b-337">Removes an item from the project, if present.</span></span> <span data-ttu-id="1c06b-338">Возвращает значение true при наличии элемента; в противном случае — значение false.</span><span class="sxs-lookup"><span data-stu-id="1c06b-338">Returns true if it was present, false otherwise.</span></span></summary>
        <returns><span data-ttu-id="1c06b-339">Значение <see langword="true" />, если элемент присутствовал до удаления; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1c06b-339"><see langword="true" /> if the item was present before removal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.RemoveProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveProperty (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RemoveProperty : string -&gt; bool" Usage="projectInstance.RemoveProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1c06b-340">Имя свойства для удаления.</span><span class="sxs-lookup"><span data-stu-id="1c06b-340">The name of the property to be removed.</span></span></param>
        <summary><span data-ttu-id="1c06b-341">Удаляет свойство с заданным именем.</span><span class="sxs-lookup"><span data-stu-id="1c06b-341">Removes a property with the given name.</span></span> <span data-ttu-id="1c06b-342">Возвращает значение true, если свойство имело значение (возможно пустую строку); в противном случае — значение false.</span><span class="sxs-lookup"><span data-stu-id="1c06b-342">Returns true if the property had a value (possibly empty string), otherwise false.</span></span></summary>
        <returns><span data-ttu-id="1c06b-343">Значение <see langword="true" />, если свойство имело значение (возможно пустую строку) до удаления; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1c06b-343"><see langword="true" /> if the property had a value (possibly an empty string) before removal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectPropertyInstance SetProperty (string name, string evaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectPropertyInstance SetProperty(string name, string evaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.SetProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetProperty (name As String, evaluatedValue As String) As ProjectPropertyInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectPropertyInstance ^ SetProperty(System::String ^ name, System::String ^ evaluatedValue);" />
      <MemberSignature Language="F#" Value="member this.SetProperty : string * string -&gt; Microsoft.Build.Execution.ProjectPropertyInstance" Usage="projectInstance.SetProperty (name, evaluatedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectPropertyInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="evaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1c06b-344">Имя добавляемого свойства.</span><span class="sxs-lookup"><span data-stu-id="1c06b-344">The name of the property to add.</span></span></param>
        <param name="evaluatedValue"><span data-ttu-id="1c06b-345">Вычисленное значение добавляемого свойства.</span><span class="sxs-lookup"><span data-stu-id="1c06b-345">The evaluated value of the property to add.</span></span></param>
        <summary><span data-ttu-id="1c06b-346">Добавить в проект свойство с указанными именем и значением.</span><span class="sxs-lookup"><span data-stu-id="1c06b-346">Add a property with the specified name and value to the project.</span></span> <span data-ttu-id="1c06b-347">Перезаписывает свойство с таким же именем, которое уже существует в коллекции свойств.</span><span class="sxs-lookup"><span data-stu-id="1c06b-347">Overwrites any property with the same name already in the property collection.</span></span></summary>
        <returns><span data-ttu-id="1c06b-348">Новое свойство.</span><span class="sxs-lookup"><span data-stu-id="1c06b-348">The new property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c06b-349">Мы не принимаем Прожектпропертинстанце, чтобы убедиться, что у нас еще нет того, который уже используется другим Прожектпропертинстанце.</span><span class="sxs-lookup"><span data-stu-id="1c06b-349">We don't take a ProjectPropertyInstance to make sure we don't have one that's already in use by another ProjectPropertyInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Targets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Targets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Targets As IDictionary(Of String, ProjectTargetInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ Targets { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Targets : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Execution.ProjectTargetInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.Targets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectTargetInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1c06b-350">Получает перечислитель по всем целевым объектам в данном проекте.</span><span class="sxs-lookup"><span data-stu-id="1c06b-350">Gets an enumerator over all targets in this project.</span></span> <span data-ttu-id="1c06b-351">Эта коллекция доступна только для чтения.</span><span class="sxs-lookup"><span data-stu-id="1c06b-351">This collection is read-only.</span></span></summary>
        <value><span data-ttu-id="1c06b-352">Перечислитель по всем целевым объектам в этом проекте.</span><span class="sxs-lookup"><span data-stu-id="1c06b-352">An enumerator over all targets in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolsVersion">
      <MemberSignature Language="C#" Value="public string ToolsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolsVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ToolsVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolsVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolsVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToolsVersion : string" Usage="Microsoft.Build.Execution.ProjectInstance.ToolsVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1c06b-353">Получает версию инструментов, использованную для оценки проекта, если таковая имеется.</span><span class="sxs-lookup"><span data-stu-id="1c06b-353">Gets the tools version this project was evaluated with, if any.</span></span></summary>
        <value><span data-ttu-id="1c06b-354">Версия инструментов, с которой был оценен этот проект, если таковой имеется.</span><span class="sxs-lookup"><span data-stu-id="1c06b-354">The tools version this project was evaluated with, if any.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c06b-355">Результат не обязательно совпадает с версией инструментов в теге проекта, если таковая имеется; возможно, он был определен извне, например с помощью параметра/ТВ.</span><span class="sxs-lookup"><span data-stu-id="1c06b-355">The result is not necessarily the same as the tools version on the Project tag, if any; it may have been externally specified, for example with a /tv switch.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToProjectRootElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectRootElement ToProjectRootElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectRootElement ToProjectRootElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement" />
      <MemberSignature Language="VB.NET" Value="Public Function ToProjectRootElement () As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectRootElement ^ ToProjectRootElement();" />
      <MemberSignature Language="F#" Value="member this.ToProjectRootElement : unit -&gt; Microsoft.Build.Construction.ProjectRootElement" Usage="projectInstance.ToProjectRootElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1c06b-356">Создает ProjectRootElement из содержимого данного ProjectInstance.</span><span class="sxs-lookup"><span data-stu-id="1c06b-356">Creates a ProjectRootElement from the contents of this ProjectInstance.</span></span></summary>
        <returns><span data-ttu-id="1c06b-357">ProjectRootElement, представляющий данный экземпляр.</span><span class="sxs-lookup"><span data-stu-id="1c06b-357">A ProjectRootElement which represents this instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateStateFrom">
      <MemberSignature Language="C#" Value="public void UpdateStateFrom (Microsoft.Build.Execution.ProjectInstance projectState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateStateFrom(class Microsoft.Build.Execution.ProjectInstance projectState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom(Microsoft.Build.Execution.ProjectInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateStateFrom (projectState As ProjectInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateStateFrom(Microsoft::Build::Execution::ProjectInstance ^ projectState);" />
      <MemberSignature Language="F#" Value="member this.UpdateStateFrom : Microsoft.Build.Execution.ProjectInstance -&gt; unit" Usage="projectInstance.UpdateStateFrom projectState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectState" Type="Microsoft.Build.Execution.ProjectInstance" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="projectState"><span data-ttu-id="1c06b-358"><see langword="ProjectInstance" />, из которого выполняется обновление.</span><span class="sxs-lookup"><span data-stu-id="1c06b-358">The <see langword="ProjectInstance" /> to update from.</span></span></param>
        <summary><span data-ttu-id="1c06b-359">Заменяет состояния проекта <see cref="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />, <see cref="P:Microsoft.Build.Execution.ProjectInstance.Properties" /> и <see cref="P:Microsoft.Build.Execution.ProjectInstance.Items" /> состояниями из указанного <see cref="T:Microsoft.Build.Execution.ProjectInstance" />.</span><span class="sxs-lookup"><span data-stu-id="1c06b-359">Replaces the project state <see cref="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />, <see cref="P:Microsoft.Build.Execution.ProjectInstance.Properties" /> and <see cref="P:Microsoft.Build.Execution.ProjectInstance.Items" /> with those from the specified <see cref="T:Microsoft.Build.Execution.ProjectInstance" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
