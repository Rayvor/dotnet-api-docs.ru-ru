<Type Name="Peer" FullName="System.Net.PeerToPeer.Collaboration.Peer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="47d0689dba4cbe87daf58645f6ac1bae227ccbde" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70645496" /></Metadata><TypeSignature Language="C#" Value="public abstract class Peer : IDisposable, IEquatable&lt;System.Net.PeerToPeer.Collaboration.Peer&gt;, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Peer extends System.Object implements class System.IDisposable, class System.IEquatable`1&lt;class System.Net.PeerToPeer.Collaboration.Peer&gt;, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.Collaboration.Peer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Peer&#xA;Implements IDisposable, IEquatable(Of Peer), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Peer abstract : IDisposable, IEquatable&lt;System::Net::PeerToPeer::Collaboration::Peer ^&gt;, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type Peer = class&#xA;    interface IDisposable&#xA;    interface IEquatable&lt;Peer&gt;&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Net.PeerToPeer.Collaboration.Peer&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Этот класс представляет удаленный одноранговый узел.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Целью абстрактного <xref:System.Net.PeerToPeer.Collaboration.Peer> класса является предоставление общего определения базового класса, которое может совместно использоваться производными классами, такими как <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> и <xref:System.Net.PeerToPeer.Collaboration.PeerContact>. Он не может быть создан напрямую, так как он является абстрактным. Вместо этого разработчики должны использовать подклассы PeerNearMe или Пирконтакт.  
  
 Контакт, одноранговый, удаленный <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>одноранговый <xref:System.Net.PeerToPeer.Collaboration.PeerContact> , <xref:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact%2A>, и являются синонимами терминов на основе контекста.  
  
 "Вызов одноранговых узлов и удаленных узлов" обычно являются синонимами.  Вызывающий узел не ссылается на приложение, вызывающее данный метод.  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=94462">Обработка и вызов событий</related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink?LinkID=92916">Справочник по API адресной книги Windows</related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink?LinkID=92964">Диспетчер контактов Windows</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Peer (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Peer(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.Collaboration.Peer : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.PeerToPeer.Collaboration.Peer" Usage="new System.Net.PeerToPeer.Collaboration.Peer (serializationInfo, streamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">Ссылка на объект, содержащий данные, необходимые для десериализации экземпляра.</param>
        <param name="streamingContext">Контекст, который предоставляет средства для десериализации данных. Также называется источником сериализованных данных.</param>
        <summary>Выполняет инициализацию нового экземпляра типа <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возвращает объект типа <xref:System.Net.PeerToPeer.Collaboration.Peer> , подклассом <xref:System.Net.PeerToPeer.Collaboration.PeerContact> которого является или <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>. Пирконтакт <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A> или PeerNearMe <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname%2A> содержат уникальные ссылки на имя нового однорангового объекта.  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Runtime" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Освобождает ресурсы, используемые объектом <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="peer.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Освобождает все ресурсы, используемые объектом <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="peer.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Задайте значение <see langword="true" /> для освобождения управляемых и неуправляемых ресурсов; значение <see langword="false" /> для освобождения только неуправляемых ресурсов.</param>
        <summary>Освобождает неуправляемые (а при необходимости и управляемые) ресурсы, используемые объектом <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Net.PeerToPeer.Collaboration.Peer other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Net.PeerToPeer.Collaboration.Peer other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.Equals(System.Net.PeerToPeer.Collaboration.Peer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Peer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Net::PeerToPeer::Collaboration::Peer ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Net.PeerToPeer.Collaboration.Peer -&gt; bool" Usage="peer.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Net.PeerToPeer.Collaboration.Peer" />
      </Parameters>
      <Docs>
        <param name="other">Экземпляр класса <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />, сравниваемый с данным экземпляром.</param>
        <summary>Выполняет сравнение текущего объекта <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> с указанным одноранговым узелом, учитывая регистр символов.</summary>
        <returns>Значение <see langword="true" />, если указанный экземпляр <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> содержит такой же объект <see cref="P:System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints" />, что и этот экземпляр однорангового узла; иначе — значение <see langword="false" />. Этот метод также возвращает значение <see langword="false" />, если параметр однорангового узла равен пустой ссылке (<see langword="null" />).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Два одноранговых узла считаются равными, если они имеют одну и ту же коллекцию конечных точек, <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A> независимо от значений в их свойствах. Сценарии использования не затрагивают этот класс напрямую, а являются производными <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> <xref:System.Net.PeerToPeer.Collaboration.PeerContact> или классами.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.ToString" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peer.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> для заполнения данными.</param>
        <param name="context">Целевой объект этой сериализации.</param>
        <summary>Заполняет объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> данными, необходимыми для сериализации целевого объекта <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.Runtime.Serialization" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObjects">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает из локального кэша коллекцию объектов данных, зарегистрированных одноранговым узелом.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта функция доступна только для <xref:System.Net.PeerToPeer.Collaboration.PeerContact> класса.  Эта функция не предоставляется ни на одном другом типе одноранговых узлов по соображениям безопасности.  
  
 Если для конечной точки не найдены объекты, возвращается коллекция нулевого размера (0).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObjects">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjects () As PeerObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerObjectCollection ^ GetObjects();" />
      <MemberSignature Language="F#" Value="member this.GetObjects : unit -&gt; System.Net.PeerToPeer.Collaboration.PeerObjectCollection" Usage="peer.GetObjects " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает коллекцию объектов данных из локального кэша.</summary>
        <returns>Коллекция объектов <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> для однорангового узла или конечной точки, заданной этим экземпляром.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта функция доступна только для <xref:System.Net.PeerToPeer.Collaboration.PeerContact> класса.  Эта функция не предоставляется ни на одном другом типе одноранговых узлов по соображениям безопасности.  
  
 Если в сеансе совместной работы однорангового узла <xref:System.Security.Permissions.PermissionState> не <xref:System.Security.Permissions.PermissionState.Unrestricted>был создан экземпляр с, этот метод не может получить доступ к объектам на локальном компьютере.  То же самое справедливо и для приложений, зарегистрированных в сеансе совместной работы.  
  
 Коллекция одноранговых объектов состоит из приложения, объекта данных и сведений о присутствии для одноранговой или конечной точки, указанной в этом экземпляре. Если для конечной точки не найдены объекты, возвращается коллекция нулевого размера (0). Если вызывающий одноранговый узел подписан на эту конечную точку, кэш обновляется автоматически; в <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> противном случае перед вызовом этого метода необходимо вызвать метод.  
  
 Для успешного выполнения этого метода вызывающему объекту не требуется входить в инфраструктуру совместной работы.  Успешный вызов <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> или один <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> из методов должен быть завершен, пока вызывающий объект вошел в предыдущую версию для вызова этого метода.  
  
 Примечание. Дополнительные перегрузки определяются в <xref:System.Net.PeerToPeer.Collaboration.Peer> классе вместо <xref:System.Net.PeerToPeer.Collaboration.PeerContact> подклассов и <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Вызывающий узел не подписан на конечную точку или еще не выполнял вызов метода <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Не удается завершить работу метода из-за ошибки в инфраструктуре совместной работы в одноранговой сети.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(System.Object)" />
        <altmember cref="T:System.Net.Cache.RequestCachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="GetObjects">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects (Guid objectId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects(valuetype System.Guid objectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjects (objectId As Guid) As PeerObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerObjectCollection ^ GetObjects(Guid objectId);" />
      <MemberSignature Language="F#" Value="member this.GetObjects : Guid -&gt; System.Net.PeerToPeer.Collaboration.PeerObjectCollection" Usage="peer.GetObjects objectId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="objectId">Идентификатор <see cref="T:System.Guid" /> объекта <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />, который требуется извлечь из коллекции.</param>
        <summary>Возвращает объект <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />, связанный с заданным идентификатором <see cref="T:System.Guid" />, из коллекции <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" />.</summary>
        <returns>Объект <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />, связанный с заданным идентификатором <see cref="T:System.Guid" />. Если объект не найден, возвращается коллекция размера нуль (0) записей.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта функция доступна только для <xref:System.Net.PeerToPeer.Collaboration.PeerContact> класса. Эта функция не предоставляется ни на одном другом типе одноранговых узлов по соображениям безопасности.  
  
 Коллекция одноранговых объектов состоит из приложения, объекта данных и сведений о присутствии для одноранговой или конечной точки, указанной в этом экземпляре. Если для конечной точки не найдены объекты, возвращается коллекция нулевого размера (0). Когда вызывающий одноранговый узел подписывается на эту конечную точку, кэш обновляется автоматически; в <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> противном случае перед вызовом этого метода необходимо вызвать метод.  
  
 Для успешного выполнения этого метода вызывающему объекту не требуется входить в инфраструктуру совместной работы.  Успешный вызов <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> или один <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> из методов должен быть завершен, пока вызывающий объект вошел в предыдущую версию для вызова этого метода. <xref:System.Security.Permissions.PermissionState> Для <xref:System.Security.Permissions.PermissionState.Unrestricted> вызова этого метода требуется объект. Это состояние создается при начале сеанса совместной работы.  
  
 Примечание. Дополнительные перегрузки определяются в <xref:System.Net.PeerToPeer.Collaboration.Peer> классе, а не в производных классах <xref:System.Net.PeerToPeer.Collaboration.PeerContact> и <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Идентификатор объекта равен пустой ссылке (<see langword="null" />).</exception>
        <exception cref="T:System.InvalidOperationException">Вызывающий узел не подписан на объект <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> или еще не вызывал для конечной точки метод <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Произошла ошибка при получении от однорангового узла сведений об объекте.</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="T:System.Guid" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshDataAsync(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetPresenceInfo">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerPresenceInfo GetPresenceInfo (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerPresenceInfo GetPresenceInfo(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.GetPresenceInfo(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerPresenceInfo ^ GetPresenceInfo(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint);" />
      <MemberSignature Language="F#" Value="member this.GetPresenceInfo : System.Net.PeerToPeer.Collaboration.PeerEndPoint -&gt; System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" Usage="peer.GetPresenceInfo peerEndPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerPresenceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">Объект <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />, для которого извлекается информация о присутствии.</param>
        <summary>Возвращает доступные сведения о присутствии для объекта <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</summary>
        <returns>Объект <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" />, содержащий сведения о присутствии для доступной конечной точки, если эти сведения доступны; иначе — значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Сведения о присутствии включают в себя дескрипторы состояния, такие как "в сети", "вне сети" и вне.  
  
 <xref:System.Security.Permissions.PermissionState> Для <xref:System.Security.Permissions.PermissionState.Unrestricted> вызова этого метода требуется объект.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="peerEndPoint" /> не содержит допустимой конечной точки.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="peerEndPoint" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Данный объект был удален и не может использоваться в текущих операциях одноранговой сети.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Произошла ошибка при получении сведений о присутствии от однорангового узла.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Invite">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Отправляет приглашение одноранговому узлу <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> на запуск определенного приложения <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public abstract System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.Invite" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Invite () As PeerInvitationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite();" />
      <MemberSignature Language="F#" Value="abstract member Invite : unit -&gt; System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" Usage="peer.Invite " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Отправляет приглашение одноранговому узлу <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> на запуск определенного приложения <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />.</summary>
        <returns>Объект ответа на приглашение <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> от получившего приглашение однорангового узла.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Permissions.PermissionState> Для <xref:System.Security.Permissions.PermissionState.Unrestricted> вызова этого метода требуется объект. Это состояние создается при начале сеанса совместной работы в одноранговой сети.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">– Во время процесса приглашения произошла ошибка.  
  
– Приложение, которое сейчас выполняет работу, не зарегистрировано в инфраструктуре одноранговой совместной работы.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public abstract System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite(class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, unsigned int8[] invitationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Invite (applicationToInvite As PeerApplication, message As String, invitationData As Byte()) As PeerInvitationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite(System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData);" />
      <MemberSignature Language="F#" Value="abstract member Invite : System.Net.PeerToPeer.Collaboration.PeerApplication * string * byte[] -&gt; System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" Usage="peer.Invite (applicationToInvite, message, invitationData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="applicationToInvite"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />, для которого отправлено приглашение.</param>
        <param name="message">Сообщение, отправляемое на удаленный узел вместе с приглашением для приложения.  Длина сообщения не должна превышать 255 символов Юникода.</param>
        <param name="invitationData">Определяемый пользователем большой двоичный объект данных, который связывается с приглашением.  Его размер не может превышать 16 384 байт.</param>
        <summary>Отправляет приглашение одноранговому узлу <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> на запуск определенного приложения <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />.</summary>
        <returns>Объект ответа на приглашение <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> от получившего приглашение однорангового узла.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Permissions.PermissionState> Для <xref:System.Security.Permissions.PermissionState.Unrestricted> вызова этого метода требуется объект. Это состояние создается при начале сеанса совместной работы в одноранговой сети.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Приложение не зарегистрировано для совместной работы.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="invitationData" /> превышает 16 384 байт.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">– Во время процесса приглашения произошла ошибка.  
  
– Приложение, которое сейчас выполняет работу, не зарегистрировано в инфраструктуре одноранговой совместной работы.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InviteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Начинает асинхронную операцию приглашения, которая отправляет <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> приглашение запустить конкретное приложение <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />.</summary>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs" />
      </Docs>
    </MemberGroup>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public abstract void InviteAsync (object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InviteAsync(object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub InviteAsync (userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void InviteAsync(System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="abstract member InviteAsync : obj -&gt; unit" Usage="peer.InviteAsync userToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userToken">Определяемый пользователем объект, передаваемый для обратного вызова асинхронной операции идентификации. Этот обязательный параметр должен быть уникальным для всех выполняемых асинхронных операций приглашения.</param>
        <summary>Начинает асинхронную операцию приглашения, которая отправляет <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> приглашение запустить конкретное приложение <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Permissions.PermissionState> Для <xref:System.Security.Permissions.PermissionState.Unrestricted> вызова этого метода требуется объект. Это состояние создается при начале сеанса совместной работы в одноранговой сети.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="userToken" /> равно <see langword="null." /></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">– Во время процесса приглашения произошла ошибка.  
  
– Приложение, которое сейчас выполняет работу, не зарегистрировано в инфраструктуре совместной работы.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public abstract void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InviteAsync(class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, unsigned int8[] invitationData, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub InviteAsync (applicationToInvite As PeerApplication, message As String, invitationData As Byte(), userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void InviteAsync(System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="abstract member InviteAsync : System.Net.PeerToPeer.Collaboration.PeerApplication * string * byte[] * obj -&gt; unit" Usage="peer.InviteAsync (applicationToInvite, message, invitationData, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="applicationToInvite"><see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />, для которого отправлено приглашение.</param>
        <param name="message">Сообщение, отправляемое на удаленный узел вместе с приглашением для приложения. Максимальный размер сообщения составляет 255 символов Юникода.</param>
        <param name="invitationData">Определяемый пользователем большой двоичный объект данных, который связывается с приглашением.  Его размер не может превышать 16 384 байт.</param>
        <param name="userToken">Определяемый пользователем объект, передаваемый для обратного вызова асинхронной операции идентификации. Этот обязательный параметр должен быть уникальным для всех выполняемых асинхронных операций приглашения.</param>
        <summary>Начинает асинхронную операцию приглашения, которая отправляет <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> приглашение запустить конкретное приложение <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Permissions.PermissionState> Для <xref:System.Security.Permissions.PermissionState.Unrestricted> вызова этого метода требуется объект. Это состояние создается при начале сеанса совместной работы в одноранговой сети.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Приложение не зарегистрировано в инфраструктуре совместной работы.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="userToken" /> равно <see langword="null." /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение <paramref name="invitationData" /> превышает 16 384 байт.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">– Во время процесса приглашения произошла ошибка.  
  
– Приложение, которое сейчас выполняет работу, не зарегистрировано в инфраструктуре совместной работы.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="InviteAsyncCancel">
      <MemberSignature Language="C#" Value="public void InviteAsyncCancel (object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InviteAsyncCancel(object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InviteAsyncCancel (userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InviteAsyncCancel(System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="member this.InviteAsyncCancel : obj -&gt; unit" Usage="peer.InviteAsyncCancel userToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userToken">Определяемый пользователем объект, передаваемый для обратного вызова операции <see cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" /> для идентификации. Этот обязательный параметр должен быть уникальным для всех выполняемых асинхронных операций приглашения.</param>
        <summary>Отменяет приглашение, отправленное с помощью метода <see cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов этого метода гарантирует, что система прекратит ожидание <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> от узла, связанного с запросом инвитеасинк.  
  
 Несколько приглашений могут быть недоступными в любое заданное время.  Если метод вызывается, когда асинхронная операция, определенная `userToken` с помощью, не существует, возникает исключение. <xref:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel%2A> Объект `userToken` должен быть предоставлен, так как он используется для наблюдения за конкретным асинхронным вызовом. Этот объект, предоставляемый ведущим приложением, уникален для каждого запроса приглашения.  
  
 При использовании <xref:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted> этого метода событие по-прежнему может быть вызвано, но свойство отменено для связанного <xref:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs> объекта будет иметь значение`true.`  
  
 <xref:System.Security.Permissions.PermissionState> Для <xref:System.Security.Permissions.PermissionState.Unrestricted> вызова этого метода требуется объект.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="userToken" /> не может иметь значение <see langword="null." />.</exception>
        <exception cref="T:System.InvalidOperationException">Асинхронное приглашение не ожидает выполнения.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.Invite" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs.InviteResponse" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponseType" />
      </Docs>
    </Member>
    <Member MemberName="InviteCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs&gt; InviteCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs&gt; InviteCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InviteCompleted As EventHandler(Of InviteCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::InviteCompletedEventArgs ^&gt; ^ InviteCompleted;" />
      <MemberSignature Language="F#" Value="member this.InviteCompleted : EventHandler&lt;System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs&gt; " Usage="member this.InviteCompleted : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Вызывается при завершении процесса приглашения удаленного однорангового узла.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> Указывает результат операции приглашения.  
  
 <xref:System.Security.Permissions.PermissionState> Для <xref:System.Security.Permissions.PermissionState.Unrestricted> вызова этого метода требуется объект.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> удален.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="IsOnline">
      <MemberSignature Language="C#" Value="public bool IsOnline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOnline" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.Peer.IsOnline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOnline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOnline { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOnline : bool" Usage="System.Net.PeerToPeer.Collaboration.Peer.IsOnline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, определяющее, находится ли одноранговый узел <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> в сети в текущий момент.</summary>
        <value><see langword="true" />значение , <see langword="false" /> если находится в сети в любой из связанных с ней конечных точек; в противном случае —. <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />  
  
Если значение свойства не задано, то его значение по умолчанию — <see langword="null" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> был удален.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInviteCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnInviteCompleted (System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInviteCompleted(class System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInviteCompleted (e As InviteCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInviteCompleted(System::Net::PeerToPeer::Collaboration::InviteCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInviteCompleted : System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs -&gt; unit&#xA;override this.OnInviteCompleted : System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs -&gt; unit" Usage="peer.OnInviteCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" />, содержащий данные события, который нужно передать делегатам, связанным с событием <see cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />.</param>
        <summary>Создает событие <see cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы, наследующие от этого класса, могут переопределять этот метод для выполнения дополнительных <xref:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted> задач при возникновении события.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.Invite" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="PeerEndPoints">
      <MemberSignature Language="C#" Value="public virtual System.Net.PeerToPeer.Collaboration.PeerEndPointCollection PeerEndPoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Collaboration.PeerEndPointCollection PeerEndPoints" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PeerEndPoints As PeerEndPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::PeerToPeer::Collaboration::PeerEndPointCollection ^ PeerEndPoints { System::Net::PeerToPeer::Collaboration::PeerEndPointCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PeerEndPoints : System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" Usage="System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает ключ <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" />, ассоциированный с экземпляром <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />.</summary>
        <value>Объект <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" />, связанный с объектом <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если удаленный одноранговый узел является посредником для однорангового узла, <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> объекты, содержащиеся в <xref:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection> , связываются с локальными контактами для удаленного однорангового узла.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Объект <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> был удален.</exception>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizingObject : System.ComponentModel.ISynchronizeInvoke with get, set" Usage="System.Net.PeerToPeer.Collaboration.Peer.SynchronizingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Description("SynchronizingObject")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Если задано значение этого свойства, со всеми событиями, не просигналившими в результате асинхронной операции, будут связаны обработчики событий, осуществляющие обратный вызов в потоке, создавшем конкретный объект <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject" />.</summary>
        <value>Объект, реализующий интерфейс <see cref="T:System.ComponentModel.ISynchronizeInvoke" />, используемый экземплярами этого типа для синхронизации обработчиков событий в создавшем его потоке.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию для этого свойства `null`устанавливается значение, указывающее, что все обработчики событий вызываются в потоке пула системных потоков.  
  
 Обычно этому свойству присваивается элемент пользовательского интерфейса, например <xref:System.Windows.Forms.Form> экземпляр.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Вызывающий объект был удален.</exception>
        <altmember cref="T:System.Windows.Forms.Form" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" /> для заполнения данными.</param>
        <param name="context">Целевой объект для сериализации.</param>
        <summary>Заполняет экземпляр класса <see cref="T:System.Runtime.Serialization.SerializationInfo" /> данными, необходимыми для сериализации указанного экземпляра <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />. Производный тип должен вызывать метод <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> базового типа.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.GetObjects" />
        <altmember cref="N:System.Runtime.Serialization" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.Peer.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="peer.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает объект <see cref="T:System.String" />, представляющий объект имени однорангового узла <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />, связанный с объектом <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" />.</summary>
        <returns>Объект <see cref="T:System.String" />, представляющий свойство <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
      </Docs>
    </Member>
  </Members>
</Type>
