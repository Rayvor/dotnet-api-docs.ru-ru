<Type Name="WaitHandleCannotBeOpenedException" FullName="System.Threading.WaitHandleCannotBeOpenedException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f40581d43ed90d869d9a03b8a6d0eb9185511e74" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69143676" /></Metadata><TypeSignature Language="C#" Value="public class WaitHandleCannotBeOpenedException : ApplicationException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit WaitHandleCannotBeOpenedException extends System.ApplicationException" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitHandleCannotBeOpenedException" />
  <TypeSignature Language="VB.NET" Value="Public Class WaitHandleCannotBeOpenedException&#xA;Inherits ApplicationException" />
  <TypeSignature Language="C++ CLI" Value="public ref class WaitHandleCannotBeOpenedException : ApplicationException" />
  <TypeSignature Language="F#" Value="type WaitHandleCannotBeOpenedException = class&#xA;    inherit ApplicationException" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.ApplicationException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a85b3-101">Исключение, которое возникает при попытке открыть несуществующий системный семафор или дескриптор ожидания события.</span><span class="sxs-lookup"><span data-stu-id="a85b3-101">The exception that is thrown when an attempt is made to open a system mutex, semaphore, or event wait handle that does not exist.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a85b3-102">Экземпляры классов <xref:System.Threading.Mutex>, <xref:System.Threading.Semaphore> и<xref:System.Threading.EventWaitHandle> могут представлять именованные системные объекты синхронизации.</span><span class="sxs-lookup"><span data-stu-id="a85b3-102">Instances of the <xref:System.Threading.Mutex>, <xref:System.Threading.Semaphore>, and  <xref:System.Threading.EventWaitHandle> classes can represent named system synchronization objects.</span></span> <span data-ttu-id="a85b3-103">При использовании <xref:System.Threading.Mutex.OpenExisting%2A?displayProperty=nameWithType> метода <xref:System.Threading.Semaphore.OpenExisting%2A?displayProperty=nameWithType> , метода или <xref:System.Threading.EventWaitHandle.OpenExisting%2A?displayProperty=nameWithType> метода для открытия именованного <xref:System.Threading.WaitHandleCannotBeOpenedException> системного объекта, который не существует, возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="a85b3-103">When you use the <xref:System.Threading.Mutex.OpenExisting%2A?displayProperty=nameWithType> method, the <xref:System.Threading.Semaphore.OpenExisting%2A?displayProperty=nameWithType> method, or the  <xref:System.Threading.EventWaitHandle.OpenExisting%2A?displayProperty=nameWithType> method to open a named system object that does not exist, a <xref:System.Threading.WaitHandleCannotBeOpenedException> exception is thrown.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Threading.Mutex.OpenExisting(System.String)" />
    <altmember cref="M:System.Threading.Semaphore.OpenExisting(System.String)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a85b3-104">Инициализирует новый экземпляр класса <see cref="T:System.Threading.WaitHandleCannotBeOpenedException" />.</span><span class="sxs-lookup"><span data-stu-id="a85b3-104">Initializes a new instance of the <see cref="T:System.Threading.WaitHandleCannotBeOpenedException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WaitHandleCannotBeOpenedException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandleCannotBeOpenedException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WaitHandleCannotBeOpenedException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a85b3-105">Инициализирует новый экземпляр класса <see cref="T:System.Threading.WaitHandleCannotBeOpenedException" /> со значениями по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="a85b3-105">Initializes a new instance of the <see cref="T:System.Threading.WaitHandleCannotBeOpenedException" /> class with default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a85b3-106">Этот конструктор инициализирует <xref:System.Exception.Message%2A> свойство нового экземпляра, сопоставляя с ним системное сообщение, описывающее ошибку, например "не существует маркера с данным именем".</span><span class="sxs-lookup"><span data-stu-id="a85b3-106">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "No handle of the given name exists."</span></span> <span data-ttu-id="a85b3-107">Это сообщение учитывает текущую культуру системы.</span><span class="sxs-lookup"><span data-stu-id="a85b3-107">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="a85b3-108">В следующей таблице представлены исходные значения свойств экземпляра класса <xref:System.Threading.WaitHandleCannotBeOpenedException>.</span><span class="sxs-lookup"><span data-stu-id="a85b3-108">The following table shows the initial property values for an instance of <xref:System.Threading.WaitHandleCannotBeOpenedException>.</span></span>  
  
|<span data-ttu-id="a85b3-109">Свойство.</span><span class="sxs-lookup"><span data-stu-id="a85b3-109">Property</span></span>|<span data-ttu-id="a85b3-110">Значение</span><span class="sxs-lookup"><span data-stu-id="a85b3-110">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="a85b3-111">`null`.</span><span class="sxs-lookup"><span data-stu-id="a85b3-111">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="a85b3-112">Строка сообщения об ошибке, предоставляемая системой.</span><span class="sxs-lookup"><span data-stu-id="a85b3-112">The system-supplied error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WaitHandleCannotBeOpenedException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandleCannotBeOpenedException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WaitHandleCannotBeOpenedException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Threading.WaitHandleCannotBeOpenedException : string -&gt; System.Threading.WaitHandleCannotBeOpenedException" Usage="new System.Threading.WaitHandleCannotBeOpenedException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="a85b3-113">Сообщение об ошибке, указывающее причину создания исключения.</span><span class="sxs-lookup"><span data-stu-id="a85b3-113">The error message that explains the reason for the exception.</span></span></param>
        <summary><span data-ttu-id="a85b3-114">Инициализирует новый экземпляр класса <see cref="T:System.Threading.WaitHandleCannotBeOpenedException" /> с указанным сообщением об ошибке.</span><span class="sxs-lookup"><span data-stu-id="a85b3-114">Initializes a new instance of the <see cref="T:System.Threading.WaitHandleCannotBeOpenedException" /> class with a specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a85b3-115">Содержимое параметра `message` должно быть понятным пользователю.</span><span class="sxs-lookup"><span data-stu-id="a85b3-115">The content of `message` is intended to be understood by humans.</span></span> <span data-ttu-id="a85b3-116">Код, вызывающий этот конструктор, должен обеспечить локализацию данной строки в соответствии с текущим языком и региональными параметрами системы.</span><span class="sxs-lookup"><span data-stu-id="a85b3-116">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="a85b3-117">В следующей таблице показаны начальные значения свойств для экземпляра <xref:System.Threading.WaitHandleCannotBeOpenedException> , инициализированного с помощью этого конструктора.</span><span class="sxs-lookup"><span data-stu-id="a85b3-117">The following table shows the initial property values for an instance of <xref:System.Threading.WaitHandleCannotBeOpenedException> initialized with this constructor.</span></span>  
  
|<span data-ttu-id="a85b3-118">Свойство.</span><span class="sxs-lookup"><span data-stu-id="a85b3-118">Property</span></span>|<span data-ttu-id="a85b3-119">Значение</span><span class="sxs-lookup"><span data-stu-id="a85b3-119">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="a85b3-120">`null`.</span><span class="sxs-lookup"><span data-stu-id="a85b3-120">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="a85b3-121">`message`.</span><span class="sxs-lookup"><span data-stu-id="a85b3-121">`message`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WaitHandleCannotBeOpenedException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandleCannotBeOpenedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WaitHandleCannotBeOpenedException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Threading.WaitHandleCannotBeOpenedException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Threading.WaitHandleCannotBeOpenedException" Usage="new System.Threading.WaitHandleCannotBeOpenedException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="a85b3-122">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, содержащий сериализованные данные объекта по возникающему исключению.</span><span class="sxs-lookup"><span data-stu-id="a85b3-122">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception being thrown.</span></span></param>
        <param name="context"><span data-ttu-id="a85b3-123">Объект <see cref="T:System.Runtime.Serialization.StreamingContext" />, содержащий контекстные сведения об источнике или назначении.</span><span class="sxs-lookup"><span data-stu-id="a85b3-123">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="a85b3-124">Инициализирует новый экземпляр класса <see cref="T:System.Threading.WaitHandleCannotBeOpenedException" /> с сериализованными данными.</span><span class="sxs-lookup"><span data-stu-id="a85b3-124">Initializes a new instance of the <see cref="T:System.Threading.WaitHandleCannotBeOpenedException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a85b3-125">Данный конструктор вызывается в процессе десериализации для воссоздания объекта исключения, переданного в потоке.</span><span class="sxs-lookup"><span data-stu-id="a85b3-125">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="a85b3-126">Дополнительные сведения см. в разделе [сериализация XML и SOAP](~/docs/standard/serialization/xml-and-soap-serialization.md).</span><span class="sxs-lookup"><span data-stu-id="a85b3-126">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WaitHandleCannotBeOpenedException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.WaitHandleCannotBeOpenedException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WaitHandleCannotBeOpenedException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Threading.WaitHandleCannotBeOpenedException : string * Exception -&gt; System.Threading.WaitHandleCannotBeOpenedException" Usage="new System.Threading.WaitHandleCannotBeOpenedException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="a85b3-127">Сообщение об ошибке, указывающее причину создания исключения.</span><span class="sxs-lookup"><span data-stu-id="a85b3-127">The error message that explains the reason for the exception.</span></span></param>
        <param name="innerException"><span data-ttu-id="a85b3-128">Исключение, которое является причиной текущего исключения.</span><span class="sxs-lookup"><span data-stu-id="a85b3-128">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="a85b3-129">Если значение параметра <paramref name="innerException" /> не равно <see langword="null" />, текущее исключение сгенерировано в блоке <see langword="catch" />, обрабатывающем внутреннее исключение.</span><span class="sxs-lookup"><span data-stu-id="a85b3-129">If the <paramref name="innerException" /> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="a85b3-130">Инициализирует новый экземпляр класса <see cref="T:System.Threading.WaitHandleCannotBeOpenedException" /> указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение.</span><span class="sxs-lookup"><span data-stu-id="a85b3-130">Initializes a new instance of the <see cref="T:System.Threading.WaitHandleCannotBeOpenedException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a85b3-131">Исключение, созданное как прямой результат предыдущего исключения, должно содержать в свойстве <xref:System.Exception.InnerException%2A> ссылку на предыдущее исключение.</span><span class="sxs-lookup"><span data-stu-id="a85b3-131">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="a85b3-132">Свойство <xref:System.Exception.InnerException%2A> возвращает значение, переданное конструктору, или значение `null`, если свойство <xref:System.Exception.InnerException%2A> не передает конструктору значение внутреннего исключения.</span><span class="sxs-lookup"><span data-stu-id="a85b3-132">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
