<Type Name="TimerCallback" FullName="System.Threading.TimerCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8d60aecbc6dbaf7f0f733d0b721cfb8550d3bff4" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75114997" /></Metadata><TypeSignature Language="C#" Value="public delegate void TimerCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TimerCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.TimerCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub TimerCallback(state As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void TimerCallback(System::Object ^ state);" />
  <TypeSignature Language="F#" Value="type TimerCallback = delegate of obj -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Timer</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;dotnet-uwp-10.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state"><span data-ttu-id="a9140-101">Объект, содержащий информацию о конкретном приложении, существенные для метода, вызванного этим делегатом, или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a9140-101">An object containing application-specific information relevant to the method invoked by this delegate, or <see langword="null" />.</span></span></param>
    <summary><span data-ttu-id="a9140-102">Представляет метод, обрабатывающий вызовы от события <see cref="T:System.Threading.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="a9140-102">Represents the method that handles calls from a <see cref="T:System.Threading.Timer" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9140-103">Используйте `TimerCallback` делегат, чтобы указать метод, вызываемый <xref:System.Threading.Timer>.</span><span class="sxs-lookup"><span data-stu-id="a9140-103">Use a `TimerCallback` delegate to specify the method that is called by a <xref:System.Threading.Timer>.</span></span> <span data-ttu-id="a9140-104">Этот метод не выполняется в потоке, создавшем таймер; он выполняется в отдельном потоке пула потоков, предоставляемом системой.</span><span class="sxs-lookup"><span data-stu-id="a9140-104">This method does not execute in the thread that created the timer; it executes in a separate thread pool thread that is provided by the system.</span></span> <span data-ttu-id="a9140-105">Делегат `TimerCallback` вызывает метод один раз после истечения времени начала, а затем вызывает его один раз для каждого интервала таймера, пока не будет вызван метод <xref:System.Threading.Timer.Dispose%2A> или пока не будет вызван метод <xref:System.Threading.Timer.Change%2A?displayProperty=nameWithType> со значением интервала <xref:System.Threading.Timeout.Infinite>.</span><span class="sxs-lookup"><span data-stu-id="a9140-105">The `TimerCallback` delegate invokes the method once after the start time elapses, and continues to invoke it once per timer interval until the <xref:System.Threading.Timer.Dispose%2A> method is called, or until the <xref:System.Threading.Timer.Change%2A?displayProperty=nameWithType> method is called with the interval value <xref:System.Threading.Timeout.Infinite>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9140-106">Обратные вызовы могут возникать после вызова перегрузки метода <xref:System.Threading.Timer.Dispose>, поскольку таймер помещает обратные вызовы для выполнения потоками пула потоков.</span><span class="sxs-lookup"><span data-stu-id="a9140-106">Callbacks can occur after the <xref:System.Threading.Timer.Dispose> method overload has been called, because the timer queues callbacks for execution by thread pool threads.</span></span> <span data-ttu-id="a9140-107">Можно использовать перегрузку метода <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29>, чтобы дождаться завершения всех обратных вызовов.</span><span class="sxs-lookup"><span data-stu-id="a9140-107">You can use the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload to wait until all callbacks have completed.</span></span>  
  
 <span data-ttu-id="a9140-108">Делегат Timer указывается при создании таймера и не может быть изменен.</span><span class="sxs-lookup"><span data-stu-id="a9140-108">The timer delegate is specified when the timer is constructed, and cannot be changed.</span></span> <span data-ttu-id="a9140-109">Время начала `Timer` передается в параметре `dueTime` конструкторов `Timer`, а точка передается в параметр `period`.</span><span class="sxs-lookup"><span data-stu-id="a9140-109">The start time for a `Timer` is passed in the `dueTime` parameter of the `Timer` constructors, and the period is passed in the `period` parameter.</span></span> <span data-ttu-id="a9140-110">Пример, демонстрирующий создание и использование делегата `TimerCallback`, см. в разделе <xref:System.Threading.Timer?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a9140-110">For an example that demonstrates creating and using a `TimerCallback` delegate, see <xref:System.Threading.Timer?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9140-111">В следующем примере кода показано, как создать делегат, используемый с классом `Timer`.</span><span class="sxs-lookup"><span data-stu-id="a9140-111">The following code example shows how to create the delegate used with the `Timer` class.</span></span>  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Timer" />
    <altmember cref="T:System.Threading.ThreadPool" />
    <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="a9140-112">таймеры</span><span class="sxs-lookup"><span data-stu-id="a9140-112">Timers</span></span></related>
  </Docs>
</Type>
