<Type Name="DataPoint" FullName="System.Web.UI.DataVisualization.Charting.DataPoint">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6ab0e5e71a9048a722be02a2f1a87144e99c6d18" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69095995" /></Metadata><TypeSignature Language="C#" Value="public class DataPoint : System.Web.UI.DataVisualization.Charting.DataPointCustomProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataPoint extends System.Web.UI.DataVisualization.Charting.DataPointCustomProperties" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.DataPoint" />
  <TypeSignature Language="VB.NET" Value="Public Class DataPoint&#xA;Inherits DataPointCustomProperties" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataPoint : System::Web::UI::DataVisualization::Charting::DataPointCustomProperties" />
  <TypeSignature Language="F#" Value="type DataPoint = class&#xA;    inherit DataPointCustomProperties" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataVisualization.Charting.DataPointCustomProperties</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("YValues")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataVisualization.Charting.DataPointConverter, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет точки данных, сохраненные в классе <see cref="T:System.Web.UI.DataVisualization.Charting.DataPointCollection" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.DataPoint> Класс хранит свойства, связанные с данными, а также значения точек данных. Например, точка данных имеет значение, но также имеет свойство Color, свойство Background Image, свойство градиента фона и т. д. Дополнительные сведения о свойствах точек данных см. в <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties> разделе Общие сведения о классах.  
  
 Каждая точка данных состоит из значения X и одного или нескольких значений Y. Значение X может быть равно нулю, или его можно задать явным образом.  
  
 Только одно значение Y для каждой точки требуется для всех типов диаграмм, кроме пузырьковых, японские свечи и стандартных диаграмм. Для этих типов диаграмм требуется более одного значения Y, поскольку одна точка данных состоит из нескольких значений. Например, чтобы построить один столбец на бумаге, требуются четыре значения: высокая, низкая, открытые и закрытые значения.  
  
 Данные могут быть добавлены либо во время разработки, либо во время выполнения. можно также использовать привязку данных во время выполнения.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPoint.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPoint();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор можно использовать для создания и инициализации нового экземпляра <xref:System.Web.UI.DataVisualization.Charting.DataPoint> класса.  
  
 Однако настоятельно рекомендуется вместо этого добавлять точки данных во время выполнения с помощью <xref:System.Web.UI.DataVisualization.Charting.Series.Points%2A> свойства коллекции.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPoint (System.Web.UI.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPoint.#ctor(System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPoint(System::Web::UI::DataVisualization::Charting::Series ^ series);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataVisualization.Charting.DataPoint : System.Web.UI.DataVisualization.Charting.Series -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="new System.Web.UI.DataVisualization.Charting.DataPoint series" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="series" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="series">Объект <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />, к которому принадлежат точки данных.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> и задает объект <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />, к которому принадлежат точки данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор можно использовать для создания и инициализации нового экземпляра <xref:System.Web.UI.DataVisualization.Charting.DataPoint> класса.  
  
 Однако настоятельно рекомендуется вместо этого добавлять точки данных во время выполнения с помощью <xref:System.Web.UI.DataVisualization.Charting.Series.Points%2A> свойства коллекции.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPoint (double xValue, double yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 xValue, float64 yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPoint.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xValue As Double, yValue As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPoint(double xValue, double yValue);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataVisualization.Charting.DataPoint : double * double -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="new System.Web.UI.DataVisualization.Charting.DataPoint (xValue, yValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xValue" Type="System.Double" />
        <Parameter Name="yValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="xValue">Значение X точки данных.</param>
        <param name="yValue">Значение Y точки данных.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> с заданными координатами X и Y.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор можно использовать для создания и инициализации нового экземпляра <xref:System.Web.UI.DataVisualization.Charting.DataPoint> класса.  
  
 Однако настоятельно рекомендуется вместо этого добавлять точки данных во время выполнения с помощью <xref:System.Web.UI.DataVisualization.Charting.Series.Points%2A> свойства коллекции.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPoint (double xValue, double[] yValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 xValue, float64[] yValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPoint.#ctor(System.Double,System.Double[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xValue As Double, yValues As Double())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPoint(double xValue, cli::array &lt;double&gt; ^ yValues);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataVisualization.Charting.DataPoint : double * double[] -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="new System.Web.UI.DataVisualization.Charting.DataPoint (xValue, yValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xValue" Type="System.Double" />
        <Parameter Name="yValues" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="xValue">Значение X.</param>
        <param name="yValues">Массив значений Y.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> с заданным значением X и массивом значений Y.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор можно использовать для создания и инициализации нового экземпляра <xref:System.Web.UI.DataVisualization.Charting.DataPoint> класса.  
  
 Однако настоятельно рекомендуется вместо этого добавлять точки данных во время выполнения с помощью <xref:System.Web.UI.DataVisualization.Charting.Series.Points%2A> свойства коллекции.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPoint (double xValue, string yValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 xValue, string yValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPoint.#ctor(System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xValue As Double, yValues As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPoint(double xValue, System::String ^ yValues);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataVisualization.Charting.DataPoint : double * string -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="new System.Web.UI.DataVisualization.Charting.DataPoint (xValue, yValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xValue" Type="System.Double" />
        <Parameter Name="yValues" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xValue">Значение X точки данных.</param>
        <param name="yValues">Значение типа <see langword="string" />, содержащее значения Y, разделенные запятыми.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> с заданными координатами X и Y.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор можно использовать для создания и инициализации нового экземпляра <xref:System.Web.UI.DataVisualization.Charting.DataPoint> класса.  
  
 Однако настоятельно рекомендуется вместо этого добавлять точки данных во время выполнения с помощью <xref:System.Web.UI.DataVisualization.Charting.Series.Points%2A> свойства коллекции.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPoint.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPoint.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает точную копию точки данных.</summary>
        <returns>Клонированный объект <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.DataPoint.Clone%2A> Используйте метод, чтобы получить точную копию точки данных.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueByName">
      <MemberSignature Language="C#" Value="public double GetValueByName (string valueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetValueByName(string valueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPoint.GetValueByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueByName (valueName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetValueByName(System::String ^ valueName);" />
      <MemberSignature Language="F#" Value="member this.GetValueByName : string -&gt; double" Usage="dataPoint.GetValueByName valueName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valueName">Имена значений точки данных. X, Y, Y2...</param>
        <summary>Возвращает точку данных с указанным именем. Это вспомогательная функция.</summary>
        <returns>Значение типа <see langword="string" />, представляющее точку данных.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.DataPoint.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.DataPoint.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает флаг, который указывает, помечена ли точка данных как пустая.</summary>
        <value>Значение <see langword="true" />, если точка помечена как пустая; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Присвойте этому свойству `true` значение, чтобы отметить точку данных как пустую точку.  
  
 Кроме того, `InsertEmptyPoints` можно использовать один из <xref:System.Web.UI.DataVisualization.Charting.DataManipulator> методов класса, чтобы отметить отсутствующие данные как пустые точки.  
  
 <xref:System.Web.UI.DataVisualization.Charting.Series.EmptyPointStyle%2A> Свойство определяет, как отображаются пустые точки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.DataPoint.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.DataPoint.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя точки данных.</summary>
        <value>Значение <see langword="string" />, представляющее имя точки данных.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueXY">
      <MemberSignature Language="C#" Value="public void SetValueXY (object xValue, params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValueXY(object xValue, object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPoint.SetValueXY(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValueXY (xValue As Object, ParamArray yValue As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValueXY(System::Object ^ xValue, ... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.SetValueXY : obj * obj[] -&gt; unit" Usage="dataPoint.SetValueXY (xValue, yValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xValue" Type="System.Object" />
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-4.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="xValue">Значение X точки данных.</param>
        <param name="yValue">Список значений Y точки данных.</param>
        <summary>Задает значение X и одно или несколько значений Y точки данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.DataPoint.SetValueXY%2A> Используйте метод для задания значений точки данных во время выполнения.  
  
 Обратите внимание, что при задании значения X, отличного от нуля (0), будет создана точечная диаграмма. Дополнительные сведения см. в разделе <xref:System.Web.UI.DataVisualization.Charting.DataPoint.XValue%2A> "Примечания" Свойства.  
  
 Полный список допустимых типов .NET Framework, которые можно использовать для параметра типа объекта, см. в следующей таблице.  
  
||||  
|-|-|-|  
|String|DateTime|Double|  
|Десятичное число|Single|Int32|  
|UInt32|Int64|UInt64|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueY">
      <MemberSignature Language="C#" Value="public void SetValueY (params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValueY(object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPoint.SetValueY(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValueY (ParamArray yValue As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValueY(... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.SetValueY : obj[] -&gt; unit" Usage="dataPoint.SetValueY yValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-4.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="yValue">Значение Y объекта <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> в виде последовательности. Форматируются как одно или несколько значений, разделенных запятыми.</param>
        <summary>Задает значения Y одной точки данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.DataPoint.SetValueY%2A> Свойство используется для задания значений Y точки данных во время выполнения.  
  
 Только одно значение Y для каждой точки требуется для всех типов диаграмм, за исключением пузырьковых, японские свечиных и стандартных диаграмм. Для этих типов диаграмм требуется более одного значения Y, поскольку одна точка данных состоит из нескольких значений. Например, чтобы построить один столбец на бумаге, требуются четыре значения: высокая, низкая, открытые и закрытые значения.  
  
 Это свойство возвращает массив `double` значений при использовании для получения нескольких значений Y.  
  
> [!IMPORTANT]
>  Свойство определяет максимальное число значений Y, которые <xref:System.Web.UI.DataVisualization.Charting.Series> могут иметь все точки данных в. <xref:System.Web.UI.DataVisualization.Charting.Series.YValuesPerPoint%2A> Если указать больше допустимого числа значений Y, будет вызвано исключение.  
>   
>  Полный список допустимых типов .NET Framework, которые можно использовать для параметра типа объекта, см. в следующей таблице:  
  
||||  
|-|-|-|  
|String|DateTime|Double|  
|Десятичное число|Single|Int32|  
|UInt32|Int64|UInt64|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XValue">
      <MemberSignature Language="C#" Value="public double XValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 XValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.DataPoint.XValue" />
      <MemberSignature Language="VB.NET" Value="Public Property XValue As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double XValue { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.XValue : double with get, set" Usage="System.Web.UI.DataVisualization.Charting.DataPoint.XValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Double), "0.0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.DataPointValueConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение X точки данных.</summary>
        <value>Значение типа <see langword="double" />, представляющее значение X точки данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Все типы диаграмм могут отображаться как точечные диаграммы или как неточечные, так как можно задать значения X и Y. Установка значения X приведет к точечной диаграмме, а не к этому свойству, что эквивалентно установке этого свойства, которое будет иметь значение 0 — приведет к созданию неточечной диаграммы. Например, чтобы нарисовать тип точечной диаграммы, добавьте точки данных с нулевым значением X. Чтобы отобразить традиционную точечную диаграмму, добавьте точки данных с X-значениями, отличными от нуля.  
  
 Значения X точек данных не обязательно должны быть заданы. Если они не заданы, точки данных отображаются последовательно, используя значения индексов из <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YValues">
      <MemberSignature Language="C#" Value="public double[] YValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64[] YValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.DataPoint.YValues" />
      <MemberSignature Language="VB.NET" Value="Public Property YValues As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;double&gt; ^ YValues { cli::array &lt;double&gt; ^ get(); void set(cli::array &lt;double&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.YValues : double[] with get, set" Usage="System.Web.UI.DataVisualization.Charting.DataPoint.YValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor(typeof(System.Drawing.Design.UITypeEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.DoubleArrayConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значения Y точки данных.</summary>
        <value>Массив значений типа <see langword="double" />, представляющих значения Y точки данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.DataPoint.YValues%2A> Свойство используется для задания значений Y точек данных.  
  
 Только одно значение Y для каждой точки требуется для всех типов диаграмм, кроме пузырьковых, японские свечи и стандартных диаграмм. Для этих типов диаграмм требуется более одного значения Y, поскольку одна точка данных состоит из нескольких значений. Например, чтобы построить один столбец на бумаге, требуются четыре значения: высокая, низкая, открытые и закрытые значения.  
  
 <xref:System.Web.UI.DataVisualization.Charting.DataPoint.YValues%2A> Свойство возвращает`double` массив значений при использовании для получения значений Y.  
  
 > [!IMPORTANT]
 > Свойство определяет максимальное число значений Y, которые <xref:System.Web.UI.DataVisualization.Charting.Series> могут иметь все точки данных в. <xref:System.Web.UI.DataVisualization.Charting.Series.YValuesPerPoint%2A> Если указать больше допустимого числа значений Y, будет вызвано исключение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
