<Type Name="ChartSerializer" FullName="System.Web.UI.DataVisualization.Charting.ChartSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b068e64fce2d0c45832844045864d0044982d2a9" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70701129" /></Metadata><TypeSignature Language="C#" Value="public class ChartSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChartSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.ChartSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class ChartSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChartSerializer" />
  <TypeSignature Language="F#" Value="type ChartSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Format")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Включает сериализацию элемента управления <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот класс предоставляется как <xref:System.Web.UI.DataVisualization.Charting.Chart.Serializer%2A> свойство корневого <xref:System.Web.UI.DataVisualization.Charting.Chart> класса.  
  
 При сериализации сохраняется состояние диаграммы, а также предоставляется возможность загрузить сериализованные данные в диаграмму. Все свойства диаграммы могут быть сохранены, включая данные диаграммы. Кроме того, все свойства диаграммы, отмеченные для сериализации, можно сбросить.  
  
 При необходимости этот класс можно использовать при управлении состоянием представления, определяемым пользователем. Один из его `Load` методов можно использовать для загрузки состояния представления, а при задании состояния представления `Save` можно использовать один из методов.  
  
 XML-или двоичные форматы можно использовать для хранения сериализованных данных. По умолчанию используется XML, но формат можно изменить с помощью <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> свойства.  
  
 Свойства диаграммы сохраняются и загружаются с `Save` помощью `Load` методов и соответственно. Обратите внимание, что будут сохранены только свойства со значениями, отличными от значений по умолчанию. Данные можно сохранять и (или) загружать с помощью файлов, потоков, <xref:System.IO.TextWriter> <xref:System.IO.TextReader> <xref:System.Xml.XmlWriter> , и <xref:System.Xml.XmlReader> объектов. При сохранении и/или загрузке данных с <xref:System.IO.TextReader>помощью объекта <xref:System.Xml.XmlReader> , производного от <xref:System.IO.TextWriter>классов, <xref:System.Xml.XmlWriter> или, формат данных должен быть XML.  
  
 В следующем списке описываются три методики — от Basic до Advanced, которые используются для определения сериализуемых данных. Обратите внимание, что можно также определить не сериализуемые данные. Этот метод описан в следующем абзаце.  
  
-   Сериализация <xref:System.Web.UI.DataVisualization.Charting.Chart> `Load` с помощью методов и без указания каких бы то ни было сериализуемых свойств. `Save` Все свойства диаграммы со значениями, отличными от значений по умолчанию, которые включают данные диаграммы, будут сериализованы.  
  
-   Сериализация свойств диаграммы, заданных <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> свойством. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> Свойство группирует свойства диаграммы для сериализации в категории, такие как данные, внешний вид и т. д. Обратите внимание, что <xref:System.Web.UI.DataVisualization.Charting.ChartArea> имена <xref:System.Web.UI.DataVisualization.Charting.Series> объектов и автоматически сериализуются; после загрузки сериализованные данные применяются к существующим областям диаграммы и рядам.  
  
> [!IMPORTANT]
>  Свойство реализуется внутри <xref:System.Web.UI.DataVisualization.Charting.Chart> элемента управления как  <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> свойство <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>  
  
-   Сериализация свойств диаграммы, заданной <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> свойством. Это разделенный запятыми список всех свойств диаграммы, которые являются сериализуемыми. После того как этому свойству присвоено явное значение, разработчик должен указать все свойства для сохранения. Иными словами, в отличие <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> от свойства имена областей диаграммы и рядов не будут автоматически сохраняться. Свойства <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> и <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>  можно также использовать совместно. Однако убедитесь, что <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> сцепление выполняется с самим собой при установке, в противном случае свойства диаграммы, заданные <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> свойством, будут переопределены.  
  
 Чтобы запретить сериализацию определенных свойств, используйте <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> свойство. Если одно свойство установлено как сериализуемый и не сериализуемый, что обычно используется при использовании подстановочных знаков, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> свойство имеет приоритет. Однако приоритет также зависит от того, сколько подстановочных знаков использовалось при указании свойства.  
  
 По умолчанию сериализуемые свойства сбрасываются до значений по умолчанию перед их загрузкой. Это поведение можно изменить с помощью <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> свойства. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset%2A> Метод также можно использовать для явного сброса свойств диаграммы к значениям по умолчанию.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SerializationContents Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.SerializationContents Content" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As SerializationContents" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::SerializationContents Content { System::Web::UI::DataVisualization::Charting::SerializationContents get(); void set(System::Web::UI::DataVisualization::Charting::SerializationContents value); };" />
      <MemberSignature Language="F#" Value="member this.Content : System.Web.UI.DataVisualization.Charting.SerializationContents with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.SerializationContents), "Default")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SerializationContents</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает тип подлежащего сериализации содержимого диаграммы.</summary>
        <value>Значение перечисления <see cref="T:System.Web.UI.DataVisualization.Charting.SerializationContents" />, представляющее содержимое диаграммы, которое будет сериализовано в ходе операции загрузки, сохранения или сброса. По умолчанию сохраняются все отличающиеся от значений по умолчанию свойства диаграммы, включая данные.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию все свойства диаграммы будут сериализованы при вызове любого из `Save` методов `Load` и. Чтобы обеспечить больший контроль над сериализацией, используйте <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> свойство. Обратите внимание <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> , <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> что свойства и также можно использовать вместе со <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> свойством.  
  
 > [!IMPORTANT]
 > Свойство определяет типы характеристик диаграммы, например "внешний вид", для сериализации и фактически реализуется внутренне <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> как свойство. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> Это означает, что установка <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> свойства, а затем <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> установка свойства приведут к <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> переопределению значения свойства, если <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> не выполняется сцепление. Пример этой процедуры см. в приведенном ниже образце кода.  
  
 Если задать <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> свойство, все <xref:System.Web.UI.DataVisualization.Charting.ChartArea> имена объектов и <xref:System.Web.UI.DataVisualization.Charting.Series> будут автоматически сериализованы; это означает, что сериализованные данные, относящиеся к областям диаграммы и ряду, будут применены к существующим объектам при загрузке.  
  
 Установка этого свойства влияет на все операции загрузки, сохранения и сброса.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SerializationFormat Format { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.SerializationFormat Format" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format" />
      <MemberSignature Language="VB.NET" Value="Public Property Format As SerializationFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::SerializationFormat Format { System::Web::UI::DataVisualization::Charting::SerializationFormat get(); void set(System::Web::UI::DataVisualization::Charting::SerializationFormat value); };" />
      <MemberSignature Language="F#" Value="member this.Format : System.Web.UI.DataVisualization.Charting.SerializationFormat with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.SerializationFormat), "Xml")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SerializationFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает формат, используемый при сериализации диаграммы.</summary>
        <value>Значение перечисления <see cref="T:System.Web.UI.DataVisualization.Charting.SerializationFormat" />, представляющее формат сериализованных данных. Значение по умолчанию - XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данные могут быть сериализованы в XML-или двоичном формате. Двоичный формат является компактным и занимает меньше места, чем XML. Однако XML — это текстовый формат, который удобен для чтения.  
  
 При сохранении или загрузке сериализованных данных формат должен быть XML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContentString">
      <MemberSignature Language="C#" Value="protected string GetContentString (System.Web.UI.DataVisualization.Charting.SerializationContents content, bool serializable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetContentString(valuetype System.Web.UI.DataVisualization.Charting.SerializationContents content, bool serializable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.GetContentString(System.Web.UI.DataVisualization.Charting.SerializationContents,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetContentString (content As SerializationContents, serializable As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetContentString(System::Web::UI::DataVisualization::Charting::SerializationContents content, bool serializable);" />
      <MemberSignature Language="F#" Value="member this.GetContentString : System.Web.UI.DataVisualization.Charting.SerializationContents * bool -&gt; string" Usage="chartSerializer.GetContentString (content, serializable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.Web.UI.DataVisualization.Charting.SerializationContents" />
        <Parameter Name="serializable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="content">Сериализуемое содержимое.</param>
        <param name="serializable">Значение <see langword="true" /> для получения сериализуемой строки; значение <see langword="false" /> для получения несериализуемой строки.</param>
        <summary>Возвращает сериализуемые или несериализуемые имена классов и свойств в зависимости от значения флага.</summary>
        <returns>Значение типа <see langword="string" />, представляющее сериализуемые или несериализуемые имена классов и свойств.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsResetWhenLoading">
      <MemberSignature Language="C#" Value="public bool IsResetWhenLoading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsResetWhenLoading" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading" />
      <MemberSignature Language="VB.NET" Value="Public Property IsResetWhenLoading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsResetWhenLoading { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsResetWhenLoading : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает флаг, определяющий, нужно ли перед загрузкой установить для свойств объекта значения по умолчанию.</summary>
        <value>Значение <see langword="true" />, если перед загрузкой для свойств объекта устанавливаются значения по умолчанию; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTemplateMode">
      <MemberSignature Language="C#" Value="public bool IsTemplateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTemplateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTemplateMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTemplateMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsTemplateMode : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает флаг, указывающий, работает ли сериализатор диаграмм в режиме создания шаблона.</summary>
        <value>Значение <see langword="true" />, если сериализатор диаграмм работает в режиме создания шаблона; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknownAttributeIgnored">
      <MemberSignature Language="C#" Value="public bool IsUnknownAttributeIgnored { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknownAttributeIgnored" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUnknownAttributeIgnored As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknownAttributeIgnored { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknownAttributeIgnored : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает флаг, указывающий, будут ли неизвестные элементы и свойства XML пропускаться без создания исключения.</summary>
        <value>Значение <see langword="true" />, если неизвестные элементы и свойства XML пропускаются без создания исключения; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Загружает сериализованные данные в элемент управления <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.Load : System.IO.Stream -&gt; unit" Usage="chartSerializer.Load stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Объект класса, производного от <see cref="T:System.IO.Stream" />, например объект <see cref="T:System.IO.MemoryStream" />.</param>
        <summary>Загружает в элемент управления сериализованные данные из объекта класса, производного от <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите этот метод, чтобы загрузить сериализованные данные <xref:System.Web.UI.DataVisualization.Charting.Chart> в элемент управления.  
  
 При выполнении операции загрузки сериализуемые свойства по умолчанию сначала сбрасываются в значения по умолчанию, прежде чем они будут установлены в сохраненные значения, если они сохранены. Чтобы изменить это поведение, используйте <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> свойство.  
  
 По умолчанию будут загружены все сериализованные свойства диаграммы. Чтобы загрузить определенные сериализованные свойства, перед загрузкой <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> данных задайте <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> свойства или.  
  
 Обратите внимание, что при сохранении данных `Save` с помощью метода фактически сериализуются только те свойства, значения которых не являются значениями по умолчанию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (reader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Load : System.IO.TextReader -&gt; unit" Usage="chartSerializer.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader">Объект чтения, например <see cref="T:System.IO.StringReader" />, относящийся к классу, производному от класса <see cref="T:System.IO.TextReader" />.</param>
        <summary>Загружает в элемент управления сериализованные данные из объекта чтения, который относится к классу, производному от класса <see cref="T:System.IO.TextReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите этот метод, чтобы загрузить сериализованные данные <xref:System.Web.UI.DataVisualization.Charting.Chart> в элемент управления.  
  
 При выполнении операции загрузки по умолчанию сериализуемые свойства сначала сбрасываются в значения по умолчанию, прежде чем они будут установлены в сохраненные значения, если они сохранены. Чтобы изменить это поведение, используйте <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> свойство.  
  
 По умолчанию будут загружены все сериализованные свойства диаграммы. Устанавливая <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>свойства, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> или <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> , можно загрузить конкретный набор свойств.  
  
 Если вы используете это определение, обратите внимание, что формат, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> заданный свойством, должен быть XML.  
  
 <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> Если свойство <xref:System.Web.UI.DataVisualization.Charting.Chart> элемента управления используется для сохранения состояния, этот метод можно использовать для загрузки сериализованных данных, отправляемых клиентом обратно в <xref:System.Web.UI.DataVisualization.Charting.Chart> элемент управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="chartSerializer.Load fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Относительный или абсолютный путь к файлу, используемому для хранения сериализованных данных. Если указан относительный путь, он определяется относительно текущего каталога.</param>
        <summary>Загружает сохраненные на диске сериализованные данные в элемент управления <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите этот метод, чтобы загрузить сериализованные данные <xref:System.Web.UI.DataVisualization.Charting.Chart> в элемент управления.  
  
 При выполнении операции загрузки сериализуемые свойства по умолчанию сначала сбрасываются в значения по умолчанию, прежде чем они будут установлены в сохраненные значения, если они сохранены. Чтобы изменить это поведение, используйте <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> свойство.  
  
 По умолчанию будут загружены все сериализованные свойства диаграммы. Чтобы загрузить определенные сериализованные свойства, перед загрузкой <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> данных задайте <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> свойства или.  
  
 Обратите внимание, что при сохранении данных `Save` с помощью метода фактически сериализуются только те свойства, значения которых не являются значениями по умолчанию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="chartSerializer.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">Объект, из которого считываются сохраненные данные. Объект относится к классу, производному от <see cref="T:System.Xml.XmlReader" />, и может представлять собой как объект .NET Framework, так и объект, определенный пользователем.</param>
        <summary>Загружает в элемент управления сериализованные данные из объекта класса, производного от <see cref="T:System.Xml.XmlReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызовите этот метод, чтобы загрузить сериализованные данные <xref:System.Web.UI.DataVisualization.Charting.Chart> в элемент управления.  
  
 Когда происходит операция загрузки, сериализуемые свойства по умолчанию сначала сбрасываются в значения по умолчанию, прежде чем они будут установлены в сохраненные значения, если они сохранены. Чтобы изменить это поведение, используйте <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> свойство.  
  
 По умолчанию будут загружены все сериализованные свойства диаграммы. Если заданы <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>свойства, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> или <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> , можно загрузить конкретный набор свойств.  
  
 При использовании этого определения формат должен быть XML-документом. его можно изменить с помощью <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> свойства.  
  
 При работе с текстовыми файлами формата XML для простоты используйте <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load%2A> вместо этого метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NonSerializableContent">
      <MemberSignature Language="C#" Value="public string NonSerializableContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NonSerializableContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent" />
      <MemberSignature Language="VB.NET" Value="Public Property NonSerializableContent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NonSerializableContent { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NonSerializableContent : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает свойства диаграммы, которые не будут сериализованы.</summary>
        <value>Выражение типа <see langword="string" /> с разделенными запятыми значениями, представляющее свойства, которые не будут сериализованы. Используется синтаксис "Класс.Свойство[,Класс.Свойство]".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию все свойства диаграммы будут сериализованы при `Save` вызове методов и. `Load` <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Свойство можно использовать для ограничения сериализации характеристик диаграммы, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> а также свойств и <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> .  
  
 Это свойство определяет, какие характеристики диаграммы не будут сериализованы. Подстановочные знаки можно использовать в строковом выражении так же, как <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> и свойство. Например, чтобы исключить все свойства диаграммы `BackColor` из сериализации, присвойте этому свойству значение "*". BackColor ".  
  
 Иногда свойство может быть задано как сериализованное, так и не сериализованное, что обычно используется при использовании подстановочных знаков. Выражение имеет более низкий приоритет по сравнению <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> с выражением. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Однако обратите внимание, что для строковых выражений, использующих подстановочные знаки, задается меньшее значение веса. Например, если <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> свойство имеет значение «*». BackColor <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A>, а свойство имеет значение, <xref:System.Web.UI.DataVisualization.Charting.ChartArea> все свойства B`ackColor` , за исключением объектов, будут сериализованы.  
  
 Если свойство задано, приоритет зависит от того, сколько подстановочных знаков используется <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> в выражении. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> Например, если <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> задать для <xref:System.Web.UI.DataVisualization.Charting.SerializationContents.Appearance> свойства значение, будет получено <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> свойство, содержащее "\*. Обратное\*"выражение". Если свойство имеет значение " \* . <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> «\*Назад» все `Back*` свойства диаграммы, такие `BackColor`как `BackGradient`, и т. д., будут по-прежнему сериализованы. Это связано с тем <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> , что значение свойства имеет более высокий приоритет по <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> сравнению со свойством.  
  
 Это свойство влияет на все операции сохранения, загрузки и сброса.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="chartSerializer.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сбрасывает все свойства диаграммы, помеченные для сериализации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию этот метод сбрасывает все свойства диаграммы до значений по умолчанию.  
  
 Чтобы ограничить свойства диаграммы, которые сбрасываются до значений по умолчанию, используйте <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> свойства и <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> .  
  
 Обратите внимание, что этот метод также вызывается `Load` автоматически при использовании метода <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> и если свойство имеет значение `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Сохраняет свойства диаграммы, значения которых отличаются от значений по умолчанию. Все свойства диаграммы можно сериализовать, в том числе данные.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.Stream -&gt; unit" Usage="chartSerializer.Save stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Объект класса, производного от <see cref="T:System.IO.Stream" />, например <see cref="T:System.IO.MemoryStream" />, который служит для сохранения свойств диаграммы.</param>
        <summary>Сохраняет данные и свойства диаграммы, значения которых отличаются от значений по умолчанию, в объекте класса, производного от <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию все свойства диаграммы со значениями, отличными от значений по умолчанию, которые включают точки данных, будут сериализованы при вызове этого метода. Чтобы управлять характеристиками диаграммы для сериализации, используйте <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> свойства и <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> .  
  
 Если этот метод используется для сохранения свойств внешнего вида в качестве шаблона, перед вызовом этого <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> метода убедитесь, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer> что свойство объекта установлено в `true` значение.  
  
 Сериализация диаграммы как шаблона происходит иначе, чем сериализация без шаблона. Сериализация шаблонов сосредоточена на свойствах внешнего вида.  
  
 При сериализации <xref:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate%2A> шаблона можно использовать метод для загрузки шаблона, чтобы предоставить свойства внешнего вида для диаграммы.  
  
 Шаблоны можно использовать для имитации пользовательских палитр.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.TextWriter -&gt; unit" Usage="chartSerializer.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект класса, производного от <see cref="T:System.IO.TextWriter" />, например <see cref="T:System.IO.StringWriter" />, который служит для сохранения свойств диаграммы.</param>
        <summary>Сохраняет данные и свойства диаграммы, значения которых отличаются от значений по умолчанию, в заданном объекте класса, производного от <see cref="T:System.IO.TextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию все свойства диаграммы со значениями, отличными от значений по умолчанию, которые включают точки данных, будут сериализованы при вызове этого метода. Чтобы контролировать, какие характеристики диаграммы сериализуются, используйте <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> свойства и <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> .  
  
 При использовании этого определения формат должен быть XML-документом. формат можно задать с помощью <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> свойства.  
  
 <xref:System.IO.TextWriter> <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> Если свойство элемента <xref:System.Web.UI.DataVisualization.Charting.Chart>  управления используется для сохранения состояния, этот метод можно использовать для сохранения сериализованных данных в объект, производный от, который затем используется для записи данных в свойство. <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="chartSerializer.Save fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Относительный или абсолютный путь к файлу, используемому для хранения сериализованных данных. Обратите внимание, что если указан относительный путь, он определяется относительно текущего каталога.</param>
        <summary>Сохраняет данные и свойства диаграммы, значения которых отличаются от значений по умолчанию, в указанный файл.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию все свойства диаграммы со значениями, отличными от значений по умолчанию, которые включают точки данных, будут сериализованы при вызове этого метода. Для управления характеристиками диаграммы <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, которые должны быть сериализованы, используйте свойства, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> и <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> .  
  
 По умолчанию данные сохраняются в формате XML. Чтобы сохранить данные в двоичном формате, используйте <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> свойство.  
  
 Обратите внимание, что разрешения на запись должны быть включены для каталога, в котором хранится файл. По умолчанию это папка Bin приложения.  
  
 Если этот метод используется для сохранения свойств внешнего вида в качестве шаблона, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> `true` перед вызовом этого метода убедитесь, что свойство имеет значение.  
  
 Сериализация диаграммы в качестве шаблона выполняется иначе, чем сериализация без шаблона, в основном потому, что сериализация шаблонов сосредоточена на свойствах внешнего вида.  
  
 При сериализации <xref:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate%2A> шаблона можно использовать метод для загрузки шаблона, чтобы предоставить свойства внешнего вида для диаграммы.  
  
 Шаблоны можно использовать для имитации пользовательских палитр.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Save : System.Xml.XmlWriter -&gt; unit" Usage="chartSerializer.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект, производный от класса <see cref="T:System.Xml.XmlWriter" />, который используется для сохранения свойств объекта <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />.</param>
        <summary>Сохраняет данные и свойства диаграммы, значения которых отличаются от значений по умолчанию, в заданном объекте класса, производного от <see cref="T:System.Xml.XmlWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию все свойства диаграммы со значениями, отличными от значений по умолчанию, которые включают точки данных, будут сериализованы при вызове этого метода. Чтобы контролировать, какие характеристики диаграммы сериализуются, используйте <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> свойства и <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> .  
  
 При использовании этого определения формат должен быть XML-документом. формат можно изменить с помощью <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> свойства.  
  
 При работе с текстовыми файлами формата XML для простоты используйте <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save%2A> вместо этого метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializableContent">
      <MemberSignature Language="C#" Value="public string SerializableContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerializableContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent" />
      <MemberSignature Language="VB.NET" Value="Public Property SerializableContent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerializableContent { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SerializableContent : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает свойства диаграммы, которые можно сериализовать.</summary>
        <value>Выражение типа <see langword="string" /> с разделенными запятыми значениями, представляющее свойства диаграммы, которые подлежат сериализации. Используется синтаксис "Класс.Свойство[,Класс.Свойство]".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию все свойства диаграммы будут сериализованы при `Save` вызове методов и. `Load` <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Свойство можно использовать для ограничения сериализации характеристик диаграммы, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> а также свойств и <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> .  
  
 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> Свойство определяет, какие характеристики диаграммы будут сериализованы. Подстановочные знаки можно использовать в строковом выражении так же, как <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> и свойство. Например, чтобы сериализовать все свойства диаграммы `BackColor` , задайте для этого свойства значение "*". BackColor ".  
  
 Если <xref:System.Web.UI.DataVisualization.Charting.ChartArea> указаны дочерние свойства и/или <xref:System.Web.UI.DataVisualization.Charting.Series> , то необходимо также указать <xref:System.Web.UI.DataVisualization.Charting.ChartArea> имена <xref:System.Web.UI.DataVisualization.Charting.Series> всех объектов и, чтобы обеспечить применение сохраненных данных к существующим <xref:System.Web.UI.DataVisualization.Charting.ChartArea> объектам и <xref:System.Web.UI.DataVisualization.Charting.Series> . то есть необходимо указать выражения "Series.Name" и "ChartArea.Name". Пример этой процедуры см. в приведенном ниже образце кода. Аналогично, если используется несколько областей диаграммы, <xref:System.Web.UI.DataVisualization.Charting.Series.ChartArea%2A> <xref:System.Web.UI.DataVisualization.Charting.Series> необходимо также сохранить свойство всех построений.  
  
 Иногда свойство может быть задано как сериализованное, так и не сериализованное, что обычно используется при использовании подстановочных знаков. Выражение имеет более низкий приоритет по сравнению <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> с выражением. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Однако обратите внимание, что для строковых выражений, использующих подстановочные знаки, задается меньшее значение веса. Например, если <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> свойство имеет значение «*». BackColor <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A>, а свойство имеет значение, <xref:System.Web.UI.DataVisualization.Charting.ChartArea> все свойства B`ackColor` , за исключением объектов, будут сериализованы.  
  
 Если задать <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> свойство <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> , свойство будет задаваться внутренним образом. Если свойство уже задано, но требуется сериализовать другое свойство, необходимо объединить <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> свойство при указании дополнительного свойства. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> Пример этой процедуры см. в приведенном ниже образце кода.  
  
 Это свойство влияет на все операции сохранения, загрузки и сброса.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
