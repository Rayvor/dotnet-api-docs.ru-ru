<Type Name="SecurityTokenServiceConfiguration" FullName="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dec195a24e756ca13e6f1f874193d749d705cda0" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69286284" /></Metadata><TypeSignature Language="C#" Value="public class SecurityTokenServiceConfiguration : System.IdentityModel.Configuration.IdentityConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SecurityTokenServiceConfiguration extends System.IdentityModel.Configuration.IdentityConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class SecurityTokenServiceConfiguration&#xA;Inherits IdentityConfiguration" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenServiceConfiguration : System::IdentityModel::Configuration::IdentityConfiguration" />
  <TypeSignature Language="F#" Value="type SecurityTokenServiceConfiguration = class&#xA;    inherit IdentityConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Configuration.IdentityConfiguration</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Задает конфигурацию для службы токенов безопасности (STS). Классы, реализующие наследование STS от класса <see cref="T:System.IdentityModel.SecurityTokenService" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Примеры кода, используемые в <xref:System.IdentityModel.SecurityTokenService> подразделах, взяты `Custom Token` из примера. Этот пример предоставляет пользовательские классы, которые позволяют обрабатывать простые веб-маркеры (SWT) и включают реализацию пассивной STS, способную обслуживать токен SWT. Пример реализации активной STS можно увидеть в `Federation Metadata` примере. Сведения об этих примерах и других примерах, доступных для WIF, и о месте их загрузки см. в разделе [индекс примера кода WIF](~/docs/framework/security/wif-code-sample-index.md). В следующем коде показана пользовательская реализация <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration> класса для поддержки пассивной STS, обрабатывающей маркеры SWT. Конфигурация инициализируется и сохраняется в HTTP-состоянии приложения при первом обращении к статическому `Current` свойству. Конструктор инициализирует свойства пользовательской конфигурации, используя тип пользовательской STS, Сопоставитель токенов поставщика и тип токена по умолчанию (URI типа токена SWT). Он также добавляет обработчик маркеров SWT в коллекцию обработчиков по умолчанию.  
  
 [!code-csharp[WIFCustomTokenSTS#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenserviceconfiguration.cs#2)]  
  
 В следующем коде показано, как вызвать пользовательскую пассивную STS для обработки запроса WS-Federation путем вызова <xref:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest%28System.Web.HttpRequest%2CSystem.Security.Claims.ClaimsPrincipal%2CSystem.IdentityModel.SecurityTokenService%2CSystem.Web.HttpResponse%29?displayProperty=nameWithType> метода из кода программной части `default.aspx.cs` файла. Метод инициализирует экземпляр `PassiveSTS.CustomSecurityTokenService` класса, используя свойства, заданные для `CustomSecurityTokenServiceConfiguration` класса, показанного в предыдущем примере. <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.CreateSecurityTokenService%2A>  
  
 [!code-csharp[WIFCustomTokenSTS#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/default.aspx.cs#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.SecurityTokenService" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityTokenServiceConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityTokenServiceConfiguration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> Свойство должно быть установлено до того, как служба маркеров безопасности будет использоваться для создания токена.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityTokenServiceConfiguration (bool loadConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool loadConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (loadConfig As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityTokenServiceConfiguration(bool loadConfig);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration : bool -&gt; System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" Usage="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration loadConfig" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="loadConfig" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="loadConfig">Значение <see langword="true" /> для загрузки параметров из файла конфигурации; в противном случае — значение <see langword="false" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />. При необходимости загружает параметры из текущей конфигурации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> Свойство должно быть установлено до того, как служба маркеров безопасности будет использоваться для создания токена.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityTokenServiceConfiguration (string issuerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string issuerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (issuerName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityTokenServiceConfiguration(System::String ^ issuerName);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration : string -&gt; System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" Usage="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration issuerName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="issuerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="issuerName">Имя издателя. Задает свойство <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />, который имеет указанное имя поставщика.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `issuerName` <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> имеет `null`значение, свойство должно быть установлено до того, как служба маркеров безопасности будет использоваться для создания маркера.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityTokenServiceConfiguration (string issuerName, bool loadConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string issuerName, bool loadConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (issuerName As String, loadConfig As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityTokenServiceConfiguration(System::String ^ issuerName, bool loadConfig);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration : string * bool -&gt; System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" Usage="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration (issuerName, loadConfig)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="issuerName" Type="System.String" />
        <Parameter Name="loadConfig" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="issuerName">Имя издателя. Задает свойство <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" />.</param>
        <param name="loadConfig">Значение <see langword="true" /> для загрузки параметров из файла конфигурации; в противном случае — значение <see langword="false" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />, который имеет указанное имя поставщика. При необходимости загружает параметры из текущей конфигурации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `issuerName` <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> имеет `null`значение, свойство должно быть установлено до того, как служба маркеров безопасности будет использоваться для создания маркера.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityTokenServiceConfiguration (string issuerName, System.IdentityModel.Tokens.SigningCredentials signingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string issuerName, class System.IdentityModel.Tokens.SigningCredentials signingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityTokenServiceConfiguration(System::String ^ issuerName, System::IdentityModel::Tokens::SigningCredentials ^ signingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration : string * System.IdentityModel.Tokens.SigningCredentials -&gt; System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" Usage="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration (issuerName, signingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="issuerName" Type="System.String" />
        <Parameter Name="signingCredentials" Type="System.IdentityModel.Tokens.SigningCredentials" />
      </Parameters>
      <Docs>
        <param name="issuerName">Имя издателя. Задает свойство <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" />.</param>
        <param name="signingCredentials">Учетные данные подписи для STS. Задает свойство <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SigningCredentials" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />, содержащий указанное имя поставщика и учетные данные подписи.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `issuerName` <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> имеет `null`значение, свойство должно быть установлено до того, как служба маркеров безопасности будет использоваться для создания маркера.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityTokenServiceConfiguration (string issuerName, System.IdentityModel.Tokens.SigningCredentials signingCredentials, bool loadConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string issuerName, class System.IdentityModel.Tokens.SigningCredentials signingCredentials, bool loadConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityTokenServiceConfiguration(System::String ^ issuerName, System::IdentityModel::Tokens::SigningCredentials ^ signingCredentials, bool loadConfig);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration : string * System.IdentityModel.Tokens.SigningCredentials * bool -&gt; System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" Usage="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration (issuerName, signingCredentials, loadConfig)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="issuerName" Type="System.String" />
        <Parameter Name="signingCredentials" Type="System.IdentityModel.Tokens.SigningCredentials" />
        <Parameter Name="loadConfig" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="issuerName">Имя издателя. Задает свойство <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" />.</param>
        <param name="signingCredentials">Учетные данные подписи для STS. Задает свойство <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SigningCredentials" />.</param>
        <param name="loadConfig">Значение <see langword="true" /> для загрузки параметров из файла конфигурации; в противном случае — значение <see langword="false" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />, содержащий указанное имя поставщика и учетные данные подписи. При необходимости загружает параметры из текущей конфигурации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `issuerName` <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> имеет `null`значение, свойство должно быть установлено до того, как служба маркеров безопасности будет использоваться для создания маркера.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityTokenServiceConfiguration (string issuerName, System.IdentityModel.Tokens.SigningCredentials signingCredentials, string serviceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string issuerName, class System.IdentityModel.Tokens.SigningCredentials signingCredentials, string serviceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityTokenServiceConfiguration(System::String ^ issuerName, System::IdentityModel::Tokens::SigningCredentials ^ signingCredentials, System::String ^ serviceName);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration : string * System.IdentityModel.Tokens.SigningCredentials * string -&gt; System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" Usage="new System.IdentityModel.Configuration.SecurityTokenServiceConfiguration (issuerName, signingCredentials, serviceName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="issuerName" Type="System.String" />
        <Parameter Name="signingCredentials" Type="System.IdentityModel.Tokens.SigningCredentials" />
        <Parameter Name="serviceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="issuerName">Имя издателя. Задает свойство <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" />.</param>
        <param name="signingCredentials">Учетные данные подписи для STS. Задает свойство <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SigningCredentials" />.</param>
        <param name="serviceName">Имя элемента <see langword="&lt;identityConfiguration&gt;" />, из которого необходимо загрузить конфигурацию.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />, содержащий указанное имя поставщика и учетные данные подписи. Параметры загружаются из указанной именованной конфигурации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `issuerName` <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName%2A> имеет `null`значение, свойство должно быть установлено до того, как служба маркеров безопасности будет использоваться для создания маркера.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenService">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.SecurityTokenService CreateSecurityTokenService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.SecurityTokenService CreateSecurityTokenService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.CreateSecurityTokenService" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSecurityTokenService () As SecurityTokenService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::SecurityTokenService ^ CreateSecurityTokenService();" />
      <MemberSignature Language="F#" Value="abstract member CreateSecurityTokenService : unit -&gt; System.IdentityModel.SecurityTokenService&#xA;override this.CreateSecurityTokenService : unit -&gt; System.IdentityModel.SecurityTokenService" Usage="securityTokenServiceConfiguration.CreateSecurityTokenService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.SecurityTokenService</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает экземпляр службы токенов безопасности (STS) из <see cref="T:System.Type" />, указанный в свойстве <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SecurityTokenService" />.</summary>
        <returns>Экземпляр <see cref="T:System.Type" />, указанный в свойстве <see cref="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SecurityTokenService" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс, указанный в <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SecurityTokenService%2A> свойстве, должен реализовывать конструктор, принимающий параметр типа. <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration>  
  
   
  
## Examples  
 Примеры кода, используемые в <xref:System.IdentityModel.SecurityTokenService> подразделах, взяты `Custom Token` из примера. Этот пример предоставляет пользовательские классы, которые позволяют обрабатывать простые веб-маркеры (SWT) и включают реализацию пассивной STS, способную обслуживать токен SWT. Пример реализации активной STS можно увидеть в `Federation Metadata` примере. Сведения об этих примерах и других примерах, доступных для WIF, и о месте их загрузки см. в разделе [индекс примера кода WIF](~/docs/framework/security/wif-code-sample-index.md). В следующем коде показана пользовательская реализация <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration> класса для поддержки пассивной STS, обрабатывающей маркеры SWT. Конфигурация инициализируется и сохраняется в HTTP-состоянии приложения при первом обращении к статическому `Current` свойству. Конструктор инициализирует свойства пользовательской конфигурации, используя тип пользовательской STS, Сопоставитель токенов поставщика и тип токена по умолчанию (URI типа токена SWT). Он также добавляет обработчик маркеров SWT в коллекцию обработчиков по умолчанию.  
  
 В следующем коде показано, как вызвать пользовательскую пассивную STS для обработки запроса WS-Federation путем вызова <xref:System.IdentityModel.Services.FederatedPassiveSecurityTokenServiceOperations.ProcessRequest%28System.Web.HttpRequest%2CSystem.Security.Claims.ClaimsPrincipal%2CSystem.IdentityModel.SecurityTokenService%2CSystem.Web.HttpResponse%29?displayProperty=nameWithType> метода из кода программной части `default.aspx.cs` файла. Метод инициализирует экземпляр класса, `PassiveSTS.CustomSecurityTokenService` используя свойства, заданные для текущего `CustomSecurityTokenServiceConfiguration` объекта. <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.CreateSecurityTokenService%2A> Свойство реализуется `CustomSecurityTokenServiceConfiguration` классом и возвращает экземпляр класса, который сохраняется в состоянии приложения HTTP. `CustomSecurityTokenServiceConfiguration.Current`  
  
 [!code-csharp[WIFCustomTokenSTS#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/default.aspx.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMaxSymmetricKeySizeInBits">
      <MemberSignature Language="C#" Value="public int DefaultMaxSymmetricKeySizeInBits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultMaxSymmetricKeySizeInBits" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultMaxSymmetricKeySizeInBits" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultMaxSymmetricKeySizeInBits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DefaultMaxSymmetricKeySizeInBits { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMaxSymmetricKeySizeInBits : int with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultMaxSymmetricKeySizeInBits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает предельный размер ключа в битах, используемый для проверки того, находится ли указанный в запросе размер ключа в этих пределах.</summary>
        <value>Максимальный размер ключа в битах по умолчанию. Значение по умолчанию — 1024.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это относится только к регистру симметричных ключей.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSymmetricKeySizeInBits">
      <MemberSignature Language="C#" Value="public int DefaultSymmetricKeySizeInBits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSymmetricKeySizeInBits" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultSymmetricKeySizeInBits" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultSymmetricKeySizeInBits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DefaultSymmetricKeySizeInBits { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSymmetricKeySizeInBits : int with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultSymmetricKeySizeInBits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает размер по умолчанию ключа в битах, используемый в выданном токене.</summary>
        <value>Размер ключа, используемый в выданном токене, в битах. Значение по умолчанию — 256.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это относится только к регистру симметричных ключей.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTokenLifetime">
      <MemberSignature Language="C#" Value="public TimeSpan DefaultTokenLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultTokenLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultTokenLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan DefaultTokenLifetime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultTokenLifetime : TimeSpan with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает время жизни, используемое по умолчанию в выданных токенах.</summary>
        <value>Время существования по умолчанию, используемое в выдаваемых токенах. Значение по умолчанию — 1 день.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTokenType">
      <MemberSignature Language="C#" Value="public string DefaultTokenType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultTokenType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultTokenType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultTokenType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultTokenType : string with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DefaultTokenType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает тип токена по умолчанию, используемый при выдаче токенов.</summary>
        <value>Строка, содержащая тип токена по умолчанию.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строковые значения указываются в формате URI. Например, для типа токена SAML 1,1 ниже приведено строковое значение: http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV1.1.  
  
 Для типа токена по умолчанию задано значение SAML 1,1.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Указанное значение равно <see langword="null" /> или пусто.</exception>
        <exception cref="T:System.ArgumentException">Указанное значение не задано в обработчиках токена.</exception>
      </Docs>
    </Member>
    <Member MemberName="DisableWsdl">
      <MemberSignature Language="C#" Value="public bool DisableWsdl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableWsdl" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DisableWsdl" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableWsdl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisableWsdl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisableWsdl : bool with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.DisableWsdl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, которое указывает, необходимо ли включать создание WSDL для службы токенов безопасности (STS).</summary>
        <value>Значение <see langword="true" />, чтобы включить создание WSDL для службы токенов безопасности (STS); в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumTokenLifetime">
      <MemberSignature Language="C#" Value="public TimeSpan MaximumTokenLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MaximumTokenLifetime" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.MaximumTokenLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumTokenLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MaximumTokenLifetime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumTokenLifetime : TimeSpan with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.MaximumTokenLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает максимальное время жизни выданных токенов.</summary>
        <value>Максимальное время жизни выданных токенов. Значение по умолчанию — 1 день.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenService">
      <MemberSignature Language="C#" Value="public Type SecurityTokenService { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type SecurityTokenService" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SecurityTokenService" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityTokenService As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ SecurityTokenService { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenService : Type with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SecurityTokenService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает <see cref="T:System.Type" /> службы токенов безопасности (STS).</summary>
        <value>Тип службы токенов безопасности. Тип должен наследоваться от класса <see cref="T:System.IdentityModel.SecurityTokenService" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Класс, указанный в <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SecurityTokenService%2A> свойстве, должен реализовывать конструктор, принимающий параметр типа. <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Указанное значение не может быть назначено как объект <see cref="T:System.IdentityModel.SecurityTokenService" />.</exception>
        <exception cref="T:System.ArgumentNullException">Указанное значение равно <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.CreateSecurityTokenService" />
      </Docs>
    </Member>
    <Member MemberName="SigningCredentials">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SigningCredentials SigningCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SigningCredentials SigningCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SigningCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property SigningCredentials As SigningCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SigningCredentials ^ SigningCredentials { System::IdentityModel::Tokens::SigningCredentials ^ get(); void set(System::IdentityModel::Tokens::SigningCredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SigningCredentials : System.IdentityModel.Tokens.SigningCredentials with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SigningCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SigningCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает учетные данные подписи.</summary>
        <value>Учетные данные подписывания.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Свойство <xref:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.SigningCredentials%2A> игнорируется, когда реализуется активная служба токенов безопасности (STS). Вместо этого необходимо задать сертификат службы с помощью свойства <xref:System.ServiceModel.ServiceHostBase.Credentials%2A> узла службы, размещающего службу токенов безопасности. Узел службы, используемый для активной службы токенов безопасности, представлен классом <xref:System.ServiceModel.Security.WSTrustServiceHost>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenIssuerName">
      <MemberSignature Language="C#" Value="public string TokenIssuerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TokenIssuerName" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" />
      <MemberSignature Language="VB.NET" Value="Public Property TokenIssuerName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TokenIssuerName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TokenIssuerName : string with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.TokenIssuerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя издателя, чтобы его можно было задать в выданном токене.</summary>
        <value>Имя издателя.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Предпринята попытка присвоить свойству значение <see langword="null" /> или пустую строку.</exception>
      </Docs>
    </Member>
    <Member MemberName="WSTrust13RequestSerializer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.WSTrust13RequestSerializer WSTrust13RequestSerializer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.WSTrust13RequestSerializer WSTrust13RequestSerializer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrust13RequestSerializer" />
      <MemberSignature Language="VB.NET" Value="Public Property WSTrust13RequestSerializer As WSTrust13RequestSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::WSTrust13RequestSerializer ^ WSTrust13RequestSerializer { System::IdentityModel::Protocols::WSTrust::WSTrust13RequestSerializer ^ get(); void set(System::IdentityModel::Protocols::WSTrust::WSTrust13RequestSerializer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WSTrust13RequestSerializer : System.IdentityModel.Protocols.WSTrust.WSTrust13RequestSerializer with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrust13RequestSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.WSTrust13RequestSerializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает сериализатор запросов (RST) WS-Trust 1.3.</summary>
        <value>Сериализатор запросов WS-Trust 1.3 (RST).</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Указанное значение равно <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WSTrust13ResponseSerializer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.WSTrust13ResponseSerializer WSTrust13ResponseSerializer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.WSTrust13ResponseSerializer WSTrust13ResponseSerializer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrust13ResponseSerializer" />
      <MemberSignature Language="VB.NET" Value="Public Property WSTrust13ResponseSerializer As WSTrust13ResponseSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::WSTrust13ResponseSerializer ^ WSTrust13ResponseSerializer { System::IdentityModel::Protocols::WSTrust::WSTrust13ResponseSerializer ^ get(); void set(System::IdentityModel::Protocols::WSTrust::WSTrust13ResponseSerializer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WSTrust13ResponseSerializer : System.IdentityModel.Protocols.WSTrust.WSTrust13ResponseSerializer with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrust13ResponseSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.WSTrust13ResponseSerializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает сериализатор откликов (RSTR) WS-Trust 1.3.</summary>
        <value>Сериализатор откликов WS-Trust 1.3 (RSTR).</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Указанное значение равно <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WSTrustFeb2005RequestSerializer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005RequestSerializer WSTrustFeb2005RequestSerializer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005RequestSerializer WSTrustFeb2005RequestSerializer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrustFeb2005RequestSerializer" />
      <MemberSignature Language="VB.NET" Value="Public Property WSTrustFeb2005RequestSerializer As WSTrustFeb2005RequestSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::WSTrustFeb2005RequestSerializer ^ WSTrustFeb2005RequestSerializer { System::IdentityModel::Protocols::WSTrust::WSTrustFeb2005RequestSerializer ^ get(); void set(System::IdentityModel::Protocols::WSTrust::WSTrustFeb2005RequestSerializer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WSTrustFeb2005RequestSerializer : System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005RequestSerializer with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrustFeb2005RequestSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005RequestSerializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает сериализатор запросов (RST) WS-Trust Feb 2005.</summary>
        <value>Сериализатор запросов WS-Trust Feb 2005 (RST).</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Указанное значение равно <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WSTrustFeb2005ResponseSerializer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005ResponseSerializer WSTrustFeb2005ResponseSerializer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005ResponseSerializer WSTrustFeb2005ResponseSerializer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrustFeb2005ResponseSerializer" />
      <MemberSignature Language="VB.NET" Value="Public Property WSTrustFeb2005ResponseSerializer As WSTrustFeb2005ResponseSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::WSTrustFeb2005ResponseSerializer ^ WSTrustFeb2005ResponseSerializer { System::IdentityModel::Protocols::WSTrust::WSTrustFeb2005ResponseSerializer ^ get(); void set(System::IdentityModel::Protocols::WSTrust::WSTrustFeb2005ResponseSerializer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WSTrustFeb2005ResponseSerializer : System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005ResponseSerializer with get, set" Usage="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration.WSTrustFeb2005ResponseSerializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.WSTrustFeb2005ResponseSerializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает сериализатор откликов (RSTR) WS-Trust Feb 2005.</summary>
        <value>Сериализатор откликов WS-Trust Feb 2005 (RSTR).</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Указанное значение равно <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
