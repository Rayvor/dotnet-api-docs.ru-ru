<Type Name="ConsoleTraceListener" FullName="System.Diagnostics.ConsoleTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d4fd15301eec1676a9712d30afaa758e56b20765" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75138189" /></Metadata><TypeSignature Language="C#" Value="public class ConsoleTraceListener : System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConsoleTraceListener extends System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ConsoleTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class ConsoleTraceListener&#xA;Inherits TextWriterTraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConsoleTraceListener : System::Diagnostics::TextWriterTraceListener" />
  <TypeSignature Language="F#" Value="type ConsoleTraceListener = class&#xA;    inherit TextWriterTraceListener" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TextWriterTraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Направляет вывод отладки и трассировки в стандартный поток вывода или стандартный поток сообщений об ошибках.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте класс <xref:System.Diagnostics.ConsoleTraceListener> для записи сообщений трассировки и отладки на консоль. Можно инициализировать объект <xref:System.Diagnostics.ConsoleTraceListener> для записи сообщений трассировки в поток <xref:System.Console.Out%2A?displayProperty=nameWithType> или в поток <xref:System.Console.Error%2A?displayProperty=nameWithType>.  
  
> [!IMPORTANT]
>  интерфейса <xref:System.IDisposable>. По окончании использования выдаленную ему память следует прямо или косвенно освободить. Чтобы удалить тип напрямую, вызовите его метод <xref:System.IDisposable.Dispose%2A> в блоке`try`/`catch`. Чтобы сделать это косвенно, используйте языковые конструкции, такие как `using` (в C#) или `Using` (в Visual Basic). Дополнительные сведения см. в разделе "Использование объекта, реализующего IDisposable" в статье об интерфейсе <xref:System.IDisposable>.  
  
 Если выходные данные трассировки и отладки включены, <xref:System.Diagnostics.ConsoleTraceListener> сообщения записываются в указанный поток <xref:System.Console?displayProperty=nameWithType>, который похож на способ написания сообщений с помощью методов <xref:System.Console.Write%2A?displayProperty=nameWithType> или <xref:System.Console.WriteLine%2A?displayProperty=nameWithType>. В консольном приложении <xref:System.Console?displayProperty=nameWithType> выходные данные и потоки ошибок записывают сообщения в существующее окно консоли, или можно перенаправлять потоки для записи в экземпляр <xref:System.IO.TextWriter?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Если консоль не существует, как в приложении Windows, сообщения, записанные в консоль, не отображаются.  
  
 Добавьте объект <xref:System.Diagnostics.ConsoleTraceListener> в соответствующую коллекцию <xref:System.Diagnostics.Trace.Listeners%2A>, если требуется, чтобы сообщения, записанные с помощью <xref:System.Diagnostics.Trace>, <xref:System.Diagnostics.TraceSource>или <xref:System.Diagnostics.Debug>, записывались в консоль. Кроме того, можно записывать сообщения непосредственно в консоль с помощью методов <xref:System.Diagnostics.Trace.Write%2A?displayProperty=nameWithType> или <xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Классы <xref:System.Diagnostics.Debug> и <xref:System.Diagnostics.Trace> используют одну и ту же коллекцию <xref:System.Diagnostics.TraceListenerCollection>, доступ к которой осуществляется через соответствующие свойства `Listeners`. При добавлении объекта <xref:System.Diagnostics.ConsoleTraceListener> в коллекцию с помощью одного из этих классов другой класс автоматически использует тот же прослушиватель.  
  
 Большинство компиляторов поддерживают вывод трассировки и отладки с помощью флагов условной компиляции. Если трассировка или Отладка не включена, сообщения, написанные с помощью классов <xref:System.Diagnostics.Debug?displayProperty=nameWithType> и <xref:System.Diagnostics.Trace?displayProperty=nameWithType>, фактически игнорируются. Синтаксис, позволяющий выполнять трассировку и отладочный вывод, зависит от компилятора. Если вы используете компиляторы, отличные C# от или Visual Basic, обратитесь к документации по компилятору.  
  
-   Чтобы включить отладку C#в, добавьте флаг **/d: Debug**в командную строку компилятора при компиляции кода или добавьте **#define отладку** в начало файла. В Visual Basic добавьте флаг **/d: debug = true** в командную строку компилятора.  
  
-   Чтобы включить трассировку C#в, добавьте флаг **/d: Trace** в командную строку компилятора при компиляции кода или добавьте **#defineную трассировку** в начало файла. В Visual Basic добавьте флаг **/d: Trace = true** в командную строку компилятора.  
  
 Можно добавить объект <xref:System.Diagnostics.ConsoleTraceListener> в коллекцию <xref:System.Diagnostics.Trace.Listeners%2A> в коде или добавить объект <xref:System.Diagnostics.ConsoleTraceListener> в коллекцию <xref:System.Diagnostics.Trace.Listeners%2A> через файл конфигурации приложения. Добавьте в код объект <xref:System.Diagnostics.ConsoleTraceListener> для записи сообщений для определенного раздела кода или пути выполнения. Добавьте объект <xref:System.Diagnostics.ConsoleTraceListener> в файл конфигурации приложения, чтобы направить все сообщения трассировки и отладки на консоль во время выполнения приложения.  
  
 Чтобы записывать сообщения трассировки и отладки в консоль для определенного раздела кода, инициализируйте объект <xref:System.Diagnostics.ConsoleTraceListener> и добавьте его в коллекцию <xref:System.Diagnostics.Trace.Listeners%2A>. Инструментирование раздела кода, содержащего сообщения с помощью классов <xref:System.Diagnostics.Trace> или <xref:System.Diagnostics.Debug>. В конце раздела кода удалите объект <xref:System.Diagnostics.ConsoleTraceListener> из коллекции <xref:System.Diagnostics.Trace.Listeners%2A> и вызовите метод <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> для <xref:System.Diagnostics.ConsoleTraceListener>.  
  
 Чтобы направить все сообщения трассировки и отладки на консоль во время выполнения приложения, добавьте <xref:System.Diagnostics.ConsoleTraceListener> объект в файл конфигурации приложения. Измените файл конфигурации, соответствующий имени приложения, или файл App. config в проекте [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]. В этом файле вставьте элемент для <xref:System.Diagnostics.ConsoleTraceListener>.  
  
 В следующем примере в коллекцию <xref:System.Diagnostics.Trace.Listeners%2A> добавляется объект <xref:System.Diagnostics.ConsoleTraceListener> с именем `configConsoleListener`.  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="configConsoleListener"            type="System.Diagnostics.ConsoleTraceListener" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
 </configuration>  
```  
  
 Дополнительные сведения о добавлении прослушивателей трассировки в файл конфигурации приложения см. в разделе [&lt;listeners&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-trace.md).  
  
   
  
## Examples  
 В следующем примере кода реализуется консольное приложение, состоящее из класса с двумя открытыми методами.  
  
 Метод `Main` проверяет аргументы командной строки и определяет, следует ли перенаправлять выходные данные трассировки в стандартный поток вывода или стандартный выходной поток. `Main` создает и инициализирует объект <xref:System.Diagnostics.ConsoleTraceListener> для указанного <xref:System.Console> выходного потока и добавляет этот объект в коллекцию прослушивателей трассировки. Затем он вызывает метод `WriteEnvironmentInfoToTrace`, который записывает сведения о выполняющейся среде и конфигурации прослушивателя трассировки в выходные данные трассировки.  
  
 При запуске примера приложения сведения о конфигурации среды и трассировки записываются в указанный поток вывода консоли через объект <xref:System.Diagnostics.ConsoleTraceListener>.  
  
 [!code-csharp[Diagnostics_ConsoleTraceListener#1](~/samples/snippets/csharp/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/CS/program.cs#1)]
 [!code-vb[Diagnostics_ConsoleTraceListener#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/VB/consoletrace.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
    <altmember cref="T:System.Console" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.ConsoleTraceListener" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConsoleTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConsoleTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConsoleTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.ConsoleTraceListener" /> с записью выходных данных трассировки в стандартный поток вывода.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор инициализирует объект <xref:System.Diagnostics.ConsoleTraceListener> для записи сообщений в поток <xref:System.Console.Out%2A?displayProperty=nameWithType>. Его свойство <xref:System.Diagnostics.TraceListener.Name%2A> инициализируется пустой строкой ("").  
  
   
  
## Examples  
 В следующем примере кода инициализируется объект <xref:System.Diagnostics.ConsoleTraceListener> для указанного <xref:System.Console> выходного потока и добавляется в коллекцию прослушивателей трассировки. Этот пример кода является частью большого примера, приведенного для класса <xref:System.Diagnostics.ConsoleTraceListener>.  
  
 [!code-csharp[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/csharp/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/CS/program.cs#2)]
 [!code-vb[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/VB/consoletrace.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="P:System.Console.Out" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConsoleTraceListener (bool useErrorStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool useErrorStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConsoleTraceListener.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (useErrorStream As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConsoleTraceListener(bool useErrorStream);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.ConsoleTraceListener : bool -&gt; System.Diagnostics.ConsoleTraceListener" Usage="new System.Diagnostics.ConsoleTraceListener useErrorStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="useErrorStream" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useErrorStream">Значение <see langword="true" /> для записи выходных данных отладки и трассировки в стандартный поток ошибок или значение <see langword="false" /> для записи выходных данных отладки и трассировки в стандартный поток вывода.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.ConsoleTraceListener" /> с возможностью записи выходных данных трассировки в стандартный поток вывода или стандартный поток ошибок.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор инициализирует объект <xref:System.Diagnostics.ConsoleTraceListener> для записи сообщений в <xref:System.Console.Out%2A?displayProperty=nameWithType> или в поток <xref:System.Console.Error%2A?displayProperty=nameWithType>. Его свойство <xref:System.Diagnostics.TraceListener.Name%2A> инициализируется пустой строкой ("").  
  
   
  
## Examples  
 В следующем примере кода инициализируется объект <xref:System.Diagnostics.ConsoleTraceListener> для указанного <xref:System.Console> выходного потока и добавляется в коллекцию прослушивателей трассировки. Этот пример кода является частью большого примера, приведенного для класса <xref:System.Diagnostics.ConsoleTraceListener>.  
  
 [!code-csharp[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/csharp/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/CS/program.cs#2)]
 [!code-vb[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/VB/consoletrace.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Console" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConsoleTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="consoleTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Закрывает выходные данные для потока, заданного для этого прослушивателя трассировки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поток, указанный для данного экземпляра <xref:System.Diagnostics.ConsoleTraceListener> (поток <xref:System.Console.Out%2A?displayProperty=nameWithType> или поток <xref:System.Console.Error%2A?displayProperty=nameWithType>) закрыт.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
