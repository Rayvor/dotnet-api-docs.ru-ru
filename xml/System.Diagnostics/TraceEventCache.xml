<Type Name="TraceEventCache" FullName="System.Diagnostics.TraceEventCache">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f248477caa08d5845236670b0faaf374d5af7298" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70638156" /></Metadata><TypeSignature Language="C#" Value="public class TraceEventCache" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TraceEventCache extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceEventCache" />
  <TypeSignature Language="VB.NET" Value="Public Class TraceEventCache" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceEventCache" />
  <TypeSignature Language="F#" Value="type TraceEventCache = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e4ee0-101">Предоставляет данные событий трассировки специфичные для потока и процесса.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-101">Provides trace event data specific to a thread and a process.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e4ee0-102"><xref:System.Diagnostics.TraceEventCache> Класс, разработанный как оптимизация производительности для вызовов прослушивателей трассировки, представляет интерес только разработчикам, создающим пользовательские прослушиватели трассировки.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-102">The <xref:System.Diagnostics.TraceEventCache> class, designed as a performance optimization for trace listener calls, is of interest only to developers creating custom trace listeners.</span></span>  
  
 <span data-ttu-id="e4ee0-103"><xref:System.Diagnostics.TraceEventCache> Класс используется в качестве параметра в методах трассировки для точного выявления источника события трассировки.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-103">The <xref:System.Diagnostics.TraceEventCache> class is used as a parameter in tracing methods to accurately identify the source of a trace event.</span></span> <span data-ttu-id="e4ee0-104">Примеры методов, которые используют <xref:System.Diagnostics.TraceEventCache> , <xref:System.Diagnostics.TraceListener.TraceEvent%2A?displayProperty=nameWithType> — <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A?displayProperty=nameWithType>и.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-104">Examples of methods that use <xref:System.Diagnostics.TraceEventCache> are <xref:System.Diagnostics.TraceListener.TraceEvent%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e4ee0-105"><xref:System.Diagnostics.TraceEventCache.LogicalOperationStack%2A> Свойство содержит данные, которые можно использовать для корреляции трассировки с соответствующими трассировками.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-105">The <xref:System.Diagnostics.TraceEventCache.LogicalOperationStack%2A> property contains data that can be used to correlate the trace with related traces.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceEventCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceEventCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceEventCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e4ee0-106">Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.TraceEventCache" />.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-106">Initializes a new instance of the <see cref="T:System.Diagnostics.TraceEventCache" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Callstack">
      <MemberSignature Language="C#" Value="public string Callstack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Callstack" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.Callstack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Callstack As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Callstack { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Callstack : string" Usage="System.Diagnostics.TraceEventCache.Callstack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4ee0-107">Возвращает стек вызовов для текущего потока.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-107">Gets the call stack for the current thread.</span></span></summary>
        <value><span data-ttu-id="e4ee0-108">Строка, содержащая сведения о трассировке стека.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-108">A string containing stack trace information.</span></span> <span data-ttu-id="e4ee0-109">Это значение может быть пустой строкой ("").</span><span class="sxs-lookup"><span data-stu-id="e4ee0-109">This value can be an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4ee0-110">Свойство получает стек вызовов <xref:System.Environment.StackTrace%2A> из свойства <xref:System.Environment> класса. <xref:System.Diagnostics.TraceEventCache.Callstack%2A></span><span class="sxs-lookup"><span data-stu-id="e4ee0-110">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property gets the call stack from the <xref:System.Environment.StackTrace%2A> property of the <xref:System.Environment> class.</span></span> <span data-ttu-id="e4ee0-111">Значение свойства перечисляет вызовы метода в обратном хронологическом порядке.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-111">The property value lists method calls in reverse chronological order.</span></span> <span data-ttu-id="e4ee0-112">Это значит, что самый последний вызов метода описан первым.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-112">That is, the most recent method call is described first.</span></span> <span data-ttu-id="e4ee0-113">Для каждого вызова метода в стеке отображается одна строка сведений о трассировке стека.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-113">One line of stack trace information is listed for each method call on the stack.</span></span> <span data-ttu-id="e4ee0-114">Для получения дополнительной информации см. <xref:System.Environment.StackTrace%2A>.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-114">For more information, see <xref:System.Environment.StackTrace%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="e4ee0-115">для полного доступа к ресурсу, защищенному разрешением.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-115">for full access to the resource protected by the permission.</span></span> <span data-ttu-id="e4ee0-116">Связанное перечисление:<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="e4ee0-116">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DateTime">
      <MemberSignature Language="C#" Value="public DateTime DateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DateTime" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.DateTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DateTime : DateTime" Usage="System.Diagnostics.TraceEventCache.DateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4ee0-117">Возвращает дату и время, когда произошла трассировка событий.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-117">Gets the date and time at which the event trace occurred.</span></span></summary>
        <value><span data-ttu-id="e4ee0-118">Структура <see cref="T:System.DateTime" />, значением которой является дата и время, выраженные в формате (UTC).</span><span class="sxs-lookup"><span data-stu-id="e4ee0-118">A <see cref="T:System.DateTime" /> structure whose value is a date and time expressed in Coordinated Universal Time (UTC).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4ee0-119">При первом обращении к свойству в экземпляре <xref:System.Diagnostics.TraceEventCache> класса возвращается текущее время.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-119">The first time the property is accessed in an instance of the <xref:System.Diagnostics.TraceEventCache> class, the current time is returned.</span></span> <span data-ttu-id="e4ee0-120">Последующие запросы этого свойства в этом экземпляре возвращают то <xref:System.DateTime> же значение, что позволяет использовать его в качестве метки времени.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-120">Subsequent queries of this property in that instance return that same <xref:System.DateTime> value, allowing it to be used as a timestamp.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalOperationStack">
      <MemberSignature Language="C#" Value="public System.Collections.Stack LogicalOperationStack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Stack LogicalOperationStack" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.LogicalOperationStack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalOperationStack As Stack" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Stack ^ LogicalOperationStack { System::Collections::Stack ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalOperationStack : System.Collections.Stack" Usage="System.Diagnostics.TraceEventCache.LogicalOperationStack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Stack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4ee0-121">Возвращает данные корреляции, содержащиеся в стеке.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-121">Gets the correlation data, contained in a stack.</span></span></summary>
        <value><span data-ttu-id="e4ee0-122">Поток <see cref="T:System.Collections.Stack" />, содержащий данные корреляции.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-122">A <see cref="T:System.Collections.Stack" /> containing correlation data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4ee0-123">Данные корреляции хранятся как объект в контексте вызова с именем "System. Diagnostics. Trace. Коррелатионманажерслот".</span><span class="sxs-lookup"><span data-stu-id="e4ee0-123">The correlation data is stored as an object in the call context with the name "System.Diagnostics.Trace.CorrelationManagerSlot".</span></span> <span data-ttu-id="e4ee0-124"><xref:System.Diagnostics.CorrelationManager> Класс предоставляет методы, используемые для хранения удостоверения логической операции в контексте с привязкой к потоку, и автоматически помечают каждое событие трассировки, созданное потоком, хранимым удостоверением.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-124">The <xref:System.Diagnostics.CorrelationManager> class provides methods used to store a logical operation identity in a thread-bound context and automatically tag each trace event generated by the thread with the stored identity.</span></span> <span data-ttu-id="e4ee0-125">Доступ к осуществляется <xref:System.Diagnostics.Trace.CorrelationManager%2A?displayProperty=nameWithType> через свойство. <xref:System.Diagnostics.CorrelationManager></span><span class="sxs-lookup"><span data-stu-id="e4ee0-125">The <xref:System.Diagnostics.CorrelationManager> is accessed through the <xref:System.Diagnostics.Trace.CorrelationManager%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="e4ee0-126">Каждый вызов <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> метода помещает новое удостоверение логической операции в стек.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-126">Each call to the <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> method pushes a new logical operation identity onto the stack.</span></span> <span data-ttu-id="e4ee0-127">Каждый вызов <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A> метода выводит логическое удостоверение операции из стека.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-127">Each call to the <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A> method pops a logical operation identity from the stack</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessId">
      <MemberSignature Language="C#" Value="public int ProcessId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProcessId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.ProcessId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProcessId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProcessId : int" Usage="System.Diagnostics.TraceEventCache.ProcessId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4ee0-128">Возвращает уникальный идентификатор текущего процесса.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-128">Gets the unique identifier of the current process.</span></span></summary>
        <value><span data-ttu-id="e4ee0-129">Созданный системой уникальный идентификатор текущего процесса.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-129">The system-generated unique identifier of the current process.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4ee0-130">До завершения процесса идентификатор процесса однозначно определяет процесс во всей системе.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-130">Until the process terminates, the process identifier uniquely identifies the process throughout the system.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="e4ee0-131">для возможности вызова неуправляемого кода.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-131">for the ability to call unmanaged code.</span></span> <span data-ttu-id="e4ee0-132">Связанное перечисление:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="e4ee0-132">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ThreadId">
      <MemberSignature Language="C#" Value="public string ThreadId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreadId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.ThreadId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThreadId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreadId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreadId : string" Usage="System.Diagnostics.TraceEventCache.ThreadId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4ee0-133">Возвращает уникальный идентификатор текущего управляемого потока.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-133">Gets a unique identifier for the current managed thread.</span></span></summary>
        <value><span data-ttu-id="e4ee0-134">Строка, представляющая уникальный целочисленный идентификатор для этого управляемого потока.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-134">A string that represents a unique integer identifier for this managed thread.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4ee0-135">Идентификатор потока — это значение <xref:System.Threading.Thread.ManagedThreadId%2A?displayProperty=nameWithType> свойства, отформатированное как строка.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-135">The thread identifier is the value of the <xref:System.Threading.Thread.ManagedThreadId%2A?displayProperty=nameWithType> property formatted as a string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public long Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Timestamp" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.Timestamp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timestamp As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Timestamp { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Timestamp : int64" Usage="System.Diagnostics.TraceEventCache.Timestamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e4ee0-136">Получает текущее число тактов временного механизма.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-136">Gets the current number of ticks in the timer mechanism.</span></span></summary>
        <value><span data-ttu-id="e4ee0-137">Значение счетчика тактов базового временного механизма.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-137">The tick counter value of the underlying timer mechanism.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4ee0-138">Метод доступа Get вызывает <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A?displayProperty=nameWithType> метод для получения метки времени.</span><span class="sxs-lookup"><span data-stu-id="e4ee0-138">The get accessor calls the <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A?displayProperty=nameWithType> method to get the timestamp.</span></span> <span data-ttu-id="e4ee0-139">Если класс использует счетчик производительности с высоким разрешением, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> возвращает текущее значение этого счетчика. <xref:System.Diagnostics.Stopwatch></span><span class="sxs-lookup"><span data-stu-id="e4ee0-139">If the <xref:System.Diagnostics.Stopwatch> class uses a high-resolution performance counter, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> returns the current value of that counter.</span></span> <span data-ttu-id="e4ee0-140">Если класс использует системный таймер, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> возвращает <xref:System.DateTime.Ticks%2A> свойство объекта  <xref:System.DateTime.Now%2A?displayProperty=nameWithType> .  <xref:System.Diagnostics.Stopwatch></span><span class="sxs-lookup"><span data-stu-id="e4ee0-140">If the <xref:System.Diagnostics.Stopwatch> class uses the system timer, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> returns the <xref:System.DateTime.Ticks%2A> property of <xref:System.DateTime.Now%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
