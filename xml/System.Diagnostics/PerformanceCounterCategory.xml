<Type Name="PerformanceCounterCategory" FullName="System.Diagnostics.PerformanceCounterCategory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9a342238a6e395ebbd15934beaa074d05afb683e" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70437940" /></Metadata><TypeSignature Language="C#" Value="public sealed class PerformanceCounterCategory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PerformanceCounterCategory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.PerformanceCounterCategory" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PerformanceCounterCategory" />
  <TypeSignature Language="C++ CLI" Value="public ref class PerformanceCounterCategory sealed" />
  <TypeSignature Language="F#" Value="type PerformanceCounterCategory = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет объект производительности, который определяет категорию счетчиков производительности.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Для создания или удаления счетчика производительности требуется синхронизация базового кода с помощью именованного мьютекса. Если приложение с высоким уровнем привилегий блокирует именованный мьютекс, попытки создать или удалить счетчик производительности приводят к тому, что приложение перестает отвечать, пока блокировка не будет снята. Чтобы избежать этой проблемы, никогда не предоставляйте <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> разрешение на ненадежный код. Кроме того, <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> разрешение, потенциально разрешающее обход других разрешений, может быть предоставлено только высоко доверенному коду.  
  
 Свойство <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> экземпляра отображается в поле Объект производительности диалогового окна Добавление счетчика приложения "средство просмотра производительности". <xref:System.Diagnostics.PerformanceCounterCategory>  
  
 <xref:System.Diagnostics.PerformanceCounterCategory> Класс предоставляет несколько методов для взаимодействия с счетчиками и категориями на компьютере. <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> Методы позволяют определять пользовательские категории. <xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A> Метод предоставляет способ удаления категорий с компьютера. Метод позволяет просматривать список категорий, в то время как <xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A> извлекает все данные счетчика и экземпляра, связанные с одной категорией. <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A>  
  
 Счетчик производительности публикует данные о производительности приложения. Категории включают физические компоненты (например, процессоры, диски и память) и системные объекты (например, процессы и потоки). Системные счетчики, связанные с одним и тем же объектом производительности, группируются в категорию, которая указывает на их общий фокус. При создании экземпляра <xref:System.Diagnostics.PerformanceCounter> класса сначала указывается Категория, с которой будет взаимодействовать компонент, а затем выбирается счетчик из этой категории.  
  
 Например, одна категория счетчиков Windows — это категория памяти. Системные счетчики в этой категории следят за данными памяти, например количеством доступных байтов и числом кэшированных байтов. Если вы хотите работать с кэшированными байтами в приложении, создайте экземпляр <xref:System.Diagnostics.PerformanceCounter> компонента, подключите его к категории памяти, а затем выберите соответствующий счетчик (в данном случае кэшированные байты) из этой категории.  
  
 Несмотря на то что в системе доступно гораздо больше категорий счетчиков, категории, которые, вероятно, взаимодействуют с наиболее часто, — это категории кэш, память, объекты, физический диск, процесс, процессор, сервер, система и поток.  
  
> [!IMPORTANT]
>  <xref:System.Diagnostics.PerformanceCounter.RemoveInstance%2A> Метод <xref:System.Diagnostics.PerformanceCounter>  в классе освободит счетчик и, если для этой категории выбран параметр повторного использования, будет повторно использован экземпляр счетчика. Это может вызвать состояние гонки, если другой процесс или даже другая часть кода пытается выполнить запись в экземпляр счетчика.  
  
> [!NOTE]
>  Настоятельно рекомендуется создавать новые категории счетчиков производительности во время установки приложения, а не во время выполнения приложения. Это позволяет операционной системе обновлять список зарегистрированных категорий счетчиков производительности. Если список не обновлялся, попытка использовать категорию завершится ошибкой.  
  
> [!NOTE]
>  Категории счетчиков производительности, установленные [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] с использованием отдельной общей памяти, каждая из категорий счетчиков производительности имеет собственную память. Можно указать размер отдельной общей памяти, создав DWORD с именем филемаппингсизе в разделе реестра HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\\*\<имя категории >* \перформанце. Значение Филемаппингсизе устанавливается равным общему объему памяти для категории. Размер по умолчанию — 131072 десятичный. Если значение филемаппингсизе отсутствует, `fileMappingSize` используется значение атрибута `performanceCounters` для элемента, указанного в файле Machine. config, что приводит к дополнительным затратам на обработку файла конфигурации. Можно повысить производительность при запуске приложения, задав размер сопоставления файлов в реестре. Дополнительные сведения о размере сопоставления файлов см. в разделе [ &lt;PerformanceCounters&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/performancecounters-element.md).  
  
   
  
## Examples  
 В следующем примере кода определяется, <xref:System.Diagnostics.PerformanceCounter> <xref:System.Diagnostics.PerformanceCounterCategory> существует ли объект и на локальном компьютере или на другом компьютере. Если эти объекты не существуют на локальном компьютере, в примере их можно создать. Он использует <xref:System.Diagnostics.PerformanceCounterCategory.Exists%2A> метод, чтобы определить, существует <xref:System.Diagnostics.PerformanceCounterCategory> ли объект.  <xref:System.Diagnostics.PerformanceCounterCategory> Если не существует и не указано имя счетчика или компьютер является удаленным компьютером, в примере выполняется выход.  
  
 <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A> Если указано <xref:System.Diagnostics.PerformanceCounter> имя, в примере используется метод и отображается результат для пользователя. Если объект <xref:System.Diagnostics.PerformanceCounter> не существует, пользователь может удалить и создать его <xref:System.Diagnostics.PerformanceCounterCategory> заново с новым <xref:System.Diagnostics.PerformanceCounter>. Если пользователь делает это, Категория удаляется с помощью <xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A> метода.  
  
 При запросе пример теперь создает новый <xref:System.Diagnostics.PerformanceCounterCategory> объект и <xref:System.Diagnostics.PerformanceCounter> использует <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> метод. Если указано имя экземпляра, то в примере используется <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> метод и отображается результат.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.Class#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.Class/CS/perfcountercatcreateexist.cs#27)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.Class#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.Class/VB/perfcountercatcreateexist.vb#27)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.PerformanceCounter" />
    <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
    <altmember cref="T:System.Diagnostics.CounterSample" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.PerformanceCounterCategory" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounterCategory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounterCategory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.PerformanceCounterCategory" />, оставляет пустым свойство <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> и задает в качестве значения свойства <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> локальный компьютер.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство должно быть установлено перед связыванием этого <xref:System.Diagnostics.PerformanceCounterCategory> экземпляра с объектом производительности на сервере. <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> В противном случае создается исключение.  
  
   
  
## Examples  
 В следующем примере кода в командной <xref:System.Diagnostics.PerformanceCounterCategory> строке принимается имя и имя компьютера.  Он создает <xref:System.Diagnostics.PerformanceCounterCategory> с помощью перегрузки конструктора, соответствующей указанному количеству параметров, а затем отображает его свойства.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatctor.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatctor.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">для чтения категорий счетчиков производительности. Связанное перечисление: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounterCategory (string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounterCategory(System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounterCategory : string -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="new System.Diagnostics.PerformanceCounterCategory categoryName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Имя категории счетчиков производительности (объекта производительности), с которым связывается данный экземпляр <see cref="T:System.Diagnostics.PerformanceCounterCategory" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.PerformanceCounterCategory" />, задает для свойства <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> указанное значение, а в качестве значения свойства <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> устанавливает локальный компьютер.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода в командной <xref:System.Diagnostics.PerformanceCounterCategory> строке принимается имя и имя компьютера. Он создает <xref:System.Diagnostics.PerformanceCounterCategory> с помощью перегрузки конструктора, которая подходит для указанного числа параметров, а затем отображает его свойства.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatctor.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatctor.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Значением параметра <paramref name="categoryName" /> является пустая строка ("").</exception>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="categoryName" /> — <see langword="null" />.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">для чтения сведений о категории, таких как имя категории. Связанное перечисление: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounterCategory (string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounterCategory(System::String ^ categoryName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounterCategory : string * string -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="new System.Diagnostics.PerformanceCounterCategory (categoryName, machineName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Имя категории счетчиков производительности (объекта производительности), с которым связывается данный экземпляр <see cref="T:System.Diagnostics.PerformanceCounterCategory" />.</param>
        <param name="machineName">Компьютер, на котором находятся счетчик производительности и связанная с ним категория.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> и присваивает свойствам <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> и <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> указанные значения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода в командной <xref:System.Diagnostics.PerformanceCounterCategory> строке принимается имя и имя компьютера. Он создает <xref:System.Diagnostics.PerformanceCounterCategory> с помощью перегрузки конструктора, которая подходит для указанного числа параметров, а затем отображает его свойства.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatctor.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatctor.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Значением параметра <paramref name="categoryName" /> является пустая строка ("").  
  
- или - 
Неправильный синтаксис параметра <paramref name="machineName" />.</exception>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="categoryName" /> — <see langword="null" />.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">для чтения сведений о категории, таких как имя компьютера и категории. Связанное перечисление: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CategoryHelp">
      <MemberSignature Language="C#" Value="public string CategoryHelp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryHelp" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.CategoryHelp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CategoryHelp As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryHelp { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CategoryHelp : string" Usage="System.Diagnostics.PerformanceCounterCategory.CategoryHelp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает текст справки для данной категории.</summary>
        <value>Описание объекта производительности, который измеряется этой категорией.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода создается <xref:System.Diagnostics.PerformanceCounterCategory> <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor>с помощью. Он запрашивает у пользователя <xref:System.Diagnostics.PerformanceCounterCategory> имена компьютеров и, а затем <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> устанавливает свойства и <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> из указанных значений. Затем <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>он отображает значения свойств, <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>и <xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A> или отображает сообщение об ошибке, если доступ к <xref:System.Diagnostics.PerformanceCounterCategory> объекту невозможен.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatProps.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatprops.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> — <see langword="null" />. Перед извлечением справки для категории следует задать ее имя.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.CounterHelp" />
      </Docs>
    </Member>
    <Member MemberName="CategoryName">
      <MemberSignature Language="C#" Value="public string CategoryName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryName : string with get, set" Usage="System.Diagnostics.PerformanceCounterCategory.CategoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя объекта производительности, который определяет эту категорию.</summary>
        <value>Имя категории счетчиков производительности (объекта производительности), с которым связывается данный экземпляр <see cref="T:System.Diagnostics.PerformanceCounterCategory" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода создается <xref:System.Diagnostics.PerformanceCounterCategory> <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor>с помощью. Он запрашивает у пользователя <xref:System.Diagnostics.PerformanceCounterCategory> имена компьютеров и, а затем <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> устанавливает свойства и <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> из указанных значений. Затем <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>он отображает значения свойств, <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>и <xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A> или отображает сообщение об ошибке, если доступ к <xref:System.Diagnostics.PerformanceCounterCategory> объекту невозможен.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatProps.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatprops.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Значением параметра <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> является пустая строка ("").</exception>
        <exception cref="T:System.ArgumentNullException">Значение параметра <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> — <see langword="null" />.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">для чтения категорий счетчиков производительности. Связанное перечисление: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CategoryType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounterCategoryType CategoryType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.PerformanceCounterCategoryType CategoryType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.CategoryType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CategoryType As PerformanceCounterCategoryType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::PerformanceCounterCategoryType CategoryType { System::Diagnostics::PerformanceCounterCategoryType get(); };" />
      <MemberSignature Language="F#" Value="member this.CategoryType : System.Diagnostics.PerformanceCounterCategoryType" Usage="System.Diagnostics.PerformanceCounterCategory.CategoryType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategoryType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает тип категории счетчика производительности.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство указывает, может <xref:System.Diagnostics.PerformanceCounterCategory> ли объект иметь несколько экземпляров. <xref:System.Diagnostics.PerformanceCounterCategory.CategoryType%2A> Возможные значения: <xref:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance>, <xref:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance>или <xref:System.Diagnostics.PerformanceCounterCategoryType.Unknown>.  
  
 Существует два типа категорий счетчиков производительности: с одним экземпляром и с несколькими экземплярами. По умолчанию категория является одиночным экземпляром, когда она создается и становится многоэкземплярной при добавлении другого экземпляра. Категории создаются при настройке приложения, а экземпляры добавляются во время выполнения. В .NET Framework версиях 1,0 и 1,1 нет необходимости в том, чтобы категория счетчиков производительности была многоэкземплярной или единственной. [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]В перечисление используется для указания того, может ли счетчик производительности иметь несколько экземпляров. <xref:System.Diagnostics.PerformanceCounterCategoryType>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CounterExists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Определяет, зарегистрирован ли указанный счетчик в определенной категории.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CounterExists">
      <MemberSignature Language="C#" Value="public bool CounterExists (string counterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CounterExists(string counterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CounterExists (counterName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CounterExists(System::String ^ counterName);" />
      <MemberSignature Language="F#" Value="member this.CounterExists : string -&gt; bool" Usage="performanceCounterCategory.CounterExists counterName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">Имя искомого счетчика производительности.</param>
        <summary>Определяет, является ли заданный счетчик зарегистрированным в категории, на которую указывают свойства <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> и <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />.</summary>
        <returns>Значение <see langword="true" />, если счетчик зарегистрирован в категории, определяемой свойствами <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> и <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Необходимо задать <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> свойство перед вызовом этого метода. В противном случае создается исключение.  
  
 Если <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> свойство не задано, этот метод использует локальный компьютер (".").  
  
> [!NOTE]
>  Для чтения счетчиков производительности в Windows Vista и более поздних версиях, Windows XP Professional x64 Edition или Windows Server 2003 необходимо быть членом группы "Пользователи системного монитора" или обладать правами администратора.  
>   
>  Чтобы не допустить повышения привилегий для доступа к счетчикам производительности в Windows Vista и более поздних версиях, добавьте себя в группу "Пользователи системного монитора".  
>   
>  В Windows Vista и более поздних версиях права доступа пользователя определяются контролем учетных записей. Члену встроенной группы "Администраторы" присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Чтобы выполнить код, обращающийся к счетчикам производительности, необходимо сначала повысить привилегии обычного пользователя до администратора. Это можно сделать при запуске приложения, , щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора.  
  
   
  
## Examples  
 В следующем примере кода определяется, существует <xref:System.Diagnostics.PerformanceCounter> ли объект. Он возвращает имя категории, имя счетчика и имя компьютера из командной строки, если они заданы. Он создает <xref:System.Diagnostics.PerformanceCounterCategory> объект с помощью соответствующего <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor%2A>объекта. Затем он использует <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%28System.String%29> метод, чтобы определить, существует ли <xref:System.Diagnostics.PerformanceCounter> указанный объект, и информирует пользователя.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatobjexists.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatobjcountexists.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="counterName" /> — <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> не установлено.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CounterExists">
      <MemberSignature Language="C#" Value="public static bool CounterExists (string counterName, string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CounterExists(string counterName, string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CounterExists (counterName As String, categoryName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CounterExists(System::String ^ counterName, System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="static member CounterExists : string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.CounterExists (counterName, categoryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">Имя искомого счетчика производительности.</param>
        <param name="categoryName">Имя категории счетчиков производительности (объекта производительности), с которым связан указанный счетчик производительности.</param>
        <summary>Определяет, зарегистрирован ли заданный счетчик в указанной категории на локальном компьютере.</summary>
        <returns>Значение <see langword="true" />, если счетчик зарегистрирован в указанной категории на локальном компьютере; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Для чтения счетчиков производительности в Windows Vista и более поздних версиях, Windows XP Professional x64 Edition или Windows Server 2003 необходимо быть членом группы "Пользователи системного монитора" или обладать правами администратора.  
>   
>  Чтобы не допустить повышения привилегий для доступа к счетчикам производительности в Windows Vista и более поздних версиях, добавьте себя в группу "Пользователи системного монитора".  
>   
>  В Windows Vista и более поздних версиях права доступа пользователя определяются контролем учетных записей. Члену встроенной группы "Администраторы" присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Чтобы выполнить код, обращающийся к счетчикам производительности, необходимо сначала повысить привилегии обычного пользователя до администратора. Это можно сделать при запуске приложения, , щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора.  
  
   
  
## Examples  
 В следующем примере кода определяется, существует <xref:System.Diagnostics.PerformanceCounter> ли объект. Он возвращает имя категории, имя счетчика и имя компьютера из командной строки, если они заданы. Он использует статические перегрузки <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A> метода, чтобы определить, существует ли указанное <xref:System.Diagnostics.PerformanceCounter> имя в. <xref:System.Diagnostics.PerformanceCounterCategory> Перегрузка выбирается в зависимости от того, указано ли имя компьютера.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatcounterexists.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatcountexists.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="categoryName" /> — <see langword="null" />.  
  
- или - 
Значение параметра <paramref name="counterName" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Значением параметра <paramref name="categoryName" /> является пустая строка ("").</exception>
        <exception cref="T:System.InvalidOperationException">Имя категории не существует.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">для чтения категорий счетчиков производительности. Связанное перечисление: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CounterExists">
      <MemberSignature Language="C#" Value="public static bool CounterExists (string counterName, string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CounterExists(string counterName, string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CounterExists (counterName As String, categoryName As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CounterExists(System::String ^ counterName, System::String ^ categoryName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member CounterExists : string * string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.CounterExists (counterName, categoryName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">Имя искомого счетчика производительности.</param>
        <param name="categoryName">Имя категории счетчиков производительности (объекта производительности), с которым связан указанный счетчик производительности.</param>
        <param name="machineName">Имя компьютера, на котором находятся категория счетчиков производительности и связанный с ней счетчик.</param>
        <summary>Определяет, зарегистрирован ли заданный счетчик в указанной категории на удаленном компьютере.</summary>
        <returns>Значение <see langword="true" />, если счетчик зарегистрирован в указанной категории на заданном компьютере; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Для чтения счетчиков производительности в Windows Vista и более поздних версиях, Windows XP Professional x64 Edition или Windows Server 2003 необходимо быть членом группы "Пользователи системного монитора" или обладать правами администратора.  
>   
>  Чтобы не допустить повышения привилегий для доступа к счетчикам производительности в Windows Vista и более поздних версиях, добавьте себя в группу "Пользователи системного монитора".  
>   
>  В Windows Vista и более поздних версиях права доступа пользователя определяются контролем учетных записей. Члену встроенной группы "Администраторы" присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Чтобы выполнить код, обращающийся к счетчикам производительности, необходимо сначала повысить привилегии обычного пользователя до администратора. Это можно сделать при запуске приложения, , щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора.  
  
   
  
## Examples  
 В следующем примере кода определяется, существует <xref:System.Diagnostics.PerformanceCounter> ли объект. Он возвращает имя категории, имя счетчика и имя компьютера из командной строки, если они заданы. Он использует статические перегрузки <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A> метода, чтобы определить, существует ли указанное <xref:System.Diagnostics.PerformanceCounter> имя в. <xref:System.Diagnostics.PerformanceCounterCategory> Перегрузка выбирается в зависимости от того, указано ли имя компьютера.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatcounterexists.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatcountexists.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="categoryName" /> — <see langword="null" />.  
  
- или - 
Значение параметра <paramref name="counterName" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Значением параметра <paramref name="categoryName" /> является пустая строка ("").  
  
-или- 
<paramref name="machineName" /> не является допустимым.</exception>
        <exception cref="T:System.InvalidOperationException">Имя категории не существует.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">для чтения категорий счетчиков производительности. Связанное перечисление: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Регистрирует в системе пользовательскую категорию счетчиков производительности и один или несколько счетчиков.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.CounterCreationDataCollection counterData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, class System.Diagnostics.CounterCreationDataCollection counterData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, counterData As CounterCreationDataCollection) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::Diagnostics::CounterCreationDataCollection ^ counterData);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * System.Diagnostics.CounterCreationDataCollection -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="System.Diagnostics.PerformanceCounterCategory.Create (categoryName, categoryHelp, counterData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use another overload that uses PerformanceCounterCategoryType instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.Obsolete("This method has been deprecated.  Please use System.Diagnostics.PerformanceCounterCategory.Create(string categoryName, string categoryHelp, PerformanceCounterCategoryType categoryType, CounterCreationDataCollection counterData) instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0;netcore-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated.  Please use System.Diagnostics.PerformanceCounterCategory.Create(string categoryName, string categoryHelp, PerformanceCounterCategoryType categoryType, CounterCreationDataCollection counterData) instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="categoryHelp" Type="System.String" />
        <Parameter Name="counterData" Type="System.Diagnostics.CounterCreationDataCollection" />
      </Parameters>
      <Docs>
        <param name="categoryName">Имя пользовательской категории счетчиков производительности, которую нужно создать и зарегистрировать в системе.</param>
        <param name="categoryHelp">Описание пользовательской категории.</param>
        <param name="counterData">Коллекция <see cref="T:System.Diagnostics.CounterCreationDataCollection" />, в которой определяются счетчики, создаваемые в новой категории.</param>
        <summary>Регистрирует пользовательскую категорию счетчиков производительности, содержащую указанные счетчики на локальном компьютере.</summary>
        <returns>Категория <see cref="T:System.Diagnostics.PerformanceCounterCategory" />, связанная с новой пользовательской категорией, или объект производительности.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Для чтения счетчиков производительности в Windows Vista и более поздних версиях, Windows XP Professional x64 Edition или Windows Server 2003 необходимо быть членом группы "Пользователи системного монитора" или обладать правами администратора.  
>   
>  Чтобы не допустить повышения привилегий для доступа к счетчикам производительности в Windows Vista и более поздних версиях, добавьте себя в группу "Пользователи системного монитора".  
>   
>  В Windows Vista и более поздних версиях права доступа пользователя определяются контролем учетных записей. Члену встроенной группы "Администраторы" присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Чтобы выполнить код, обращающийся к счетчикам производительности, необходимо сначала повысить привилегии обычного пользователя до администратора. Это можно сделать при запуске приложения, , щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора.  
  
   
  
## Examples  
 В следующем примере кода определяется, <xref:System.Diagnostics.PerformanceCounterCategory> существует ли объект с именем Orders. В противном случае он создает <xref:System.Diagnostics.PerformanceCounterCategory> объект с <xref:System.Diagnostics.CounterCreationDataCollection> помощью объекта, который содержит два счетчика производительности.  
  
 [!code-cpp[PerfCounter_ccd#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter_ccd/CPP/ccd.cpp#1)]
 [!code-csharp[PerfCounter_ccd#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter_ccd/CS/ccd.cs#1)]
 [!code-vb[PerfCounter_ccd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter_ccd/VB/ccd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Имя счетчика, указанное в коллекции <paramref name="counterData" />, — <see langword="null" /> или пустая строка ("").  
  
-или- 
Счетчик, указанный в коллекции <paramref name="counterData" />, уже существует.  
  
- или - 
Синтаксис параметра <paramref name="counterName" /> недопустим. Возможно, значение параметра содержит обратную косую черту ("\\") или его длина превышает 80 символов.</exception>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="categoryName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Категория уже существует на локальном компьютере.  
  
- или - 
Структура коллекции <paramref name="counterData" /> является неверной для базовых счетчиков. Счетчики типа <see langword="AverageCount64" />, <see langword="AverageTimer32" />, <see langword="CounterMultiTimer" />, <see langword="CounterMultiTimerInverse" />, <see langword="CounterMultiTimer100Ns" />, <see langword="CounterMultiTimer100NsInverse" />, <see langword="RawFraction" />, <see langword="SampleFraction" /> или <see langword="SampleCounter" /> должны непосредственно предшествовать одному из типов базовых счетчиков (<see langword="AverageBase" />, <see langword="MultiBase" />, <see langword="RawBase" /> или <see langword="SampleBase" />).</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">для выполнения административных задач в категориях счетчиков производительности. Связанное перечисление: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.PerformanceCounterCategoryType categoryType, System.Diagnostics.CounterCreationDataCollection counterData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, valuetype System.Diagnostics.PerformanceCounterCategoryType categoryType, class System.Diagnostics.CounterCreationDataCollection counterData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.Diagnostics.CounterCreationDataCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, categoryType As PerformanceCounterCategoryType, counterData As CounterCreationDataCollection) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::Diagnostics::PerformanceCounterCategoryType categoryType, System::Diagnostics::CounterCreationDataCollection ^ counterData);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * System.Diagnostics.PerformanceCounterCategoryType * System.Diagnostics.CounterCreationDataCollection -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="System.Diagnostics.PerformanceCounterCategory.Create (categoryName, categoryHelp, categoryType, counterData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="categoryHelp" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="categoryType" Type="System.Diagnostics.PerformanceCounterCategoryType" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="counterData" Type="System.Diagnostics.CounterCreationDataCollection" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="categoryName">Имя пользовательской категории счетчиков производительности, которую нужно создать и зарегистрировать в системе.</param>
        <param name="categoryHelp">Описание пользовательской категории.</param>
        <param name="categoryType">Одно из значений перечисления <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" />.</param>
        <param name="counterData">Коллекция <see cref="T:System.Diagnostics.CounterCreationDataCollection" />, в которой определяются счетчики, создаваемые в новой категории.</param>
        <summary>Регистрирует пользовательскую категорию счетчиков производительности, содержащую указанные счетчики на локальном компьютере.</summary>
        <returns>Категория <see cref="T:System.Diagnostics.PerformanceCounterCategory" />, связанная с новой пользовательской категорией, или объект производительности.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `categoryType` Параметр указывает, является ли категория счетчика производительности одной или несколькими экземплярами. По умолчанию категория является одиночным экземпляром, когда она создается и становится многоэкземплярной при добавлении другого экземпляра. Категории создаются при настройке приложения, а экземпляры добавляются во время выполнения. В .NET Framework версиях 1,0 и 1,1 нет необходимости в том, чтобы категория счетчиков производительности была многоэкземплярной или единственной. [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]В перечисление используется для указания того, может ли счетчик производительности иметь несколько экземпляров. <xref:System.Diagnostics.PerformanceCounterCategoryType>  
  
 Категории счетчиков производительности, установленные [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] с использованием отдельной общей памяти, каждая из категорий счетчиков производительности имеет собственную память.  Можно указать размер отдельной общей памяти, создав DWORD с именем филемаппингсизе в разделе реестра HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\\*\<имя категории >* \перформанце. Значение Филемаппингсизе устанавливается равным общему объему памяти для категории. Размер по умолчанию — 131072 десятичный. Если значение филемаппингсизе отсутствует, `fileMappingSize` используется значение атрибута `performanceCounters` для элемента, указанного в файле Machine. config, что приводит к дополнительным затратам на обработку файла конфигурации. Можно повысить производительность при запуске приложения, задав размер сопоставления файлов в реестре.  
  
> [!NOTE]
>  Настоятельно рекомендуется создавать новые категории счетчиков производительности во время установки приложения, а не во время выполнения приложения. Это позволяет операционной системе обновлять список зарегистрированных категорий счетчиков производительности. Если список не обновлялся, попытка использовать категорию завершится ошибкой.  
  
> [!NOTE]
>  Для чтения счетчиков производительности в Windows Vista и более поздних версиях, Windows XP Professional x64 Edition или Windows Server 2003 необходимо быть членом группы "Пользователи системного монитора" или обладать правами администратора.  
>   
>  Чтобы не допустить повышения привилегий для доступа к счетчикам производительности в Windows Vista и более поздних версиях, добавьте себя в группу "Пользователи системного монитора".  
>   
>  В Windows Vista и более поздних версиях права доступа пользователя определяются контролем учетных записей. Члену встроенной группы "Администраторы" присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Чтобы выполнить код, обращающийся к счетчикам производительности, необходимо сначала повысить привилегии обычного пользователя до администратора. Это можно сделать при запуске приложения, , щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> метода. В примере показано, как создать настраиваемую категорию счетчика производительности с несколькими экземплярами для количества заказов в секунду.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategoryType#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/CS/program.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategoryType#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/VB/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Имя счетчика, указанное в коллекции <paramref name="counterData" />, — <see langword="null" /> или пустая строка ("").  
  
- или - 
Счетчик, указанный в коллекции <paramref name="counterData" />, уже существует.  
  
- или - 
 Синтаксис параметра <paramref name="counterName" /> недопустим. Возможно, значение параметра содержит обратную косую черту ("\\") или его длина превышает 80 символов.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="categoryName" /> имеет значение <see langword="null" />.  
  
- или - 
 Свойство <paramref name="counterData" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="categoryType" /> выходит за рамки диапазона следующих значений: <see langword="MultiInstance" />, <see langword="SingleInstance" /><see langword="Unknown" />.</exception>
        <exception cref="T:System.InvalidOperationException">Категория уже существует на локальном компьютере.  
  
- или - 
Структура коллекции <paramref name="counterData" /> является неверной для базовых счетчиков. Счетчики типа <see langword="AverageCount64" />, <see langword="AverageTimer32" />, <see langword="CounterMultiTimer" />, <see langword="CounterMultiTimerInverse" />, <see langword="CounterMultiTimer100Ns" />, <see langword="CounterMultiTimer100NsInverse" />, <see langword="RawFraction" />, <see langword="SampleFraction" /> или <see langword="SampleCounter" /> должны непосредственно предшествовать одному из типов базовых счетчиков (<see langword="AverageBase" />, <see langword="MultiBase" />, <see langword="RawBase" /> или <see langword="SampleBase" />).</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">для выполнения административных задач в категориях счетчиков производительности. Связанное перечисление: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, string counterName, string counterHelp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, string counterName, string counterHelp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, counterName As String, counterHelp As String) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::String ^ counterName, System::String ^ counterHelp);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * string * string -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="System.Diagnostics.PerformanceCounterCategory.Create (categoryName, categoryHelp, counterName, counterHelp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use another overload that uses PerformanceCounterCategoryType instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.Obsolete("This method has been deprecated.  Please use System.Diagnostics.PerformanceCounterCategory.Create(string categoryName, string categoryHelp, PerformanceCounterCategoryType categoryType, string counterName, string counterHelp) instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0;netcore-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated.  Please use System.Diagnostics.PerformanceCounterCategory.Create(string categoryName, string categoryHelp, PerformanceCounterCategoryType categoryType, string counterName, string counterHelp) instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="categoryHelp" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="counterHelp" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Имя пользовательской категории счетчиков производительности, которую нужно создать и зарегистрировать в системе.</param>
        <param name="categoryHelp">Описание пользовательской категории.</param>
        <param name="counterName">Имя нового счетчика типа <see langword="NumberOfItems32" />, создаваемого в новой категории.</param>
        <param name="counterHelp">Описание счетчика, связанного с новой пользовательской категорией.</param>
        <summary>Регистрирует пользовательскую категорию счетчиков производительности, содержащую на локальном компьютере один счетчик типа <see langword="NumberOfItems32" />.</summary>
        <returns>Категория <see cref="T:System.Diagnostics.PerformanceCounterCategory" />, связанная с новой системной категорией, или объект производительности.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Для чтения счетчиков производительности в Windows Vista и более поздних версиях, Windows XP Professional x64 Edition или Windows Server 2003 необходимо быть членом группы "Пользователи системного монитора" или обладать правами администратора.  
>   
>  Чтобы не допустить повышения привилегий для доступа к счетчикам производительности в Windows Vista и более поздних версиях, добавьте себя в группу "Пользователи системного монитора".  
>   
>  В Windows Vista и более поздних версиях права доступа пользователя определяются контролем учетных записей. Члену встроенной группы "Администраторы" присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Чтобы выполнить код, обращающийся к счетчикам производительности, необходимо сначала повысить привилегии обычного пользователя до администратора. Это можно сделать при запуске приложения, , щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора.  
  
   
  
## Examples  
 В следующем примере кода создается <xref:System.Diagnostics.PerformanceCounterCategory> и один <xref:System.Diagnostics.PerformanceCounter> с текстом справки <xref:System.Diagnostics.PerformanceCounterCategory.Create%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29> для каждой из них с помощью метода.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatcreate.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatcreate.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="counterName" /> равен <see langword="null" /> или является пустой строкой ("").  
  
-или- 
Счетчик, указанный параметром <paramref name="counterName" />, уже существует.  
  
-или- 
 Синтаксис параметра <paramref name="counterName" /> недопустим. Возможно, значение параметра содержит обратную косую черту ("\\") или его длина превышает 80 символов.</exception>
        <exception cref="T:System.InvalidOperationException">Категория уже существует на локальном компьютере.</exception>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="categoryName" /> имеет значение <see langword="null" />.  
  
-или- 
 Свойство <paramref name="counterHelp" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">для выполнения административных задач в категориях счетчиков производительности. Связанное перечисление: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.CounterHelp" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.PerformanceCounterCategoryType categoryType, string counterName, string counterHelp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, valuetype System.Diagnostics.PerformanceCounterCategoryType categoryType, string counterName, string counterHelp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, categoryType As PerformanceCounterCategoryType, counterName As String, counterHelp As String) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::Diagnostics::PerformanceCounterCategoryType categoryType, System::String ^ counterName, System::String ^ counterHelp);" />
      <MemberSignature Language="F#" Value="static member Create : string * string * System.Diagnostics.PerformanceCounterCategoryType * string * string -&gt; System.Diagnostics.PerformanceCounterCategory" Usage="System.Diagnostics.PerformanceCounterCategory.Create (categoryName, categoryHelp, categoryType, counterName, counterHelp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="categoryHelp" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="categoryType" Type="System.Diagnostics.PerformanceCounterCategoryType" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="counterName" Type="System.String" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="counterHelp" Type="System.String" Index="4" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="categoryName">Имя пользовательской категории счетчиков производительности, которую нужно создать и зарегистрировать в системе.</param>
        <param name="categoryHelp">Описание пользовательской категории.</param>
        <param name="categoryType">Одно из значений <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" />, позволяющих определить тип категории: <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance" />, <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance" /> или <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.Unknown" />.</param>
        <param name="counterName">Имя нового счетчика, создаваемого в новой категории.</param>
        <param name="counterHelp">Описание счетчика, связанного с новой пользовательской категорией.</param>
        <summary>Регистрирует пользовательскую категорию счетчиков производительности, содержащую на локальном компьютере один счетчик типа <see cref="F:System.Diagnostics.PerformanceCounterType.NumberOfItems32" />.</summary>
        <returns>Категория <see cref="T:System.Diagnostics.PerformanceCounterCategory" />, связанная с новой системной категорией, или объект производительности.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `categoryType` Параметр указывает, является ли категория счетчика производительности одной или несколькими экземплярами. По умолчанию категория является одиночным экземпляром, когда она создается и становится многоэкземплярной при добавлении другого экземпляра. Категории создаются при настройке приложения, а экземпляры добавляются во время выполнения. В .NET Framework версиях 1,0 и 1,1 нет необходимости в том, чтобы категория счетчиков производительности была многоэкземплярной или единственной. [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]В перечисление используется для указания того, может ли счетчик производительности иметь несколько экземпляров. <xref:System.Diagnostics.PerformanceCounterCategoryType>  
  
 Категории счетчиков производительности, установленные [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] с использованием отдельной общей памяти, каждая из категорий счетчиков производительности имеет собственную память. Можно указать размер отдельной общей памяти, создав DWORD с именем филемаппингсизе в разделе реестра HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\\*\<имя категории >* \перформанце. Значение Филемаппингсизе устанавливается равным общему объему памяти для категории. Размер по умолчанию — 131072 десятичный. Если значение филемаппингсизе отсутствует, `fileMappingSize` используется значение атрибута `performanceCounters` для элемента, указанного в файле Machine. config, что приводит к дополнительным затратам на обработку файла конфигурации. Можно повысить производительность при запуске приложения, задав размер сопоставления файлов в реестре.  
  
> [!NOTE]
>  Настоятельно рекомендуется создавать новые категории счетчиков производительности во время установки приложения, а не во время выполнения приложения. Это позволяет операционной системе обновлять список зарегистрированных категорий счетчиков производительности. Если список не обновлялся, попытка использовать категорию завершится ошибкой.  
  
> [!NOTE]
>  Для чтения счетчиков производительности в Windows Vista и более поздних версиях, Windows XP Professional x64 Edition или Windows Server 2003 необходимо быть членом группы "Пользователи системного монитора" или обладать правами администратора.  
>   
>  Чтобы не допустить повышения привилегий для доступа к счетчикам производительности в Windows Vista и более поздних версиях, добавьте себя в группу "Пользователи системного монитора".  
>   
>  В Windows Vista и более поздних версиях права доступа пользователя определяются контролем учетных записей. Члену встроенной группы "Администраторы" присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Чтобы выполнить код, обращающийся к счетчикам производительности, необходимо сначала повысить привилегии обычного пользователя до администратора. Это можно сделать при запуске приложения, , щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> метода. В примере показано, как создать настраиваемую категорию счетчика производительности с одним экземпляром.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategoryType#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/CS/program.cs#3)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategoryType#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/VB/program.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="counterName" /> равен <see langword="null" /> или является пустой строкой ("").  
  
- или - 
Счетчик, указанный параметром <paramref name="counterName" />, уже существует.  
  
-или- 
 Синтаксис параметра <paramref name="counterName" /> недопустим. Возможно, значение параметра содержит обратную косую черту ("\\") или его длина превышает 80 символов.</exception>
        <exception cref="T:System.InvalidOperationException">Категория уже существует на локальном компьютере.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" /> — <see langword="null" />.  
  
- или - 
 <paramref name="counterHelp" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">для выполнения административных задач в категориях счетчиков производительности. Связанное перечисление: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static void Delete (string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Delete(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Delete (categoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Delete(System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="static member Delete : string -&gt; unit" Usage="System.Diagnostics.PerformanceCounterCategory.Delete categoryName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Имя удаляемой пользовательской категории счетчиков производительности.</param>
        <summary>Удаляет категорию и связанные с ней счетчики с локального компьютера.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Из системы можно удалять только пользовательские категории счетчиков производительности. Нельзя удалить счетчик из категории. Для этого удалите категорию и повторно создайте категорию с счетчиками, которые необходимо хранить. Чтобы избежать исключения, убедитесь, что категория существует, прежде чем пытаться ее удалить.  
  
> [!NOTE]
>  Для чтения счетчиков производительности в Windows Vista и более поздних версиях, Windows XP Professional x64 Edition или Windows Server 2003 необходимо быть членом группы "Пользователи системного монитора" или обладать правами администратора.  
>   
>  Чтобы не допустить повышения привилегий для доступа к счетчикам производительности в Windows Vista и более поздних версиях, добавьте себя в группу "Пользователи системного монитора".  
>   
>  В Windows Vista и более поздних версиях права доступа пользователя определяются контролем учетных записей. Члену встроенной группы "Администраторы" присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Чтобы выполнить код, обращающийся к счетчикам производительности, необходимо сначала повысить привилегии обычного пользователя до администратора. Это можно сделать при запуске приложения, , щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора.  
  
   
  
## Examples  
 В следующем примере кода <xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A> метод используется для <xref:System.Diagnostics.PerformanceCounterCategory> удаления объекта и содержащихся <xref:System.Diagnostics.PerformanceCounter> в нем объектов.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatDelete.cs#6)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatdelete.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="categoryName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Синтаксис параметра <paramref name="categoryName" /> недопустим. Возможно, значение параметра содержит обратную косую черту ("\\") или его длина превышает 80 символов.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
        <exception cref="T:System.InvalidOperationException">Не удается удалить категорию, поскольку она не является пользовательской.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">для чтения категорий счетчиков производительности. Связанное перечисление: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Exists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Определяет, зарегистрирована ли категория в системе.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (categoryName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="static member Exists : string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.Exists categoryName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Имя искомой категории счетчиков производительности.</param>
        <summary>Определяет, зарегистрирована ли категория на локальном компьютере.</summary>
        <returns>Если категория зарегистрирована, значение <see langword="true" />, если нет, значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.PerformanceCounterCategory.Exists%2A> Использование метода может привести к заметному снижению производительности, в то время как все счетчики производительности на компьютере проверяются на доступность. Если выполняется запись только в счетчик производительности, можно избежать глобального поиска счетчиков производительности, создав счетчик производительности при установке приложения и предполагая, что категория существует при доступе к счетчику. Не существует способа избежать поиска счетчиков производительности при чтении из счетчиков производительности.  
  
> [!NOTE]
>  Для чтения счетчиков производительности в Windows Vista и более поздних версиях, Windows XP Professional x64 Edition или Windows Server 2003 необходимо быть членом группы "Пользователи системного монитора" или обладать правами администратора.  
>   
>  Чтобы не допустить повышения привилегий для доступа к счетчикам производительности в Windows Vista и более поздних версиях, добавьте себя в группу "Пользователи системного монитора".  
>   
>  В Windows Vista и более поздних версиях права доступа пользователя определяются контролем учетных записей. Члену встроенной группы "Администраторы" присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Чтобы выполнить код, обращающийся к счетчикам производительности, необходимо сначала повысить привилегии обычного пользователя до администратора. Это можно сделать при запуске приложения, , щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора.  
  
   
  
## Examples  
 В следующем примере кода определяется, <xref:System.Diagnostics.PerformanceCounterCategory> существует ли объект с именем Orders. В противном случае он создает <xref:System.Diagnostics.PerformanceCounterCategory> объект с <xref:System.Diagnostics.CounterCreationDataCollection> помощью объекта, который содержит два счетчика производительности.  
  
 [!code-cpp[PerfCounter_ccd#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter_ccd/CPP/ccd.cpp#1)]
 [!code-csharp[PerfCounter_ccd#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter_ccd/CS/ccd.cs#1)]
 [!code-vb[PerfCounter_ccd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter_ccd/VB/ccd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="categoryName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="categoryName" /> представляет собой пустую строку ("").</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">для чтения категорий счетчиков производительности. Связанное перечисление: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (categoryName As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ categoryName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member Exists : string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.Exists (categoryName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Имя искомой категории счетчиков производительности.</param>
        <param name="machineName">Имя компьютера для проверки категории.</param>
        <summary>Определяет, зарегистрирована ли категория на указанном компьютере.</summary>
        <returns>Если категория зарегистрирована, значение <see langword="true" />, если нет, значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.PerformanceCounterCategory.Exists%2A> Использование метода может привести к заметному снижению производительности, в то время как все счетчики производительности на компьютере проверяются на доступность. Если выполняется запись только в счетчик производительности, можно избежать глобального поиска счетчиков производительности, создав счетчик производительности при установке приложения и предполагая, что категория существует при доступе к счетчику. Не существует способа избежать поиска счетчиков производительности при чтении из счетчиков производительности.  
  
> [!NOTE]
>  Для чтения счетчиков производительности в Windows Vista и более поздних версиях, Windows XP Professional x64 Edition или Windows Server 2003 необходимо быть членом группы "Пользователи системного монитора" или обладать правами администратора.  
>   
>  Чтобы не допустить повышения привилегий для доступа к счетчикам производительности в Windows Vista и более поздних версиях, добавьте себя в группу "Пользователи системного монитора".  
>   
>  В Windows Vista и более поздних версиях права доступа пользователя определяются контролем учетных записей. Члену встроенной группы "Администраторы" присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Чтобы выполнить код, обращающийся к счетчикам производительности, необходимо сначала повысить привилегии обычного пользователя до администратора. Это можно сделать при запуске приложения, , щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора.  
  
   
  
## Examples  
 В следующем примере определяется, <xref:System.Diagnostics.PerformanceCounterCategory> существует ли объект с именем. `Orders` Если он не существует, в примере создается <xref:System.Diagnostics.PerformanceCounterCategory> объект с <xref:System.Diagnostics.CounterCreationDataCollection> использованием объекта, который содержит два счетчика производительности.  
  
 [!code-cpp[PerfCounter_ccd#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter_ccd/CPP/ccd.cpp#1)]
 [!code-csharp[PerfCounter_ccd#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter_ccd/CS/ccd.cs#1)]
 [!code-vb[PerfCounter_ccd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter_ccd/VB/ccd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="categoryName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="categoryName" /> представляет собой пустую строку ("").  
  
-или- 
Параметр <paramref name="machineName" /> является недопустимым.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
        <exception cref="T:System.IO.IOException">Сетевой путь не найден.</exception>
        <exception cref="T:System.UnauthorizedAccessException">У вызывающего объекта отсутствует необходимое разрешение.  
  
 - или -  
  
 Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">для чтения категорий счетчиков производительности. Связанное перечисление: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCategories">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Извлекает список зарегистрированных на компьютере категорий счетчиков производительности.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCategories">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory[] GetCategories ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory[] GetCategories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCategories" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCategories () As PerformanceCounterCategory()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Diagnostics::PerformanceCounterCategory ^&gt; ^ GetCategories();" />
      <MemberSignature Language="F#" Value="static member GetCategories : unit -&gt; System.Diagnostics.PerformanceCounterCategory[]" Usage="System.Diagnostics.PerformanceCounterCategory.GetCategories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает список категорий счетчиков производительности, зарегистрированных на локальном компьютере.</summary>
        <returns>Массив объектов <see cref="T:System.Diagnostics.PerformanceCounterCategory" />, которыми определяются категории, зарегистрированные на локальном компьютере.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Для чтения счетчиков производительности в Windows Vista и более поздних версиях, Windows XP Professional x64 Edition или Windows Server 2003 необходимо быть членом группы "Пользователи системного монитора" или обладать правами администратора.  
>   
>  Чтобы не допустить повышения привилегий для доступа к счетчикам производительности в Windows Vista и более поздних версиях, добавьте себя в группу "Пользователи системного монитора".  
>   
>  В Windows Vista и более поздних версиях права доступа пользователя определяются контролем учетных записей. Члену встроенной группы "Администраторы" присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Чтобы выполнить код, обращающийся к счетчикам производительности, необходимо сначала повысить привилегии обычного пользователя до администратора. Это можно сделать при запуске приложения, , щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора.  
  
   
  
## Examples  
 В следующем примере кода <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> метод используется для возврата <xref:System.Diagnostics.PerformanceCounterCategory> массива объектов с локального компьютера или указанного компьютера. Он преобразует <xref:System.Diagnostics.PerformanceCounterCategory> массив в массив имен категорий, которые она сортирует и отображает для пользователя. <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> Перегрузка выбирается в зависимости от того, было ли указано имя компьютера.  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountergetcat.cpp#2)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountergetcat.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcat.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">для чтения категорий счетчиков производительности. Связанное перечисление: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="GetCategories">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory[] GetCategories (string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory[] GetCategories(string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCategories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCategories (machineName As String) As PerformanceCounterCategory()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Diagnostics::PerformanceCounterCategory ^&gt; ^ GetCategories(System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member GetCategories : string -&gt; System.Diagnostics.PerformanceCounterCategory[]" Usage="System.Diagnostics.PerformanceCounterCategory.GetCategories machineName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineName">Компьютер, на котором будет производиться поиск.</param>
        <summary>Извлекает список категорий счетчиков производительности, зарегистрированных на заданном компьютере.</summary>
        <returns>Массив объектов <see cref="T:System.Diagnostics.PerformanceCounterCategory" />, указывающих на категории, зарегистрированные на заданном компьютере.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы получить категории на локальном компьютере, используйте другую перегрузку или передайте "." в `machineName` качестве параметра.  
  
> [!NOTE]
>  Для чтения счетчиков производительности в Windows Vista и более поздних версиях, Windows XP Professional x64 Edition или Windows Server 2003 необходимо быть членом группы "Пользователи системного монитора" или обладать правами администратора.  
>   
>  Чтобы не допустить повышения привилегий для доступа к счетчикам производительности в Windows Vista и более поздних версиях, добавьте себя в группу "Пользователи системного монитора".  
>   
>  В Windows Vista и более поздних версиях права доступа пользователя определяются контролем учетных записей. Члену встроенной группы "Администраторы" присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Чтобы выполнить код, обращающийся к счетчикам производительности, необходимо сначала повысить привилегии обычного пользователя до администратора. Это можно сделать при запуске приложения, , щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора.  
  
   
  
## Examples  
 В следующем примере кода <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> метод используется для возврата <xref:System.Diagnostics.PerformanceCounterCategory> массива объектов с локального компьютера или указанного компьютера. Он преобразует <xref:System.Diagnostics.PerformanceCounterCategory> массив в массив имен категорий, которые она сортирует и отображает для пользователя. <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> Перегрузка выбирается в зависимости от того, было ли указано имя компьютера.  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountergetcat.cpp#2)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountergetcat.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcat.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="machineName" /> является недопустимым.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">для чтения категорий счетчиков производительности. Связанное перечисление: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCounters">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Извлекает список счетчиков в данной категории счетчиков производительности.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCounters">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounter[] GetCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.PerformanceCounter[] GetCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCounters" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCounters () As PerformanceCounter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Diagnostics::PerformanceCounter ^&gt; ^ GetCounters();" />
      <MemberSignature Language="F#" Value="member this.GetCounters : unit -&gt; System.Diagnostics.PerformanceCounter[]" Usage="performanceCounterCategory.GetCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает список счетчиков в категории счетчиков производительности, содержащей только один экземпляр.</summary>
        <returns>Массив объектов <see cref="T:System.Diagnostics.PerformanceCounter" />, обозначающих счетчики, связанные с категорией счетчиков производительности с единственным экземпляром.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения об экземплярах объектов производительности см. в <xref:System.Diagnostics.PerformanceCounter> разделе Общие сведения о классе.  
  
> [!NOTE]
>  Для чтения счетчиков производительности в Windows Vista и более поздних версиях, Windows XP Professional x64 Edition или Windows Server 2003 необходимо быть членом группы "Пользователи системного монитора" или обладать правами администратора.  
>   
>  Чтобы не допустить повышения привилегий для доступа к счетчикам производительности в Windows Vista и более поздних версиях, добавьте себя в группу "Пользователи системного монитора".  
>   
>  В Windows Vista и более поздних версиях права доступа пользователя определяются контролем учетных записей. Члену встроенной группы "Администраторы" присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Чтобы выполнить код, обращающийся к счетчикам производительности, необходимо сначала повысить привилегии обычного пользователя до администратора. Это можно сделать при запуске приложения, , щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора.  
  
   
  
## Examples  
 В следующем примере кода возвращается список <xref:System.Diagnostics.PerformanceCounter> объектов <xref:System.Diagnostics.PerformanceCounterCategory>в. Сначала он создает <xref:System.Diagnostics.PerformanceCounterCategory> с соответствующим конструктором в зависимости от того, было ли указано имя компьютера. Затем он использует <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> метод для возврата <xref:System.Diagnostics.PerformanceCounter> массива объектов, выбирая <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> перегрузку в зависимости от того, было ли указано имя экземпляра.  
  
 Эта <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters> перегрузка завершается ошибкой, если она не используется с категорией с одним экземпляром.  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountercatgetcount.cpp#4)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountercatgetcount.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcount.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Категория не является категорией с единственным экземпляром.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
        <exception cref="T:System.InvalidOperationException">У категории нет связанного с ней экземпляра.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="GetCounters">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounter[] GetCounters (string instanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.PerformanceCounter[] GetCounters(string instanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCounters(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCounters (instanceName As String) As PerformanceCounter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Diagnostics::PerformanceCounter ^&gt; ^ GetCounters(System::String ^ instanceName);" />
      <MemberSignature Language="F#" Value="member this.GetCounters : string -&gt; System.Diagnostics.PerformanceCounter[]" Usage="performanceCounterCategory.GetCounters instanceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounter[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">Экземпляр объекта производительности, для которого нужно извлечь список связанных с ним счетчиков.</param>
        <summary>Извлекает список счетчиков в категории счетчиков производительности, содержащей один или несколько экземпляров.</summary>
        <returns>Массив объектов <see cref="T:System.Diagnostics.PerformanceCounter" />, обозначающих счетчики, связанные с указанным экземпляром объекта этой категории счетчиков производительности.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы представить категорию с одним экземпляром, перед `instanceName` параметром передайте пустую строку ("").  
  
 Дополнительные сведения об экземплярах объектов производительности см. в <xref:System.Diagnostics.PerformanceCounter> разделе Общие сведения о классе.  
  
> [!NOTE]
>  Для чтения счетчиков производительности в Windows Vista и более поздних версиях, Windows XP Professional x64 Edition или Windows Server 2003 необходимо быть членом группы "Пользователи системного монитора" или обладать правами администратора.  
>   
>  Чтобы не допустить повышения привилегий для доступа к счетчикам производительности в Windows Vista и более поздних версиях, добавьте себя в группу "Пользователи системного монитора".  
>   
>  В Windows Vista и более поздних версиях права доступа пользователя определяются контролем учетных записей. Члену встроенной группы "Администраторы" присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Чтобы выполнить код, обращающийся к счетчикам производительности, необходимо сначала повысить привилегии обычного пользователя до администратора. Это можно сделать при запуске приложения, , щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора.  
  
   
  
## Examples  
 В следующем примере кода возвращается список <xref:System.Diagnostics.PerformanceCounter> объектов <xref:System.Diagnostics.PerformanceCounterCategory>в. Сначала он создает <xref:System.Diagnostics.PerformanceCounterCategory> с соответствующим конструктором в зависимости от того, было ли указано имя компьютера. Затем он использует <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> метод для возврата <xref:System.Diagnostics.PerformanceCounter> массива объектов, выбирая <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> перегрузку в зависимости от того, было ли указано имя экземпляра.  
  
 Эта <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%28System.String%29> перегрузка завершается ошибкой, если она не используется с категорией, содержащей экземпляры.  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountercatgetcount.cpp#4)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountercatgetcount.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcount.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="instanceName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> для данного экземпляра <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> не задано.  
  
- или - 
Категория не содержит экземпляр, заданный параметром <paramref name="instanceName" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="GetInstanceNames">
      <MemberSignature Language="C#" Value="public string[] GetInstanceNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetInstanceNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetInstanceNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstanceNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetInstanceNames();" />
      <MemberSignature Language="F#" Value="member this.GetInstanceNames : unit -&gt; string[]" Usage="performanceCounterCategory.GetInstanceNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает список экземпляров объекта производительности, связанных с данной категорией.</summary>
        <returns>Массив строк, представляющих имена экземпляров объекта производительности, связанных с этой категории или, если категория содержит только один экземпляр объекта производительности, одноэлементный массив, содержащий пустую строку ("").</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Для чтения счетчиков производительности в Windows Vista и более поздних версиях, Windows XP Professional x64 Edition или Windows Server 2003 необходимо быть членом группы "Пользователи системного монитора" или обладать правами администратора.  
>   
>  Чтобы не допустить повышения привилегий для доступа к счетчикам производительности в Windows Vista и более поздних версиях, добавьте себя в группу "Пользователи системного монитора".  
>   
>  В Windows Vista и более поздних версиях права доступа пользователя определяются контролем учетных записей. Члену встроенной группы "Администраторы" присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Чтобы выполнить код, обращающийся к счетчикам производительности, необходимо сначала повысить привилегии обычного пользователя до администратора. Это можно сделать при запуске приложения, , щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора.  
  
   
  
## Examples  
 В следующем примере кода возвращается список <xref:System.Diagnostics.PerformanceCounter> объектов <xref:System.Diagnostics.PerformanceCounterCategory>в. Сначала он создает <xref:System.Diagnostics.PerformanceCounterCategory> объект, используя соответствующий конструктор в зависимости от того, было ли указано имя компьютера. Затем он использует <xref:System.Diagnostics.PerformanceCounterCategory.GetInstanceNames%2A> для возврата имен экземпляров в виде <xref:System.String>массива, который сортирует и отображает.  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountercatgetinst.cpp#6)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountercatgetinst.cs#6)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetinst.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> — <see langword="null" />. Возможно, свойство не задано.  
  
-или- 
У категории нет связанного с ней экземпляра.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InstanceExists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Определяет, содержит ли категория указанный экземпляр объекта производительности.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InstanceExists">
      <MemberSignature Language="C#" Value="public bool InstanceExists (string instanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InstanceExists(string instanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function InstanceExists (instanceName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InstanceExists(System::String ^ instanceName);" />
      <MemberSignature Language="F#" Value="member this.InstanceExists : string -&gt; bool" Usage="performanceCounterCategory.InstanceExists instanceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">Искомый экземпляр объекта производительности в данной категории счетчиков производительности.</param>
        <summary>Определяет, существует ли указанный экземпляр объекта производительности в категории, определяемой свойством <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> объекта <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />.</summary>
        <returns>Если категория содержит указанный экземпляр объекта производительности, значение <see langword="true" />, если нет, значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта перегрузка <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> метода не `static`является. Для этого необходимо создать <xref:System.Diagnostics.PerformanceCounterCategory> объект и <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> задать свойство.  
  
> [!NOTE]
>  Для чтения счетчиков производительности в Windows Vista и более поздних версиях, Windows XP Professional x64 Edition или Windows Server 2003 необходимо быть членом группы "Пользователи системного монитора" или обладать правами администратора.  
>   
>  Чтобы не допустить повышения привилегий для доступа к счетчикам производительности в Windows Vista и более поздних версиях, добавьте себя в группу "Пользователи системного монитора".  
>   
>  В Windows Vista и более поздних версиях права доступа пользователя определяются контролем учетных записей. Члену встроенной группы "Администраторы" присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Чтобы выполнить код, обращающийся к счетчикам производительности, необходимо сначала повысить привилегии обычного пользователя до администратора. Это можно сделать при запуске приложения, , щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора.  
  
   
  
## Examples  
 В следующем примере кода определяется, существует <xref:System.Diagnostics.PerformanceCounter> ли экземпляр <xref:System.Diagnostics.PerformanceCounterCategory>в. Сначала он создает <xref:System.Diagnostics.PerformanceCounterCategory> объект, используя соответствующий конструктор в зависимости от того, было ли указано имя компьютера. Затем он использует <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%28System.String%29> , чтобы определить, существует ли указанный экземпляр, а затем информирует пользователя. Если имя экземпляра не указано, в примере используется имя одиночного экземпляра по умолчанию.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcounterobjinstexists.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatobjinstexists.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> — <see langword="null" />. Возможно, свойство не задано.</exception>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="instanceName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">для чтения категорий счетчиков производительности. Связанное перечисление: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="InstanceExists">
      <MemberSignature Language="C#" Value="public static bool InstanceExists (string instanceName, string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool InstanceExists(string instanceName, string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InstanceExists (instanceName As String, categoryName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool InstanceExists(System::String ^ instanceName, System::String ^ categoryName);" />
      <MemberSignature Language="F#" Value="static member InstanceExists : string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.InstanceExists (instanceName, categoryName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">Искомый экземпляр объекта производительности.</param>
        <param name="categoryName">Искомая категория счетчиков производительности.</param>
        <summary>Определяет, содержит ли указанная категория заданный экземпляр объекта производительности на локальном компьютере.</summary>
        <returns>Если категория содержит указанный экземпляр объекта производительности, значение <see langword="true" />, если нет, значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Невозможно определить, существует ли экземпляр объекта производительности на компьютере, не указывая конкретную категорию для поиска.  
  
> [!NOTE]
>  Для чтения счетчиков производительности в Windows Vista и более поздних версиях, Windows XP Professional x64 Edition или Windows Server 2003 необходимо быть членом группы "Пользователи системного монитора" или обладать правами администратора.  
>   
>  Чтобы не допустить повышения привилегий для доступа к счетчикам производительности в Windows Vista и более поздних версиях, добавьте себя в группу "Пользователи системного монитора".  
>   
>  В Windows Vista и более поздних версиях права доступа пользователя определяются контролем учетных записей. Члену встроенной группы "Администраторы" присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Чтобы выполнить код, обращающийся к счетчикам производительности, необходимо сначала повысить привилегии обычного пользователя до администратора. Это можно сделать при запуске приложения, , щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора.  
  
   
  
## Examples  
 В следующем примере кода используются статические перегрузки метода <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> , чтобы определить, существует <xref:System.Diagnostics.PerformanceCounter> ли данный экземпляр в <xref:System.Diagnostics.PerformanceCounterCategory>. Перегрузка выбирается в зависимости от того, указано ли имя компьютера. Если имя экземпляра не указано, в примере используется имя одиночного экземпляра по умолчанию.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatinstexists.cs#10)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatinstexists.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="instanceName" /> имеет значение <see langword="null" />.  
  
- или - 
Параметр <paramref name="categoryName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="categoryName" /> представляет собой пустую строку ("").</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">для чтения категорий счетчиков производительности. Связанное перечисление: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="InstanceExists">
      <MemberSignature Language="C#" Value="public static bool InstanceExists (string instanceName, string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool InstanceExists(string instanceName, string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InstanceExists (instanceName As String, categoryName As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool InstanceExists(System::String ^ instanceName, System::String ^ categoryName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="static member InstanceExists : string * string * string -&gt; bool" Usage="System.Diagnostics.PerformanceCounterCategory.InstanceExists (instanceName, categoryName, machineName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">Искомый экземпляр объекта производительности.</param>
        <param name="categoryName">Искомая категория счетчиков производительности.</param>
        <param name="machineName">Имя компьютера, на котором будет производиться поиск экземпляра и соответствующей категории.</param>
        <summary>Определяет, содержит ли указанная категория на заданном компьютере заданный экземпляр объекта производительности.</summary>
        <returns>Если категория содержит указанный экземпляр объекта производительности, значение <see langword="true" />, если нет, значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Невозможно определить, существует ли экземпляр объекта производительности на компьютере, не указывая конкретную категорию для поиска.  
  
 Для указания локального компьютера можно использовать ".".  
  
> [!NOTE]
>  Для чтения счетчиков производительности в Windows Vista и более поздних версиях, Windows XP Professional x64 Edition или Windows Server 2003 необходимо быть членом группы "Пользователи системного монитора" или обладать правами администратора.  
>   
>  Чтобы не допустить повышения привилегий для доступа к счетчикам производительности в Windows Vista и более поздних версиях, добавьте себя в группу "Пользователи системного монитора".  
>   
>  В Windows Vista и более поздних версиях права доступа пользователя определяются контролем учетных записей. Члену встроенной группы "Администраторы" присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Чтобы выполнить код, обращающийся к счетчикам производительности, необходимо сначала повысить привилегии обычного пользователя до администратора. Это можно сделать при запуске приложения, , щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора.  
  
   
  
## Examples  
 В следующем примере кода используются статические перегрузки метода <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> , чтобы определить, существует <xref:System.Diagnostics.PerformanceCounter> ли данный экземпляр в <xref:System.Diagnostics.PerformanceCounterCategory>. Перегрузка выбирается в зависимости от того, указано ли имя компьютера. Если имя экземпляра не указано, в примере используется имя одиночного экземпляра по умолчанию.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatinstexists.cs#10)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatinstexists.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="instanceName" /> имеет значение <see langword="null" />.  
  
-или- 
Параметр <paramref name="categoryName" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="categoryName" /> представляет собой пустую строку ("").  
  
-или- 
Параметр <paramref name="machineName" /> является недопустимым.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">для чтения категорий счетчиков производительности. Связанное перечисление: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string with get, set" Usage="System.Diagnostics.PerformanceCounterCategory.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя компьютера, на котором находится эта категория.</summary>
        <value>Имя компьютера, на котором находятся категория счетчиков производительности и связанный с ней счетчик.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода создается <xref:System.Diagnostics.PerformanceCounterCategory> <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor> с помощью конструктора. Он запрашивает у пользователя <xref:System.Diagnostics.PerformanceCounterCategory> и имена компьютеров, а затем <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> устанавливает свойства и <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> из указанных значений. Затем <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>он отображает значения свойств, <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>и <xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A> или отображает сообщение об ошибке, если доступ к <xref:System.Diagnostics.PerformanceCounterCategory> объекту невозможен.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatProps.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatprops.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Неправильный синтаксис параметра <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">для чтения категорий счетчиков производительности. Связанное перечисление: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="ReadCategory">
      <MemberSignature Language="C#" Value="public System.Diagnostics.InstanceDataCollectionCollection ReadCategory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.InstanceDataCollectionCollection ReadCategory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.ReadCategory" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadCategory () As InstanceDataCollectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::InstanceDataCollectionCollection ^ ReadCategory();" />
      <MemberSignature Language="F#" Value="member this.ReadCategory : unit -&gt; System.Diagnostics.InstanceDataCollectionCollection" Usage="performanceCounterCategory.ReadCategory " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.InstanceDataCollectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Считывает все счетчики и данные экземпляра объекта производительности, связанные с этой категорией счетчиков производительности.</summary>
        <returns>Коллекция <see cref="T:System.Diagnostics.InstanceDataCollectionCollection" />, содержащая данные счетчика и экземпляра объекта производительности для данной категории.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Необходимо задать <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> свойство перед вызовом метода <xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A>.  
  
 Чтение всей категории одновременно может быть таким же эффективным, как считывание одного счетчика из-за способа, которым система предоставляет данные.  
  
> [!NOTE]
>  Для чтения счетчиков производительности в Windows Vista и более поздних версиях, Windows XP Professional x64 Edition или Windows Server 2003 необходимо быть членом группы "Пользователи системного монитора" или обладать правами администратора.  
>   
>  Чтобы не допустить повышения привилегий для доступа к счетчикам производительности в Windows Vista и более поздних версиях, добавьте себя в группу "Пользователи системного монитора".  
>   
>  В Windows Vista и более поздних версиях права доступа пользователя определяются контролем учетных записей. Члену встроенной группы "Администраторы" присваивается два маркера доступа на время выполнения: маркер доступа обычного пользователя и маркер доступа администратора. По умолчанию назначена роль обычного пользователя. Чтобы выполнить код, обращающийся к счетчикам производительности, необходимо сначала повысить привилегии обычного пользователя до администратора. Это можно сделать при запуске приложения, , щелкнув значок приложения правой кнопкой мыши и указав, что приложение должно запускаться от имени администратора.  
  
   
  
## Examples  
 В следующем примере кода создается <xref:System.Diagnostics.PerformanceCounterCategory> для указанного <xref:System.Diagnostics.PerformanceCounterCategory> имени. Затем он использует <xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A> для возврата объекта <xref:System.Diagnostics.InstanceDataCollectionCollection> , содержащего данные экземпляра для <xref:System.Diagnostics.PerformanceCounter> всех экземпляров объектов в <xref:System.Diagnostics.PerformanceCounterCategory>.  
  
 [!code-csharp[System.Diagnostics.InstanceData.CopyTo#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/CS/instdatacopyto.cs#6)]
 [!code-vb[System.Diagnostics.InstanceData.CopyTo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/VB/instdatacopyto.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> — <see langword="null" />. Возможно, свойство не задано.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Сбой при вызове основного API системы.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Код, выполняющийся без привилегий администратора, предпринял попытку считывания значения счетчика производительности.</exception>
        <altmember cref="T:System.Diagnostics.InstanceDataCollectionCollection" />
        <altmember cref="T:System.Diagnostics.InstanceDataCollection" />
        <altmember cref="T:System.Diagnostics.InstanceData" />
      </Docs>
    </Member>
  </Members>
</Type>
