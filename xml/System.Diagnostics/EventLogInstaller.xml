<Type Name="EventLogInstaller" FullName="System.Diagnostics.EventLogInstaller">
  <Metadata><Meta Name="ms.openlocfilehash" Value="88596074c0bd24dd3f2dd67de13860ad50ec959d" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63887909" /></Metadata><TypeSignature Language="C#" Value="public class EventLogInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventLogInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventLogInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class EventLogInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type EventLogInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Позволяет устанавливать и настраивать журнал событий, используемый для считывания и записи данных при запуске приложения.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.EventLogInstaller> Используется [Installutil.exe (средство установки)](~/docs/framework/tools/installutil-exe-installer-tool.md) при установке в журнал событий. <xref:System.Diagnostics.EventLogInstaller> Класс может установить журналы событий только на локальном компьютере.  
  
 Использовать <xref:System.Diagnostics.EventLogInstaller> класса, когда приложение записывает в журнал событий; нет необходимости использовать установщик журнала событий приложения для чтения из журнала событий. Приложения и службы должно вести запись в журнал приложений или настраиваемого журнала. Драйверы устройств должен записывать в системный журнал.  
  
> [!NOTE]
>  В журнал безопасности только для чтения.  
  
 Программа установки создает источник событий, указываемое в <xref:System.Diagnostics.EventLogInstaller.Source%2A> свойство и регистрирует в журнале событий указано в <xref:System.Diagnostics.EventLogInstaller.Log%2A> свойство. Это поведение аналогично вызову <xref:System.Diagnostics.EventLog.CreateEventSource%2A> на <xref:System.Diagnostics.EventLog> компонента.  
  
 Используйте <xref:System.Diagnostics.EventLog.WriteEvent%2A> и <xref:System.Diagnostics.EventLog.WriteEntry%2A> методы для записи событий в журнал событий. Необходимо указать источник события для записи событий; необходимо создать и настроить источник события перед записью первой записи с источником.  
  
 Создайте новый источник событий во время установки приложения. Это экономит время ОС, чтобы обновить свой список зарегистрированных источников событий и их конфигурации. Если операционная система не обновлялись свой список источников событий и предпринимается попытка записать событие с новым источником, операция записи завершится сбоем. Можно настроить нового источника при помощи <xref:System.Diagnostics.EventLogInstaller>, или с помощью <xref:System.Diagnostics.EventLog.CreateEventSource%2A> метод. Вам необходимы права администратора на компьютере, чтобы создать новый источник событий.  
  
 Можно создать источник событий для существующего журнала событий или журнала событий. При создании нового источника для нового журнала событий система регистрирует источник для этого журнала, но журнал не создается, пока на него будут записаны первой записи.  
  
 Для установки в журнал событий, создайте класс установщика проекта, который наследует от <xref:System.Configuration.Install.Installer>и задайте <xref:System.ComponentModel.RunInstallerAttribute> для того чтобы класс `true`. Создайте в проекте, <xref:System.Diagnostics.EventLogInstaller> для каждого журнала событий, что записи и добавьте экземпляр в класс установщика проекта приложения.  
  
 Когда [Installutil.exe (средство установки)](~/docs/framework/tools/installutil-exe-installer-tool.md) является именем, он смотрит, <xref:System.ComponentModel.RunInstallerAttribute>. Если это `true`, средство подготовки применяет все элементы в <xref:System.Configuration.Install.Installer.Installers%2A> коллекции, которые связаны с установщиком проектов. Если <xref:System.ComponentModel.RunInstallerAttribute> является `false`, он пропускает установщик проекта.  
  
 Изменить другие свойства <xref:System.Diagnostics.EventLogInstaller> до или после добавления этого экземпляра к <xref:System.Configuration.Install.Installer.Installers%2A> коллекции установщика проекта, но перед запуском программы установщика. Необходимо задать <xref:System.Diagnostics.EventLogInstaller.Source%2A> свойства, если приложение будет записывать в журнал событий.  
  
 Используйте <xref:System.Diagnostics.EventLogInstaller> для регистрации нового источника для нового или существующего журнала событий; не используйте <xref:System.Diagnostics.EventLogInstaller> для изменения существующего источника. <xref:System.Diagnostics.EventLogInstaller> Класса не изменяет свойства существующего источника для сопоставления свойства указанного установки конфигурации. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Метод вызывает исключение, если <xref:System.Diagnostics.EventLogInstaller.Source%2A> соответствует имени источника, который зарегистрирован другой журнал событий на компьютере. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Метод не зарегистрировать источник, если <xref:System.Diagnostics.EventLogInstaller.Source%2A> свойства совпадает с именем источника, уже зарегистрировано в один журнал событий, указанного в <xref:System.Diagnostics.EventLogInstaller.Log%2A> свойство.  
  
 С локализованным файлам ресурсов можно зарегистрировать источник событий для событий категории и сообщение строк. Для внесения записей в журнале событий с использованием идентификаторов ресурсов вместо указания фактической строкой в приложении. Средство просмотра событий использует идентификатор ресурса для поиска и отображения соответствующей строки из локализованного файла ресурсов на основе текущих настроек языка. Можно зарегистрировать отдельный файл для категории событий, сообщения и строки вставки параметров, или же файл ресурсов для всех трех типов строк можно зарегистрировать. Используйте <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A>, <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A>, <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>, и <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> свойства для настройки источника локализованные записи в журнале событий. Если приложение записывает значения строк непосредственно в журнал событий, вы не обязательно должны задать эти свойства.  
  
 Источник должен быть настроен для записи локализованных или исходных строк. Если приложение записывает операции, используя идентификаторы ресурсов и строковые значения, необходимо зарегистрировать два отдельных источника. Например, настроить один источник с файлами ресурсов, а затем использовать этот источник в <xref:System.Diagnostics.EventLog.WriteEvent%2A> метод для записи, используя идентификаторы ресурсов в журнале событий. Создайте другой источник без файлов ресурсов, а затем использовать этот источник в <xref:System.Diagnostics.EventLog.WriteEntry%2A> метод для записи строк непосредственно в журнале событий, с помощью этого источника.  
  
 Как правило, не следует вызывать методы <xref:System.Diagnostics.EventLogInstaller> класса из кода; обычно они вызываются только программой Installutil.exe. Средство автоматически вызывает <xref:System.Diagnostics.EventLogInstaller.Install%2A> метод во время установки. При необходимости он обрабатывает сбои, путем вызова <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> метода для объекта, вызвавшего исключение.  
  
   
  
## Examples  
 В следующем примере кода задаются свойства установки для нового источника событий. В примере кода задает имя источника и имя журнала событий и добавляет <xref:System.Diagnostics.EventLogInstaller> для <xref:System.Configuration.Install.Installer.Installers%2A> коллекции.  
  
 [!code-cpp[EventLogInstaller#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogInstaller/CPP/eventloginstaller.cpp#1)]
 [!code-csharp[EventLogInstaller#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogInstaller/CS/eventloginstaller.cs#1)]
 [!code-vb[EventLogInstaller#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogInstaller/VB/eventloginstaller.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.EventLog" />
    <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
    <related type="Article" href="~/docs/framework/tools/installutil-exe-installer-tool.md">Installutil.exe (инструмент для установки)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.EventLogInstaller" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryCount">
      <MemberSignature Language="C#" Value="public int CategoryCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CategoryCount" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.CategoryCount" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CategoryCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryCount : int with get, set" Usage="System.Diagnostics.EventLogInstaller.CategoryCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает число категорий в файле ресурсов категорий.</summary>
        <value>Число категорий в файле ресурсов категории. Значение по умолчанию равно нулю.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> и <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> свойства, чтобы записывать события с локализованные строки категории. Средство просмотра событий отображает категорию для записи события, если указать категорию при записи события. Категории журнала событий, определяемые приложением строки, помогающие проводить фильтрацию событий или содержаться информация о событии. Например приложение может определить отдельные категории для различных компонентов или операций.  
  
 Категории событий являются необязательными. Если приложение не использует категорий, не задавайте <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> и <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> свойства.  
  
 Дополнительные сведения об определении сообщения о событиях и построению файлов ресурсов, см. в разделе «Компилятор сообщений» в документации Platform SDK в [ http://msdn.microsoft.com ](https://msdn.microsoft.com/).  
  
   
  
## Examples  
 В следующем примере кода задаются свойства установки для нового источника событий. В примере кода задает имя источника события, имя журнала событий и файл ресурсов для локализованного текста события.  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 В примере кода используется следующий текстовый файл сообщения, встроенный в библиотеку ресурсов EventLogMsgs.dll. Текстовый файл сообщения — источник, из которого создается файле ресурсов сообщения. В текстовом файле сообщения определяет, идентификаторы ресурсов и текст категории, сообщения о событии и строки вставки параметров.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryCount" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="CategoryResourceFile">
      <MemberSignature Language="C#" Value="public string CategoryResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryResourceFile : string with get, set" Usage="System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает путь к файлу ресурсов, содержащему строки категорий источника.</summary>
        <value>Путь к файлу ресурсов категории. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> и <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> свойства, чтобы записывать события с локализованные строки категории. Средство просмотра событий отображает категорию для записи, если указать категорию при записи события. Категории журнала событий, определяемые приложением строки, помогающие проводить фильтрацию событий или содержат сведения о событии. Например приложение может иметь отдельные категории для различных компонентов или операций.  
  
 Категории событий являются необязательными. Если приложение не использует категорий, не задавайте <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> и <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> свойства.  
  
 Дополнительные сведения об определении сообщения о событиях и построению файлов ресурсов, см. в разделе «Компилятор сообщений» в документации Platform SDK в [ http://msdn.microsoft.com ](https://msdn.microsoft.com/).  
  
   
  
## Examples  
 В следующем примере кода задаются свойства установки для нового источника событий. В примере кода задает имя источника события, имя журнала событий и файл ресурсов для локализованного текста события.  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 В примере кода используется следующий текстовый файл сообщения, встроенный в библиотеку ресурсов EventLogMsgs.dll. Текстовый файл сообщения — источник, из которого создается файле ресурсов сообщения. В текстовом файле сообщения определяет, идентификаторы ресурсов и текст категории, сообщения о событии и строки вставки параметров.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryCount" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="eventLogInstaller.CopyFromComponent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">Объект <see cref="T:System.ComponentModel.IComponent" /> для использования в качестве шаблона для <see cref="T:System.Diagnostics.EventLogInstaller" />.</param>
        <summary>Копирует значения свойств компонента <see cref="T:System.Diagnostics.EventLog" />, которые требуются во время установки журнала событий.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Компонент, заданный параметром `component` параметр должен быть <xref:System.Diagnostics.EventLog>; в противном случае создается исключение.  
  
 Как правило, не следует вызывать методы <xref:System.Diagnostics.EventLogInstaller> из кода; они обычно вызываются только [Installutil.exe (средство установки)](~/docs/framework/tools/installutil-exe-installer-tool.md). <xref:System.Diagnostics.EventLogInstaller.CopyFromComponent%2A> используется программой Installutil.exe для установки значений свойств <xref:System.Diagnostics.EventLogInstaller> значения существующего <xref:System.Diagnostics.EventLog>.  
  
 Если <xref:System.Diagnostics.EventLog.Log%2A> из <xref:System.Diagnostics.EventLog> то есть переданный является пустой строкой ("»), необходимо задать <xref:System.Diagnostics.EventLog.Log%2A> свойство допустимое значение перед выполнением установки.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Указанный компонент не является объектом <see cref="T:System.Diagnostics.EventLog" />.  
  
- или - 
Свойство <see cref="P:System.Diagnostics.EventLog.Log" /> или <see cref="P:System.Diagnostics.EventLog.Source" /> указанного компонента имеет значение <see langword="null" />, либо является пустым.</exception>
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="eventLogInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver">Класс <see cref="T:System.Collections.IDictionary" /> используется для сохранения сведений, которые необходимы для выполнения отката или операции удаления.</param>
        <summary>Выполняет установку и записывает в реестр сведения о журнале событий.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.EventLogInstaller.Install%2A> Метод записывает в реестр сведения о журнале событий и связывает журнал событий с журнала, который задается параметром <xref:System.Diagnostics.EventLogInstaller.Log%2A> свойство. Если журнал не существует (и указан источник), <xref:System.Diagnostics.EventLogInstaller.Install%2A> создает журнал и связывает с ним новый источник.  
  
 Как правило, не следует вызывать методы <xref:System.Diagnostics.EventLogInstaller> из кода; они обычно вызываются только [Installutil.exe (средство установки)](~/docs/framework/tools/installutil-exe-installer-tool.md). Средство автоматически вызывает <xref:System.Diagnostics.EventLogInstaller.Install%2A> метод во время установки для записи сведений реестра, связанных с установленным журналом событий. Установка является транзакционной, поэтому в случае сбоя любого компонента проекта во время установки, все ранее установленные компоненты откатываются в состояние до установки. Это достигается посредством вызова каждого компонента <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> метод.  
  
 Используйте <xref:System.Diagnostics.EventLogInstaller> для регистрации нового источника для нового или существующего журнала событий; не используйте <xref:System.Diagnostics.EventLogInstaller> для изменения существующего источника. <xref:System.Diagnostics.EventLogInstaller> Класса не изменяет свойства существующего источника для сопоставления свойства указанного установки конфигурации. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Метод вызывает исключение, если <xref:System.Diagnostics.EventLogInstaller.Source%2A> соответствует имени источника, который зарегистрирован другой журнал событий на компьютере. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Метод пропускает регистрация источника, если <xref:System.Diagnostics.EventLogInstaller.Source%2A> свойства совпадает с именем источника, уже зарегистрировано в один журнал событий, указанного в <xref:System.Diagnostics.EventLogInstaller.Log%2A> свойство.  
  
 Программа установки приложения использует установщик проекта <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> свойство для автоматического сохранения сведений о компонентах, которые уже были установлены. Сведения о состоянии, которые передаются в <xref:System.Diagnostics.EventLogInstaller.Install%2A> как `stateSaver` параметра, постоянно обновляется, что средство устанавливается каждый <xref:System.Diagnostics.EventLogInstaller>. Как правило это необходимо в коде явным образом изменять сведения о состоянии.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">Используемая платформа отличается от Windows NT 4.0 и более поздних версий.</exception>
        <exception cref="T:System.ArgumentException">Имя, указанное в свойстве <see cref="P:System.Diagnostics.EventLogInstaller.Source" />, уже зарегистрировано для другого журнала событий.</exception>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentInstaller">
      <MemberSignature Language="C#" Value="public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEquivalentInstaller(class System.Configuration.Install.ComponentInstaller otherInstaller) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsEquivalentInstaller (otherInstaller As ComponentInstaller) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsEquivalentInstaller(System::Configuration::Install::ComponentInstaller ^ otherInstaller);" />
      <MemberSignature Language="F#" Value="override this.IsEquivalentInstaller : System.Configuration.Install.ComponentInstaller -&gt; bool" Usage="eventLogInstaller.IsEquivalentInstaller otherInstaller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherInstaller" Type="System.Configuration.Install.ComponentInstaller" />
      </Parameters>
      <Docs>
        <param name="otherInstaller">Установщик для сравнения.</param>
        <summary>Определяет, ссылается ли установщик на тот же источник, что и другой указанный установщик.</summary>
        <returns>Значение <see langword="true" />, если текущий установщик и установщик, указанный в параметре <paramref name="otherInstaller" />, должны устанавливать или удалять один и тот же источник; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило, не следует вызывать методы <xref:System.Diagnostics.EventLogInstaller> из кода; они обычно вызываются только с помощью установщика средства (Installutil.exe).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public string Log { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Log" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.Log" />
      <MemberSignature Language="VB.NET" Value="Public Property Log As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Log { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Log : string with get, set" Usage="System.Diagnostics.EventLogInstaller.Log" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя журнала, для которого задается источник.</summary>
        <value>Имя журнала. Существуют следующие имена: журнал приложения, журнал системы или имя, указанное пользователем. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно использовать <xref:System.Diagnostics.EventLogInstaller.Log%2A> свойство, связываемое источника, укажите в <xref:System.Diagnostics.EventLogInstaller.Source%2A> свойство с существующий журнал или новый журнал на локальном компьютере. [Installutil.exe (средство установки)](~/docs/framework/tools/installutil-exe-installer-tool.md) использует эти сведения для сопоставления источника в журнал в реестре компьютера. Приложения и службы должно вести запись в журнал приложений или настраиваемого журнала. Драйверы устройств должен записывать в системный журнал.  
  
 Для записи в журнал событий, необходимо создать источник и зарегистрировать его в журнал событий. Источник события можно вести запись только один файл журнала за раз. Установщик использует значение <xref:System.Diagnostics.EventLogInstaller.Source%2A> свойство для регистрации приложения с журналом событий в качестве допустимого источника записей. Если вы не укажете имя журнала перед запуском установщика, источник регистрируется в журнале приложений. При указании источника и существующий журнал, установщик создает новый источник событий и связывает его с журналом, указанную вами. При указании источника и новый журнал установщика связывает новый источник для нового журнала, в реестре, но журнал не создается, пока на него будут записаны первой записи.  
  
 Журналы событий сохраняются операционной системой как файлы. При использовании <xref:System.Diagnostics.EventLogInstaller> или <xref:System.Diagnostics.EventLog.CreateEventSource%2A> метод, чтобы создать новый журнал событий, связанный файл хранится в каталоге %SystemRoot%\System32\Config на указанном компьютере. Имя файла имеет значение, добавив первые 8 символов <xref:System.Diagnostics.EventLogInstaller.Log%2A> свойство с расширением «.evt».  
  
 Используйте <xref:System.Diagnostics.EventLogInstaller> для регистрации нового источника для нового или существующего журнала событий; не используйте <xref:System.Diagnostics.EventLogInstaller> для изменения существующего источника. <xref:System.Diagnostics.EventLogInstaller> Класса не изменяет свойства существующего источника для сопоставления свойства указанного установки конфигурации. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Метод вызывает исключение, если <xref:System.Diagnostics.EventLogInstaller.Source%2A> соответствует имени источника, который зарегистрирован другой журнал событий на компьютере. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Метод не зарегистрировать источник, если <xref:System.Diagnostics.EventLogInstaller.Source%2A> свойства совпадает с именем источника, уже зарегистрировано в один журнал событий, указанного в <xref:System.Diagnostics.EventLogInstaller.Log%2A> свойство.  
  
 Дополнительные сведения о поведении журналы событий и источников, см. в разделе <xref:System.Diagnostics.EventLog> документацию для класса <xref:System.Diagnostics.EventLog.Log%2A> и <xref:System.Diagnostics.EventLog.Source%2A> свойства.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="T:System.Diagnostics.EventLog" />
      </Docs>
    </Member>
    <Member MemberName="MessageResourceFile">
      <MemberSignature Language="C#" Value="public string MessageResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MessageResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.MessageResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MessageResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MessageResourceFile : string with get, set" Usage="System.Diagnostics.EventLogInstaller.MessageResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает путь к файлу ресурсов, содержащий сообщение о форматировании строк источника.</summary>
        <value>Путь файла ресурсов сообщения. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> свойство, чтобы настроить источник журнала событий для записи локализованных событий сообщений. Сообщения о событиях, определенные приложением строки, описывающие событие для пользователя.  
  
 Приложение может вносить записи журнала событий, используя идентификаторы ресурсов. Идентификатор ресурса индексирует сообщение в <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>. Средство просмотра событий использует идентификатор ресурса для поиска и отображения соответствующей строки из локализованного файла ресурсов на основе текущих настроек языка.  
  
 Источник событий должен быть настроен, предполагающих добавление записей в локализованных или исходных строк. Используйте <xref:System.Diagnostics.EventLog.WriteEvent%2A> метод для записи локализованных записей для источника, который настроен с помощью файла ресурсов сообщения.  
  
 Если приложение записывает строки сообщений событий напрямую, вместо того чтобы использовать идентификатор ресурса в локализованного файла ресурсов, не устанавливайте <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> свойство.  
  
 Если <xref:System.Diagnostics.EventLog.MachineName%2A> свойство не является идентификатором локального компьютера (".»), .NET Framework предполагает, что файл ресурсов на удаленном компьютере. Если <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> значение свойства содержит букву диска, файл ресурсов предполагается, что на \\ \\< machinename\>\\< диск\>$ общую папку (например, \\\server \c$). Если значение содержит строку % systemroot %, файл ресурсов предполагается, что на \\ \\< machinename\>\admin$ общую папку (например, \\\server\admin$).  
  
 Дополнительные сведения об определении сообщения о событиях и построению файлов ресурсов, см. в разделе «Компилятор сообщений» в документации Platform SDK в [ http://msdn.microsoft.com ](https://msdn.microsoft.com/).  
  
   
  
## Examples  
 В следующем примере кода задаются свойства установки для нового источника событий. В примере кода задает имя источника события, имя журнала событий и файл ресурсов для локализованного текста события.  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 В примере кода используется следующий текстовый файл сообщения, встроенный в библиотеку ресурсов EventLogMsgs.dll. Текстовый файл сообщения — источник, из которого создается файле ресурсов сообщения. В текстовом файле сообщения определяет, идентификаторы ресурсов и текст категории, сообщения о событии и строки вставки параметров.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="ParameterResourceFile">
      <MemberSignature Language="C#" Value="public string ParameterResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.ParameterResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParameterResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ParameterResourceFile : string with get, set" Usage="System.Diagnostics.EventLogInstaller.ParameterResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает путь к файлу ресурсов, содержащему строки параметров сообщения источника.</summary>
        <value>Путь к параметру файла ресурсов. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> свойство, чтобы настроить источник журнала событий для записи локализованных событий сообщений с помощью вставки строки параметров. Каждое сообщение локализованных событий, указанного в <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> свойство может содержать заполнители для вставки строк. Эти заполнители используются для указания позиции и идентификатор ресурса для независимой от языка строки в сообщении о событии. Средство просмотра событий замещающий текст с помощью соответствующих строк из <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> и форматирует сообщения журнала событий для записи локализованных событий.  
  
 Например следующий раздел файла текста сообщения определяет строку с заполнителем параметров:  
  
```  
  
MessageId = 1501  
Severity = Success  
Facility = Application  
SymbolicName = COMPONENT_STARTING  
Language=English  
Component %%6050 is starting.  
.  
```  
  
 В файле ресурсов параметр строки вставки должны быть определены с идентификатором ресурса, соответствующий заполнитель, как показано ниже:  
  
```  
MessageId = 6050  
Severity = Success  
Facility = Application  
SymbolicName = COMPONENT_NAME_MSGID  
Language=English  
TRIGGER.EXE  
.  
```  
  
 Источник событий должен быть настроен, предполагающих добавление записей в локализованных или исходных строк. Используйте <xref:System.Diagnostics.EventLog.WriteEvent%2A> метод для записи локализованных записей для источника, который настроен с помощью файла ресурсов сообщения.  
  
 Если приложение записывает сообщения событий строк непосредственно в журнал событий, или если ваши <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> отсутствуют сообщения с помощью заполнителей параметров вставки, не устанавливайте <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> свойство.  
  
 Дополнительные сведения об определении сообщения о событиях и построению файлов ресурсов, см. в разделе «Компилятор сообщений» в документации Platform SDK в [ http://msdn.microsoft.com ](https://msdn.microsoft.com/).  
  
   
  
## Examples  
 В следующем примере кода задаются свойства установки для нового источника событий. В примере кода задает имя источника события, имя журнала событий и файл ресурсов для локализованного текста события.  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 В примере кода используется следующий текстовый файл сообщения, встроенный в библиотеку ресурсов EventLogMsgs.dll. Текстовый файл сообщения — источник, из которого создается файле ресурсов сообщения. В текстовом файле сообщения определяет, идентификаторы ресурсов и текст категории, сообщения о событии и строки вставки параметров. В частности сообщение, определенное для идентификатора ресурса 1004 использует заполнитель для строки параметра, определенного для идентификатора ресурса 5002.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="eventLogInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">Набор параметров <see cref="T:System.Collections.IDictionary" />, содержащих сведения о состоянии компьютера до установки.</param>
        <summary>Восстанавливает исходное состояние компьютера (до установки) путем отмены данных журнала событий, внесенных в реестр в процессе установки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> Метод отменяет эффект <xref:System.Diagnostics.EventLogInstaller.Install%2A> метод. <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> вызывается при сбое установки любого компонента в проекте. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Создает метод, или задает свойства для журнала событий и источника событий. <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> Удаляет журнал событий и источника, либо устанавливает его перед установкой значения для свойств существующего источника.  
  
 Как правило, не следует вызывать методы <xref:System.Diagnostics.EventLogInstaller> из кода; они обычно вызываются только [Installutil.exe (средство установки)](~/docs/framework/tools/installutil-exe-installer-tool.md). Вызывает средство <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> метод, при сбое того или иного компонента для установки, чтобы отменить все изменения, которые уже сделанных в процессе установки.  
  
 Программа установки приложения использует установщик проекта <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> свойство для автоматического сохранения сведений о компонентах, которые уже были установлены. Сведения о состоянии, которые передаются в <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> как `savedState` параметра, постоянно обновляется, как средство выполняет накат каждого <xref:System.Diagnostics.EventLogInstaller>. Как правило это необходимо в коде явным образом изменять сведения о состоянии.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="System.Diagnostics.EventLogInstaller.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя источника, регистрируемого в журнале.</summary>
        <value>Имя, регистрируемое в журнале событий как имя источника записей. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Источник событий определяет журналы событий. Часто это имя приложения или имя компонента в рамках крупного приложения.  
  
 Установщик использует значение <xref:System.Diagnostics.EventLogInstaller.Source%2A> свойство для регистрации приложения с журналом событий в качестве допустимого источника записей. Имя нового источника не может совпадать с существующим именем источника или с существующим именем журнала событий. Каждый источник может вести запись только одного журнала событий во время. Тем не менее приложение может использовать несколько источников для записи нескольких журналов событий. Например приложению может потребоваться несколько источников, настроенных для различных журналов событий или разным файлам ресурсов.  
  
 Приложения и службы должно вести запись в журнал приложений или настраиваемого журнала. Драйверы устройств должен записывать в системный журнал. Если вы не укажете имя журнала перед запуском установщика, источник регистрируется в журнале приложений. Если указать имя журнала, который не существует, система регистрирует <xref:System.Diagnostics.EventLogInstaller.Source%2A> в этот журнал, но журнал не создается, пока на него будут записаны первой записи.  
  
 Используйте <xref:System.Diagnostics.EventLogInstaller> для регистрации нового источника для нового или существующего журнала событий; не используйте <xref:System.Diagnostics.EventLogInstaller> для изменения существующего источника. <xref:System.Diagnostics.EventLogInstaller> Класса не изменяет свойства существующего источника для сопоставления свойства указанного установки конфигурации. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Метод вызывает исключение, если <xref:System.Diagnostics.EventLogInstaller.Source%2A> соответствует имени источника, который зарегистрирован другой журнал событий на компьютере. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Метод не зарегистрировать источник, если <xref:System.Diagnostics.EventLogInstaller.Source%2A> свойства совпадает с именем источника, уже зарегистрировано в один журнал событий, указанного в <xref:System.Diagnostics.EventLogInstaller.Log%2A> свойство.  
  
 Дополнительные сведения о поведении журналы событий и источников, см. в разделе <xref:System.Diagnostics.EventLog> документацию для класса <xref:System.Diagnostics.EventLog.Log%2A> и <xref:System.Diagnostics.EventLog.Source%2A> свойства.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="T:System.Diagnostics.EventLog" />
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Uninstall (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Uninstall(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Uninstall : System.Collections.IDictionary -&gt; unit" Usage="eventLogInstaller.Uninstall savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">Набор параметров <see cref="T:System.Collections.IDictionary" />, содержащих сведения о состоянии компьютера до установки.</param>
        <summary>Удаляет из реестра сведения о журнале событий.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Diagnostics.EventLogInstaller.UninstallAction%2A> свойство имеет значение `Remove`, <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> метод удаляет источника и журнала, связанной, если создан установщик <xref:System.Diagnostics.EventLogInstaller.Log%2A> и <xref:System.Diagnostics.EventLogInstaller.Source%2A> свойства заданы Создание нового журнала событий и источника.  
  
 Как правило, не следует вызывать методы <xref:System.Diagnostics.EventLogInstaller> из кода; они обычно вызываются только [Installutil.exe (средство установки)](~/docs/framework/tools/installutil-exe-installer-tool.md) в режиме удаления. Средство автоматически вызывает <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> метод восстановления части системы, которые были затронуты установка, в состояние до установки. Это включает в себя удаление данных реестра, связанный с удаляемым журналом событий.  
  
 Приложения удалите служит установщик проекта <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> свойство для автоматического сохранения сведений о компонентах, которые уже был удален. Сведения о состоянии, которые передаются в <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> как `savedState` параметра, постоянно обновляется, так как средство удаляет каждый <xref:System.Diagnostics.EventLogInstaller>. Как правило это необходимо в коде явным образом изменять сведения о состоянии.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="UninstallAction">
      <MemberSignature Language="C#" Value="public System.Configuration.Install.UninstallAction UninstallAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Install.UninstallAction UninstallAction" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.UninstallAction" />
      <MemberSignature Language="VB.NET" Value="Public Property UninstallAction As UninstallAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Install::UninstallAction UninstallAction { System::Configuration::Install::UninstallAction get(); void set(System::Configuration::Install::UninstallAction value); };" />
      <MemberSignature Language="F#" Value="member this.UninstallAction : System.Configuration.Install.UninstallAction with get, set" Usage="System.Diagnostics.EventLogInstaller.UninstallAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.Install.UninstallAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, должно ли средство <see href="https://docs.microsoft.com/dotnet/framework/tools/installutil-exe-installer-tool">Installutil.exe (установщик)</see> удалить журнал событий или оставить его в текущем состоянии во время удаления.</summary>
        <value>Одно из значений <see cref="T:System.Configuration.Install.UninstallAction" />, показывающее состояние, в котором нужно оставить журнал событий при удалении <see cref="T:System.Diagnostics.EventLog" />. Значение по умолчанию — <see langword="Remove" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При установке в журнал событий, его можно связать в существующий журнал. Если сделать это, необходимо решить, ли журнал должен вернуться в состояние до установки или остаются в состоянии текущего, после установки. Если выбрано, чтобы вернуться в журнал событий состояния, предшествовавшего установке, изменения в записи журнала событий во время установки, не восстанавливаются. Вы можете сбросить свойства журнала событий, связанных с <xref:System.Diagnostics.EventLogInstaller> их перед установкой значения.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Параметр <see cref="P:System.Diagnostics.EventLogInstaller.UninstallAction" /> содержит недопустимое значение. Допустимые значения этого свойства <see langword="Remove" /> и <see langword="NoAction" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>