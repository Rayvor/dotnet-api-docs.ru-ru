<Type Name="EventLogInstaller" FullName="System.Diagnostics.EventLogInstaller">
  <Metadata><Meta Name="ms.openlocfilehash" Value="daaccdd7e7aa2f0d40f6ad9d127bb1d9a7b2f01a" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70454960" /></Metadata><TypeSignature Language="C#" Value="public class EventLogInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventLogInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventLogInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class EventLogInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type EventLogInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Позволяет устанавливать и настраивать журнал событий, используемый для считывания и записи данных при запуске приложения.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используется программой [Installutil. exe (установщик)](~/docs/framework/tools/installutil-exe-installer-tool.md) при установке журнала событий. <xref:System.Diagnostics.EventLogInstaller> <xref:System.Diagnostics.EventLogInstaller> Класс может устанавливать журналы событий только на локальном компьютере.  
  
 Используйте класс <xref:System.Diagnostics.EventLogInstaller> , когда приложение записывает данные в журнал событий; необязательно использовать установщик журнала событий для чтения приложения из журнала событий. Приложения и службы должны записывать в журнал приложений или пользовательский журнал. Драйверы устройств должны записывать в системный журнал.  
  
> [!NOTE]
>  Журнал безопасности доступен только для чтения.  
  
 Установщик создает источник событий, указанный в <xref:System.Diagnostics.EventLogInstaller.Source%2A> свойстве, и регистрирует его для журнала событий, указанного в <xref:System.Diagnostics.EventLogInstaller.Log%2A> свойстве. Такое поведение аналогично вызову <xref:System.Diagnostics.EventLog.CreateEventSource%2A> <xref:System.Diagnostics.EventLog> для компонента.  
  
 Используйте методы <xref:System.Diagnostics.EventLog.WriteEntry%2A> и для записи событий в журнал событий. <xref:System.Diagnostics.EventLog.WriteEvent%2A> Для записи событий необходимо указать источник события. перед записью первой записи с источником необходимо создать и настроить источник события.  
  
 Создайте новый источник событий во время установки приложения. Это позволяет операционной системе обновлять список зарегистрированных источников событий и их конфигураций. Если операционная система не обновила список источников событий и вы пытаетесь написать событие с новым источником, операция записи завершится ошибкой. Новый источник можно настроить с помощью <xref:System.Diagnostics.EventLogInstaller>или <xref:System.Diagnostics.EventLog.CreateEventSource%2A> с помощью метода. Для создания нового источника событий необходимо иметь права администратора на компьютере.  
  
 Можно создать источник событий для существующего журнала событий или нового журнала событий. При создании нового источника для нового журнала событий система регистрирует источник для этого журнала, но журнал не создается, пока в него не будет записана первая запись.  
  
 Чтобы установить журнал событий, создайте класс установщика проекта, наследующий от <xref:System.Configuration.Install.Installer>, и <xref:System.ComponentModel.RunInstallerAttribute> задайте для класса `true`значение. В проекте создайте <xref:System.Diagnostics.EventLogInstaller> для каждого журнала событий, в который приложение будет выполнять запись, и добавьте экземпляр в класс установщика проекта.  
  
 При вызове [Installutil. exe (установщик)](~/docs/framework/tools/installutil-exe-installer-tool.md) он просматривает <xref:System.ComponentModel.RunInstallerAttribute>. Если это так `true`, средство устанавливает все элементы <xref:System.Configuration.Install.Installer.Installers%2A> коллекции, связанные с установщиком проекта. Если <xref:System.ComponentModel.RunInstallerAttribute> имеет `false`значение, средство игнорирует установщик проекта.  
  
 Вы изменяете другие свойства <xref:System.Diagnostics.EventLogInstaller> либо до, либо после добавления экземпляра <xref:System.Configuration.Install.Installer.Installers%2A> в коллекцию установщика проекта, но перед запуском средства установки. Если приложение будет записывать <xref:System.Diagnostics.EventLogInstaller.Source%2A> данные в журнал событий, необходимо задать свойство.  
  
 Используется <xref:System.Diagnostics.EventLogInstaller> для регистрации нового источника для нового или существующего журнала событий; не используйте <xref:System.Diagnostics.EventLogInstaller> для изменения существующего источника. <xref:System.Diagnostics.EventLogInstaller> Класс не изменяет свойства конфигурации существующего источника в соответствии с указанными свойствами установки. Метод создает исключение, <xref:System.Diagnostics.EventLogInstaller.Source%2A> если свойство соответствует имени источника, зарегистрированному для другого журнала событий на компьютере. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Метод не регистрирует источник, <xref:System.Diagnostics.EventLogInstaller.Source%2A> если свойство соответствует имени источника, которое уже зарегистрировано для того же журнала <xref:System.Diagnostics.EventLogInstaller.Log%2A> событий, указанного в свойстве. <xref:System.Diagnostics.EventLogInstaller.Install%2A>  
  
 Вы можете зарегистрировать источник событий в локализованных файлах ресурсов для категории событий и строк сообщений. Приложение может записывать записи журнала событий с помощью идентификаторов ресурсов вместо того, чтобы указывать фактическую строку. Просмотр событий использует идентификатор ресурса для поиска и вывода соответствующей строки из локализованного файла ресурсов на основе текущих языковых параметров. Можно зарегистрировать отдельный файл для категорий событий, сообщений и строк вставки параметров или зарегистрировать один и тот же файл ресурсов для всех трех типов строк. Используйте свойства <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> ,, <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>  и <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A>  , чтобы настроить источник для записи локализованных записей в журнал событий. <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> Если приложение записывает значения строк непосредственно в журнал событий, задавать эти свойства не нужно.  
  
 Источник должен быть настроен либо для записи локализованных записей, либо для записи прямых строк. Если приложение записывает записи, используя как идентификаторы ресурсов, так и строковые значения, необходимо зарегистрировать два отдельных источника. Например, можно настроить один источник с файлами ресурсов, а затем использовать этот источник в <xref:System.Diagnostics.EventLog.WriteEvent%2A> методе для записи записей, использующих идентификаторы ресурсов, в журнал событий. Создайте другой источник без файлов ресурсов, а затем используйте этот источник в <xref:System.Diagnostics.EventLog.WriteEntry%2A> методе для записи строк непосредственно в журнал событий с помощью этого источника.  
  
 Как правило, методы <xref:System.Diagnostics.EventLogInstaller> класса не вызываются из кода. они обычно вызываются только программой Installutil. exe. Средство автоматически вызывает <xref:System.Diagnostics.EventLogInstaller.Install%2A> метод во время процесса установки. При необходимости он создает ошибки, вызывая <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> метод для объекта, создавшего исключение.  
  
   
  
## Examples  
 В следующем примере кода задаются свойства установки для нового источника событий. В примере кода задается имя источника и имя журнала событий и добавляется <xref:System.Diagnostics.EventLogInstaller> <xref:System.Configuration.Install.Installer.Installers%2A> в коллекцию.  
  
 [!code-cpp[EventLogInstaller#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogInstaller/CPP/eventloginstaller.cpp#1)]
 [!code-csharp[EventLogInstaller#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogInstaller/CS/eventloginstaller.cs#1)]
 [!code-vb[EventLogInstaller#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogInstaller/VB/eventloginstaller.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.EventLog" />
    <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
    <related type="Article" href="~/docs/framework/tools/installutil-exe-installer-tool.md">Installutil.exe (инструмент для установки)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.EventLogInstaller" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryCount">
      <MemberSignature Language="C#" Value="public int CategoryCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CategoryCount" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.CategoryCount" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CategoryCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryCount : int with get, set" Usage="System.Diagnostics.EventLogInstaller.CategoryCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает число категорий в файле ресурсов категорий.</summary>
        <value>Число категорий в файле ресурсов категории. Значение по умолчанию равно нулю.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойства <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> и для записи событий с локализованными строками категорий. <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> Просмотр событий отображает категорию для записи события, если при создании события была указана категория. Категории журнала событий — это определяемые приложением строки, помогающие фильтровать события или предоставлять сведения о событии. Например, приложение может определять отдельные категории для различных компонентов или различных операций.  
  
 Категории событий необязательны; Если приложение не использует категории, не устанавливайте <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> свойства и. <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A>  
  
 Дополнительные сведения об определении сообщений о событиях и создании файлов ресурсов событий см. в разделе "компилятор сообщений" документации по Platform SDK по [http://msdn.microsoft.com](https://msdn.microsoft.com/)адресу.  
  
   
  
## Examples  
 В следующем примере кода задаются свойства установки для нового источника событий. В примере кода задается имя источника события, имя журнала событий и файл ресурсов для локализованного текста события.  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 В примере кода используется следующий текстовый файл сообщения, встроенный в библиотеку ресурсов Евентлогмсгс. dll. Текстовый файл сообщения — это источник, из которого создается файл ресурсов сообщения. В текстовом файле сообщения определяются идентификаторы ресурсов и текст для категории, сообщения о событии и строки вставки параметров.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryCount" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="CategoryResourceFile">
      <MemberSignature Language="C#" Value="public string CategoryResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryResourceFile : string with get, set" Usage="System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает путь к файлу ресурсов, содержащему строки категорий источника.</summary>
        <value>Путь к файлу ресурсов категории. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте свойства <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> и для записи событий с локализованными строками категорий. <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> Просмотр событий отображает категорию для записи события, если при создании события была указана категория. Категории журнала событий — это определяемые приложением строки, помогающие фильтровать события или предоставлять сведения о событии. Например, приложение может иметь отдельные категории для различных компонентов или различных операций.  
  
 Категории событий необязательны; Если приложение не использует категории, не устанавливайте <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> свойства и. <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A>  
  
 Дополнительные сведения об определении сообщений о событиях и создании файлов ресурсов событий см. в разделе "компилятор сообщений" документации по Platform SDK по [http://msdn.microsoft.com](https://msdn.microsoft.com/)адресу.  
  
   
  
## Examples  
 В следующем примере кода задаются свойства установки для нового источника событий. В примере кода задается имя источника события, имя журнала событий и файл ресурсов для локализованного текста события.  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 В примере кода используется следующий текстовый файл сообщения, встроенный в библиотеку ресурсов Евентлогмсгс. dll. Текстовый файл сообщения — это источник, из которого создается файл ресурсов сообщения. В текстовом файле сообщения определяются идентификаторы ресурсов и текст для категории, сообщения о событии и строки вставки параметров.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryCount" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="eventLogInstaller.CopyFromComponent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">Объект <see cref="T:System.ComponentModel.IComponent" /> для использования в качестве шаблона для <see cref="T:System.Diagnostics.EventLogInstaller" />.</param>
        <summary>Копирует значения свойств компонента <see cref="T:System.Diagnostics.EventLog" />, которые требуются во время установки журнала событий.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Компонент, указанный `component` параметром, должен <xref:System.Diagnostics.EventLog>иметь значение; в противном случае создается исключение.  
  
 Как правило, методы <xref:System.Diagnostics.EventLogInstaller> из в коде не вызываются; они обычно вызываются только программой [Installutil. exe (установщик)](~/docs/framework/tools/installutil-exe-installer-tool.md). <xref:System.Diagnostics.EventLogInstaller.CopyFromComponent%2A>используется программой Installutil. exe для установки значений свойств для в <xref:System.Diagnostics.EventLogInstaller> значениях существующих. <xref:System.Diagnostics.EventLog>  
  
 Если переданное значение передается в виде пустой строки ("") <xref:System.Diagnostics.EventLog.Log%2A> , то перед выполнением программы установки необходимо задать для свойства допустимое значения. <xref:System.Diagnostics.EventLog.Log%2A> <xref:System.Diagnostics.EventLog>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Указанный компонент не является объектом <see cref="T:System.Diagnostics.EventLog" />.  
  
- или - 
Свойство <see cref="P:System.Diagnostics.EventLog.Log" /> или <see cref="P:System.Diagnostics.EventLog.Source" /> указанного компонента имеет значение <see langword="null" />, либо является пустым.</exception>
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="eventLogInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver">Класс <see cref="T:System.Collections.IDictionary" /> используется для сохранения сведений, которые необходимы для выполнения отката или операции удаления.</param>
        <summary>Выполняет установку и записывает в реестр сведения о журнале событий.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод записывает сведения журнала событий в реестр и связывает журнал событий с журналом, указанным <xref:System.Diagnostics.EventLogInstaller.Log%2A> свойством. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Если журнал еще не существует (и указан источник), <xref:System.Diagnostics.EventLogInstaller.Install%2A> создает журнал и связывает с ним новый источник.  
  
 Как правило, методы <xref:System.Diagnostics.EventLogInstaller> из в коде не вызываются; они обычно вызываются только программой [Installutil. exe (установщик)](~/docs/framework/tools/installutil-exe-installer-tool.md). Средство автоматически вызывает <xref:System.Diagnostics.EventLogInstaller.Install%2A> метод во время процесса установки для записи данных реестра, связанных с устанавливаемым журналом событий. Установка является транзакционной, поэтому если во время установки произошел сбой какого-либо компонента проекта установки, то все ранее установленные компоненты будут восстановлены до состояния до установки. Это достигается путем вызова <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> метода каждого компонента.  
  
 Используется <xref:System.Diagnostics.EventLogInstaller> для регистрации нового источника для нового или существующего журнала событий; не используйте <xref:System.Diagnostics.EventLogInstaller> для изменения существующего источника. <xref:System.Diagnostics.EventLogInstaller> Класс не изменяет свойства конфигурации существующего источника в соответствии с указанными свойствами установки. Метод создает исключение, <xref:System.Diagnostics.EventLogInstaller.Source%2A> если свойство соответствует имени источника, зарегистрированному для другого журнала событий на компьютере. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Метод пропускает регистрацию источника, <xref:System.Diagnostics.EventLogInstaller.Source%2A> если свойство совпадает с именем источника, которое уже зарегистрировано для того же журнала <xref:System.Diagnostics.EventLogInstaller.Log%2A> событий, указанного в свойстве. <xref:System.Diagnostics.EventLogInstaller.Install%2A>  
  
 Программа установки приложения использует <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> свойство установщика проекта для автоматического сохранения сведений о уже установленных компонентах. Эти сведения о состоянии, которые передаются <xref:System.Diagnostics.EventLogInstaller.Install%2A> в `stateSaver` качестве параметра, постоянно обновляются <xref:System.Diagnostics.EventLogInstaller>по мере установки средства. Как правило, в коде нет необходимости явно изменять эти сведения о состоянии.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Имя, указанное в свойстве <see cref="P:System.Diagnostics.EventLogInstaller.Source" />, уже зарегистрировано для другого журнала событий.</exception>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentInstaller">
      <MemberSignature Language="C#" Value="public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEquivalentInstaller(class System.Configuration.Install.ComponentInstaller otherInstaller) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsEquivalentInstaller (otherInstaller As ComponentInstaller) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsEquivalentInstaller(System::Configuration::Install::ComponentInstaller ^ otherInstaller);" />
      <MemberSignature Language="F#" Value="override this.IsEquivalentInstaller : System.Configuration.Install.ComponentInstaller -&gt; bool" Usage="eventLogInstaller.IsEquivalentInstaller otherInstaller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherInstaller" Type="System.Configuration.Install.ComponentInstaller" />
      </Parameters>
      <Docs>
        <param name="otherInstaller">Установщик для сравнения.</param>
        <summary>Определяет, ссылается ли установщик на тот же источник, что и другой указанный установщик.</summary>
        <returns>Значение <see langword="true" />, если текущий установщик и установщик, указанный в параметре <paramref name="otherInstaller" />, должны устанавливать или удалять один и тот же источник; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило, методы <xref:System.Diagnostics.EventLogInstaller> из в коде не вызываются; они обычно вызываются только средством установщика (Installutil. exe).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public string Log { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Log" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.Log" />
      <MemberSignature Language="VB.NET" Value="Public Property Log As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Log { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Log : string with get, set" Usage="System.Diagnostics.EventLogInstaller.Log" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя журнала, для которого задается источник.</summary>
        <value>Имя журнала. Существуют следующие имена: журнал приложения, журнал системы или имя, указанное пользователем. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.EventLogInstaller.Log%2A> Свойство можно использовать для связывания источника, указанного <xref:System.Diagnostics.EventLogInstaller.Source%2A> в свойстве, с существующим журналом или новым журналом на локальном компьютере. Программа [Installutil. exe (установщик)](~/docs/framework/tools/installutil-exe-installer-tool.md) использует эти сведения для подключения источника к журналу в реестре компьютера. Приложения и службы должны записывать в журнал приложений или пользовательский журнал. Драйверы устройств должны записывать в системный журнал.  
  
 Чтобы записать записи в журнал событий, необходимо создать источник и зарегистрировать его в журнале событий. Источник событий может записывать только один журнал за раз. Установщик использует значение <xref:System.Diagnostics.EventLogInstaller.Source%2A> свойства для регистрации приложения в журнале событий в качестве допустимого источника записей. Если не указать имя журнала перед запуском программы установки, установщик регистрирует ваш источник в журнале приложений. Если указать новый источник и существующий журнал, установщик создаст новый источник событий и свяжет его с указанным вами журналом. Если указать и новый источник, и новый журнал, установщик свяжет новый источник с новым журналом в реестре, но журнал не будет создан, пока в него не будет записана первая запись.  
  
 В операционной системе журналы событий хранятся в виде файлов. При использовании <xref:System.Diagnostics.EventLogInstaller> <xref:System.Diagnostics.EventLog.CreateEventSource%2A> метода или для создания нового журнала событий связанный файл сохраняется в каталоге%SystemRoot%\system32\config на указанном компьютере. Имя файла задается путем добавления первых 8 символов <xref:System.Diagnostics.EventLogInstaller.Log%2A> свойства к расширению имени файла ". evt".  
  
 Используется <xref:System.Diagnostics.EventLogInstaller> для регистрации нового источника для нового или существующего журнала событий; не используйте <xref:System.Diagnostics.EventLogInstaller> для изменения существующего источника. <xref:System.Diagnostics.EventLogInstaller> Класс не изменяет свойства конфигурации существующего источника в соответствии с указанными свойствами установки. Метод создает исключение, <xref:System.Diagnostics.EventLogInstaller.Source%2A> если свойство соответствует имени источника, зарегистрированному для другого журнала событий на компьютере. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Метод не регистрирует источник, <xref:System.Diagnostics.EventLogInstaller.Source%2A> если свойство соответствует имени источника, которое уже зарегистрировано для того же журнала <xref:System.Diagnostics.EventLogInstaller.Log%2A> событий, указанного в свойстве. <xref:System.Diagnostics.EventLogInstaller.Install%2A>  
  
 Более подробные сведения о поведении журналов событий и источников см <xref:System.Diagnostics.EventLog> . в документации по классам <xref:System.Diagnostics.EventLog.Log%2A> для свойств и <xref:System.Diagnostics.EventLog.Source%2A> .  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="T:System.Diagnostics.EventLog" />
      </Docs>
    </Member>
    <Member MemberName="MessageResourceFile">
      <MemberSignature Language="C#" Value="public string MessageResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MessageResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.MessageResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MessageResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MessageResourceFile : string with get, set" Usage="System.Diagnostics.EventLogInstaller.MessageResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает путь к файлу ресурсов, содержащий сообщение о форматировании строк источника.</summary>
        <value>Путь файла ресурсов сообщения. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> Используйте свойство, чтобы настроить источник журнала событий для записи локализованных сообщений о событиях. Сообщения о событиях — это определяемые приложением строки, которые описывают событие для пользователя.  
  
 Приложение может записывать записи журнала событий с помощью идентификаторов ресурсов. Идентификатор ресурса индексирует сообщение, <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>расположенное в. Просмотр событий использует идентификатор ресурса для поиска и вывода соответствующей строки из локализованного файла ресурсов на основе текущих языковых параметров.  
  
 Источник события должен быть настроен либо для записи локализованных записей, либо для записи прямых строк. <xref:System.Diagnostics.EventLog.WriteEvent%2A> Используйте метод для записи локализованных записей для источника, настроенного с помощью файла ресурсов сообщения.  
  
 Если приложение записывает строки сообщений о событиях напрямую, а не использует идентификатор ресурса в локализованном файле ресурсов, не устанавливайте <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> свойство.  
  
 <xref:System.Diagnostics.EventLog.MachineName%2A> Если свойство не является идентификатором локального компьютера ("."), .NET Framework предполагает, что файл ресурсов находится на удаленном компьютере. \> \\ \\ \\\>\\Если значение свойства содержит букву диска, предполагается, что файл ресурсов находится на < MachineName < Drive $ Share (например, путь \server <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>  \c $). Если значение содержит строку% systemroot% \\, предполагается, что файл ресурсов находится в \\папке < MachineName\>\Admin $ Share (например, \\\сервер\админ $).  
  
 Дополнительные сведения об определении сообщений о событиях и создании файлов ресурсов событий см. в разделе "компилятор сообщений" документации по Platform SDK по [http://msdn.microsoft.com](https://msdn.microsoft.com/)адресу.  
  
   
  
## Examples  
 В следующем примере кода задаются свойства установки для нового источника событий. В примере кода задается имя источника события, имя журнала событий и файл ресурсов для локализованного текста события.  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 В примере кода используется следующий текстовый файл сообщения, встроенный в библиотеку ресурсов Евентлогмсгс. dll. Текстовый файл сообщения — это источник, из которого создается файл ресурсов сообщения. В текстовом файле сообщения определяются идентификаторы ресурсов и текст для категории, сообщения о событии и строки вставки параметров.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="ParameterResourceFile">
      <MemberSignature Language="C#" Value="public string ParameterResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.ParameterResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParameterResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ParameterResourceFile : string with get, set" Usage="System.Diagnostics.EventLogInstaller.ParameterResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает путь к файлу ресурсов, содержащему строки параметров сообщения источника.</summary>
        <value>Путь к параметру файла ресурсов. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> Используйте свойство, чтобы настроить источник журнала событий для записи локализованных сообщений о событиях с вставленными строками параметров. Каждое локализованное сообщение о событии <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> , указанное в свойстве, может содержать заполнители для строк вставки. Эти заполнители используются для указания расположения и идентификатора ресурса для строки, не зависящей от языка, в сообщении о событии. Просмотр событий заменяет заполнители соответствующими строками из <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> и форматирует сообщение журнала событий для записи локализованного события.  
  
 Например, следующий раздел текстового файла сообщения определяет строку с заполнителем параметра:  
  
```  
  
MessageId = 1501  
Severity = Success  
Facility = Application  
SymbolicName = COMPONENT_STARTING  
Language=English  
Component %%6050 is starting.  
.  
```  
  
 В файле ресурсов параметра строка вставки должна быть определена с идентификатором ресурса, соответствующим заполнительу, как показано ниже:  
  
```  
MessageId = 6050  
Severity = Success  
Facility = Application  
SymbolicName = COMPONENT_NAME_MSGID  
Language=English  
TRIGGER.EXE  
.  
```  
  
 Источник события должен быть настроен либо для записи локализованных записей, либо для записи прямых строк. <xref:System.Diagnostics.EventLog.WriteEvent%2A> Используйте метод для записи локализованных записей для источника, настроенного с помощью файла ресурсов сообщения.  
  
 Если приложение записывает строки сообщений о событиях непосредственно в журнал событий или если <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> не содержит сообщений с заполнителями для вставки параметров, не <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> устанавливайте свойство.  
  
 Дополнительные сведения об определении сообщений о событиях и создании файлов ресурсов событий см. в разделе "компилятор сообщений" документации по Platform SDK по [http://msdn.microsoft.com](https://msdn.microsoft.com/)адресу.  
  
   
  
## Examples  
 В следующем примере кода задаются свойства установки для нового источника событий. В примере кода задается имя источника события, имя журнала событий и файл ресурсов для локализованного текста события.  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 В примере кода используется следующий текстовый файл сообщения, встроенный в библиотеку ресурсов Евентлогмсгс. dll. Текстовый файл сообщения — это источник, из которого создается файл ресурсов сообщения. В текстовом файле сообщения определяются идентификаторы ресурсов и текст для категории, сообщения о событии и строки вставки параметров. В частности, сообщение, определенное для идентификатора ресурса 1004, использует заполнитель для строки параметра, определенной для идентификатора ресурса 5002.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="eventLogInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">Набор параметров <see cref="T:System.Collections.IDictionary" />, содержащих сведения о состоянии компьютера до установки.</param>
        <summary>Восстанавливает исходное состояние компьютера (до установки) путем отмены данных журнала событий, внесенных в реестр в процессе установки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод отменяет влияние  <xref:System.Diagnostics.EventLogInstaller.Install%2A> метода. <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> <xref:System.Diagnostics.EventLogInstaller.Rollback%2A>вызывается, если установка любого компонента в проекте установки завершается сбоем. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Метод создает или задает свойства для журнала событий и источника события. <xref:System.Diagnostics.EventLogInstaller.Rollback%2A>либо удаляет журнал событий и источник, либо сбрасывает свойства существующего источника до значений, предпринятых до установки.  
  
 Как правило, методы <xref:System.Diagnostics.EventLogInstaller> из в коде не вызываются; они обычно вызываются только программой [Installutil. exe (установщик)](~/docs/framework/tools/installutil-exe-installer-tool.md). Средство вызывает <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> метод, если этот или другой компонент не удалось установить, чтобы отменить все изменения, внесенные в процесс установки.  
  
 Программа установки приложения использует <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> свойство установщика проекта для автоматического сохранения сведений о уже установленных компонентах. Эти сведения о состоянии, которые передаются <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> в `savedState` качестве параметра, постоянно обновляются по мере отката <xref:System.Diagnostics.EventLogInstaller>средством. Как правило, в коде нет необходимости явно изменять эти сведения о состоянии.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="System.Diagnostics.EventLogInstaller.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя источника, регистрируемого в журнале.</summary>
        <value>Имя, регистрируемое в журнале событий как имя источника записей. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Источник события указывает, в каком журнале регистрируется событие. Часто это имя приложения или имя компонента в большом приложении.  
  
 Установщик использует значение <xref:System.Diagnostics.EventLogInstaller.Source%2A> свойства для регистрации приложения в журнале событий в качестве допустимого источника записей. Новое имя источника не может совпадать с существующим именем источника или именем существующего журнала событий. Каждый источник может одновременно записывать только в один журнал событий. Однако приложение может использовать несколько источников для записи в несколько журналов событий. Например, приложению может потребоваться несколько источников, настроенных для различных журналов событий или разных файлов ресурсов.  
  
 Приложения и службы должны записывать в журнал приложений или пользовательский журнал. Драйверы устройств должны записывать в системный журнал. Если не указать имя журнала перед запуском программы установки, установщик регистрирует ваш источник в журнале приложений. Если указать имя журнала, который не существует, система регистрирует его <xref:System.Diagnostics.EventLogInstaller.Source%2A> в этом журнале, но журнал не будет создан, пока в него не будет записана первая запись.  
  
 Используется <xref:System.Diagnostics.EventLogInstaller> для регистрации нового источника для нового или существующего журнала событий; не используйте <xref:System.Diagnostics.EventLogInstaller> для изменения существующего источника. <xref:System.Diagnostics.EventLogInstaller> Класс не изменяет свойства конфигурации существующего источника в соответствии с указанными свойствами установки. Метод создает исключение, <xref:System.Diagnostics.EventLogInstaller.Source%2A> если свойство соответствует имени источника, зарегистрированному для другого журнала событий на компьютере. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Метод не регистрирует источник, <xref:System.Diagnostics.EventLogInstaller.Source%2A> если свойство соответствует имени источника, которое уже зарегистрировано для того же журнала <xref:System.Diagnostics.EventLogInstaller.Log%2A> событий, указанного в свойстве. <xref:System.Diagnostics.EventLogInstaller.Install%2A>  
  
 Более подробные сведения о поведении журналов событий и источников см <xref:System.Diagnostics.EventLog> . в документации по классам <xref:System.Diagnostics.EventLog.Log%2A> для свойств и <xref:System.Diagnostics.EventLog.Source%2A> .  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="T:System.Diagnostics.EventLog" />
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Uninstall (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Uninstall(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Uninstall : System.Collections.IDictionary -&gt; unit" Usage="eventLogInstaller.Uninstall savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">Набор параметров <see cref="T:System.Collections.IDictionary" />, содержащих сведения о состоянии компьютера до установки.</param>
        <summary>Удаляет из реестра сведения о журнале событий.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> <xref:System.Diagnostics.EventLogInstaller.Source%2A> <xref:System.Diagnostics.EventLogInstaller.Log%2A> Если значение `Remove`свойства равно, метод удаляет источник и связанный с ним журнал, созданный установщиком, если свойства и задают создание нового журнала событий и источника. <xref:System.Diagnostics.EventLogInstaller.UninstallAction%2A>  
  
 Как правило, методы <xref:System.Diagnostics.EventLogInstaller> из не вызываются в коде. они обычно вызываются только программой [Installutil. exe (установщик)](~/docs/framework/tools/installutil-exe-installer-tool.md) в режиме удаления. Средство автоматически вызывает <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> метод для восстановления частей системы, которые были затронуты установкой, до состояния перед установкой. Сюда входит удаление данных реестра, связанных с удаляемым журналом событий.  
  
 Подпрограмма удаления приложения использует <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> свойство установщика проекта для автоматического сохранения сведений об уже удаляемых компонентах. Эти сведения о состоянии, которые передаются <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> в `savedState` качестве параметра, постоянно обновляются по мере удаления программой каждого из <xref:System.Diagnostics.EventLogInstaller>них. Как правило, в коде нет необходимости явно изменять эти сведения о состоянии.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="UninstallAction">
      <MemberSignature Language="C#" Value="public System.Configuration.Install.UninstallAction UninstallAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Install.UninstallAction UninstallAction" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.UninstallAction" />
      <MemberSignature Language="VB.NET" Value="Public Property UninstallAction As UninstallAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Install::UninstallAction UninstallAction { System::Configuration::Install::UninstallAction get(); void set(System::Configuration::Install::UninstallAction value); };" />
      <MemberSignature Language="F#" Value="member this.UninstallAction : System.Configuration.Install.UninstallAction with get, set" Usage="System.Diagnostics.EventLogInstaller.UninstallAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.Install.UninstallAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, должно ли средство <see href="https://docs.microsoft.com/dotnet/framework/tools/installutil-exe-installer-tool">Installutil.exe (установщик)</see> удалить журнал событий или оставить его в текущем состоянии во время удаления.</summary>
        <value>Одно из значений <see cref="T:System.Configuration.Install.UninstallAction" />, показывающее состояние, в котором нужно оставить журнал событий при удалении <see cref="T:System.Diagnostics.EventLog" />. Значение по умолчанию — <see langword="Remove" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При установке журнала событий при необходимости можно подключить его к существующему журналу. В этом случае необходимо решить, должен ли журнал возвращаться к состоянию перед установкой или остаться в текущем состоянии после установки. Если вы решите вернуть журнал событий в состояние перед установкой, изменения в записи журнала событий при установке не будут восстановлены. Вы можете сбросить только свойства журнала событий, связанные с параметром <xref:System.Diagnostics.EventLogInstaller> , до значений, предваряющих установку.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Параметр <see cref="P:System.Diagnostics.EventLogInstaller.UninstallAction" /> содержит недопустимое значение. Допустимые значения этого свойства <see langword="Remove" /> и <see langword="NoAction" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
