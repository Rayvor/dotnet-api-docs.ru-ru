<Type Name="XmlWriterTraceListener" FullName="System.Diagnostics.XmlWriterTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="84f010b446918f1472dba8029326062b7f7e1f8e" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75137006" /></Metadata><TypeSignature Language="C#" Value="public class XmlWriterTraceListener : System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlWriterTraceListener extends System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.XmlWriterTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlWriterTraceListener&#xA;Inherits TextWriterTraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriterTraceListener : System::Diagnostics::TextWriterTraceListener" />
  <TypeSignature Language="F#" Value="type XmlWriterTraceListener = class&#xA;    inherit TextWriterTraceListener" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TextWriterTraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Направляет выходные данные отладки или трассировки в виде закодированных XML-данных в <see cref="T:System.IO.TextWriter" /> или в <see cref="T:System.IO.Stream" />, например, <see cref="T:System.IO.FileStream" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Для создания экземпляра класса <xref:System.Diagnostics.XmlWriterTraceListener> необходимо разрешение на неуправляемый код.  
  
 Класс <xref:System.Diagnostics.XmlWriterTraceListener> преобразует данные трассировки и отладки в поток текста в кодировке XML. Описание выходных данных XML приведено в следующих таблицах. Чтобы отобразить выходные данные XML, можно использовать [средство Service Trace Viewer (SvcTraceViewer. exe)](https://go.microsoft.com/fwlink/p/?LinkId=240129) .  
  
 Вы можете включить или отключить <xref:System.Diagnostics.XmlWriterTraceListener> в файле конфигурации приложения, а затем использовать настроенную <xref:System.Diagnostics.XmlWriterTraceListener> в приложении. Кроме того, в коде можно создать <xref:System.Diagnostics.XmlWriterTraceListener>.  
  
 Чтобы настроить <xref:System.Diagnostics.XmlWriterTraceListener>, измените файл конфигурации, соответствующий имени приложения. В этом файле можно добавить или удалить прослушиватель, задать свойства прослушивателя или удалить прослушиватели. Файл конфигурации следует отформатировать, как показано в следующем примере.  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="xmlListener"   
          type="System.Diagnostics.XmlWriterTraceListener"   
          initializeData="xmlOutput.xml"   
          traceOutputOptions="ProcessId, DateTime" />  
        <remove name="Default" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
 Класс <xref:System.Diagnostics.XmlWriterTraceListener> наследует свойство <xref:System.Diagnostics.TraceListener.Filter%2A> от базового класса <xref:System.Diagnostics.TraceListener>.  Свойство <xref:System.Diagnostics.TraceListener.Filter%2A> допускает дополнительный уровень фильтрации выходных данных трассировки на прослушивателе.  Если присутствует фильтр, то методы `Trace` прослушивателя трассировки вызывают метод <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> фильтра, чтобы определить, следует ли выдавать трассировку.  
  
> [!NOTE]
>  При попытке записи в файл, который используется или недоступен, имя файла автоматически предваряется идентификатором GUID.  
  
> [!NOTE]
>  Методы прослушивателя предназначены для вызова методами классов <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>и <xref:System.Diagnostics.TraceSource>.  Методы прослушивателя не предназначены для вызова непосредственно из кода приложения. Прослушиватель <xref:System.Diagnostics.XmlWriterTraceListener> в основном предназначен для использования классом <xref:System.Diagnostics.TraceSource>. Методы <xref:System.Diagnostics.XmlWriterTraceListener.Write%2A> и <xref:System.Diagnostics.XmlWriterTraceListener.WriteLine%2A> могут вызываться классами <xref:System.Diagnostics.Trace> и <xref:System.Diagnostics.Debug>, а также значения по умолчанию для XML-элементов, которые <xref:System.Diagnostics.Trace> и <xref:System.Diagnostics.Debug> не предоставляют значения для.  
  
 В следующей таблице описаны элементы и атрибуты выходных данных XML.  
  
|Элемент|Атрибуты|Вывод|Примечания|  
|-------------|----------------|------------|-----------|  
|`CallStack`|Отсутствуют|Зависит от наличия флага <xref:System.Diagnostics.TraceOptions.Callstack> в свойстве <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>.|Специальные символы, такие как > или <, заменяются escape-последовательностями. См. таблицу преобразования escape-символов, приведенную ниже.|  
|`Computer`|Отсутствуют|Всегда имеется.|Значение свойства <xref:System.Environment.MachineName%2A>.|  
|`Correlation`|`ActivityID`|Всегда имеется|Если значение не указано, по умолчанию используется пустой GUID.|  
||`RelatedActivityID`|Зависит от наличия параметра `relatedActivityId` в вызове метода Trace.|Параметр `relatedActivityId` метода <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A>.|  
|`DataItem`|Отсутствуют|Зависит от параметра `data` метода <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>.|Этот элемент может содержать массив элементов или один элемент, поэтому значения записываются в виде набора `DataItem` узлов в элементе `TraceData`.<br /><br /> В выходных данных используется метод `ToString` переданных объектов данных.|  
|`EventID`|Отсутствуют|Всегда имеется.|Входные данные параметра (`id`).|  
|`Execution`|`ProcessName`|Всегда имеется.|Из <xref:System.Diagnostics.TraceEventCache>.|  
||`ProcessID`|Всегда имеется.|Из <xref:System.Diagnostics.TraceEventCache>. В операционных системах Windows 98 и Windows Me, если `ProcessID` больше 2 147 483 647, это положительное представление отрицательного числа и должно быть преобразовано для получения правильного идентификатора процесса.|  
||`ThreadID`|Всегда имеется.|Из <xref:System.Diagnostics.TraceEventCache>.|  
|`Level`|Отсутствуют|Всегда имеется.|Входные данные параметра (числовое значение `eventType`). Значения параметров, превышающие 255, выводятся как 255.|  
|`LogicalOperationStack`|Отсутствуют|Зависит от наличия флага <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> в свойстве <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>.|Может существовать более одной логической операции, поэтому значения записываются как `LogicalOperation` узлы в элементе `LogicalOperationStack`.|  
|`Message`|Отсутствуют|Зависит от наличия сообщения в вызове метода Trace.|Этот элемент является форматированным сообщением, если указаны аргументы форматирования.|  
|`Source`|`Name`|Всегда имеется.|Входные данные параметра.|  
|`SubType`|`Name`|Всегда имеется.|Входные данные параметра.|  
|`TimeCreated`|`SystemTime`|Всегда имеется.|Если в <xref:System.Diagnostics.TraceEventCache>отсутствует, по умолчанию используется текущее время.|  
|`TimeStamp`|Отсутствуют|Зависит от наличия флага <xref:System.Diagnostics.TraceOptions.Timestamp> в свойстве <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>.|Из <xref:System.Diagnostics.TraceEventCache>.|  
|`Type`|Отсутствуют|Всегда имеется.|Всегда имеет значение 3.|  
  
 В следующей таблице показаны символы, которые экранированы в выходных данных XML. Экранирование происходит во всех элементах и атрибутах за исключением элемента `DataItem`, который не экранирован, если объект, передаваемый в параметр `data` метода <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>, является объектом <xref:System.Xml.XPath.XPathNavigator>. Если для объекта данных используется <xref:System.Xml.XPath.XPathNavigator>, вызывается метод <xref:System.Xml.XPath.XPathNavigator.MoveToRoot%2A> и весь корневой узел отслеживается как неэкранированные данные.  
  
|Escape-символ|Значение|  
|-----------------------|-----------|  
|&|&amp;|  
|\<|&lt;|  
|>|&gt;|  
|"|&quot;|  
|\|&apos;|  
|0xD|&\#xD;|  
|0xA|&\#xA;|  
  
   
  
## Examples  
 В следующем примере кода показано использование класса <xref:System.Diagnostics.XmlWriterTraceListener> для записи как экранированных, так и неэкранированных данных в журналы файлов.  
  
 [!code-csharp[System.Diagnostics.XmlWriterTraceListener#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.XmlWriterTraceListener/CS/program.cs#1)]
 [!code-vb[System.Diagnostics.XmlWriterTraceListener#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.XmlWriterTraceListener/VB/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">для возможности вызова неуправляемого кода. Связанное перечисление: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.XmlWriterTraceListener" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.Stream -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Объект <see cref="T:System.IO.Stream" />, представляющий поток, в который записывает прослушиватель трассировки.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.XmlWriterTraceListener" />, используя указанный поток в качестве получателя выходных данных отладки и трассировки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Diagnostics.TraceListener.Name%2A> инициализируется пустой строкой ("").  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> имеет значение <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для возможности вызова неуправляемого кода. Связанное перечисление: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.TextWriter -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Поток <see cref="T:System.IO.TextWriter" />, принимающий выходные данные из прослушивателя трассировки.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.XmlWriterTraceListener" />, используя указанный объект записи в качестве получателя выходных данных отладки и трассировки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Diagnostics.TraceListener.Name%2A> инициализируется пустой строкой ("").  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="writer" /> имеет значение <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для возможности вызова неуправляемого кода. Связанное перечисление: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener filename" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Имя файла для записи.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.XmlWriterTraceListener" />, используя указанный файл в качестве получателя выходных данных отладки и трассировки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор инициализирует новый экземпляр класса <xref:System.IO.StreamWriter> для указанного файла по указанному пути с использованием <xref:System.Text.Encoding.UTF8%2A> кодировки. Если файл существует, он добавляется к. Если файл не существует, создается новый файл.  
  
> [!NOTE]
>  Чтобы уменьшить вероятность возникновения исключения, любой символ, который может сделать вывод недействительным, заменяется символом "?".  
  
 Свойство <xref:System.Diagnostics.TraceListener.Name%2A> инициализируется пустой строкой ("").  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="filename" /> имеет значение <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для возможности вызова неуправляемого кода. Связанное перечисление: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.Stream stream, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::Stream ^ stream, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.Stream * string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener (stream, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream">Объект <see cref="T:System.IO.Stream" />, представляющий поток, в который записывает прослушиватель трассировки.</param>
        <param name="name">Имя нового экземпляра.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> с заданным именем, используя указанный поток в качестве получателя выходных данных отладки и трассировки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор инициализирует свойство <xref:System.Diagnostics.TraceListener.Name%2A> значением параметра `name` или пустой строкой (""), если параметр `name` `null`. Имя можно использовать в качестве индекса в коллекции <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> для программного изменения свойств прослушивателя. Например, следующий код задает свойство <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> для экземпляра <xref:System.Diagnostics.XmlWriterTraceListener>, свойство <xref:System.Diagnostics.TraceListener.Name%2A> которого имеет значение "Ксмллистенер".  
  
```  
((XmlWriterTraceListener)Trace.Listeners["xmlListener"]).TraceOutputOptions =   
    TraceOptions.Timestamp  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> имеет значение <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для возможности вызова неуправляемого кода. Связанное перечисление: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (System.IO.TextWriter writer, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::IO::TextWriter ^ writer, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : System.IO.TextWriter * string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener (writer, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">Поток <see cref="T:System.IO.TextWriter" />, принимающий выходные данные из прослушивателя трассировки.</param>
        <param name="name">Имя нового экземпляра.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> с заданным именем, используя указанный объект записи в качестве получателя выходных данных отладки и трассировки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор инициализирует свойство <xref:System.Diagnostics.TraceListener.Name%2A> значением параметра `name` или пустой строкой (""), если параметр `name` `null`. Имя можно использовать в качестве индекса в коллекции <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> для программного изменения свойств прослушивателя. Например, следующий код задает свойство <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> для экземпляра <xref:System.Diagnostics.XmlWriterTraceListener>, свойство <xref:System.Diagnostics.TraceListener.Name%2A> которого имеет значение "Ксмллистенер".  
  
```  
((XmlWriterTraceListener)Trace.Listeners["xmlListener"]).TraceOutputOptions =   
    TraceOptions.Timestamp.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="writer" /> имеет значение <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для возможности вызова неуправляемого кода. Связанное перечисление: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterTraceListener (string filename, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterTraceListener(System::String ^ filename, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.XmlWriterTraceListener : string * string -&gt; System.Diagnostics.XmlWriterTraceListener" Usage="new System.Diagnostics.XmlWriterTraceListener (filename, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Имя файла для записи.</param>
        <param name="name">Имя нового экземпляра.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Diagnostics.XmlWriterTraceListener" /> с заданным именем, используя указанный файл в качестве получателя выходных данных отладки и трассировки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор инициализирует новый экземпляр класса <xref:System.IO.StreamWriter> для указанного файла по указанному пути с использованием <xref:System.Text.Encoding.UTF8%2A> кодировки. Если файл существует, он добавляется к. Если файл не существует, создается новый файл.  
  
> [!NOTE]
>  Чтобы уменьшить вероятность возникновения исключения, любой символ, который может сделать вывод недействительным, заменяется символом "?".  
  
 Для свойства <xref:System.Diagnostics.TraceListener.Name%2A> задается значение параметра `name` или пустая строка (""), если параметр `name` `null`. Имя можно использовать в качестве индекса в коллекции <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> для программного изменения свойств прослушивателя. Например, следующий код задает свойство <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> для экземпляра <xref:System.Diagnostics.XmlWriterTraceListener>, свойство <xref:System.Diagnostics.TraceListener.Name%2A> которого имеет значение "Ксмллистенер".  
  
```  
((XmlWriterTraceListener)Trace.Listeners["xmlListener"]).TraceOutputOptions =  
    TraceOptions.Timestamp.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> имеет значение <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для возможности вызова неуправляемого кода. Связанное перечисление: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlWriterTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Закрывает свойство <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> этого прослушивателя, которое, таким образом, больше не получает выходные данные отладки или трассировки.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="override this.Fail : string * string -&gt; unit" Usage="xmlWriterTraceListener.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Сообщение об ошибке для записи.</param>
        <param name="detailMessage">Подробное сообщение об ошибке для добавления к сообщению об ошибке.</param>
        <summary>Записывает сведения трассировки, включая сообщение об ошибке и подробное сообщение об ошибке в файл или поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поведение по умолчанию — отображать сообщение и подробное сообщение в окне сообщения, когда приложение выполняется в режиме интерфейса пользователя, а также в экземпляры <xref:System.Diagnostics.TraceListener> в коллекции <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>. По умолчанию коллекция содержит экземпляр <xref:System.Diagnostics.DefaultTraceListener>. Это поведение можно настроить, добавив или удалив <xref:System.Diagnostics.TraceListener> из коллекции.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для возможности вызова неуправляемого кода. Связанное перечисление: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Записывает данные трассировки в исходящий файл или поток.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="xmlWriterTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache">Объект <see cref="T:System.Diagnostics.TraceEventCache" />, содержащий идентификаторы текущего процесса и потока, а также информацию трассировки стека.</param>
        <param name="source">Имя источника.</param>
        <param name="eventType">Одно из значений перечисления <see cref="T:System.Diagnostics.TraceEventType" />.</param>
        <param name="id">Числовой идентификатор события.</param>
        <param name="data">Порождаемый объект данных.</param>
        <summary>Записывает сведения трассировки, объект данных и сведения о событии в файл или поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Параметры `eventCache`, `source`, `eventType`и `id` используются в верхнем и нижнем колонтитулах трассировки. Перед записью параметр `id` преобразуется в целое число без знака, поэтому отрицательное `id` значение записывается как большое положительное целое число. Параметр `data` записывается как узел `DataItem` в элементе `TraceData`. Метод `ToString` объекта данных используется для преобразования объекта в строку.  
  
> [!IMPORTANT]
>  Этот метод не предназначен для непосредственного вызова кодом приложения.  Он вызывается методами классов <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>и <xref:System.Diagnostics.TraceSource> для записи данных трассировки.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для возможности вызова неуправляемого кода. Связанное перечисление: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="xmlWriterTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">Объект <see cref="T:System.Diagnostics.TraceEventCache" />, содержащий идентификаторы текущего процесса и потока, а также информацию трассировки стека.</param>
        <param name="source">Имя источника.</param>
        <param name="eventType">Одно из значений перечисления <see cref="T:System.Diagnostics.TraceEventType" />.</param>
        <param name="id">Числовой идентификатор события.</param>
        <param name="data">Порождаемый массив объектов данных.</param>
        <summary>Записывает сведения трассировки, объекты данных и сведения о событии в файл или поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Параметры `eventCache`, `source`, `eventType`и `id` используются в верхнем и нижнем колонтитулах трассировки. Перед записью параметр `id` преобразуется в целое число без знака, поэтому отрицательное `id` значение записывается как большое положительное целое число. Объекты в массиве параметров `data` записываются как `DataItem` узлов в элементе `TraceData`. Метод `ToString` каждого объекта данных используется для преобразования объекта в строку.  
  
> [!IMPORTANT]
>  Этот метод не предназначен для непосредственного вызова кодом приложения.  Он вызывается методами классов <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>и <xref:System.Diagnostics.TraceSource> для записи данных трассировки.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для возможности вызова неуправляемого кода. Связанное перечисление: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Записывает сведения события трассировки в исходящий файл или поток.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="xmlWriterTraceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache">Объект <see cref="T:System.Diagnostics.TraceEventCache" />, содержащий идентификаторы текущего процесса и потока, а также информацию трассировки стека.</param>
        <param name="source">Имя источника.</param>
        <param name="eventType">Одно из значений перечисления <see cref="T:System.Diagnostics.TraceEventType" />.</param>
        <param name="id">Числовой идентификатор события.</param>
        <param name="message">Сообщение для записи.</param>
        <summary>Записывает сведения трассировки, сообщение и сведения о событии в файл или поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Параметры `eventCache`, `source`, `eventType`и `id` используются в верхнем и нижнем колонтитулах трассировки. Перед записью параметр `id` преобразуется в целое число без знака, поэтому отрицательное `id` значение записывается как большое положительное целое число. Параметр `message` записывается как элемент `Message`.  
  
> [!IMPORTANT]
>  Этот метод не предназначен для непосредственного вызова кодом приложения.  Он вызывается методами классов <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>и <xref:System.Diagnostics.TraceSource> для записи данных трассировки.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для возможности вызова неуправляемого кода. Связанное перечисление: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="xmlWriterTraceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">Объект <see cref="T:System.Diagnostics.TraceEventCache" />, содержащий идентификаторы текущего процесса и потока, а также информацию трассировки стека.</param>
        <param name="source">Имя источника.</param>
        <param name="eventType">Одно из значений перечисления <see cref="T:System.Diagnostics.TraceEventType" />.</param>
        <param name="id">Числовой идентификатор события.</param>
        <param name="format">Строка форматирования, содержащая 0 или больше элементов форматирования, соответствующих объектам в массиве <paramref name="args" />.</param>
        <param name="args">Массив объектов, содержащий один или несколько (либо ни одного) объектов, которые необходимо отформатировать.</param>
        <summary>Записывает сведения трассировки, форматированное сообщение и сведения о событии в файл или поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Параметры `eventCache`, `source`, `eventType`и `id` используются в верхнем и нижнем колонтитулах трассировки. Перед записью параметр `id` преобразуется в целое число без знака, поэтому отрицательное `id` значение записывается как большое положительное целое число. Метод <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> вызывается, передавая `format`ную строку и `args` массив как параметры, чтобы отформатировать массив объектов `args` как элемент `Message`.  
  
> [!IMPORTANT]
>  Этот метод не предназначен для непосредственного вызова кодом приложения.  Он вызывается методами классов <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>и <xref:System.Diagnostics.TraceSource> для записи данных трассировки.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для возможности вызова неуправляемого кода. Связанное перечисление: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public override void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceTransfer(class System.Diagnostics.TraceEventCache eventCache, string source, int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceTransfer (eventCache As TraceEventCache, source As String, id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceTransfer(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberSignature Language="F#" Value="override this.TraceTransfer : System.Diagnostics.TraceEventCache * string * int * string * Guid -&gt; unit" Usage="xmlWriterTraceListener.TraceTransfer (eventCache, source, id, message, relatedActivityId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="eventCache">Объект <see cref="T:System.Diagnostics.TraceEventCache" />, содержащий идентификаторы текущего процесса и потока, а также информацию трассировки стека.</param>
        <param name="source">Имя источника.</param>
        <param name="id">Числовой идентификатор события.</param>
        <param name="message">Сообщение трассировки для записи.</param>
        <param name="relatedActivityId">Структура <see cref="T:System.Guid" />, идентифицирующая связанное действие.</param>
        <summary>Записывает сведения трассировки, включая идентификацию сопутствующей активности, сообщение и сведения о событии в файл или поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> используется для корреляции связанных трассировок. Параметры `eventCache`, `source`, `id`и `relatedActivityId` используются в верхнем и нижнем колонтитулах трассировки. Перед записью параметр `id` преобразуется в целое число без знака, поэтому отрицательное `id` значение записывается как большое положительное целое число. Параметр `message` записывается как элемент `Message`. Метод <xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType> вызывается для преобразования значения `relatedActivityId`в отформатированную строку "B", которая отображается в заголовке. Элемент `SubTypeName` в нижнем колонтитуле определяет тип события трассировки как <xref:System.Diagnostics.TraceEventType.Transfer>.  
  
> [!IMPORTANT]
>  Метод <xref:System.Diagnostics.XmlWriterTraceListener.TraceTransfer%2A> не предназначен для вызова кодом приложения.  Он должен вызываться объектом <xref:System.Diagnostics.TraceSource> для выдачи сведений трассировки для метода <xref:System.Diagnostics.TraceSource.TraceTransfer%2A>.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для возможности вызова неуправляемого кода. Связанное перечисление: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="xmlWriterTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Сообщение для записи.</param>
        <summary>Дословно записывает сообщение без какой-либо дополнительной контекстной информации в файл или поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>, чтобы включить сведения о контексте в выходные данные журнала.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для возможности вызова неуправляемого кода. Связанное перечисление: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.XmlWriterTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="xmlWriterTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Сообщение для записи.</param>
        <summary>Дословно записывает сообщение без какой-либо дополнительной контекстной информации, за которым следует знак окончания текущей строки в файл или поток.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте метод <xref:System.Diagnostics.XmlWriterTraceListener.TraceData%2A>, чтобы включить сведения о контексте в выходные данные журнала.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для возможности вызова неуправляемого кода. Связанное перечисление: <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
  </Members>
</Type>
